{"version":3,"sources":["webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/SunburstArc.js","webpack:///../src/Sunburst.js","webpack:///../src/ResponsiveSunburst.js","webpack:///./src/data/components/sunburst/props.js","webpack:///./src/data/components/sunburst/mapper.js","webpack:///../node_modules/recompose/shouldUpdate.js","webpack:///../node_modules/recompose/pure.js","webpack:///./src/pages/sunburst/index.js","webpack:///../node_modules/lodash/cloneDeep.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","compose","withPropsOnChange","node","path","arcGenerator","showTooltip","tooltip","tooltipFormat","theme","e","id","enableChip","color","format","renderContent","enhance","borderWidth","borderColor","hideTooltip","d","fill","stroke","strokeWidth","onMouseEnter","onMouseMove","onMouseLeave","SunburstDefaultProps","identity","cornerRadius","colors","scheme","childColor","from","role","isInteractive","enhancedSunburst","defaultProps","withTheme","withDimensions","getColor","getOrdinalColorScale","withProps","width","height","radius","Math","partition","Partition","centerX","centerY","getIdentity","getAccessorFor","getValue","data","hierarchy","getChildColor","getInheritedColorGenerator","total","nodes","sortBy","cloneDeep","ancestor","getAncestor","percentage","depth","margin","outerWidth","outerHeight","animate","transform","ResponsiveSunburst","props","enableControlForFlavors","description","help","type","required","controlType","group","controlOptions","unit","min","max","step","defaultValue","defaults","flavors","groups","groupProperties","settingsMapper","_interopRequireDefault","exports","__esModule","_inheritsLoose2","_react","_default","test","BaseComponent","factory","createFactory","_Component","ShouldUpdate","this","_proto","prototype","shouldComponentUpdate","nextProps","render","Component","_shouldUpdate","_shallowEqual","hoc","initialProperties","top","right","bottom","left","motionStiffness","motionDamping","Sunburst","name","meta","icon","currentFlavor","properties","propertiesMapper","mapper","generateData","generateLibTree","baseClone","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","module"],"mappings":"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","file":"component---src-pages-sunburst-index-js-c3be5c1232bb940f8b58.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport compose from 'recompose/compose'\nimport withPropsOnChange from 'recompose/withPropsOnChange'\nimport pure from 'recompose/pure'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst SunburstArc = ({ node, path, borderWidth, borderColor, showTooltip, hideTooltip }) => (\n    <path\n        d={path}\n        fill={node.data.color}\n        stroke={borderColor}\n        strokeWidth={borderWidth}\n        onMouseEnter={showTooltip}\n        onMouseMove={showTooltip}\n        onMouseLeave={hideTooltip}\n    />\n)\n\nSunburstArc.propTypes = {\n    node: PropTypes.shape({\n        data: PropTypes.shape({\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n    }).isRequired,\n    arcGenerator: PropTypes.func.isRequired,\n    path: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    showTooltip: PropTypes.func.isRequired,\n    hideTooltip: PropTypes.func.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    tooltip: PropTypes.func,\n    theme: PropTypes.object.isRequired,\n}\n\nconst enhance = compose(\n    withPropsOnChange(['node', 'arcGenerator'], ({ node, arcGenerator }) => ({\n        path: arcGenerator(node),\n    })),\n    withPropsOnChange(\n        ['node', 'showTooltip', 'tooltip', 'tooltipFormat', 'theme'],\n        ({ node, showTooltip, tooltip, tooltipFormat, theme }) => ({\n            showTooltip: e => {\n                showTooltip(\n                    <BasicTooltip\n                        id={node.data.id}\n                        enableChip={true}\n                        color={node.data.color}\n                        value={`${node.data.percentage.toFixed(2)}%`}\n                        theme={theme}\n                        format={tooltipFormat}\n                        renderContent={\n                            typeof tooltip === 'function'\n                                ? tooltip.bind(null, { node, ...node })\n                                : null\n                        }\n                    />,\n                    e\n                )\n            },\n        })\n    ),\n    pure\n)\n\nexport default enhance(SunburstArc)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport sortBy from 'lodash/sortBy'\nimport cloneDeep from 'lodash/cloneDeep'\nimport compose from 'recompose/compose'\nimport defaultProps from 'recompose/defaultProps'\nimport withPropsOnChange from 'recompose/withPropsOnChange'\nimport withProps from 'recompose/withProps'\nimport pure from 'recompose/pure'\nimport { partition as Partition, hierarchy } from 'd3-hierarchy'\nimport { arc } from 'd3-shape'\nimport { withTheme, withDimensions, getAccessorFor, Container, SvgWrapper } from '@nivo/core'\nimport {\n    getOrdinalColorScale,\n    ordinalColorsPropType,\n    inheritedColorPropType,\n    getInheritedColorGenerator,\n} from '@nivo/colors'\nimport SunburstArc from './SunburstArc'\n\nconst getAncestor = node => {\n    if (node.depth === 1) return node\n    if (node.parent) return getAncestor(node.parent)\n    return node\n}\n\nconst Sunburst = ({\n    nodes,\n\n    margin, // eslint-disable-line react/prop-types\n    centerX,\n    centerY,\n    outerWidth, // eslint-disable-line react/prop-types\n    outerHeight, // eslint-disable-line react/prop-types\n\n    arcGenerator,\n\n    borderWidth,\n    borderColor,\n\n    tooltipFormat, // eslint-disable-line react/prop-types\n    tooltip, // eslint-disable-line react/prop-types\n\n    theme, // eslint-disable-line react/prop-types\n\n    role,\n\n    isInteractive,\n}) => {\n    return (\n        <Container isInteractive={isInteractive} theme={theme} animate={false}>\n            {({ showTooltip, hideTooltip }) => (\n                <SvgWrapper\n                    width={outerWidth}\n                    height={outerHeight}\n                    margin={margin}\n                    theme={theme}\n                    role={role}\n                >\n                    <g transform={`translate(${centerX}, ${centerY})`}>\n                        {nodes\n                            .filter(node => node.depth > 0)\n                            .map((node, i) => (\n                                <SunburstArc\n                                    key={i}\n                                    node={node}\n                                    arcGenerator={arcGenerator}\n                                    borderWidth={borderWidth}\n                                    borderColor={borderColor}\n                                    showTooltip={showTooltip}\n                                    hideTooltip={hideTooltip}\n                                    tooltipFormat={tooltipFormat}\n                                    tooltip={tooltip}\n                                    theme={theme}\n                                />\n                            ))}\n                    </g>\n                </SvgWrapper>\n            )}\n        </Container>\n    )\n}\n\nSunburst.propTypes = {\n    data: PropTypes.object.isRequired,\n    identity: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    getIdentity: PropTypes.func.isRequired, // computed\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    getValue: PropTypes.func.isRequired, // computed\n    nodes: PropTypes.array.isRequired, // computed\n\n    partition: PropTypes.func.isRequired, // computed\n\n    cornerRadius: PropTypes.number.isRequired,\n    arcGenerator: PropTypes.func.isRequired, // computed\n\n    radius: PropTypes.number.isRequired, // computed\n    centerX: PropTypes.number.isRequired, // computed\n    centerY: PropTypes.number.isRequired, // computed\n\n    colors: ordinalColorsPropType.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    childColor: inheritedColorPropType.isRequired,\n\n    tooltipFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    tooltip: PropTypes.func,\n\n    role: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool,\n}\n\nexport const SunburstDefaultProps = {\n    identity: 'id',\n    value: 'value',\n\n    cornerRadius: 0,\n\n    colors: { scheme: 'nivo' },\n    borderWidth: 1,\n    borderColor: 'white',\n\n    childColor: { from: 'color' },\n    role: 'img',\n\n    isInteractive: true,\n}\n\nconst enhance = compose(\n    defaultProps(SunburstDefaultProps),\n    withTheme(),\n    withDimensions(),\n    withPropsOnChange(['colors'], ({ colors }) => ({\n        getColor: getOrdinalColorScale(colors, 'id'),\n    })),\n    withProps(({ width, height }) => {\n        const radius = Math.min(width, height) / 2\n\n        const partition = Partition().size([2 * Math.PI, radius * radius])\n\n        return { radius, partition, centerX: width / 2, centerY: height / 2 }\n    }),\n    withPropsOnChange(['cornerRadius'], ({ cornerRadius }) => ({\n        arcGenerator: arc()\n            .startAngle(d => d.x0)\n            .endAngle(d => d.x1)\n            .innerRadius(d => Math.sqrt(d.y0))\n            .outerRadius(d => Math.sqrt(d.y1))\n            .cornerRadius(cornerRadius),\n    })),\n    withPropsOnChange(['identity'], ({ identity }) => ({\n        getIdentity: getAccessorFor(identity),\n    })),\n    withPropsOnChange(['value'], ({ value }) => ({\n        getValue: getAccessorFor(value),\n    })),\n    withPropsOnChange(['data', 'getValue'], ({ data, getValue }) => ({\n        data: hierarchy(data).sum(getValue),\n    })),\n    withPropsOnChange(['childColor', 'theme'], ({ childColor, theme }) => ({\n        getChildColor: getInheritedColorGenerator(childColor, theme),\n    })),\n    withPropsOnChange(\n        ['data', 'partition', 'getIdentity', 'getChildColor'],\n        ({ data, partition, getIdentity, getColor, childColor, getChildColor }) => {\n            const total = data.value\n\n            const nodes = sortBy(partition(cloneDeep(data)).descendants(), 'depth')\n            nodes.forEach(node => {\n                const ancestor = getAncestor(node).data\n\n                delete node.children\n                delete node.data.children\n\n                Object.assign(node.data, {\n                    id: getIdentity(node.data),\n                    value: node.value,\n                    percentage: (100 * node.value) / total,\n                    depth: node.depth,\n                    ancestor,\n                })\n\n                if (node.depth === 1 || childColor === 'noinherit') {\n                    node.data.color = getColor(node.data)\n                } else if (node.depth > 1) {\n                    node.data.color = getChildColor(node.parent.data)\n                }\n            })\n\n            return { nodes }\n        }\n    ),\n    pure\n)\n\nconst enhancedSunburst = enhance(Sunburst)\nenhancedSunburst.displayName = 'Sunburst'\n\nexport default enhancedSunburst\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Sunburst from './Sunburst'\n\nconst ResponsiveSunburst = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Sunburst width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveSunburst\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { SunburstDefaultProps as defaults } from '@nivo/sunburst'\nimport { groupProperties } from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveSunburst/>\\`.\n        `,\n        help: 'Chart width.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveSunburst/>\\`.\n        `,\n        help: 'Chart height.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'identity',\n        group: 'Base',\n        help: 'Id accessor.',\n        description: `\n            define identity accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            identity (string).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.identity,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        help: 'Value accessor',\n        description: `\n            define value accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            value (number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.value,\n    },\n    {\n        key: 'colors',\n        help: 'Defines how to compute node color.',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        type: 'string | Function | string[]',\n        group: 'Base',\n    },\n    {\n        key: 'childColor',\n        help: 'Defines how to compute child nodes color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.childColor,\n        controlType: 'inheritedColor',\n        group: 'Base',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Node border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Base',\n    },\n    {\n        key: 'cornerRadius',\n        help: 'Round node shape.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.cornerRadius,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        help: 'Enable/disable interactivity.',\n        type: '{boolean}',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({})\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = require(\"react\");\n\nvar _setDisplayName = _interopRequireDefault(require(\"./setDisplayName\"));\n\nvar _wrapDisplayName = _interopRequireDefault(require(\"./wrapDisplayName\"));\n\nvar shouldUpdate = function shouldUpdate(test) {\n  return function (BaseComponent) {\n    var factory = (0, _react.createFactory)(BaseComponent);\n\n    var ShouldUpdate =\n    /*#__PURE__*/\n    function (_Component) {\n      (0, _inheritsLoose2[\"default\"])(ShouldUpdate, _Component);\n\n      function ShouldUpdate() {\n        return _Component.apply(this, arguments) || this;\n      }\n\n      var _proto = ShouldUpdate.prototype;\n\n      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return test(this.props, nextProps);\n      };\n\n      _proto.render = function render() {\n        return factory(this.props);\n      };\n\n      return ShouldUpdate;\n    }(_react.Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return (0, _setDisplayName[\"default\"])((0, _wrapDisplayName[\"default\"])(BaseComponent, 'shouldUpdate'))(ShouldUpdate);\n    }\n\n    return ShouldUpdate;\n  };\n};\n\nvar _default = shouldUpdate;\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _shouldUpdate = _interopRequireDefault(require(\"./shouldUpdate\"));\n\nvar _shallowEqual = _interopRequireDefault(require(\"./shallowEqual\"));\n\nvar _setDisplayName = _interopRequireDefault(require(\"./setDisplayName\"));\n\nvar _wrapDisplayName = _interopRequireDefault(require(\"./wrapDisplayName\"));\n\nvar pure = function pure(BaseComponent) {\n  var hoc = (0, _shouldUpdate[\"default\"])(function (props, nextProps) {\n    return !(0, _shallowEqual[\"default\"])(props, nextProps);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    return (0, _setDisplayName[\"default\"])((0, _wrapDisplayName[\"default\"])(BaseComponent, 'pure'))(hoc(BaseComponent));\n  }\n\n  return hoc(BaseComponent);\n};\n\nvar _default = pure;\nexports[\"default\"] = _default;","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveSunburst } from '@nivo/sunburst'\nimport { generateLibTree } from '@nivo/generators'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/sunburst/meta.yml'\nimport mapper from '../../data/components/sunburst/mapper'\nimport { groups } from '../../data/components/sunburst/props'\n\nconst initialProperties = {\n    margin: {\n        top: 40,\n        right: 20,\n        bottom: 20,\n        left: 20,\n    },\n\n    identity: 'name',\n    value: 'loc',\n\n    cornerRadius: 2,\n\n    borderWidth: 1,\n    borderColor: 'white',\n\n    colors: { scheme: 'nivo' },\n    childColor: {\n        from: 'color',\n    },\n\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n\n    isInteractive: true,\n}\n\nconst Sunburst = () => {\n    return (\n        <ComponentTemplate\n            name=\"Sunburst\"\n            meta={meta.Sunburst}\n            icon=\"sunburst\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            propertiesMapper={mapper}\n            generateData={generateLibTree}\n        >\n            {(properties, data, theme) => {\n                return <ResponsiveSunburst data={data} {...properties} theme={theme} />\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Sunburst\n","var baseClone = require('./_baseClone');\n/** Used to compose bitmasks for cloning. */\n\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\n\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;"],"sourceRoot":""}