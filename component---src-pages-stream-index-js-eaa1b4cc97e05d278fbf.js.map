{"version":3,"file":"component---src-pages-stream-index-js-eaa1b4cc97e05d278fbf.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/area.js","webpack://nivo-website/../node_modules/d3-shape/src/array.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/../node_modules/d3-shape/src/stack.js","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/StreamLayer.tsx","webpack://nivo-website/../src/StreamLayers.tsx","webpack://nivo-website/../src/StreamDots.tsx","webpack://nivo-website/../src/StreamSlicesItem.tsx","webpack://nivo-website/../src/StreamSlices.tsx","webpack://nivo-website/../src/StreamDotsItem.tsx","webpack://nivo-website/../src/LayerTooltip.tsx","webpack://nivo-website/../src/StackTooltip.tsx","webpack://nivo-website/../src/Stream.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveStream.tsx","webpack://nivo-website/./src/data/components/stream/mapper.js","webpack://nivo-website/./src/data/components/stream/props.ts","webpack://nivo-website/./src/data/components/stream/generator.js","webpack://nivo-website/./src/data/components/stream/defaults.js","webpack://nivo-website/./src/pages/stream/index.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/random.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}","export var slice = Array.prototype.slice;","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import { slice } from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function () {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function (_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function (_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function (_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","import { useCallback, createElement } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamLayerData } from './types'\n\ninterface StreamLayerProps<RawDatum extends StreamDatum> {\n    layer: StreamLayerData\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayer = <RawDatum extends StreamDatum>({\n    layer,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayerProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { layer }), event, 'left')\n        },\n        [showTooltipFromEvent, layer]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(layer.path)\n    const animatedProps = useSpring({\n        color: layer.color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={layer.fill ? layer.fill : animatedProps.color}\n            fillOpacity={fillOpacity}\n            stroke={getBorderColor(layer)}\n            strokeWidth={borderWidth}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? hideTooltip : undefined}\n        />\n    )\n}\n","import { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { StreamLayer } from './StreamLayer'\nimport { StreamCommonProps, StreamLayerData, StreamDatum } from './types'\n\ninterface StreamLayersProps<RawDatum extends StreamDatum> {\n    layers: StreamLayerData[]\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayers = <RawDatum extends StreamDatum>({\n    layers,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayersProps<RawDatum>) => (\n    <g>\n        {layers.map((layer, i) => (\n            <StreamLayer<RawDatum>\n                key={i}\n                layer={layer}\n                getBorderColor={getBorderColor}\n                borderWidth={borderWidth}\n                fillOpacity={fillOpacity}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { createElement } from 'react'\nimport { StreamSvgProps, StreamLayerDatum, StreamDatum } from './types'\n\ninterface StreamDotsProps<RawDatum extends StreamDatum> {\n    id: string | number\n    color: string\n    data: StreamLayerDatum[]\n    dotComponent: Exclude<StreamSvgProps<RawDatum>['dotComponent'], undefined>\n    position: 'start' | 'center' | 'end'\n    getSize: (datum: StreamLayerDatum) => number\n    getColor: (datum: StreamLayerDatum) => string\n    getBorderWidth: (datum: StreamLayerDatum) => number\n    getBorderColor: (datum: StreamLayerDatum) => string\n}\n\nconst getDotY = <RawDatum extends StreamDatum>(\n    datum: StreamLayerDatum,\n    position: StreamDotsProps<RawDatum>['position']\n) => {\n    let y = datum.y2\n    if (position === 'center') {\n        y = datum.y1 + (datum.y2 - datum.y1) / 2\n    } else if (position === 'start') {\n        y = datum.y1\n    }\n\n    return y\n}\n\nexport const StreamDots = <RawDatum extends StreamDatum>({\n    data,\n    dotComponent,\n    position,\n    getSize,\n    getColor,\n    getBorderWidth,\n    getBorderColor,\n}: StreamDotsProps<RawDatum>) => (\n    <>\n        {data.map((datum, i) => {\n            return createElement(dotComponent, {\n                key: i,\n                datum,\n                x: datum.x,\n                y: getDotY<RawDatum>(datum, position),\n                size: getSize(datum),\n                color: getColor(datum),\n                borderWidth: getBorderWidth(datum),\n                borderColor: getBorderColor(datum),\n            })\n        })}\n    </>\n)\n","import { createElement, useCallback, useState } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamSliceData } from './types'\n\ninterface StreamSlicesItemProps<RawDatum extends StreamDatum> {\n    slice: StreamSliceData\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlicesItem = <RawDatum extends StreamDatum>({\n    slice,\n    height,\n    tooltip,\n}: StreamSlicesItemProps<RawDatum>) => {\n    const [isHover, setIsHover] = useState(false)\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(createElement(tooltip, { slice }), event, 'left')\n        },\n        [setIsHover, showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [setIsHover, hideTooltip])\n\n    return (\n        <g transform={`translate(${slice.x}, 0)`}>\n            {isHover && (\n                <line\n                    x1={0}\n                    x2={0}\n                    y1={0}\n                    y2={height}\n                    stroke=\"#000\"\n                    strokeOpacity={0.35}\n                    strokeWidth={1}\n                />\n            )}\n            <rect\n                x={-20}\n                width={40}\n                height={height}\n                fill=\"#000\"\n                fillOpacity={0}\n                onMouseEnter={handleMouseHover}\n                onMouseMove={handleMouseHover}\n                onMouseLeave={handleMouseLeave}\n            />\n        </g>\n    )\n}\n","import { StreamSliceData, StreamDatum, StreamCommonProps } from './types'\nimport { StreamSlicesItem } from './StreamSlicesItem'\n\ninterface StreamSlicesProps<RawDatum extends StreamDatum> {\n    slices: StreamSliceData[]\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlices = <RawDatum extends StreamDatum>({\n    slices,\n    height,\n    tooltip,\n}: StreamSlicesProps<RawDatum>) => (\n    <g>\n        {slices.map(slice => (\n            <StreamSlicesItem<RawDatum>\n                key={slice.index}\n                slice={slice}\n                height={height}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\n\nexport interface StreamDotsItemProps {\n    x: number\n    y: number\n    size: number\n    color: string\n    borderWidth: number\n    borderColor: string\n}\n\nexport const StreamDotsItem = ({\n    x,\n    y,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n}: StreamDotsItemProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size * 0.5,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius}\n            fill={animatedProps.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nexport const LayerTooltip = ({ layer }: TooltipProps) => (\n    <BasicTooltip id={layer.label} enableChip={true} color={layer.color} />\n)\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { StackTooltipProps } from './types'\n\nexport const StackTooltip = ({ slice }: StackTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            slice.stack.map(p => [\n                <Chip key={p.layerId} color={p.color} />,\n                p.layerLabel,\n                p.formattedValue,\n            ]),\n        [slice]\n    )\n\n    return <TableTooltip rows={rows} />\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    Container,\n    SvgWrapper,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { StreamLayers } from './StreamLayers'\nimport { StreamDots } from './StreamDots'\nimport { StreamSlices } from './StreamSlices'\nimport { useStream } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { StreamDatum, StreamLayerId, StreamSvgProps } from './types'\n\ntype InnerStreamProps<RawDatum extends StreamDatum> = Omit<\n    StreamSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerStream = <RawDatum extends StreamDatum>({\n    data,\n    keys,\n    label,\n    valueFormat,\n\n    offsetType,\n    order,\n    curve,\n\n    layers: chartLayers = svgDefaultProps.layers,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n\n    colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n\n    enableDots = svgDefaultProps.enableDots,\n    dotPosition = svgDefaultProps.dotPosition,\n    dotComponent = svgDefaultProps.dotComponent,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    enableStackTooltip = svgDefaultProps.enableStackTooltip,\n    stackTooltip = svgDefaultProps.stackTooltip,\n\n    legends = svgDefaultProps.legends,\n\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerStreamProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        xScale,\n        yScale,\n        layers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    } = useStream<RawDatum>({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        keys,\n        label,\n        valueFormat,\n        offsetType,\n        order,\n        curve,\n        colors,\n        borderColor,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n    })\n\n    const boundDefs = bindDefs(defs, layers, fill)\n\n    const layerById: Record<StreamLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        layers: null,\n        dots: null,\n        slices: null,\n        legends: null,\n    }\n\n    if (chartLayers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n            />\n        )\n    }\n\n    if (chartLayers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (chartLayers.includes('layers')) {\n        layerById.layers = (\n            <StreamLayers<RawDatum>\n                key=\"layers\"\n                layers={layers}\n                fillOpacity={fillOpacity}\n                borderWidth={borderWidth}\n                getBorderColor={getBorderColor}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <Fragment key=\"dots\">\n                {layers.map(layer => (\n                    <StreamDots\n                        key={layer.id}\n                        id={layer.id}\n                        color={layer.color}\n                        data={layer.data}\n                        dotComponent={dotComponent}\n                        position={dotPosition}\n                        getSize={getDotSize}\n                        getColor={getDotColor}\n                        getBorderWidth={getDotBorderWidth}\n                        getBorderColor={getDotBorderColor}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (chartLayers.includes('slices') && isInteractive && enableStackTooltip) {\n        layerById.slices = (\n            <StreamSlices<RawDatum>\n                key=\"slices\"\n                slices={slices}\n                height={innerHeight}\n                tooltip={stackTooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => {\n                    const legendData = layers\n                        .map(layer => ({\n                            id: layer.id,\n                            label: layer.label,\n                            color: layer.color,\n                            fill: layer.fill,\n                        }))\n                        .reverse()\n\n                    return (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legend}\n                            containerWidth={innerWidth}\n                            containerHeight={innerHeight}\n                            data={legendData}\n                        />\n                    )\n                })}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {chartLayers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Stream = <RawDatum extends StreamDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: StreamSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerStream<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport { area, stack as d3Stack } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport {\n    useTheme,\n    usePropertyAccessor,\n    useValueFormatter,\n    useCurveInterpolation,\n    // @ts-ignore\n    stackOrderFromProp,\n    // @ts-ignore\n    stackOffsetFromProp,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    StreamCommonProps,\n    StreamCustomLayerProps,\n    StreamDataProps,\n    StreamDatum,\n    StreamLayerData,\n    StreamLayerDatum,\n    StreamSliceData,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useStream = <RawDatum extends StreamDatum>({\n    width,\n    height,\n    data,\n    keys,\n    label = defaultProps.label,\n    valueFormat,\n    offsetType = defaultProps.offsetType,\n    order = defaultProps.order,\n    curve = defaultProps.curve,\n    colors = defaultProps.colors,\n    borderColor = defaultProps.borderColor,\n    dotSize = defaultProps.dotSize,\n    dotColor = defaultProps.dotColor,\n    dotBorderWidth = defaultProps.dotBorderWidth,\n    dotBorderColor = defaultProps.dotBorderColor,\n}: {\n    width: number\n    height: number\n    data: StreamDataProps<RawDatum>['data']\n    keys: StreamDataProps<RawDatum>['keys']\n    label?: StreamCommonProps<RawDatum>['label']\n    valueFormat?: StreamCommonProps<RawDatum>['valueFormat']\n    offsetType?: StreamCommonProps<RawDatum>['offsetType']\n    order?: StreamCommonProps<RawDatum>['order']\n    curve?: StreamCommonProps<RawDatum>['curve']\n    colors?: StreamCommonProps<RawDatum>['colors']\n    dotSize?: StreamCommonProps<RawDatum>['dotSize']\n    dotColor?: StreamCommonProps<RawDatum>['dotColor']\n    dotBorderWidth?: StreamCommonProps<RawDatum>['dotBorderWidth']\n    dotBorderColor?: StreamCommonProps<RawDatum>['dotBorderColor']\n    borderColor?: StreamCommonProps<RawDatum>['borderColor']\n}) => {\n    const areaCurveFactory = useCurveInterpolation(curve)\n    const areaGenerator = useMemo(\n        () =>\n            area<StreamLayerDatum>()\n                .x(({ x }) => x)\n                .y0(({ y1 }) => y1)\n                .y1(({ y2 }) => y2)\n                .curve(areaCurveFactory),\n        [areaCurveFactory]\n    )\n\n    const stack = useMemo(\n        () =>\n            d3Stack<RawDatum, string | number>()\n                .keys(keys)\n                .offset(stackOffsetFromProp(offsetType))\n                .order(stackOrderFromProp(order)),\n        [keys, offsetType, order]\n    )\n\n    const [layers, xScale, yScale] = useMemo(() => {\n        const allMin: number[] = []\n        const allMax: number[] = []\n\n        const layers = stack(data).map(layer => {\n            return layer.map(point => {\n                allMin.push(point[0])\n                allMax.push(point[1])\n\n                return {\n                    ...point,\n                    value: point.data[layer.key] as number,\n                }\n            })\n        })\n\n        const minValue = Math.min(...allMin)\n        const maxValue = Math.max(...allMax)\n\n        return [\n            layers,\n            scalePoint<number>()\n                .domain(Array.from({ length: data.length }, (_, i) => i))\n                .range([0, width]),\n            scaleLinear().domain([minValue, maxValue]).range([height, 0]),\n        ]\n    }, [stack, data, width, height])\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<StreamLayerData, 'label' | 'color' | 'data'>>(\n        colors,\n        'id'\n    )\n    const getBorderColor = useInheritedColor<StreamLayerData>(borderColor, theme)\n\n    const getDotSize = useMemo(\n        () => (typeof dotSize === 'function' ? dotSize : () => dotSize),\n        [dotSize]\n    )\n    const getDotColor = useInheritedColor(dotColor, theme)\n    const getDotBorderWidth = useMemo(\n        () => (typeof dotBorderWidth === 'function' ? dotBorderWidth : () => dotBorderWidth),\n        [dotBorderWidth]\n    )\n    const getDotBorderColor = useInheritedColor(dotBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<\n        Omit<StreamLayerData, 'label' | 'color' | 'data'>,\n        string | number\n    >(label)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const enhancedLayers: StreamLayerData[] = useMemo(\n        () =>\n            layers.map((points, layerIndex) => {\n                const computedPoints: StreamLayerDatum[] = points.map((point, i) => ({\n                    layerId: keys[layerIndex],\n                    layerLabel: '',\n                    index: i,\n                    color: '',\n                    x: xScale(i) as number,\n                    value: point.value,\n                    formattedValue: formatValue(point.value),\n                    y1: yScale(point[0]),\n                    y2: yScale(point[1]),\n                }))\n\n                const layer: Omit<StreamLayerData, 'label' | 'color' | 'data'> = {\n                    id: keys[layerIndex] as string,\n                    path: areaGenerator(computedPoints) as string,\n                }\n\n                const layerWithComputedProperties: Omit<StreamLayerData, 'data'> = {\n                    ...layer,\n                    label: getLabel(layer),\n                    color: getColor(layer),\n                }\n\n                return {\n                    ...layerWithComputedProperties,\n                    data: computedPoints.map(point => {\n                        point.layerLabel = layerWithComputedProperties.label\n                        point.color = layerWithComputedProperties.color\n\n                        return point\n                    }),\n                }\n            }),\n        [layers, keys, getLabel, areaGenerator, getColor, xScale, yScale, formatValue]\n    )\n\n    const slices: StreamSliceData[] = useMemo(\n        () =>\n            Array.from({ length: data.length }, (_, i) => {\n                const sliceStack = enhancedLayers\n                    .map(layer => layer.data[i])\n                    .sort((a, b) => a.y2 - b.y2)\n\n                return {\n                    index: i,\n                    x: enhancedLayers[0].data[i].x,\n                    stack: sliceStack,\n                }\n            }),\n        [data.length, enhancedLayers]\n    )\n\n    const layerContext: StreamCustomLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            layers: enhancedLayers,\n            slices,\n        }),\n        [xScale, yScale, enhancedLayers, slices]\n    )\n\n    return {\n        xScale,\n        yScale,\n        layers: enhancedLayers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    }\n}\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { StreamDatum, StreamSvgProps } from './types'\nimport { Stream } from './Stream'\n\nexport const ResponsiveStream = <RawDatum extends StreamDatum>(\n    props: Omit<StreamSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Stream<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","// @ts-ignore: the core package should be migrated to TS\nimport { areaCurvePropKeys, stackOrderPropKeys, stackOffsetPropKeys } from '@nivo/core'\nimport { defaultProps, svgDefaultProps } from '@nivo/stream'\nimport {\n    themeProperty,\n    axesProperties,\n    motionProperties,\n    defsProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: 'object[]',\n        required: true,\n        help: 'Chart data.',\n        flavors: ['svg'],\n    },\n    {\n        key: 'keys',\n        group: 'Base',\n        type: 'string | number',\n        required: true,\n        help: 'Keys to use to build each layer.',\n        description: `\n            Keys to use to index the data,\n            those keys must exist in each data item.\n            \n            For example let's say you have this data:\n            \n            \\`\\`\\`\n            [{ A: 10, B: 20},\n             { A: 20, B: 10},\n             { A: 15, B: 15}]\n            \\`\\`\\`\n              \n            Then the keys should be: \\`['A', 'B']\\`.\n            \n            Also note that those keys are used by default to generate\n            the label of each layer, displayed in the legends and\n            the stack tooltip, this behaviour can be customized\n            via the \\`label\\` property, in case you want to display\n            something else.\n        `,\n        flavors: ['svg'],\n    },\n    {\n        key: 'label',\n        group: 'Base',\n        type: 'string | (layer) => string | number',\n        required: false,\n        help: 'Label accessor, used for legends.',\n        description: `\n            Define how to access the label of each layer,\n            by default, nivo will use the corresponding key defined\n            in \\`keys\\`, it is available under the \\`id\\` property\n            of the layer.\n        `,\n        defaultValue: defaultProps.label,\n        flavors: ['svg'],\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | (value: number) => string',\n        required: false,\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        flavors: ['svg'],\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'offsetType',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Offset type.',\n        flavors: ['svg'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: stackOffsetPropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'order',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Layers order.',\n        flavors: ['svg'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: stackOrderPropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'curve',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use\n            for the area generator.\n        `,\n        defaultValue: defaultProps.curve,\n        flavors: ['svg'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: areaCurvePropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        type: '{number}',\n        required: true,\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveStream/>\\`.\n        `,\n        flavors: ['svg'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        type: '{number}',\n        required: true,\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveStream/>\\`.\n        `,\n        flavors: ['svg'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        group: 'Base',\n        type: 'object',\n        required: false,\n        help: 'Chart margin.',\n        flavors: ['svg'],\n        controlType: 'margin',\n    },\n    themeProperty(['svg']),\n    {\n        key: 'colors',\n        group: 'Style',\n        type: 'string | Function',\n        required: false,\n        help: 'Defines how to compute line color.',\n        flavors: ['svg'],\n        defaultValue: defaultProps.colors,\n        controlType: 'ordinalColors',\n    },\n    {\n        key: 'fillOpacity',\n        group: 'Style',\n        type: 'number',\n        required: false,\n        help: 'Layers fill opacity.',\n        flavors: ['svg'],\n        defaultValue: defaultProps.fillOpacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'borderWidth',\n        group: 'Style',\n        help: 'Width of layer border.',\n        type: 'number',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.borderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'borderColor',\n        group: 'Style',\n        type: 'string | object | Function',\n        required: false,\n        help: 'Method to compute layer border color.',\n        description: `\n            How to compute border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        flavors: ['svg'],\n        defaultValue: defaultProps.borderColor,\n        controlType: 'inheritedColor',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'layers',\n        group: 'Customization',\n        type: 'Array<string | Function>',\n        required: false,\n        help: 'Defines the order of layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`grid\\`, \\`axes\\`, \\`layers\\`, \\`dots\\`, \\`slices\\`, \\`legends\\`.\n\n            You can also use this to insert extra layers to the chart,\n            this extra layer must be a function which will receive\n            the chart computed data and must return a valid SVG element.\n        `,\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.layers,\n    },\n    {\n        key: 'enableGridX',\n        group: 'Grid & Axes',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.enableGridX,\n        controlType: 'switch',\n    },\n    {\n        key: 'enableGridY',\n        group: 'Grid & Axes',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.enableGridY,\n        controlType: 'switch',\n    },\n    ...axesProperties(),\n    {\n        key: 'enableDots',\n        group: 'Dots',\n        help: 'Enable/disable dots.',\n        type: 'boolean',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.enableDots,\n        controlType: 'switch',\n    },\n    {\n        key: 'renderDot',\n        group: 'Dots',\n        flavors: ['svg'],\n        help: 'Custom rendering function for dots.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'dotSize',\n        group: 'Dots',\n        help: 'Size of the dots',\n        description:\n            'Size of the dots, it also accepts a function which can be used to make it vary according to the associated datum.',\n        type: 'number | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotSize,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 20,\n        },\n    },\n    {\n        key: 'dotColor',\n        group: 'Dots',\n        help: 'Method to compute dots color.',\n        type: 'string | object | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotColor,\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'dotBorderWidth',\n        group: 'Dots',\n        help: 'Width of the dots border.',\n        description:\n            'Width of the dots border, it also accepts a function which can be used to make it vary according to the associated datum.',\n        type: 'number | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotBorderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'dotBorderColor',\n        group: 'Dots',\n        help: 'Method to compute dots border color.',\n        type: 'string | object | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotBorderColor,\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg'],\n        help: `Tooltip custom component.`,\n        type: 'FunctionComponent',\n        required: false,\n        group: 'Interactivity',\n        description: `\n            Allows complete tooltip customisation, it must return\n            a valid HTML element and will receive the following data:\n            \n            \\`\\`\\`\n            {\n                layer: {\n                    id: string | number\n                    label: string | number\n                    color: string\n                    // populated when using patterns/gradients\n                    fill?: string\n                    path: string\n                    // computed data for each data point for this\n                    // specific layer\n                    data: StreamLayerDatum[]\n                }\n            }\n            \\`\\`\\`\n            \n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'enableStackTooltip',\n        flavors: ['svg'],\n        help: `Enable/disable stack tooltip ('isInteractive' must also be 'true').`,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.enableStackTooltip,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'stackTooltip',\n        flavors: ['svg'],\n        help: `Stack tooltip custom component.`,\n        type: 'FunctionComponent',\n        required: false,\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n    {\n        key: 'ariaLabel',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-label](https://www.w3.org/TR/wai-aria/#aria-label).',\n        type: 'string',\n        required: false,\n    },\n    {\n        key: 'ariaLabelledBy',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-labelledby](https://www.w3.org/TR/wai-aria/#aria-labelledby).',\n        type: 'string',\n        required: false,\n    },\n    {\n        key: 'ariaDescribedBy',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-describedby](https://www.w3.org/TR/wai-aria/#aria-describedby).',\n        type: 'string',\n        required: false,\n    },\n]\n\nexport const groups = groupProperties(props)\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\nconst names = [\n    'Raoul',\n    'Josiane',\n    'Marcel',\n    'René',\n    'Paul',\n    'Jacques',\n    'Jane',\n    'André',\n    'Guillaume',\n    'Lyu',\n    'Maki',\n    'Junko',\n    'Emi',\n    'Kae',\n    'Tomoko',\n    'Camille',\n    'Jared',\n    'Ibrahim',\n    'Mohamed',\n    'Claude',\n    'Jean',\n    'Leonard',\n    'David',\n]\n\nexport const generateLightDataSet = () => ({\n    data: range(9).map(() =>\n        names.slice(0, 6).reduce((layer, key) => {\n            layer[key] = random(10, 200)\n            return layer\n        }, {})\n    ),\n    keys: names.slice(0, 6),\n})\n\nexport const generateHeavyDataSet = () => ({\n    data: range(360).map(() =>\n        names.reduce((layer, key) => {\n            layer[key] = random(10, 200)\n            return layer\n        }, {})\n    ),\n    keys: names,\n})\n","import { patternDotsDef, patternSquaresDef } from '@nivo/core'\nimport { defaultProps, svgDefaultProps } from '@nivo/stream'\n\nexport default {\n    label: defaultProps.label,\n    valueFormat: { format: '', enabled: false },\n\n    margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60,\n    },\n\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: false,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: -40,\n    },\n    enableGridX: true,\n    enableGridY: false,\n\n    curve: 'catmullRom',\n    offsetType: 'silhouette',\n    order: 'none',\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.85,\n    borderWidth: 0,\n    borderColor: {\n        theme: 'background',\n    },\n\n    defs: [\n        patternDotsDef('dots', {\n            background: 'inherit',\n            color: '#2c998f',\n            size: 4,\n            padding: 2,\n            stagger: true,\n        }),\n        patternSquaresDef('squares', {\n            background: 'inherit',\n            color: '#e4c912',\n            size: 6,\n            padding: 2,\n            stagger: true,\n        }),\n    ],\n    fill: [\n        { match: { id: 'Paul' }, id: 'dots' },\n        { match: { id: 'Marcel' }, id: 'squares' },\n    ],\n\n    enableDots: defaultProps.enableDots,\n    dotSize: 8,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 2,\n    dotBorderColor: { from: 'color', modifiers: [['darker', 0.7]] },\n\n    animate: svgDefaultProps.animate,\n    motionConfig: svgDefaultProps.motionConfig,\n\n    isInteractive: defaultProps.isInteractive,\n    enableStackTooltip: true,\n}\n","import React from 'react'\nimport { ResponsiveStream, svgDefaultProps } from '@nivo/stream'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/stream/meta.yml'\nimport mapper from '../../data/components/stream/mapper'\nimport { groups } from '../../data/components/stream/props'\nimport { generateLightDataSet } from '../../data/components/stream/generator'\nimport defaultSettings from '../../data/components/stream/defaults'\n\nconst initialProperties = {\n    ...defaultSettings,\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            translateX: 100,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemTextColor: '#999999',\n            symbolSize: 12,\n            symbolShape: 'circle',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Stream = () => {\n    return (\n        <ComponentTemplate\n            name=\"Stream\"\n            meta={meta.Stream}\n            icon=\"stream\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={svgDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={(properties, data) => ({\n                keys: data.keys,\n                ...properties,\n            })}\n            generateData={generateLightDataSet}\n            getTabData={data => data.data}\n        >\n            {(properties, data, theme) => {\n                return (\n                    <ResponsiveStream\n                        data={data.data}\n                        keys={data.keys}\n                        {...properties}\n                        theme={theme}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Stream\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","area","data","i","j","k","d","buffer","n","length","defined0","x0z","Array","y0z","areaStart","lineStart","lineEnd","point","areaEnd","arealine","arguments","lineX0","lineY0","lineY1","lineX1","slice","line","p","stackValue","key","keys","order","offset","value","stack","oz","kz","apply","m","sz","sij","ki","si","index","settingsMapper","mapping","exclude","settings","options","overrides","Object","forEach","omit","mapAxis","type","upperFirst","enable","mapFormat","format","enabled","undefined","computeCartesianTicks","translate","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","lineX","lineY","text","textX","textY","isRTL","document","dir","textAlign","align","center","textBaseline","baseline","top","bottom","left","right","ticks","map","v","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","isArray","lines","memoizedAxisTick","memo","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","_jsxs","animated","g","transform","_jsx","dominantBaseline","textTransform","memoizedAxis","renderTick","AxisTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","t","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","React","rotate","domain","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","isXAxis","Axis","GridLine","grid","GridLines","_createElement","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","ctx","_format","save","font","fontWeight","fontSize","fontFamily","strokeWidth","lineWidth","Number","lineCap","stroke","strokeStyle","beginPath","degreesToRadians","fill","fillStyle","fillText","String","restore","renderAxesToCanvas","renderGridLinesToCanvas","StreamLayer","layer","fillOpacity","borderWidth","getBorderColor","isInteractive","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","createElement","animatedPath","useAnimatedPath","color","onMouseMove","onMouseEnter","onMouseLeave","StreamLayers","layers","getDotY","datum","StreamDots","dotComponent","getSize","getColor","getBorderWidth","size","borderColor","StreamSlicesItem","useState","isHover","setIsHover","handleMouseLeave","strokeOpacity","StreamSlices","slices","defaultProps","label","offsetType","axisBottom","axisLeft","enableGridX","enableGridY","colors","scheme","modifiers","enableDots","dotPosition","radius","circle","cx","cy","dotSize","dotColor","dotBorderWidth","dotBorderColor","BasicTooltip","id","enableChip","enableStackTooltip","stackTooltip","rows","Chip","layerId","layerLabel","formattedValue","TableTooltip","legends","legendLabel","role","svgDefaultProps","defs","motionConfig","isFocusable","InnerStream","valueFormat","chartLayers","partialMargin","margin","axisTop","axisRight","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","areaCurveFactory","useCurveInterpolation","areaGenerator","d3Stack","stackOffsetFromProp","stackOrderFromProp","allMin","allMax","push","minValue","min","maxValue","max","scalePoint","range","scaleLinear","useOrdinalColorScale","useInheritedColor","getDotSize","getDotColor","getDotBorderWidth","getDotBorderColor","getLabel","usePropertyAccessor","useValueFormatter","enhancedLayers","points","layerIndex","computedPoints","layerWithComputedProperties","sliceStack","sort","a","b","layerContext","boundDefs","bindDefs","layerById","dots","includes","Fragment","legendData","reverse","BoxLegendSvg","containerWidth","containerHeight","SvgWrapper","Stream","renderWrapper","otherProps","Container","ResponsiveStream","ResponsiveWrapper","group","required","help","flavors","description","defaultValue","controlType","controlOptions","choices","stackOffsetPropKeys","stackOrderPropKeys","areaCurvePropKeys","enableControlForFlavors","unit","step","themeProperty","defsProperties","axesProperties","motionProperties","groups","groupProperties","names","generateLightDataSet","reduce","random","orient","patternDotsDef","background","padding","stagger","patternSquaresDef","match","initialProperties","defaultSettings","anchor","direction","translateX","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","alert","JSON","stringify","effects","on","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","codePropertiesMapper","generateData","getTabData","nativeFloor","floor","nativeRandom","module","exports","lower","upper","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","rand"],"sourceRoot":""}