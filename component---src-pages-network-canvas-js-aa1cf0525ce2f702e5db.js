"use strict";(self.webpackChunknivo_website=self.webpackChunknivo_website||[]).push([[4832],{99195:function(e,n,o){o.d(n,{X:function(){return l}});var r=o(649),t=o(58701),i=o(80169),a=[{key:"width",group:"Base",help:"Chart width.",description:"\n            Not required if using responsive component.\n        ",type:"number",required:!0,flavors:["svg","canvas"],enableControlForFlavors:["api"],controlType:"range",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"height",group:"Base",help:"Chart height.",description:"\n            Not required if using responsive component.\n        ",type:"number",required:!0,flavors:["svg","canvas"],enableControlForFlavors:["api"],controlType:"range",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"pixelRatio",flavors:["canvas"],help:"Adjust pixel ratio, useful for HiDPI screens.",defaultValue:"Depends on device",type:"number",required:!1,controlType:"range",group:"Base",controlOptions:{min:1,max:2}},{key:"margin",group:"Base",type:"object",required:!1,help:"Chart margin.",flavors:["svg","canvas"],controlType:"margin"},{key:"linkDistance",group:"Simulation",type:"number | string | (link: Link) => number",required:!1,help:"Control links' distance.",flavors:["svg","canvas"],description:"\n            If you set a **number**, this value will be used for all links.\n\n            If you use a **string**, this will be used to pick the distance\n            from the corresponding link property, thus, this property\n            should exist on each link.\n\n            If you use a **function**, it will receive a link and must return\n            the desired distance.\n        "},{key:"repulsivity",group:"Simulation",type:"number",required:!1,help:"Control how nodes repel each other.",description:"\n            This value will also affect the strength\n            of `distanceMin` and `distanceMax`.\n        ",flavors:["svg","canvas"],controlType:"range",controlOptions:{min:1,max:100},defaultValue:t.NT.repulsivity},{key:"distanceMin",group:"Simulation",type:"number",required:!1,help:"Sets the minimum distance between nodes for the many-body force.",flavors:["svg","canvas"],defaultValue:t.NT.distanceMin},{key:"distanceMax",group:"Simulation",type:"number",required:!1,help:"Sets the maximum disteance between nodes for the many-body force.",flavors:["svg","canvas"],defaultValue:t.NT.distanceMax},{key:"iterations",group:"Simulation",help:"Adjust the simulation quality.",description:"\n            Increasing this number will result in a **more accurate simulation**,\n            however it will also involve more computing.\n        ",type:"number",required:!1,defaultValue:t.NT.iterations,flavors:["svg","canvas"],controlType:"range",controlOptions:{min:60,max:260}},{key:"nodeColor",group:"Nodes",type:"string | (node: Node) => string",required:!1,help:"Control nodes' color.",flavors:["svg","canvas"]},{key:"nodeBorderWidth",group:"Nodes",type:"number | (node: Node) => number",required:!1,help:"Control nodes' border width.",defaultValue:t.NT.nodeBorderWidth,flavors:["svg","canvas"],controlType:"lineWidth"},{key:"nodeBorderColor",group:"Nodes",type:"string | object | (link: Link) => string",required:!1,help:"Control nodes' border color.",defaultValue:t.NT.nodeBorderColor,flavors:["svg","canvas"],controlType:"inheritedColor"},{key:"linkThickness",enableControlForFlavors:["canvas"],group:"Links",type:"number | (link: Link) => number",required:!1,help:"Control links' thickness.",flavors:["svg","canvas"],defaultValue:t.NT.linkThickness,controlType:"lineWidth"},{key:"linkColor",group:"Links",type:"string | (link: Link) => string",required:!1,help:"Control links' color.",defaultValue:t.NT.linkColor,flavors:["svg","canvas"],controlType:"inheritedColor",controlOptions:{inheritableProperties:["source.color","target.color"]}},{key:"tooltip",group:"Interactivity",type:"Function",required:!1,help:"Custom tooltip component.",flavors:["svg","canvas"],description:"\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the node's data.\n        "},{key:"onClick",group:"Interactivity",help:"onClick handler.",type:"(node, event) => void",required:!1,flavors:["svg","canvas"]},{key:"layers",type:"('links' | 'nodes')[] | FunctionComponent<LayerProps>",group:"Customization",help:"Defines the order of layers and add custom layers.",required:!1,defaultValue:t.NT.layers,flavors:["svg","canvas"]}].concat((0,r.Z)((0,i.$j)(["svg"],t.NT))),l=(0,i.R2)(a)},35909:function(e,n,o){o.r(n);var r=o(27378),t=o(58701),i=o(69857),a=o(31058),l=o(99195),s=o(38681),u=Object.freeze({pixelRatio:"undefined"!=typeof window&&window.devicePixelRatio?window.devicePixelRatio:1,margin:{top:0,right:0,bottom:0,left:0},linkDistance:"distance",repulsivity:4,iterations:60,nodeColor:function(e){return e.color},nodeBorderWidth:1,nodeBorderColor:{theme:"background"},linkColor:t.XO.linkColor,linkThickness:1,isInteractive:!0});n.default=function(){return r.createElement(i.T,{name:"NetworkCanvas",meta:a.OZ,icon:"network",flavors:a.Kk,currentFlavor:"canvas",properties:l.X,initialProperties:u,defaultProperties:t.XO,generateData:function(){return(0,s.$j)()},getDataSize:function(e){return e.nodes.length}},(function(e,n,o,i){return r.createElement(t.Wh,Object.assign({nodes:n.nodes,links:n.links},e,{theme:o,onClick:function(e){i({type:"click",label:"[node] id: "+e.id+", index: "+e.index,color:e.color,data:e})}}))}))}}}]);
//# sourceMappingURL=component---src-pages-network-canvas-js-aa1cf0525ce2f702e5db.js.map