{"version":3,"sources":["webpack:///./src/data/components/radar/mapper.js","webpack:///./src/pages/radar/api.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../src/RadarShapes.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/RadarGridLabels.js","webpack:///../src/RadarGridLevels.js","webpack:///../src/RadarGrid.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/RadarTooltipItem.js","webpack:///../src/RadarTooltip.js","webpack:///../src/RadarDots.js","webpack:///../src/props.js","webpack:///../src/Radar.js","webpack:///../src/ResponsiveRadar.js","webpack:///./src/components/components/api-client/ApiPreview.js","webpack:///./src/components/components/api-client/ApiTabs.js","webpack:///./src/components/components/api-client/ApiSubmit.js","webpack:///./src/components/components/api-client/ApiResponse.js","webpack:///./src/components/components/api-client/ApiClient.js","webpack:///./src/data/components/radar/props.js"],"names":["settingsMapper","colorBy","value","d","color","markersLabel","key","index","generateWinesTastes","data","keys","RadarApi","title","keywords","meta","Radar","tags","componentName","chartClass","apiPath","flavors","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","width","height","JSON","stringify","indexBy","maxValue","margin","top","right","bottom","left","colors","scheme","curve","borderWidth","borderColor","from","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","dotBorderWidth","dotBorderColor","theme","enableDotLabel","dotLabel","dotLabelYOffset","fillOpacity","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","test","_toConsumableArray","isArray","arrayWithoutHoles","iter","Symbol","iterator","iterableToArray","unsupportedIterableToArray","TypeError","nonIterableSpread","RadarShapes","memo","item","colorByKey","radiusScale","angleStep","curveInterpolator","blendMode","useTheme","getBorderColor","useInheritedColor","lineGenerator","useMemo","useMotionConfig","animate","springConfig","animatedPath","useAnimatedPath","animatedProps","useSpring","fill","stroke","config","immediate","strokeWidth","style","mixBlendMode","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","RadarGridLabels","radius","angles","indices","labelComponent","label","labelOffset","labels","_angle","angle","position","positionFromAngle","textAnchor","radiansToDegrees","id","anchor","useSprings","transform","dominantBaseline","React","renderLabel","RadarGridLevels","shape","dataLength","radarLineGenerator","points","RadarGrid","levels","radii","Math","x1","y1","x2","y2","y","_slicedToArray","arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","nonIterableRest","RadarTooltipItem","datum","startAngle","endAngle","arcGenerator","tooltipFormat","useState","isHover","setIsHover","useTooltip","showTooltipFromEvent","hideTooltip","tooltipFormatter","useValueFormatter","tooltip","rows","a","b","showItemTooltip","useCallback","event","hideItemTooltip","path","tipX","tipY","line","onMouseEnter","onMouseMove","onMouseLeave","RadarTooltip","getIndex","arc","d3Arc","rootStartAngle","RadarDots","symbol","size","enableLabel","labelFormat","labelYOffset","fillColor","getInheritedColorGenerator","strokeColor","getLabel","getLabelGenerator","pointData","acc","point","x","PropTypes","closedCurvePropType","inheritedColorPropType","gridLabel","dotSymbol","dotLabelFormat","ordinalColorsPropType","blendModePropType","isInteractive","legends","role","isRequired","RadarDefaultProps","motionDamping","motionStiffness","partialMargin","getAccessorFor","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","getColor","useOrdinalColorScale","mapping","computedMaxValue","scaleLinear","centerX","centerY","legendData","useCurveInterpolation","containerWidth","containerHeight","withContainer","ResponsiveRadar","props","Link","styled","Image","img","EmptyContainer","div","textLight","ApiPreview","responseStatus","chartUrl","href","rel","src","alt","tabs","ApiTabs","body","isLoading","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","map","tab","isCurrent","icon","iconColors","NavItem","onClick","Icon","Content","CodeBlock","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","tablet","mobile","nav","background","span","text","LoaderContainer","loaderBarAnimation","keyframes","LoaderBar","accent","Loader","Button","ApiSubmit","render","this","loading","Component","Container","Header","borderLight","ResponseJson","pre","ApiResponse","response","responseContent","ApiClient","handleSettingsUpdate","settings","setState","handleDataUpdate","e","state","assign","handleSubmit","fetch","nivoApiUrl","method","headers","Accept","then","res","status","json","catch","console","error","component","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","ComponentFlavorSelector","current","ComponentDescription","description","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","onChange","cardAltBackground","dotsDefaults","group","help","type","required","defaultValue","defaults","controlType","controlOptions","disabledValue","min","max","choices","closedCurvePropKeys","enableControlForFlavors","unit","step","themeProperty","choice","dotDefaults","motionProperties","groupProperties"],"mappings":"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","file":"component---src-pages-radar-api-js-97d47a9ff279956657c0.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({\n    colorBy: value => {\n        if (value === 'd => d.color') return d => d.color\n        return value\n    },\n    markersLabel: value => {\n        if (value === `d => \\`\\${d.key}: \\${d.value}\\``) return d => `${d.key}: ${d.value}`\n        if (value === `d => \\`\\${d.index}: \\${d.value}\\``) return d => `${d.index}: ${d.value}`\n        return value\n    },\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { generateWinesTastes } from '@nivo/generators'\nimport SEO from '../../components/seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/radar/props'\nimport mapper from '../../data/components/radar/mapper'\nimport meta from '../../data/components/radar/meta.yml'\n\nconst { data, keys } = generateWinesTastes()\n\nconst RadarApi = () => {\n    return (\n        <>\n            <SEO title=\"Radar HTTP API\" keywords={[...meta.Radar.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"Radar\"\n                chartClass=\"radar\"\n                apiPath=\"/charts/radar\"\n                flavors={meta.flavors}\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 600,\n                    height: 600,\n                    data: JSON.stringify(data, null, '  '),\n                    keys,\n                    indexBy: 'taste',\n                    maxValue: 'auto',\n\n                    margin: {\n                        top: 70,\n                        right: 80,\n                        bottom: 40,\n                        left: 80,\n                    },\n\n                    colors: { scheme: 'nivo' },\n                    curve: 'catmullRomClosed',\n\n                    borderWidth: 2,\n                    borderColor: { from: 'color' },\n\n                    gridLevels: 5,\n                    gridShape: 'circular',\n                    gridLabelOffset: 36,\n\n                    enableDots: true,\n                    dotSize: 8,\n                    dotColor: { from: 'color' },\n                    dotBorderWidth: 0,\n                    dotBorderColor: { theme: 'background' },\n                    enableDotLabel: true,\n                    dotLabel: 'value',\n                    dotLabelYOffset: -12,\n\n                    fillOpacity: 0.1,\n                }}\n            />\n        </>\n    )\n}\n\nexport default RadarApi\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { lineRadial } from 'd3-shape'\nimport { useMotionConfig, useTheme, useAnimatedPath, blendModePropType } from '@nivo/core'\nimport { useInheritedColor, inheritedColorPropType } from '@nivo/colors'\n\nconst RadarShapes = memo(\n    ({\n        data,\n        item: key,\n        colorByKey,\n        radiusScale,\n        angleStep,\n        curveInterpolator,\n        borderWidth,\n        borderColor,\n        fillOpacity,\n        blendMode,\n    }) => {\n        const theme = useTheme()\n        const getBorderColor = useInheritedColor(borderColor, theme)\n\n        const lineGenerator = useMemo(() => {\n            return lineRadial()\n                .radius(d => radiusScale(d))\n                .angle((d, i) => i * angleStep)\n                .curve(curveInterpolator)\n        }, [radiusScale, angleStep, curveInterpolator])\n\n        const { animate, config: springConfig } = useMotionConfig()\n        const animatedPath = useAnimatedPath(lineGenerator(data.map(d => d[key])))\n        const animatedProps = useSpring({\n            fill: colorByKey[key],\n            stroke: getBorderColor({ key, color: colorByKey[key] }),\n            config: springConfig,\n            immediate: !animate,\n        })\n\n        return (\n            <animated.path\n                key={key}\n                d={animatedPath}\n                fill={animatedProps.fill}\n                fillOpacity={fillOpacity}\n                stroke={animatedProps.stroke}\n                strokeWidth={borderWidth}\n                style={{ mixBlendMode: blendMode }}\n            />\n        )\n    }\n)\n\nRadarShapes.displayName = 'RadarShapes'\nRadarShapes.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    item: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    radiusScale: PropTypes.func.isRequired,\n    angleStep: PropTypes.number.isRequired,\n\n    curveInterpolator: PropTypes.func.isRequired,\n\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    fillOpacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n}\n\nexport default RadarShapes\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig, positionFromAngle, radiansToDegrees } from '@nivo/core'\n\nconst textAnchorFromAngle = _angle => {\n    const angle = radiansToDegrees(_angle) + 90\n    if (angle <= 10 || angle >= 350 || (angle >= 170 && angle <= 190)) return 'middle'\n    if (angle > 180) return 'end'\n    return 'start'\n}\n\nconst renderLabel = (label, theme, labelComponent) => {\n    if (labelComponent === undefined) {\n        return (\n            <text\n                style={theme.axis.ticks.text}\n                dominantBaseline=\"central\"\n                textAnchor={label.anchor}\n            >\n                {label.id}\n            </text>\n        )\n    }\n\n    return React.createElement(labelComponent, label)\n}\n\nconst RadarGridLabels = memo(({ radius, angles, indices, label: labelComponent, labelOffset }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = indices.map((index, i) => {\n        const position = positionFromAngle(angles[i], radius + labelOffset)\n        const textAnchor = textAnchorFromAngle(angles[i])\n\n        return {\n            id: index,\n            angle: radiansToDegrees(angles[i]),\n            anchor: textAnchor,\n            ...position,\n        }\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y})`,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.g key={label.id} transform={animatedProps.transform}>\n                {renderLabel(label, theme, labelComponent)}\n            </animated.g>\n        )\n    })\n})\n\nRadarGridLabels.displayName = 'RadarGridLabels'\nRadarGridLabels.propTypes = {\n    radius: PropTypes.number.isRequired,\n    angles: PropTypes.arrayOf(PropTypes.number).isRequired,\n    indices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n        .isRequired,\n    label: PropTypes.func,\n    labelOffset: PropTypes.number.isRequired,\n}\n\nexport default RadarGridLabels\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { lineRadial, curveBasisClosed, curveLinearClosed } from 'd3-shape'\nimport { animated } from 'react-spring'\nimport { useTheme, useAnimatedPath } from '@nivo/core'\n\nconst RadarGridLevels = memo(({ shape, radius, angleStep, dataLength }) => {\n    const theme = useTheme()\n\n    const radarLineGenerator = useMemo(\n        () =>\n            lineRadial()\n                .angle(i => i * angleStep)\n                .curve(shape === 'linear' ? curveLinearClosed : curveBasisClosed),\n        [angleStep, shape]\n    )\n\n    const points = Array.from({ length: dataLength }, (_, i) => i)\n    const animatedPath = useAnimatedPath(radarLineGenerator.radius(radius)(points))\n\n    return <animated.path fill=\"none\" d={animatedPath} {...theme.grid.line} />\n})\n\nRadarGridLevels.displayName = 'RadarGridLevels'\nRadarGridLevels.propTypes = {\n    shape: PropTypes.oneOf(['circular', 'linear']).isRequired,\n    radius: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    dataLength: PropTypes.number.isRequired,\n}\n\nexport default RadarGridLevels\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport RadialGridLabels from './RadarGridLabels'\nimport RadarGridLevels from './RadarGridLevels'\n\nconst RadarGrid = memo(({ indices, levels, shape, radius, angleStep, label, labelOffset }) => {\n    const theme = useTheme()\n    const { radii, angles } = useMemo(() => {\n        return {\n            radii: Array.from({ length: levels })\n                .map((_, i) => (radius / levels) * (i + 1))\n                .reverse(),\n            angles: Array.from({ length: indices.length }, (_, i) => i * angleStep - Math.PI / 2),\n        }\n    }, [indices, levels, radius, angleStep])\n\n    return (\n        <g>\n            {angles.map((angle, i) => {\n                const position = positionFromAngle(angle, radius)\n                return (\n                    <line\n                        key={`axis.${i}`}\n                        x1={0}\n                        y1={0}\n                        x2={position.x}\n                        y2={position.y}\n                        {...theme.grid}\n                    />\n                )\n            })}\n            {radii.map((radius, i) => (\n                <RadarGridLevels\n                    key={`level.${i}`}\n                    shape={shape}\n                    radius={radius}\n                    angleStep={angleStep}\n                    dataLength={indices.length}\n                />\n            ))}\n            <RadialGridLabels\n                radius={radius}\n                angles={angles}\n                indices={indices}\n                labelOffset={labelOffset}\n                label={label}\n            />\n        </g>\n    )\n})\n\nRadarGrid.displayName = 'RadarGrid'\nRadarGrid.propTypes = {\n    indices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n        .isRequired,\n    shape: PropTypes.oneOf(['circular', 'linear']).isRequired,\n    radius: PropTypes.number.isRequired,\n    levels: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    label: PropTypes.func,\n    labelOffset: PropTypes.number.isRequired,\n}\n\nexport default RadarGrid\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo, useState, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { positionFromAngle, useTheme, useValueFormatter } from '@nivo/core'\nimport { TableTooltip, Chip, useTooltip } from '@nivo/tooltip'\n\nconst RadarTooltipItem = memo(\n    ({\n        datum,\n        keys,\n        index,\n        colorByKey,\n        radius,\n        startAngle,\n        endAngle,\n        arcGenerator,\n        tooltipFormat,\n    }) => {\n        const [isHover, setIsHover] = useState(false)\n        const theme = useTheme()\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const tooltipFormatter = useValueFormatter(tooltipFormat)\n        const tooltip = useMemo(() => {\n            const rows = keys.map(key => [\n                <Chip key={key} color={colorByKey[key]} />,\n                key,\n                tooltipFormatter(datum[key], key),\n            ])\n            rows.sort((a, b) => a[2] - b[2])\n            rows.reverse()\n\n            return <TableTooltip title={<strong>{index}</strong>} rows={rows} theme={theme} />\n        }, [datum, keys, index, colorByKey, theme, tooltipFormatter])\n        const showItemTooltip = useCallback(\n            event => {\n                setIsHover(true)\n                showTooltipFromEvent(tooltip, event)\n            },\n            [showTooltipFromEvent, tooltip]\n        )\n        const hideItemTooltip = useCallback(() => {\n            setIsHover(false)\n            hideTooltip()\n        }, [hideTooltip, setIsHover])\n\n        const { path, tipX, tipY } = useMemo(() => {\n            const position = positionFromAngle(\n                startAngle + (endAngle - startAngle) * 0.5 - Math.PI / 2,\n                radius\n            )\n\n            return {\n                path: arcGenerator({ startAngle, endAngle }),\n                tipX: position.x,\n                tipY: position.y,\n            }\n        }, [startAngle, endAngle, radius, arcGenerator])\n\n        return (\n            <>\n                {isHover && <line x1={0} y1={0} x2={tipX} y2={tipY} style={theme.crosshair.line} />}\n                <path\n                    d={path}\n                    fill=\"#F00\"\n                    fillOpacity={0}\n                    onMouseEnter={showItemTooltip}\n                    onMouseMove={showItemTooltip}\n                    onMouseLeave={hideItemTooltip}\n                />\n            </>\n        )\n    }\n)\n\nRadarTooltipItem.displayName = 'RadarTooltipItem'\nRadarTooltipItem.propTypes = {\n    datum: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    startAngle: PropTypes.number.isRequired,\n    endAngle: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n\n    arcGenerator: PropTypes.func.isRequired,\n\n    tooltipFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n}\n\nexport default RadarTooltipItem\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { arc as d3Arc } from 'd3-shape'\nimport RadarTooltipItem from './RadarTooltipItem'\n\nconst RadarTooltip = memo(\n    ({ data, keys, getIndex, colorByKey, radius, angleStep, tooltipFormat }) => {\n        const arc = d3Arc().outerRadius(radius).innerRadius(0)\n\n        const halfAngleStep = angleStep * 0.5\n        let rootStartAngle = -halfAngleStep\n\n        return (\n            <g>\n                {data.map(d => {\n                    const index = getIndex(d)\n                    const startAngle = rootStartAngle\n                    const endAngle = startAngle + angleStep\n\n                    rootStartAngle += angleStep\n\n                    return (\n                        <RadarTooltipItem\n                            key={index}\n                            datum={d}\n                            keys={keys}\n                            index={index}\n                            colorByKey={colorByKey}\n                            startAngle={startAngle}\n                            endAngle={endAngle}\n                            radius={radius}\n                            arcGenerator={arc}\n                            tooltipFormat={tooltipFormat}\n                        />\n                    )\n                })}\n            </g>\n        )\n    }\n)\n\nRadarTooltip.displayName = 'RadarTooltip'\nRadarTooltip.propTypes = {\n    data: PropTypes.array.isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    getIndex: PropTypes.func.isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    radius: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n}\n\nexport default RadarTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, positionFromAngle, getLabelGenerator, DotsItem } from '@nivo/core'\nimport { getInheritedColorGenerator, inheritedColorPropType } from '@nivo/colors'\n\nconst RadarDots = ({\n    data,\n    keys,\n    getIndex,\n    colorByKey,\n    radiusScale,\n    angleStep,\n    symbol,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    label,\n    labelFormat,\n    labelYOffset,\n}) => {\n    const theme = useTheme()\n    const fillColor = getInheritedColorGenerator(color, theme)\n    const strokeColor = getInheritedColorGenerator(borderColor, theme)\n    const getLabel = getLabelGenerator(label, labelFormat)\n\n    const points = useMemo(\n        () =>\n            data.reduce((acc, datum, i) => {\n                const index = getIndex(datum)\n                keys.forEach(key => {\n                    const pointData = {\n                        index,\n                        key,\n                        value: datum[key],\n                        color: colorByKey[key],\n                    }\n                    acc.push({\n                        key: `${key}.${index}`,\n                        label: enableLabel ? getLabel(pointData) : null,\n                        style: {\n                            fill: fillColor(pointData),\n                            stroke: strokeColor(pointData),\n                            ...positionFromAngle(\n                                angleStep * i - Math.PI / 2,\n                                radiusScale(datum[key])\n                            ),\n                        },\n                        data: pointData,\n                    })\n                })\n\n                return acc\n            }, []),\n        [\n            data,\n            getIndex,\n            colorByKey,\n            enableLabel,\n            getLabel,\n            fillColor,\n            strokeColor,\n            angleStep,\n            radiusScale,\n        ]\n    )\n\n    return points.map(point => (\n        <DotsItem\n            key={point.key}\n            x={point.style.x}\n            y={point.style.y}\n            symbol={symbol}\n            size={size}\n            color={point.style.fill}\n            borderWidth={borderWidth}\n            borderColor={point.style.stroke}\n            label={point.label}\n            labelYOffset={labelYOffset}\n            theme={theme}\n            datum={point.data}\n        />\n    ))\n}\n\nRadarDots.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    getIndex: PropTypes.func.isRequired,\n    colorByKey: PropTypes.object.isRequired,\n    radiusScale: PropTypes.func.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.string,\n    labelYOffset: PropTypes.number,\n}\nRadarDots.defaultProps = {\n    size: 6,\n    color: { from: 'color' },\n    borderWidth: 0,\n    borderColor: { from: 'color' },\n    enableLabel: false,\n    label: 'value',\n}\n\nexport default RadarDots\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { LegendPropShape } from '@nivo/legends'\nimport { closedCurvePropType, motionPropTypes, blendModePropType } from '@nivo/core'\n\nexport const RadarPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    indexBy: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]).isRequired,\n    maxValue: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]).isRequired,\n\n    curve: closedCurvePropType.isRequired,\n\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    gridLevels: PropTypes.number,\n    gridShape: PropTypes.oneOf(['circular', 'linear']),\n    gridLabel: PropTypes.func,\n    gridLabelOffset: PropTypes.number,\n\n    enableDots: PropTypes.bool.isRequired,\n    dotSymbol: PropTypes.func,\n    dotSize: PropTypes.number,\n    dotColor: inheritedColorPropType,\n    dotBorderWidth: PropTypes.number,\n    dotBorderColor: inheritedColorPropType,\n    enableDotLabel: PropTypes.bool,\n    dotLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    dotLabelFormat: PropTypes.string,\n    dotLabelYOffset: PropTypes.number,\n\n    colors: ordinalColorsPropType.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n    role: PropTypes.string.isRequired,\n\n    ...motionPropTypes,\n}\n\nexport const RadarDefaultProps = {\n    maxValue: 'auto',\n\n    curve: 'linearClosed',\n\n    borderWidth: 2,\n    borderColor: { from: 'color' },\n\n    gridLevels: 5,\n    gridShape: 'circular',\n    gridLabelOffset: 16,\n\n    enableDots: true,\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.25,\n    blendMode: 'normal',\n\n    isInteractive: true,\n\n    legends: [],\n    role: 'img',\n\n    animate: true,\n    motionDamping: 13,\n    motionStiffness: 90,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport {\n    withContainer,\n    useTheme,\n    useCurveInterpolation,\n    useDimensions,\n    getAccessorFor,\n    SvgWrapper,\n} from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport RadarShapes from './RadarShapes'\nimport RadarGrid from './RadarGrid'\nimport RadarTooltip from './RadarTooltip'\nimport RadarDots from './RadarDots'\nimport { RadarDefaultProps, RadarPropTypes } from './props'\n\nconst Radar = memo(\n    ({\n        data,\n        keys,\n        indexBy,\n        maxValue,\n        curve,\n        margin: partialMargin,\n        width,\n        height,\n        borderWidth,\n        borderColor,\n        gridLevels,\n        gridShape,\n        gridLabel,\n        gridLabelOffset,\n        enableDots,\n        dotSymbol,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n        enableDotLabel,\n        dotLabel,\n        dotLabelFormat,\n        dotLabelYOffset,\n        colors,\n        fillOpacity,\n        blendMode,\n        isInteractive,\n        tooltipFormat,\n        legends,\n        role,\n    }) => {\n        const getIndex = useMemo(() => getAccessorFor(indexBy), [indexBy])\n        const indices = useMemo(() => data.map(getIndex), [data, getIndex])\n\n        const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const theme = useTheme()\n\n        const getColor = useOrdinalColorScale(colors, 'key')\n        const colorByKey = useMemo(\n            () =>\n                keys.reduce((mapping, key, index) => {\n                    mapping[key] = getColor({ key, index })\n                    return mapping\n                }, {}),\n            [keys, getColor]\n        )\n\n        const { radius, radiusScale, centerX, centerY, angleStep } = useMemo(() => {\n            const computedMaxValue =\n                maxValue !== 'auto'\n                    ? maxValue\n                    : Math.max(...data.reduce((acc, d) => [...acc, ...keys.map(key => d[key])], []))\n\n            const radius = Math.min(innerWidth, innerHeight) / 2\n            const radiusScale = scaleLinear().range([0, radius]).domain([0, computedMaxValue])\n\n            return {\n                radius,\n                radiusScale,\n                centerX: innerWidth / 2,\n                centerY: innerHeight / 2,\n                angleStep: (Math.PI * 2) / data.length,\n            }\n        }, [keys, indexBy, data, maxValue, innerWidth, innerHeight])\n\n        const legendData = keys.map(key => ({\n            id: key,\n            label: key,\n            color: colorByKey[key],\n        }))\n\n        const curveInterpolator = useCurveInterpolation(curve)\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                <g transform={`translate(${centerX}, ${centerY})`}>\n                    <RadarGrid\n                        levels={gridLevels}\n                        shape={gridShape}\n                        radius={radius}\n                        angleStep={angleStep}\n                        indices={indices}\n                        label={gridLabel}\n                        labelOffset={gridLabelOffset}\n                    />\n                    {keys.map(key => (\n                        <RadarShapes\n                            key={key}\n                            {...{\n                                data,\n                                item: key,\n                                colorByKey,\n                                radiusScale,\n                                angleStep,\n                                curveInterpolator,\n                                borderWidth,\n                                borderColor,\n                                fillOpacity,\n                                blendMode,\n                            }}\n                        />\n                    ))}\n                    {isInteractive && (\n                        <RadarTooltip\n                            data={data}\n                            keys={keys}\n                            getIndex={getIndex}\n                            colorByKey={colorByKey}\n                            radius={radius}\n                            angleStep={angleStep}\n                            tooltipFormat={tooltipFormat}\n                        />\n                    )}\n                    {enableDots && (\n                        <RadarDots\n                            data={data}\n                            keys={keys}\n                            getIndex={getIndex}\n                            radiusScale={radiusScale}\n                            angleStep={angleStep}\n                            symbol={dotSymbol}\n                            size={dotSize}\n                            colorByKey={colorByKey}\n                            color={dotColor}\n                            borderWidth={dotBorderWidth}\n                            borderColor={dotBorderColor}\n                            enableLabel={enableDotLabel}\n                            label={dotLabel}\n                            labelFormat={dotLabelFormat}\n                            labelYOffset={dotLabelYOffset}\n                        />\n                    )}\n                </g>\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                        data={legendData}\n                        theme={theme}\n                    />\n                ))}\n            </SvgWrapper>\n        )\n    }\n)\n\nRadar.displayName = 'Radar'\nRadar.propTypes = RadarPropTypes\nRadar.defaultProps = RadarDefaultProps\n\nexport default withContainer(Radar)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Radar from './Radar'\n\nconst ResponsiveRadar = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Radar width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveRadar\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ApiPreview = ({ responseStatus, chartUrl }) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n\n    return <div className=\"api-client_preview\">{content}</div>\n}\n\nApiPreview.propTypes = {\n    responseStatus: PropTypes.number,\n    chartUrl: PropTypes.string,\n}\n\nexport default ApiPreview\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport ApiPreview from './ApiPreview'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\nimport CodeBlock from '../../CodeBlock'\n\nconst tabs = ['preview', 'body', 'data']\n\nconst ApiTabs = ({ chartClass, data, body, isLoading, responseStatus, chartUrl }) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState('preview')\n    const [hoverTab, setHoverTab] = useState(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview\n                        isLoading={isLoading}\n                        responseStatus={responseStatus}\n                        chartUrl={chartUrl}\n                    />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nApiTabs.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n}\n\nexport default ApiTabs\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.6);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 60%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst LoaderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n\nclass ApiSubmit extends Component {\n    render() {\n        const { loading, onClick } = this.props\n\n        return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n    }\n}\n\nApiSubmit.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nApiSubmit.defaultProps = {}\n\nexport default ApiSubmit\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n\nclass ApiResponse extends Component {\n    render() {\n        const { responseStatus, response } = this.props\n\n        let responseContent = 'no response available'\n        if (response) {\n            responseContent = JSON.stringify(response, null, '  ')\n        }\n\n        return (\n            <Container>\n                <Header>\n                    Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}\n                </Header>\n                <ResponseJson>{responseContent}</ResponseJson>\n            </Container>\n        )\n    }\n}\n\nApiResponse.propTypes = {}\n\nApiResponse.defaultProps = {}\n\nexport default ApiResponse\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport ComponentPage from '../ComponentPage'\nimport ComponentHeader from '../ComponentHeader'\nimport ComponentFlavorSelector from '../ComponentFlavorSelector'\nimport ComponentDescription from '../ComponentDescription'\nimport ComponentSettings from '../ComponentSettings'\nimport ApiTabs from './ApiTabs'\nimport ApiSubmit from './ApiSubmit'\nimport ApiResponse from './ApiResponse'\nimport config from '../../../data/config'\n\nconst description = component => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\nexport default class ApiClient extends Component {\n    static propTypes = {\n        componentName: PropTypes.string.isRequired,\n        chartClass: PropTypes.string.isRequired,\n        apiPath: PropTypes.string.isRequired,\n        dataProperty: PropTypes.string.isRequired,\n        propsMapper: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        dataProperty: 'data',\n        propsMapper: props => props,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            props: props.defaultProps,\n            loading: false,\n            responseStatus: null,\n            response: null,\n        }\n    }\n\n    handleSettingsUpdate = settings => {\n        this.setState({ props: settings })\n    }\n\n    handleDataUpdate = e => {\n        const { dataProperty } = this.props\n        const { props } = this.state\n\n        this.setState({\n            props: Object.assign({}, props, {\n                [dataProperty]: e.target.value,\n            }),\n        })\n    }\n\n    handleSubmit = () => {\n        const { apiPath, propsMapper } = this.props\n        const { props } = this.state\n\n        this.setState({\n            loading: true,\n        })\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    responseStatus: res.status,\n                })\n\n                return res.json()\n            })\n            .then(res => {\n                this.setState({ response: res })\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    render() {\n        const {\n            componentName,\n            chartClass,\n            apiPath,\n            controlGroups,\n            dataProperty,\n            propsMapper,\n            flavors,\n        } = this.props\n        const { props, loading, responseStatus, response } = this.state\n\n        const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n        return (\n            <Layout>\n                <ComponentPage>\n                    <ComponentHeader\n                        chartClass={`${componentName} HTTP API`}\n                        tags={[`POST ${apiPath}`]}\n                    />\n                    {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                    <ComponentDescription description={description(componentName, apiPath)} />\n                    <ApiTabs\n                        chartClass={chartClass}\n                        data={props[dataProperty]}\n                        body={propsMapper(props)}\n                        isLoading={loading}\n                        responseStatus={responseStatus}\n                        chartUrl={response ? response.url : null}\n                    />\n                    <ControlPanel>\n                        <SubmitWrapper>\n                            <ApiSubmit loading={loading} onClick={this.handleSubmit} />\n                        </SubmitWrapper>\n                        <ApiResponse responseStatus={responseStatus} response={response} />\n                    </ControlPanel>\n                    <ComponentSettings\n                        component={componentName}\n                        settings={props}\n                        flavors={flavorKeys}\n                        currentFlavor=\"api\"\n                        groups={controlGroups}\n                        onChange={this.handleSettingsUpdate}\n                    />\n                </ComponentPage>\n            </Layout>\n        )\n    }\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.6);\n    width: var(--partialWidth);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 60%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { closedCurvePropKeys, DotsItemDefaultProps as dotDefaults } from '@nivo/core'\nimport { RadarDefaultProps as defaults, RadarDots } from '@nivo/radar'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst dotsDefaults = RadarDots.defaultProps\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data. If using objects indexBy & keys\n            should be strings, if using array they\n            should be numbers.\n            \n            For example, given this config:\n            \\`\\`\\`\n            [\n                { language: 'javascript', john: 12, sarah: 32, bob: 27 },\n                { language: 'golang', john: 25, sarah: 15, bob: 3 },\n                { language: 'python', john: 5, sarah: 22, bob: 31 },\n                { language: 'java', john: 19, sarah: 17, bob: 9 }\n            ]\n            keys: ['john', 'sarah', 'bob']\n            indexBy: 'language'\n            \\`\\`\\`\n            We'll have a radar chart representing programing\n            skills for each user by language\n            (3 layers and 4 dimensions).\n        `,\n        type: 'Array<object | Array>',\n        required: true,\n    },\n    {\n        key: 'indexBy',\n        group: 'Base',\n        help: 'Key to use to index the data.',\n        description: `\n            Key to use to index the data, this key\n            must exist in each data item.\n        `,\n        type: 'string | number',\n        required: false,\n        defaultValue: defaults.indexBy,\n    },\n    {\n        key: 'keys',\n        group: 'Base',\n        help: 'Keys to use to determine each serie.',\n        description: `\n            Keys to use to determine each serie.\n            Those keys should exist in each data item.\n        `,\n        type: 'Array<string | number>',\n        required: false,\n        defaultValue: defaults.keys,\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value, if 'auto',\n            will use max value from\n            the provided data.\n        `,\n        required: false,\n        defaultValue: defaults.maxValue,\n        type: 'number | string',\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 200,\n            min: 0,\n            max: 1000,\n        },\n    },\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use\n            for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: closedCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveRadar/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveRadar/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines how to compute slice color.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'fillOpacity',\n        help: 'Shape fill opacity.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.fillOpacity,\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'blendMode',\n        flavors: ['svg'],\n        help: 'Defines CSS mix-blend-mode property.',\n        description: `\n            Defines CSS \\`mix-blend-mode\\` property, see\n            [MDN documentation](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode).\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.blendMode,\n        controlType: 'blendMode',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Shape border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'gridLevels',\n        help: 'Number of levels to display for grid',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.gridLevels,\n        controlType: 'range',\n        group: 'Grid',\n        controlOptions: {\n            min: 1,\n            max: 12,\n        },\n    },\n    {\n        key: 'gridShape',\n        help: 'Determine shape of the grid.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.gridShape,\n        controlType: 'choices',\n        group: 'Grid',\n        controlOptions: {\n            choices: [\n                { label: 'circular', value: 'circular' },\n                { label: 'linear', value: 'linear' },\n            ],\n        },\n    },\n    {\n        key: 'gridLabel',\n        type: 'Function',\n        group: 'Grid',\n        help: 'Grid label.',\n        description: `\n            An optional function to override label rendering.\n            It must return a **valid SVG element** and will\n            receive the following props:\n            \\`\\`\\`\n            {\n                id:     string\n                # this can be used to determine the label layout,\n                # if the element should be centered, left/right aligned\n                anchor: 'start' | 'middle' | 'end'\n                # angle in degrees\n                angle:  number\n            }\n            \\`\\`\\`\n            The component will be wrapped inside\n            a \\`g\\` element **already positioned**\n            where the default label would have been placed.\n        `,\n    },\n    {\n        key: 'gridLabelOffset',\n        help: 'Label offset from outer radius.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.gridLabelOffset,\n        controlType: 'range',\n        group: 'Grid',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'enableDots',\n        help: 'Enable/disable dots.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableDots,\n        controlType: 'switch',\n        group: 'Dots',\n    },\n    {\n        key: 'dotSymbol',\n        group: 'Dots',\n        help: 'Overrides default dot circle.',\n        description: `\n            Overrides default dot circle.\n            The function will receive \\`size\\`,\n            \\`color\\`, \\`borderWidth\\` and \\`borderColor\\`\n            props and must return a valid SVG element.\n        `,\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'dotSize',\n        help: 'Size of the dots.',\n        type: 'number',\n        required: false,\n        defaultValue: dotsDefaults.size,\n        controlType: 'range',\n        group: 'Dots',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 64,\n        },\n    },\n    {\n        key: 'dotColor',\n        help: 'Method to compute dots color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: dotsDefaults.color,\n        controlType: 'inheritedColor',\n        group: 'Dots',\n    },\n    {\n        key: 'dotBorderWidth',\n        help: 'Width of the dots border.',\n        type: 'number',\n        required: false,\n        defaultValue: dotsDefaults.borderWidth,\n        controlType: 'range',\n        group: 'Dots',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 10,\n        },\n    },\n    {\n        key: 'dotBorderColor',\n        help: 'Method to compute dots border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: dotsDefaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Dots',\n    },\n    {\n        key: 'enableDotLabel',\n        help: 'Enable/disable dots label.',\n        type: 'boolean',\n        required: false,\n        defaultValue: dotsDefaults.enableLabel,\n        controlType: 'switch',\n        group: 'Dots',\n    },\n    {\n        key: 'dotLabel',\n        help: 'Dot label.',\n        description:\n            'Property to use to determine dot label. If a function is provided, it will receive current value and serie and must return a label.',\n        type: 'string',\n        required: false,\n        defaultValue: dotsDefaults.label,\n        controlType: 'choices',\n        group: 'Dots',\n        controlOptions: {\n            choices: [\n                'value',\n                'index',\n                'key',\n                `d => \\`\\${d.key}: \\${d.value}\\``,\n                `d => \\`\\${d.index}: \\${d.value}\\``,\n            ].map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'dotLabelYOffset',\n        help: 'Label Y offset from dot shape.',\n        type: 'number',\n        required: false,\n        defaultValue: dotDefaults.labelYOffset,\n        controlType: 'range',\n        group: 'Dots',\n        controlOptions: {\n            unit: 'px',\n            min: -24,\n            max: 24,\n        },\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n"],"sourceRoot":""}