{"version":3,"file":"component---src-pages-heatmap-api-tsx-7cc68a4c82a554da7b90.js","mappings":"4OA6HA,UAnHmB,WACf,IAE4CA,GAExCC,EAAAA,EAAAA,gBAAe,cAHfD,MACIE,gBAAmBC,gBAYrBC,GAAOC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,OAAgB,IAE3C,OACI,iCACI,SAAC,IAAD,CACIC,MAAM,mBACNP,MAAOA,EACPQ,SAAQ,UAAMC,EAAAA,GAAAA,KAAN,CAAyB,gBAErC,SAAC,IAAD,CACIC,cAAc,UACdC,WAAW,UACXC,QAAQ,kBACRC,QAASJ,EAAAA,GACTK,aAAa,OACbC,cAAeC,EAAAA,EACfC,YAAaC,EAAAA,EACbC,aAAc,CACVC,MAAO,IACPC,OAAQ,IACRjB,KAAMkB,KAAKC,UAAUnB,EAAM,KAAM,MACjCoB,OAAQ,CACJC,IAAK,IACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAEVC,YAAa,CAAEC,OAAQ,QAASC,SAAS,GACzCC,YAAaC,EAAAA,GAAAA,YACbC,cAAeD,EAAAA,GAAAA,cACfE,cAAeF,EAAAA,GAAAA,cACfG,cAAeH,EAAAA,GAAAA,cACfI,cAAeJ,EAAAA,GAAAA,cACfK,cAAeL,EAAAA,GAAAA,cACfM,OAAQ,CACJC,KAAM,YACNC,OAAQ,kBACRC,UAAW,GACXC,UAAW,IACXC,SAAU,KAEdC,WAAY,UACZC,aAAa,EACbC,aAAa,EACbC,QAAS,CACLC,QAAQ,EACRC,SAAU,EACVC,YAAa,EACbC,cAAe,GACfC,OAAQ,GACRC,aAAc,IAElBC,UAAW,CACPN,QAAQ,EACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,UACRG,eAAgB,SAChBF,aAAc,GAElBG,WAAY,CACRR,QAAQ,EACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,UACRG,eAAgB,SAChBF,aAAc,IAElBI,SAAU,CACNT,QAAQ,EACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,UACRG,eAAgB,SAChBF,cAAe,IAEnBK,cAAe1B,EAAAA,GAAAA,cACf2B,aAAc3B,EAAAA,GAAAA,aACd4B,QAAS5B,EAAAA,GAAAA,QACT6B,YAAa7B,EAAAA,GAAAA,YACb8B,YAAa,CACTC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAE3BC,cAAc,EACdC,eAAgB,CACZH,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,OAE3BG,QAAS,GACTC,YAAa,W,sBCtHjC,IAAIC,EAAU,EAAQ,OAClBC,EAAO,EAAQ,OAcnBC,EAAOC,QAJP,SAAoBC,EAAQC,GAC1B,OAAOD,GAAUJ,EAAQI,EAAQC,EAAUJ","sources":["webpack://nivo-website/./src/pages/heatmap/api.tsx","webpack://nivo-website/../node_modules/lodash/_baseForOwn.js"],"sourcesContent":["import React, { useMemo } from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { svgDefaultProps as defaults } from '@nivo/heatmap'\nimport { Seo } from '../../components/Seo'\nimport { ApiClient } from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/heatmap/props'\nimport mapper from '../../data/components/heatmap/mapper'\nimport { getLightData } from '../../data/components/heatmap/generator'\nimport meta from '../../data/components/heatmap/meta.yml'\n\nconst HeatMapApi = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/heatmap.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    const data = useMemo(() => getLightData(), [])\n\n    return (\n        <>\n            <Seo\n                title=\"HeatMap HTTP API\"\n                image={image}\n                keywords={[...meta.HeatMap.tags, 'HTTP API']}\n            />\n            <ApiClient\n                componentName=\"HeatMap\"\n                chartClass=\"heatmap\"\n                apiPath=\"/charts/heatmap\"\n                flavors={meta.flavors}\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 800,\n                    height: 600,\n                    data: JSON.stringify(data, null, '  '),\n                    margin: {\n                        top: 100,\n                        right: 60,\n                        bottom: 30,\n                        left: 60,\n                    },\n                    valueFormat: { format: '>-.2s', enabled: true },\n                    forceSquare: defaults.forceSquare,\n                    sizeVariation: defaults.sizeVariation,\n                    xOuterPadding: defaults.xOuterPadding,\n                    xInnerPadding: defaults.xInnerPadding,\n                    yOuterPadding: defaults.yOuterPadding,\n                    yInnerPadding: defaults.yInnerPadding,\n                    colors: {\n                        type: 'diverging',\n                        scheme: 'red_yellow_blue',\n                        divergeAt: 0.5,\n                        minValue: -100_000,\n                        maxValue: 100_000,\n                    },\n                    emptyColor: '#555555',\n                    enableGridX: false,\n                    enableGridY: true,\n                    axisTop: {\n                        enable: true,\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: -55,\n                        legend: '',\n                        legendOffset: 36,\n                    },\n                    axisRight: {\n                        enable: false,\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: 0,\n                    },\n                    axisBottom: {\n                        enable: false,\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: 36,\n                    },\n                    axisLeft: {\n                        enable: true,\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: -40,\n                    },\n                    cellComponent: defaults.cellComponent,\n                    borderRadius: defaults.borderRadius,\n                    opacity: defaults.opacity,\n                    borderWidth: defaults.borderWidth,\n                    borderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.4]],\n                    },\n                    enableLabels: true,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1.4]],\n                    },\n                    legends: [],\n                    annotations: [],\n                }}\n            />\n        </>\n    )\n}\n\nexport default HeatMapApi\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n"],"names":["image","useStaticQuery","childImageSharp","gatsbyImageData","data","useMemo","getLightData","title","keywords","meta","componentName","chartClass","apiPath","flavors","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","width","height","JSON","stringify","margin","top","right","bottom","left","valueFormat","format","enabled","forceSquare","defaults","sizeVariation","xOuterPadding","xInnerPadding","yOuterPadding","yInnerPadding","colors","type","scheme","divergeAt","minValue","maxValue","emptyColor","enableGridX","enableGridY","axisTop","enable","tickSize","tickPadding","tickRotation","legend","legendOffset","axisRight","legendPosition","axisBottom","axisLeft","cellComponent","borderRadius","opacity","borderWidth","borderColor","from","modifiers","enableLabels","labelTextColor","legends","annotations","baseFor","keys","module","exports","object","iteratee"],"sourceRoot":""}