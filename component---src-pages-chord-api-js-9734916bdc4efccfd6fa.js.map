{"version":3,"file":"component---src-pages-chord-api-js-9734916bdc4efccfd6fa.js","mappings":"sLASMA,EAAsB,CACxB,CACIC,IAAK,OACLC,MAAO,OACPC,KAAM,iDACNC,YAAY,soBAoBZC,UAAU,EACVC,KAAM,YAEV,CACIL,IAAK,SACLC,MAAO,OACPC,KAAM,gDACNC,YAAY,gLAKZC,UAAU,EACVC,KAAM,mBAEV,CACIL,IAAK,cACLC,MAAO,OACPI,KAAM,oBACND,UAAU,EACVF,KAAK,6BAET,CACIF,IAAK,QACLM,wBAAyB,CAAC,OAC1BJ,KAAM,eACNC,YAAY,4MAMZE,KAAM,SACND,UAAU,EACVG,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZC,KAAM,KACNC,IAAK,IACLC,IAAK,IACLC,KAAM,IAGd,CACIZ,IAAK,SACLM,wBAAyB,CAAC,OAC1BJ,KAAM,gBACNC,YAAY,4MAMZE,KAAM,SACND,UAAU,EACVG,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZC,KAAM,KACNC,IAAK,IACLC,IAAK,IACLC,KAAM,IAGd,CACIZ,IAAK,aACLa,QAAS,CAAC,UACVX,KAAK,gDACLE,UAAU,EACVU,aAAc,oBACdT,KAAK,SACLE,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZE,IAAK,EACLC,IAAK,IAGb,CACIX,IAAK,SACLE,KAAM,gBACNG,KAAM,SACND,UAAU,EACVG,YAAa,SACbN,MAAO,QAEX,CACID,IAAK,WACLE,KAAM,iBACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,SACdV,KAAM,SACNE,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZE,IAAK,EACLC,IAAK,EACLC,KAAM,MAGd,CACIZ,IAAK,mBACLE,KAAM,sBACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,iBACdV,KAAM,SACNE,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZE,IAAK,EACLC,IAAK,EACLC,KAAM,MAGd,CACIZ,IAAK,oBACLE,KAAM,gDACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,kBACdV,KAAM,SACNE,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZE,IAAK,EACLC,IAAK,EACLC,KAAM,OAGdI,EAAAA,EAAAA,IAAc,CAAC,MAAO,SAAU,QAChC,CACIhB,IAAK,SACLE,KAAM,2CACNG,KAAM,+BACND,UAAU,EACVU,aAAcC,EAAAA,GAAAA,OACdF,QAAS,CAAC,MAAO,SAAU,OAC3BN,YAAa,gBACbN,MAAO,SAEX,CACID,IAAK,aACLE,KAAM,gBACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,WACdV,KAAM,SACNE,YAAa,UACbN,MAAO,SAEX,CACID,IAAK,iBACLE,KAAM,qBACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,eACdV,KAAM,SACNE,YAAa,YACbN,MAAO,SAEX,CACID,IAAK,iBACLE,KAAM,qBACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,eACdV,KAAM,6BACNE,YAAa,iBACbN,MAAO,SAEX,CACID,IAAK,gBACLE,KAAM,mBACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,cACdV,KAAM,SACNE,YAAa,UACbN,MAAO,SAEX,CACID,IAAK,oBACLE,KAAM,wBACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,kBACdV,KAAM,SACNE,YAAa,YACbN,MAAO,SAEX,CACID,IAAK,oBACLE,KAAM,wBACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,kBACdV,KAAM,6BACNE,YAAa,iBACbN,MAAO,SAEX,CACID,IAAK,cACLE,KAAM,yBACNG,KAAM,UACND,UAAU,EACVU,aAAcC,EAAAA,GAAAA,YACdR,YAAa,SACbN,MAAO,UAEX,CACID,IAAK,QACLE,KAAM,kJACNG,KAAM,oBACND,UAAU,EACVU,aAAcC,EAAAA,GAAAA,MACdR,YAAa,UACbN,MAAO,SACPO,eAAgB,CACZS,QAAS,CAAC,KAAM,QAAP,+BAAmDC,KAAI,SAAAC,GAAM,MAAK,CACvEC,MAAOD,EACPE,MAAOF,QAInB,CACInB,IAAK,cACLE,KAAM,yBACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,YACdV,KAAM,SACNE,YAAa,QACbN,MAAO,SACPO,eAAgB,CACZC,KAAM,KACNC,KAAM,GACNC,IAAK,KAGb,CACIX,IAAK,gBACLE,KAAM,kBACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,cACdV,KAAM,SACNE,YAAa,QACbN,MAAO,SACPO,eAAgB,CACZE,KAAM,IACNC,IAAK,IACLC,KAAM,IAGd,CACIZ,IAAK,iBACLG,YAAY,4HAIZD,KAAM,sCACNG,KAAM,6BACND,UAAU,EACVU,aAAcC,EAAAA,GAAAA,eACdR,YAAa,iBACbN,MAAO,UAEX,CACID,IAAK,SACLC,MAAO,gBACPC,KAAM,qDACNC,YAAY,quBAiBZC,UAAU,EACVC,KAAM,2BACNS,aAAcC,EAAAA,GAAAA,QAElB,CACIf,IAAK,gBACLa,QAAS,CAAC,MAAO,UACjBX,KAAM,gCACNG,KAAM,UACND,UAAU,EACVU,aAAcC,EAAAA,GAAAA,cACdR,YAAa,SACbN,MAAO,iBAEX,CACID,IAAK,kBACLa,QAAS,CAAC,MAAO,UACjBX,KAAM,gCACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,gBACdV,KAAM,SACNE,YAAa,UACbN,MAAO,iBAEX,CACID,IAAK,wBACLa,QAAS,CAAC,MAAO,UACjBX,KAAM,oCACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,sBACdV,KAAM,SACNE,YAAa,UACbN,MAAO,iBAEX,CACID,IAAK,qBACLa,QAAS,CAAC,MAAO,UACjBX,KAAM,mCACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,mBACdV,KAAM,SACNE,YAAa,UACbN,MAAO,iBAEX,CACID,IAAK,2BACLa,QAAS,CAAC,MAAO,UACjBX,KAAM,uCACNE,UAAU,EACVU,aAAcC,EAAAA,GAAAA,yBACdV,KAAM,SACNE,YAAa,UACbN,MAAO,iBAEX,CACID,IAAK,kBACLa,QAAS,CAAC,MAAO,UACjBZ,MAAO,gBACPC,KAAM,iCACNG,KAAM,uBACND,UAAU,GAEd,CACIJ,IAAK,iBACLa,QAAS,CAAC,MAAO,UACjBZ,MAAO,gBACPC,KAAM,gCACNG,KAAM,uBACND,UAAU,GAEd,CACIJ,IAAK,kBACLa,QAAS,CAAC,MAAO,UACjBZ,MAAO,gBACPC,KAAM,iCACNG,KAAM,uBACND,UAAU,GAEd,CACIJ,IAAK,aACLa,QAAS,CAAC,MAAO,UACjBZ,MAAO,gBACPC,KAAM,4BACNG,KAAM,uBACND,UAAU,GAEd,CACIJ,IAAK,aACLa,QAAS,CAAC,MAAO,UACjBZ,MAAO,gBACPI,KAAM,WACND,UAAU,EACVF,KAAM,gCACNC,YAAY,mLAMhB,CACIH,IAAK,qBACLa,QAAS,CAAC,OACVZ,MAAO,gBACPC,KAAM,oCACNG,KAAM,0BACND,UAAU,GAEd,CACIJ,IAAK,oBACLa,QAAS,CAAC,OACVZ,MAAO,gBACPC,KAAM,mCACNG,KAAM,0BACND,UAAU,GAEd,CACIJ,IAAK,qBACLa,QAAS,CAAC,OACVZ,MAAO,gBACPC,KAAM,oCACNG,KAAM,0BACND,UAAU,GAEd,CACIJ,IAAK,gBACLa,QAAS,CAAC,OACVZ,MAAO,gBACPC,KAAM,+BACNG,KAAM,0BACND,UAAU,GAEd,CACIJ,IAAK,gBACLa,QAAS,CAAC,OACVZ,MAAO,gBACPI,KAAM,WACND,UAAU,EACVF,KAAM,mCACNC,YAAY,wLAMhB,CACIH,IAAK,UACLa,QAAS,CAAC,MAAO,UACjBR,KAAM,WACNH,KAAK,4BACLD,MAAO,UACPM,YAAa,QACbC,eAAgB,CACZT,OAAOuB,EAAAA,EAAAA,IAAgB,CAAC,MAAO,WAC/BC,cAAc,EACdC,SAAU,aACVC,cAAc,EACdC,aAAc,SAACC,EAAOC,GAAR,gBACAD,EADA,MACWC,EAAOC,OADlB,KAC6BD,EAAOE,WAClDf,SAAU,CACNgB,SAAU,OACVF,OAAQ,WACRC,UAAW,SACXE,SAAS,EACTC,WAAY,EACZC,WAAY,EACZC,UAAW,IACXC,WAAY,GACZC,aAAc,EACdC,WAAY,GACZC,cAAe,gBACfC,QAAS,SAAAC,GACLC,MAAMC,KAAKC,UAAUH,EAAM,KAAM,cA3dzB,gBAgerBI,EAAAA,EAAAA,IAAiB,CAAC,OAAQ9B,EAAAA,MAGpB+B,GAASC,EAAAA,EAAAA,IAAgBhD,I,mJCzezBiD,EACT,SAACC,EAAD,qBAAkC,GAAlC,GAAiBC,QAAAA,OAAjB,MAA2B,GAA3B,SACA,SAACC,EAAeC,QAAsB,IAAtBA,IAAAA,EAAe,IAC3B,IAAMC,EAAiB,GAQvB,OANAC,OAAOC,KAAKJ,GAAUK,SAAQ,SAAAxD,GACtBiD,EAAQjD,KACRqD,EAAUrD,GAAOiD,EAAQjD,GAAKmD,EAASnD,GAAMmD,EAAUC,OAIxD,OAAP,UACOK,GAAAA,CAAKN,EAAUD,GACfG,KAIFK,EAAU,SAACrD,GAAD,OAAkB,SAACgB,EAAY8B,GAAb,OACrCA,EAAS,OAAOQ,GAAAA,CAAWtD,IAASuD,OAASH,GAAAA,CAAKpC,EAAO,CAAC,WAAa,OAE9DwC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,SAAWC,QACtBD,OAASE,I,uLCpBjBC,EAAOC,EAAAA,QAAAA,EAAAA,WAAH,4DAAGA,CAAH,sHAUJC,EAAQD,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,qCAKLE,EAAiBF,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,+HAGP,qBAAGG,MAAkBC,OAAOC,aAiCzC,EAzBmB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,SAClC,OAAuB,MAAnBD,GAA0BC,EAEtB,gBAACR,EAAD,CAAMS,KAAMD,EAAUE,OAAO,SAASC,IAAI,uBACtC,gBAACT,EAAD,CAAOU,IAAKJ,EAAUK,IAAI,gBAMlC,gBAACV,EAAD,iEAEI,2BAFJ,4D,qBChCFW,EAAO,CAAC,UAAW,OAAQ,QAoDjC,EAlDgB,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,WAAYvC,EAAsD,EAAtDA,KAAMwC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,UAAWV,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,SAC5DJ,GAAQc,EAAAA,EAAAA,KAEd,GAAoCC,EAAAA,EAAAA,UAAS,WAAtCC,EAAP,KAAmBC,EAAnB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,MAAlCG,EAAP,KAAiBC,EAAjB,KAEA,OACI,gBAACC,EAAD,CAASC,UAAS,eAAiBL,GAC/B,gBAACM,EAAD,KACKZ,EAAK7D,KAAI,SAAA0E,GACN,IAAMC,EAAYD,IAAQP,EACpBS,EAAe,YAARF,EAAoBZ,EAAa,OACxCe,EAAaF,GAAaN,IAAaK,EAAM,UAAY,UAE/D,OACI,gBAACI,EAAD,CACIhG,IAAK4F,EACLF,UAAU,YACVG,UAAWA,EACXrD,QAAS,kBAAM8C,EAAcM,IAC7BK,aAAc,kBAAMT,EAAYI,IAChCM,aAAc,kBAAMV,EAAY,QAEhC,gBAACW,EAAD,CAAMT,UAAS,gBAAkBI,EAAlB,IAA0BzB,EAAM+B,GAAhC,IAAsCL,IACpDH,OAKjB,gBAACS,EAAD,KACoB,YAAfhB,GACG,gBAAC,EAAD,CACIH,UAAWA,EACXV,eAAgBA,EAChBC,SAAUA,IAGF,SAAfY,GAAyB,gBAACiB,EAAA,EAAD,KAAY3D,KAAKC,UAAUqC,EAAM,KAAM,OACjD,SAAfI,GAAyB,gBAACiB,EAAA,EAAD,KAAY7D,GACtC,gBAAC8D,EAAD,CAAQrB,UAAWA,OAa7BO,EAAUvB,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,0QAEF,qBAAGG,MAAkBmC,WAAWC,gBAGX,qBAAGpC,MAAkBmC,WAAWE,gBAE/B,qBAAGrC,MAAkBmC,WAAWC,gBAI/C,qBAAGpC,MAAkBC,OAAOqC,kBACf,qBAAGtC,MAAkBC,OAAOsC,SAErDC,EAAAA,EAAAA,OAdO,mOAgBM,qBAAGxC,MAAkBmC,WAAWC,gBAGV,qBAAGpC,MAAkBmC,WAAWC,gBAKnEI,EAAAA,EAAAA,OAxBO,8PAgCuB,qBAAGxC,MAAkBC,OAAOsC,WAK1DjB,EAAMzB,EAAAA,QAAAA,IAAAA,WAAH,uDAAGA,CAAH,0FAES,qBAAGG,MAAkBC,OAAOwC,cAOxCd,EAAU9B,EAAAA,QAAAA,KAAAA,WAAH,2DAAGA,CAAH,yJAQK,gBAAG2B,EAAH,EAAGA,UAAWxB,EAAd,EAAcA,MAAd,OACVwB,EAAYxB,EAAMC,OAAOqC,eAAiB,iBAGjC,qBAAGtC,MAAkBC,OAAOyC,QAIvCZ,EAAOjC,EAAAA,QAAAA,KAAAA,WAAH,wDAAGA,CAAH,wHAUJmC,EAAUnC,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,uFASP8C,EAAkB9C,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,qXAQH,qBAAGG,MAAkBC,OAAOqC,kBAQ/B,qBAAGzB,UAA6B,EAAI,KACnB,qBAAGA,UAA6B,EAAI,UAI9D+B,GAAqBC,EAAAA,EAAAA,WAAH,sEASlBC,EAAYjD,EAAAA,QAAAA,KAAAA,WAAH,6DAAGA,CAAH,mNAEG,qBAAGG,MAAkBC,OAAO8C,SAKxBH,GAGC,mBAA6B,IAA7B,EAAGtF,MAAqB,MAGzC4E,EAAS,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UACd,OACI,gBAAC8B,EAAD,CAAiB9B,UAAWA,GACxB,4BACI,gBAACiC,EAAD,CAAWxF,MAAO,KAEtB,4BACI,gBAACwF,EAAD,CAAWxF,MAAO,KAEtB,4BACI,gBAACwF,EAAD,CAAWxF,MAAO,KAEtB,4BACI,gBAACwF,EAAD,CAAWxF,MAAO,KAEtB,4BACI,gBAACwF,EAAD,CAAWxF,MAAO,OCtM5B0F,EAASnD,EAAAA,QAAAA,KAAAA,WAAH,4DAAGA,CAAH,8IAEY,qBAAGG,MAAkBC,OAAO8C,UAS9CE,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAKD,OALCA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACFC,OAAA,WACI,MAA6BC,KAAKzH,MAA1B0H,EAAR,EAAQA,QAASjF,EAAjB,EAAiBA,QAEjB,OAAO,gBAAC6E,EAAD,CAAQ7E,QAASA,GAAUiF,EAAU,UAAY,aAC3D,EALCH,CAAkBI,EAAAA,WAaxBJ,EAAUK,aAAe,GAEzB,QC3BMC,EAAY1D,EAAAA,QAAAA,IAAAA,WAAH,iEAAGA,CAAH,gFACG,qBAAGG,MAAkBC,OAAOqC,kBAClB,qBAAGtC,MAAkBC,OAAOsC,UAKlDiB,EAAS3D,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,oDAEmB,qBAAGG,MAAkBC,OAAOwD,eAGrDC,EAAe7D,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,6FASZ8D,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAiBD,OAjBCA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACFT,OAAA,WACI,MAAqCC,KAAKzH,MAAlCyE,EAAR,EAAQA,eAAgByD,EAAxB,EAAwBA,SAEpBC,EAAkB,wBAKtB,OAJID,IACAC,EAAkBvF,KAAKC,UAAUqF,EAAU,KAAM,OAIjD,gBAACL,EAAD,KACI,gBAACC,EAAD,iBACcrD,EAAiB,8BAASA,GAA2B,OAEnE,gBAACuD,EAAD,KAAeG,KAG1B,EAjBCF,CAAoBN,EAAAA,WAsB1BM,EAAYL,aAAe,GAE3B,I,IAAA,I,WCnBqBQ,EAAAA,SAAAA,GAcjB,WAAYpI,GAAQ,IAAD,SACf,cAAMA,IAAN,MAUJqI,qBAAuB,SAAAjF,GACnB,EAAKkF,SAAS,CAAEtI,MAAOoD,KAZR,EAenBmF,iBAAmB,SAAAC,GAAM,IAAD,EACZC,EAAiB,EAAKzI,MAAtByI,aACAzI,EAAU,EAAK0I,MAAf1I,MAER,EAAKsI,SAAS,CACVtI,MAAOuD,OAAOoF,OAAO,GAAI3I,GAAlB,OACFyI,GAAeD,EAAE5D,OAAOtD,MADtB,OApBI,EA0BnBsH,aAAe,WACX,MAAiC,EAAK5I,MAA9B6I,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,YACT9I,EAAU,EAAK0I,MAAf1I,MAER,EAAKsI,SAAS,CACVZ,SAAS,IAGbqB,MAAM,GAAGC,EAAAA,EAAAA,WAAoBH,EAAW,CACpCI,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBjE,KAAMtC,KAAKC,UAAUiG,EAAY9I,MAEhCoJ,MAAK,SAAAC,GAMF,OALA,EAAKf,SAAS,CACVZ,SAAS,EACTjD,eAAgB4E,EAAIC,SAGjBD,EAAIE,UAEdH,MAAK,SAAAC,GACF,EAAKf,SAAS,CAAEJ,SAAUmB,OAE7BG,OAAM,SAAAC,GACHC,QAAQC,MAAMF,OAnDtB,EAAKf,MAAQ,CACT1I,MAAOA,EAAM4H,aACbF,SAAS,EACTjD,eAAgB,KAChByD,SAAU,MAPC,EA0GlB,OAxHgBE,EAAAA,EAAAA,GAAAA,EAAAA,GAuBhB,YAiDDZ,OAAA,WACI,IAvFYoC,EAuFZ,EAQInC,KAAKzH,MAPL6J,EADJ,EACIA,cACA5E,EAFJ,EAEIA,WACA4D,EAHJ,EAGIA,QACAiB,EAJJ,EAIIA,cACArB,EALJ,EAKIA,aACAK,EANJ,EAMIA,YACAhI,EAPJ,EAOIA,QAEJ,EAAqD2G,KAAKiB,MAAlD1I,EAAR,EAAQA,MAAO0H,EAAf,EAAeA,QAASjD,EAAxB,EAAwBA,eAAgByD,EAAxC,EAAwCA,SAElC6B,EAAajJ,EAAQK,KAAI,SAAA6I,GAAM,OAAIA,EAAOA,UAEhD,OACI,gBAACC,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,CACIlF,WAAe4E,EAAL,YACVO,KAAM,CAAC,QAAQvB,KAElB/H,GAAW,gBAACuJ,EAAA,EAAD,CAAyBvJ,QAASA,EAASwJ,QAAQ,QAC/D,gBAACC,EAAA,EAAD,CAAsBnK,aA5GtBwJ,EA4G+CC,EA5GtC,UACrBD,EADqB,icA6GT,gBAAC,EAAD,CACI3E,WAAYA,EACZvC,KAAM1C,EAAMyI,GACZvD,KAAM4D,EAAY9I,GAClBmF,UAAWuC,EACXjD,eAAgBA,EAChBC,SAAUwD,EAAWA,EAASsC,IAAM,OAExC,gBAACC,EAAD,KACI,gBAACC,EAAD,KACI,gBAAC,EAAD,CAAWhD,QAASA,EAASjF,QAASgF,KAAKmB,gBAE/C,gBAAC,EAAD,CAAanE,eAAgBA,EAAgByD,SAAUA,KAE3D,gBAACyC,EAAA,EAAD,CACIf,UAAWC,EACXzG,SAAUpD,EACVc,QAASiJ,EACTa,cAAc,MACd7H,OAAQ+G,EACRe,SAAUpD,KAAKY,0BAKlC,EAxHgBD,CAAkBT,EAAAA,WAAlBS,EASVR,aAAe,CAClBa,aAAc,OACdK,YAAa,SAAA9I,GAAK,OAAIA,IAgH9B,IAAMyK,EAAetG,EAAAA,QAAAA,IAAAA,WAAH,kEAAGA,CAAH,8SAIc,qBAAGG,MAAkBmC,WAAWE,gBAG9C,qBAAGrC,MAAkBC,OAAOuG,qBACb,qBAAGxG,MAAkBmC,WAAWC,eAO3DI,EAAAA,EAAAA,OAfY,kOAmBuB,qBAAGxC,MAAkBmC,WAAWC,gBAMnEI,EAAAA,EAAAA,OAzBY,4PAsCZ4D,EAAgBvG,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,6E,qCC5LnB,KAAelB,EAAAA,EAAAA,IAAe,CAC1B5B,MAAO,SAAAC,GACH,MAAS,gCAALA,EAAoD,SAAAyJ,GAAC,OAAOA,EAAE1E,GAAT,KAAgB0E,EAAEzJ,MAAlB,KAClDA,M,uHCKToB,GAAOsI,EAAAA,EAAAA,IAAkB,CAAEC,KAFb,IA6DpB,UAzDiB,WACb,OACI,gCACI,gBAAC,IAAD,CAAKC,MAAM,iBAAiBC,SAAQ,kBAAMC,EAAAA,GAAAA,MAAN,CAAuB,eAC3D,gBAAC,IAAD,CACIvB,cAAc,QACd5E,WAAW,QACX4D,QAAQ,gBACR/H,QAASsK,EAAAA,GACT3C,aAAa,SACbqB,cAAe/G,EAAAA,EACf+F,YAAauC,EAAAA,EACbzD,aAAc,CACV0D,MAAO,IACPC,OAAQ,IACRC,OAAQ5I,KAAKC,UAAUH,EAAK8I,OAAQ,KAAM,MAC1ChI,KAAMd,EAAKc,KACXiI,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAEVC,SAAU,IACVC,iBAAkB,IAClBC,kBAAmB,IAEnBzH,OAAQ,CAAE0H,OAAQ,QAElBC,WAAY,EACZC,eAAgB,EAChBC,eAAgB,CACZC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3BC,cAAe,GACfC,kBAAmB,EACnBC,kBAAmB,CACfJ,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3BI,aAAa,EACbrL,MAAO,KACPsL,YAAa,GACbC,eAAgB,GAChBC,eAAgB,CACZR,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU","sources":["webpack://nivo-website/./src/data/components/chord/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/./src/components/components/api-client/ApiPreview.js","webpack://nivo-website/./src/components/components/api-client/ApiTabs.js","webpack://nivo-website/./src/components/components/api-client/ApiSubmit.js","webpack://nivo-website/./src/components/components/api-client/ApiResponse.js","webpack://nivo-website/./src/components/components/api-client/ApiClient.js","webpack://nivo-website/./src/data/components/chord/mapper.js","webpack://nivo-website/./src/pages/chord/api.js"],"sourcesContent":["import { ChordDefaultProps as defaults } from '@nivo/chord'\nimport {\n    themeProperty,\n    motionProperties,\n    groupProperties,\n    getLegendsProps,\n} from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'keys',\n        group: 'Base',\n        help: 'Keys used to identify each cell in the matrix.',\n        description: `\n            Keys used to identify each cell in the matrix,\n            for example given this matrix:\n            \\`\\`\\`\n            [ [123, 37,  99 ],\n              [75,  103, 82 ],\n              [37,  65,  109] ]\n            \\`\\`\\`\n            and those keys:\n            \\`\\`\\`\n            ['John', 'Jane', 'Raoul']\n            \\`\\`\\`\n            it will result in the following mapping:\n            \\`\\`\\`\n            [ [null,    'John', 'Jane',  'Raoul']\n              ['John',   123,    37,      99    ],\n              ['Jane',   75,     103,     82    ],\n              ['Raoul',  37,     65,      109   ] ]\n            \\`\\`\\`\n        `,\n        required: true,\n        type: 'string[]',\n    },\n    {\n        key: 'matrix',\n        group: 'Base',\n        help: 'The matrix used to compute the chord diagram.',\n        description: `\n            The matrix used to compute the chord diagram,\n            it must be a square matrix, meaning each row length\n            must equal the row count.\n        `,\n        required: true,\n        type: 'Array<number[]>',\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: `Optional value formatter.`,\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveChord/>\\`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveChord/>\\`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'padAngle',\n        help: 'Padding angle.',\n        required: false,\n        defaultValue: defaults.padAngle,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.01,\n        },\n    },\n    {\n        key: 'innerRadiusRatio',\n        help: 'Inner radius ratio.',\n        required: false,\n        defaultValue: defaults.innerRadiusRatio,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.01,\n        },\n    },\n    {\n        key: 'innerRadiusOffset',\n        help: 'Inner radius offset (minus innerRadiusRatio).',\n        required: false,\n        defaultValue: defaults.innerRadiusOffset,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.01,\n        },\n    },\n    themeProperty(['svg', 'canvas', 'api']),\n    {\n        key: 'colors',\n        help: 'Defines how to compute arc/ribbon color.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        flavors: ['svg', 'canvas', 'api'],\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'arcOpacity',\n        help: 'Arcs opacity.',\n        required: false,\n        defaultValue: defaults.arcOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'arcBorderWidth',\n        help: 'Arcs border width.',\n        required: false,\n        defaultValue: defaults.arcBorderWidth,\n        type: 'number',\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'arcBorderColor',\n        help: 'Arcs border color.',\n        required: false,\n        defaultValue: defaults.arcBorderColor,\n        type: 'string | object | Function',\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'ribbonOpacity',\n        help: 'Ribbons opacity.',\n        required: false,\n        defaultValue: defaults.ribbonOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'ribbonBorderWidth',\n        help: 'Ribbons border width.',\n        required: false,\n        defaultValue: defaults.ribbonBorderWidth,\n        type: 'number',\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'ribbonBorderColor',\n        help: 'Ribbons border color.',\n        required: false,\n        defaultValue: defaults.ribbonBorderColor,\n        type: 'string | object | Function',\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'enableLabel',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        help: 'Defines how to get label text, can be a string (used to access current arc data property) or a function which will receive the actual arc data.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.label,\n        controlType: 'choices',\n        group: 'Labels',\n        controlOptions: {\n            choices: ['id', 'value', `d => \\`\\${d.id} [\\${d.value}]\\``].map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'labelOffset',\n        help: 'Label offset from arc.',\n        required: false,\n        defaultValue: defaults.labelOffset,\n        type: 'number',\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            unit: 'px',\n            min: -80,\n            max: 80,\n        },\n    },\n    {\n        key: 'labelRotation',\n        help: 'Label rotation.',\n        required: false,\n        defaultValue: defaults.labelRotation,\n        type: 'number',\n        controlType: 'angle',\n        group: 'Labels',\n        controlOptions: {\n            min: -180,\n            max: 180,\n            step: 5,\n        },\n    },\n    {\n        key: 'labelTextColor',\n        description: `\n            How to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        help: 'Method to compute label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.labelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n            \n            The layer function which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`Chord\\` component.\n\n            When using the canvas implementation, the function\n            will receive the canvas 2d context as first argument\n            and the chart's context and computed data as second.\n\n            Please make sure to use \\`context.save()\\` and\n            \\`context.restore()\\` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaults.layers,\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'arcHoverOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Arc opacity when hover (0~1).',\n        required: false,\n        defaultValue: defaults.arcHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'arcHoverOthersOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Arc opacity when not hover (0~1).',\n        required: false,\n        defaultValue: defaults.arcHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'ribbonHoverOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Ribbon opacity when hover (0~1).',\n        required: false,\n        defaultValue: defaults.ribbonHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'ribbonHoverOthersOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Ribbon opacity when not hover (0~1).',\n        required: false,\n        defaultValue: defaults.ribbonHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onArcMouseEnter',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseEnter handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'onArcMouseMove',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseMove handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'onArcMouseLeave',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseLeave handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'onArcClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onClick handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'arcTooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom arc tooltip component.',\n        description: `\n            A function allowing complete arc tooltip customisation,\n            it must return a valid HTML\n            element and will receive the arcs's data.\n        `,\n    },\n    {\n        key: 'onRibbonMouseEnter',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseEnter handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'onRibbonMouseMove',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseMove handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'onRibbonMouseLeave',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseLeave handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'onRibbonClick',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onClick handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'ribbonTooltip',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom ribbon tooltip component.',\n        description: `\n            A function allowing complete ribbon tooltip customisation,\n            it must return a valid HTML\n            element and will receive the ribbon's data.\n        `,\n    },\n    {\n        key: 'legends',\n        flavors: ['svg', 'canvas'],\n        type: 'object[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                dataFrom: 'keys',\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 0,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n    ...motionProperties(['svg'], defaults),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ApiPreview = ({ responseStatus, chartUrl }) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n\n    return <div className=\"api-client_preview\">{content}</div>\n}\n\nApiPreview.propTypes = {\n    responseStatus: PropTypes.number,\n    chartUrl: PropTypes.string,\n}\n\nexport default ApiPreview\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport ApiPreview from './ApiPreview'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\nimport { CodeBlock } from '../../CodeBlock'\n\nconst tabs = ['preview', 'body', 'data']\n\nconst ApiTabs = ({ chartClass, data, body, isLoading, responseStatus, chartUrl }) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState('preview')\n    const [hoverTab, setHoverTab] = useState(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview\n                        isLoading={isLoading}\n                        responseStatus={responseStatus}\n                        chartUrl={chartUrl}\n                    />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nApiTabs.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n}\n\nexport default ApiTabs\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.6);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 60%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst LoaderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n\nclass ApiSubmit extends Component {\n    render() {\n        const { loading, onClick } = this.props\n\n        return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n    }\n}\n\nApiSubmit.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nApiSubmit.defaultProps = {}\n\nexport default ApiSubmit\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n\nclass ApiResponse extends Component {\n    render() {\n        const { responseStatus, response } = this.props\n\n        let responseContent = 'no response available'\n        if (response) {\n            responseContent = JSON.stringify(response, null, '  ')\n        }\n\n        return (\n            <Container>\n                <Header>\n                    Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}\n                </Header>\n                <ResponseJson>{responseContent}</ResponseJson>\n            </Container>\n        )\n    }\n}\n\nApiResponse.propTypes = {}\n\nApiResponse.defaultProps = {}\n\nexport default ApiResponse\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport { ComponentPage } from '../ComponentPage'\nimport { ComponentHeader } from '../ComponentHeader'\nimport ComponentFlavorSelector from '../ComponentFlavorSelector'\nimport { ComponentDescription } from '../ComponentDescription'\nimport ComponentSettings from '../ComponentSettings'\nimport ApiTabs from './ApiTabs'\nimport ApiSubmit from './ApiSubmit'\nimport ApiResponse from './ApiResponse'\nimport config from '../../../data/config'\n\nconst description = component => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\nexport default class ApiClient extends Component {\n    static propTypes = {\n        componentName: PropTypes.string.isRequired,\n        chartClass: PropTypes.string.isRequired,\n        apiPath: PropTypes.string.isRequired,\n        dataProperty: PropTypes.string.isRequired,\n        propsMapper: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        dataProperty: 'data',\n        propsMapper: props => props,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            props: props.defaultProps,\n            loading: false,\n            responseStatus: null,\n            response: null,\n        }\n    }\n\n    handleSettingsUpdate = settings => {\n        this.setState({ props: settings })\n    }\n\n    handleDataUpdate = e => {\n        const { dataProperty } = this.props\n        const { props } = this.state\n\n        this.setState({\n            props: Object.assign({}, props, {\n                [dataProperty]: e.target.value,\n            }),\n        })\n    }\n\n    handleSubmit = () => {\n        const { apiPath, propsMapper } = this.props\n        const { props } = this.state\n\n        this.setState({\n            loading: true,\n        })\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    responseStatus: res.status,\n                })\n\n                return res.json()\n            })\n            .then(res => {\n                this.setState({ response: res })\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    render() {\n        const {\n            componentName,\n            chartClass,\n            apiPath,\n            controlGroups,\n            dataProperty,\n            propsMapper,\n            flavors,\n        } = this.props\n        const { props, loading, responseStatus, response } = this.state\n\n        const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n        return (\n            <Layout>\n                <ComponentPage>\n                    <ComponentHeader\n                        chartClass={`${componentName} HTTP API`}\n                        tags={[`POST ${apiPath}`]}\n                    />\n                    {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                    <ComponentDescription description={description(componentName, apiPath)} />\n                    <ApiTabs\n                        chartClass={chartClass}\n                        data={props[dataProperty]}\n                        body={propsMapper(props)}\n                        isLoading={loading}\n                        responseStatus={responseStatus}\n                        chartUrl={response ? response.url : null}\n                    />\n                    <ControlPanel>\n                        <SubmitWrapper>\n                            <ApiSubmit loading={loading} onClick={this.handleSubmit} />\n                        </SubmitWrapper>\n                        <ApiResponse responseStatus={responseStatus} response={response} />\n                    </ControlPanel>\n                    <ComponentSettings\n                        component={componentName}\n                        settings={props}\n                        flavors={flavorKeys}\n                        currentFlavor=\"api\"\n                        groups={controlGroups}\n                        onChange={this.handleSettingsUpdate}\n                    />\n                </ComponentPage>\n            </Layout>\n        )\n    }\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.6);\n    width: var(--partialWidth);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 60%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n","import { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({\n    label: value => {\n        if (value === `d => \\`\\${d.id} [\\${d.value}]\\``) return d => `${d.id} [${d.value}]`\n        return value\n    },\n})\n","import React from 'react'\nimport { generateChordData } from '@nivo/generators'\nimport { Seo } from '../../components/Seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/chord/props'\nimport mapper from '../../data/components/chord/mapper'\nimport meta from '../../data/components/chord/meta.yml'\n\nconst MATRIX_SIZE = 5\n\nconst data = generateChordData({ size: MATRIX_SIZE })\n\nconst ChordApi = () => {\n    return (\n        <>\n            <Seo title=\"Chord HTTP API\" keywords={[...meta.Chord.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"Chord\"\n                chartClass=\"chord\"\n                apiPath=\"/charts/chord\"\n                flavors={meta.flavors}\n                dataProperty=\"matrix\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 800,\n                    height: 800,\n                    matrix: JSON.stringify(data.matrix, null, '  '),\n                    keys: data.keys,\n                    margin: {\n                        top: 40,\n                        right: 40,\n                        bottom: 40,\n                        left: 40,\n                    },\n                    padAngle: 0.02,\n                    innerRadiusRatio: 0.96,\n                    innerRadiusOffset: 0.01,\n\n                    colors: { scheme: 'nivo' },\n\n                    arcOpacity: 1,\n                    arcBorderWidth: 1,\n                    arcBorderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.4]],\n                    },\n\n                    ribbonOpacity: 0.5,\n                    ribbonBorderWidth: 1,\n                    ribbonBorderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.4]],\n                    },\n\n                    enableLabel: true,\n                    label: 'id',\n                    labelOffset: 12,\n                    labelRotation: -90,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default ChordApi\n"],"names":["props","key","group","help","description","required","type","enableControlForFlavors","controlType","controlOptions","unit","min","max","step","flavors","defaultValue","defaults","themeProperty","choices","map","choice","label","value","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","legend","anchor","direction","dataFrom","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","itemDirection","onClick","data","alert","JSON","stringify","motionProperties","groups","groupProperties","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","Link","styled","Image","EmptyContainer","theme","colors","textLight","responseStatus","chartUrl","href","target","rel","src","alt","tabs","chartClass","body","isLoading","useTheme","useState","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","tab","isCurrent","icon","iconColors","NavItem","onMouseEnter","onMouseLeave","Icon","id","Content","CodeBlock","Loader","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","background","text","LoaderContainer","loaderBarAnimation","keyframes","LoaderBar","accent","Button","ApiSubmit","render","this","loading","Component","defaultProps","Container","Header","borderLight","ResponseJson","ApiResponse","response","responseContent","ApiClient","handleSettingsUpdate","setState","handleDataUpdate","e","dataProperty","state","assign","handleSubmit","apiPath","propsMapper","fetch","config","method","headers","Accept","then","res","status","json","catch","err","console","error","component","componentName","controlGroups","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","tags","ComponentFlavorSelector","current","ComponentDescription","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","onChange","cardAltBackground","d","generateChordData","size","title","keywords","meta","mapper","width","height","matrix","margin","top","right","bottom","left","padAngle","innerRadiusRatio","innerRadiusOffset","scheme","arcOpacity","arcBorderWidth","arcBorderColor","from","modifiers","ribbonOpacity","ribbonBorderWidth","ribbonBorderColor","enableLabel","labelOffset","labelRotation","labelTextColor"],"sourceRoot":""}