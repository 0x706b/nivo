{"version":3,"file":"component---src-pages-geomap-index-js-6751b650b6c8587fd955.js","mappings":"6KAGMA,EAAK,UAAOC,EAAAA,GAELC,GAASC,EAAAA,EAAAA,IAAgBH,I,qWCKtC,IAAMI,EAAoB,CACtBC,OAAQ,CACJC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAGVC,eAAgB,WAChBC,gBAAiB,IACjBC,sBAAuB,CAAC,GAAK,IAC7BC,mBAAoB,CAAC,EAAG,EAAG,GAE3BC,UAAW,UACXC,YAAa,GACbC,YAAa,UAEbC,iBAAiB,EACjBC,mBAAoB,GACpBC,mBAAoB,UAEpBC,eAAe,GAwDnB,UArDe,WACX,IAE4CC,GAExCC,EAAAA,EAAAA,gBAAe,cAHfD,MACIE,gBAAmBC,gBAY3B,OACI,SAAC,IAAD,CACIC,KAAK,SACLC,KAAMA,EAAAA,GACNC,KAAK,SACLC,QAASF,EAAAA,GACTG,cAAc,MACdC,WAAY5B,EAAAA,EACZE,kBAAmBA,EACnB2B,kBAAmBC,EAAAA,GACnBC,iBAAkBC,EAAAA,EAClBC,qBAAsB,SAAAL,GAAU,UAC5BM,SAAU,yDACPN,IAEPO,aAAc,aACdhB,MAAOA,EAfX,SAiBK,SAACS,EAAYQ,EAAMC,EAAOC,GACvB,OACI,SAAC,KAAD,GACIJ,SAAUK,EAAAA,GACNX,EAFR,CAGIS,MAAOA,EACPG,QAAS,SAAAC,GACLH,EAAU,CACNI,KAAM,QACNC,MAAUF,EAAQb,WAAWL,KAAxB,KAAiCkB,EAAQG,GAAzC,IACLR,KAAMS,GAAAA,CAAKJ,EAAS","sources":["webpack://nivo-website/./src/data/components/geomap/props.ts","webpack://nivo-website/./src/pages/geomap/index.js"],"sourcesContent":["import { groupProperties } from '../../../lib/componentProperties'\nimport { props as geoProps } from '../geo/props'\n\nconst props = [...geoProps]\n\nexport const groups = groupProperties(props)\n","import React from 'react'\nimport omit from 'lodash/omit'\nimport { ResponsiveGeoMap, GeoMapDefaultProps } from '@nivo/geo'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/geomap/meta.yml'\nimport mapper from '../../data/components/geo/mapper'\nimport { groups } from '../../data/components/geomap/props'\nimport countries from '../../data/components/geo/world_countries'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst initialProperties = {\n    margin: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    fillColor: '#eeeeee',\n    borderWidth: 0.5,\n    borderColor: '#333333',\n\n    enableGraticule: true,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#666666',\n\n    isInteractive: true,\n}\n\nconst GeoMap = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/geomap.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <ComponentTemplate\n            name=\"GeoMap\"\n            meta={meta.GeoMap}\n            icon=\"geomap\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={GeoMapDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={properties => ({\n                features: '/* please have a look at the description for usage */',\n                ...properties,\n            })}\n            generateData={() => undefined}\n            image={image}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveGeoMap\n                        features={countries.features}\n                        {...properties}\n                        theme={theme}\n                        onClick={feature => {\n                            logAction({\n                                type: 'click',\n                                label: `${feature.properties.name} (${feature.id})`,\n                                data: omit(feature, 'geometry'),\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default GeoMap\n"],"names":["props","geoProps","groups","groupProperties","initialProperties","margin","top","right","bottom","left","projectionType","projectionScale","projectionTranslation","projectionRotation","fillColor","borderWidth","borderColor","enableGraticule","graticuleLineWidth","graticuleLineColor","isInteractive","image","useStaticQuery","childImageSharp","gatsbyImageData","name","meta","icon","flavors","currentFlavor","properties","defaultProperties","GeoMapDefaultProps","propertiesMapper","mapper","codePropertiesMapper","features","generateData","data","theme","logAction","countries","onClick","feature","type","label","id","omit"],"sourceRoot":""}