{"version":3,"sources":["webpack:///../node_modules/d3-array/src/ascending.js","webpack:///../node_modules/d3-array/src/bisect.js","webpack:///../node_modules/d3-array/src/bisector.js","webpack:///../node_modules/d3-array/src/cross.js","webpack:///../node_modules/d3-array/src/array.js","webpack:///../node_modules/d3-array/src/range.js","webpack:///../node_modules/d3-array/src/ticks.js","webpack:///../node_modules/d3-array/src/threshold/sturges.js","webpack:///../node_modules/d3-array/src/merge.js","webpack:///../node_modules/d3-geo/src/adder.js","webpack:///../node_modules/d3-geo/src/math.js","webpack:///../node_modules/d3-geo/src/noop.js","webpack:///../node_modules/d3-geo/src/stream.js","webpack:///../node_modules/d3-geo/src/area.js","webpack:///../node_modules/d3-geo/src/cartesian.js","webpack:///../node_modules/d3-geo/src/bounds.js","webpack:///../node_modules/d3-geo/src/centroid.js","webpack:///../node_modules/d3-geo/src/compose.js","webpack:///../node_modules/d3-geo/src/rotation.js","webpack:///../node_modules/d3-geo/src/circle.js","webpack:///../node_modules/d3-geo/src/clip/buffer.js","webpack:///../node_modules/d3-geo/src/pointEqual.js","webpack:///../node_modules/d3-geo/src/clip/rejoin.js","webpack:///../node_modules/d3-geo/src/polygonContains.js","webpack:///../node_modules/d3-geo/src/clip/index.js","webpack:///../node_modules/d3-geo/src/clip/antimeridian.js","webpack:///../node_modules/d3-geo/src/clip/circle.js","webpack:///../node_modules/d3-geo/src/clip/rectangle.js","webpack:///../node_modules/d3-geo/src/clip/line.js","webpack:///../node_modules/d3-geo/src/clip/extent.js","webpack:///../node_modules/d3-geo/src/length.js","webpack:///../node_modules/d3-geo/src/distance.js","webpack:///../node_modules/d3-geo/src/contains.js","webpack:///../node_modules/d3-geo/src/graticule.js","webpack:///../node_modules/d3-geo/src/interpolate.js","webpack:///../node_modules/d3-geo/src/path/area.js","webpack:///../node_modules/d3-geo/src/identity.js","webpack:///../node_modules/d3-geo/src/path/bounds.js","webpack:///../node_modules/d3-geo/src/path/centroid.js","webpack:///../node_modules/d3-geo/src/path/context.js","webpack:///../node_modules/d3-geo/src/path/measure.js","webpack:///../node_modules/d3-geo/src/path/string.js","webpack:///../node_modules/d3-geo/src/path/index.js","webpack:///../node_modules/d3-geo/src/transform.js","webpack:///../node_modules/d3-geo/src/projection/fit.js","webpack:///../node_modules/d3-geo/src/projection/resample.js","webpack:///../node_modules/d3-geo/src/projection/index.js","webpack:///../node_modules/d3-geo/src/projection/azimuthal.js","webpack:///../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///../node_modules/d3-geo/src/projection/mercator.js","webpack:///../node_modules/d3-geo/src/projection/equirectangular.js","webpack:///../node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///../node_modules/d3-geo/src/projection/equalEarth.js","webpack:///../node_modules/d3-geo/src/projection/gnomonic.js","webpack:///../node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///../node_modules/d3-geo/src/projection/orthographic.js","webpack:///../node_modules/d3-geo/src/projection/stereographic.js","webpack:///../node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./src/data/components/geo/props.js","webpack:///./src/data/components/geo/mapper.js","webpack:///./src/lib/settings.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/hooks.js","webpack:///../src/ChoroplethTooltip.js","webpack:///../src/props.js","webpack:///../src/GeoGraticule.js","webpack:///../src/GeoMapFeature.js","webpack:///../src/GeoMap.js","webpack:///../src/ResponsiveGeoMap.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/GeoMapCanvas.js","webpack:///../src/ResponsiveGeoMapCanvas.js","webpack:///../src/Choropleth.js","webpack:///../src/ResponsiveChoropleth.js","webpack:///../src/ChoroplethCanvas.js","webpack:///../src/ResponsiveChoroplethCanvas.js"],"names":["a","b","NaN","f","ascending","length","compare","d","x","Array","prototype","slice","map","start","stop","step","n","arguments","i","Math","max","ceil","range","sqrt","m","merged","array","arrays","j","Adder","this","reset","constructor","s","t","add","y","_add","temp","valueOf","adder","bv","av","epsilon","pi","PI","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","exp","log","floor","sin","pow","sign","tan","acos","asin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","cartesian","spherical","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","k","cartesianNormalizeInPlace","l","compose","invert","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","circleStream","radius","delta","direction","t0","t1","cosRadius","sinRadius","circleRadius","line","lines","push","rejoin","pop","concat","shift","result","Intersection","points","other","entry","o","e","v","p","subject","clip","segments","forEach","segment","p0","p1","pointEqual","sort","compareIntersection","startInside","current","isSubject","interpolate","sum","sinPhi","normal","angle","winding","polygon","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","arc","intersection","phiArc","sink","clipLine","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","polygonContains","pointVisible","pointLine","clean","ringSegments","filter","validSegment","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","w","uu","t2","q","polar","q1","code","r","c0","v0","v00","point2","c","clipRectangle","x0","y0","x1","y1","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","min","ax","ay","dx","dy","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","distance","ab","ringRadians","pointRadians","graticuleX","graticuleY","X1","X0","Y1","Y0","X","Y","DX","DY","precision","graticule","outline","reverse","extent","_","extentMajor","extentMinor","stepMajor","stepMinor","area","Infinity","bounds","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","PathString","_string","_circle","join","projectionStream","contextStream","path","apply","measure","projection","identity","transformer","methods","TransformStream","key","fit","fitBounds","clipExtent","scale","translate","h","size","width","height","cosMinDistance","delta2","project","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslate","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","recenter","center","resample","transformRotate","undefined","clipAngle","fitExtent","fitSize","fitWidth","fitHeight","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","forward","equirectangularRaw","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","props","group","enableControlForFlavors","help","description","required","flavors","defaultValue","controlType","controlOptions","GeoMapDefaultProps","projectionType","choices","label","value","projectionScale","projectionTranslation","unit","items","projectionRotation","themeProperty","borderWidth","borderColor","enableGraticule","graticuleLineWidth","graticuleLineColor","defsProperties","isInteractive","TooltipWrapper","styled","div","theme","colors","cardBackground","color","TooltipKey","span","TooltipValue","CustomTooltip","feature","id","settingsMapper","values","tooltip","container","background","exclude","mapping","settings","options","overrides","Object","keys","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","projectionById","azimuthalEqualArea","azimuthalEquidistant","gnomonic","orthographic","stereographic","equalEarth","equirectangular","mercator","transverseMercator","naturalEarth1","geoNaturalEarth1","useGeoMap","fillColor","useMemo","geoPath","geoGraticule","useTheme","getBorderWidth","getBorderColor","useInheritedColor","getFillColor","useChoropleth","data","match","valueFormat","unknownColor","domain","findMatchingDatum","featureKey","datumKey","getLabel","datum","getValue","valueFormatter","colorScale","guessQuantizeColorScale","boundFeatures","datumValue","featureWithData","formattedValue","legendData","useQuantizeColorScaleLegendData","ChoroplethTooltip","memo","enableChip","commonPropTypes","PropTypes","properties","isRequired","inheritedColorPropType","onMouseEnter","onMouseMove","onMouseLeave","onClick","layers","GeoMapPropTypes","role","GeoMapCanvasPropTypes","pixelRatio","commonChoroplethPropTypes","quantizeColorScalePropType","commonDefaultProps","legends","GeoMapCanvasDefaultProps","global","commonChoroplethDefaultProps","ChoroplethDefaultProps","ChoroplethCanvasDefaultProps","GeoGraticule","lineWidth","lineColor","fill","strokeWidth","stroke","GeoMapFeature","strokeLinejoin","event","GeoMap","partialMargin","Tooltip","useDimensions","margin","outerWidth","outerHeight","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","handleMouseEnter","handleMouseMove","handleMouseLeave","layer","withContainer","ResponsiveGeoMap","_arrayLikeToArray","arr","len","arr2","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","minLen","arrayLikeToArray","toString","call","name","test","unsupportedIterableToArray","TypeError","nonIterableRest","getFeatureFromMouseEvent","getRelativeCursor","el","geoContains","GeoMapCanvas","canvasEl","useRef","useEffect","ctx","ref","style","cursor","ResponsiveGeoMapCanvas","Choropleth","containerWidth","containerHeight","ResponsiveChoropleth","ChoroplethCanvas","legend","renderLegendToCanvas","ResponsiveChoroplethCanvas"],"mappings":"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","file":"afac4a633cccc018283d46382f78cd3b8b03e305-7aab07d8002347dfebda.js","sourcesContent":["export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import clipRectangle from \"./rectangle\";\nexport default function () {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n  return clip = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = _stream);\n    },\n    extent: function extent(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import length from \"./length\";\nvar coordinates = [null, null],\n    object = {\n  type: \"LineString\",\n  coordinates: coordinates\n};\nexport default function (a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}","import { default as polygonContains } from \"./polygonContains\";\nimport { default as distance } from \"./distance\";\nimport { epsilon, radians } from \"./math\";\nvar containsObjectType = {\n  Feature: function Feature(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function FeatureCollection(object, point) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      if (containsGeometry(features[i].geometry, point)) return true;\n    }\n\n    return false;\n  }\n};\nvar containsGeometryType = {\n  Sphere: function Sphere() {\n    return true;\n  },\n  Point: function Point(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function MultiPoint(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPoint(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  LineString: function LineString(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function MultiLineString(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsLine(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  Polygon: function Polygon(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function MultiPolygon(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPolygon(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  GeometryCollection: function GeometryCollection(object, point) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      if (containsGeometry(geometries[i], point)) return true;\n    }\n\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function (object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n}","import { range } from \"d3-array\";\nimport { abs, ceil, epsilon } from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function (x) {\n    return y.map(function (y) {\n      return [x, y];\n    });\n  };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function (y) {\n    return x.map(function (x) {\n      return [x, y];\n    });\n  };\n}\n\nexport default function graticule() {\n  var x1,\n      x0,\n      X1,\n      X0,\n      y1,\n      y0,\n      Y1,\n      Y0,\n      dx = 10,\n      dy = dx,\n      DX = 90,\n      DY = 360,\n      x,\n      y,\n      X,\n      Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {\n      type: \"MultiLineString\",\n      coordinates: lines()\n    };\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n      return abs(x % DX) > epsilon;\n    }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n      return abs(y % DY) > epsilon;\n    }).map(y));\n  }\n\n  graticule.lines = function () {\n    return lines().map(function (coordinates) {\n      return {\n        type: \"LineString\",\n        coordinates: coordinates\n      };\n    });\n  };\n\n  graticule.outline = function () {\n    return {\n      type: \"Polygon\",\n      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n    };\n  };\n\n  graticule.extent = function (_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function (_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function (_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function (_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function (_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function (_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function (_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\nexport function graticule10() {\n  return graticule()();\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","export default function (x) {\n  return x;\n}","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { sqrt } from \"../math\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import projection from \"./index.js\";\nimport { abs, asin, cos, epsilon2, sin, sqrt } from \"../math.js\";\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  return [lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\n\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l), asin(sin(l) / M)];\n};\n\nexport default function () {\n  return projection(equalEarthRaw).scale(177.158);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import projection from \"./index\";\nimport { abs, epsilon } from \"../math\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { GeoMapDefaultProps } from '@nivo/geo'\nimport { themeProperty, defsProperties } from '../../../lib/componentProperties'\n\nexport const props = [\n    {\n        key: 'width',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'projectionType',\n        help: 'Defines the projection to use.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionType,\n        controlType: 'choices',\n        group: 'Projection',\n        controlOptions: {\n            choices: [\n                { label: 'azimuthalEqualArea', value: 'azimuthalEqualArea' },\n                { label: 'azimuthalEquidistant', value: 'azimuthalEquidistant' },\n                { label: 'gnomonic', value: 'gnomonic' },\n                { label: 'orthographic', value: 'orthographic' },\n                { label: 'stereographic', value: 'stereographic' },\n                { label: 'equalEarth', value: 'equalEarth' },\n                { label: 'equirectangular', value: 'equirectangular' },\n                { label: 'mercator', value: 'mercator' },\n                { label: 'transverseMercator', value: 'transverseMercator' },\n                { label: 'naturalEarth1', value: 'naturalEarth1' },\n            ],\n        },\n    },\n    {\n        key: 'projectionScale',\n        help: 'Projection scale.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionScale,\n        type: 'number',\n        controlType: 'range',\n        group: 'Projection',\n        controlOptions: {\n            min: 0,\n            max: 400,\n        },\n    },\n    {\n        key: 'projectionTranslation',\n        type: '[number, number]',\n        help: 'Projection x/y translation.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionTranslation,\n        controlType: 'numberArray',\n        group: 'Projection',\n        controlOptions: {\n            unit: 'px',\n            items: [\n                {\n                    label: 'x',\n                    min: -1,\n                    max: 1,\n                    step: 0.05,\n                },\n                {\n                    label: 'y',\n                    min: -1,\n                    max: 1,\n                    step: 0.05,\n                },\n            ],\n        },\n    },\n    {\n        key: 'projectionRotation',\n        type: '[number, number, number]',\n        help: 'Projection rotation.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionRotation,\n        controlType: 'numberArray',\n        group: 'Projection',\n        controlOptions: {\n            items: [\n                {\n                    label: 'lambda (λ)',\n                    min: -360,\n                    max: 360,\n                },\n                {\n                    label: 'phi (φ)',\n                    min: -360,\n                    max: 360,\n                },\n                {\n                    label: 'gamma (γ)',\n                    min: -360,\n                    max: 360,\n                },\n            ],\n        },\n    },\n    themeProperty,\n    {\n        key: 'borderWidth',\n        help: 'Control border width.',\n        type: 'number',\n        required: false,\n        defaultValue: GeoMapDefaultProps.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n        controlOptions: {\n            step: 0.5,\n        },\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: GeoMapDefaultProps.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'enableGraticule',\n        help: 'Enable meridians and parallels, useful for showing projection distortion.',\n        type: 'boolean',\n        required: false,\n        defaultValue: GeoMapDefaultProps.enableGraticule,\n        controlType: 'switch',\n        group: 'Graticule',\n    },\n    {\n        key: 'graticuleLineWidth',\n        help: 'Control meridians and parallel lines width.',\n        type: 'number',\n        required: false,\n        defaultValue: GeoMapDefaultProps.graticuleLineWidth,\n        controlType: 'lineWidth',\n        group: 'Graticule',\n        controlOptions: {\n            step: 0.5,\n        },\n    },\n    {\n        key: 'graticuleLineColor',\n        help: 'Control meridians and parallel lines color.',\n        type: 'string',\n        required: false,\n        defaultValue: GeoMapDefaultProps.graticuleLineColor,\n        controlType: 'colorPicker',\n        group: 'Graticule',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'isInteractive',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: GeoMapDefaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onClick',\n        help: 'onClick handler, it receives clicked node data and style plus mouse event.',\n        type: 'Function',\n        required: false,\n        group: 'Interactivity',\n    },\n]\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    font-size: 13px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    padding: 10px 20px;\n    color: ${({ color }) => color};\n    border: 2px solid ${({ color }) => color};\n    box-shadow: 9px 16px 0 rgba(0, 0, 0, 0.15);\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\nconst TooltipValue = styled.span``\n\nconst CustomTooltip = ({ feature }) => {\n    return (\n        <TooltipWrapper color={feature.color}>\n            <TooltipKey>Custom tooltip</TooltipKey>\n            <span />\n            <TooltipKey>id</TooltipKey>\n            <TooltipValue>{feature.id}</TooltipValue>\n            <TooltipKey>value</TooltipKey>\n            <TooltipValue>{feature.value}</TooltipValue>\n            <TooltipKey>color</TooltipKey>\n            <TooltipValue>{feature.color}</TooltipValue>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        theme: (value, values) => {\n            if (!values['custom tooltip example']) return value\n\n            return {\n                ...values.theme,\n                tooltip: {\n                    container: {\n                        ...values.theme.tooltip.container,\n                        background: '#333',\n                    },\n                },\n            }\n        },\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n    },\n    {\n        exclude: ['custom tooltip example'],\n    }\n)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping, { exclude = [] } = {}) => (settings, options = {}) => {\n    const overrides = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = type => (value, settings) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }) => (enabled === true ? format : undefined)\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { isFunction, get } from 'lodash'\nimport { format } from 'd3-format'\nimport {\n    geoPath,\n    geoAzimuthalEqualArea,\n    geoAzimuthalEquidistant,\n    geoGnomonic,\n    geoOrthographic,\n    geoStereographic,\n    geoEqualEarth,\n    geoEquirectangular,\n    geoMercator,\n    geoTransverseMercator,\n    geoNaturalEarth1,\n    geoGraticule,\n} from 'd3-geo'\nimport { guessQuantizeColorScale, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useQuantizeColorScaleLegendData } from '@nivo/legends'\n\nexport const projectionById = {\n    azimuthalEqualArea: geoAzimuthalEqualArea,\n    azimuthalEquidistant: geoAzimuthalEquidistant,\n    gnomonic: geoGnomonic,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    mercator: geoMercator,\n    transverseMercator: geoTransverseMercator,\n    naturalEarth1: geoNaturalEarth1,\n}\n\nexport const useGeoMap = ({\n    width,\n    height,\n    projectionType,\n    projectionScale,\n    projectionTranslation,\n    projectionRotation,\n    fillColor,\n    borderWidth,\n    borderColor,\n}) => {\n    const projection = useMemo(() => {\n        return projectionById[projectionType]()\n            .scale(projectionScale)\n            .translate([width * projectionTranslation[0], height * projectionTranslation[1]])\n            .rotate(projectionRotation)\n    }, [\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation[0],\n        projectionTranslation[1],\n        projectionRotation[0],\n        projectionRotation[1],\n        projectionRotation[2],\n    ])\n    const path = useMemo(() => geoPath(projection), [projection])\n    const graticule = useMemo(() => geoGraticule())\n\n    const theme = useTheme()\n    const getBorderWidth = useMemo(\n        () => (typeof borderWidth === 'function' ? borderWidth : () => borderWidth),\n        [borderWidth]\n    )\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getFillColor = useMemo(\n        () => (typeof fillColor === 'function' ? fillColor : () => fillColor),\n        [fillColor]\n    )\n\n    return {\n        projection,\n        path,\n        graticule,\n        getBorderWidth,\n        getBorderColor,\n        getFillColor,\n    }\n}\n\nexport const useChoropleth = ({\n    features,\n    data,\n    match,\n    label,\n    value,\n    valueFormat,\n    colors,\n    unknownColor,\n    domain,\n}) => {\n    const findMatchingDatum = useMemo(() => {\n        if (isFunction(match)) return match\n        return (feature, datum) => {\n            const featureKey = get(feature, match)\n            const datumKey = get(datum, match)\n\n            return featureKey && featureKey === datumKey\n        }\n    }, [match])\n    const getLabel = useMemo(() => (isFunction(label) ? label : datum => get(datum, label)), [\n        label,\n    ])\n    const getValue = useMemo(() => (isFunction(value) ? value : datum => get(datum, value)), [\n        value,\n    ])\n    const valueFormatter = useMemo(() => {\n        if (valueFormat === undefined) return d => d\n        if (isFunction(valueFormat)) return valueFormat\n        return format(valueFormat)\n    }, [valueFormat])\n\n    const colorScale = useMemo(() => guessQuantizeColorScale(colors).domain(domain), [\n        colors,\n        domain,\n    ])\n    const getFillColor = useMemo(() => {\n        return feature => {\n            if (feature.value === undefined) return unknownColor\n            return colorScale(feature.value)\n        }\n    }, [colorScale, unknownColor])\n\n    const boundFeatures = useMemo(\n        () =>\n            features.map(feature => {\n                const datum = data.find(datum => findMatchingDatum(feature, datum))\n                const datumValue = getValue(datum)\n\n                if (datum) {\n                    const featureWithData = {\n                        ...feature,\n                        data: datum,\n                        value: datumValue,\n                        formattedValue: valueFormatter(datumValue),\n                    }\n                    featureWithData.color = getFillColor(featureWithData)\n                    featureWithData.label = getLabel(featureWithData)\n\n                    return featureWithData\n                }\n\n                return feature\n            }),\n        [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]\n    )\n\n    const legendData = useQuantizeColorScaleLegendData({\n        scale: colorScale,\n        valueFormat: valueFormatter,\n    })\n\n    return {\n        colorScale,\n        getFillColor,\n        boundFeatures,\n        valueFormatter,\n        legendData,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChoroplethTooltip = memo(({ feature }) => {\n    if (feature.data === undefined) return null\n\n    return (\n        <BasicTooltip\n            id={feature.label}\n            color={feature.color}\n            enableChip={true}\n            value={feature.formattedValue}\n        />\n    )\n})\n\nChoroplethTooltip.propTypes = {\n    feature: PropTypes.object.isRequired,\n}\n\nChoroplethTooltip.displayName = 'ChoroplethTooltip'\n\nexport default ChoroplethTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { projectionById } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst commonPropTypes = {\n    features: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.oneOf(['Feature']).isRequired,\n            properties: PropTypes.object,\n            geometry: PropTypes.object.isRequired,\n        })\n    ).isRequired,\n\n    projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n    projectionScale: PropTypes.number.isRequired,\n    projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n    projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGraticule: PropTypes.bool.isRequired,\n    graticuleLineWidth: PropTypes.number.isRequired,\n    graticuleLineColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const GeoMapPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const GeoMapCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonChoroplethPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    colors: quantizeColorScalePropType.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    unknownColor: PropTypes.string.isRequired,\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const ChoroplethPropTypes = {\n    ...GeoMapPropTypes,\n    ...commonChoroplethPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChoroplethCanvasPropTypes = {\n    ...GeoMapCanvasPropTypes,\n    ...commonChoroplethPropTypes,\n}\n\nconst commonDefaultProps = {\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: false,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#999999',\n\n    fillColor: '#dddddd',\n    borderWidth: 0,\n    borderColor: '#000000',\n\n    isInteractive: true,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseMove: () => {},\n    onClick: () => {},\n\n    layers: ['graticule', 'features'],\n    legends: [],\n}\n\nexport const GeoMapDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const GeoMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n\nconst commonChoroplethDefaultProps = {\n    match: 'id',\n    label: 'id',\n    value: 'value',\n    colors: 'PuBuGn',\n    unknownColor: '#999',\n    tooltip: ChoroplethTooltip,\n    layers: ['graticule', 'features', 'legends'],\n}\n\nexport const ChoroplethDefaultProps = {\n    ...GeoMapDefaultProps,\n    ...commonChoroplethDefaultProps,\n    role: 'img',\n}\n\nexport const ChoroplethCanvasDefaultProps = {\n    ...GeoMapCanvasDefaultProps,\n    ...commonChoroplethDefaultProps,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoGraticule = memo(({ path, graticule, lineWidth, lineColor }) => {\n    return <path fill=\"none\" strokeWidth={lineWidth} stroke={lineColor} d={path(graticule())} />\n})\n\nGeoGraticule.propTypes = {\n    path: PropTypes.func.isRequired,\n    graticule: PropTypes.func.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineColor: PropTypes.string.isRequired,\n}\n\nGeoGraticule.displayName = 'GeoGraticule'\n\nexport default GeoGraticule\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoMapFeature = memo(\n    ({\n        feature,\n        path,\n        fillColor,\n        borderWidth,\n        borderColor,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }) => {\n        return (\n            <path\n                key={feature.id}\n                fill={fillColor}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                strokeLinejoin=\"bevel\"\n                d={path(feature)}\n                onMouseEnter={event => onMouseEnter(feature, event)}\n                onMouseMove={event => onMouseMove(feature, event)}\n                onMouseLeave={event => onMouseLeave(feature, event)}\n                onClick={event => onClick(feature, event)}\n            />\n        )\n    }\n)\n\nGeoMapFeature.propTypes = {\n    feature: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['Feature']).isRequired,\n        properties: PropTypes.object,\n        geometry: PropTypes.object.isRequired,\n    }).isRequired,\n    path: PropTypes.func.isRequired,\n\n    fillColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nGeoMapFeature.displayName = 'GeoMapFeature'\n\nexport default GeoMapFeature\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback, memo } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapPropTypes, GeoMapDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap } from './hooks'\n\nconst GeoMap = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        layers,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    } = props\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n    })\n\n    const theme = useTheme()\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {features.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n\n                return <Fragment key={i}>{layer(props)}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nGeoMap.displayName = 'GeoMap'\nGeoMap.propTypes = GeoMapPropTypes\nGeoMap.defaultProps = GeoMapDefaultProps\n\nexport default withContainer(GeoMap)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMap from './GeoMap'\n\nconst ResponsiveGeoMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMap\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapCanvasDefaultProps, GeoMapCanvasPropTypes } from './props'\nimport { useGeoMap } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst GeoMapCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        layers,\n\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n\n        fillColor,\n        borderWidth,\n        borderColor,\n\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap(\n        {\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor,\n            borderWidth,\n            borderColor,\n        }\n    )\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                features.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else {\n                layer(ctx, props)\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        features,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(\n        event => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        },\n        [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]\n    )\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n    const handleClick = useCallback(\n        event => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                onClick(feature, event)\n            }\n        },\n        [isInteractive, canvasEl, features, projection, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nGeoMapCanvas.displatName = 'GeoMapCanvas'\nGeoMapCanvas.propTypes = GeoMapCanvasPropTypes\nGeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps\n\nexport default withContainer(GeoMapCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMapCanvas from './GeoMapCanvas'\n\nconst ResponsiveGeoMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, Fragment, useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethPropTypes, ChoroplethDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst Choropleth = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    }) => {\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        const theme = useTheme()\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleClick = useCallback(\n            (feature, event) => isInteractive && onClick && onClick(feature, event),\n            [isInteractive, onClick]\n        )\n        const handleMouseEnter = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseMove = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layer === 'graticule') {\n                        if (enableGraticule !== true) return null\n\n                        return (\n                            <GeoGraticule\n                                key=\"graticule\"\n                                path={path}\n                                graticule={graticule}\n                                lineWidth={graticuleLineWidth}\n                                lineColor={graticuleLineColor}\n                            />\n                        )\n                    }\n                    if (layer === 'features') {\n                        return (\n                            <Fragment key=\"features\">\n                                {boundFeatures.map(feature => (\n                                    <GeoMapFeature\n                                        key={feature.id}\n                                        feature={feature}\n                                        path={path}\n                                        fillColor={getFillColor(feature)}\n                                        borderWidth={getBorderWidth(feature)}\n                                        borderColor={getBorderColor(feature)}\n                                        onMouseEnter={handleMouseEnter}\n                                        onMouseMove={handleMouseMove}\n                                        onMouseLeave={handleMouseLeave}\n                                        onClick={handleClick}\n                                    />\n                                ))}\n                            </Fragment>\n                        )\n                    }\n                    if (layer === 'legends') {\n                        return legends.map((legend, i) => {\n                            return (\n                                <BoxLegendSvg\n                                    key={i}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    {...legend}\n                                />\n                            )\n                        })\n                    }\n\n                    return <Fragment key={i}>{layer({})}</Fragment>\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nChoropleth.displayName = 'Choropleth'\nChoropleth.propTypes = ChoroplethPropTypes\nChoropleth.defaultProps = ChoroplethDefaultProps\n\nexport default withContainer(Choropleth)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Choropleth from './Choropleth'\n\nconst ResponsiveChoropleth = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Choropleth width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoropleth\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethCanvasDefaultProps, ChoroplethCanvasPropTypes } from './props'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst ChoroplethCanvas = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    }) => {\n        const canvasEl = useRef(null)\n        const theme = useTheme()\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { projection, graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        useEffect(() => {\n            if (!canvasEl) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            path.context(ctx)\n\n            layers.forEach(layer => {\n                if (layer === 'graticule') {\n                    if (enableGraticule === true) {\n                        ctx.lineWidth = graticuleLineWidth\n                        ctx.strokeStyle = graticuleLineColor\n                        ctx.beginPath()\n                        path(graticule())\n                        ctx.stroke()\n                    }\n                } else if (layer === 'features') {\n                    boundFeatures.forEach(feature => {\n                        ctx.beginPath()\n                        path(feature)\n                        ctx.fillStyle = getFillColor(feature)\n                        ctx.fill()\n\n                        const borderWidth = getBorderWidth(feature)\n                        if (borderWidth > 0) {\n                            ctx.strokeStyle = getBorderColor(feature)\n                            ctx.lineWidth = borderWidth\n                            ctx.stroke()\n                        }\n                    })\n                } else if (layer === 'legends') {\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: width,\n                            containerHeight: height,\n                            theme,\n                        })\n                    })\n                } else {\n                    // layer(ctx, {})\n                }\n            })\n        }, [\n            canvasEl,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            path,\n            graticule,\n            getFillColor,\n            getBorderWidth,\n            getBorderColor,\n            boundFeatures,\n            legends,\n            layers,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleMouseMove = useCallback(\n            event => {\n                if (!isInteractive || !Tooltip) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    showTooltipFromEvent(<Tooltip feature={feature} />, event)\n                } else {\n                    hideTooltip()\n                }\n                onMouseMove && onMouseMove(feature || null, event)\n            },\n            [\n                showTooltipFromEvent,\n                hideTooltip,\n                isInteractive,\n                Tooltip,\n                canvasEl,\n                boundFeatures,\n                projection,\n            ]\n        )\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n        const handleClick = useCallback(\n            event => {\n                if (!isInteractive || !onClick) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    onClick(feature, event)\n                }\n            },\n            [isInteractive, canvasEl, boundFeatures, projection, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChoroplethCanvas.displayName = 'ChoroplethCanvas'\nChoroplethCanvas.propTypes = ChoroplethCanvasPropTypes\nChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps\n\nexport default withContainer(ChoroplethCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChoroplethCanvas from './ChoroplethCanvas'\n\nconst ResponsiveChoroplethCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChoroplethCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoroplethCanvas\n"],"sourceRoot":""}