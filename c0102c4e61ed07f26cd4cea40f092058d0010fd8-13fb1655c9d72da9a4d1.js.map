{"version":3,"file":"c0102c4e61ed07f26cd4cea40f092058d0010fd8-13fb1655c9d72da9a4d1.js","mappings":"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","sources":["webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/utils.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/AnnotationNote.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../src/AnnotationLink.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://nivo-website/../src/CircleAnnotationOutline.tsx","webpack://nivo-website/../src/DotAnnotationOutline.tsx","webpack://nivo-website/../src/RectAnnotationOutline.tsx","webpack://nivo-website/../src/Annotation.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nivo-website/../src/BarAnnotations.tsx","webpack://nivo-website/../src/BarLegends.tsx","webpack://nivo-website/../src/BarTooltip.tsx","webpack://nivo-website/../src/BarItem.tsx","webpack://nivo-website/../src/compute/common.ts","webpack://nivo-website/../src/compute/grouped.ts","webpack://nivo-website/../src/compute/stacked.ts","webpack://nivo-website/../src/compute/legends.ts","webpack://nivo-website/../src/Bar.tsx","webpack://nivo-website/../src/BarCanvas.tsx","webpack://nivo-website/../src/ResponsiveBar.tsx","webpack://nivo-website/../src/ResponsiveBarCanvas.tsx","webpack://nivo-website/../node_modules/lodash/_baseFilter.js","webpack://nivo-website/../node_modules/lodash/filter.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationSpec,\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: Required<AnnotationSpec<Datum>>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    AnnotationSpec,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: Required<AnnotationSpec<Datum>>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: Required<AnnotationSpec<Datum>>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(() => () => createElement(tooltip, { ...bar, ...data }), [\n        tooltip,\n        bar,\n        data,\n    ])\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (computeScale(\n        indexScale,\n        { all: data.map(getIndex), min: 0, max: 0 },\n        size,\n        axis\n    ) as ScaleBand<string>).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: RawDatum[], keys: string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : ((arr as unknown) as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep((stackedData as unknown) as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport { uniqBy } from 'lodash'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport { BarDatum, BarLayer, BarLayerId, BarSvgProps, ComputedBarDatumWithValue } from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { svgDefaultProps } from './props'\nimport { useTransition } from '@react-spring/web'\nimport { useBar } from './hooks'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel,\n    label,\n    labelSkipWidth,\n    labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            bars,\n            xScale,\n            yScale,\n        }),\n        [commonProps, margin, innerWidth, innerHeight, width, height, bars, xScale, yScale]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { BarCanvasLayer, BarCanvasProps, BarDatum, ComputedBarDatum } from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\n\ndeclare module 'react' {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => React.ReactElement | null\n    ): (props: P & React.RefAttributes<T>) => React.ReactElement | null\n}\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel,\n    label,\n    labelSkipWidth,\n    labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            bars,\n            xScale,\n            yScale,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            height,\n            innerHeight,\n            innerWidth,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            margin,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            bars,\n            xScale,\n            yScale,\n            tooltip,\n            width,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: xScale as any,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: yScale as any,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale as any,\n                    yScale: yScale as any,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: Omit<BarSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: Omit<BarCanvasProps<RawDatum>, 'height' | 'width'>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_arrayLikeToArray","arr","len","arr2","Array","_iterableToArray","iter","Symbol","iterator","from","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","_toConsumableArray","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","TypeError","nonIterableSpread","defaultProps","isCircleAnnotation","annotationSpec","isDotAnnotation","isRectAnnotation","computeAnnotation","x","annotation","y","noteX","noteY","noteWidth","noteTextOffset","computedNoteX","computedNoteY","computedX","computedY","angle","Math","targetY","targetX","absoluteAngleDegrees","radiansToDegrees","getLinkAngle","position","positionFromAngle","degreesToRadians","eighth","textX","noteLineX","points","text","useAnnotations","data","annotations","getPosition","getDimensions","useMemo","offset","datum","dimensions","size","bindAnnotations","useComputedAnnotations","computed","AnnotationNote","note","theme","useTheme","useMotionConfig","animate","springConfig","animatedProps","useSpring","config","immediate","createElement","style","strokeLinejoin","strokeWidth","stroke","outlineColor","omit","_arrayWithHoles","_nonIterableRest","_slicedToArray","arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","nonIterableRest","AnnotationLink","isOutline","path","firstPoint","animatedPath","useAnimatedPath","fill","d","CircleAnnotationOutline","radius","cx","cy","r","outline","DotAnnotationOutline","symbol","RectAnnotationOutline","width","height","Annotation","useComputedAnnotation","noteType","isValidElement","isSvgNote","drawPoints","ctx","index","renderAnnotationsToCanvas","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","centerScale","line","lineX","lineY","textY","isRTL","document","textAlign","textBaseline","translate","ticks","getFormatter","formatter","timeFormat","d3Format","computeGridLines","_values","x1","x2","y1","y2","AxisTick","_value","format","onClick","textAnchor","props","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transition","useTransition","tick","initial","textTransform","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","lines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","Number","String","renderAxesToCanvas","renderGridLinesToCanvas","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","BarAnnotations","bars","boundAnnotations","bar","BarLegends","legends","toggleSerie","containerWidth","containerHeight","indexBy","groupMode","layout","reverse","minValue","maxValue","valueScale","type","indexScale","round","padding","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","label","labelSkipWidth","labelSkipHeight","labelTextColor","colorBy","colors","scheme","borderRadius","borderWidth","borderColor","isInteractive","tooltip","color","id","enableChip","tooltipLabel","initialHiddenIds","markers","svgDefaultProps","layers","barComponent","labelColor","labelOpacity","labelX","labelY","shouldRenderLabel","onMouseEnter","onMouseLeave","isFocusable","ariaLabel","ariaLabelledBy","ariaDescribedBy","useTooltip","showTooltipFromEvent","showTooltipAt","hideTooltip","renderTooltip","handleClick","useCallback","handleTooltip","handleMouseEnter","handleMouseLeave","handleFocus","handleBlur","to","rx","ry","focusable","tabIndex","onMouseMove","onFocus","onBlur","fillOpacity","pointerEvents","defs","motionConfig","role","canvasDefaultProps","pixelRatio","window","getIndexScale","computeScale","all","min","max","normalizeData","item","acc","filterNullValues","coerceValue","gt","lt","range","start","repeat","end","clampToZero","generateVerticalGroupedBars","getColor","getIndex","getTooltipLabel","margin","compare","cleanedData","rawValue","indexValue","barWidth","barHeight","yRef","getHeight","barData","formattedValue","hidden","absX","absY","generateHorizontalGroupedBars","xRef","getWidth","generateGroupedBars","indexScaleConfig","hiddenIds","otherAxis","scaleSpec","clampMin","k","entry","isFinite","bandwidth","params","flattenDeep","generateVerticalStackedBars","stackedData","stackedDataItem","getY","generateHorizontalStackedBars","getX","generateStackedBars","array","stack","num","getLegendData","direction","legendLabel","getLegendLabel","getPropertyAccessor","getLegendDataForIndexes","getLegendDataForKeys","useBar","valueFormat","useState","setHiddenIds","usePropertyAccessor","getLabel","useValueFormatter","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelColor","barsWithValue","shouldRenderBarLabel","legendData","legendsWithData","InnerBar","partialMargin","axisTop","axisRight","gridXValues","gridYValues","barAriaLabel","barAriaLabelledBy","barAriaDescribedBy","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","commonProps","boundDefs","bindDefs","dataKey","targetKey","layerById","grid","layerContext","layer","Bar","renderWrapper","otherProps","findBarUnderCursor","nodes","node","isCursorInRect","InnerBarCanvas","renderBar","canvasRef","canvasEl","useRef","useEffect","isNumber","renderLegendToCanvas","handleMouseHover","getRelativeCursor","ref","canvas","BarCanvas","forwardRef","ResponsiveBar","ResponsiveBarCanvas","baseEach","module","exports","collection","predicate","result","arrayFilter","baseFilter","baseIteratee"],"sourceRoot":""}