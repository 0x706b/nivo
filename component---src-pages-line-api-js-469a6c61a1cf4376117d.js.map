{"version":3,"sources":["webpack:///./src/pages/line/api.js","webpack:///./src/data/components/line/props.js","webpack:///./src/data/components/line/generator.js","webpack:///./src/data/components/line/mapper.js","webpack:///./src/data/components/line/defaults.js","webpack:///./src/components/components/api-client/ApiPreview.js","webpack:///./src/components/components/api-client/ApiTabs.js","webpack:///./src/components/components/api-client/ApiSubmit.js","webpack:///./src/components/components/api-client/ApiResponse.js","webpack:///./src/components/components/api-client/ApiClient.js"],"names":["data","generateLightDataSet","LineApi","title","keywords","meta","Line","tags","componentName","apiPath","flavors","chartClass","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","omit","defaultSettings","JSON","stringify","props","key","group","help","description","required","type","controlType","controlOptions","disabled","choices","map","v","label","value","disabledValue","defaultValue","min","max","enableControlForFlavors","unit","step","defaults","curve","lineCurvePropKeys","themeProperty","colors","lineWidth","enableArea","areaBaselineValue","areaOpacity","areaBlendMode","defsProperties","layers","enablePoints","pointSize","pointColor","pointBorderWidth","pointBorderColor","enablePointLabel","choice","dotDefaults","labelYOffset","enableGridX","enableGridY","axesProperties","isInteractive","useMesh","debugMesh","enableSlicesTooltip","debugSlices","enableCrosshair","crosshairType","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","legend","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","symbolShape","itemDirection","itemTextColor","onClick","alert","effects","on","style","itemBackground","itemOpacity","motionProperties","groupProperties","generateSeries","generateHeavyDataSet","range","settingsMapper","pointLabel","d","x","y","xFormat","mapFormat","yFormat","axisTop","mapAxis","axisRight","axisBottom","axisLeft","exclude","width","height","margin","top","right","bottom","left","xScale","format","enabled","yScale","stacked","reverse","LineDefaultProps","enable","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","theme","from","pointLabelYOffset","enableSlices","Link","styled","a","Image","img","EmptyContainer","div","textLight","ApiPreview","responseStatus","chartUrl","href","target","rel","src","alt","tabs","ApiTabs","body","isLoading","useTheme","useState","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","tab","isCurrent","icon","iconColors","NavItem","onMouseEnter","onMouseLeave","Icon","id","Content","CodeBlock","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","tablet","mobile","nav","background","span","text","LoaderContainer","loaderBarAnimation","keyframes","LoaderBar","accent","Loader","Button","ApiSubmit","render","this","loading","Component","Container","Header","borderLight","ResponseJson","pre","ApiResponse","response","responseContent","ApiClient","handleSettingsUpdate","settings","setState","handleDataUpdate","e","state","Object","assign","handleSubmit","fetch","config","nivoApiUrl","method","headers","Accept","then","res","status","json","catch","err","console","error","component","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","ComponentFlavorSelector","current","ComponentDescription","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","onChange","cardAltBackground"],"mappings":"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","file":"component---src-pages-line-api-js-469a6c61a1cf4376117d.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport omit from 'lodash/omit'\nimport SEO from '../../components/seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/line/props'\nimport mapper from '../../data/components/line/mapper'\nimport defaultSettings from '../../data/components/line/defaults'\nimport { generateLightDataSet } from '../../data/components/line/generator'\nimport meta from '../../data/components/line/meta.yml'\n\nconst data = generateLightDataSet()\n\nconst LineApi = () => {\n    return (\n        <>\n            <SEO title=\"Line HTTP API\" keywords={[...meta.Line.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"Line\"\n                apiPath=\"/charts/line\"\n                flavors={meta.flavors}\n                chartClass=\"line\"\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    ...omit(defaultSettings, [\n                        'isInteractive',\n                        'enableSlices',\n                        'debugSlices',\n                        'enableCrosshair',\n                        'crosshairType',\n                    ]),\n                    data: JSON.stringify(data, null, '  '),\n                }}\n            />\n        </>\n    )\n}\n\nexport default LineApi\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { lineCurvePropKeys, DotsItemDefaultProps as dotDefaults } from '@nivo/core'\nimport { LineDefaultProps as defaults } from '@nivo/line'\nimport {\n    themeProperty,\n    axesProperties,\n    motionProperties,\n    getLegendsProps,\n    groupProperties,\n    defsProperties,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:   string | number\n                data: Array<{\n                    x: number | string | Date\n                    y: number | string | Date\n                }>\n            }>\n            \\`\\`\\`\n        `,\n        required: true,\n        type: 'object[]',\n    },\n    {\n        key: 'xScale',\n        type: 'object',\n        group: 'Base',\n        help: `X scale configuration.`,\n        controlType: 'object',\n        controlOptions: {\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type.`,\n                    type: 'string',\n                    controlType: 'choices',\n                    controlOptions: {\n                        disabled: true,\n                        choices: ['linear', 'point'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'xFormat',\n        group: 'Base',\n        help: 'Optional formatter for x values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'Function | string',\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'yScale',\n        type: 'object',\n        help: `Y scale configuration.`,\n        group: 'Base',\n        controlType: 'object',\n        controlOptions: {\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type.`,\n                    type: 'string',\n                    controlType: 'choices',\n                    controlOptions: {\n                        disabled: true,\n                        choices: ['linear', 'point'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n                {\n                    key: 'stacked',\n                    help: 'Enable/disable stacked mode.',\n                    type: 'boolean',\n                    required: false,\n                    controlType: 'switch',\n                },\n                {\n                    key: 'min',\n                    help: 'Minimum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Maximum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 1200,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'yFormat',\n        group: 'Base',\n        help: 'Optional formatter for y values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'Function | string',\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width, not required when using responsive variant.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height, not required when using responsive variant.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Style',\n        controlOptions: {\n            choices: lineCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'lineWidth',\n        help: 'Line width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.lineWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'enableArea',\n        help: 'Enable/disable area below each line.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableArea,\n        controlType: 'switch',\n        group: 'Style',\n    },\n    {\n        key: 'areaBaselineValue',\n        help: 'Define the value to be used for area baseline.',\n        description: `\n            Define the value to be used for area baseline.\n            Please note that this value isn't the\n            position of the baseline but the value used\n            to compute it.\n        `,\n        type: 'number | string | Date',\n        required: false,\n        defaultValue: defaults.areaBaselineValue,\n        controlType: 'range',\n        group: 'Style',\n        controlOptions: {\n            min: 0,\n            max: 200,\n            step: 10,\n        },\n    },\n    {\n        key: 'areaOpacity',\n        help: 'Area opacity (0~1), depends on enableArea.',\n        required: false,\n        defaultValue: defaults.areaOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'areaBlendMode',\n        flavors: ['svg'],\n        help: 'Defines CSS mix-blend-mode property.',\n        description: `\n            Defines CSS \\`mix-blend-mode\\` property for areas,\n            see\n            [MDN documentation](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode).\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.areaBlendMode,\n        controlType: 'blendMode',\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this property to insert extra layers\n            to the chart, this extra layer must be\n            a function which will receive the chart\n            computed data and must return a valid SVG element.\n        `,\n        required: false,\n        defaultValue: defaults.layers,\n    },\n    {\n        key: 'enablePoints',\n        help: 'Enable/disable points.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enablePoints,\n        controlType: 'switch',\n        group: 'Points',\n    },\n    {\n        key: 'pointSymbol',\n        flavors: ['svg'],\n        help:\n            'Overrides default point circle. The function will receive `size`, `color`, `borderWidth` and `borderColor` props and must return a valid SVG element.',\n        type: 'Function',\n        required: false,\n        group: 'Points',\n    },\n    {\n        key: 'pointSize',\n        help: 'Size of the points.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.pointSize,\n        controlType: 'range',\n        group: 'Points',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 20,\n        },\n    },\n    {\n        key: 'pointColor',\n        help: 'Method to compute points color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.pointColor,\n        controlType: 'inheritedColor',\n        group: 'Points',\n    },\n    {\n        key: 'pointBorderWidth',\n        help: 'Width of the points border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.pointBorderWidth,\n        controlType: 'lineWidth',\n        group: 'Points',\n    },\n    {\n        key: 'pointBorderColor',\n        help: 'Method to compute points border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.pointBorderColor,\n        controlType: 'inheritedColor',\n        group: 'Points',\n    },\n    {\n        key: 'enablePointLabel',\n        flavors: ['svg', 'api'],\n        group: 'Points',\n        help: 'Enable/disable points label.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enablePointLabel,\n        controlType: 'switch',\n    },\n    {\n        key: 'pointLabel',\n        flavors: ['svg', 'api'],\n        group: 'Points',\n        help:\n            'Property to use to determine point label. If a function is provided, it will receive current point data and should return the desired label.',\n        type: 'string',\n        required: false,\n        controlType: 'choices',\n        controlOptions: {\n            choices: ['y', 'yFormatted', 'x', 'xFormatted', `d => \\`\\${d.x}: \\${d.y}\\``].map(\n                choice => ({\n                    label: choice,\n                    value: choice,\n                })\n            ),\n        },\n    },\n    {\n        key: 'pointLabelYOffset',\n        flavors: ['svg', 'api'],\n        group: 'Points',\n        help: 'Label Y offset from point shape.',\n        type: 'number',\n        required: false,\n        defaultValue: dotDefaults.labelYOffset,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: -24,\n            max: 24,\n        },\n    },\n    {\n        key: 'enableGridX',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    {\n        key: 'gridXValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for vertical grid lines.',\n        type: 'Array<number | string | Date>',\n        required: false,\n    },\n    {\n        key: 'enableGridY',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridY,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    {\n        key: 'gridYValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for horizontal grid lines.',\n        type: 'Array<number | string | Date>',\n        required: false,\n    },\n    ...axesProperties(),\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'useMesh',\n        flavors: ['svg'],\n        help: 'Use a voronoi mesh to detect mouse interactions, enableSlices must be disabled',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.useMesh,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'debugMesh',\n        flavors: ['svg', 'canvas'],\n        help: 'Display mesh used to detect mouse interactions (voronoi cells).',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.debugMesh,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: `onMouseEnter handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: `onMouseMove handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `onMouseLeave handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `onClick handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `Custom point tooltip`,\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'enableSlices',\n        group: 'Interactivity',\n        flavors: ['svg'],\n        help: `Enable/disable slices tooltip for x or y axis, automatically disable mesh.`,\n        type: `'x' | 'y' | false`,\n        required: false,\n        defaultValue: defaults.enableSlicesTooltip,\n        controlType: 'choices',\n        controlOptions: {\n            choices: [\n                {\n                    label: 'false',\n                    value: false,\n                },\n                {\n                    label: 'x',\n                    value: 'x',\n                },\n                {\n                    label: 'y',\n                    value: 'y',\n                },\n            ],\n        },\n    },\n    {\n        key: 'debugSlices',\n        flavors: ['svg'],\n        help: 'Display area used to detect mouse interactions for slices.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.debugSlices,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'sliceTooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `Custom slice tooltip`,\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'enableCrosshair',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'Enable/disable crosshair.',\n        type: 'boolean',\n        required: false,\n        controlType: 'switch',\n        defaultValue: defaults.enableCrosshair,\n    },\n    {\n        key: 'crosshairType',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        required: false,\n        defaultValue: defaults.crosshairType,\n        help: `Crosshair type, forced to slices axis if enabled.`,\n        type: 'string',\n        controlType: 'choices',\n        controlOptions: {\n            disabled: true,\n            choices: [\n                'x',\n                'y',\n                'top-left',\n                'top',\n                'top-right',\n                'right',\n                'bottom-right',\n                'bottom',\n                'bottom-left',\n                'left',\n                'cross',\n            ].map(v => ({\n                label: v,\n                value: v,\n            })),\n        },\n    },\n    {\n        key: 'legends',\n        flavors: ['svg', 'canvas'],\n        type: 'object[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                anchor: 'left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 4,\n                symbolSize: 20,\n                symbolShape: 'circle',\n                itemDirection: 'left-to-right',\n                itemTextColor: '#777',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1,\n                        },\n                    },\n                ],\n            },\n        },\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport range from 'lodash/range'\nimport { generateSeries } from '@nivo/generators'\n\nexport const generateLightDataSet = () => {\n    return generateSeries(\n        ['japan', 'france', 'us', 'germany', 'norway'],\n        [\n            'plane',\n            'helicopter',\n            'boat',\n            'train',\n            'subway',\n            'bus',\n            'car',\n            'moto',\n            'bicycle',\n            'horse',\n            'skateboard',\n            'others',\n        ]\n    )\n}\n\nexport const generateHeavyDataSet = () => {\n    return generateSeries(\n        [\n            'japan',\n            'brazil',\n            'france',\n            'us',\n            'germany',\n            'norway',\n            'china',\n            'algeria',\n            'mexico',\n            'finland',\n            'australia',\n        ],\n        range(121)\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        pointLabel: value => {\n            if (value === `d => \\`\\${d.x}: \\${d.y}\\``) return d => `${d.x}: ${d.y}`\n            return value\n        },\n        xFormat: mapFormat,\n        yFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { LineDefaultProps } from '@nivo/line'\n\nexport default {\n    width: 600,\n    height: 400,\n\n    margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60,\n    },\n\n    xScale: {\n        type: 'point',\n    },\n    xFormat: { format: '', enabled: false },\n    yScale: {\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        stacked: true,\n        reverse: false,\n    },\n    yFormat: { format: ' >-.2f', enabled: true },\n\n    curve: LineDefaultProps.curve,\n\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: false,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'transportation',\n        legendOffset: 36,\n        legendPosition: 'middle',\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'count',\n        legendOffset: -40,\n        legendPosition: 'middle',\n    },\n\n    enableGridX: LineDefaultProps.enableGridX,\n    enableGridY: LineDefaultProps.enableGridY,\n\n    colors: LineDefaultProps.colors,\n    lineWidth: 2,\n\n    enablePoints: true,\n    pointSize: 10,\n    pointColor: { theme: 'background' },\n    pointBorderWidth: 2,\n    pointBorderColor: { from: 'serieColor' },\n    enablePointLabel: LineDefaultProps.enablePointLabel,\n    pointLabel: LineDefaultProps.pointLabel,\n    pointLabelYOffset: -12,\n\n    enableArea: LineDefaultProps.enableArea,\n    areaBlendMode: LineDefaultProps.areaBlendMode,\n    areaBaselineValue: LineDefaultProps.areaBaselineValue,\n    areaOpacity: LineDefaultProps.areaOpacity,\n\n    isInteractive: LineDefaultProps.isInteractive,\n    enableSlices: false,\n    debugSlices: false,\n\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ApiPreview = ({ responseStatus, chartUrl }) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n\n    return <div className=\"api-client_preview\">{content}</div>\n}\n\nApiPreview.propTypes = {\n    responseStatus: PropTypes.number,\n    chartUrl: PropTypes.string,\n}\n\nexport default ApiPreview\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport ApiPreview from './ApiPreview'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\nimport CodeBlock from '../../CodeBlock'\n\nconst tabs = ['preview', 'body', 'data']\n\nconst ApiTabs = ({ chartClass, data, body, isLoading, responseStatus, chartUrl }) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState('preview')\n    const [hoverTab, setHoverTab] = useState(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview\n                        isLoading={isLoading}\n                        responseStatus={responseStatus}\n                        chartUrl={chartUrl}\n                    />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nApiTabs.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n}\n\nexport default ApiTabs\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.6);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 60%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst LoaderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n\nclass ApiSubmit extends Component {\n    render() {\n        const { loading, onClick } = this.props\n\n        return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n    }\n}\n\nApiSubmit.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nApiSubmit.defaultProps = {}\n\nexport default ApiSubmit\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n\nclass ApiResponse extends Component {\n    render() {\n        const { responseStatus, response } = this.props\n\n        let responseContent = 'no response available'\n        if (response) {\n            responseContent = JSON.stringify(response, null, '  ')\n        }\n\n        return (\n            <Container>\n                <Header>\n                    Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}\n                </Header>\n                <ResponseJson>{responseContent}</ResponseJson>\n            </Container>\n        )\n    }\n}\n\nApiResponse.propTypes = {}\n\nApiResponse.defaultProps = {}\n\nexport default ApiResponse\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport ComponentPage from '../ComponentPage'\nimport ComponentHeader from '../ComponentHeader'\nimport ComponentFlavorSelector from '../ComponentFlavorSelector'\nimport ComponentDescription from '../ComponentDescription'\nimport ComponentSettings from '../ComponentSettings'\nimport ApiTabs from './ApiTabs'\nimport ApiSubmit from './ApiSubmit'\nimport ApiResponse from './ApiResponse'\nimport config from '../../../data/config'\n\nconst description = component => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\nexport default class ApiClient extends Component {\n    static propTypes = {\n        componentName: PropTypes.string.isRequired,\n        chartClass: PropTypes.string.isRequired,\n        apiPath: PropTypes.string.isRequired,\n        dataProperty: PropTypes.string.isRequired,\n        propsMapper: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        dataProperty: 'data',\n        propsMapper: props => props,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            props: props.defaultProps,\n            loading: false,\n            responseStatus: null,\n            response: null,\n        }\n    }\n\n    handleSettingsUpdate = settings => {\n        this.setState({ props: settings })\n    }\n\n    handleDataUpdate = e => {\n        const { dataProperty } = this.props\n        const { props } = this.state\n\n        this.setState({\n            props: Object.assign({}, props, {\n                [dataProperty]: e.target.value,\n            }),\n        })\n    }\n\n    handleSubmit = () => {\n        const { apiPath, propsMapper } = this.props\n        const { props } = this.state\n\n        this.setState({\n            loading: true,\n        })\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    responseStatus: res.status,\n                })\n\n                return res.json()\n            })\n            .then(res => {\n                this.setState({ response: res })\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    render() {\n        const {\n            componentName,\n            chartClass,\n            apiPath,\n            controlGroups,\n            dataProperty,\n            propsMapper,\n            flavors,\n        } = this.props\n        const { props, loading, responseStatus, response } = this.state\n\n        const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n        return (\n            <Layout>\n                <ComponentPage>\n                    <ComponentHeader\n                        chartClass={`${componentName} HTTP API`}\n                        tags={[`POST ${apiPath}`]}\n                    />\n                    {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                    <ComponentDescription description={description(componentName, apiPath)} />\n                    <ApiTabs\n                        chartClass={chartClass}\n                        data={props[dataProperty]}\n                        body={propsMapper(props)}\n                        isLoading={loading}\n                        responseStatus={responseStatus}\n                        chartUrl={response ? response.url : null}\n                    />\n                    <ControlPanel>\n                        <SubmitWrapper>\n                            <ApiSubmit loading={loading} onClick={this.handleSubmit} />\n                        </SubmitWrapper>\n                        <ApiResponse responseStatus={responseStatus} response={response} />\n                    </ControlPanel>\n                    <ComponentSettings\n                        component={componentName}\n                        settings={props}\n                        flavors={flavorKeys}\n                        currentFlavor=\"api\"\n                        groups={controlGroups}\n                        onChange={this.handleSettingsUpdate}\n                    />\n                </ComponentPage>\n            </Layout>\n        )\n    }\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.6);\n    width: var(--partialWidth);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 60%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n"],"sourceRoot":""}