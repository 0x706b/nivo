{"version":3,"sources":["webpack:///./src/data/components/area-bump/props.js","webpack:///./src/data/components/area-bump/mapper.js","webpack:///./src/pages/area-bump/index.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/bump/compute.js","webpack:///../src/bump/hooks.js","webpack:///../src/bump/LineTooltip.js","webpack:///../src/bump/Point.js","webpack:///../src/bump/props.js","webpack:///../src/bump/Line.js","webpack:///../src/bump/LinesLabels.js","webpack:///../src/bump/Points.js","webpack:///../src/bump/Bump.js","webpack:///../src/bump/ResponsiveBump.js","webpack:///../src/area-bump/AreaTooltip.js","webpack:///../src/area-bump/props.js","webpack:///../src/area-bump/hooks.js","webpack:///../src/area-bump/compute.js","webpack:///../src/area-bump/Area.js","webpack:///../src/area-bump/AreasLabels.js","webpack:///../src/area-bump/AreaBump.js","webpack:///../src/area-bump/ResponsiveAreaBump.js","webpack:///../src/compute.js","webpack:///../src/props.js","webpack:///../src/components/AxisTick.js","webpack:///../src/components/Axis.js","webpack:///../src/components/Axes.js","webpack:///../src/components/GridLine.js","webpack:///../src/components/GridLines.js","webpack:///../src/components/Grid.js","webpack:///../src/utils.js","webpack:///../src/canvas.js"],"names":["props","key","group","help","description","required","type","enableControlForFlavors","controlType","controlOptions","unit","min","max","step","defaultValue","defaults","align","choices","label","value","interpolation","spacing","xPadding","themeProperty","colors","blendMode","fillOpacity","activeFillOpacity","inactiveFillOpacity","borderWidth","activeBorderWidth","inactiveBorderWidth","borderColor","borderOpacity","activeBorderOpacity","inactiveBorderOpacity","defsProperties","startLabel","startLabelPadding","startLabelTextColor","endLabel","endLabelPadding","endLabelTextColor","enableGridX","axesProperties","exclude","isInteractive","motionProperties","groups","groupProperties","settingsMapper","axisTop","mapAxis","axisBottom","serieIds","generateData","years","range","map","id","data","year","x","y","random","initialProperties","margin","top","right","bottom","left","AreaBumpDefaultProps","scheme","defs","patternDotsDef","background","color","size","padding","stagger","patternLinesDef","rotation","lineWidth","fill","match","enable","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","animate","motionConfig","Bump","ComponentTemplate","name","meta","AreaBump","icon","flavors","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","theme","logAction","onClick","serie","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","from","test","unsupportedIterableToArray","TypeError","nonIterableRest","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","useSerieDerivedProp","instruction","useMemo","useBump","width","height","xOuterPadding","yOuterPadding","activeLineWidth","inactiveLineWidth","opacity","activeOpacity","inactiveOpacity","pointSize","activePointSize","inactivePointSize","pointColor","pointBorderWidth","activePointBorderWidth","inactivePointBorderWidth","pointBorderColor","currentSerie","xValues","datum","xScale","scalePoint","yScale","linePointPadding","Math","series","rawSerie","points","linePoints","point","computeSeries","rawSeries","lineGenerator","d","useLineGenerator","getColor","useOrdinalColorScale","getSerieStyle","getLineWidth","getActiveLineWidth","getInactiveLineWidth","getOpacity","getActiveOpacity","getInactiveOpacity","getNormalStyle","getActiveStyle","getInactiveStyle","useSerieStyle","useTheme","getPointColor","useInheritedColor","getPointBorderColor","getPointStyle","getSize","getActiveSize","getInactiveSize","getBorderWidth","getActiveBorderWidth","getInactiveBorderWidth","usePointStyle","pts","rawPoint","serieId","isActive","isInactive","memo","enableChip","pointStyle","pointerEvents","useMotionConfig","springConfig","animatedProps","useSpring","radius","config","immediate","cx","cy","r","v","strokeWidth","stroke","style","BumpDefaultProps","PropTypes","isRequired","layers","ordinalColorsPropType","inheritedColorPropType","pointComponent","enableGridY","axisRight","axisLeft","onMouseEnter","onMouseMove","onMouseLeave","tooltip","role","modifiers","LineTooltip","yStep","handlers","setCurrent","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","handleMouseMove","handleMouseLeave","handleClick","useSerieHandlers","setCurrentSerie","linePath","animatedPath","useAnimatedPath","strokeLinecap","strokeOpacity","getLabel","position","labels","textAnchor","signedPadding","useSeriesLabels","useSprings","dominantBaseline","partialMargin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","useState","layerById","grid","axes","lines","layer","withContainer","ResponsiveBump","blendModePropType","AreaTooltip","useAreaBumpSeries","slices","maxSum","maxValues","total","values","Map","heightScale","scaleLinear","sliceHeight","offset","b","a","previousValues","all","pos","beforeValue","t","sliceValue","areaPointPadding","serieCopy","beforeHeight","y0","y1","useAreaBump","current","areaGenerator","useAreaGenerator","getFillOpacity","getActiveFillOpacity","getInactiveFillOpacity","getBorderColor","getBorderOpacity","getActiveBorderOpacity","getInactiveBorderOpacity","mixBlendMode","boundDefs","bindDefs","targetKey","areas","ResponsiveAreaBump","centerScale","scale","bandwidth","timeByType","millisecond","second","minute","hour","day","week","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month","timeTypes","timeIntervalRegexp","RegExp","isInteger","isFinite","getScaleTicks","spec","matches","timeType","Number","computeCartesianTicks","axis","ticksPosition","tickValues","engine","textProps","textPropsByEngine","line","lineX","lineY","text","textX","textY","textAlign","textBaseline","translate","ticks","getFormatter","f","timeFormat","Date","d3Format","computeGridLines","_values","lineValues","lineCount","x1","x2","y2","axisPropTypes","format","renderTick","ariaHidden","bool","axisPropType","AxisTick","_value","gStyle","transform","e","rotate","Axis","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transitions","useTransition","tick","initial","textTransform","enter","update","leave","aria-hidden","item","transitionProps","tickIndex","positions","isXAxis","GridLine","yValues","xLines","yLines","degreesToRadians","degrees","renderAxisToCanvas","ctx","renderAxesToCanvas","renderGridLinesToCanvas"],"mappings":"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","file":"component---src-pages-area-bump-index-js-a6a3b4b954216724d09b.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { AreaBumpDefaultProps as defaults } from '@nivo/bump'\nimport {\n    themeProperty,\n    axesProperties,\n    defsProperties,\n    groupProperties,\n    motionProperties,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:   string\n                data: Array<{\n                    x: number | string\n                    y: number\n                }>\n            }>\n            \\`\\`\\`\n            This component assumes that every serie contains all\n            x values sorted the same way they should appear on the chart.\n        `,\n        required: true,\n        type: 'object[]',\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive component.\n            Also note that width does not include labels/axes,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive component.\n            Also note that height does not include labels/axes,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        group: 'Base',\n        type: 'object',\n        help: 'Chart margin.',\n        controlType: 'margin',\n    },\n    {\n        key: 'align',\n        group: 'Base',\n        help: `Chart alignment.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.align,\n        controlType: 'choices',\n        controlOptions: {\n            choices: [\n                { label: 'start', value: 'start' },\n                { label: 'middle', value: 'middle' },\n                { label: 'end', value: 'end' },\n            ],\n        },\n    },\n    {\n        key: 'interpolation',\n        group: 'Base',\n        type: 'string',\n        help: `Area interpolation.`,\n        required: false,\n        defaultValue: defaults.interpolation,\n        controlType: 'radio',\n        controlOptions: {\n            choices: [\n                { label: 'smooth', value: 'smooth' },\n                { label: 'linear', value: 'linear' },\n            ],\n        },\n    },\n    {\n        key: 'spacing',\n        group: 'Base',\n        type: 'number',\n        defaultValue: defaults.spacing,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'xPadding',\n        group: 'Base',\n        type: 'number',\n        defaultValue: defaults.xPadding,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        group: 'Style',\n        type: 'string | Function | string[]',\n        help: 'Defines color range.',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n    },\n    {\n        key: 'blendMode',\n        group: 'Style',\n        type: 'string',\n        help: 'Defines CSS mix-blend-mode property.',\n        description: `\n            Defines CSS \\`mix-blend-mode\\` property, see\n            [MDN documentation](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode).\n        `,\n        required: false,\n        defaultValue: defaults.blendMode,\n        controlType: 'blendMode',\n    },\n    {\n        key: 'fillOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Area fill opacity.',\n        defaultValue: defaults.fillOpacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'activeFillOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Area fill opacity for active series.',\n        defaultValue: defaults.activeFillOpacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'inactiveFillOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Area fill opacity for inactive series.',\n        defaultValue: defaults.inactiveFillOpacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'borderWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Area border width.',\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'activeBorderWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Area border width for active series.',\n        defaultValue: defaults.activeBorderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'inactiveBorderWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Area border width for inactive series.',\n        defaultValue: defaults.inactiveBorderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute area border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'borderOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Area border opacity.',\n        defaultValue: defaults.borderOpacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'activeBorderOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Area border opacity for active series.',\n        defaultValue: defaults.activeBorderOpacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'inactiveBorderOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Area border opacity for inactive series.',\n        defaultValue: defaults.inactiveBorderOpacity,\n        controlType: 'opacity',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'startLabel',\n        group: 'Labels',\n        type: 'false | string | (serie: Serie) => string',\n        defaultValue: defaults.startLabel,\n    },\n    {\n        key: 'startLabelPadding',\n        group: 'Labels',\n        type: 'number',\n        defaultValue: defaults.startLabelPadding,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'startLabelTextColor',\n        help: 'Method to compute start label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.startLabelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'endLabel',\n        group: 'Labels',\n        type: 'false | string | (serie: Serie) => string',\n        defaultValue: defaults.endLabel,\n    },\n    {\n        key: 'endLabelPadding',\n        group: 'Labels',\n        type: 'number',\n        defaultValue: defaults.endLabelPadding,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'endLabelTextColor',\n        help: 'Method to compute end label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.endLabelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'enableGridX',\n        group: 'Grid & Axes',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n    },\n    ...axesProperties({ exclude: ['right', 'left'] }),\n    {\n        key: 'isInteractive',\n        group: 'Interactivity',\n        type: 'boolean',\n        help: 'Enable/disable interactivity.',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n    },\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onMouseEnter handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onMouseMove handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onMouseLeave handler.',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onClick handler.',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the series's data.\n        `,\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper, mapAxis } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        axisTop: mapAxis('top'),\n        axisBottom: mapAxis('bottom'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisBottom'],\n    }\n)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport range from 'lodash/range'\nimport random from 'lodash/random'\nimport { patternDotsDef, patternLinesDef } from '@nivo/core'\nimport { ResponsiveAreaBump, AreaBumpDefaultProps } from '@nivo/bump'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/area-bump/meta.yml'\nimport { groups } from '../../data/components/area-bump/props'\nimport mapper from '../../data/components/area-bump/mapper'\n\nconst serieIds = ['JavaScript', 'ReasonML', 'TypeScript', 'Elm', 'CoffeeScript']\nconst generateData = () => {\n    const years = range(2000, 2006)\n\n    const series = serieIds.map(id => ({\n        id,\n        data: years.map(year => ({\n            x: year,\n            y: random(10, 30),\n        })),\n    }))\n\n    return series\n}\n\nconst initialProperties = {\n    margin: {\n        top: 40,\n        right: 100,\n        bottom: 40,\n        left: 100,\n    },\n\n    align: AreaBumpDefaultProps.align,\n    interpolation: AreaBumpDefaultProps.interpolation,\n    spacing: 8,\n    xPadding: AreaBumpDefaultProps.xPadding,\n\n    colors: { scheme: 'nivo' },\n    blendMode: 'multiply',\n    fillOpacity: AreaBumpDefaultProps.fillOpacity,\n    activeFillOpacity: AreaBumpDefaultProps.activeFillOpacity,\n    inactiveFillOpacity: AreaBumpDefaultProps.inactiveFillOpacity,\n    defs: [\n        patternDotsDef('dots', {\n            background: 'inherit',\n            color: '#38bcb2',\n            size: 4,\n            padding: 1,\n            stagger: true,\n        }),\n        patternLinesDef('lines', {\n            background: 'inherit',\n            color: '#eed312',\n            rotation: -45,\n            lineWidth: 6,\n            spacing: 10,\n        }),\n    ],\n    fill: [\n        { match: { id: 'CoffeeScript' }, id: 'dots' },\n        { match: { id: 'TypeScript' }, id: 'lines' },\n    ],\n    borderWidth: AreaBumpDefaultProps.borderWidth,\n    activeBorderWidth: AreaBumpDefaultProps.activeBorderWidth,\n    inactiveBorderWidth: AreaBumpDefaultProps.inactiveBorderWidth,\n    borderColor: AreaBumpDefaultProps.borderColor,\n    borderOpacity: AreaBumpDefaultProps.borderOpacity,\n    activeBorderOpacity: AreaBumpDefaultProps.activeBorderOpacity,\n    inactiveBorderOpacity: AreaBumpDefaultProps.inactiveBorderOpacity,\n\n    startLabel: 'id',\n    startLabelPadding: AreaBumpDefaultProps.startLabelPadding,\n    startLabelTextColor: AreaBumpDefaultProps.startLabelTextColor,\n    endLabel: 'id',\n    endLabelPadding: AreaBumpDefaultProps.endLabelPadding,\n    endLabelTextColor: AreaBumpDefaultProps.endLabelTextColor,\n\n    enableGridX: AreaBumpDefaultProps.enableGridX,\n    axisTop: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: -36,\n    },\n    axisBottom: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: 32,\n    },\n\n    isInteractive: true,\n\n    animate: AreaBumpDefaultProps.animate,\n    motionConfig: AreaBumpDefaultProps.motionConfig,\n}\n\nconst Bump = () => {\n    return (\n        <ComponentTemplate\n            name=\"AreaBump\"\n            meta={meta.AreaBump}\n            icon=\"area-bump\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            defaultProperties={AreaBumpDefaultProps}\n            initialProperties={initialProperties}\n            propertiesMapper={mapper}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveAreaBump\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={serie =>\n                            logAction({\n                                type: 'click',\n                                label: `[serie] ${serie.id}`,\n                                color: serie.color,\n                                data: serie,\n                            })\n                        }\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Bump\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint } from 'd3-scale'\n\nexport const computeSeries = ({ width, height, data, xPadding, xOuterPadding, yOuterPadding }) => {\n    let xValues = new Set()\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!xValues.has(datum.x)) {\n                xValues.add(datum.x)\n            }\n        })\n    })\n    xValues = Array.from(xValues)\n\n    const xScale = scalePoint().domain(xValues).range([0, width]).padding(xOuterPadding)\n\n    const yScale = scalePoint()\n        .domain(data.map((serie, i) => i + 1))\n        .range([0, height])\n        .padding(yOuterPadding)\n\n    const linePointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(rawSerie => {\n        const serie = {\n            ...rawSerie,\n            points: [],\n            linePoints: [],\n        }\n\n        rawSerie.data.forEach((datum, i) => {\n            let x = null\n            let y = null\n            if (datum.y !== null && datum.y !== undefined) {\n                x = xScale(datum.x)\n                y = yScale(datum.y)\n            }\n            const point = {\n                id: `${rawSerie.id}.${i}`,\n                serie: rawSerie,\n                data: datum,\n                x,\n                y,\n            }\n            serie.points.push(point)\n\n            // only add pre transition point if the datum is not empty\n            if (x !== null) {\n                if (i === 0) {\n                    serie.linePoints.push([0, point.y])\n                } else {\n                    serie.linePoints.push([point.x - linePointPadding, point.y])\n                }\n            }\n\n            serie.linePoints.push([point.x, point.y])\n\n            // only add post transition point if the datum is not empty\n            if (x !== null) {\n                if (i === rawSerie.data.length - 1 && x) {\n                    serie.linePoints.push([width, point.y])\n                } else {\n                    serie.linePoints.push([point.x + linePointPadding, point.y])\n                }\n            }\n\n            // remove points having null coordinates\n            serie.points = serie.points.filter(point => point.x !== null)\n        })\n\n        return serie\n    })\n\n    return {\n        series,\n        xScale,\n        yScale,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport { line as d3Line, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { computeSeries } from './compute'\n\nexport const useLineGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Line()\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n                .defined(d => d[0] !== null && d[1] !== null),\n\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getLineWidth = useSerieDerivedProp(lineWidth)\n    const getActiveLineWidth = useSerieDerivedProp(activeLineWidth)\n    const getInactiveLineWidth = useSerieDerivedProp(inactiveLineWidth)\n\n    const getOpacity = useSerieDerivedProp(opacity)\n    const getActiveOpacity = useSerieDerivedProp(activeOpacity)\n    const getInactiveOpacity = useSerieDerivedProp(inactiveOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            lineWidth: getLineWidth(serie),\n            opacity: getOpacity(serie),\n        }),\n        [getLineWidth, getOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getActiveLineWidth(serie),\n            opacity: getActiveOpacity(serie),\n        }),\n        [getActiveLineWidth, getActiveOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getInactiveLineWidth(serie),\n            opacity: getInactiveOpacity(serie),\n        }),\n        [getInactiveLineWidth, getInactiveOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (currentSerie === null) return getNormalStyle(serie)\n            if (serie.id === currentSerie) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const usePointStyle = ({\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getSize = useSerieDerivedProp(pointSize)\n    const getActiveSize = useSerieDerivedProp(activePointSize)\n    const getInactiveSize = useSerieDerivedProp(inactivePointSize)\n\n    const getBorderWidth = useSerieDerivedProp(pointBorderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activePointBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactivePointBorderWidth)\n\n    const getNormalStyle = useMemo(\n        () => point => ({\n            size: getSize(point),\n            borderWidth: getBorderWidth(point),\n        }),\n        [getSize, getBorderWidth]\n    )\n    const getActiveStyle = useMemo(\n        () => point => ({\n            size: getActiveSize(point),\n            borderWidth: getActiveBorderWidth(point),\n        }),\n        [getActiveSize, getActiveBorderWidth]\n    )\n    const getInactiveStyle = useMemo(\n        () => point => ({\n            size: getInactiveSize(point),\n            borderWidth: getInactiveBorderWidth(point),\n        }),\n        [getInactiveSize, getInactiveBorderWidth]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return point => {\n            if (currentSerie === null) return getNormalStyle(point)\n            if (point.serieId === currentSerie) return getActiveStyle(point)\n            return getInactiveStyle(point)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const useBump = ({\n    width,\n    height,\n    data,\n    interpolation,\n    xPadding,\n    xOuterPadding,\n    yOuterPadding,\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    colors,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointColor,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    pointBorderColor,\n    isInteractive,\n    currentSerie,\n}) => {\n    const { series: rawSeries, xScale, yScale } = useMemo(\n        () =>\n            computeSeries({\n                width,\n                height,\n                data,\n                xPadding,\n                xOuterPadding,\n                yOuterPadding,\n            }),\n        [width, height, data, xPadding, xOuterPadding, yOuterPadding]\n    )\n\n    const lineGenerator = useLineGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        isInteractive,\n        currentSerie,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                serie.color = getColor(serie)\n                serie.style = getSerieStyle(serie)\n\n                return serie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const getPointStyle = usePointStyle({\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        isInteractive,\n        currentSerie,\n    })\n    const points = useMemo(() => {\n        const pts = []\n        series.forEach(serie => {\n            serie.points.forEach(rawPoint => {\n                const point = {\n                    ...rawPoint,\n                    serie,\n                    serieId: serie.id,\n                    isActive: currentSerie === serie.id,\n                    isInactive: currentSerie !== null && currentSerie !== serie.id,\n                }\n                point.color = getPointColor(point)\n                point.borderColor = getPointBorderColor(point)\n                point.style = getPointStyle({ ...point, serie })\n                pts.push(point)\n            })\n        })\n\n        return pts\n    }, [series, getPointColor, getPointBorderColor, getPointStyle, currentSerie])\n\n    return {\n        xScale,\n        yScale,\n        series,\n        points,\n        lineGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color, getLabel }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        const labels = []\n        series.forEach(serie => {\n            let label = serie.id\n            if (typeof getLabel === 'function') {\n                label = getLabel(serie)\n            }\n\n            const point =\n                position === 'start'\n                    ? serie.linePoints[0]\n                    : serie.linePoints[serie.linePoints.length - 1]\n\n            // exclude labels for series having missing data at the beginning/end\n            if (point[0] === null || point[1] === null) {\n                return\n            }\n\n            labels.push({\n                id: serie.id,\n                label,\n                x: point[0] + signedPadding,\n                y: point[1],\n                color: getColor(serie),\n                opacity: serie.style.opacity,\n                serie,\n                textAnchor,\n            })\n        })\n\n        return labels\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LineTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nLineTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(LineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\n\nconst pointStyle = { pointerEvents: 'none' }\n\nconst Point = ({ x, y, size, color, borderColor, borderWidth }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        color,\n        borderWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius.interpolate(v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            strokeWidth={animatedProps.borderWidth}\n            stroke={borderColor}\n            style={pointStyle}\n        />\n    )\n}\n\nPoint.propTypes = {\n    data: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    isActive: PropTypes.bool.isRequired,\n    isInactive: PropTypes.bool.isRequired,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n}\n\nexport default memo(Point)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport LineTooltip from './LineTooltip'\nimport Point from './Point'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['grid', 'axes', 'labels', 'lines', 'points']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    xPadding: PropTypes.number.isRequired,\n    xOuterPadding: PropTypes.number.isRequired,\n    yOuterPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    lineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    opacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    pointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointColor: inheritedColorPropType.isRequired,\n    pointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointBorderColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const BumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    layers: ['grid', 'axes', 'labels', 'lines', 'points'],\n\n    interpolation: 'smooth',\n    xPadding: 0.6,\n    xOuterPadding: 0.5,\n    yOuterPadding: 0.5,\n\n    colors: { scheme: 'nivo' },\n    lineWidth: 2,\n    activeLineWidth: 4,\n    inactiveLineWidth: 1,\n    opacity: 1,\n    activeOpacity: 1,\n    inactiveOpacity: 0.3,\n\n    startLabel: false,\n    startLabelPadding: 16,\n    startLabelTextColor: { from: 'color' },\n    endLabel: 'id',\n    endLabelPadding: 16,\n    endLabelTextColor: { from: 'color' },\n\n    pointSize: 6,\n    activePointSize: 8,\n    inactivePointSize: 4,\n    pointColor: { from: 'serie.color' },\n    pointBorderWidth: 0,\n    activePointBorderWidth: 0,\n    inactivePointBorderWidth: 0,\n    pointBorderColor: { from: 'serie.color', modifiers: [['darker', 1.4]] },\n\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {},\n    axisBottom: {},\n    axisLeft: {},\n\n    isInteractive: true,\n    tooltip: LineTooltip,\n}\n\nexport const BumpDefaultProps = {\n    ...commonDefaultProps,\n    pointComponent: Point,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useSerieHandlers } from './hooks'\n\nconst Line = ({\n    serie,\n    lineGenerator,\n    yStep,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const linePath = lineGenerator(serie.linePoints)\n\n    const animatedPath = useAnimatedPath(linePath)\n    const animatedProps = useSpring({\n        color: serie.color,\n        opacity: serie.style.opacity,\n        lineWidth: serie.style.lineWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            <animated.path\n                fill=\"none\"\n                d={animatedPath}\n                stroke={animatedProps.color}\n                strokeWidth={animatedProps.lineWidth}\n                strokeLinecap=\"round\"\n                strokeOpacity={animatedProps.opacity}\n                style={{ pointerEvents: 'none' }}\n            />\n            {isInteractive && (\n                <path\n                    fill=\"none\"\n                    stroke=\"red\"\n                    strokeOpacity={0}\n                    strokeWidth={yStep}\n                    d={linePath}\n                    strokeLinecap=\"butt\"\n                    onMouseEnter={handlers.onMouseEnter}\n                    onMouseMove={handlers.onMouseMove}\n                    onMouseLeave={handlers.onMouseLeave}\n                    onClick={handlers.onClick}\n                />\n            )}\n        </>\n    )\n}\n\nLine.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        linePoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            lineWidth: PropTypes.number.isRequired,\n            opacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    yStep: PropTypes.number.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { useSeriesLabels } from './hooks'\n\nconst LinesLabels = ({ series, getLabel, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        getLabel,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.label}\n            </animated.text>\n        )\n    })\n}\n\nLinesLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    getLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(LinesLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Points = ({ pointComponent, points }) => {\n    return points.map(point => {\n        return React.createElement(pointComponent, {\n            key: point.id,\n            data: point.data,\n            x: point.x,\n            y: point.y,\n            isActive: point.isActive,\n            isInactive: point.isInactive,\n            size: point.style.size,\n            color: point.color,\n            borderColor: point.borderColor,\n            borderWidth: point.style.borderWidth,\n        })\n    })\n}\n\nPoints.propTypes = {\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.object.isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            isActive: PropTypes.bool.isRequired,\n            isInactive: PropTypes.bool.isRequired,\n            color: PropTypes.string.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            style: PropTypes.shape({\n                size: PropTypes.number.isRequired,\n                borderWidth: PropTypes.number.isRequired,\n            }).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useState, Fragment } from 'react'\nimport { withContainer, useDimensions, SvgWrapper } from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { useBump } from './hooks'\nimport { BumpPropTypes, BumpDefaultProps } from './props'\nimport Line from './Line'\nimport LinesLabels from './LinesLabels'\nimport Points from './Points'\n\nconst Bump = props => {\n    const {\n        data,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n\n        colors,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        pointComponent,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { series, points, xScale, yScale, lineGenerator } = useBump({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        colors,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n        startLabel,\n        endLabel,\n        isInteractive,\n        currentSerie,\n    })\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        labels: [],\n        lines: (\n            <Fragment key=\"lines\">\n                {series.map(serie => (\n                    <Line\n                        key={serie.id}\n                        serie={serie}\n                        currentSerie={currentSerie}\n                        setCurrentSerie={setCurrentSerie}\n                        lineGenerator={lineGenerator}\n                        yStep={yScale.step()}\n                        margin={margin}\n                        isInteractive={isInteractive}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n        points: <Points key=\"points\" pointComponent={pointComponent} points={points} />,\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"start\"\n                series={series}\n                getLabel={startLabel}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"end\"\n                series={series}\n                getLabel={endLabel}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                innerWidth,\n                                innerHeight,\n                                xScale,\n                                yScale,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nBump.propTypes = BumpPropTypes\nBump.defaultProps = BumpDefaultProps\n\nexport default memo(withContainer(Bump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Bump from './Bump'\n\nconst ResponsiveBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveBump\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst AreaTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nAreaTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(AreaTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes, blendModePropType } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport AreaTooltip from './AreaTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.number.isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    align: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['grid', 'axes', 'labels', 'areas']), PropTypes.func])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    spacing: PropTypes.number.isRequired,\n    xPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    blendMode: blendModePropType.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    activeFillOpacity: PropTypes.number.isRequired,\n    inactiveFillOpacity: PropTypes.number.isRequired,\n    defs: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    fill: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            match: PropTypes.oneOfType([PropTypes.oneOf(['*']), PropTypes.object, PropTypes.func])\n                .isRequired,\n        })\n    ).isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    activeBorderWidth: PropTypes.number.isRequired,\n    inactiveBorderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    borderOpacity: PropTypes.number.isRequired,\n    activeBorderOpacity: PropTypes.number.isRequired,\n    inactiveBorderOpacity: PropTypes.number.isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisBottom: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const AreaBumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    align: 'middle',\n\n    layers: ['grid', 'axes', 'labels', 'areas'],\n\n    interpolation: 'smooth',\n    spacing: 0,\n    xPadding: 0.6,\n\n    colors: { scheme: 'nivo' },\n    blendMode: 'normal',\n    fillOpacity: 0.8,\n    activeFillOpacity: 1,\n    inactiveFillOpacity: 0.15,\n    defs: [],\n    fill: [],\n    borderWidth: 1,\n    activeBorderWidth: 1,\n    inactiveBorderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 0.4]] },\n    borderOpacity: 1,\n    activeBorderOpacity: 1,\n    inactiveBorderOpacity: 0,\n\n    startLabel: false,\n    startLabelPadding: 12,\n    startLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    endLabel: 'id',\n    endLabelPadding: 12,\n    endLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    enableGridX: true,\n    axisTop: {},\n    axisBottom: {},\n\n    isInteractive: true,\n    tooltip: AreaTooltip,\n}\n\nexport const AreaBumpDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport { area as d3Area, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { computeSeries } from './compute'\n\nexport const useAreaBumpSeries = ({ data, width, height, align, spacing, xPadding }) =>\n    useMemo(() => computeSeries({ data, width, height, align, spacing, xPadding }), [\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    ])\n\nexport const useAreaGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Area()\n                .x(d => d.x)\n                .y0(d => d.y0)\n                .y1(d => d.y1)\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const getFillOpacity = useSerieDerivedProp(fillOpacity)\n    const getActiveFillOpacity = useSerieDerivedProp(activeFillOpacity)\n    const getInactiveFillOpacity = useSerieDerivedProp(inactiveFillOpacity)\n\n    const getBorderWidth = useSerieDerivedProp(borderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activeBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactiveBorderWidth)\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getBorderOpacity = useSerieDerivedProp(borderOpacity)\n    const getActiveBorderOpacity = useSerieDerivedProp(activeBorderOpacity)\n    const getInactiveBorderOpacity = useSerieDerivedProp(inactiveBorderOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getFillOpacity(serie),\n            borderWidth: getBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getBorderOpacity(serie),\n        }),\n        [getFillOpacity, getBorderWidth, getBorderColor, getBorderOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getActiveFillOpacity(serie),\n            borderWidth: getActiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getActiveBorderOpacity(serie),\n        }),\n        [getActiveFillOpacity, getActiveBorderWidth, getBorderColor, getActiveBorderOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getInactiveFillOpacity(serie),\n            borderWidth: getInactiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getInactiveBorderOpacity(serie),\n        }),\n        [getInactiveFillOpacity, getInactiveBorderWidth, getBorderColor, getInactiveBorderOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (current === null) return getNormalStyle(serie)\n            if (serie.id === current) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, current])\n}\n\nexport const useAreaBump = ({\n    data,\n    width,\n    height,\n    align,\n    spacing,\n    xPadding,\n    interpolation,\n    colors,\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const { series: rawSeries, xScale, heightScale } = useAreaBumpSeries({\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    })\n\n    const areaGenerator = useAreaGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                serie.color = getColor(serie)\n                serie.style = getSerieStyle(serie)\n\n                return serie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    return {\n        series,\n        xScale,\n        heightScale,\n        areaGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        return series.map(serie => {\n            const point =\n                position === 'start' ? serie.points[0] : serie.points[serie.points.length - 1]\n\n            return {\n                id: serie.id,\n                x: point.x + signedPadding,\n                y: point.y,\n                color: getColor(serie),\n                opacity: serie.style.fillOpacity,\n                serie,\n                textAnchor,\n            }\n        })\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint, scaleLinear } from 'd3-scale'\n\nexport const computeSeries = ({ data, width, height, align, spacing, xPadding }) => {\n    const slices = new Map()\n\n    let maxSum = null\n    let maxValues = null\n\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!slices.has(datum.x)) {\n                slices.set(datum.x, {\n                    id: datum.x,\n                    total: 0,\n                    values: new Map(),\n                })\n            }\n\n            const slice = slices.get(datum.x)\n\n            const total = slice.total + datum.y\n            slice.total = total\n\n            slice.values.set(serie.id, {\n                serieId: serie.id,\n                value: datum.y,\n            })\n\n            if (total === null || total > maxSum) {\n                maxSum = total\n                maxValues = slice.values.size\n            }\n        })\n    })\n\n    const xScale = scalePoint().domain(Array.from(slices.keys())).range([0, width])\n\n    const heightScale = scaleLinear()\n        .domain([0, maxSum])\n        .range([0, height - maxValues * spacing])\n\n    slices.forEach((slice, x) => {\n        slice.x = xScale(x)\n        const sliceHeight = heightScale(slice.total) + slice.values.size * spacing\n\n        let offset = 0\n        if (align === 'middle') {\n            offset = (height - sliceHeight) / 2\n        } else if (align === 'end') {\n            offset = height - sliceHeight\n        }\n\n        Array.from(slice.values.values())\n            .sort((a, b) => b.value - a.value)\n            .forEach((value, position, all) => {\n                const previousValues = all.filter((i, pos) => pos < position)\n                const beforeValue = previousValues.reduce((t, v) => t + v.value, 0)\n\n                const sliceValue = slice.values.get(value.serieId)\n                sliceValue.position = position\n                sliceValue.height = heightScale(value.value)\n                sliceValue.beforeHeight =\n                    heightScale(beforeValue) + offset + spacing * (previousValues.length + 0.5)\n            })\n    })\n\n    const areaPointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(serie => {\n        const serieCopy = { ...serie }\n        serieCopy.points = []\n        serieCopy.areaPoints = []\n        serie.data.forEach((datum, i) => {\n            const slice = slices.get(datum.x)\n            const position = slice.values.get(serie.id)\n\n            const x = slice.x\n            const { beforeHeight, height } = position\n            const y = beforeHeight + height / 2\n            const y0 = beforeHeight\n            const y1 = beforeHeight + height\n\n            serieCopy.points.push({\n                x,\n                y,\n                height,\n                data: { ...datum },\n            })\n            if (i > 0) {\n                serieCopy.areaPoints.push({ x: x - areaPointPadding, y0, y1 })\n            }\n            serieCopy.areaPoints.push({ x, y0, y1 })\n            if (i < serie.data.length - 1) {\n                serieCopy.areaPoints.push({ x: x + areaPointPadding, y0, y1 })\n            }\n        })\n\n        return serieCopy\n    })\n\n    return {\n        xScale,\n        heightScale,\n        series,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\nimport { useSerieHandlers } from './hooks'\n\nconst Area = ({\n    serie,\n    areaGenerator,\n    blendMode,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(areaGenerator(serie.areaPoints))\n    const animatedProps = useSpring({\n        color: serie.color,\n        fillOpacity: serie.style.fillOpacity,\n        stroke: serie.style.borderColor,\n        strokeOpacity: serie.style.borderOpacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={serie.fill ? serie.fill : animatedProps.color}\n            fillOpacity={animatedProps.fillOpacity}\n            stroke={animatedProps.stroke}\n            strokeWidth={serie.style.borderWidth}\n            strokeOpacity={animatedProps.strokeOpacity}\n            style={{ mixBlendMode: blendMode }}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n\nArea.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        fill: PropTypes.string,\n        areaPoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            fillOpacity: PropTypes.number.isRequired,\n            borderWidth: PropTypes.number.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            borderOpacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    areaGenerator: PropTypes.func.isRequired,\n    blendMode: blendModePropType.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Area)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { useSeriesLabels } from './hooks'\n\nconst AreasLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.id}\n            </animated.text>\n        )\n    })\n}\n\nAreasLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(AreasLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useState, Fragment, useMemo } from 'react'\nimport { bindDefs, withContainer, useDimensions, SvgWrapper } from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { AreaBumpPropTypes, AreaBumpDefaultProps } from './props'\nimport { useAreaBump } from './hooks'\nimport Area from './Area'\nimport AreasLabels from './AreasLabels'\n\nconst AreaBump = props => {\n    const {\n        data,\n        align,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        spacing,\n        xPadding,\n\n        colors,\n        blendMode,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        defs,\n        fill,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        enableGridX,\n        axisTop,\n        axisBottom,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { series, xScale, areaGenerator } = useAreaBump({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        align,\n        spacing,\n        xPadding,\n        interpolation,\n        colors,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current: currentSerie,\n    })\n\n    const boundDefs = useMemo(() => bindDefs(defs, series, fill, { targetKey: 'fill' }), [\n        defs,\n        series,\n        fill,\n    ])\n\n    const layerById = {\n        grid: enableGridX && (\n            <Grid key=\"grid\" width={innerWidth} height={innerHeight} xScale={xScale} />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                bottom={axisBottom}\n            />\n        ),\n        labels: [],\n        areas: (\n            <Fragment key=\"areas\">\n                {series.map(serie => (\n                    <Area\n                        key={serie.id}\n                        areaGenerator={areaGenerator}\n                        serie={serie}\n                        blendMode={blendMode}\n                        isInteractive={isInteractive}\n                        setCurrentSerie={setCurrentSerie}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"start\"\n                series={series}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"end\"\n                series={series}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                outerWidth,\n                                outerHeight,\n                                series,\n                                xScale,\n                                areaGenerator,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nAreaBump.propTypes = AreaBumpPropTypes\nAreaBump.defaultProps = AreaBumpDefaultProps\n\nexport default memo(withContainer(AreaBump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport AreaBump from './AreaBump'\n\nconst ResponsiveAreaBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <AreaBump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveAreaBump\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\nimport { textPropsByEngine } from '@nivo/core'\n\nexport const centerScale = scale => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return d => scale(d) + offset\n}\n\nconst timeByType = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = value =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = (scale, spec) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    // continuous scales\n    if (scale.ticks) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n\n        if (typeof spec === 'string') {\n            // time interval\n            const matches = spec.match(timeIntervalRegexp)\n            if (matches) {\n                // UTC is used as it's more predictible\n                // however local time could be used too\n                // let's see how it fits users' requirements\n                const timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0]\n                if (matches[1] === undefined) {\n                    return scale.ticks(timeType)\n                }\n\n                return scale.ticks(timeType.every(Number(matches[1])))\n            }\n\n            throw new Error(`Invalid tickValues: ${spec}`)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n\nexport const computeCartesianTicks = ({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}) => {\n    const values = getScaleTicks(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    let translate\n    let textAlign = textProps.align.center\n    let textBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d), y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align.right\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align.left\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: value,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = (format, scale) => {\n    if (!format || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const f = timeFormat(format)\n        return d => f(new Date(d))\n    }\n\n    return d3Format(format)\n}\n\nexport const computeGridLines = ({ width, height, scale, axis, values: _values }) => {\n    const lineValues = Array.isArray(_values) ? _values : undefined\n    const lineCount = isInteger(_values) ? _values : undefined\n\n    const values = lineValues || getScaleTicks(scale, lineCount)\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n\n    let lines\n    if (axis === 'x') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: position(v),\n            x2: position(v),\n            y1: 0,\n            y2: height,\n        }))\n    } else if (axis === 'y') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: 0,\n            x2: width,\n            y1: position(v),\n            y2: position(v),\n        }))\n    }\n\n    return lines\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport { animated } from 'react-spring'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\n\nconst AxisTick = ({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}) => {\n    const theme = useTheme()\n\n    let value = _value\n    if (format !== undefined) {\n        value = format(value)\n    }\n\n    let gStyle = { opacity: animatedProps.opacity }\n    if (onClick) {\n        gStyle['cursor'] = 'pointer'\n    }\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            {...(onClick ? { onClick: e => onClick(e, value) } : {})}\n            style={gStyle}\n        >\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nAxisTick.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        .isRequired,\n    format: PropTypes.func,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    lineX: PropTypes.number.isRequired,\n    lineY: PropTypes.number.isRequired,\n    textX: PropTypes.number.isRequired,\n    textY: PropTypes.number.isRequired,\n    textBaseline: PropTypes.string.isRequired,\n    textAnchor: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    rotate: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    animatedProps: PropTypes.object.isRequired,\n}\nAxisTick.defaultProps = {\n    opacity: 1,\n    rotate: 0,\n}\n\nexport default memo(AxisTick)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, useTransition, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { axisPropTypes } from '../props'\nimport AxisTick from './AxisTick'\n\nconst defaultTickRenderer = props => <AxisTick {...props} />\n\nconst Axis = ({\n    axis,\n    scale,\n    x,\n    y,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    format,\n    renderTick,\n    legend,\n    legendPosition,\n    legendOffset,\n    onClick,\n    ariaHidden,\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transitions = useTransition(ticks, tick => tick.key, {\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transitions.map(({ item: tick, props: transitionProps, key }, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                    key,\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nAxis.propTypes = {\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    scale: PropTypes.func.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    length: PropTypes.number.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    tickValues: axisPropTypes.tickValues,\n    tickSize: PropTypes.number.isRequired,\n    tickPadding: PropTypes.number.isRequired,\n    tickRotation: PropTypes.number.isRequired,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func.isRequired,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n    legendOffset: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    ariaHidden: PropTypes.bool,\n}\nAxis.defaultProps = {\n    x: 0,\n    y: 0,\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    renderTick: defaultTickRenderer,\n    legendPosition: 'end',\n    legendOffset: 0,\n}\n\nexport default memo(Axis)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Axis from './Axis'\nimport { axisPropType } from '../props'\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nconst Axes = ({ xScale, yScale, width, height, top, right, bottom, left }) => {\n    const axes = { top, right, bottom, left }\n\n    return positions.map(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n\n        return (\n            <Axis\n                key={position}\n                {...axis}\n                axis={isXAxis ? 'x' : 'y'}\n                x={position === 'right' ? width : 0}\n                y={position === 'bottom' ? height : 0}\n                scale={isXAxis ? xScale : yScale}\n                length={isXAxis ? width : height}\n                ticksPosition={ticksPosition}\n            />\n        )\n    })\n}\n\nAxes.propTypes = {\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    top: axisPropType,\n    right: axisPropType,\n    bottom: axisPropType,\n    left: axisPropType,\n}\n\nexport default memo(Axes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nconst GridLine = ({ animatedProps }) => {\n    const theme = useTheme()\n\n    return <animated.line {...animatedProps} {...theme.grid.line} />\n}\n\nGridLine.propTypes = {\n    x1: PropTypes.number.isRequired,\n    x2: PropTypes.number.isRequired,\n    y1: PropTypes.number.isRequired,\n    y2: PropTypes.number.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n}\nGridLine.defaultProps = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n}\n\nexport default memo(GridLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport GridLine from './GridLine'\n\nconst GridLines = ({ lines }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transitions = useTransition(lines, line => line.key, {\n        initial: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        from: line => ({\n            opacity: 0,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        enter: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        update: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <g>\n            {transitions.map(({ item: line, props: animatedProps, key }) => (\n                <GridLine {...line} key={key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n}\n\nGridLines.propTypes = {\n    type: PropTypes.oneOf(['x', 'y']).isRequired,\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            x1: PropTypes.number,\n            x2: PropTypes.number,\n            y1: PropTypes.number,\n            y2: PropTypes.number,\n        })\n    ).isRequired,\n}\n\nexport default memo(GridLines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport GridLines from './GridLines'\nimport { computeGridLines } from '../compute'\n\nconst Grid = ({ width, height, xScale, yScale, xValues, yValues }) => {\n    const xLines = useMemo(() => {\n        if (!xScale) return false\n\n        return computeGridLines({\n            width,\n            height,\n            scale: xScale,\n            axis: 'x',\n            values: xValues,\n        })\n    }, [xScale, xValues])\n\n    const yLines = yScale\n        ? computeGridLines({\n              width,\n              height,\n              scale: yScale,\n              axis: 'y',\n              values: yValues,\n          })\n        : false\n\n    return (\n        <>\n            {xLines && <GridLines type=\"x\" lines={xLines} />}\n            {yLines && <GridLines type=\"y\" lines={yLines} />}\n        </>\n    )\n}\n\nGrid.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    xValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    yValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n}\n\nexport default memo(Grid)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const degreesToRadians = degrees => (degrees * Math.PI) / 180\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { degreesToRadians } from './utils'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\n\nexport const renderAxisToCanvas = (\n    ctx,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontSize}px ${theme.axis.ticks.text.fontFamily}`\n\n    if (theme.axis.domain.line.strokeWidth > 0) {\n        ctx.lineWidth = theme.axis.domain.line.strokeWidth\n        ctx.lineCap = 'square'\n        ctx.strokeStyle = theme.axis.domain.line.stroke\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    ticks.forEach(tick => {\n        if (theme.axis.ticks.line.strokeWidth > 0) {\n            ctx.lineWidth = theme.axis.ticks.line.strokeWidth\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.axis.ticks.line.stroke\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format !== undefined ? format(tick.value) : tick.value\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n        ctx.fillStyle = theme.axis.ticks.text.fill\n        ctx.fillText(value, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n        ctx.fillStyle = theme.axis.legend.text.fill\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nexport const renderAxesToCanvas = (\n    ctx,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = (ctx, { width, height, scale, axis, values }) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"sourceRoot":""}