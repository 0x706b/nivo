{"version":3,"file":"component---src-pages-guides-patterns-js-fc7c123a803960ce82e3.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/area.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/./src/components/PageContent.ts","webpack://nivo-website/./src/components/styled.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/StreamLayer.tsx","webpack://nivo-website/../src/StreamLayers.tsx","webpack://nivo-website/../src/StreamDots.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../src/StreamSlicesItem.tsx","webpack://nivo-website/../src/StreamSlices.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/StreamDotsItem.tsx","webpack://nivo-website/../src/LayerTooltip.tsx","webpack://nivo-website/../src/StackTooltip.tsx","webpack://nivo-website/../src/Stream.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveStream.tsx","webpack://nivo-website/./src/components/guides/patterns/PatternsIllustrations.js","webpack://nivo-website/./src/components/guides/patterns/PatternsExample.js","webpack://nivo-website/./src/components/CollapsibleCard.tsx","webpack://nivo-website/./src/components/guides/GuideDemoBlock.js","webpack://nivo-website/./src/components/guides/patterns/PatternsDots.js","webpack://nivo-website/./src/components/guides/patterns/PatternsLines.js","webpack://nivo-website/./src/components/guides/patterns/PatternsSquares.js","webpack://nivo-website/./src/pages/guides/patterns.js","webpack://nivo-website/../node_modules/lodash/_asciiToArray.js","webpack://nivo-website/../node_modules/lodash/_castSlice.js","webpack://nivo-website/../node_modules/lodash/_createCaseFirst.js","webpack://nivo-website/../node_modules/lodash/_hasUnicode.js","webpack://nivo-website/../node_modules/lodash/_stringToArray.js","webpack://nivo-website/../node_modules/lodash/_unicodeToArray.js","webpack://nivo-website/../node_modules/lodash/upperFirst.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport default styled.div`\n    margin: 0 50px;\n    position: relative;\n\n    ${media.tablet`\n        & {\n            margin: 0 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px;\n        }\n    `}\n`\n","import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport const FullWidthBanner = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    margin-bottom: 40px;\n    padding: 20px;\n`\n\nexport const DescriptionBlock = styled.div`\n    max-width: 800px;\n    margin: 0 auto 50px;\n\n    ${media.tablet`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n`\n\nexport const Card = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    box-shadow: ${({ theme }) => theme.cardShadow};\n`\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useCallback, createElement } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamLayerData } from './types'\n\ninterface StreamLayerProps<RawDatum extends StreamDatum> {\n    layer: StreamLayerData\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayer = <RawDatum extends StreamDatum>({\n    layer,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayerProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { layer }), event, 'left')\n        },\n        [showTooltipFromEvent, layer]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(layer.path)\n    const animatedProps = useSpring({\n        color: layer.color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={layer.fill ? layer.fill : animatedProps.color}\n            fillOpacity={fillOpacity}\n            stroke={getBorderColor(layer)}\n            strokeWidth={borderWidth}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? hideTooltip : undefined}\n        />\n    )\n}\n","import { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { StreamLayer } from './StreamLayer'\nimport { StreamCommonProps, StreamLayerData, StreamDatum } from './types'\n\ninterface StreamLayersProps<RawDatum extends StreamDatum> {\n    layers: StreamLayerData[]\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayers = <RawDatum extends StreamDatum>({\n    layers,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayersProps<RawDatum>) => (\n    <g>\n        {layers.map((layer, i) => (\n            <StreamLayer<RawDatum>\n                key={i}\n                layer={layer}\n                getBorderColor={getBorderColor}\n                borderWidth={borderWidth}\n                fillOpacity={fillOpacity}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { createElement } from 'react'\nimport { StreamSvgProps, StreamLayerDatum, StreamDatum } from './types'\n\ninterface StreamDotsProps<RawDatum extends StreamDatum> {\n    id: string | number\n    color: string\n    data: StreamLayerDatum[]\n    dotComponent: Exclude<StreamSvgProps<RawDatum>['dotComponent'], undefined>\n    position: 'start' | 'center' | 'end'\n    getSize: (datum: StreamLayerDatum) => number\n    getColor: (datum: StreamLayerDatum) => string\n    getBorderWidth: (datum: StreamLayerDatum) => number\n    getBorderColor: (datum: StreamLayerDatum) => string\n}\n\nconst getDotY = <RawDatum extends StreamDatum>(\n    datum: StreamLayerDatum,\n    position: StreamDotsProps<RawDatum>['position']\n) => {\n    let y = datum.y2\n    if (position === 'center') {\n        y = datum.y1 + (datum.y2 - datum.y1) / 2\n    } else if (position === 'start') {\n        y = datum.y1\n    }\n\n    return y\n}\n\nexport const StreamDots = <RawDatum extends StreamDatum>({\n    data,\n    dotComponent,\n    position,\n    getSize,\n    getColor,\n    getBorderWidth,\n    getBorderColor,\n}: StreamDotsProps<RawDatum>) => (\n    <>\n        {data.map((datum, i) => {\n            return createElement(dotComponent, {\n                key: i,\n                datum,\n                x: datum.x,\n                y: getDotY<RawDatum>(datum, position),\n                size: getSize(datum),\n                color: getColor(datum),\n                borderWidth: getBorderWidth(datum),\n                borderColor: getBorderColor(datum),\n            })\n        })}\n    </>\n)\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createElement, useCallback, useState } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamSliceData } from './types'\n\ninterface StreamSlicesItemProps<RawDatum extends StreamDatum> {\n    slice: StreamSliceData\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlicesItem = <RawDatum extends StreamDatum>({\n    slice,\n    height,\n    tooltip,\n}: StreamSlicesItemProps<RawDatum>) => {\n    const [isHover, setIsHover] = useState(false)\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(createElement(tooltip, { slice }), event, 'left')\n        },\n        [setIsHover, showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [setIsHover, hideTooltip])\n\n    return (\n        <g transform={`translate(${slice.x}, 0)`}>\n            {isHover && (\n                <line\n                    x1={0}\n                    x2={0}\n                    y1={0}\n                    y2={height}\n                    stroke=\"#000\"\n                    strokeOpacity={0.35}\n                    strokeWidth={1}\n                />\n            )}\n            <rect\n                x={-20}\n                width={40}\n                height={height}\n                fill=\"#000\"\n                fillOpacity={0}\n                onMouseEnter={handleMouseHover}\n                onMouseMove={handleMouseHover}\n                onMouseLeave={handleMouseLeave}\n            />\n        </g>\n    )\n}\n","import { StreamSliceData, StreamDatum, StreamCommonProps } from './types'\nimport { StreamSlicesItem } from './StreamSlicesItem'\n\ninterface StreamSlicesProps<RawDatum extends StreamDatum> {\n    slices: StreamSliceData[]\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlices = <RawDatum extends StreamDatum>({\n    slices,\n    height,\n    tooltip,\n}: StreamSlicesProps<RawDatum>) => (\n    <g>\n        {slices.map(slice => (\n            <StreamSlicesItem<RawDatum>\n                key={slice.index}\n                slice={slice}\n                height={height}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { StackOrder, StackOffset, AreaCurve } from '@nivo/core'\nimport { StreamCommonProps, StreamLayerId } from './types'\nimport { StreamDotsItem } from './StreamDotsItem'\nimport { LayerTooltip } from './LayerTooltip'\nimport { StackTooltip } from './StackTooltip'\n\nexport const defaultProps = {\n    label: 'id',\n\n    order: 'none' as StackOrder,\n    offsetType: 'wiggle' as StackOffset,\n    curve: 'catmullRom' as AreaCurve,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    colors: { scheme: 'nivo' } as StreamCommonProps<any>['colors'],\n    fillOpacity: 1,\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    } as StreamCommonProps<any>['borderColor'],\n\n    enableDots: false,\n    dotPosition: 'center' as StreamCommonProps<any>['dotPosition'],\n    dotComponent: StreamDotsItem,\n    dotSize: 6,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 0,\n    dotBorderColor: { from: 'color' },\n\n    isInteractive: true,\n    tooltip: LayerTooltip,\n    enableStackTooltip: true,\n    stackTooltip: StackTooltip,\n\n    legends: [],\n    legendLabel: 'id',\n\n    role: 'application',\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'layers', 'dots', 'slices', 'legends'] as StreamLayerId[],\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\n\nexport interface StreamDotsItemProps {\n    x: number\n    y: number\n    size: number\n    color: string\n    borderWidth: number\n    borderColor: string\n}\n\nexport const StreamDotsItem = ({\n    x,\n    y,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n}: StreamDotsItemProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size * 0.5,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius}\n            fill={animatedProps.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nexport const LayerTooltip = ({ layer }: TooltipProps) => (\n    <BasicTooltip id={layer.label} enableChip={true} color={layer.color} />\n)\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { StackTooltipProps } from './types'\n\nexport const StackTooltip = ({ slice }: StackTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            slice.stack.map(p => [\n                <Chip key={p.layerId} color={p.color} />,\n                p.layerLabel,\n                p.formattedValue,\n            ]),\n        [slice]\n    )\n\n    return <TableTooltip rows={rows} />\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    Container,\n    SvgWrapper,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { StreamLayers } from './StreamLayers'\nimport { StreamDots } from './StreamDots'\nimport { StreamSlices } from './StreamSlices'\nimport { useStream } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { StreamDatum, StreamLayerId, StreamSvgProps } from './types'\n\ntype InnerStreamProps<RawDatum extends StreamDatum> = Omit<\n    StreamSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerStream = <RawDatum extends StreamDatum>({\n    data,\n    keys,\n    label,\n    valueFormat,\n\n    offsetType,\n    order,\n    curve,\n\n    layers: chartLayers = svgDefaultProps.layers,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n\n    colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n\n    enableDots = svgDefaultProps.enableDots,\n    dotPosition = svgDefaultProps.dotPosition,\n    dotComponent = svgDefaultProps.dotComponent,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    enableStackTooltip = svgDefaultProps.enableStackTooltip,\n    stackTooltip = svgDefaultProps.stackTooltip,\n\n    legends = svgDefaultProps.legends,\n\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerStreamProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        xScale,\n        yScale,\n        layers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    } = useStream<RawDatum>({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        keys,\n        label,\n        valueFormat,\n        offsetType,\n        order,\n        curve,\n        colors,\n        borderColor,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n    })\n\n    const boundDefs = bindDefs(defs, layers, fill)\n\n    const layerById: Record<StreamLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        layers: null,\n        dots: null,\n        slices: null,\n        legends: null,\n    }\n\n    if (chartLayers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n            />\n        )\n    }\n\n    if (chartLayers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (chartLayers.includes('layers')) {\n        layerById.layers = (\n            <StreamLayers<RawDatum>\n                key=\"layers\"\n                layers={layers}\n                fillOpacity={fillOpacity}\n                borderWidth={borderWidth}\n                getBorderColor={getBorderColor}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <Fragment key=\"dots\">\n                {layers.map(layer => (\n                    <StreamDots\n                        key={layer.id}\n                        id={layer.id}\n                        color={layer.color}\n                        data={layer.data}\n                        dotComponent={dotComponent}\n                        position={dotPosition}\n                        getSize={getDotSize}\n                        getColor={getDotColor}\n                        getBorderWidth={getDotBorderWidth}\n                        getBorderColor={getDotBorderColor}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (chartLayers.includes('slices') && isInteractive && enableStackTooltip) {\n        layerById.slices = (\n            <StreamSlices<RawDatum>\n                key=\"slices\"\n                slices={slices}\n                height={innerHeight}\n                tooltip={stackTooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => {\n                    const legendData = layers\n                        .map(layer => ({\n                            id: layer.id,\n                            label: layer.label,\n                            color: layer.color,\n                            fill: layer.fill,\n                        }))\n                        .reverse()\n\n                    return (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legend}\n                            containerWidth={innerWidth}\n                            containerHeight={innerHeight}\n                            data={legendData}\n                        />\n                    )\n                })}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {chartLayers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Stream = <RawDatum extends StreamDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: StreamSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerStream<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport { area, stack as d3Stack } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport {\n    useTheme,\n    usePropertyAccessor,\n    useValueFormatter,\n    useCurveInterpolation,\n    // @ts-ignore\n    stackOrderFromProp,\n    // @ts-ignore\n    stackOffsetFromProp,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    StreamCommonProps,\n    StreamCustomLayerProps,\n    StreamDataProps,\n    StreamDatum,\n    StreamLayerData,\n    StreamLayerDatum,\n    StreamSliceData,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useStream = <RawDatum extends StreamDatum>({\n    width,\n    height,\n    data,\n    keys,\n    label = defaultProps.label,\n    valueFormat,\n    offsetType = defaultProps.offsetType,\n    order = defaultProps.order,\n    curve = defaultProps.curve,\n    colors = defaultProps.colors,\n    borderColor = defaultProps.borderColor,\n    dotSize = defaultProps.dotSize,\n    dotColor = defaultProps.dotColor,\n    dotBorderWidth = defaultProps.dotBorderWidth,\n    dotBorderColor = defaultProps.dotBorderColor,\n}: {\n    width: number\n    height: number\n    data: StreamDataProps<RawDatum>['data']\n    keys: StreamDataProps<RawDatum>['keys']\n    label?: StreamCommonProps<RawDatum>['label']\n    valueFormat?: StreamCommonProps<RawDatum>['valueFormat']\n    offsetType?: StreamCommonProps<RawDatum>['offsetType']\n    order?: StreamCommonProps<RawDatum>['order']\n    curve?: StreamCommonProps<RawDatum>['curve']\n    colors?: StreamCommonProps<RawDatum>['colors']\n    dotSize?: StreamCommonProps<RawDatum>['dotSize']\n    dotColor?: StreamCommonProps<RawDatum>['dotColor']\n    dotBorderWidth?: StreamCommonProps<RawDatum>['dotBorderWidth']\n    dotBorderColor?: StreamCommonProps<RawDatum>['dotBorderColor']\n    borderColor?: StreamCommonProps<RawDatum>['borderColor']\n}) => {\n    const areaCurveFactory = useCurveInterpolation(curve)\n    const areaGenerator = useMemo(\n        () =>\n            area<StreamLayerDatum>()\n                .x(({ x }) => x)\n                .y0(({ y1 }) => y1)\n                .y1(({ y2 }) => y2)\n                .curve(areaCurveFactory),\n        [areaCurveFactory]\n    )\n\n    const stack = useMemo(\n        () =>\n            d3Stack<RawDatum, string | number>()\n                .keys(keys)\n                .offset(stackOffsetFromProp(offsetType))\n                .order(stackOrderFromProp(order)),\n        [keys, offsetType, order]\n    )\n\n    const [layers, xScale, yScale] = useMemo(() => {\n        const allMin: number[] = []\n        const allMax: number[] = []\n\n        const layers = stack(data).map(layer => {\n            return layer.map(point => {\n                allMin.push(point[0])\n                allMax.push(point[1])\n\n                return {\n                    ...point,\n                    value: point.data[layer.key] as number,\n                }\n            })\n        })\n\n        const minValue = Math.min(...allMin)\n        const maxValue = Math.max(...allMax)\n\n        return [\n            layers,\n            scalePoint<number>()\n                .domain(Array.from({ length: data.length }, (_, i) => i))\n                .range([0, width]),\n            scaleLinear().domain([minValue, maxValue]).range([height, 0]),\n        ]\n    }, [stack, data, width, height])\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<StreamLayerData, 'label' | 'color' | 'data'>>(\n        colors,\n        'id'\n    )\n    const getBorderColor = useInheritedColor<StreamLayerData>(borderColor, theme)\n\n    const getDotSize = useMemo(\n        () => (typeof dotSize === 'function' ? dotSize : () => dotSize),\n        [dotSize]\n    )\n    const getDotColor = useInheritedColor(dotColor, theme)\n    const getDotBorderWidth = useMemo(\n        () => (typeof dotBorderWidth === 'function' ? dotBorderWidth : () => dotBorderWidth),\n        [dotBorderWidth]\n    )\n    const getDotBorderColor = useInheritedColor(dotBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<\n        Omit<StreamLayerData, 'label' | 'color' | 'data'>,\n        string | number\n    >(label)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const enhancedLayers: StreamLayerData[] = useMemo(\n        () =>\n            layers.map((points, layerIndex) => {\n                const computedPoints: StreamLayerDatum[] = points.map((point, i) => ({\n                    layerId: keys[layerIndex],\n                    layerLabel: '',\n                    index: i,\n                    color: '',\n                    x: xScale(i) as number,\n                    value: point.value,\n                    formattedValue: formatValue(point.value),\n                    y1: yScale(point[0]),\n                    y2: yScale(point[1]),\n                }))\n\n                const layer: Omit<StreamLayerData, 'label' | 'color' | 'data'> = {\n                    id: keys[layerIndex] as string,\n                    path: areaGenerator(computedPoints) as string,\n                }\n\n                const layerWithComputedProperties: Omit<StreamLayerData, 'data'> = {\n                    ...layer,\n                    label: getLabel(layer),\n                    color: getColor(layer),\n                }\n\n                return {\n                    ...layerWithComputedProperties,\n                    data: computedPoints.map(point => {\n                        point.layerLabel = layerWithComputedProperties.label\n                        point.color = layerWithComputedProperties.color\n\n                        return point\n                    }),\n                }\n            }),\n        [layers, keys, getLabel, areaGenerator, getColor, xScale, yScale, formatValue]\n    )\n\n    const slices: StreamSliceData[] = useMemo(\n        () =>\n            Array.from({ length: data.length }, (_, i) => {\n                const sliceStack = enhancedLayers\n                    .map(layer => layer.data[i])\n                    .sort((a, b) => a.y2 - b.y2)\n\n                return {\n                    index: i,\n                    x: enhancedLayers[0].data[i].x,\n                    stack: sliceStack,\n                }\n            }),\n        [data.length, enhancedLayers]\n    )\n\n    const layerContext: StreamCustomLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            layers: enhancedLayers,\n            slices,\n        }),\n        [xScale, yScale, enhancedLayers, slices]\n    )\n\n    return {\n        xScale,\n        yScale,\n        layers: enhancedLayers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    }\n}\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { StreamDatum, StreamSvgProps } from './types'\nimport { Stream } from './Stream'\n\nexport const ResponsiveStream = <RawDatum extends StreamDatum>(\n    props: Omit<StreamSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Stream<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import React from 'react'\nimport { patternDotsDef, patternLinesDef, patternSquaresDef } from '@nivo/core'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsiveStream } from '@nivo/stream'\nimport { ResponsiveTreeMap } from '@nivo/treemap'\nimport { generateCountriesData } from '@nivo/generators'\nimport { FullWidthBanner } from '../../styled'\nimport { useTheme } from '../../../theming/context'\n\nconst PatternsIllustrations = () => {\n    const theme = useTheme()\n\n    return (\n        <FullWidthBanner>\n            <div className=\"guide__illustrations\">\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveStream\n                        margin={{ top: -2, right: -2, bottom: -2, left: -2 }}\n                        data={generateCountriesData(['a', 'b', 'c'], { size: 7 })}\n                        indexBy=\"country\"\n                        keys={['a', 'b', 'c']}\n                        offsetType=\"expand\"\n                        axisLeft={null}\n                        axisBottom={null}\n                        enableGridX={false}\n                        defs={[\n                            patternLinesDef('example1.lines.1', {\n                                rotation: 45,\n                                lineWidth: 4,\n                                spacing: 6,\n                                background: 'transparent',\n                                color: 'inherit',\n                            }),\n                            patternLinesDef('example1.lines.2', {\n                                rotation: -45,\n                                lineWidth: 1,\n                                spacing: 3,\n                                background: 'transparent',\n                                color: 'inherit',\n                            }),\n                            patternDotsDef('example1.dots', {\n                                background: 'transparent',\n                                color: 'inherit',\n                                size: 4,\n                                padding: 0,\n                                stagger: true,\n                            }),\n                        ]}\n                        fill={[\n                            { match: { id: 'a' }, id: 'example1.lines.1' },\n                            { match: { id: 'b' }, id: 'example1.dots' },\n                            { match: { id: 'c' }, id: 'example1.lines.2' },\n                        ]}\n                        borderWidth={2}\n                        borderColor={'#333'}\n                        isInteractive={false}\n                        animate={false}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveBar\n                        margin={{ top: 15, right: -2, bottom: -2, left: -2 }}\n                        data={generateCountriesData(['a', 'b', 'c'], { size: 7 })}\n                        indexBy=\"country\"\n                        keys={['a', 'b', 'c']}\n                        colors={{ scheme: 'spectral' }}\n                        padding={0.3}\n                        axisLeft={null}\n                        axisBottom={null}\n                        enableGridY={false}\n                        enableLabel={false}\n                        colorBy=\"index\"\n                        defs={[\n                            patternLinesDef('example2.lines', {\n                                rotation: -45,\n                                lineWidth: 4,\n                                spacing: 6,\n                                background: 'transparent',\n                                color: 'inherit',\n                            }),\n                            patternDotsDef('example2.dots', {\n                                background: 'transparent',\n                                color: 'inherit',\n                                size: 4,\n                                padding: 0,\n                                stagger: true,\n                            }),\n                            patternSquaresDef('example2.squares', {\n                                background: 'transparent',\n                                color: 'inherit',\n                                stagger: true,\n                                size: 8,\n                                padding: 0,\n                            }),\n                        ]}\n                        fill={[\n                            { match: d => d.data.index % 3 === 0, id: 'example2.lines' },\n                            { match: d => d.data.index % 3 === 1, id: 'example2.dots' },\n                            { match: d => d.data.index % 3 === 2, id: 'example2.squares' },\n                        ]}\n                        borderWidth={2}\n                        borderColor=\"inherit\"\n                        isInteractive={false}\n                        animate={false}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveTreeMap\n                        margin={{ top: -2, right: -2, bottom: -2, left: -2 }}\n                        data={{\n                            country: 'root',\n                            children: generateCountriesData(['value'], { size: 9 }),\n                        }}\n                        identity=\"country\"\n                        leavesOnly={true}\n                        colors={{ scheme: 'spectral' }}\n                        colorBy=\"id\"\n                        borderWidth={4}\n                        outerPadding={10}\n                        innerPadding={4}\n                        nodeOpacity={1}\n                        borderColor=\"inherit\"\n                        isInteractive={false}\n                        animate={false}\n                        enableLabel={false}\n                        enableParentLabel={false}\n                        defs={[\n                            patternLinesDef('example3.lines', {\n                                rotation: -45,\n                                lineWidth: 4,\n                                spacing: 6,\n                                background: 'transparent',\n                                color: 'inherit',\n                            }),\n                        ]}\n                        fill={[{ match: '*', id: 'example3.lines' }]}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__legend\">\n                    patterns applied to various nivo components.\n                </div>\n            </div>\n        </FullWidthBanner>\n    )\n}\n\nexport default PatternsIllustrations\n","import React from 'react'\nimport { Highlight } from '../../Highlight'\n\nconst code = `\nimport { patternDotsDef, patternSquaresDef } from '@nivo/core'\nimport { Stream } from '@nivo/stream'\n\nconst MyChart = () => (\n    <Stream\n        data={/*…*/}\n        keys={['react', 'vue', 'elm']}\n        // 1. defining patterns\n        defs={[\n            // using helpers (cannot be used with http rendering API)\n            // will use color from current element\n            patternDotsDef('dots', { color: 'inherit' }),\n            // will use background color from current element\n            patternSquaresDef('squares', { background: 'inherit' }),\n            // using plain object\n            { id: 'custom', type: 'patternSquares', size: 24 },\n        ]}\n        // 2. defining rules to apply those patterns\n        fill={[\n            // match using query object\n            // (can be used with http rendering API\n            { match: { id: 'react' }, id: 'dots' },\n            // match using function\n            // (cannot be used with http rendering API\n            { match: d => d.id === 'vue', id: 'squares' },\n            // match all, will only affect 'elm' because once\n            // a rule match, others are skipped\n            // (can be used with http rendering API\n            { match: '*', id: 'custom' },\n        ]}\n    />\n)\n`.trim()\n\nconst PatternsExample = () => <Highlight code={code} language=\"jsx\" />\n\nexport default PatternsExample\n","import React, { useState, PropsWithChildren, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { MdArrowDropUp, MdArrowDropDown } from 'react-icons/md'\nimport { Card } from './styled'\n\nexport const CollapsibleCard = ({\n    title,\n    expandedByDefault = false,\n    children,\n}: PropsWithChildren<{ title: string; expandedByDefault?: boolean }>) => {\n    const [expanded, setExpanded] = useState(expandedByDefault)\n    const handleToggle = useCallback(() => {\n        setExpanded(prev => !prev)\n    }, [setExpanded])\n\n    return (\n        <Wrapper isExpanded={expanded}>\n            <Header className=\"no-select\" onClick={handleToggle}>\n                <Title>{title}</Title>\n                {expanded ? <MdArrowDropUp /> : <MdArrowDropDown />}\n            </Header>\n            {expanded && <div className=\"card_body\">{children}</div>}\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled(Card)<{ isExpanded: boolean }>`\n    margin-bottom: ${({ isExpanded }) => (isExpanded ? '30px' : 0)};\n\n    svg {\n        font-size: 26px;\n    }\n`\n\nconst Header = styled.div`\n    height: 52px;\n    width: 100%;\n    position: relative;\n    padding: 0 24px;\n    cursor: pointer;\n    color: ${({ theme }) => theme.colors.text};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst Title = styled.h3`\n    margin: 0;\n    color: ${({ theme }) => theme.colors.text};\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport media from '../../theming/mediaQueries'\nimport { CollapsibleCard } from '../CollapsibleCard'\nimport ControlsGroup from '../controls/ControlsGroup'\nimport { Highlight } from '../Highlight'\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 4fr 6fr;\n    grid-template-rows: 4fr 6fr;\n    max-height: 600px;\n\n    ${media.mobile`\n        & {\n            display: block;\n            max-height: none;\n        }\n    `}\n`\n\nconst Preview = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n\n    ${media.mobile`\n        & {\n            padding: 20px 0;\n            border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n        }\n    `}\n`\n\nconst Code = styled.div`\n    grid-column-start: 1;\n    grid-row-start: 2;\n    overflow-x: hidden;\n    overflow-y: auto;\n    border-top: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst Controls = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-left: 1px solid ${({ theme }) => theme.colors.borderLight};\n    grid-row-start: 1;\n    grid-row-end: 3;\n    grid-column-start: 2;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst GuideDemoBlock = ({ title, initialSettings, controls, generateCode, children }) => {\n    const [settings, setSettings] = useState(initialSettings)\n\n    return (\n        <CollapsibleCard title={title} expandedByDefault={true}>\n            <Container>\n                <Preview>{children(settings)}</Preview>\n                <Controls>\n                    <ControlsGroup\n                        name={title}\n                        controls={controls}\n                        settings={settings}\n                        onChange={setSettings}\n                    />\n                </Controls>\n                <Code>\n                    <Highlight language=\"jsx\" code={generateCode(settings)} />\n                </Code>\n            </Container>\n        </CollapsibleCard>\n    )\n}\n\nexport default GuideDemoBlock\n","import React from 'react'\nimport { Defs, patternDotsDef, PatternDots } from '@nivo/core'\nimport GuideDemoBlock from '../GuideDemoBlock'\n\nconst SAMPLE_SIZE = 120\nconst patternId = 'dots-pattern'\n\nconst controls = [\n    {\n        name: 'size',\n        type: 'number',\n        help: 'dots size.',\n        controlType: 'range',\n        defaultValue: PatternDots.defaultProps.size,\n        controlOptions: {\n            unit: 'px',\n            min: 1,\n            max: 24,\n        },\n    },\n    {\n        name: 'padding',\n        type: 'number',\n        help: 'padding between dots.',\n        controlType: 'range',\n        defaultValue: PatternDots.defaultProps.padding,\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    {\n        name: 'stagger',\n        type: 'boolean',\n        help: 'staggered dots.',\n        defaultValue: PatternDots.defaultProps.stagger,\n        controlType: 'switch',\n    },\n    {\n        name: 'background',\n        type: 'string',\n        help: 'pattern background color.',\n        defaultValue: PatternDots.defaultProps.background,\n        controlType: 'colorPicker',\n    },\n    {\n        name: 'color',\n        type: 'string',\n        help: 'dots color.',\n        defaultValue: PatternDots.defaultProps.color,\n        controlType: 'colorPicker',\n    },\n]\n\nconst initialSettings = {\n    size: PatternDots.defaultProps.size,\n    padding: PatternDots.defaultProps.padding,\n    stagger: PatternDots.defaultProps.stagger,\n    background: PatternDots.defaultProps.background,\n    color: PatternDots.defaultProps.color,\n}\n\nconst generateCode = settings =>\n    `\n// helper\npatternDotsDef('${patternId}', ${JSON.stringify(settings, null, '  ')})\n// plain object\n${JSON.stringify(patternDotsDef(patternId, settings), null, '    ')}\n`.trim()\n\nconst PatternDotsDemo = () => {\n    return (\n        <GuideDemoBlock\n            title=\"Dots\"\n            controls={controls}\n            initialSettings={initialSettings}\n            generateCode={generateCode}\n        >\n            {settings => (\n                <svg width={SAMPLE_SIZE} height={SAMPLE_SIZE}>\n                    <Defs defs={[patternDotsDef(patternId, settings)]} />\n                    <rect width={SAMPLE_SIZE} height={SAMPLE_SIZE} fill={`url(#${patternId})`} />\n                </svg>\n            )}\n        </GuideDemoBlock>\n    )\n}\n\nexport default PatternDotsDemo\n","import React from 'react'\nimport { Defs, PatternLines, patternLinesDef } from '@nivo/core'\nimport GuideDemoBlock from '../GuideDemoBlock'\n\nconst SAMPLE_SIZE = 120\nconst patternId = 'lines-pattern'\n\nconst controls = [\n    {\n        name: 'spacing',\n        type: 'number',\n        help: 'spacing between lines.',\n        defaultValue: PatternLines.defaultProps.spacing,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        name: 'rotation',\n        type: 'number',\n        help: 'lines rotation.',\n        defaultValue: PatternLines.defaultProps.rotation,\n        controlType: 'angle',\n        controlOptions: {\n            start: 90,\n            min: -360,\n            max: 360,\n        },\n    },\n    {\n        name: 'lineWidth',\n        type: 'number',\n        help: 'lines thickness.',\n        defaultValue: PatternLines.defaultProps.lineWidth,\n        controlType: 'lineWidth',\n        controlOptions: {\n            min: 1,\n        },\n    },\n    {\n        name: 'background',\n        type: 'string',\n        help: 'pattern background color.',\n        defaultValue: PatternLines.defaultProps.background,\n        controlType: 'colorPicker',\n    },\n    {\n        name: 'color',\n        type: 'string',\n        help: 'lines color.',\n        defaultValue: PatternLines.defaultProps.color,\n        controlType: 'colorPicker',\n    },\n]\n\nconst initialSettings = {\n    spacing: PatternLines.defaultProps.spacing,\n    rotation: PatternLines.defaultProps.rotation,\n    lineWidth: PatternLines.defaultProps.lineWidth,\n    background: PatternLines.defaultProps.background,\n    color: PatternLines.defaultProps.color,\n}\n\nconst generateCode = settings =>\n    `\n// helper\npatternLinesDef('${patternId}', ${JSON.stringify(settings, null, '  ')})\n// plain object\n${JSON.stringify(patternLinesDef(patternId, settings), null, '    ')}\n`.trim()\n\nconst PatternsLinesDemo = () => {\n    return (\n        <GuideDemoBlock\n            title=\"Lines\"\n            controls={controls}\n            initialSettings={initialSettings}\n            generateCode={generateCode}\n        >\n            {settings => (\n                <svg width={SAMPLE_SIZE} height={SAMPLE_SIZE}>\n                    <Defs defs={[patternLinesDef(patternId, settings)]} />\n                    <rect width={SAMPLE_SIZE} height={SAMPLE_SIZE} fill={`url(#${patternId})`} />\n                </svg>\n            )}\n        </GuideDemoBlock>\n    )\n}\n\nexport default PatternsLinesDemo\n","import React from 'react'\nimport { Defs, patternSquaresDef, PatternSquares } from '@nivo/core'\nimport GuideDemoBlock from '../GuideDemoBlock'\n\nconst SAMPLE_SIZE = 120\nconst patternId = 'squares-pattern'\n\nconst controls = [\n    {\n        name: 'size',\n        type: 'number',\n        help: 'squares size.',\n        defaultValue: PatternSquares.defaultProps.size,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 1,\n            max: 24,\n        },\n    },\n    {\n        name: 'padding',\n        type: 'number',\n        help: 'padding between squares.',\n        defaultValue: PatternSquares.defaultProps.padding,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    {\n        name: 'stagger',\n        type: 'boolean',\n        help: 'staggered squares.',\n        defaultValue: PatternSquares.defaultProps.stagger,\n        controlType: 'switch',\n    },\n    {\n        name: 'background',\n        type: 'string',\n        help: 'pattern background color.',\n        defaultValue: PatternSquares.defaultProps.background,\n        controlType: 'colorPicker',\n    },\n    {\n        name: 'color',\n        type: 'string',\n        help: 'squares color.',\n        defaultValue: PatternSquares.defaultProps.color,\n        controlType: 'colorPicker',\n    },\n]\n\nconst initialSettings = {\n    size: PatternSquares.defaultProps.size,\n    padding: PatternSquares.defaultProps.padding,\n    stagger: PatternSquares.defaultProps.stagger,\n    background: PatternSquares.defaultProps.background,\n    color: PatternSquares.defaultProps.color,\n}\n\nconst generateCode = settings =>\n    `\n// helper\npatternSquaresDef('${patternId}', ${JSON.stringify(settings, null, '  ')})\n// plain object\n${JSON.stringify(patternSquaresDef(patternId, settings), null, '    ')}\n`.trim()\n\nconst PatternsSquaresDemo = () => {\n    return (\n        <GuideDemoBlock\n            title=\"Squares\"\n            controls={controls}\n            initialSettings={initialSettings}\n            generateCode={generateCode}\n        >\n            {settings => (\n                <svg width={SAMPLE_SIZE} height={SAMPLE_SIZE}>\n                    <Defs defs={[patternSquaresDef(patternId, settings)]} />\n                    <rect width={SAMPLE_SIZE} height={SAMPLE_SIZE} fill={`url(#${patternId})`} />\n                </svg>\n            )}\n        </GuideDemoBlock>\n    )\n}\n\nexport default PatternsSquaresDemo\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport { Seo } from '../../components/Seo'\nimport PageContent from '../../components/PageContent'\nimport PatternsIllustrations from '../../components/guides/patterns/PatternsIllustrations'\nimport PatternsExample from '../../components/guides/patterns/PatternsExample'\nimport PatternsDots from '../../components/guides/patterns/PatternsDots'\nimport PatternsLines from '../../components/guides/patterns/PatternsLines'\nimport PatternsSquares from '../../components/guides/patterns/PatternsSquares'\nimport { DescriptionBlock } from '../../components/styled'\n\nconst Patterns = () => (\n    <Layout>\n        <Seo title=\"Patterns Guide\" />\n        <PageContent>\n            <div className=\"guide__header\">\n                <h1>Patterns</h1>\n            </div>\n        </PageContent>\n        <DescriptionBlock>\n            <h2>Purpose</h2>\n            <p>\n                Using patterns can be useful to <strong>group similar items</strong>, for example\n                imagine you want to build a pie chart displaying various foods, you can use a color\n                scale to assign a unique color to each one, then you can group\n                vegetables/fruits/meats/… using a similar pattern for each group (while keeping\n                color variation).\n            </p>\n            <h2>Using patterns in nivo</h2>\n            <p>\n                Defining patterns in nivo is a <strong>2 steps process</strong>, first you'll have\n                to declare available definitions (the same goes for{' '}\n                <Link to=\"/guides/gradients\">gradients</Link>) using dedicated helpers or providing\n                plain objects.\n                <br />\n                Then you must define the rules to apply those definitions using the{' '}\n                <code>fill</code> property.\n            </p>\n        </DescriptionBlock>\n        <PatternsIllustrations />\n        <DescriptionBlock>\n            <p>\n                <strong>Separating pattern definitions from application</strong> allows us to reuse\n                those in various places, like fills and borders, and while maintaining a direct\n                mapping for a bar chart with 5 items can be simple enough, when you're dealing with\n                a complex heatmap with tens of nodes it can quickly become cumbersome. Doing so also\n                provides the ability to{' '}\n                <strong>use a pattern depending on chart element value</strong>. Last but not least,{' '}\n                <strong>patterns colors can be inherited</strong> from current node ones.\n            </p>\n            <h2>Example</h2>\n            <PatternsExample />\n            <h2>Available patterns</h2>\n            <PatternsDots />\n            <PatternsLines />\n            <PatternsSquares />\n            <h2>Known limitations</h2>\n            <p>\n                Please be aware that pattern usage has some limitations, it's{' '}\n                <strong>not supported for canvas</strong> chart implementations for now, and\n                tooltips involving colored chips will use plain element color.\n            </p>\n        </DescriptionBlock>\n    </Layout>\n)\n\nexport default Patterns\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","area","data","i","j","k","d","buffer","n","length","defined0","x0z","Array","y0z","areaStart","lineStart","lineEnd","point","areaEnd","arealine","arguments","lineX0","lineY0","lineY1","lineX1","line","p","styled","media","FullWidthBanner","theme","colors","cardBackground","DescriptionBlock","Card","cardShadow","_objectWithoutProperties","source","excluded","key","target","sourceKeys","Object","keys","indexOf","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","StreamLayer","layer","fillOpacity","borderWidth","getBorderColor","isInteractive","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","event","createElement","useMotionConfig","animate","springConfig","animatedPath","useAnimatedPath","animatedProps","useSpring","color","config","immediate","fill","stroke","strokeWidth","onMouseMove","onMouseEnter","onMouseLeave","undefined","StreamLayers","layers","getDotY","datum","position","StreamDots","dotComponent","getSize","getColor","getBorderWidth","size","borderColor","_arrayLikeToArray","arr","len","arr2","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","slice","name","from","test","unsupportedIterableToArray","TypeError","nonIterableRest","StreamSlicesItem","height","useState","isHover","setIsHover","handleMouseLeave","transform","strokeOpacity","width","StreamSlices","slices","defaultProps","label","order","offsetType","axisBottom","axisLeft","enableGridX","enableGridY","scheme","modifiers","enableDots","dotPosition","radius","cx","cy","dotSize","dotColor","dotBorderWidth","dotBorderColor","id","enableChip","enableStackTooltip","stackTooltip","rows","useMemo","legends","legendLabel","role","svgDefaultProps","defs","motionConfig","isFocusable","InnerStream","valueFormat","chartLayers","partialMargin","margin","axisTop","axisRight","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","areaCurveFactory","useCurveInterpolation","areaGenerator","stack","d3Stack","stackOffsetFromProp","stackOrderFromProp","allMin","allMax","minValue","maxValue","scaleLinear","xScale","yScale","useTheme","useOrdinalColorScale","useInheritedColor","getDotSize","getDotColor","getDotBorderWidth","getDotBorderColor","getLabel","usePropertyAccessor","formatValue","useValueFormatter","enhancedLayers","computedPoints","points","layerId","layerLabel","index","formattedValue","layerWithComputedProperties","sliceStack","a","b","layerContext","useStream","boundDefs","bindDefs","layerById","grid","axes","dots","top","right","bottom","left","legendData","containerWidth","containerHeight","Stream","renderWrapper","otherProps","ResponsiveStream","className","generateCountriesData","indexBy","patternLinesDef","rotation","lineWidth","spacing","background","patternDotsDef","padding","stagger","match","nivo","enableLabel","colorBy","patternSquaresDef","country","children","identity","leavesOnly","outerPadding","innerPadding","nodeOpacity","enableParentLabel","code","trim","Highlight","language","CollapsibleCard","title","expandedByDefault","expanded","setExpanded","handleToggle","prev","Wrapper","isExpanded","Header","onClick","Title","text","borderLight","Container","Preview","cardAltBackground","Code","Controls","initialSettings","controls","generateCode","settings","setSettings","ControlsGroup","onChange","SAMPLE_SIZE","patternId","type","help","controlType","defaultValue","PatternDots","controlOptions","unit","min","max","JSON","stringify","PatternLines","start","PatternSquares","Layout","Seo","PageContent","Link","to","PatternsDots","PatternsLines","PatternsSquares","module","exports","string","split","baseSlice","array","end","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","join","reHasUnicode","RegExp","asciiToArray","unicodeToArray","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","upperFirst","createCaseFirst"],"sourceRoot":""}