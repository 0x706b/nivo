{"version":3,"sources":["webpack:///./src/components/styled.js","webpack:///./src/components/guides/legends/LegendPosition.js","webpack:///./src/components/guides/legends/LegendDirection.js","webpack:///./src/components/guides/legends/LegendItemDirection.js","webpack:///./src/components/guides/legends/SymbolShape.js","webpack:///./src/pages/guides/legends.js","webpack:///./src/components/PageContent.js"],"names":["FullWidthBanner","styled","div","theme","colors","cardBackground","DescriptionBlock","media","tablet","mobile","Card","cardShadow","anchors","ANCHOR_TOP_LEFT","ANCHOR_TOP","ANCHOR_TOP_RIGHT","ANCHOR_RIGHT","ANCHOR_BOTTOM_RIGHT","ANCHOR_BOTTOM","ANCHOR_BOTTOM_LEFT","ANCHOR_LEFT","ANCHOR_CENTER","translateExamples","anchor","translateX","translateY","legendProps","containerWidth","containerHeight","itemWidth","itemHeight","itemsSpacing","direction","LegendPosition","useTheme","width","margin","height","style","background","x","y","textAnchor","alignmentBaseline","fill","textLight","fontSize","transform","map","itemTextColor","text","key","data","id","label","color","accent","example","i","omit","LegendDirection","itemDirections","DIRECTION_LEFT_TO_RIGHT","DIRECTION_RIGHT_TO_LEFT","DIRECTION_TOP_TO_BOTTOM","DIRECTION_BOTTOM_TO_TOP","LegendItemDirection","itemsProps","display","justifyContent","dir","padding","borderRadius","boxShadow","textColor","justify","shapes","code","trim","SymbolShape","shape","symbolShape","Highlight","language","Legends","Layout","Provider","value","nivo","title","PageContent","className"],"mappings":"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","file":"component---src-pages-guides-legends-js-84482d8331560720aed5.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport const FullWidthBanner = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    margin-bottom: 40px;\n    padding: 20px;\n`\n\nexport const DescriptionBlock = styled.div`\n    max-width: 800px;\n    margin: 0 auto 50px;\n\n    ${media.tablet`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n`\n\nexport const Card = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    box-shadow: ${({ theme }) => theme.cardShadow};\n`\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport omit from 'lodash/omit'\nimport {\n    BoxLegendSvg,\n    ANCHOR_TOP_LEFT,\n    ANCHOR_TOP,\n    ANCHOR_TOP_RIGHT,\n    ANCHOR_RIGHT,\n    ANCHOR_BOTTOM_RIGHT,\n    ANCHOR_BOTTOM,\n    ANCHOR_BOTTOM_LEFT,\n    ANCHOR_LEFT,\n    ANCHOR_CENTER,\n} from '@nivo/legends'\nimport { useTheme } from '../../../theming/context'\n\nconst anchors = [\n    ANCHOR_TOP_LEFT,\n    ANCHOR_TOP,\n    ANCHOR_TOP_RIGHT,\n    ANCHOR_RIGHT,\n    ANCHOR_BOTTOM_RIGHT,\n    ANCHOR_BOTTOM,\n    ANCHOR_BOTTOM_LEFT,\n    ANCHOR_LEFT,\n    ANCHOR_CENTER,\n]\n\nconst translateExamples = [\n    {\n        anchor: ANCHOR_TOP,\n        translateX: -160,\n        translateY: -30,\n    },\n    {\n        anchor: ANCHOR_LEFT,\n        translateX: -30,\n        translateY: 50,\n    },\n    {\n        anchor: ANCHOR_RIGHT,\n        translateX: -30,\n        translateY: -60,\n    },\n    {\n        anchor: ANCHOR_BOTTOM,\n        translateX: 160,\n        translateY: 30,\n    },\n]\n\nconst margin = 30\nconst legendProps = {\n    containerWidth: 800 - margin * 2,\n    containerHeight: 300 - margin * 2,\n    itemWidth: 120,\n    itemHeight: 16,\n    itemsSpacing: 4,\n    direction: 'column',\n}\n\nconst LegendPosition = () => {\n    const theme = useTheme()\n\n    return (\n        <div>\n            <h2>Legend position</h2>\n            <p>\n                The legend can be positioned in your chart area using the <code>anchor</code>{' '}\n                property.\n                <br />\n                You have 9 available directives:\n            </p>\n            <svg\n                width={legendProps.containerWidth + margin * 2}\n                height={legendProps.containerHeight + margin * 2}\n                style={{\n                    background: theme.colors.cardBackground,\n                }}\n            >\n                <text\n                    x={legendProps.containerWidth / 2 + margin}\n                    y={margin / 2}\n                    textAnchor=\"middle\"\n                    style={{\n                        alignmentBaseline: 'middle',\n                        fill: theme.colors.textLight,\n                        fontSize: '14px',\n                    }}\n                >\n                    margin\n                </text>\n                <g transform={`translate(${margin},${margin})`}>\n                    <rect\n                        fill={theme.colors.background}\n                        width={legendProps.containerWidth}\n                        height={legendProps.containerHeight}\n                    />\n                    {anchors.map(anchor => (\n                        <BoxLegendSvg\n                            {...legendProps}\n                            itemTextColor={theme.colors.text}\n                            key={anchor}\n                            anchor={anchor}\n                            data={[\n                                { id: 'a', label: anchor, color: theme.colors.accent },\n                                { id: 'b', label: '...', color: theme.colors.accent },\n                                { id: 'c', label: '...', color: theme.colors.accent },\n                            ]}\n                        />\n                    ))}\n                </g>\n            </svg>\n            <p>\n                The legend's anchor is relative to the inner chart area (with margin applied), but\n                depending on the chart type, you'll probably want to move it outside of this area.\n                <br />\n                That's where <code>translateX</code> & <code>translateY</code> come into play,\n                allowing to adjust the legend position from its original anchor.\n            </p>\n            <svg\n                width={legendProps.containerWidth + margin * 2}\n                height={legendProps.containerHeight + margin * 2}\n                style={{\n                    background: theme.colors.cardBackground,\n                }}\n            >\n                <text\n                    x={legendProps.containerWidth / 2 + margin}\n                    y={margin / 2}\n                    textAnchor=\"middle\"\n                    style={{\n                        alignmentBaseline: 'middle',\n                        fill: theme.colors.textLight,\n                        fontSize: '14px',\n                    }}\n                >\n                    margin\n                </text>\n                <g transform={`translate(${margin},${margin})`}>\n                    <rect\n                        fill={theme.colors.background}\n                        width={legendProps.containerWidth}\n                        height={legendProps.containerHeight}\n                    />\n                    {translateExamples.map((example, i) => (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legendProps}\n                            {...omit(example, ['translateX', 'translateY'])}\n                            itemTextColor={theme.colors.text}\n                            data={[\n                                {\n                                    id: example.anchor,\n                                    label: `${example.anchor} (regular)`,\n                                    color: theme.colors.text,\n                                },\n                            ]}\n                        />\n                    ))}\n                    {translateExamples.map((example, i) => (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legendProps}\n                            {...example}\n                            itemTextColor={theme.colors.text}\n                            data={[\n                                {\n                                    id: 'a',\n                                    label: `${example.anchor} (translated)`,\n                                    color: theme.colors.accent,\n                                },\n                                {\n                                    id: 'b',\n                                    label: `translateX: ${example.translateX}`,\n                                    color: theme.colors.accent,\n                                },\n                                {\n                                    id: 'c',\n                                    label: `translateY: ${example.translateY}`,\n                                    color: theme.colors.accent,\n                                },\n                            ]}\n                        />\n                    ))}\n                </g>\n            </svg>\n        </div>\n    )\n}\n\nexport default LegendPosition\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTheme } from '../../../theming/context'\n\nconst legendProps = {\n    containerWidth: 800,\n    containerHeight: 90,\n    itemWidth: 70,\n    itemHeight: 24,\n}\n\nconst LegendDirection = () => {\n    const theme = useTheme()\n\n    return (\n        <div>\n            <h2>Legend direction</h2>\n            <p>\n                Legends support two directions, using the <code>direction</code> property,{' '}\n                <code>column</code> or <code>row</code>.\n            </p>\n            <svg width={legendProps.containerWidth} height={legendProps.containerHeight}>\n                <BoxLegendSvg\n                    {...legendProps}\n                    itemTextColor={theme.colors.text}\n                    anchor=\"left\"\n                    direction=\"column\"\n                    data={[\n                        { id: 'a', label: `column`, color: theme.colors.accent },\n                        { id: 'b', label: `column`, color: theme.colors.accent },\n                        { id: 'c', label: `column`, color: theme.colors.accent },\n                    ]}\n                />\n                <BoxLegendSvg\n                    {...legendProps}\n                    itemTextColor={theme.colors.text}\n                    anchor=\"left\"\n                    translateX={260}\n                    direction=\"row\"\n                    data={[\n                        { id: 'a', label: `row`, color: theme.colors.accent },\n                        { id: 'b', label: `row`, color: theme.colors.accent },\n                        { id: 'c', label: `row`, color: theme.colors.accent },\n                    ]}\n                />\n            </svg>\n        </div>\n    )\n}\n\nexport default LegendDirection\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport {\n    LegendSvgItem,\n    DIRECTION_LEFT_TO_RIGHT,\n    DIRECTION_RIGHT_TO_LEFT,\n    DIRECTION_TOP_TO_BOTTOM,\n    DIRECTION_BOTTOM_TO_TOP,\n} from '@nivo/legends'\nimport { useTheme } from '../../../theming/context'\n\nconst itemDirections = [\n    DIRECTION_LEFT_TO_RIGHT,\n    DIRECTION_RIGHT_TO_LEFT,\n    DIRECTION_TOP_TO_BOTTOM,\n    DIRECTION_BOTTOM_TO_TOP,\n]\n\nconst LegendItemDirection = () => {\n    const theme = useTheme()\n\n    const itemsProps = {\n        x: 0,\n        y: 0,\n        width: 160,\n        height: 40,\n        data: {\n            id: 'demo',\n            color: theme.colors.accent,\n        },\n    }\n\n    return (\n        <div>\n            <h2>Legend item direction</h2>\n            <p>\n                The <code>itemDirection</code> property defines how symbol and label are positioned.\n                <br />\n                You have 4 available directives:\n            </p>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                }}\n            >\n                {itemDirections.map(dir => (\n                    <div\n                        key={dir}\n                        style={{\n                            background: theme.colors.cardBackground,\n                            padding: '10px 15px',\n                            borderRadius: 2,\n                            display: 'flex',\n                            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n                        }}\n                    >\n                        <svg width={itemsProps.width} height={itemsProps.height}>\n                            <LegendSvgItem\n                                {...itemsProps}\n                                textColor={theme.colors.text}\n                                data={{\n                                    ...itemsProps.data,\n                                    label: dir,\n                                }}\n                                direction={dir}\n                            />\n                        </svg>\n                    </div>\n                ))}\n            </div>\n            <p>\n                The behavior is slightly different if you set <code>justify</code> to{' '}\n                <code>true</code> as the label will be positioned at the opposite of the symbol,\n                filling up the whole width/height of the legend's item.\n            </p>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                }}\n            >\n                {itemDirections.map(dir => (\n                    <div\n                        key={dir}\n                        style={{\n                            background: theme.colors.cardBackground,\n                            padding: '9px 12px',\n                            display: 'flex',\n                            boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)',\n                        }}\n                    >\n                        <svg key={dir} width={itemsProps.width} height={itemsProps.height}>\n                            <LegendSvgItem\n                                {...itemsProps}\n                                textColor={theme.colors.text}\n                                data={{\n                                    ...itemsProps.data,\n                                    label: dir,\n                                }}\n                                direction={dir}\n                                justify={true}\n                            />\n                        </svg>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default LegendItemDirection\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { LegendSvgItem, DIRECTION_LEFT_TO_RIGHT } from '@nivo/legends'\nimport Highlight from '../../Highlight'\nimport { useTheme } from '../../../theming/context'\n\nconst shapes = ['square', 'circle', 'triangle', 'diamond']\n\nconst code = `\nconst CustomSymbolShape = ({\n    x, y, size, fill, borderWidth, borderColor\n}) => (\n    <rect\n        x={x}\n        y={y}\n        transform={\\`rotate(45 \\${size/2} \\${size/2})\\`}\n        fill={fill}\n        strokeWidth={borderWidth}\n        stroke={borderColor}\n        width={size}\n        height={size}\n        style={{ pointerEvents: 'none' }}\n    />\n)\n`.trim()\n\nconst SymbolShape = () => {\n    const theme = useTheme()\n\n    const itemsProps = {\n        x: 0,\n        y: 0,\n        width: 160,\n        height: 40,\n        data: {\n            id: 'demo',\n            color: theme.colors.accent,\n        },\n    }\n\n    return (\n        <div>\n            <h2>Symbol shape</h2>\n            <p>\n                You can customize symbols using <code>symbolShape</code> property.\n            </p>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                }}\n            >\n                {shapes.map(shape => (\n                    <div\n                        key={shape}\n                        style={{\n                            background: theme.colors.cardBackground,\n                            padding: '10px 15px',\n                            borderRadius: 2,\n                            display: 'flex',\n                            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n                        }}\n                    >\n                        <svg width={itemsProps.width} height={itemsProps.height}>\n                            <LegendSvgItem\n                                {...itemsProps}\n                                textColor={theme.colors.text}\n                                data={{\n                                    ...itemsProps.data,\n                                    label: shape,\n                                }}\n                                direction={DIRECTION_LEFT_TO_RIGHT}\n                                symbolShape={shape}\n                            />\n                        </svg>\n                    </div>\n                ))}\n            </div>\n            <p>\n                You can also use a custom shape passing a component to <code>symbolShape</code>:\n            </p>\n            <Highlight code={code} language=\"jsx\" />\n        </div>\n    )\n}\n\nexport default SymbolShape\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { themeContext } from '@nivo/core'\nimport { useTheme } from '../../theming/context'\nimport Layout from '../../components/Layout'\nimport SEO from '../../components/seo'\nimport PageContent from '../../components/PageContent'\nimport LegendPosition from '../../components/guides/legends/LegendPosition'\nimport LegendDirection from '../../components/guides/legends/LegendDirection'\nimport LegendItemDirection from '../../components/guides/legends/LegendItemDirection'\nimport SymbolShape from '../../components/guides/legends/SymbolShape'\nimport { DescriptionBlock } from '../../components/styled'\n\nconst Legends = () => {\n    const theme = useTheme()\n\n    return (\n        <Layout>\n            <themeContext.Provider value={theme.nivo}>\n                <SEO title=\"Legends Guide\" />\n                <PageContent>\n                    <div className=\"guide__header\">\n                        <h1>Legends</h1>\n                    </div>\n                </PageContent>\n                <DescriptionBlock>\n                    <p>Let's see how to add legends to your charts.</p>\n                    <p>\n                        Legend components are available via the <code>@nivo/legends</code> package,\n                        however it's added as a dependency for most chart packages supporting them,\n                        in most cases you won't have to add it as a direct dependency.\n                    </p>\n                    <LegendPosition />\n                    <LegendDirection />\n                    <LegendItemDirection />\n                    <SymbolShape />\n                </DescriptionBlock>\n            </themeContext.Provider>\n        </Layout>\n    )\n}\n\nexport default Legends\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport default styled.div`\n    margin: 0 50px;\n    position: relative;\n\n    ${media.tablet`\n        & {\n            margin: 0 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px;\n        }\n    `}\n`\n"],"sourceRoot":""}