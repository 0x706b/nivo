{"version":3,"file":"component---src-pages-bullet-index-js-0d8f681036db9485b707.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/BulletMarkersItem.tsx","webpack://nivo-website/../src/BulletRectsItem.tsx","webpack://nivo-website/../src/BulletTooltip.tsx","webpack://nivo-website/../src/BulletMarkers.tsx","webpack://nivo-website/../src/BulletRects.tsx","webpack://nivo-website/../src/BulletItem.tsx","webpack://nivo-website/../src/Bullet.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveBullet.tsx","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/xySeries.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/./src/data/components/bullet/props.ts","webpack://nivo-website/./src/pages/bullet/index.js","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","import { BulletMarkersItemProps } from './types'\nimport { animated } from '@react-spring/web'\n\nexport const BulletMarkersItem = ({\n    animatedProps: { color, transform, x, y1, y2 },\n    data,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: BulletMarkersItemProps) => {\n    return (\n        <animated.line\n            transform={transform}\n            x1={x}\n            x2={x}\n            y1={y1}\n            y2={y2}\n            fill=\"none\"\n            stroke={color}\n            strokeWidth=\"5\"\n            onMouseMove={event => onMouseMove(data, event)}\n            onMouseEnter={event => onMouseEnter(data, event)}\n            onMouseLeave={event => onMouseLeave(data, event)}\n            onClick={event => onClick(data, event)}\n        />\n    )\n}\n","import { BulletRectsItemProps } from './types'\nimport { animated, to } from '@react-spring/web'\n\nexport const BulletRectsItem = ({\n    animatedProps: { x, y, width, height, color },\n    borderColor,\n    borderWidth,\n    data,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: BulletRectsItemProps) => {\n    return (\n        <animated.rect\n            x={x}\n            y={y}\n            width={to(width, value => Math.max(value, 0))}\n            height={to(height, value => Math.max(value, 0))}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseMove={event => onMouseMove(data, event)}\n            onMouseEnter={event => onMouseEnter(data, event)}\n            onMouseLeave={event => onMouseLeave(data, event)}\n            onClick={event => onClick(data, event)}\n        />\n    )\n}\n","import { BulletTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BulletTooltip = ({ color, v0, v1 }: BulletTooltipProps) => {\n    return (\n        <BasicTooltip\n            id={\n                v1 ? (\n                    <span>\n                        <strong>{v0}</strong> to <strong>{v1}</strong>\n                    </span>\n                ) : (\n                    <strong>{v0}</strong>\n                )\n            }\n            enableChip={true}\n            color={color}\n        />\n    )\n}\n","import { useMemo } from 'react'\nimport * as React from 'react'\nimport { useTransition } from '@react-spring/web'\n// @ts-ignore\nimport { useMotionConfig } from '@nivo/core'\nimport {\n    BulletMarkersProps,\n    ComputedMarkersDatum,\n    MarkerWithPosition,\n    PositionWithColor,\n} from './types'\n\ntype MouseEventWithDatum = (\n    datum: ComputedMarkersDatum,\n    event: React.MouseEvent<SVGLineElement, MouseEvent>\n) => void\n\ntype EventHandlers = Record<'onMouseEnter' | 'onMouseLeave' | 'onClick', MouseEventWithDatum>\n\nconst getPositionGenerator = ({\n    layout,\n    reverse,\n    scale,\n    height,\n    markerSize,\n}: Pick<BulletMarkersProps, 'layout' | 'reverse' | 'scale' | 'height' | 'markerSize'>) => {\n    if (layout === 'horizontal') {\n        return (marker: ComputedMarkersDatum) => {\n            const x = scale(marker.value)\n            const y = height / 2\n            const rotation = reverse === true ? 180 : 0\n\n            return { x, y, size: markerSize, rotation }\n        }\n    }\n\n    return (marker: ComputedMarkersDatum) => {\n        const x = height / 2\n        const y = scale(marker.value)\n        const rotation = reverse === true ? 270 : 90\n\n        return { x, y, size: markerSize, rotation }\n    }\n}\n\nexport const BulletMarkers = ({\n    scale,\n    layout,\n    reverse,\n    markers,\n    height,\n    markerSize,\n    component,\n    onMouseEnter,\n    onMouseLeave,\n    onClick,\n}: BulletMarkersProps & EventHandlers) => {\n    const getPosition = useMemo(\n        () => getPositionGenerator({ layout, reverse, scale, height, markerSize }),\n        [layout, reverse, scale, height, markerSize]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<MarkerWithPosition, PositionWithColor>(\n        markers.map(marker => ({ ...marker, position: getPosition(marker) })),\n        {\n            keys: marker => `${marker.index}`,\n            enter: ({ color, position }: MarkerWithPosition) => ({\n                color,\n                transform: `rotate(${position.rotation}, ${position.x}, ${position.y})`,\n                x: position.x,\n                y1: position.y - position.size / 2,\n                y2: position.y + position.size / 2,\n            }),\n            update: ({ color, position }: MarkerWithPosition) => ({\n                color,\n                transform: `rotate(${position.rotation}, ${position.x}, ${position.y})`,\n                x: position.x,\n                y1: position.y - position.size / 2,\n                y2: position.y + position.size / 2,\n            }),\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <>\n            {transition((props, { position, ...marker }) =>\n                React.createElement(component, {\n                    key: marker.index,\n                    ...marker,\n                    ...position,\n                    animatedProps: props,\n                    data: marker,\n                    onMouseEnter,\n                    onMouseMove: onMouseEnter,\n                    onMouseLeave,\n                    onClick,\n                })\n            )}\n        </>\n    )\n}\n","import { createElement, useMemo } from 'react'\nimport { useTransition, animated, to } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { computeRects } from './compute'\nimport { BulletRectsProps, BulletRectComputedRect, BulletRectAnimatedProps } from './types'\nimport { useInheritedColor } from '@nivo/colors'\n\nexport const BulletRects = ({\n    animatedProps,\n    data,\n    layout,\n    y,\n    borderColor,\n    borderWidth,\n    component,\n    reverse,\n    scale,\n    height,\n    onMouseEnter,\n    onMouseLeave,\n    onClick,\n}: BulletRectsProps) => {\n    const rects = useMemo(\n        () =>\n            computeRects({\n                data,\n                layout,\n                reverse,\n                scale,\n                height,\n            }),\n        [data, layout, reverse, scale, height]\n    )\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getTransform = (value: number) =>\n        `translate(${layout === 'horizontal' ? 0 : value},${layout === 'horizontal' ? value : 0})`\n\n    const transform = animatedProps ? to(animatedProps.measuresY, getTransform) : getTransform(y)\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<BulletRectComputedRect, BulletRectAnimatedProps>(rects, {\n        keys: rect => `${rect.data.index}`,\n        enter: rect => ({\n            x: rect.x,\n            y: rect.y,\n            width: rect.width,\n            height: rect.height,\n            color: rect.data.color,\n        }),\n        update: rect => ({\n            x: rect.x,\n            y: rect.y,\n            width: rect.width,\n            height: rect.height,\n            color: rect.data.color,\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={transform}>\n            {transition((props, rect) =>\n                createElement(component, {\n                    key: rect.data.index,\n                    index: rect.data.index,\n                    animatedProps: props,\n                    data: rect.data,\n                    x: props.x.get(),\n                    y: props.y.get(),\n                    borderColor: getBorderColor(rect.data),\n                    borderWidth,\n                    width: to(props.width, value => Math.max(value, 0)).get(),\n                    height: to(props.height, value => Math.max(value, 0)).get(),\n                    color: props.color.get(),\n                    onMouseEnter,\n                    onMouseMove: onMouseEnter,\n                    onMouseLeave,\n                    onClick,\n                })\n            )}\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { Axis } from '@nivo/axes'\n// @ts-ignore\nimport { getColorScale, useMotionConfig, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { stackValues } from './compute'\nimport { BulletMarkers } from './BulletMarkers'\nimport { BulletRects } from './BulletRects'\nimport { BulletItemProps } from './types'\n\nexport const BulletItem = ({\n    id,\n\n    scale,\n    layout,\n    reverse,\n    axisPosition,\n    x,\n    y,\n    width,\n    height,\n\n    title = id,\n    titlePosition,\n    titleAlign,\n    titleOffsetX,\n    titleOffsetY,\n    titleRotation,\n    tooltip,\n\n    rangeBorderColor,\n    rangeBorderWidth,\n    rangeComponent,\n    rangeColors,\n    ranges,\n\n    measureBorderColor,\n    measureBorderWidth,\n    measureComponent,\n    measureHeight,\n    measureColors,\n    measures,\n\n    markerComponent,\n    markerColors,\n    markerHeight,\n    markers = [],\n\n    onRangeClick,\n    onMeasureClick,\n    onMarkerClick,\n}: BulletItemProps) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const computedRanges = useMemo(() => {\n        const rangeColorScale = getColorScale(rangeColors, scale, true)\n\n        return stackValues(ranges, scale, rangeColorScale, 'range')\n    }, [rangeColors, ranges, scale])\n\n    const computedMeasures = useMemo(() => {\n        const measureColorScale = getColorScale(measureColors, scale)\n\n        return stackValues(measures, scale, measureColorScale, 'measures')\n    }, [measureColors, measures, scale])\n\n    const computedMarkers = useMemo(() => {\n        const markerColorScale = getColorScale(markerColors, scale)\n\n        return markers.map((marker: number, index: number) => ({\n            value: marker,\n            index,\n            color: markerColorScale(\n                markerColorScale.type === 'sequential' ? marker : index\n            ) as string,\n        }))\n    }, [markerColors, markers, scale])\n\n    const TooltipComponent = tooltip\n\n    const rangeNodes = (\n        <BulletRects\n            data={computedRanges}\n            scale={scale}\n            layout={layout}\n            reverse={reverse}\n            x={0}\n            y={0}\n            width={width}\n            height={height}\n            component={rangeComponent}\n            borderColor={rangeBorderColor}\n            borderWidth={rangeBorderWidth}\n            onMouseEnter={(range, event) => {\n                showTooltipFromEvent(\n                    <TooltipComponent color={range.color} v0={range.v0} v1={range.v1} />,\n                    event\n                )\n            }}\n            onMouseLeave={hideTooltip}\n            onClick={(range, event) => {\n                onRangeClick?.({ id, ...range }, event)\n            }}\n        />\n    )\n\n    const markerNodes = (\n        <BulletMarkers\n            markers={computedMarkers}\n            scale={scale}\n            layout={layout}\n            reverse={reverse}\n            height={height}\n            markerSize={markerHeight}\n            component={markerComponent}\n            onMouseEnter={(marker, event) => {\n                showTooltipFromEvent(\n                    <TooltipComponent color={marker.color} v0={marker.value} />,\n                    event\n                )\n            }}\n            onMouseLeave={hideTooltip}\n            onClick={(marker, event) => {\n                onMarkerClick?.({ id, ...marker }, event)\n            }}\n        />\n    )\n\n    const axisX = layout === 'vertical' && axisPosition === 'after' ? height : 0\n    const axisY = layout === 'horizontal' && axisPosition === 'after' ? height : 0\n\n    const axis = (\n        <g transform={`translate(${axisX},${axisY})`}>\n            <Axis\n                axis={layout === 'horizontal' ? 'x' : 'y'}\n                length={layout === 'horizontal' ? width : height}\n                scale={scale}\n                ticksPosition={axisPosition}\n            />\n        </g>\n    )\n\n    const titleX =\n        layout === 'horizontal'\n            ? titlePosition === 'before'\n                ? titleOffsetX\n                : width + titleOffsetX\n            : height / 2 + titleOffsetX\n    const titleY =\n        layout === 'horizontal'\n            ? height / 2 + titleOffsetY\n            : titlePosition === 'before'\n            ? titleOffsetY\n            : width + titleOffsetY\n\n    const titleNode = (\n        <g transform={`translate(${titleX},${titleY}) rotate(${titleRotation})`}>\n            {typeof title === 'string' ? (\n                <text\n                    style={{\n                        ...theme?.labels?.text,\n                        dominantBaseline: 'central',\n                        textAnchor: titleAlign,\n                    }}\n                >\n                    {title}\n                </text>\n            ) : (\n                title\n            )}\n        </g>\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        measuresY: (height - measureHeight) / 2,\n        transform: `translate(${x},${y})`,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            {rangeNodes}\n            <BulletRects\n                animatedProps={animatedProps}\n                data={computedMeasures}\n                scale={scale}\n                layout={layout}\n                reverse={reverse}\n                x={0}\n                y={0}\n                width={width}\n                height={measureHeight}\n                component={measureComponent}\n                borderColor={measureBorderColor}\n                borderWidth={measureBorderWidth}\n                onMouseEnter={(measure, event) => {\n                    showTooltipFromEvent(\n                        <TooltipComponent color={measure.color} v0={measure.v1} />,\n                        event\n                    )\n                }}\n                onMouseLeave={hideTooltip}\n                onClick={(measure, event) => {\n                    onMeasureClick?.({ id, ...measure }, event)\n                }}\n            />\n            {axis}\n            {markerNodes}\n            {titleNode}\n        </animated.g>\n    )\n}\n","import { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { defaultProps } from './props'\nimport { BulletSvgProps } from './types'\nimport { BulletItem } from './BulletItem'\nimport { useEnhancedData } from './hooks'\n\nexport const Bullet = (props: BulletSvgProps) => {\n    const {\n        data,\n\n        layout,\n        spacing,\n        measureSize,\n        markerSize,\n        reverse,\n        axisPosition,\n\n        minValue,\n        maxValue,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        titlePosition,\n        titleAlign,\n        titleOffsetX,\n        titleOffsetY,\n        titleRotation,\n\n        rangeBorderColor,\n        rangeBorderWidth,\n        rangeComponent,\n        rangeColors,\n\n        measureBorderColor,\n        measureBorderWidth,\n        measureComponent,\n        measureColors,\n\n        markerComponent,\n        markerColors,\n\n        theme,\n        tooltip = defaultProps.tooltip,\n\n        animate,\n        motionConfig,\n\n        isInteractive,\n        onRangeClick,\n        onMeasureClick,\n        onMarkerClick,\n\n        role,\n    } = { ...defaultProps, ...props }\n\n    const { margin, innerWidth, innerHeight } = useDimensions(width, height, partialMargin)\n\n    const itemHeight =\n        layout === 'horizontal'\n            ? (innerHeight - spacing * (data.length - 1)) / data.length\n            : (innerWidth - spacing * (data.length - 1)) / data.length\n\n    const measureHeight = itemHeight * measureSize\n    const markerHeight = itemHeight * markerSize\n\n    const enhancedData = useEnhancedData(data, {\n        height: innerHeight,\n        layout,\n        maxValue: maxValue === 'auto' ? undefined : maxValue,\n        minValue: minValue === 'auto' ? undefined : minValue,\n        reverse,\n        width: innerWidth,\n    })\n\n    return (\n        <Container\n            isInteractive={isInteractive}\n            theme={theme}\n            animate={animate}\n            motionConfig={motionConfig}\n        >\n            <SvgWrapper width={width} height={height} margin={margin} role={role}>\n                {enhancedData.map((d, i) => (\n                    <BulletItem\n                        key={d.id}\n                        {...d}\n                        layout={layout}\n                        reverse={reverse}\n                        x={layout === 'vertical' ? itemHeight * i + spacing * i : 0}\n                        y={layout === 'horizontal' ? itemHeight * i + spacing * i : 0}\n                        width={innerWidth}\n                        height={itemHeight}\n                        titlePosition={titlePosition}\n                        titleAlign={titleAlign}\n                        titleOffsetX={titleOffsetX}\n                        titleOffsetY={titleOffsetY}\n                        titleRotation={titleRotation}\n                        measureHeight={measureHeight}\n                        markerHeight={markerHeight}\n                        rangeBorderColor={rangeBorderColor}\n                        rangeBorderWidth={rangeBorderWidth}\n                        rangeComponent={rangeComponent}\n                        rangeColors={rangeColors}\n                        measureBorderColor={measureBorderColor}\n                        measureBorderWidth={measureBorderWidth}\n                        measureComponent={measureComponent}\n                        measureColors={measureColors}\n                        markerComponent={markerComponent}\n                        markerColors={markerColors}\n                        axisPosition={axisPosition}\n                        onRangeClick={onRangeClick}\n                        onMeasureClick={onMeasureClick}\n                        onMarkerClick={onMarkerClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </SvgWrapper>\n        </Container>\n    )\n}\n","import { createLinearScale } from '@nivo/scales'\nimport { useMemo } from 'react'\nimport { Datum, CommonBulletProps } from './types'\n\nexport const useEnhancedData = (\n    data: Datum[],\n    {\n        layout,\n        maxValue,\n        minValue,\n        reverse,\n        height,\n        width,\n    }: Pick<CommonBulletProps, 'layout' | 'reverse' | 'height' | 'width'> &\n        Record<'maxValue' | 'minValue', number | undefined>\n) => {\n    return useMemo(\n        () =>\n            data.map(d => {\n                const all = [...d.ranges, ...d.measures, ...(d.markers ?? [])]\n                const max = maxValue ?? Math.max(...all)\n                const min = minValue ?? Math.min(...all)\n\n                const scale = createLinearScale(\n                    { clamp: true, min, max, type: 'linear' },\n                    { all, max, min },\n                    layout === 'horizontal' ? width : height,\n                    layout === 'horizontal' ? (reverse ? 'y' : 'x') : reverse ? 'x' : 'y'\n                )\n\n                return {\n                    ...d,\n                    scale,\n                }\n            }),\n        [data, height, layout, maxValue, minValue, reverse, width]\n    )\n}\n","import { ResponsiveWrapper, Dimensions } from '@nivo/core'\nimport { BulletSvgProps } from './types'\nimport { Bullet } from './Bullet'\n\nexport const ResponsiveBullet = (props: Omit<BulletSvgProps, 'height' | 'width'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: Dimensions) => <Bullet width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    source: string\n    target: string\n    distance: number\n}\n\ntype ExtraNode = {\n    id: string\n    height: number\n    color: string\n    size: number\n}\n\nexport const generateNetworkData = ({\n    rootSize = 32,\n    midSize = 24,\n    leafSize = 12,\n    minMidNodes = 5,\n    maxMidNodes = 11,\n    minLeaves = 3,\n    maxLeaves = 9,\n}: {\n    rootSize?: number\n    midSize?: number\n    leafSize?: number\n    minMidNodes?: number\n    maxMidNodes?: number\n    minLeaves?: number\n    maxLeaves?: number\n} = {}) => {\n    const rootNode = {\n        id: 'Node 0',\n        height: 2,\n        size: rootSize,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `Node ${k + 1}`,\n        height: 1,\n        size: midSize,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: 'Node 0',\n            target: source.id,\n            distance: 80,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 80,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                height: 0,\n                size: leafSize,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 50,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","interface XYRangeStaticValues {\n    values: string[] | number[]\n}\n\ninterface XYRandomNumericValues {\n    length: number\n    min: number\n    max: number\n    round?: boolean\n}\n\ntype XYRangeValues = XYRangeStaticValues | XYRandomNumericValues\n\nconst getValueGenerator = (config: XYRangeValues) => {\n    let generator: (index: number) => string | number\n\n    if ('values' in config) {\n        generator = (index: number) => config.values[index]\n    } else {\n        generator = () => {\n            let value = config.min + Math.random() * (config.max - config.min)\n            if (config.round) {\n                value = Math.round(value)\n            }\n\n            return value\n        }\n    }\n\n    return generator\n}\n\nexport const generateXYSeries = ({\n    serieIds,\n    x,\n    y,\n}: {\n    serieIds: string[]\n    x: XYRangeValues\n    y: XYRangeValues\n}) => {\n    const xLength = 'length' in x ? x.length : x.values.length\n\n    const getX = getValueGenerator(x)\n    const getY = getValueGenerator(y)\n\n    return serieIds.map(serieId => {\n        return {\n            id: serieId,\n            data: Array.from({ length: xLength }).map((_, index) => {\n                return {\n                    x: getX(index),\n                    y: getY(index),\n                }\n            }),\n        }\n    })\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\ninterface LibTreeDatum {\n    name: string\n    loc?: number\n    color: string\n    children?: LibTreeDatum[]\n}\n\nexport const generateLibTree = (\n    name = 'nivo',\n    limit?: number | null,\n    children = libTreeItems\n): LibTreeDatum => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: LibTreeDatum = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\nexport * from './xySeries'\n","import { defaultProps } from '@nivo/bullet'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\nimport { chartDimensions } from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        flavors: ['svg'],\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:        {string|number}\n                title?:    {ReactNode}\n                subtitle?: {ReactNode}\n                data: Array<{\n                    ranges:   number[]\n                    measures: number[]\n                    markers?: number[]\n                }>\n            }>\n            \\`\\`\\`\n\n            If \\`title\\` is \\`undefined\\`, \\`id\\` will be used for\n            \\`title\\`.\n        `,\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'minValue',\n        help: 'Minimum value.',\n        flavors: ['svg'],\n        description: `\n            Minimum value, if 'auto',\n            will use min value from\n            the provided data.\n        `,\n        required: false,\n        defaultValue: defaultProps.minValue,\n        type: `number | 'auto'`,\n        group: 'Base',\n        control: {\n            type: 'switchableRange',\n            disabledValue: 'auto',\n            defaultValue: 0,\n            min: 0,\n            max: 10,\n        },\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        flavors: ['svg'],\n        description: `\n            Maximum value, if 'auto',\n            will use max value from\n            the provided data.\n        `,\n        required: false,\n        defaultValue: defaultProps.maxValue,\n        type: `number | 'auto'`,\n        group: 'Base',\n        control: {\n            type: 'switchableRange',\n            disabledValue: 'auto',\n            defaultValue: 100,\n            min: 50,\n            max: 100,\n        },\n    },\n    ...chartDimensions(allFlavors),\n    {\n        key: 'layout',\n        group: 'Base',\n        help: `How to display items.`,\n        flavors: ['svg'],\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.layout,\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'reverse',\n        group: 'Base',\n        help: 'Reverse chart.',\n        description: `\n            Reverse chart, starts on top instead of bottom\n            for vertical layout and right instead of left\n            for horizontal one.\n        `,\n        flavors: ['svg'],\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.reverse,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'spacing',\n        help: 'define spacing between items.',\n        type: 'number',\n        flavors: ['svg'],\n        required: false,\n        defaultValue: defaultProps.spacing,\n        group: 'Base',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 100,\n        },\n    },\n    {\n        key: 'measureSize',\n        help: 'define size of measure related to item size, expressed as a ratio.',\n        type: 'number',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.measureSize,\n        group: 'Base',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'markerSize',\n        help: 'define size of markers related to item size, expressed as a ratio.',\n        type: 'number',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.markerSize,\n        group: 'Base',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 2,\n            step: 0.05,\n        },\n    },\n    themeProperty(['svg']),\n    {\n        key: 'rangeBorderColor',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Method to compute range border color.',\n        description: `\n            how to compute range border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.rangeBorderColor,\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'rangeBorderWidth',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Width of range border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.rangeBorderWidth,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'rangeComponent',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Custom component for ranges.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'rangeColors',\n        help: 'Ranges colors',\n        description: `\n            Defines colors for ranges,\n            you can either use categorical colors:\n            \\`greens\\` or sequential form: \\`seq:green\\`.\n        `,\n        type: 'string | Function | string[]',\n        flavors: ['svg'],\n        required: false,\n        defaultValue: defaultProps.rangeColors,\n        group: 'Style',\n        control: {\n            type: 'bullet_colors',\n        },\n    },\n    {\n        key: 'measureBorderColor',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Method to compute measure border color.',\n        description: `\n            how to compute measure border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.measureBorderColor,\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'measureBorderWidth',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Width of measure border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.measureBorderWidth,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'measureComponent',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Custom component for measures.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'measureColors',\n        help: 'Measures colors.',\n        description: `\n            Defines colors for measures,\n            you can either use categorical colors:\n            \\`greens\\` or sequential form: \\`seq:green\\`.\n        `,\n        type: 'string | Function | string[]',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.measureColors,\n        group: 'Style',\n        control: {\n            type: 'bullet_colors',\n        },\n    },\n    {\n        key: 'markerComponent',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Custom component for markers.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'markerColors',\n        flavors: ['svg'],\n        help: 'Markers colors.',\n        description: `\n            Defines colors for markers,\n            you can either use categorical colors:\n            \\`greens\\` or sequential form: \\`seq:green\\`.\n        `,\n        type: 'string | Function| string[]',\n        required: false,\n        defaultValue: defaultProps.markerColors,\n        group: 'Style',\n        control: {\n            type: 'bullet_colors',\n        },\n    },\n    {\n        key: 'axisPosition',\n        help: `Where to put axis.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.axisPosition,\n        flavors: ['svg'],\n        group: 'Axes',\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'titlePosition',\n        help: `Where to put title.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.titlePosition,\n        flavors: ['svg'],\n        group: 'Title',\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'titleAlign',\n        help: `title alignment.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.titleAlign,\n        flavors: ['svg'],\n        group: 'Title',\n        control: {\n            type: 'choices',\n            choices: [\n                { label: 'start', value: 'start' },\n                { label: 'middle', value: 'middle' },\n                { label: 'end', value: 'end' },\n            ],\n        },\n    },\n    {\n        key: 'titleOffsetX',\n        help: 'title x offset from bullet edge.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.titleOffsetX,\n        flavors: ['svg'],\n        group: 'Title',\n        control: {\n            type: 'range',\n            min: -100,\n            max: 100,\n            unit: 'px',\n        },\n    },\n    {\n        key: 'titleOffsetY',\n        help: 'title y offset from bullet edge.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.titleOffsetY,\n        flavors: ['svg'],\n        group: 'Title',\n        control: {\n            type: 'range',\n            min: -100,\n            max: 100,\n            unit: 'px',\n        },\n    },\n    {\n        key: 'titleRotation',\n        help: 'title rotation.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.titleRotation,\n        flavors: ['svg'],\n        group: 'Title',\n        control: {\n            type: 'angle',\n            start: 90,\n            min: -360,\n            max: 360,\n            step: 5,\n        },\n    },\n    {\n        key: 'onRangeClick',\n        flavors: ['svg'],\n        type: '(range, event) => void',\n        group: 'Interactivity',\n        required: false,\n        help: 'onClick handler for ranges.',\n        description: `\n            onClick handler for ranges, will receive range\n            data as first argument & event as second one.\n\n            The data has the following shape:\n            \\`\\`\\`\n            {\n                id:    string,\n                v0:    number,\n                v1:    number,\n                index: number,\n                color: string,\n            }\n            \\`\\`\\`\n\n            \\`v1\\` is the value of the range while\n            \\`v0\\` is the value of previous range.\n        `,\n    },\n    {\n        key: 'onMeasureClick',\n        flavors: ['svg'],\n        type: '(measure, event) => void',\n        group: 'Interactivity',\n        required: false,\n        help: 'onClick handler for measures.',\n        description: `\n            onClick handler for measures, will receive measure\n            data as first argument & event as second one.\n\n            The data has the following shape:\n            \\`\\`\\`\n            {\n                id:    string,\n                v0:    number,\n                v1:    number,\n                index: number,\n                color: string,\n            }\n            \\`\\`\\`\n\n            \\`v1\\` is the value of the measure while\n            \\`v0\\` is the value of previous measure.\n        `,\n    },\n    {\n        key: 'onMarkerClick',\n        flavors: ['svg'],\n        type: '(marker, event) => void',\n        group: 'Interactivity',\n        required: false,\n        help: 'onClick handler for markers.',\n        description: `\n            onClick handler for markers, will receive marker\n            data as first argument & event as second one.\n\n            The data has the following shape:\n            \\`\\`\\`\n            {\n                id:    string,\n                value: number,\n                index: number,\n                color: string,\n            }\n            \\`\\`\\`\n        `,\n    },\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import React from 'react'\nimport shuffle from 'lodash/shuffle'\nimport { ResponsiveBullet, defaultProps } from '@nivo/bullet'\nimport { generateBulletData } from '@nivo/generators'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/bullet/meta.yml'\nimport { groups } from '../../data/components/bullet/props'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst generateData = () => [\n    generateBulletData('temp.', shuffle([100, 120, 140])[0]),\n    generateBulletData('power', 2, { float: true, measureCount: 2 }),\n    generateBulletData('volume', shuffle([40, 60, 80])[0], { rangeCount: 8 }),\n    generateBulletData('cost', 500000, { measureCount: 2 }),\n    generateBulletData('revenue', shuffle([9, 11, 13])[0], { markerCount: 2 }),\n]\n\nconst initialProperties = {\n    minValue: defaultProps.minValue,\n    maxValue: defaultProps.maxValue,\n    margin: {\n        top: 50,\n        right: 90,\n        bottom: 50,\n        left: 90,\n    },\n    layout: defaultProps.layout,\n    reverse: defaultProps.reverse,\n    spacing: 46,\n    titlePosition: defaultProps.titlePosition,\n    titleAlign: 'start',\n    titleOffsetX: -70,\n    titleOffsetY: defaultProps.titleOffsetY,\n    titleRotation: defaultProps.titleRotation,\n    rangeBorderColor: defaultProps.rangeBorderColor,\n    rangeBorderWidth: defaultProps.rangeBorderWidth,\n    measureBorderColor: defaultProps.measureBorderColor,\n    measureBorderWidth: defaultProps.measureBorderWidth,\n    measureSize: 0.2,\n    markerSize: 0.6,\n    axisPosition: defaultProps.axisPosition,\n    rangeColors: defaultProps.rangeColors,\n    measureColors: defaultProps.measureColors,\n    markerColors: defaultProps.markerColors,\n    animate: defaultProps.animate,\n    motionConfig: defaultProps.motionConfig,\n}\n\nconst Bullet = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/bullet.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <ComponentTemplate\n            name=\"Bullet\"\n            meta={meta.Bullet}\n            icon=\"bullet\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={defaultProps}\n            generateData={generateData}\n            image={image}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveBullet\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onRangeClick={range => {\n                            logAction({\n                                type: 'click',\n                                label: `[range] ${range.id}: [${range.v0}, ${range.v1}]`,\n                                color: range.color,\n                                data: range,\n                            })\n                        }}\n                        onMeasureClick={measure => {\n                            logAction({\n                                type: 'click',\n                                label: `[measure] ${measure.id}: [${measure.v0}, ${measure.v1}]`,\n                                color: measure.color,\n                                data: measure,\n                            })\n                        }}\n                        onMarkerClick={marker => {\n                            logAction({\n                                type: 'click',\n                                label: `[marker] ${marker.id}: ${marker.value}`,\n                                color: marker.color,\n                                data: marker,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Bullet\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["day","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","days","range","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","d","x","y","ticks","value","key","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","isArray","Array","lines","x1","x2","y1","y2","AxisTick","_value","format","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","length","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","keys","tick","initial","textTransform","from","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","ctx","Number","degreesToRadians","String","renderAxesToCanvas","renderGridLinesToCanvas","BulletRectsItem","color","borderColor","borderWidth","data","onMouseEnter","onMouseMove","onMouseLeave","to","Math","fill","strokeWidth","stroke","defaultProps","layout","reverse","spacing","minValue","maxValue","axisPosition","titlePosition","titleAlign","titleRotation","titleOffsetX","titleOffsetY","rangeComponent","rangeColors","measureComponent","measureColors","markers","markerComponent","markerColors","rangeBorderWidth","rangeBorderColor","measureSize","measureBorderWidth","measureBorderColor","markerSize","isInteractive","tooltip","v0","v1","id","enableChip","motionDefaultProps","motionConfig","margin","role","stackValues","useAverage","min","max","type","v","a","last","acc","sequentialValue","index","colorScale","BulletMarkers","component","getPosition","marker","size","rotation","getPositionGenerator","BulletRects","rects","computeRect","h","getComputeRect","computeRects","getBorderColor","useInheritedColor","getTransform","rect","createElement","BulletItem","title","ranges","measureHeight","measures","markerHeight","onRangeClick","onMeasureClick","onMarkerClick","useTooltip","showTooltipFromEvent","hideTooltip","computedRanges","rangeColorScale","getColorScale","computedMeasures","measureColorScale","computedMarkers","markerColorScale","TooltipComponent","rangeNodes","markerNodes","axisX","axisY","titleX","titleY","titleNode","measuresY","measure","Bullet","partialMargin","useDimensions","innerWidth","innerHeight","itemHeight","enhancedData","all","createLinearScale","clamp","useEnhancedData","ResponsiveBullet","randColor","round","random","countryCodes","names","programmingLanguages","generateBulletData","subtitle","rangeCount","measureCount","markerCount","float","reduce","remaining","map","generateChordData","maxSize","selectedKeys","slice","matrix","generateNetworkData","rootSize","midSize","leafSize","minMidNodes","maxMidNodes","minLeaves","maxLeaves","rootNode","nodes","_","k","links","extraNodes","forEach","push","source","target","distance","concat","generateParallelCoordinatesData","shuffle","availableNodes","n","name","getNodeTargets","currentPath","targets","filter","Error","includes","join","targetId","getNodesTargets","targetsById","link","generateSankeyData","nodeCount","maxIterations","Object","assign","node","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","groups","categoryCount","group","groupIndex","price","datum","volume","categories","randomizeSwarmPlotData","previousData","getValueGenerator","generator","generateXYSeries","serieIds","xLength","getX","getY","serieId","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","label","language","uniqRand","used","randCountryCode","generateDrinkStats","xSize","types","country","find","generateSeries","ids","xKeys","generateDayCounts","timeDays","dayFormat","generateOrderedDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","i","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","help","flavors","description","required","defaultValue","control","disabledValue","chartDimensions","choices","unit","themeProperty","motionProperties","groupProperties","generateData","initialProperties","image","useStaticQuery","childImageSharp","gatsbyImageData","ComponentTemplate","meta","icon","currentFlavor","properties","defaultProperties","logAction","copyArray","shuffleSelf","module","exports","array","nativeFloor","floor","nativeRandom","lower","upper","collection","arrayMap","object","baseRandom","lastIndex","undefined","rand","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","baseValues"],"sourceRoot":""}