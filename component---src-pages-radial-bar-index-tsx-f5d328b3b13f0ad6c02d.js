"use strict";(self.webpackChunknivo_website=self.webpackChunknivo_website||[]).push([[295],{15050:function(e,r,t){t.d(r,{Ym:function(){return n},yB:function(){return a},Y2:function(){return o},UD:function(){return i},iM:function(){return l}});var n=1e3,a=6e4,o=36e5,i=864e5,l=6048e5},61904:function(e,r,t){t.d(r,{Z:function(){return o}});var n=new Date,a=new Date;function o(e,r,t,i){function l(r){return e(r=0===arguments.length?new Date:new Date(+r)),r}return l.floor=function(r){return e(r=new Date(+r)),r},l.ceil=function(t){return e(t=new Date(t-1)),r(t,1),e(t),t},l.round=function(e){var r=l(e),t=l.ceil(e);return e-r<t-e?r:t},l.offset=function(e,t){return r(e=new Date(+e),null==t?1:Math.floor(t)),e},l.range=function(t,n,a){var o,i=[];if(t=l.ceil(t),a=null==a?1:Math.floor(a),!(t<n&&a>0))return i;do{i.push(o=new Date(+t)),r(t,a),e(t)}while(o<t&&t<n);return i},l.filter=function(t){return o((function(r){if(r>=r)for(;e(r),!t(r);)r.setTime(r-1)}),(function(e,n){if(e>=e)if(n<0)for(;++n<=0;)for(;r(e,-1),!t(e););else for(;--n>=0;)for(;r(e,1),!t(e););}))},t&&(l.count=function(r,o){return n.setTime(+r),a.setTime(+o),e(n),e(a),Math.floor(t(n,a))},l.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?l.filter(i?function(r){return i(r)%e==0}:function(r){return l.count(0,r)%e==0}):l:null}),l}},62370:function(e,r,t){t.d(r,{h8:function(){return l},h6:function(){return s},Ld:function(){return u}});var n=t(48159),a=t.n(n),o=t(76744),i=t.n(o),l=function(e,r){var t=(void 0===r?{}:r).exclude,n=void 0===t?[]:t;return function(r,t){void 0===t&&(t={});var o={};return Object.keys(r).forEach((function(n){e[n]&&(o[n]=e[n](r[n],r,t))})),Object.assign({},a()(r,n),o)}},s=function(e){return function(r,t){return t["axis"+i()(e)].enable?a()(r,["enable"]):null}},u=function(e){var r=e.format;return e.enabled?r:void 0}},35567:function(e,r,t){t.r(r),t.d(r,{default:function(){return m}});var n=t(27378),a=t(73855),o=t(69857),i=t(13195),l=t(48159),s=t.n(l),u=t(62370),d=function(e){return function(r,t){return t[e].enable?s()(r,["enable"]):null}},c=(0,u.h8)({valueFormat:u.Ld,radialAxisStart:d("radialAxisStart"),radialAxisEnd:d("radialAxisEnd"),circularAxisInner:d("circularAxisInner"),circularAxisOuter:d("circularAxisOuter")}),p=t(649),g=t(30042),f=t(80169),v=[{key:"data",group:"Base",type:"object[]",required:!0,help:"Chart data.",description:"\n            Here is what the data for a single chart with 2 bars would look like:\n            \n            ```\n            [\n                {\n                    id: 'Fruits',\n                    data: [{ x: 'Apples', y: 32 }]\n                },\n                {\n                    id: 'Vegetables',\n                    data: [{ x: 'Eggplants', y: 27 }]\n                }\n            ]\n            ```\n            \n            You can add several metrics per group:\n            \n            ```\n            [\n                {\n                    id: 'Fruits',\n                    data: [\n                        { x: 'Apples', y: 32 },\n                        { x: 'Mangoes', y: 15 }\n                    ]\n                },\n                {\n                    id: 'Vegetables',\n                    data: [\n                        { x: 'Eggplants', y: 27 },\n                        { x: 'Avocados', y: 34 }\n                    ]\n                }\n            ]\n            ```\n            \n            When a bar is computed, the `id` is going to be added\n            as the `groupId`, `x` as the `category` and `y`\n            as the value, for example the first bar for the number of Apples\n            in the Fruits group would be:\n            \n            ```\n            {\n                groupId: 'Fruits',\n                category: 'Apples',\n                value: 32\n            }\n            ```\n            \n            You might read those values when adding an `onClick` handler\n            for example, or when customizing the tooltip.\n        ",flavors:["svg"]},{key:"maxValue",group:"Base",type:"'auto' | number",required:!1,help:"If 'auto', the max value is derived from the data, otherwise use a static value.",flavors:["svg"],defaultValue:a.XB.maxValue},{key:"valueFormat",group:"Base",type:"string | (value: number) => string",required:!1,help:"Optional formatter for values (`y`).",description:"\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        ",flavors:["svg"],controlType:"valueFormat"},{key:"width",group:"Base",type:"number",required:!0,help:"Chart width.",description:"\n            not required if using\n            `<ResponsiveRadialBar/>`.\n        ",flavors:["svg","api"],enableControlForFlavors:["api"],controlType:"range",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"height",group:"Base",type:"number",required:!0,help:"Chart height.",description:"\n            not required if using\n            `<ResponsiveRadialBar/>`.\n        ",flavors:["svg","api"],enableControlForFlavors:["api"],controlType:"range",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"margin",group:"Base",help:"Chart margin.",type:"object",required:!1,flavors:["svg"],controlType:"margin"},{key:"startAngle",group:"Base",type:"number",required:!1,help:"Start angle (in degrees).",flavors:["svg"],defaultValue:a.XB.startAngle,controlType:"angle",controlOptions:{min:-360,max:360,step:5}},{key:"endAngle",group:"Base",type:"number",required:!1,help:"End angle (in degrees).",flavors:["svg"],defaultValue:a.XB.endAngle,controlType:"angle",controlOptions:{min:-360,max:360,step:5}},{key:"innerRadius",group:"Base",help:"Donut if greater than 0. Value should be between 0~1 as it's a ratio from outer radius.",type:"number",required:!1,flavors:["svg"],defaultValue:a.XB.innerRadius,controlType:"range",controlOptions:{min:0,max:.95,step:.05}},{key:"padding",group:"Base",type:"number",required:!1,help:"Padding between each ring (ratio).",flavors:["svg"],defaultValue:a.XB.padding,controlType:"range",controlOptions:{min:0,max:.9,step:.05}},{key:"padAngle",group:"Base",type:"number",required:!1,help:"Padding between each bar.",flavors:["svg"],defaultValue:a.XB.padAngle,controlType:"range",controlOptions:{unit:"°",min:0,max:45,step:1}},{key:"cornerRadius",group:"Base",type:"number",required:!1,help:"Rounded corners.",flavors:["svg"],defaultValue:a.XB.cornerRadius,controlType:"range",controlOptions:{unit:"px",min:0,max:45,step:1}},(0,f.JR)(["svg"]),{key:"colors",group:"Style",type:"string | Function | string[]",required:!1,help:"Defines how to compute colors.",flavors:["svg"],defaultValue:a.XB.colors,controlType:"ordinalColors"},{key:"borderWidth",group:"Style",type:"number",required:!1,help:"Bars border width.",flavors:["svg"],defaultValue:a.XB.borderWidth,controlType:"lineWidth"},{key:"borderColor",group:"Style",type:"InheritedColorConfig<ComputedBar>",required:!1,help:"Method to compute border color.",description:"\n            how to compute border color,\n            [see dedicated documentation](self:/guides/colors).\n        ",flavors:["svg"],defaultValue:a.XB.borderColor,controlType:"inheritedColor"},{key:"enableTracks",group:"Tracks",type:"boolean",required:!1,help:"Enable/disable tracks.",flavors:["svg"],defaultValue:a.XB.enableTracks,controlType:"switch"},{key:"tracksColor",group:"Tracks",type:"string",required:!1,help:"Define tracks color.",flavors:["svg"],defaultValue:a.XB.tracksColor,controlType:"colorPicker"},{key:"enableRadialGrid",group:"Grid & Axes",type:"boolean",required:!1,help:"Enable radial grid (rays)",flavors:["svg"],defaultValue:a.XB.enableRadialGrid,controlType:"switch"},{key:"enableCircularGrid",group:"Grid & Axes",type:"boolean",required:!1,help:"Enable circular grid (rings)",flavors:["svg"],defaultValue:a.XB.enableCircularGrid,controlType:"switch"},(0,f.WZ)({key:"radialAxisStart",flavors:["svg"],tickComponent:"RadialAxisTickComponent"}),(0,f.WZ)({key:"radialAxisEnd",flavors:["svg"],tickComponent:"RadialAxisTickComponent"}),(0,f.WZ)({key:"circularAxisInner",flavors:["svg"],tickComponent:"CircularAxisTickComponent"}),(0,f.WZ)({key:"circularAxisOuter",flavors:["svg"],tickComponent:"CircularAxisTickComponent"}),{key:"enableLabels",group:"Labels",type:"boolean",required:!1,help:"Enable/disable labels.",flavors:["svg"],defaultValue:a.XB.enableLabels,controlType:"switch"},{key:"label",group:"Labels",type:"string | (bar: ComputedBar) => string",required:!1,help:"Defines how to get label text, can be a string (used to access current bar property) or a function which will receive the actual bar data.",flavors:["svg"],defaultValue:a.XB.label,controlType:"choices",controlOptions:{choices:["category","groupId","value","formattedValue"].map((function(e){return{label:e,value:e}}))}},{key:"labelsSkipAngle",group:"Labels",type:"number",required:!1,help:"Skip label if corresponding arc's angle is lower than provided value.",flavors:["svg"],defaultValue:a.XB.labelsSkipAngle,controlType:"range",controlOptions:{unit:"°",min:0,max:45,step:1}},{key:"labelsRadiusOffset",group:"Labels",type:"number",required:!1,help:"\n            Define the radius to use to determine the label position, starting from inner radius,\n            this is expressed as a ratio. Centered at 0.5 by default.\n        ",flavors:["svg"],defaultValue:a.XB.labelsRadiusOffset,controlType:"range",controlOptions:{min:0,max:2,step:.05}},{key:"labelsTextColor",group:"Labels",help:"Defines how to compute label text color.",type:"string | object | Function",required:!1,flavors:["svg"],defaultValue:a.XB.labelsTextColor,controlType:"inheritedColor"},{key:"layers",group:"Customization",type:"(RadialBarLayerId | RadialBarCustomLayer)[]",required:!1,help:"Defines the order of layers and add custom layers.",description:"\n            You can also use this to insert extra layers\n            to the chart, the extra layer should be a component.\n            \n            The component will receive properties as defined in\n            the `RadialBarCustomLayerProps` interface\n            and must return a valid SVG element.\n        ",flavors:["svg"],defaultValue:a.XB.layers},{key:"isInteractive",group:"Interactivity",type:"boolean",required:!1,help:"Enable/disable interactivity.",flavors:["svg"],defaultValue:a.XB.isInteractive,controlType:"switch"},{key:"tooltip",group:"Interactivity",type:"RadialBarTooltipComponent",required:!1,help:"Override default tooltip.",flavors:["svg"]},{key:"onClick",group:"Interactivity",type:"(bar: ComputedBar, event: MouseEvent) => void",required:!1,help:"onClick handler.",flavors:["svg"]},{key:"onMouseEnter",group:"Interactivity",type:"(bar: ComputedBar, event: MouseEvent) => void",required:!1,help:"onMouseEnter handler.",flavors:["svg"]},{key:"onMouseMove",group:"Interactivity",type:"(bar: ComputedBar, event: MouseEvent) => void",required:!1,help:"onMouseMove handler.",flavors:["svg"]},{key:"onMouseLeave",group:"Interactivity",type:"(bar: ComputedBar, event: MouseEvent) => void",required:!1,help:"onMouseLeave handler.",flavors:["svg"]},{key:"legends",group:"Legends",type:"LegendProps[]",required:!1,help:"Optional chart's legends.",flavors:["svg"],controlType:"array",controlOptions:{props:(0,f.y0)(["svg"]),shouldCreate:!0,addLabel:"add legend",shouldRemove:!0,getItemTitle:function(e,r){return"legend["+e+"]: "+r.anchor+", "+r.direction},svgDefaultProps:{dataFrom:"keys",anchor:"top-left",direction:"column",justify:!1,translateX:0,translateY:0,itemWidth:100,itemHeight:20,itemsSpacing:0,symbolSize:20,itemDirection:"left-to-right",onClick:function(e){alert(JSON.stringify(e,null,"    "))}}}},{key:"role",group:"Accessibility",type:"string",required:!1,help:"Main element role attribute.",flavors:["svg"]},{key:"ariaLabel",group:"Accessibility",type:"string",required:!1,help:"Main element [aria-label](https://www.w3.org/TR/wai-aria/#aria-label).",flavors:["svg"]},{key:"ariaLabelledBy",group:"Accessibility",type:"string",required:!1,help:"Main element [aria-labelledby](https://www.w3.org/TR/wai-aria/#aria-labelledby).",flavors:["svg"]},{key:"ariaDescribedBy",group:"Accessibility",type:"string",required:!1,help:"Main element [aria-describedby](https://www.w3.org/TR/wai-aria/#aria-describedby).",flavors:["svg"]}].concat((0,p.Z)((0,f.$j)(["svg"],a.XB,"react-spring")),[{key:"transitionMode",flavors:["svg"],help:"Define how transitions behave.",type:"string",required:!1,defaultValue:a.XB.transitionMode,controlType:"choices",group:"Motion",controlOptions:{choices:g.UV.map((function(e){return{label:e,value:e}}))}}]),h=(0,f.R2)(v),y={valueFormat:{format:">-.2f",enabled:!0},startAngle:a.XB.startAngle,endAngle:a.XB.endAngle,innerRadius:a.XB.innerRadius,padding:.4,padAngle:a.XB.padAngle,cornerRadius:2,margin:{top:40,right:120,bottom:40,left:40},colors:a.XB.colors,borderWidth:a.XB.borderWidth,borderColor:a.XB.borderColor,enableTracks:a.XB.enableTracks,tracksColor:a.XB.tracksColor,enableRadialGrid:a.XB.enableRadialGrid,enableCircularGrid:a.XB.enableCircularGrid,radialAxisStart:{enable:!0,tickSize:5,tickPadding:5,tickRotation:0},radialAxisEnd:{enable:!1,tickSize:5,tickPadding:5,tickRotation:0},circularAxisInner:{enable:!1,tickSize:5,tickPadding:12,tickRotation:0},circularAxisOuter:{enable:!0,tickSize:5,tickPadding:12,tickRotation:0},enableLabels:a.XB.enableLabels,label:a.XB.label,labelsSkipAngle:a.XB.labelsSkipAngle,labelsRadiusOffset:a.XB.labelsRadiusOffset,labelsTextColor:a.XB.labelsTextColor,animate:!0,motionConfig:"gentle",transitionMode:a.XB.transitionMode,isInteractive:a.XB.isInteractive,legends:[{anchor:"right",direction:"column",justify:!1,translateX:80,translateY:0,itemsSpacing:6,itemDirection:"left-to-right",itemWidth:100,itemHeight:18,itemTextColor:"#999",symbolSize:18,symbolShape:"square",onClick:function(e){alert(JSON.stringify(e,null,"    "))},effects:[{on:"hover",style:{itemTextColor:"#000"}}]}]},b=function(){var e=["Supermarket","Combini","Online"];Math.random()>.5&&e.push("Marché");var r=["Vegetables","Fruits","Meat"];return Math.random()<.5&&r.push("Fish"),e.map((function(e){return{id:e,data:r.map((function(e){return{x:e,y:Math.round(300*Math.random())}}))}}))},m=function(){return n.createElement(o.T,{name:"RadialBar",meta:i.G,icon:"radial-bar",flavors:i.K,currentFlavor:"svg",properties:h,initialProperties:y,defaultProperties:a.XB,propertiesMapper:c,generateData:b},(function(e,r,t,o){return n.createElement(a.W_,Object.assign({data:r},e,{theme:t,onClick:function(e){o({type:"click",label:e.category+" - "+e.groupId+": "+e.value,color:e.color,data:e})}}))}))}}}]);
//# sourceMappingURL=component---src-pages-radial-bar-index-tsx-f5d328b3b13f0ad6c02d.js.map