{"version":3,"sources":["webpack:///../node_modules/d3-array/src/ascending.js","webpack:///../node_modules/d3-array/src/bisect.js","webpack:///../node_modules/d3-array/src/bisector.js","webpack:///../node_modules/d3-array/src/cross.js","webpack:///../node_modules/d3-array/src/array.js","webpack:///../node_modules/d3-array/src/range.js","webpack:///../node_modules/d3-array/src/ticks.js","webpack:///../node_modules/d3-array/src/threshold/sturges.js","webpack:///../node_modules/d3-array/src/merge.js","webpack:///./src/data/components/geo/props.js","webpack:///./src/data/components/geo/mapper.js","webpack:///./src/lib/settings.js","webpack:///../node_modules/d3-geo/src/adder.js","webpack:///../node_modules/d3-geo/src/math.js","webpack:///../node_modules/d3-geo/src/noop.js","webpack:///../node_modules/d3-geo/src/stream.js","webpack:///../node_modules/d3-geo/src/area.js","webpack:///../node_modules/d3-geo/src/cartesian.js","webpack:///../node_modules/d3-geo/src/bounds.js","webpack:///../node_modules/d3-geo/src/centroid.js","webpack:///../node_modules/d3-geo/src/compose.js","webpack:///../node_modules/d3-geo/src/rotation.js","webpack:///../node_modules/d3-geo/src/circle.js","webpack:///../node_modules/d3-geo/src/clip/buffer.js","webpack:///../node_modules/d3-geo/src/pointEqual.js","webpack:///../node_modules/d3-geo/src/clip/rejoin.js","webpack:///../node_modules/d3-geo/src/polygonContains.js","webpack:///../node_modules/d3-geo/src/clip/index.js","webpack:///../node_modules/d3-geo/src/clip/antimeridian.js","webpack:///../node_modules/d3-geo/src/clip/circle.js","webpack:///../node_modules/d3-geo/src/clip/rectangle.js","webpack:///../node_modules/d3-geo/src/clip/line.js","webpack:///../node_modules/d3-geo/src/clip/extent.js","webpack:///../node_modules/d3-geo/src/length.js","webpack:///../node_modules/d3-geo/src/distance.js","webpack:///../node_modules/d3-geo/src/contains.js","webpack:///../node_modules/d3-geo/src/graticule.js","webpack:///../node_modules/d3-geo/src/interpolate.js","webpack:///../node_modules/d3-geo/src/path/area.js","webpack:///../node_modules/d3-geo/src/identity.js","webpack:///../node_modules/d3-geo/src/path/bounds.js","webpack:///../node_modules/d3-geo/src/path/centroid.js","webpack:///../node_modules/d3-geo/src/path/context.js","webpack:///../node_modules/d3-geo/src/path/measure.js","webpack:///../node_modules/d3-geo/src/path/string.js","webpack:///../node_modules/d3-geo/src/transform.js","webpack:///../node_modules/d3-geo/src/projection/fit.js","webpack:///../node_modules/d3-geo/src/projection/resample.js","webpack:///../node_modules/d3-geo/src/projection/index.js","webpack:///../node_modules/d3-geo/src/projection/azimuthal.js","webpack:///../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///../node_modules/d3-geo/src/projection/mercator.js","webpack:///../node_modules/d3-geo/src/projection/equirectangular.js","webpack:///../node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///../node_modules/d3-geo/src/projection/equalEarth.js","webpack:///../node_modules/d3-geo/src/projection/gnomonic.js","webpack:///../node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///../node_modules/d3-geo/src/projection/orthographic.js","webpack:///../node_modules/d3-geo/src/projection/stereographic.js","webpack:///../node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/hooks.js","webpack:///../node_modules/d3-geo/src/path/index.js","webpack:///../src/ChoroplethTooltip.js","webpack:///../src/props.js","webpack:///../src/GeoGraticule.js","webpack:///../src/GeoMapFeature.js","webpack:///../src/GeoMap.js","webpack:///../src/ResponsiveGeoMap.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/GeoMapCanvas.js","webpack:///../src/ResponsiveGeoMapCanvas.js","webpack:///../src/Choropleth.js","webpack:///../src/ResponsiveChoropleth.js","webpack:///../src/ChoroplethCanvas.js","webpack:///../src/ResponsiveChoroplethCanvas.js"],"names":["a","b","NaN","f","ascending","length","compare","d","x","Array","prototype","slice","map","start","stop","step","n","arguments","i","Math","max","ceil","range","sqrt","m","merged","array","arrays","j","props","key","group","enableControlForFlavors","help","description","type","required","flavors","defaultValue","controlType","controlOptions","min","GeoMapDefaultProps","projectionType","choices","label","value","projectionScale","projectionTranslation","unit","items","projectionRotation","themeProperty","borderWidth","borderColor","enableGraticule","graticuleLineWidth","graticuleLineColor","defsProperties","isInteractive","TooltipWrapper","styled","div","theme","colors","cardBackground","color","TooltipKey","span","TooltipValue","CustomTooltip","feature","id","settingsMapper","values","tooltip","container","background","exclude","mapping","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","Adder","this","reset","constructor","s","t","add","y","_add","temp","valueOf","adder","bv","av","epsilon","pi","PI","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","exp","log","floor","sin","pow","sign","tan","acos","asin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","streamObjectType","Feature","object","FeatureCollection","features","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","cartesian","spherical","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","k","cartesianNormalizeInPlace","l","compose","invert","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","circleStream","radius","delta","direction","t0","t1","cosRadius","sinRadius","circleRadius","line","lines","push","rejoin","pop","concat","shift","result","Intersection","points","other","entry","o","e","v","p","subject","clip","segments","segment","p0","p1","pointEqual","sort","compareIntersection","startInside","current","isSubject","interpolate","sum","sinPhi","normal","angle","winding","polygon","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","arc","intersection","phiArc","sink","clipLine","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","polygonContains","pointVisible","pointLine","clean","ringSegments","filter","validSegment","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","w","uu","t2","q","polar","q1","code","r","c0","v0","v00","point2","c","clipRectangle","x0","y0","x1","y1","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","ax","ay","dx","dy","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","distance","ab","ringRadians","pointRadians","graticuleX","graticuleY","X1","X0","Y1","Y0","X","Y","DX","DY","precision","graticule","outline","reverse","extent","_","extentMajor","extentMinor","stepMajor","stepMinor","area","Infinity","bounds","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","PathString","_string","_circle","join","transformer","methods","TransformStream","fit","projection","fitBounds","clipExtent","scale","translate","h","size","width","height","cosMinDistance","delta2","project","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslate","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","identity","recenter","center","apply","resample","transformRotate","clipAngle","fitExtent","fitSize","fitWidth","fitHeight","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","forward","equirectangularRaw","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","projectionById","azimuthalEqualArea","azimuthalEquidistant","gnomonic","orthographic","stereographic","equalEarth","equirectangular","mercator","transverseMercator","naturalEarth1","useGeoMap","fillColor","useMemo","path","projectionStream","contextStream","measure","geoPath","geoGraticule","useTheme","getBorderWidth","getBorderColor","useInheritedColor","getFillColor","useChoropleth","data","match","valueFormat","unknownColor","domain","findMatchingDatum","featureKey","datumKey","getLabel","datum","getValue","valueFormatter","colorScale","guessQuantizeColorScale","boundFeatures","datumValue","featureWithData","formattedValue","legendData","useQuantizeColorScaleLegendData","ChoroplethTooltip","memo","enableChip","commonPropTypes","PropTypes","properties","isRequired","inheritedColorPropType","onMouseEnter","onMouseMove","onMouseLeave","onClick","layers","GeoMapPropTypes","role","GeoMapCanvasPropTypes","pixelRatio","commonChoroplethPropTypes","quantizeColorScalePropType","commonDefaultProps","legends","GeoMapCanvasDefaultProps","window","commonChoroplethDefaultProps","ChoroplethDefaultProps","ChoroplethCanvasDefaultProps","GeoGraticule","lineWidth","lineColor","fill","strokeWidth","stroke","GeoMapFeature","strokeLinejoin","event","GeoMap","partialMargin","Tooltip","useDimensions","margin","outerWidth","outerHeight","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","handleMouseEnter","handleMouseMove","handleMouseLeave","layer","withContainer","ResponsiveGeoMap","_arrayLikeToArray","arr","len","arr2","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","minLen","arrayLikeToArray","toString","call","name","test","unsupportedIterableToArray","TypeError","nonIterableRest","getFeatureFromMouseEvent","getRelativeCursor","el","geoContains","GeoMapCanvas","canvasEl","useRef","useEffect","ctx","ref","style","cursor","ResponsiveGeoMapCanvas","Choropleth","containerWidth","containerHeight","ResponsiveChoropleth","ChoroplethCanvas","legend","renderLegendToCanvas","ResponsiveChoroplethCanvas"],"mappings":"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","file":"afac4a633cccc018283d46382f78cd3b8b03e305-d86c7c944640a2816156.js","sourcesContent":["export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { GeoMapDefaultProps } from '@nivo/geo'\nimport { themeProperty, defsProperties } from '../../../lib/componentProperties'\n\nexport const props = [\n    {\n        key: 'width',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'projectionType',\n        help: 'Defines the projection to use.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionType,\n        controlType: 'choices',\n        group: 'Projection',\n        controlOptions: {\n            choices: [\n                { label: 'azimuthalEqualArea', value: 'azimuthalEqualArea' },\n                { label: 'azimuthalEquidistant', value: 'azimuthalEquidistant' },\n                { label: 'gnomonic', value: 'gnomonic' },\n                { label: 'orthographic', value: 'orthographic' },\n                { label: 'stereographic', value: 'stereographic' },\n                { label: 'equalEarth', value: 'equalEarth' },\n                { label: 'equirectangular', value: 'equirectangular' },\n                { label: 'mercator', value: 'mercator' },\n                { label: 'transverseMercator', value: 'transverseMercator' },\n                { label: 'naturalEarth1', value: 'naturalEarth1' },\n            ],\n        },\n    },\n    {\n        key: 'projectionScale',\n        help: 'Projection scale.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionScale,\n        type: 'number',\n        controlType: 'range',\n        group: 'Projection',\n        controlOptions: {\n            min: 0,\n            max: 400,\n        },\n    },\n    {\n        key: 'projectionTranslation',\n        type: '[number, number]',\n        help: 'Projection x/y translation.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionTranslation,\n        controlType: 'numberArray',\n        group: 'Projection',\n        controlOptions: {\n            unit: 'px',\n            items: [\n                {\n                    label: 'x',\n                    min: -1,\n                    max: 1,\n                    step: 0.05,\n                },\n                {\n                    label: 'y',\n                    min: -1,\n                    max: 1,\n                    step: 0.05,\n                },\n            ],\n        },\n    },\n    {\n        key: 'projectionRotation',\n        type: '[number, number, number]',\n        help: 'Projection rotation.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionRotation,\n        controlType: 'numberArray',\n        group: 'Projection',\n        controlOptions: {\n            items: [\n                {\n                    label: 'lambda (λ)',\n                    min: -360,\n                    max: 360,\n                },\n                {\n                    label: 'phi (φ)',\n                    min: -360,\n                    max: 360,\n                },\n                {\n                    label: 'gamma (γ)',\n                    min: -360,\n                    max: 360,\n                },\n            ],\n        },\n    },\n    themeProperty,\n    {\n        key: 'borderWidth',\n        help: 'Control border width.',\n        type: 'number',\n        required: false,\n        defaultValue: GeoMapDefaultProps.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n        controlOptions: {\n            step: 0.5,\n        },\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: GeoMapDefaultProps.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'enableGraticule',\n        help: 'Enable meridians and parallels, useful for showing projection distortion.',\n        type: 'boolean',\n        required: false,\n        defaultValue: GeoMapDefaultProps.enableGraticule,\n        controlType: 'switch',\n        group: 'Graticule',\n    },\n    {\n        key: 'graticuleLineWidth',\n        help: 'Control meridians and parallel lines width.',\n        type: 'number',\n        required: false,\n        defaultValue: GeoMapDefaultProps.graticuleLineWidth,\n        controlType: 'lineWidth',\n        group: 'Graticule',\n        controlOptions: {\n            step: 0.5,\n        },\n    },\n    {\n        key: 'graticuleLineColor',\n        help: 'Control meridians and parallel lines color.',\n        type: 'string',\n        required: false,\n        defaultValue: GeoMapDefaultProps.graticuleLineColor,\n        controlType: 'colorPicker',\n        group: 'Graticule',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'isInteractive',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: GeoMapDefaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onClick',\n        help: 'onClick handler, it receives clicked node data and style plus mouse event.',\n        type: 'Function',\n        required: false,\n        group: 'Interactivity',\n    },\n]\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    font-size: 13px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    padding: 10px 20px;\n    color: ${({ color }) => color};\n    border: 2px solid ${({ color }) => color};\n    box-shadow: 9px 16px 0 rgba(0, 0, 0, 0.15);\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\nconst TooltipValue = styled.span``\n\nconst CustomTooltip = ({ feature }) => {\n    return (\n        <TooltipWrapper color={feature.color}>\n            <TooltipKey>Custom tooltip</TooltipKey>\n            <span />\n            <TooltipKey>id</TooltipKey>\n            <TooltipValue>{feature.id}</TooltipValue>\n            <TooltipKey>value</TooltipKey>\n            <TooltipValue>{feature.value}</TooltipValue>\n            <TooltipKey>color</TooltipKey>\n            <TooltipValue>{feature.color}</TooltipValue>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        theme: (value, values) => {\n            if (!values['custom tooltip example']) return value\n\n            return {\n                ...values.theme,\n                tooltip: {\n                    container: {\n                        ...values.theme.tooltip.container,\n                        background: '#333',\n                    },\n                },\n            }\n        },\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n    },\n    {\n        exclude: ['custom tooltip example'],\n    }\n)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping, { exclude = [] } = {}) => (settings, options = {}) => {\n    const overrides = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = type => (value, settings) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }) => (enabled === true ? format : undefined)\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import clipRectangle from \"./rectangle\";\nexport default function () {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n  return clip = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = _stream);\n    },\n    extent: function extent(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import length from \"./length\";\nvar coordinates = [null, null],\n    object = {\n  type: \"LineString\",\n  coordinates: coordinates\n};\nexport default function (a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}","import { default as polygonContains } from \"./polygonContains\";\nimport { default as distance } from \"./distance\";\nimport { epsilon, radians } from \"./math\";\nvar containsObjectType = {\n  Feature: function Feature(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function FeatureCollection(object, point) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      if (containsGeometry(features[i].geometry, point)) return true;\n    }\n\n    return false;\n  }\n};\nvar containsGeometryType = {\n  Sphere: function Sphere() {\n    return true;\n  },\n  Point: function Point(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function MultiPoint(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPoint(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  LineString: function LineString(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function MultiLineString(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsLine(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  Polygon: function Polygon(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function MultiPolygon(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPolygon(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  GeometryCollection: function GeometryCollection(object, point) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      if (containsGeometry(geometries[i], point)) return true;\n    }\n\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function (object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n}","import { range } from \"d3-array\";\nimport { abs, ceil, epsilon } from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function (x) {\n    return y.map(function (y) {\n      return [x, y];\n    });\n  };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function (y) {\n    return x.map(function (x) {\n      return [x, y];\n    });\n  };\n}\n\nexport default function graticule() {\n  var x1,\n      x0,\n      X1,\n      X0,\n      y1,\n      y0,\n      Y1,\n      Y0,\n      dx = 10,\n      dy = dx,\n      DX = 90,\n      DY = 360,\n      x,\n      y,\n      X,\n      Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {\n      type: \"MultiLineString\",\n      coordinates: lines()\n    };\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n      return abs(x % DX) > epsilon;\n    }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n      return abs(y % DY) > epsilon;\n    }).map(y));\n  }\n\n  graticule.lines = function () {\n    return lines().map(function (coordinates) {\n      return {\n        type: \"LineString\",\n        coordinates: coordinates\n      };\n    });\n  };\n\n  graticule.outline = function () {\n    return {\n      type: \"Polygon\",\n      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n    };\n  };\n\n  graticule.extent = function (_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function (_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function (_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function (_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function (_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function (_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function (_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\nexport function graticule10() {\n  return graticule()();\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","export default function (x) {\n  return x;\n}","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { sqrt } from \"../math\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import projection from \"./index.js\";\nimport { abs, asin, cos, epsilon2, sin, sqrt } from \"../math.js\";\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  return [lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\n\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l), asin(sin(l) / M)];\n};\n\nexport default function () {\n  return projection(equalEarthRaw).scale(177.158);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import projection from \"./index\";\nimport { abs, epsilon } from \"../math\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { isFunction, get } from 'lodash'\nimport { format } from 'd3-format'\nimport {\n    geoPath,\n    geoAzimuthalEqualArea,\n    geoAzimuthalEquidistant,\n    geoGnomonic,\n    geoOrthographic,\n    geoStereographic,\n    geoEqualEarth,\n    geoEquirectangular,\n    geoMercator,\n    geoTransverseMercator,\n    geoNaturalEarth1,\n    geoGraticule,\n} from 'd3-geo'\nimport { guessQuantizeColorScale, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useQuantizeColorScaleLegendData } from '@nivo/legends'\n\nexport const projectionById = {\n    azimuthalEqualArea: geoAzimuthalEqualArea,\n    azimuthalEquidistant: geoAzimuthalEquidistant,\n    gnomonic: geoGnomonic,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    mercator: geoMercator,\n    transverseMercator: geoTransverseMercator,\n    naturalEarth1: geoNaturalEarth1,\n}\n\nexport const useGeoMap = ({\n    width,\n    height,\n    projectionType,\n    projectionScale,\n    projectionTranslation,\n    projectionRotation,\n    fillColor,\n    borderWidth,\n    borderColor,\n}) => {\n    const projection = useMemo(() => {\n        return projectionById[projectionType]()\n            .scale(projectionScale)\n            .translate([width * projectionTranslation[0], height * projectionTranslation[1]])\n            .rotate(projectionRotation)\n    }, [\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation[0],\n        projectionTranslation[1],\n        projectionRotation[0],\n        projectionRotation[1],\n        projectionRotation[2],\n    ])\n    const path = useMemo(() => geoPath(projection), [projection])\n    const graticule = useMemo(() => geoGraticule())\n\n    const theme = useTheme()\n    const getBorderWidth = useMemo(\n        () => (typeof borderWidth === 'function' ? borderWidth : () => borderWidth),\n        [borderWidth]\n    )\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getFillColor = useMemo(\n        () => (typeof fillColor === 'function' ? fillColor : () => fillColor),\n        [fillColor]\n    )\n\n    return {\n        projection,\n        path,\n        graticule,\n        getBorderWidth,\n        getBorderColor,\n        getFillColor,\n    }\n}\n\nexport const useChoropleth = ({\n    features,\n    data,\n    match,\n    label,\n    value,\n    valueFormat,\n    colors,\n    unknownColor,\n    domain,\n}) => {\n    const findMatchingDatum = useMemo(() => {\n        if (isFunction(match)) return match\n        return (feature, datum) => {\n            const featureKey = get(feature, match)\n            const datumKey = get(datum, match)\n\n            return featureKey && featureKey === datumKey\n        }\n    }, [match])\n    const getLabel = useMemo(() => (isFunction(label) ? label : datum => get(datum, label)), [\n        label,\n    ])\n    const getValue = useMemo(() => (isFunction(value) ? value : datum => get(datum, value)), [\n        value,\n    ])\n    const valueFormatter = useMemo(() => {\n        if (valueFormat === undefined) return d => d\n        if (isFunction(valueFormat)) return valueFormat\n        return format(valueFormat)\n    }, [valueFormat])\n\n    const colorScale = useMemo(() => guessQuantizeColorScale(colors).domain(domain), [\n        colors,\n        domain,\n    ])\n    const getFillColor = useMemo(() => {\n        return feature => {\n            if (feature.value === undefined) return unknownColor\n            return colorScale(feature.value)\n        }\n    }, [colorScale, unknownColor])\n\n    const boundFeatures = useMemo(\n        () =>\n            features.map(feature => {\n                const datum = data.find(datum => findMatchingDatum(feature, datum))\n                const datumValue = getValue(datum)\n\n                if (datum) {\n                    const featureWithData = {\n                        ...feature,\n                        data: datum,\n                        value: datumValue,\n                        formattedValue: valueFormatter(datumValue),\n                    }\n                    featureWithData.color = getFillColor(featureWithData)\n                    featureWithData.label = getLabel(featureWithData)\n\n                    return featureWithData\n                }\n\n                return feature\n            }),\n        [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]\n    )\n\n    const legendData = useQuantizeColorScaleLegendData({\n        scale: colorScale,\n        valueFormat: valueFormatter,\n    })\n\n    return {\n        colorScale,\n        getFillColor,\n        boundFeatures,\n        valueFormatter,\n        legendData,\n    }\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChoroplethTooltip = memo(({ feature }) => {\n    if (feature.data === undefined) return null\n\n    return (\n        <BasicTooltip\n            id={feature.label}\n            color={feature.color}\n            enableChip={true}\n            value={feature.formattedValue}\n        />\n    )\n})\n\nChoroplethTooltip.propTypes = {\n    feature: PropTypes.object.isRequired,\n}\n\nChoroplethTooltip.displayName = 'ChoroplethTooltip'\n\nexport default ChoroplethTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { projectionById } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst commonPropTypes = {\n    features: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.oneOf(['Feature']).isRequired,\n            properties: PropTypes.object,\n            geometry: PropTypes.object.isRequired,\n        })\n    ).isRequired,\n\n    projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n    projectionScale: PropTypes.number.isRequired,\n    projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n    projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGraticule: PropTypes.bool.isRequired,\n    graticuleLineWidth: PropTypes.number.isRequired,\n    graticuleLineColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const GeoMapPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const GeoMapCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonChoroplethPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    colors: quantizeColorScalePropType.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    unknownColor: PropTypes.string.isRequired,\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const ChoroplethPropTypes = {\n    ...GeoMapPropTypes,\n    ...commonChoroplethPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChoroplethCanvasPropTypes = {\n    ...GeoMapCanvasPropTypes,\n    ...commonChoroplethPropTypes,\n}\n\nconst commonDefaultProps = {\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: false,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#999999',\n\n    fillColor: '#dddddd',\n    borderWidth: 0,\n    borderColor: '#000000',\n\n    isInteractive: true,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseMove: () => {},\n    onClick: () => {},\n\n    layers: ['graticule', 'features'],\n    legends: [],\n}\n\nexport const GeoMapDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const GeoMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nconst commonChoroplethDefaultProps = {\n    match: 'id',\n    label: 'id',\n    value: 'value',\n    colors: 'PuBuGn',\n    unknownColor: '#999',\n    tooltip: ChoroplethTooltip,\n    layers: ['graticule', 'features', 'legends'],\n}\n\nexport const ChoroplethDefaultProps = {\n    ...GeoMapDefaultProps,\n    ...commonChoroplethDefaultProps,\n    role: 'img',\n}\n\nexport const ChoroplethCanvasDefaultProps = {\n    ...GeoMapCanvasDefaultProps,\n    ...commonChoroplethDefaultProps,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoGraticule = memo(({ path, graticule, lineWidth, lineColor }) => {\n    return <path fill=\"none\" strokeWidth={lineWidth} stroke={lineColor} d={path(graticule())} />\n})\n\nGeoGraticule.propTypes = {\n    path: PropTypes.func.isRequired,\n    graticule: PropTypes.func.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineColor: PropTypes.string.isRequired,\n}\n\nGeoGraticule.displayName = 'GeoGraticule'\n\nexport default GeoGraticule\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoMapFeature = memo(\n    ({\n        feature,\n        path,\n        fillColor,\n        borderWidth,\n        borderColor,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }) => {\n        return (\n            <path\n                key={feature.id}\n                fill={fillColor}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                strokeLinejoin=\"bevel\"\n                d={path(feature)}\n                onMouseEnter={event => onMouseEnter(feature, event)}\n                onMouseMove={event => onMouseMove(feature, event)}\n                onMouseLeave={event => onMouseLeave(feature, event)}\n                onClick={event => onClick(feature, event)}\n            />\n        )\n    }\n)\n\nGeoMapFeature.propTypes = {\n    feature: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['Feature']).isRequired,\n        properties: PropTypes.object,\n        geometry: PropTypes.object.isRequired,\n    }).isRequired,\n    path: PropTypes.func.isRequired,\n\n    fillColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nGeoMapFeature.displayName = 'GeoMapFeature'\n\nexport default GeoMapFeature\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback, memo } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapPropTypes, GeoMapDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap } from './hooks'\n\nconst GeoMap = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        layers,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    } = props\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n    })\n\n    const theme = useTheme()\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {features.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n\n                return <Fragment key={i}>{layer(props)}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nGeoMap.displayName = 'GeoMap'\nGeoMap.propTypes = GeoMapPropTypes\nGeoMap.defaultProps = GeoMapDefaultProps\n\nexport default withContainer(GeoMap)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMap from './GeoMap'\n\nconst ResponsiveGeoMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMap\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapCanvasDefaultProps, GeoMapCanvasPropTypes } from './props'\nimport { useGeoMap } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst GeoMapCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        layers,\n\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n\n        fillColor,\n        borderWidth,\n        borderColor,\n\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap(\n        {\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor,\n            borderWidth,\n            borderColor,\n        }\n    )\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                features.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else {\n                layer(ctx, props)\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        features,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(\n        event => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        },\n        [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]\n    )\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n    const handleClick = useCallback(\n        event => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                onClick(feature, event)\n            }\n        },\n        [isInteractive, canvasEl, features, projection, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nGeoMapCanvas.displatName = 'GeoMapCanvas'\nGeoMapCanvas.propTypes = GeoMapCanvasPropTypes\nGeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps\n\nexport default withContainer(GeoMapCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMapCanvas from './GeoMapCanvas'\n\nconst ResponsiveGeoMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, Fragment, useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethPropTypes, ChoroplethDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst Choropleth = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    }) => {\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        const theme = useTheme()\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleClick = useCallback(\n            (feature, event) => isInteractive && onClick && onClick(feature, event),\n            [isInteractive, onClick]\n        )\n        const handleMouseEnter = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseMove = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layer === 'graticule') {\n                        if (enableGraticule !== true) return null\n\n                        return (\n                            <GeoGraticule\n                                key=\"graticule\"\n                                path={path}\n                                graticule={graticule}\n                                lineWidth={graticuleLineWidth}\n                                lineColor={graticuleLineColor}\n                            />\n                        )\n                    }\n                    if (layer === 'features') {\n                        return (\n                            <Fragment key=\"features\">\n                                {boundFeatures.map(feature => (\n                                    <GeoMapFeature\n                                        key={feature.id}\n                                        feature={feature}\n                                        path={path}\n                                        fillColor={getFillColor(feature)}\n                                        borderWidth={getBorderWidth(feature)}\n                                        borderColor={getBorderColor(feature)}\n                                        onMouseEnter={handleMouseEnter}\n                                        onMouseMove={handleMouseMove}\n                                        onMouseLeave={handleMouseLeave}\n                                        onClick={handleClick}\n                                    />\n                                ))}\n                            </Fragment>\n                        )\n                    }\n                    if (layer === 'legends') {\n                        return legends.map((legend, i) => {\n                            return (\n                                <BoxLegendSvg\n                                    key={i}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    {...legend}\n                                />\n                            )\n                        })\n                    }\n\n                    return <Fragment key={i}>{layer({})}</Fragment>\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nChoropleth.displayName = 'Choropleth'\nChoropleth.propTypes = ChoroplethPropTypes\nChoropleth.defaultProps = ChoroplethDefaultProps\n\nexport default withContainer(Choropleth)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Choropleth from './Choropleth'\n\nconst ResponsiveChoropleth = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Choropleth width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoropleth\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethCanvasDefaultProps, ChoroplethCanvasPropTypes } from './props'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst ChoroplethCanvas = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    }) => {\n        const canvasEl = useRef(null)\n        const theme = useTheme()\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { projection, graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        useEffect(() => {\n            if (!canvasEl) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            path.context(ctx)\n\n            layers.forEach(layer => {\n                if (layer === 'graticule') {\n                    if (enableGraticule === true) {\n                        ctx.lineWidth = graticuleLineWidth\n                        ctx.strokeStyle = graticuleLineColor\n                        ctx.beginPath()\n                        path(graticule())\n                        ctx.stroke()\n                    }\n                } else if (layer === 'features') {\n                    boundFeatures.forEach(feature => {\n                        ctx.beginPath()\n                        path(feature)\n                        ctx.fillStyle = getFillColor(feature)\n                        ctx.fill()\n\n                        const borderWidth = getBorderWidth(feature)\n                        if (borderWidth > 0) {\n                            ctx.strokeStyle = getBorderColor(feature)\n                            ctx.lineWidth = borderWidth\n                            ctx.stroke()\n                        }\n                    })\n                } else if (layer === 'legends') {\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: width,\n                            containerHeight: height,\n                            theme,\n                        })\n                    })\n                } else {\n                    // layer(ctx, {})\n                }\n            })\n        }, [\n            canvasEl,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            path,\n            graticule,\n            getFillColor,\n            getBorderWidth,\n            getBorderColor,\n            boundFeatures,\n            legends,\n            layers,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleMouseMove = useCallback(\n            event => {\n                if (!isInteractive || !Tooltip) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    showTooltipFromEvent(<Tooltip feature={feature} />, event)\n                } else {\n                    hideTooltip()\n                }\n                onMouseMove && onMouseMove(feature || null, event)\n            },\n            [\n                showTooltipFromEvent,\n                hideTooltip,\n                isInteractive,\n                Tooltip,\n                canvasEl,\n                boundFeatures,\n                projection,\n            ]\n        )\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n        const handleClick = useCallback(\n            event => {\n                if (!isInteractive || !onClick) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    onClick(feature, event)\n                }\n            },\n            [isInteractive, canvasEl, boundFeatures, projection, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChoroplethCanvas.displayName = 'ChoroplethCanvas'\nChoroplethCanvas.propTypes = ChoroplethCanvasPropTypes\nChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps\n\nexport default withContainer(ChoroplethCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChoroplethCanvas from './ChoroplethCanvas'\n\nconst ResponsiveChoroplethCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChoroplethCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoroplethCanvas\n"],"sourceRoot":""}