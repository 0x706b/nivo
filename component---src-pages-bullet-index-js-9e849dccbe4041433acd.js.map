{"version":3,"sources":["webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/compute.js","webpack:///../src/props.js","webpack:///../src/components/AxisTick.js","webpack:///../src/components/Axis.js","webpack:///../src/components/Axes.js","webpack:///../src/components/GridLine.js","webpack:///../src/components/GridLines.js","webpack:///../src/components/Grid.js","webpack:///../src/utils.js","webpack:///../src/canvas.js","webpack:///./src/data/components/bullet/props.js","webpack:///./src/pages/bullet/index.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","centerScale","scale","bandwidth","offset","Math","d","timeByType","millisecond","second","minute","hour","day","week","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month","year","timeTypes","timeIntervalRegexp","RegExp","isInteger","isFinite","getScaleTicks","Array","spec","matches","timeType","Number","computeCartesianTicks","axis","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","textProps","textPropsByEngine","position","line","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","x","y","ticks","getFormatter","f","timeFormat","Date","d3Format","computeGridLines","width","height","_values","lineValues","lineCount","lines","v","x1","x2","y1","y2","axisPropTypes","PropTypes","format","renderTick","legend","legendPosition","legendOffset","ariaHidden","bool","axisPropType","AxisTick","_value","onClick","textAnchor","animatedProps","theme","useTheme","gStyle","opacity","transform","e","style","dominantBaseline","rotate","Axis","formatValue","useMemo","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","tick","initial","textTransform","from","enter","update","leave","aria-hidden","tickIndex","transitionProps","memo","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","GridLines","Grid","xValues","yValues","xLines","yLines","type","degreesToRadians","degrees","renderAxisToCanvas","ctx","renderAxesToCanvas","renderGridLinesToCanvas","props","group","help","description","required","enableControlForFlavors","controlType","controlOptions","unit","min","max","step","defaultValue","defaultProps","layout","choices","label","reverse","spacing","measureSize","markerSize","themeProperty","flavors","rangeColors","includeSequential","measureColors","markerColors","axisPosition","titlePosition","titleAlign","titleOffset","titleRotation","start","motionProperties","groups","groupProperties","generateData","generateBulletData","shuffle","float","measureCount","rangeCount","markerCount","initialProperties","margin","titleOffsetX","titleOffsetY","motionConfig","Bullet","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","data","logAction","onRangeClick","range","id","v0","v1","color","onMeasureClick","measure","onMarkerClick","marker"],"mappings":"obAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9CG,EAAegB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,ECWF,IAAMQ,EAAc,SAAAC,GACvB,IAAMC,EAAYD,EAAlB,YAEA,OAAIC,EAAiB,OAAOD,EAE5B,IAAIE,EAASD,EAAb,EAKA,OAJID,EAAJ,UACIE,EAASC,WAATD,IAGG,SAAAE,GAAC,OAAIJ,KAAJ,IAGNK,EAAa,CACfC,YAAa,CAAC,EAAD,EADE,KAEfC,OAAQ,CAAC,EAAD,EAFO,KAGfC,OAAQ,CAAC,EAAD,EAHO,KAIfC,KAAM,CAAC,EAAD,EAJS,KAKfC,IAAK,CAAC,EAAD,EALU,KAMfC,KAAM,CAAC,EAAD,EANS,KAOfC,OAAQ,CAAC,EAAD,EAPO,KAQfC,OAAQ,CAAC,EAAD,EARO,KASfC,QAAS,CAAC,EAAD,EATM,KAUfC,UAAW,CAAC,EAAD,EAVI,KAWfC,SAAU,CAAC,EAAD,EAXK,KAYfC,OAAQ,CAAC,EAAD,EAZO,KAafC,SAAU,CAAC,EAAD,EAbK,KAcfC,MAAO,CAAC,EAAD,EAdQ,KAefC,KAAM,CAAC,EAAD,QAGJC,EAAY/C,YAAlB,GACMgD,EAAqB,IAAIC,OAAO,yBAAX,OAAoCF,OAApC,aAA3B,KAEMG,EAAY,SAAAnD,GAAK,MACnB,oBAA6BoD,SAA7B,IAAgDtB,gBAD7B,GAGVuB,EAAgB,SAAC1B,EAAM,GAEhC,GAAI2B,cAAJ,GACI,OAAOC,EAIX,GAAI5B,EAAJ,MAAiB,CAEb,YAAI4B,EACA,OAAO5B,EAAP,QAIJ,GAAIwB,EAAJ,GACI,OAAOxB,QAAP,GAGJ,oBAAW4B,EAAmB,CAE1B,IAAMC,EAAUD,QAAhB,GACA,KAAa,CAIT,IAAME,EAAWzB,EAAWwB,EAAXxB,IAAuBL,WAAxC,GACA,gBAAI6B,KACO7B,QAAP,GAGGA,QAAY8B,QAAeC,OAAOF,EAAzC,MAGJ,MAAM,wCAAN,KAKR,OAAO7B,EAAP,UAGSgC,EAAwB,SAAC,GAS/B,IAUH,EAlBAC,EAQE,EARFA,KACAjC,EAOE,EAPFA,MACAkC,EAME,EANFA,cACAC,EAKE,EALFA,WACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,YACAC,EAEE,EAFFA,aAEE,IADFC,cACE,MADO,MACP,EACIC,EAASd,EAAc1B,EAA7B,GAEMyC,EAAYC,KAAlB,GAEMC,EAAW3C,YAAkBD,EAAlBC,GAAjB,EACM4C,EAAO,CAAEC,MAAF,EAAYC,MAAO,GAC1BC,EAAO,CAAEC,MAAF,EAAYC,MAAO,GAE1BC,EAAN,QAAcC,aAEVC,EAAYX,QAAhB,OACIY,EAAeZ,WAAnB,OAkDA,MAhDA,MAAIR,GACAqB,EAAY,SAAAlD,GAAC,MAAK,CAAEmD,EAAGZ,EAAL,GAAkBa,EAAG,IAEvCZ,QAAaR,GAAYF,eAAzBU,GACAG,SAAcX,EAAD,IAA4BF,eAAzCa,GAGIM,EADJ,UAAInB,EACeO,WAAfY,IAEeZ,WAAfY,OAGJ,IAAIf,EACAc,EAAYX,QAAZW,OAEClB,aAA6BI,EAA9B,GACCJ,cAA8BI,EAF5B,GAIHc,EAAYX,QAAgBS,EAAK,OAAjCE,SACAC,EAAeZ,WAAfY,SAECnB,aAA6BI,EAA9B,GACCJ,cAA8BI,EAF5B,KAIHc,EAAYX,QAAgBS,EAAK,QAAjCE,QACAC,EAAeZ,WAAfY,UAGJC,EAAY,SAAAlD,GAAC,MAAK,CAAEmD,EAAF,EAAQC,EAAGb,EAASvC,KAEtCwC,QAAaR,GAAYF,eAAzBU,GACAG,SAAcX,EAAD,IAA4BF,eAAzCa,GAGIK,EADJ,UAAIlB,EACYO,QAAZW,KAEYX,QAAZW,OAYD,CACHK,MATUjB,EAAA,KAAW,SAAAnE,GAAK,cAC1BD,IAAK,iBAAOC,GAAP,iBAAoCA,EAApC,YADqB,GAE1BA,SACGiF,EAHuB,aAU1BF,UAFG,EAGHC,iBAIKK,EAAe,SAAC,EAAD,GACxB,IAAK,GAAL,mBAAsB,EAAuB,OAAO,EAEpD,YAAI1D,OAAuB,CACvB,IAAM2D,EAAIC,YAAV,GACA,OAAO,SAAAxD,GAAC,OAAIuD,EAAE,IAAIE,KAAV,KAGZ,OAAOC,YAAP,IAGSC,EAAmB,SAAC,GAAqD,IAQlF,EAR+BC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,OAAQjE,EAAmC,EAAnCA,MAAOiC,EAA4B,EAA5BA,KAAciC,EAAc,EAAtB1B,OACrD2B,EAAaxC,wBAAnB,EACMyC,EAAY5C,YAAlB,EAEMgB,EAAS2B,GAAczC,EAAc1B,EAA3C,GAEM2C,EAAW3C,YAAkBD,EAAlBC,GAAjB,EAqBA,MAlBA,MAAIiC,EACAoC,EAAQ7B,EAAA,KAAW,SAAA8B,GAAC,MAAK,CACrBlG,IAAI,GAAD,OADkB,GAErBmG,GAAI5B,EAFiB,GAGrB6B,GAAI7B,EAHiB,GAIrB8B,GAJqB,EAKrBC,GAAIT,MAEL,MAAIhC,IACPoC,EAAQ7B,EAAA,KAAW,SAAA8B,GAAC,MAAK,CACrBlG,IAAI,GAAD,OADkB,GAErBmG,GAFqB,EAGrBC,GAHqB,EAIrBC,GAAI9B,EAJiB,GAKrB+B,GAAI/B,EAAS2B,QAIdD,GCpOEM,EAAgB,CACzBzC,cAAe0C,UAAgB,CAAC,SADP,UAEzBzC,WAAYyC,cAAoB,CAC5BA,IAD4B,OAE5BA,YACIA,cAAoB,CAACA,IAAD,OAAmBA,IAAnB,OAAqCA,eAHjC,SAK5BA,IAPqB,SASzBxC,SAAUwC,IATe,OAUzBvC,YAAauC,IAVY,OAWzBtC,aAAcsC,IAXW,OAYzBC,OAAQD,cAAoB,CAACA,IAAD,KAAiBA,IAZpB,SAazBE,WAAYF,IAba,KAczBG,OAAQH,IAdiB,KAezBI,eAAgBJ,UAAgB,CAAC,QAAQ,SAfhB,QAgBzBK,aAAcL,IAhBW,OAiBzBM,WAAYN,IAAUO,MAGbC,EAAeR,aCjBtBS,EAAW,SAAC,GASX,IARIC,EAQL,EARFjH,MACAwG,EAOE,EAPFA,OACAhC,EAME,EANFA,MACAC,EAKE,EALFA,MACAyC,EAIE,EAJFA,QACAlC,EAGE,EAHFA,aACAmC,EAEE,EAFFA,WACAC,EACE,EADFA,cAEMC,EAAQC,eAEVtH,EAAJ,OACA,IAAIwG,IACAxG,EAAQwG,EAARxG,IAGJ,IAAIuH,EAAS,CAAEC,QAASJ,EAAcI,SAKtC,OAJA,IACID,EAAM,OAANA,WAIA,kBAAC,WAAD,iBACIE,UAAWL,EAAcK,WACpBP,EAAU,CAAEA,QAAS,SAAAQ,GAAC,OAAIR,EAAQQ,EAAZ,KAF/B,IAGIC,MAAOJ,IAEP,0BAAMrB,GAAN,EAAaC,GAAb,EAAwBC,GAAxB,EAA+BC,GAA/B,EAA0CsB,MAAON,aAAiB9C,OAClE,kBAAC,WAAD,MACIqD,iBADJ,EAEIT,WAFJ,EAGIM,UAAWL,EAHf,cAIIO,MAAON,aAAiB3C,MAXpC,KAoCJsC,eAAwB,CACpBQ,QADoB,EAEpBK,OAAQ,GAGZ,IC5DMC,EAAO,SAAC,GAkBP,IAjBHlE,EAiBE,EAjBFA,KACAjC,EAgBE,EAhBFA,MACAuD,EAeE,EAfFA,EACAC,EAcE,EAdFA,EACA9D,EAaE,EAbFA,OACAwC,EAYE,EAZFA,cACAC,EAWE,EAXFA,WACAC,EAUE,EAVFA,SACAC,EASE,EATFA,YACAC,EAQE,EARFA,aACAuC,EAOE,EAPFA,OACAC,EAME,EANFA,WACAC,EAKE,EALFA,OACAC,EAIE,EAJFA,eACAC,EAGE,EAHFA,aACAM,EAEE,EAFFA,QACAL,EACE,EADFA,WAEMQ,EAAQC,eAERS,EAAcC,mBAAQ,kBAAM3C,EAAamB,EAAnB,KAAmC,CAACA,EAAhE,IAHE,EAKyC7C,EAAsB,CAC7DC,KAD6D,EAE7DjC,MAF6D,EAG7DkC,cAH6D,EAI7DC,WAJ6D,EAK7DC,SAL6D,EAM7DC,YAN6D,EAO7DC,iBAPImB,EALN,QAKaL,EALb,YAKwBC,EALxB,eAeEiD,EAAJ,KACA,YAAIvB,EAAsB,CACtB,IAGA,EAHIwB,EAAJ,EACIC,EAAJ,EACIC,EAAJ,EAGA,MAAIxE,GACAwE,MACAF,IACA,UAAIvB,GACAQ,UACAgB,KACG,WAAIxB,GACPQ,WACAgB,EAAU9G,EAAV8G,GACG,QAAIxB,IACPQ,WAGJgB,IACA,UAAIxB,EACAQ,UACG,WAAIR,GACPQ,WACAe,EAAU7G,EAAV6G,GACG,QAAIvB,IACPQ,QACAe,MAIRD,EACI,0BACIR,UAAS,2DADb,KAEIN,WAFJ,EAGIQ,MAAK,GACDC,iBAAkB,WACfP,cAFF,OAJbY,GA/CF,MA6DwCI,eAAlCC,EA7DN,UA6DuBC,EA7DvB,SA+DInB,EAAgBoB,oBAAU,CAC5Bf,UAAU,aAAD,uBADmB,KAE5BgB,OAAQ7E,UAFoB,EAG5B8E,OAAQ9E,UAHoB,EAI5B+E,OAJ4B,EAK5BC,WAAYN,IAGVO,EAAaC,wBAAc1D,EAAO,CACpCrF,IAAK,SAAAgJ,GAAI,OAAIA,EAAJ,KACTC,QAAS,SAAAD,GAAI,MAAK,CACdvB,QADc,EAEdC,UAAU,aAAD,OAAesB,EAAf,cAAyBA,EAAzB,EAFK,KAGdE,cAAc,aAAD,OAAeF,EAAf,kBAA6BA,EAA7B,mCAEjBG,KAAM,SAAAH,GAAI,MAAK,CACXvB,QADW,EAEXC,UAAU,aAAD,OAAesB,EAAf,cAAyBA,EAAzB,EAFE,KAGXE,cAAc,aAAD,OAAeF,EAAf,kBAA6BA,EAA7B,mCAEjBI,MAAO,SAAAJ,GAAI,MAAK,CACZvB,QADY,EAEZC,UAAU,aAAD,OAAesB,EAAf,cAAyBA,EAAzB,EAFG,KAGZE,cAAc,aAAD,OAAeF,EAAf,kBAA6BA,EAA7B,mCAEjBK,OAAQ,SAAAL,GAAI,MAAK,CACbvB,QADa,EAEbC,UAAU,aAAD,OAAesB,EAAf,cAAyBA,EAAzB,EAFI,KAGbE,cAAc,aAAD,OAAeF,EAAf,kBAA6BA,EAA7B,mCAEjBM,MAAO,CACH7B,QAAS,GAEbmB,OAzBoC,EA0BpCC,WAAYN,IAGhB,OACI,kBAAC,WAAD,GAAYb,UAAWL,EAAvB,UAAgDkC,cAAazC,GACxDgC,GAAW,kBACR,OAAO,yBACHU,UADG,EAEH/C,OAFG,EAGHqB,OAHG,EAIH7C,aAJG,EAKHmC,WALG,EAMHC,cAAeoC,GANZ,GAQCtC,EAAU,CAAEA,WARpB,QAWJ,kBAAC,WAAD,MACIS,MAAON,cADX,KAEInB,GAFJ,EAGIC,GAAIiB,EAHR,OAIIhB,GAJJ,EAKIC,GAAIe,EAAcsB,SAnB9B,IA6CJZ,eAAoB,CAChB5C,EADgB,EAEhBC,EAFgB,EAGhBpB,SAHgB,EAIhBC,YAJgB,EAKhBC,aALgB,EAMhBwC,WD7GWgD,eAAf,GC8GI9C,eAPgB,MAQhBC,aAAc,GAGlB,MAAe6C,eAAf,GCjLMC,EAAY,CAAC,MAAM,QAAP,SAAlB,QAEMC,EAAO,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,OAAQC,EAAsD,EAAtDA,OAAQlE,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,OAC7BkE,EAAO,CAAEC,IAD2D,EAA/BA,IACvBC,MADsD,EAA1BA,MACrBC,OAD+C,EAAnBA,OACpBC,KADuC,EAAXA,MAG/D,OAAOR,EAAA,KAAc,SAAApF,GACjB,IAAMV,EAAOkG,EAAb,GAEA,MAAW,OAAO,KAElB,IAAMK,EAAU7F,WAAhB,WAAsCA,EAChCT,EAAgBS,oBAAsBA,EAAtBA,SAAtB,QAEA,OACI,mCACIvE,IAAKuE,GADT,GAGIV,KAAMuG,EAAO,IAHjB,IAIIjF,EAAGZ,cAJP,EAKIa,EAAGb,eALP,EAMI3C,MAAOwI,EAAO,EANlB,EAOI9I,OAAQ8I,EAAO,EAPnB,EAQItG,cAAeA,SAiB/B,EAAe4F,eAAf,GCvCMW,EAAW,SAAC,GAAuB,IAArBhD,EAAoB,EAApBA,cACVC,EAAQC,eAEd,OAAO,kBAAC,WAAD,wBAAsCD,OAA7C,QAUJ+C,eAAwB,CACpBlE,GADoB,EAEpBC,GAFoB,EAGpBC,GAHoB,EAIpBC,GAAI,GAGR,MAAeoD,eAAf,GCnBMY,EAAY,SAAC,GAAe,IAAbrE,EAAY,EAAZA,MAAY,EACaqC,eAAlCC,EADqB,UACJC,EADI,SAGvBM,EAAaC,wBAAc9C,EAAO,CACpCjG,IAAK,SAAAwE,GAAI,OAAIA,EAAJ,KACTyE,QAAS,SAAAzE,GAAI,MAAK,CACdiD,QADc,EAEdtB,GAAI3B,EAFU,GAGd4B,GAAI5B,EAHU,GAId6B,GAAI7B,EAJU,GAKd8B,GAAI9B,EAAK8B,KAEb6C,KAAM,SAAA3E,GAAI,MAAK,CACXiD,QADW,EAEXtB,GAAI3B,EAFO,GAGX4B,GAAI5B,EAHO,GAIX6B,GAAI7B,EAJO,GAKX8B,GAAI9B,EAAK8B,KAEb8C,MAAO,SAAA5E,GAAI,MAAK,CACZiD,QADY,EAEZtB,GAAI3B,EAFQ,GAGZ4B,GAAI5B,EAHQ,GAIZ6B,GAAI7B,EAJQ,GAKZ8B,GAAI9B,EAAK8B,KAEb+C,OAAQ,SAAA7E,GAAI,MAAK,CACbiD,QADa,EAEbtB,GAAI3B,EAFS,GAGb4B,GAAI5B,EAHS,GAIb6B,GAAI7B,EAJS,GAKb8B,GAAI9B,EAAK8B,KAEbgD,MAAO,CACH7B,QAAS,GAEbmB,OAjCoC,EAkCpCC,WAAYN,IAGhB,OACI,2BACKO,GAAW,qBACR,wCAAoB9I,IAAKwE,EAAzB,IAAmC6C,cAAeA,UAmBlE,EAAeqC,eAAf,GC/DMa,EAAO,SAAC,GAAyD,IAAvD3E,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,OAAQgE,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OAAQU,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC9CC,EAASzC,mBAAQ,WACnB,WAEOtC,EAAiB,CACpBC,MADoB,EAEpBC,OAFoB,EAGpBjE,MAHoB,EAIpBiC,KAJoB,IAKpBO,OAAQoG,MAEb,CAACX,EAAO,EAAR,EAVH,IAYMc,IAASb,GACTnE,EAAiB,CACbC,MADa,EAEbC,OAFa,EAGbjE,MAHa,EAIbiC,KAJa,IAKbO,OAAQqG,IAIlB,OACI,oCACKC,GAAU,qBAAWE,KAAX,IAAoB3E,MAAOyE,IACrCC,GAAU,qBAAWC,KAAX,IAAoB3E,MAAO0E,MAyBlD,EAAejB,eAAf,GCvDamB,EAAmB,SAAAC,GAAO,OAAKA,EAAU/I,KAAX,GAAJ,KCE1BgJ,EAAqB,SAAC,EAAD,GAsB5B,IAnBElH,EAmBH,EAnBGA,KACAjC,EAkBH,EAlBGA,MAkBH,IAjBGuD,SAiBH,MAjBO,EAiBP,MAhBGC,SAgBH,MAhBO,EAgBP,EAfG9D,EAeH,EAfGA,OAEAwC,EAaH,EAbGA,cACAC,EAYH,EAZGA,WAYH,IAXGC,gBAWH,MAXc,EAWd,MAVGC,mBAUH,MAViB,EAUjB,MATGC,oBASH,MATkB,EASlB,EARGuC,EAQH,EARGA,OAEAE,EAMH,EANGA,OAMH,IALGC,sBAKH,MALoB,MAKpB,MAJGC,oBAIH,MAJkB,EAIlB,EAFGS,EAEH,EAFGA,MAEH,EAC0C1D,EAAsB,CAC7DC,KAD6D,EAE7DjC,MAF6D,EAG7DkC,cAH6D,EAI7DC,WAJ6D,EAK7DC,SAL6D,EAM7DC,YAN6D,EAO7DC,aAP6D,EAQ7DC,OAAQ,WARJkB,EADP,QACcL,EADd,YACyBC,EADzB,eAkDD,GAtCA+F,SACAA,iBAEAA,cACAA,iBACAA,iBAAc1D,kBAAd0D,uBAAkD1D,kBAAlD0D,YAEI1D,+BAAJ,IACI0D,YAAgB1D,mBAAhB0D,YACAA,mBACAA,cAAkB1D,mBAAlB0D,OACAA,cACAA,cACAA,SAAWnH,UAAXmH,EAAsCnH,UAAtCmH,GACAA,YAGJ3F,WAAc,SAAA2D,GACN1B,8BAAJ,IACI0D,YAAgB1D,kBAAhB0D,YACAA,mBACAA,cAAkB1D,kBAAlB0D,OACAA,cACAA,SAAWhC,EAAXgC,EAAmBhC,EAAnBgC,GACAA,SAAWhC,IAASA,EAApBgC,MAAgChC,IAASA,EAAzCgC,OACAA,YAGJ,IAAM/K,OAAQwG,MAAuBA,EAAOuC,EAA9BvC,OAA4CuC,EAA1D,MAEAgC,SACAA,YAAchC,IAASA,EAAvBgC,MAAmChC,IAASA,EAA5CgC,OACAA,SAAWH,EAAXG,IACAA,YAAgB1D,kBAAhB0D,KACAA,kBACAA,oBAGJ,IAAIrE,EAAsB,CACtB,IAGA,EAHIwB,EAAJ,EACIC,EAAJ,EACIC,EAAJ,EAGA,MAAIxE,GACAwE,MACAF,IACA,UAAIvB,GACA5B,UACAoD,KACG,WAAIxB,GACP5B,WACAoD,EAAU9G,EAAV8G,GACG,QAAIxB,IACP5B,WAGJoD,IACA,UAAIxB,EACA5B,UACG,WAAI4B,GACP5B,WACAmD,EAAU7G,EAAV6G,GACG,QAAIvB,IACP5B,QACAmD,MAIR6C,iBACAA,SAAWH,EAAXG,IACAA,iBACI1D,wCAAuCA,mBAAvCA,gBADJ0D,WAEG1D,mBAFH0D,uBAEwC1D,mBAFxC0D,YAGAA,YAAgB1D,mBAAhB0D,KACAA,cACAA,wBACAA,kBAGJA,aAGErB,EAAY,CAAC,MAAM,QAAP,SAAlB,QAEasB,EAAqB,SAAC,EAAD,GAe5B,IAZEpB,EAYH,EAZGA,OACAC,EAWH,EAXGA,OACAlE,EAUH,EAVGA,MACAC,EASH,EATGA,OAEAmE,EAOH,EAPGA,IACAC,EAMH,EANGA,MACAC,EAKH,EALGA,OACAC,EAIH,EAJGA,KAEA7C,EAEH,EAFGA,MAGEyC,EAAO,CAAEC,IAAF,EAAOC,MAAP,EAAcC,OAAd,EAAsBC,QAEnCR,WAAkB,SAAApF,GACd,IAAMV,EAAOkG,EAAb,GAEA,MAAW,OAAO,KAElB,IAAMK,EAAU7F,WAAhB,WAAsCA,EAChCT,EAAgBS,oBAAsBA,EAAtBA,SAAtB,QACM3C,EAAQwI,EAAO,EAArB,EACM3D,EAASnB,EAAazB,EAAD,OAA3B,GAEAkH,EAAmBC,EAAI,EAAL,YAEdnH,KAAMuG,EAAO,IAFC,IAGdjF,EAAGZ,cAHW,EAIda,EAAGb,eAJW,EAKd3C,MALc,EAMd6E,OANc,EAOdnF,OAAQ8I,EAAO,EAPD,EAQdtG,cARc,EASdwD,eAKC4D,EAA0B,SAACF,EAAI,GAA6C,IAA1CpF,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,OAAQjE,EAA0B,EAA1BA,MAAOiC,EAAmB,EAAnBA,KAAMO,EAAa,EAAbA,OACzDuB,EAAiB,CAAEC,MAAF,EAASC,OAAT,EAAiBjE,MAAjB,EAAwBiC,KAAxB,EAA8BO,WAE7D6B,SAAc,SAAAzB,GACVwG,cACAA,SAAWxG,EAAXwG,GAAoBxG,EAApBwG,IACAA,SAAWxG,EAAXwG,GAAoBxG,EAApBwG,IACAA,gB,wKCxKFG,EAAK,CACP,CACInL,IAAK,OACLoL,MAAO,OACPC,KAAM,cACNC,YAAY,ghBAkBZV,KAAM,WACNW,UAAU,GAEd,CACIvL,IAAK,QACLwL,wBAAyB,CAAC,OAC1BJ,MAAO,OACPC,KAAM,eACNC,YAAa,4CACbV,KAAM,SACNW,UAAU,EACVE,YAAa,QACbC,eAAgB,CACZC,KAAM,KACNC,IAAK,IACLC,IAAK,IACLC,KAAM,IAGd,CACI9L,IAAK,SACLwL,wBAAyB,CAAC,OAC1BJ,MAAO,OACPC,KAAM,gBACNC,YAAa,4CACbV,KAAM,SACNW,UAAU,EACVE,YAAa,QACbC,eAAgB,CACZC,KAAM,KACNC,IAAK,IACLC,IAAK,IACLC,KAAM,IAGd,CACI9L,IAAK,SACLoL,MAAO,OACPC,KAAK,wBACLT,KAAM,SACNW,UAAU,EACVQ,aAAcC,IAAaC,OAC3BR,YAAa,QACbC,eAAgB,CACZQ,QAAS,CACL,CAAEC,MAAO,aAAclM,MAAO,cAC9B,CAAEkM,MAAO,WAAYlM,MAAO,eAIxC,CACID,IAAK,UACLoL,MAAO,OACPC,KAAM,iBACNC,YAAY,qKAKZV,KAAM,UACNW,UAAU,EACVQ,aAAcC,IAAaI,QAC3BX,YAAa,UAEjB,CACIzL,IAAK,SACLqL,KAAM,gBACNT,KAAM,SACNW,UAAU,EACVE,YAAa,SACbL,MAAO,QAEX,CACIpL,IAAK,UACLqL,KAAM,gCACNT,KAAM,SACNW,UAAU,EACVQ,aAAcC,IAAaK,QAC3BZ,YAAa,QACbL,MAAO,OACPM,eAAgB,CACZC,KAAM,KACNC,IAAK,EACLC,IAAK,MAGb,CACI7L,IAAK,cACLqL,KAAM,qEACNT,KAAM,SACNW,UAAU,EACVQ,aAAcC,IAAaM,YAC3Bb,YAAa,QACbL,MAAO,OACPM,eAAgB,CACZE,IAAK,EACLC,IAAK,EACLC,KAAM,MAGd,CACI9L,IAAK,aACLqL,KAAM,qEACNT,KAAM,SACNW,UAAU,EACVQ,aAAcC,IAAaO,WAC3Bd,YAAa,QACbL,MAAO,OACPM,eAAgB,CACZE,IAAK,EACLC,IAAK,EACLC,KAAM,MAGdU,IACA,CACIxM,IAAK,iBACLyM,QAAS,CAAC,OACVrB,MAAO,QACPC,KAAM,+BACNT,KAAM,WACNW,UAAU,GAEd,CACIvL,IAAK,cACLqL,KAAM,gBACNC,YAAY,gKAKZV,KAAM,+BACNW,UAAU,EACVQ,aAAcC,IAAaU,YAC3BjB,YAAa,SACbL,MAAO,QACPM,eAAgB,CACZiB,mBAAmB,IAG3B,CACI3M,IAAK,mBACLyM,QAAS,CAAC,OACVrB,MAAO,QACPC,KAAM,iCACNT,KAAM,WACNW,UAAU,GAEd,CACIvL,IAAK,gBACLqL,KAAM,mBACNC,YAAY,kKAKZV,KAAM,+BACNW,UAAU,EACVQ,aAAcC,IAAaY,cAC3BnB,YAAa,SACbL,MAAO,QACPM,eAAgB,CACZiB,mBAAmB,IAG3B,CACI3M,IAAK,kBACLyM,QAAS,CAAC,OACVrB,MAAO,QACPC,KAAM,gCACNT,KAAM,WACNW,UAAU,GAEd,CACIvL,IAAK,eACLqL,KAAM,kBACNC,YAAY,iKAKZV,KAAM,8BACNW,UAAU,EACVQ,aAAcC,IAAaa,aAC3BpB,YAAa,SACbL,MAAO,QACPM,eAAgB,CACZiB,mBAAmB,IAG3B,CACI3M,IAAK,eACLqL,KAAK,qBACLT,KAAM,SACNW,UAAU,EACVQ,aAAcC,IAAac,aAC3BrB,YAAa,QACbL,MAAO,OACPM,eAAgB,CACZQ,QAAS,CACL,CAAEC,MAAO,SAAUlM,MAAO,UAC1B,CAAEkM,MAAO,QAASlM,MAAO,YAIrC,CACID,IAAK,gBACLqL,KAAK,sBACLT,KAAM,SACNW,UAAU,EACVQ,aAAcC,IAAae,cAC3BtB,YAAa,QACbL,MAAO,QACPM,eAAgB,CACZQ,QAAS,CACL,CAAEC,MAAO,SAAUlM,MAAO,UAC1B,CAAEkM,MAAO,QAASlM,MAAO,YAIrC,CACID,IAAK,aACLqL,KAAK,mBACLT,KAAM,SACNW,UAAU,EACVQ,aAAcC,IAAagB,WAC3BvB,YAAa,UACbL,MAAO,QACPM,eAAgB,CACZQ,QAAS,CACL,CAAEC,MAAO,QAASlM,MAAO,SACzB,CAAEkM,MAAO,SAAUlM,MAAO,UAC1B,CAAEkM,MAAO,MAAOlM,MAAO,UAInC,CACID,IAAK,eACLqL,KAAM,mCACNT,KAAM,SACNW,UAAU,EACVQ,aAAcC,IAAaiB,YAC3BxB,YAAa,QACbL,MAAO,QACPM,eAAgB,CACZE,KAAM,IACNC,IAAK,IACLF,KAAM,OAGd,CACI3L,IAAK,eACLqL,KAAM,mCACNT,KAAM,SACNW,UAAU,EACVQ,aAAcC,IAAaiB,YAC3BxB,YAAa,QACbL,MAAO,QACPM,eAAgB,CACZE,KAAM,IACNC,IAAK,IACLF,KAAM,OAGd,CACI3L,IAAK,gBACLqL,KAAM,kBACNT,KAAM,SACNW,UAAU,EACVQ,aAAcC,IAAakB,cAC3BzB,YAAa,QACbL,MAAO,QACPM,eAAgB,CACZyB,MAAO,GACPvB,KAAM,IACNC,IAAK,IACLC,KAAM,IAGd,CACI9L,IAAK,eACLyM,QAAS,CAAC,OACV7B,KAAM,yBACNQ,MAAO,gBACPG,UAAU,EACVF,KAAM,8BACNC,YAAY,4fAmBhB,CACItL,IAAK,iBACLyM,QAAS,CAAC,OACV7B,KAAM,2BACNQ,MAAO,gBACPG,UAAU,EACVF,KAAM,gCACNC,YAAY,ogBAmBhB,CACItL,IAAK,gBACLyM,QAAS,CAAC,OACV7B,KAAM,0BACNQ,MAAO,gBACPG,UAAU,EACVF,KAAM,+BACNC,YAAY,yXAzWT,mBAwXJ8B,YAAiB,CAAC,OAAQpB,IAAc,kBAGlCqB,EAASC,YAAgBnC,GCtXhCoC,EAAe,iBAAM,CACvBC,YAAmB,QAASC,IAAQ,CAAC,IAAK,IAAK,MAAM,IACrDD,YAAmB,QAAS,EAAG,CAAEE,OAAO,EAAMC,aAAc,IAC5DH,YAAmB,SAAUC,IAAQ,CAAC,GAAI,GAAI,KAAK,GAAI,CAAEG,WAAY,IACrEJ,YAAmB,OAAQ,IAAQ,CAAEG,aAAc,IACnDH,YAAmB,UAAWC,IAAQ,CAAC,EAAG,GAAI,KAAK,GAAI,CAAEI,YAAa,MAGpEC,EAAoB,CACtBC,OAAQ,CACJ/D,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAEV8B,OAAQD,IAAaC,OACrBG,QAASJ,IAAaI,QACtBC,QAAS,GACTU,cAAef,IAAae,cAC5BC,WAAY,QACZgB,cAAe,GACfC,aAAcjC,IAAaiC,aAC3Bf,cAAelB,IAAakB,cAC5BZ,YAAa,GACbC,WAAY,GACZO,aAAcd,IAAac,aAC3BJ,YAAaV,IAAaU,YAC1BE,cAAeZ,IAAaY,cAC5BC,aAAcb,IAAaa,aAC3BtE,QAASyD,IAAazD,QACtB2F,aAAclC,IAAakC,cAqDhBC,UAlDA,WACX,OACI,kBAACC,EAAA,EAAD,CACIC,KAAK,SACLC,KAAMA,IAAKH,OACXI,KAAK,SACL9B,QAAS6B,IAAK7B,QACd+B,cAAc,MACdC,WAAYpB,EACZS,kBAAmBA,EACnBY,kBAAmB1C,IACnBuB,aAAcA,IAEb,SAACkB,EAAYE,EAAMrH,EAAOsH,GACvB,OACI,kBAAC,IAAD,eACID,KAAMA,GACFF,EAFR,CAGInH,MAAOA,EACPuH,aAAc,SAAAC,GACVF,EAAU,CACNhE,KAAM,QACNuB,MAAM,WAAY2C,EAAMC,GAAnB,MAA2BD,EAAME,GAAjC,KAAwCF,EAAMG,GAA9C,IACLC,MAAOJ,EAAMI,MACbP,KAAMG,KAGdK,eAAgB,SAAAC,GACZR,EAAU,CACNhE,KAAM,QACNuB,MAAM,aAAciD,EAAQL,GAAvB,MAA+BK,EAAQJ,GAAvC,KAA8CI,EAAQH,GAAtD,IACLC,MAAOE,EAAQF,MACfP,KAAMS,KAGdC,cAAe,SAAAC,GACXV,EAAU,CACNhE,KAAM,QACNuB,MAAM,YAAamD,EAAOP,GAArB,KAA4BO,EAAOrP,MACxCiP,MAAOI,EAAOJ,MACdP,KAAMW","file":"component---src-pages-bullet-index-js-9e849dccbe4041433acd.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\nimport { textPropsByEngine } from '@nivo/core'\n\nexport const centerScale = scale => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return d => scale(d) + offset\n}\n\nconst timeByType = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = value =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = (scale, spec) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    // continuous scales\n    if (scale.ticks) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n\n        if (typeof spec === 'string') {\n            // time interval\n            const matches = spec.match(timeIntervalRegexp)\n            if (matches) {\n                // UTC is used as it's more predictible\n                // however local time could be used too\n                // let's see how it fits users' requirements\n                const timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0]\n                if (matches[1] === undefined) {\n                    return scale.ticks(timeType)\n                }\n\n                return scale.ticks(timeType.every(Number(matches[1])))\n            }\n\n            throw new Error(`Invalid tickValues: ${spec}`)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n\nexport const computeCartesianTicks = ({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}) => {\n    const values = getScaleTicks(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = document.dir === 'rtl'\n    let translate\n    let textAlign = textProps.align.center\n    let textBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d), y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = (format, scale) => {\n    if (!format || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const f = timeFormat(format)\n        return d => f(new Date(d))\n    }\n\n    return d3Format(format)\n}\n\nexport const computeGridLines = ({ width, height, scale, axis, values: _values }) => {\n    const lineValues = Array.isArray(_values) ? _values : undefined\n    const lineCount = isInteger(_values) ? _values : undefined\n\n    const values = lineValues || getScaleTicks(scale, lineCount)\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n\n    let lines\n    if (axis === 'x') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: position(v),\n            x2: position(v),\n            y1: 0,\n            y2: height,\n        }))\n    } else if (axis === 'y') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: 0,\n            x2: width,\n            y1: position(v),\n            y2: position(v),\n        }))\n    }\n\n    return lines\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport { animated } from 'react-spring'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\n\nconst AxisTick = ({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}) => {\n    const theme = useTheme()\n\n    let value = _value\n    if (format !== undefined) {\n        value = format(value)\n    }\n\n    let gStyle = { opacity: animatedProps.opacity }\n    if (onClick) {\n        gStyle['cursor'] = 'pointer'\n    }\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            {...(onClick ? { onClick: e => onClick(e, value) } : {})}\n            style={gStyle}\n        >\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nAxisTick.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        .isRequired,\n    format: PropTypes.func,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    lineX: PropTypes.number.isRequired,\n    lineY: PropTypes.number.isRequired,\n    textX: PropTypes.number.isRequired,\n    textY: PropTypes.number.isRequired,\n    textBaseline: PropTypes.string.isRequired,\n    textAnchor: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    rotate: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    animatedProps: PropTypes.object.isRequired,\n}\nAxisTick.defaultProps = {\n    opacity: 1,\n    rotate: 0,\n}\n\nexport default memo(AxisTick)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, useTransition, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { axisPropTypes } from '../props'\nimport AxisTick from './AxisTick'\n\nconst Axis = ({\n    axis,\n    scale,\n    x,\n    y,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    format,\n    renderTick,\n    legend,\n    legendPosition,\n    legendOffset,\n    onClick,\n    ariaHidden,\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition(ticks, {\n        key: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nAxis.propTypes = {\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    scale: PropTypes.func.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    length: PropTypes.number.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    tickValues: axisPropTypes.tickValues,\n    tickSize: PropTypes.number.isRequired,\n    tickPadding: PropTypes.number.isRequired,\n    tickRotation: PropTypes.number.isRequired,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.elementType,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n    legendOffset: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    ariaHidden: PropTypes.bool,\n}\nAxis.defaultProps = {\n    x: 0,\n    y: 0,\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    renderTick: AxisTick,\n    legendPosition: 'end',\n    legendOffset: 0,\n}\n\nexport default memo(Axis)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Axis from './Axis'\nimport { axisPropType } from '../props'\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nconst Axes = ({ xScale, yScale, width, height, top, right, bottom, left }) => {\n    const axes = { top, right, bottom, left }\n\n    return positions.map(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n\n        return (\n            <Axis\n                key={position}\n                {...axis}\n                axis={isXAxis ? 'x' : 'y'}\n                x={position === 'right' ? width : 0}\n                y={position === 'bottom' ? height : 0}\n                scale={isXAxis ? xScale : yScale}\n                length={isXAxis ? width : height}\n                ticksPosition={ticksPosition}\n            />\n        )\n    })\n}\n\nAxes.propTypes = {\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    top: axisPropType,\n    right: axisPropType,\n    bottom: axisPropType,\n    left: axisPropType,\n}\n\nexport default memo(Axes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nconst GridLine = ({ animatedProps }) => {\n    const theme = useTheme()\n\n    return <animated.line {...animatedProps} {...theme.grid.line} />\n}\n\nGridLine.propTypes = {\n    x1: PropTypes.number.isRequired,\n    x2: PropTypes.number.isRequired,\n    y1: PropTypes.number.isRequired,\n    y2: PropTypes.number.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n}\nGridLine.defaultProps = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n}\n\nexport default memo(GridLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport GridLine from './GridLine'\n\nconst GridLines = ({ lines }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition(lines, {\n        key: line => line.key,\n        initial: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        from: line => ({\n            opacity: 0,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        enter: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        update: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n}\n\nGridLines.propTypes = {\n    type: PropTypes.oneOf(['x', 'y']).isRequired,\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            x1: PropTypes.number,\n            x2: PropTypes.number,\n            y1: PropTypes.number,\n            y2: PropTypes.number,\n        })\n    ).isRequired,\n}\n\nexport default memo(GridLines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport GridLines from './GridLines'\nimport { computeGridLines } from '../compute'\n\nconst Grid = ({ width, height, xScale, yScale, xValues, yValues }) => {\n    const xLines = useMemo(() => {\n        if (!xScale) return false\n\n        return computeGridLines({\n            width,\n            height,\n            scale: xScale,\n            axis: 'x',\n            values: xValues,\n        })\n    }, [xScale, xValues, width, height])\n\n    const yLines = yScale\n        ? computeGridLines({\n              width,\n              height,\n              scale: yScale,\n              axis: 'y',\n              values: yValues,\n          })\n        : false\n\n    return (\n        <>\n            {xLines && <GridLines type=\"x\" lines={xLines} />}\n            {yLines && <GridLines type=\"y\" lines={yLines} />}\n        </>\n    )\n}\n\nGrid.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    xValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    yValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n}\n\nexport default memo(Grid)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const degreesToRadians = degrees => (degrees * Math.PI) / 180\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { degreesToRadians } from './utils'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\n\nexport const renderAxisToCanvas = (\n    ctx,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontSize}px ${theme.axis.ticks.text.fontFamily}`\n\n    if (theme.axis.domain.line.strokeWidth > 0) {\n        ctx.lineWidth = theme.axis.domain.line.strokeWidth\n        ctx.lineCap = 'square'\n        ctx.strokeStyle = theme.axis.domain.line.stroke\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    ticks.forEach(tick => {\n        if (theme.axis.ticks.line.strokeWidth > 0) {\n            ctx.lineWidth = theme.axis.ticks.line.strokeWidth\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.axis.ticks.line.stroke\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format !== undefined ? format(tick.value) : tick.value\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n        ctx.fillStyle = theme.axis.ticks.text.fill\n        ctx.fillText(value, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n        ctx.fillStyle = theme.axis.legend.text.fill\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nexport const renderAxesToCanvas = (\n    ctx,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = (ctx, { width, height, scale, axis, values }) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { defaultProps } from '@nivo/bullet'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:        {string|number}\n                title?:    {ReactNode}\n                subtitle?: {ReactNode}\n                data: Array<{\n                    ranges:   number[]\n                    measures: number[]\n                    markers?: number[]\n                }>\n            }>\n            \\`\\`\\`\n\n            If \\`title\\` is \\`undefined\\`, \\`id\\` will be used for\n            \\`title\\`.\n        `,\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        group: 'Base',\n        help: 'Chart width.',\n        description: 'not required if using `ResponsiveBullet`.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        group: 'Base',\n        help: 'Chart height.',\n        description: 'not required if using `ResponsiveBullet`.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'layout',\n        group: 'Base',\n        help: `How to display items.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.layout,\n        controlType: 'radio',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'reverse',\n        group: 'Base',\n        help: 'Reverse chart.',\n        description: `\n            Reverse chart, starts on top instead of bottom\n            for vertical layout and right instead of left\n            for horizontal one.\n        `,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.reverse,\n        controlType: 'switch',\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'spacing',\n        help: 'define spacing between items.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.spacing,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 100,\n        },\n    },\n    {\n        key: 'measureSize',\n        help: 'define size of measure related to item size, expressed as a ratio.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.measureSize,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'markerSize',\n        help: 'define size of markers related to item size, expressed as a ratio.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.markerSize,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 2,\n            step: 0.05,\n        },\n    },\n    themeProperty,\n    {\n        key: 'rangeComponent',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Custom component for ranges.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'rangeColors',\n        help: 'Ranges colors',\n        description: `\n            Defines colors for ranges,\n            you can either use categorical colors:\n            \\`greens\\` or sequential form: \\`seq:green\\`.\n        `,\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaultProps.rangeColors,\n        controlType: 'colors',\n        group: 'Style',\n        controlOptions: {\n            includeSequential: true,\n        },\n    },\n    {\n        key: 'measureComponent',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Custom component for measures.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'measureColors',\n        help: 'Measures colors.',\n        description: `\n            Defines colors for measures,\n            you can either use categorical colors:\n            \\`greens\\` or sequential form: \\`seq:green\\`.\n        `,\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaultProps.measureColors,\n        controlType: 'colors',\n        group: 'Style',\n        controlOptions: {\n            includeSequential: true,\n        },\n    },\n    {\n        key: 'markerComponent',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Custom component for markers.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'markerColors',\n        help: 'Markers colors.',\n        description: `\n            Defines colors for markers,\n            you can either use categorical colors:\n            \\`greens\\` or sequential form: \\`seq:green\\`.\n        `,\n        type: 'string | Function| string[]',\n        required: false,\n        defaultValue: defaultProps.markerColors,\n        controlType: 'colors',\n        group: 'Style',\n        controlOptions: {\n            includeSequential: true,\n        },\n    },\n    {\n        key: 'axisPosition',\n        help: `Where to put axis.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.axisPosition,\n        controlType: 'radio',\n        group: 'Axes',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'titlePosition',\n        help: `Where to put title.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.titlePosition,\n        controlType: 'radio',\n        group: 'Title',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'titleAlign',\n        help: `title alignment.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.titleAlign,\n        controlType: 'choices',\n        group: 'Title',\n        controlOptions: {\n            choices: [\n                { label: 'start', value: 'start' },\n                { label: 'middle', value: 'middle' },\n                { label: 'end', value: 'end' },\n            ],\n        },\n    },\n    {\n        key: 'titleOffsetX',\n        help: 'title x offset from bullet edge.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.titleOffset,\n        controlType: 'range',\n        group: 'Title',\n        controlOptions: {\n            min: -100,\n            max: 100,\n            unit: 'px',\n        },\n    },\n    {\n        key: 'titleOffsetY',\n        help: 'title y offset from bullet edge.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.titleOffset,\n        controlType: 'range',\n        group: 'Title',\n        controlOptions: {\n            min: -100,\n            max: 100,\n            unit: 'px',\n        },\n    },\n    {\n        key: 'titleRotation',\n        help: 'title rotation.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.titleRotation,\n        controlType: 'angle',\n        group: 'Title',\n        controlOptions: {\n            start: 90,\n            min: -360,\n            max: 360,\n            step: 5,\n        },\n    },\n    {\n        key: 'onRangeClick',\n        flavors: ['svg'],\n        type: '(range, event) => void',\n        group: 'Interactivity',\n        required: false,\n        help: 'onClick handler for ranges.',\n        description: `\n            onClick handler for ranges, will receive range\n            data as first argument & event as second one.\n\n            The data has the following shape:\n            \\`\\`\\`\n            {\n                id:    string,\n                v0:    number,\n                v1:    number,\n                index: number,\n                color: string,\n            }\n            \\`\\`\\`\n\n            \\`v1\\` is the value of the range while\n            \\`v0\\` is the value of previous range.\n        `,\n    },\n    {\n        key: 'onMeasureClick',\n        flavors: ['svg'],\n        type: '(measure, event) => void',\n        group: 'Interactivity',\n        required: false,\n        help: 'onClick handler for measures.',\n        description: `\n            onClick handler for measures, will receive measure\n            data as first argument & event as second one.\n\n            The data has the following shape:\n            \\`\\`\\`\n            {\n                id:    string,\n                v0:    number,\n                v1:    number,\n                index: number,\n                color: string,\n            }\n            \\`\\`\\`\n\n            \\`v1\\` is the value of the measure while\n            \\`v0\\` is the value of previous measure.\n        `,\n    },\n    {\n        key: 'onMarkerClick',\n        flavors: ['svg'],\n        type: '(marker, event) => void',\n        group: 'Interactivity',\n        required: false,\n        help: 'onClick handler for markers.',\n        description: `\n            onClick handler for markers, will receive marker\n            data as first argument & event as second one.\n\n            The data has the following shape:\n            \\`\\`\\`\n            {\n                id:    string,\n                value: number,\n                index: number,\n                color: string,\n            }\n            \\`\\`\\`\n        `,\n    },\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport shuffle from 'lodash/shuffle'\nimport { ResponsiveBullet, defaultProps } from '@nivo/bullet'\nimport { generateBulletData } from '@nivo/generators'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/bullet/meta.yml'\nimport { groups } from '../../data/components/bullet/props'\n\nconst generateData = () => [\n    generateBulletData('temp.', shuffle([100, 120, 140])[0]),\n    generateBulletData('power', 2, { float: true, measureCount: 2 }),\n    generateBulletData('volume', shuffle([40, 60, 80])[0], { rangeCount: 8 }),\n    generateBulletData('cost', 500000, { measureCount: 2 }),\n    generateBulletData('revenue', shuffle([9, 11, 13])[0], { markerCount: 2 }),\n]\n\nconst initialProperties = {\n    margin: {\n        top: 50,\n        right: 90,\n        bottom: 50,\n        left: 90,\n    },\n    layout: defaultProps.layout,\n    reverse: defaultProps.reverse,\n    spacing: 46,\n    titlePosition: defaultProps.titlePosition,\n    titleAlign: 'start',\n    titleOffsetX: -70,\n    titleOffsetY: defaultProps.titleOffsetY,\n    titleRotation: defaultProps.titleRotation,\n    measureSize: 0.2,\n    markerSize: 0.6,\n    axisPosition: defaultProps.axisPosition,\n    rangeColors: defaultProps.rangeColors,\n    measureColors: defaultProps.measureColors,\n    markerColors: defaultProps.markerColors,\n    animate: defaultProps.animate,\n    motionConfig: defaultProps.motionConfig,\n}\n\nconst Bullet = () => {\n    return (\n        <ComponentTemplate\n            name=\"Bullet\"\n            meta={meta.Bullet}\n            icon=\"bullet\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={defaultProps}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveBullet\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onRangeClick={range => {\n                            logAction({\n                                type: 'click',\n                                label: `[range] ${range.id}: [${range.v0}, ${range.v1}]`,\n                                color: range.color,\n                                data: range,\n                            })\n                        }}\n                        onMeasureClick={measure => {\n                            logAction({\n                                type: 'click',\n                                label: `[measure] ${measure.id}: [${measure.v0}, ${measure.v1}]`,\n                                color: measure.color,\n                                data: measure,\n                            })\n                        }}\n                        onMarkerClick={marker => {\n                            logAction({\n                                type: 'click',\n                                label: `[marker] ${marker.id}: ${marker.value}`,\n                                color: marker.color,\n                                data: marker,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Bullet\n"],"sourceRoot":""}