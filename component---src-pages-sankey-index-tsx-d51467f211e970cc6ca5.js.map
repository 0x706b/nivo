{"version":3,"file":"component---src-pages-sankey-index-tsx-d51467f211e970cc6ca5.js","mappings":"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","sources":["webpack://nivo-website/./src/data/components/sankey/mapper.ts","webpack://nivo-website/./src/data/components/sankey/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/./src/pages/sankey/index.tsx","webpack://nivo-website/../node_modules/lodash/cloneDeep.js"],"sourcesContent":["import { settingsMapper, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper({\n    valueFormat: mapFormat,\n})\n","import { svgDefaultProps, sankeyAlignmentPropKeys } from '@nivo/sankey'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: '{ nodes: object[], links: object[] }',\n        required: true,\n        help: 'Chart data defining nodes and links.',\n        flavors: ['svg', 'api'],\n        description: `\n            Chart data, which must conform to this structure:\n\n            \\`\\`\\`\n            {\n                nodes: {\n                    id: string\n                }[],\n                links: {\n                    source: string, // ref to node id\n                    target: string, // ref to node id\n                    value:  number\n                }[]\n            }\n            \\`\\`\\`\n        `,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | (value: number) => string',\n        required: false,\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        flavors: ['svg', 'api'],\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'layout',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: `Control sankey layout direction.`,\n        defaultValue: svgDefaultProps.layout,\n        flavors: ['svg', 'api'],\n        controlType: 'radio',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'align',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Node alignment method.',\n        description: `\n            Defines node alignment method.\n            Please have a look at the\n            [official d3 documentation](https://github.com/d3/d3-sankey#sankey_nodeAlign)\n            for further information.\n        `,\n        defaultValue: svgDefaultProps.align,\n        flavors: ['svg', 'api'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: sankeyAlignmentPropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'sort',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: 'Node sorting method.',\n        description: `\n            Defines node sorting method. Must be one of:\n\n            - **'auto'** order of nodes within each\n              column is determined automatically by the layout.\n            - **'input'** order is fixed by the input.\n            - **'ascending'** node with lower values on top.\n            - **'descending'** node with higher values on top.\n            - \\`(nodeA, nodeB) => number\\` user defined function.\n\n            Please have a look at the\n            [official d3 documentation](https://github.com/d3/d3-sankey#sankey_nodeSort)\n            for further information.\n        `,\n        defaultValue: svgDefaultProps.sort,\n        flavors: ['svg', 'api'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: ['auto', 'input', 'ascending', 'descending'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        type: 'number',\n        required: true,\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveSankey/>\\`.\n        `,\n        flavors: ['svg', 'api'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1200,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        type: 'number',\n        required: true,\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveSankey/>\\`.\n        `,\n        flavors: ['svg', 'api'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1200,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        group: 'Base',\n        flavors: ['svg', 'api'],\n        controlType: 'margin',\n    },\n    themeProperty(['svg', 'api']),\n    {\n        key: 'colors',\n        group: 'Style',\n        type: 'string | Function | string[]',\n        required: false,\n        help: 'Defines how to compute nodes color.',\n        defaultValue: svgDefaultProps.colors,\n        flavors: ['svg', 'api'],\n        controlType: 'ordinalColors',\n    },\n    {\n        key: 'nodeThickness',\n        group: 'Nodes',\n        type: 'number',\n        required: false,\n        help: 'Node thickness.',\n        defaultValue: svgDefaultProps.nodeThickness,\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 100,\n        },\n    },\n    {\n        key: 'nodeOpacity',\n        group: 'Nodes',\n        help: 'Node opacity (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.nodeOpacity,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'opacity',\n    },\n    {\n        key: 'nodeHoverOpacity',\n        group: 'Nodes',\n        flavors: ['svg'],\n        help: 'Node opacity on hover (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.nodeHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n    },\n    {\n        key: 'nodeHoverOthersOpacity',\n        flavors: ['svg'],\n        help: 'Other nodes opacity on hover (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.nodeHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Nodes',\n    },\n    {\n        key: 'nodeSpacing',\n        group: 'Nodes',\n        help: 'Spacing between nodes at an identical level.',\n        required: false,\n        defaultValue: svgDefaultProps.nodeSpacing,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'nodeInnerPadding',\n        group: 'Nodes',\n        help: 'Node inner padding, distance from link, substracted from nodeThickness.',\n        required: false,\n        defaultValue: svgDefaultProps.nodeInnerPadding,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'nodeBorderWidth',\n        group: 'Nodes',\n        help: 'Node border width.',\n        required: false,\n        defaultValue: svgDefaultProps.nodeBorderWidth,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'nodeBorderColor',\n        group: 'Nodes',\n        description: `\n            how to compute node border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        help: 'Method to compute node border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: svgDefaultProps.nodeBorderColor,\n        flavors: ['svg', 'api'],\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'nodeBorderRadius',\n        group: 'Nodes',\n        help: 'Node border radius.',\n        type: 'number',\n        required: false,\n        defaultValue: svgDefaultProps.nodeBorderRadius,\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 12,\n        },\n    },\n    {\n        key: 'linkOpacity',\n        group: 'Links',\n        help: 'Link opacity (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.linkOpacity,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'opacity',\n    },\n    {\n        key: 'linkHoverOpacity',\n        group: 'Links',\n        flavors: ['svg'],\n        help: 'Link opacity on hover(0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.linkHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n    },\n    {\n        key: 'linkHoverOthersOpacity',\n        group: 'Links',\n        flavors: ['svg'],\n        help: 'Other links opacity on hover (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.linkHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n    },\n    {\n        key: 'linkContract',\n        group: 'Links',\n        help: 'Contract link width.',\n        required: false,\n        defaultValue: svgDefaultProps.linkContract,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'linkBlendMode',\n        flavors: ['svg'],\n        help:\n            'Defines CSS [mix-blend-mode](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode) property for links.',\n        type: 'string',\n        required: false,\n        defaultValue: svgDefaultProps.linkBlendMode,\n        controlType: 'blendMode',\n        group: 'Links',\n    },\n    {\n        key: 'enableLinkGradient',\n        group: 'Links',\n        help: 'Enable/disable gradient from source/target nodes instead of plain color.',\n        type: 'boolean',\n        required: false,\n        defaultValue: svgDefaultProps.enableLinkGradient,\n        flavors: ['svg', 'api'],\n        controlType: 'switch',\n    },\n    {\n        key: 'enableLabels',\n        group: 'Labels',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: svgDefaultProps.enableLabels,\n        flavors: ['svg', 'api'],\n        controlType: 'switch',\n    },\n    {\n        key: 'labelPosition',\n        group: 'Labels',\n        help: 'Label position.',\n        type: 'string',\n        required: false,\n        defaultValue: svgDefaultProps.labelPosition,\n        flavors: ['svg', 'api'],\n        controlType: 'radio',\n        controlOptions: {\n            choices: ['inside', 'outside'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'labelPadding',\n        group: 'Labels',\n        help: 'Label padding from node.',\n        required: false,\n        defaultValue: svgDefaultProps.labelPadding,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'labelTextColor',\n        group: 'Labels',\n        help: 'Method to compute label text color.',\n        description: `\n            how to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: svgDefaultProps.labelTextColor,\n        flavors: ['svg', 'api'],\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'labelOrientation',\n        group: 'Labels',\n        help: 'Label orientation.',\n        type: 'string',\n        required: false,\n        defaultValue: svgDefaultProps.labelOrientation,\n        flavors: ['svg', 'api'],\n        controlType: 'radio',\n        controlOptions: {\n            choices: ['horizontal', 'vertical'].map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: svgDefaultProps.isInteractive,\n        controlType: 'switch',\n    },\n    {\n        key: 'nodeTooltip',\n        flavors: ['svg'],\n        help: `Tooltip custom component for nodes.`,\n        type: 'FunctionComponent<{ node: SankeyNodeDatum }>',\n        required: false,\n        group: 'Interactivity',\n        description: `\n            Allows complete node tooltip customisation, it must return\n            a valid HTML element and will receive the node as a property.\n                        \n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'linkTooltip',\n        flavors: ['svg'],\n        help: `Tooltip custom component for links.`,\n        type: 'FunctionComponent<{ link: SankeyLinkDatum }>',\n        required: false,\n        group: 'Interactivity',\n        description: `\n            Allows complete link tooltip customisation, it must return\n            a valid HTML element and will receive the link as a property.\n                        \n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onClick handler, it receives target node or link data and mouse event.',\n        type: '(target: SankeyNodeDatum | SankeyLinkDatum, event) => void',\n        required: false,\n    },\n    ...motionProperties(['svg'], svgDefaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping: any, { exclude = [] } = {}) => (\n    settings: any,\n    options: any = {}\n) => {\n    const overrides: any = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","import React from 'react'\nimport omit from 'lodash/omit'\nimport { generateSankeyData } from '@nivo/generators'\nimport {\n    ResponsiveSankey,\n    svgDefaultProps,\n    SankeySvgProps,\n    DefaultNode,\n    DefaultLink,\n} from '@nivo/sankey'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/sankey/meta.yml'\nimport mapper from '../../data/components/sankey/mapper'\nimport { groups } from '../../data/components/sankey/props'\n\ntype MappedSankeyProps = Omit<SankeySvgProps<DefaultNode, DefaultLink>, 'data' | 'width' | 'height'>\ntype UnmappedSankeyProps = Omit<MappedSankeyProps, 'valueFormat'> & {\n    valueFormat: {\n        format: string\n        enabled: boolean\n    }\n}\n\nconst initialProperties: UnmappedSankeyProps = {\n    margin: {\n        top: 40,\n        right: 160,\n        bottom: 40,\n        left: 50,\n    },\n\n    valueFormat: { format: '', enabled: false },\n\n    layout: 'horizontal' as const,\n    align: 'justify' as const,\n    sort: 'auto' as const,\n    colors: { scheme: 'category10' as const },\n\n    nodeOpacity: 1,\n    nodeHoverOpacity: 1,\n    nodeHoverOthersOpacity: 0.35,\n    nodeThickness: 18,\n    nodeInnerPadding: 0,\n    nodeSpacing: 24,\n    nodeBorderWidth: 0,\n    nodeBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.8]],\n    },\n    nodeBorderRadius: 3,\n\n    linkOpacity: 0.5,\n    linkHoverOpacity: 0.6,\n    linkHoverOthersOpacity: 0.1,\n    linkContract: 3,\n    linkBlendMode: 'multiply' as const,\n    enableLinkGradient: true,\n\n    enableLabels: true,\n    labelPosition: 'outside' as const,\n    labelOrientation: 'vertical' as const,\n    labelPadding: 16,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    animate: svgDefaultProps.animate,\n    motionConfig: svgDefaultProps.motionConfig,\n\n    isInteractive: svgDefaultProps.isInteractive,\n\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            translateX: 130,\n            itemWidth: 100,\n            itemHeight: 14,\n            itemDirection: 'right-to-left',\n            itemsSpacing: 2,\n            itemTextColor: '#999',\n            symbolSize: 14,\n            onClick: (d: any) => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst generateData = () => generateSankeyData({ nodeCount: 6, maxIterations: 8 })\n\nconst Sankey = () => (\n    <ComponentTemplate<\n        UnmappedSankeyProps,\n        MappedSankeyProps,\n        SankeySvgProps<DefaultNode, DefaultLink>['data']\n    >\n        name=\"Sankey\"\n        meta={meta.Sankey}\n        icon=\"sankey\"\n        flavors={meta.flavors}\n        currentFlavor=\"svg\"\n        properties={groups}\n        initialProperties={initialProperties}\n        defaultProperties={svgDefaultProps}\n        propertiesMapper={mapper}\n        generateData={generateData}\n    >\n        {(properties, data, theme, logAction) => {\n            return (\n                <ResponsiveSankey\n                    data={data}\n                    {...properties}\n                    theme={theme}\n                    onClick={node => {\n                        let label\n                        if ('id' in node) {\n                            label = `[node] ${node.id}: ${node.value}`\n                        } else {\n                            label = `[link] ${node.source.id} > ${node.target.id}: ${node.value}`\n                        }\n\n                        logAction({\n                            type: 'click',\n                            label,\n                            data: omit(node, [\n                                'sourceLinks',\n                                'targetLinks',\n                                'source.sourceLinks',\n                                'source.targetLinks',\n                                'target.sourceLinks',\n                                'target.targetLinks',\n                            ]),\n                        })\n                    }}\n                />\n            )\n        }}\n    </ComponentTemplate>\n)\n\nexport default Sankey\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n"],"names":["settingsMapper","valueFormat","mapFormat","props","key","group","type","required","help","flavors","description","controlType","defaultValue","svgDefaultProps","controlOptions","choices","label","value","sankeyAlignmentPropKeys","map","enableControlForFlavors","unit","min","max","step","themeProperty","motionProperties","groups","groupProperties","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","format","enabled","undefined","initialProperties","margin","top","right","bottom","left","layout","align","sort","colors","scheme","nodeOpacity","nodeHoverOpacity","nodeHoverOthersOpacity","nodeThickness","nodeInnerPadding","nodeSpacing","nodeBorderWidth","nodeBorderColor","from","modifiers","nodeBorderRadius","linkOpacity","linkHoverOpacity","linkHoverOthersOpacity","linkContract","linkBlendMode","enableLinkGradient","enableLabels","labelPosition","labelOrientation","labelPadding","labelTextColor","animate","motionConfig","isInteractive","legends","anchor","direction","translateX","itemWidth","itemHeight","itemDirection","itemsSpacing","itemTextColor","symbolSize","onClick","d","alert","JSON","stringify","effects","on","style","generateData","generateSankeyData","nodeCount","maxIterations","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","data","theme","logAction","node","id","source","target","baseClone","module","exports","CLONE_DEEP_FLAG"],"sourceRoot":""}