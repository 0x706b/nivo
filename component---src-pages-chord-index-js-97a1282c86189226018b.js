(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{BcZh:function(e,t,r){"use strict";r.r(t);var o=r("mXGw"),n=r.n(o),a=r("6zZa"),i=r("78gg"),l=r("ZS2m"),c=r("9kA9"),s=r.n(c),u=r("TcQY"),p=r("Q3d+"),d={margin:{top:60,right:60,bottom:90,left:60},valueFormat:".2f",padAngle:.02,innerRadiusRatio:.96,innerRadiusOffset:.02,arcOpacity:1,arcBorderWidth:1,arcBorderColor:{from:"color",modifiers:[["darker",.4]]},ribbonOpacity:.5,ribbonBorderWidth:1,ribbonBorderColor:{from:"color",modifiers:[["darker",.4]]},enableLabel:!0,label:"id",labelOffset:12,labelRotation:-90,labelTextColor:{from:"color",modifiers:[["darker",1]]},colors:{scheme:"nivo"},isInteractive:!0,arcHoverOpacity:1,arcHoverOthersOpacity:.25,ribbonHoverOpacity:.75,ribbonHoverOthersOpacity:.25,animate:!0,motionStiffness:90,motionDamping:7,legends:[{anchor:"bottom",direction:"row",justify:!1,translateX:0,translateY:70,itemWidth:80,itemHeight:14,itemsSpacing:0,itemTextColor:"#999",itemDirection:"left-to-right",symbolSize:12,symbolShape:"circle",onClick:function(e){alert(JSON.stringify(e,null,"    "))},effects:[{on:"hover",style:{itemTextColor:"#000"}}]}]},b=function(){return Object(a.b)({size:5})};t.default=function(){return n.a.createElement(l.a,{name:"Chord",meta:s.a.Chord,icon:"chord",flavors:s.a.flavors,currentFlavor:"svg",properties:p.a,initialProperties:d,propertiesMapper:u.a,codePropertiesMapper:function(e,t){return Object.assign({keys:t.keys},e)},generateData:b,dataKey:"matrix",getTabData:function(e){return e.matrix}},(function(e,t,r,o){return n.a.createElement(i.c,Object.assign({matrix:t.matrix,keys:t.keys},e,{theme:r,onArcClick:function(e){o({type:"click",label:"[arc] "+e.label,color:e.color,data:e})},onRibbonClick:function(e){o({type:"click",label:"[ribbon] "+e.source.label+" â€”> "+e.target.label,color:e.source.color,data:e})}}))}))}},"Q3d+":function(e,t,r){"use strict";r.d(t,"a",(function(){return l}));var o=r("Eo5u"),n=r("78gg"),a=r("RQLE"),i=[{key:"keys",group:"Base",help:"Keys used to identify each cell in the matrix.",description:"\n            Keys used to identify each cell in the matrix,\n            for example given this matrix:\n            ```\n            [ [123, 37,  99 ],\n              [75,  103, 82 ],\n              [37,  65,  109] ]\n            ```\n            and those keys:\n            ```\n            ['John', 'Jane', 'Raoul']\n            ```\n            it will result in the following mapping:\n            ```\n            [ [null,    'John', 'Jane',  'Raoul']\n              ['John',   123,    37,      99    ],\n              ['Jane',   75,     103,     82    ],\n              ['Raoul',  37,     65,      109   ] ]\n            ```\n        ",required:!0,type:"string[]"},{key:"matrix",group:"Base",help:"The matrix used to compute the chord diagram.",description:"\n            The matrix used to compute the chord diagram,\n            it must be a square matrix, meaning each row length\n            must equal the row count.\n        ",required:!0,type:"Array<number[]>"},{key:"valueFormat",group:"Base",type:"string | Function",required:!1,help:"Optional value formatter."},{key:"width",enableControlForFlavors:["api"],help:"Chart width.",description:"\n            not required if using\n            `<ResponsiveChord/>`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        ",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"height",enableControlForFlavors:["api"],help:"Chart height.",description:"\n            not required if using\n            `<ResponsiveChord/>`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        ",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"pixelRatio",flavors:["canvas"],help:"Adjust pixel ratio, useful for HiDPI screens.",required:!1,defaultValue:"Depends on device",type:"number",controlType:"range",group:"Base",controlOptions:{min:1,max:2}},{key:"margin",help:"Chart margin.",type:"object",required:!1,controlType:"margin",group:"Base"},{key:"padAngle",help:"Padding angle.",required:!1,defaultValue:n.b.padAngle,type:"number",controlType:"range",group:"Base",controlOptions:{min:0,max:1,step:.01}},{key:"innerRadiusRatio",help:"Inner radius ratio.",required:!1,defaultValue:n.b.innerRadiusRatio,type:"number",controlType:"range",group:"Base",controlOptions:{min:0,max:1,step:.01}},{key:"innerRadiusOffset",help:"Inner radius offset (minus innerRadiusRatio).",required:!1,defaultValue:n.b.innerRadiusOffset,type:"number",controlType:"range",group:"Base",controlOptions:{min:0,max:1,step:.01}},a.f,{key:"colors",help:"Defines how to compute arc/ribbon color.",type:"string | Function | string[]",required:!1,defaultValue:n.b.colors,controlType:"ordinalColors",group:"Style"},{key:"arcOpacity",help:"Arcs opacity.",required:!1,defaultValue:n.b.arcOpacity,type:"number",controlType:"opacity",group:"Style"},{key:"arcBorderWidth",help:"Arcs border width.",required:!1,defaultValue:n.b.arcBorderWidth,type:"number",controlType:"lineWidth",group:"Style"},{key:"arcBorderColor",help:"Arcs border color.",required:!1,defaultValue:n.b.arcBorderColor,type:"string | object | Function",controlType:"inheritedColor",group:"Style"},{key:"ribbonOpacity",help:"Ribbons opacity.",required:!1,defaultValue:n.b.ribbonOpacity,type:"number",controlType:"opacity",group:"Style"},{key:"ribbonBorderWidth",help:"Ribbons border width.",required:!1,defaultValue:n.b.ribbonBorderWidth,type:"number",controlType:"lineWidth",group:"Style"},{key:"ribbonBorderColor",help:"Ribbons border color.",required:!1,defaultValue:n.b.ribbonBorderColor,type:"string | object | Function",controlType:"inheritedColor",group:"Style"},{key:"enableLabel",help:"Enable/disable labels.",type:"boolean",required:!1,defaultValue:n.b.enableLabel,controlType:"switch",group:"Labels"},{key:"label",help:"Defines how to get label text, can be a string (used to access current arc data property) or a function which will receive the actual arc data.",type:"string | Function",required:!1,defaultValue:n.b.label,controlType:"choices",group:"Labels",controlOptions:{choices:["id","value","d => `${d.id} [${d.value}]`"].map((function(e){return{label:e,value:e}}))}},{key:"labelOffset",help:"Label offset from arc.",required:!1,defaultValue:n.b.labelOffset,type:"number",controlType:"range",group:"Labels",controlOptions:{unit:"px",min:-80,max:80}},{key:"labelRotation",help:"Label rotation.",required:!1,defaultValue:n.b.labelRotation,type:"number",controlType:"angle",group:"Labels",controlOptions:{min:-180,max:180,step:5}},{key:"labelTextColor",description:"\n            How to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        ",help:"Method to compute label text color.",type:"string | object | Function",required:!1,defaultValue:n.b.labelTextColor,controlType:"inheritedColor",group:"Labels"},{key:"layers",group:"Customization",help:"Defines the order of layers and add custom layers.",description:"\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n            \n            The layer function which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the `Chord` component.\n\n            When using the canvas implementation, the function\n            will receive the canvas 2d context as first argument\n            and the chart's context and computed data as second.\n\n            Please make sure to use `context.save()` and\n            `context.restore()` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n        ",required:!1,type:"Array<string | Function>",defaultValue:n.b.layers},{key:"isInteractive",flavors:["svg","canvas"],help:"Enable/disable interactivity.",type:"boolean",required:!1,defaultValue:n.b.isInteractive,controlType:"switch",group:"Interactivity"},{key:"arcHoverOpacity",flavors:["svg","canvas"],help:"Arc opacity when hover (0~1).",required:!1,defaultValue:n.b.arcHoverOpacity,type:"number",controlType:"opacity",group:"Interactivity"},{key:"arcHoverOthersOpacity",flavors:["svg","canvas"],help:"Arc opacity when not hover (0~1).",required:!1,defaultValue:n.b.arcHoverOthersOpacity,type:"number",controlType:"opacity",group:"Interactivity"},{key:"ribbonHoverOpacity",flavors:["svg","canvas"],help:"Ribbon opacity when hover (0~1).",required:!1,defaultValue:n.b.ribbonHoverOpacity,type:"number",controlType:"opacity",group:"Interactivity"},{key:"ribbonHoverOthersOpacity",flavors:["svg","canvas"],help:"Ribbon opacity when not hover (0~1).",required:!1,defaultValue:n.b.ribbonHoverOthersOpacity,type:"number",controlType:"opacity",group:"Interactivity"},{key:"onArcMouseEnter",flavors:["svg","canvas"],group:"Interactivity",help:"onMouseEnter handler for arcs.",type:"(arc, event) => void",required:!1},{key:"onArcMouseMove",flavors:["svg","canvas"],group:"Interactivity",help:"onMouseMove handler for arcs.",type:"(arc, event) => void",required:!1},{key:"onArcMouseLeave",flavors:["svg","canvas"],group:"Interactivity",help:"onMouseLeave handler for arcs.",type:"(arc, event) => void",required:!1},{key:"onArcClick",flavors:["svg","canvas"],group:"Interactivity",help:"onClick handler for arcs.",type:"(arc, event) => void",required:!1},{key:"arcTooltip",flavors:["svg","canvas"],group:"Interactivity",type:"Function",required:!1,help:"Custom arc tooltip component.",description:"\n            A function allowing complete arc tooltip customisation,\n            it must return a valid HTML\n            element and will receive the arcs's data.\n        "},{key:"onRibbonMouseEnter",flavors:["svg"],group:"Interactivity",help:"onMouseEnter handler for ribbons.",type:"(ribbon, event) => void",required:!1},{key:"onRibbonMouseMove",flavors:["svg"],group:"Interactivity",help:"onMouseMove handler for ribbons.",type:"(ribbon, event) => void",required:!1},{key:"onRibbonMouseLeave",flavors:["svg"],group:"Interactivity",help:"onMouseLeave handler for ribbons.",type:"(ribbon, event) => void",required:!1},{key:"onRibbonClick",flavors:["svg"],group:"Interactivity",help:"onClick handler for ribbons.",type:"(ribbon, event) => void",required:!1},{key:"ribbonTooltip",flavors:["svg"],group:"Interactivity",type:"Function",required:!1,help:"Custom ribbon tooltip component.",description:"\n            A function allowing complete ribbon tooltip customisation,\n            it must return a valid HTML\n            element and will receive the ribbon's data.\n        "},{key:"legends",flavors:["svg","canvas"],type:"object[]",help:"Optional chart's legends.",group:"Legends",controlType:"array",controlOptions:{props:Object(a.c)(["svg","canvas"]),shouldCreate:!0,addLabel:"add legend",shouldRemove:!0,getItemTitle:function(e,t){return"legend["+e+"]: "+t.anchor+", "+t.direction},defaults:{dataFrom:"keys",anchor:"top-left",direction:"column",justify:!1,translateX:0,translateY:0,itemWidth:100,itemHeight:20,itemsSpacing:0,symbolSize:20,itemDirection:"left-to-right",onClick:function(e){alert(JSON.stringify(e,null,"    "))}}}}].concat(Object(o.a)(Object(a.e)(["svg"],n.b))),l=Object(a.d)(i)},TcQY:function(e,t,r){"use strict";var o=r("nLLr");t.a=Object(o.c)({label:function(e){return"d => `${d.id} [${d.value}]`"===e?function(e){return e.id+" ["+e.value+"]"}:e}})},nLLr:function(e,t,r){"use strict";r.d(t,"c",(function(){return l})),r.d(t,"a",(function(){return c})),r.d(t,"b",(function(){return s}));var o=r("PWxN"),n=r.n(o),a=r("KXzt"),i=r.n(a),l=function(e,t){var r=(void 0===t?{}:t).exclude,o=void 0===r?[]:r;return function(t,r){void 0===r&&(r={});var a={};return Object.keys(t).forEach((function(o){e[o]&&(a[o]=e[o](t[o],t,r))})),Object.assign({},n()(t,o),a)}},c=function(e){return function(t,r){return r["axis"+i()(e)].enable?n()(t,["enable"]):null}},s=function(e){var t=e.format;return!0===e.enabled?t:void 0}}}]);
//# sourceMappingURL=component---src-pages-chord-index-js-97a1282c86189226018b.js.map