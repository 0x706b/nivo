{"version":3,"sources":["webpack:///./src/data/components/treemap/mapper.js","webpack:///./src/data/components/treemap/generator.js","webpack:///./src/data/components/treemap/props.js","webpack:///./src/pages/treemap/api.js","webpack:///./src/components/components/api-client/ApiPreview.js","webpack:///./src/components/components/api-client/ApiTabs.js","webpack:///./src/components/components/api-client/ApiSubmit.js","webpack:///./src/components/components/api-client/ApiResponse.js","webpack:///./src/components/components/api-client/ApiClient.js"],"names":["settingsMapper","label","value","node","id","formattedValue","parentLabel","pathComponents","join","valueFormat","mapFormat","generateLightDataSet","root","generateLibTree","generateHeavyDataSet","children","range","map","i","random","nodeCount","defaults","TreeMapDefaultProps","props","key","group","help","type","required","defaultValue","identity","controlType","description","controlOptions","choices","leavesOnly","innerPadding","unit","min","max","outerPadding","enableControlForFlavors","flavors","colors","nodeOpacity","borderWidth","borderColor","defsProperties","enableLabel","prop","orientLabel","enableParentLabel","parentLabelSize","parentLabelPosition","parentLabelPadding","isInteractive","motionProperties","groups","groupProperties","data","TreeMapApi","title","keywords","meta","TreeMap","tags","componentName","chartClass","apiPath","controlGroups","propsMapper","mapper","defaultProps","JSON","stringify","format","enabled","tile","margin","top","right","bottom","left","labelSkipSize","labelTextColor","from","modifiers","parentLabelTextColor","scheme","colorBy","Link","styled","a","Image","img","EmptyContainer","div","theme","textLight","ApiPreview","responseStatus","chartUrl","href","target","rel","src","alt","tabs","ApiTabs","body","isLoading","useTheme","useState","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","tab","isCurrent","icon","iconColors","NavItem","onClick","onMouseEnter","onMouseLeave","Icon","Content","CodeBlock","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","tablet","mobile","nav","background","span","text","LoaderContainer","loaderBarAnimation","keyframes","LoaderBar","accent","index","Loader","Button","ApiSubmit","render","this","loading","Component","Container","Header","borderLight","ResponseJson","pre","ApiResponse","response","responseContent","ApiClient","handleSettingsUpdate","settings","setState","handleDataUpdate","e","dataProperty","state","Object","assign","handleSubmit","fetch","config","nivoApiUrl","method","headers","Accept","then","res","status","json","catch","err","console","error","component","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","ComponentFlavorSelector","current","ComponentDescription","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","onChange","cardAltBackground"],"mappings":"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","file":"component---src-pages-treemap-api-js-31947ee42e74274b8855.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper({\n    label: value => {\n        if (value === `node => \\`\\${node.id} (\\${node.formattedValue})\\``)\n            return node => `${node.id} (${node.formattedValue})`\n        return value\n    },\n    parentLabel: value => {\n        if (value === `node => node.pathComponents.join(' / ')`)\n            return node => node.pathComponents.join(' / ')\n        return value\n    },\n    valueFormat: mapFormat,\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { generateLibTree } from '@nivo/generators'\nimport range from 'lodash/range'\nimport random from 'lodash/random'\n\nexport const generateLightDataSet = () => ({ root: generateLibTree() })\n\nconst HEAVY_NODE_COUNT = 600\n\nexport const generateHeavyDataSet = () => {\n    const children = range(HEAVY_NODE_COUNT).map(i => ({\n        id: `node.${i}`,\n        value: random(10, 100000),\n    }))\n\n    return {\n        root: {\n            id: 'root',\n            children,\n        },\n        nodeCount: HEAVY_NODE_COUNT,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { TreeMapDefaultProps } from '@nivo/treemap'\nimport { motionProperties, defsProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst defaults = TreeMapDefaultProps\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'The hierarchical data object.',\n        type: 'object',\n        required: true,\n    },\n    {\n        key: 'identity',\n        group: 'Base',\n        help: 'The key or function to use to retrieve nodes identity.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.identity,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        help: 'The key or function to use to retrieve nodes value.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: 'value',\n    },\n    {\n        key: 'valueFormat',\n        help: `\n            Value format supporting d3-format notation, this formatted value\n            will then be used for labels and tooltips.\n        `,\n        type: 'string | Function',\n        required: false,\n        controlType: 'valueFormat',\n        group: 'Base',\n    },\n    {\n        key: 'tile',\n        group: 'Base',\n        help: 'Strategy used to compute nodes.',\n        description: `\n            Strategy used to compute nodes, see\n            [official d3 documentation](https://github.com/mbostock/d3/wiki/Treemap-Layout#mode).\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: 'squarify',\n        controlType: 'choices',\n        controlOptions: {\n            choices: [\n                { label: 'binary', value: 'binary' },\n                { label: 'squarify', value: 'squarify' },\n                { label: 'slice', value: 'slice' },\n                { label: 'dice', value: 'dice' },\n                { label: 'sliceDice', value: 'sliceDice' },\n                {\n                    label: 'resquarify',\n                    value: 'resquarify',\n                },\n            ],\n        },\n    },\n    {\n        key: 'leavesOnly',\n        help: 'Only render leaf nodes (no parent).',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.leavesOnly,\n        controlType: 'switch',\n        group: 'Base',\n    },\n    {\n        key: 'innerPadding',\n        help: 'Padding between parent and child node.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.innerPadding,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'outerPadding',\n        help: 'Padding between parent and child node.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.outerPadding,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'colors',\n        help: 'Defines how to compute node color.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'nodeOpacity',\n        help: 'Node opacity (0~1).',\n        required: false,\n        defaultValue: defaults.nodeOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Control node border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'enableLabel',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        help: 'Label accessor.',\n        description:\n            'Defines how to get label text, can be a string (used to access current node property) or a function which will receive the actual node and must return the desired label.',\n        type: 'string | Function',\n        required: false,\n        controlType: 'choices',\n        group: 'Labels',\n        controlOptions: {\n            choices: [\n                'formattedValue',\n                'id',\n                `node => \\`\\${node.id} (\\${node.formattedValue})\\``,\n            ].map(prop => ({\n                label: prop,\n                value: prop,\n            })),\n        },\n    },\n    {\n        key: 'labelSkipSize',\n        help:\n            'Skip label rendering if node minimal side length is lower than given value, 0 to disable.',\n        type: 'number',\n        required: false,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 100,\n        },\n    },\n    {\n        key: 'orientLabel',\n        help: 'Orient labels according to max node width/height.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.orientLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'labelTextColor',\n        help: 'Method to compute label text color.',\n        type: 'string | object | Function',\n        required: false,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'enableParentLabel',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableParentLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'parentLabel',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Parent label accessor.',\n        description:\n            'Defines how to get parent label text, can be a string (used to access current node property) or a function which will receive the actual node and must return the desired label.',\n        type: 'string | Function',\n        required: false,\n        controlType: 'choices',\n        group: 'Labels',\n        controlOptions: {\n            choices: ['id', 'formattedValue', `node => node.pathComponents.join(' / ')`].map(\n                prop => ({\n                    label: prop,\n                    value: prop,\n                })\n            ),\n        },\n    },\n    {\n        key: 'parentLabelSize',\n        flavors: ['svg', 'html', 'api'],\n        help: `Parent label size.`,\n        required: false,\n        defaultValue: defaults.parentLabelSize,\n        type: `number`,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            min: 10,\n            max: 40,\n        },\n    },\n    {\n        key: 'parentLabelPosition',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Parent label position.',\n        type: `'top' | 'right' | 'bottom' | 'left'`,\n        required: false,\n        controlType: 'choices',\n        group: 'Labels',\n        defaultValue: defaults.parentLabelPosition,\n        controlOptions: {\n            choices: ['top', 'right', 'bottom', 'left'].map(prop => ({\n                label: prop,\n                value: prop,\n            })),\n        },\n    },\n    {\n        key: 'parentLabelPadding',\n        flavors: ['svg', 'html', 'api'],\n        help: `Parent label padding.`,\n        required: false,\n        defaultValue: defaults.parentLabelPadding,\n        type: `number`,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'parentLabelTextColor',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Method to compute parent label text color.',\n        type: 'string | object | Function',\n        required: false,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'html', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseEnter handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseMove handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseLeave handler.',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onClick handler.',\n        required: false,\n    },\n    ...motionProperties(['svg', 'html', 'canvas'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { TreeMapDefaultProps } from '@nivo/treemap'\nimport SEO from '../../components/seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/treemap/props'\nimport mapper from '../../data/components/treemap/mapper'\nimport { generateLightDataSet } from '../../data/components/treemap/generator'\nimport meta from '../../data/components/treemap/meta.yml'\n\nconst data = generateLightDataSet()\n\nconst TreeMapApi = () => {\n    return (\n        <>\n            <SEO title=\"TreeMap HTTP API\" keywords={[...meta.TreeMap.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"TreeMap\"\n                chartClass=\"treemap\"\n                apiPath=\"/charts/treemap\"\n                flavors={meta.flavors}\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    root: JSON.stringify(data.root, null, '  '),\n                    identity: 'name',\n                    value: 'loc',\n                    valueFormat: { format: '.02s', enabled: true },\n                    tile: TreeMapDefaultProps.tile,\n                    leavesOnly: TreeMapDefaultProps.leavesOnly,\n                    innerPadding: TreeMapDefaultProps.innerPadding,\n                    outerPadding: TreeMapDefaultProps.outerPadding,\n\n                    margin: {\n                        top: 10,\n                        right: 10,\n                        bottom: 10,\n                        left: 10,\n                    },\n\n                    enableLabel: TreeMapDefaultProps.enableLabel,\n                    label: TreeMapDefaultProps.label,\n                    labelSkipSize: 12,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1.2]],\n                    },\n                    orientLabel: TreeMapDefaultProps.orientLabel,\n                    enableParentLabel: TreeMapDefaultProps.enableParentLabel,\n                    parentLabel: TreeMapDefaultProps.parentLabel,\n                    parentLabelSize: TreeMapDefaultProps.parentLabelSize,\n                    parentLabelPosition: TreeMapDefaultProps.parentLabelPosition,\n                    parentLabelPadding: TreeMapDefaultProps.parentLabelPadding,\n                    parentLabelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 2]],\n                    },\n\n                    colors: { scheme: 'nivo' },\n                    colorBy: 'path.1',\n                    nodeOpacity: 0.5,\n                    borderWidth: 0,\n                    borderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.3]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default TreeMapApi\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ApiPreview = ({ responseStatus, chartUrl }) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n\n    return <div className=\"api-client_preview\">{content}</div>\n}\n\nApiPreview.propTypes = {\n    responseStatus: PropTypes.number,\n    chartUrl: PropTypes.string,\n}\n\nexport default ApiPreview\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport ApiPreview from './ApiPreview'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\nimport CodeBlock from '../../CodeBlock'\n\nconst tabs = ['preview', 'body', 'data']\n\nconst ApiTabs = ({ chartClass, data, body, isLoading, responseStatus, chartUrl }) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState('preview')\n    const [hoverTab, setHoverTab] = useState(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview\n                        isLoading={isLoading}\n                        responseStatus={responseStatus}\n                        chartUrl={chartUrl}\n                    />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nApiTabs.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n}\n\nexport default ApiTabs\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.6);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 60%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst LoaderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n\nclass ApiSubmit extends Component {\n    render() {\n        const { loading, onClick } = this.props\n\n        return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n    }\n}\n\nApiSubmit.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nApiSubmit.defaultProps = {}\n\nexport default ApiSubmit\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n\nclass ApiResponse extends Component {\n    render() {\n        const { responseStatus, response } = this.props\n\n        let responseContent = 'no response available'\n        if (response) {\n            responseContent = JSON.stringify(response, null, '  ')\n        }\n\n        return (\n            <Container>\n                <Header>\n                    Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}\n                </Header>\n                <ResponseJson>{responseContent}</ResponseJson>\n            </Container>\n        )\n    }\n}\n\nApiResponse.propTypes = {}\n\nApiResponse.defaultProps = {}\n\nexport default ApiResponse\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport ComponentPage from '../ComponentPage'\nimport ComponentHeader from '../ComponentHeader'\nimport ComponentFlavorSelector from '../ComponentFlavorSelector'\nimport ComponentDescription from '../ComponentDescription'\nimport ComponentSettings from '../ComponentSettings'\nimport ApiTabs from './ApiTabs'\nimport ApiSubmit from './ApiSubmit'\nimport ApiResponse from './ApiResponse'\nimport config from '../../../data/config'\n\nconst description = component => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\nexport default class ApiClient extends Component {\n    static propTypes = {\n        componentName: PropTypes.string.isRequired,\n        chartClass: PropTypes.string.isRequired,\n        apiPath: PropTypes.string.isRequired,\n        dataProperty: PropTypes.string.isRequired,\n        propsMapper: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        dataProperty: 'data',\n        propsMapper: props => props,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            props: props.defaultProps,\n            loading: false,\n            responseStatus: null,\n            response: null,\n        }\n    }\n\n    handleSettingsUpdate = settings => {\n        this.setState({ props: settings })\n    }\n\n    handleDataUpdate = e => {\n        const { dataProperty } = this.props\n        const { props } = this.state\n\n        this.setState({\n            props: Object.assign({}, props, {\n                [dataProperty]: e.target.value,\n            }),\n        })\n    }\n\n    handleSubmit = () => {\n        const { apiPath, propsMapper } = this.props\n        const { props } = this.state\n\n        this.setState({\n            loading: true,\n        })\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    responseStatus: res.status,\n                })\n\n                return res.json()\n            })\n            .then(res => {\n                this.setState({ response: res })\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    render() {\n        const {\n            componentName,\n            chartClass,\n            apiPath,\n            controlGroups,\n            dataProperty,\n            propsMapper,\n            flavors,\n        } = this.props\n        const { props, loading, responseStatus, response } = this.state\n\n        const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n        return (\n            <Layout>\n                <ComponentPage>\n                    <ComponentHeader\n                        chartClass={`${componentName} HTTP API`}\n                        tags={[`POST ${apiPath}`]}\n                    />\n                    {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                    <ComponentDescription description={description(componentName, apiPath)} />\n                    <ApiTabs\n                        chartClass={chartClass}\n                        data={props[dataProperty]}\n                        body={propsMapper(props)}\n                        isLoading={loading}\n                        responseStatus={responseStatus}\n                        chartUrl={response ? response.url : null}\n                    />\n                    <ControlPanel>\n                        <SubmitWrapper>\n                            <ApiSubmit loading={loading} onClick={this.handleSubmit} />\n                        </SubmitWrapper>\n                        <ApiResponse responseStatus={responseStatus} response={response} />\n                    </ControlPanel>\n                    <ComponentSettings\n                        component={componentName}\n                        settings={props}\n                        flavors={flavorKeys}\n                        currentFlavor=\"api\"\n                        groups={controlGroups}\n                        onChange={this.handleSettingsUpdate}\n                    />\n                </ComponentPage>\n            </Layout>\n        )\n    }\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.6);\n    width: var(--partialWidth);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 60%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n"],"sourceRoot":""}