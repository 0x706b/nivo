{"version":3,"file":"217e85b858a6e81dd8e85681457ed0a663cbfa2e-80f0c91ea12619d0aaff.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/../node_modules/d3-time/src/month.js","webpack://nivo-website/../node_modules/d3-time/src/week.js","webpack://nivo-website/../node_modules/d3-time/src/year.js","webpack://nivo-website/./src/data/components/calendar/mapper.tsx","webpack://nivo-website/./src/data/components/calendar/props.ts","webpack://nivo-website/../src/svg/symbols/SymbolTriangle.tsx","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/svg/LegendSvgItem.tsx","webpack://nivo-website/../src/svg/symbols/SymbolCircle.tsx","webpack://nivo-website/../src/svg/symbols/SymbolDiamond.tsx","webpack://nivo-website/../src/svg/symbols/SymbolSquare.tsx","webpack://nivo-website/../src/svg/LegendSvg.tsx","webpack://nivo-website/../src/svg/BoxLegendSvg.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../node_modules/lodash/_baseIsDate.js","webpack://nivo-website/../node_modules/lodash/isDate.js"],"sourcesContent":["export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import interval from \"./interval.js\";\nvar month = interval(function (date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function (start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function (date) {\n  return date.getMonth();\n});\nexport default month;\nexport var months = month.range;","import interval from \"./interval.js\";\nimport { durationMinute, durationWeek } from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function (date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;","import interval from \"./interval.js\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","import React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    background: #333;\n    padding: 10px;\n    border-radius: 4px;\n    grid-template-columns: 40px 1fr;\n    grid-column-gap: 12px;\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\n\nconst CustomTooltip = day => {\n    return (\n        <TooltipWrapper style={{ color: day.color }}>\n            <TooltipKey>day</TooltipKey>\n            <span>{day.day}</span>\n            <TooltipKey>value</TooltipKey>\n            <span>{day.value}</span>\n            <TooltipKey>x</TooltipKey>\n            <span>{day.x}</span>\n            <TooltipKey>y</TooltipKey>\n            <span>{day.y}</span>\n            <TooltipKey>size</TooltipKey>\n            <span>{day.size}</span>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n    },\n    {\n        exclude: ['custom tooltip example'],\n    }\n)\n","import { calendarDefaultProps as defaults } from '@nivo/calendar'\nimport { themeProperty, groupProperties } from '../../../lib/componentProperties'\nimport { chartDimensions, isInteractive } from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg', 'canvas', 'api']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                day:   string, // format must be YYYY-MM-DD\n                value: number\n            }>\n            \\`\\`\\`\n            You can also add arbitrary data to this structure\n            to be used in tooltips or event handlers.\n        `,\n        type: 'object[]',\n        required: true,\n        flavors: allFlavors,\n    },\n    {\n        key: 'from',\n        group: 'Base',\n        help: 'start date',\n        type: 'string | Date',\n        required: true,\n        flavors: allFlavors,\n    },\n    {\n        key: 'to',\n        group: 'Base',\n        help: 'end date',\n        type: 'string | Date',\n        required: true,\n        flavors: allFlavors,\n    },\n    ...chartDimensions(allFlavors),\n    {\n        key: 'direction',\n        help: 'defines calendar layout direction.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.direction,\n        flavors: ['svg', 'canvas', 'api'],\n        group: 'Base',\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'align',\n        help: 'defines how calendar should be aligned inside chart container.',\n        type: 'string',\n        required: false,\n        flavors: ['svg', 'canvas', 'api'],\n        defaultValue: defaults.align,\n        group: 'Base',\n        control: {\n            type: 'boxAnchor',\n        },\n    },\n    {\n        key: 'minValue',\n        help: 'Minimum value.',\n        description: `\n            Minimum value. If 'auto', will pick the lowest value\n            in the provided data set.\n            Should be overriden if your data set does not contain\n            desired lower bound value.\n        `,\n        required: false,\n        flavors: ['svg', 'canvas', 'api'],\n        defaultValue: defaults.minValue,\n        type: `number | 'auto'`,\n        group: 'Base',\n        control: {\n            type: 'switchableRange',\n            disabledValue: 'auto',\n            defaultValue: 0,\n            min: -300,\n            max: 300,\n        },\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value. If 'auto', will pick the highest value\n            in the provided data set.\n            Should be overriden if your data set does not contain\n            desired higher bound value.\n        `,\n        required: false,\n        flavors: ['svg', 'canvas', 'api'],\n        defaultValue: defaults.maxValue,\n        type: `number | 'auto'`,\n        group: 'Base',\n        control: {\n            type: 'switchableRange',\n            disabledValue: 'auto',\n            defaultValue: 100,\n            min: 0,\n            max: 600,\n        },\n    },\n    themeProperty(['svg', 'canvas', 'api']),\n    {\n        key: 'colors',\n        group: 'Style',\n        help: 'Cell colors.',\n        description: `\n            An array of colors to be used in conjunction with\n            \\`domain\\` to compute days' color.\n            It applies to days having a value defined, otherwise,\n            \\`emptyColor\\` will be used.\n        `,\n        type: 'string[]',\n        required: false,\n        flavors: ['svg', 'canvas', 'api'],\n        defaultValue: defaults.colors,\n    },\n    {\n        key: 'emptyColor',\n        help: 'color to use to fill days without available value.',\n        type: 'string',\n        required: false,\n        flavors: ['svg', 'canvas', 'api'],\n        defaultValue: defaults.emptyColor,\n        control: { type: 'colorPicker' },\n        group: 'Style',\n    },\n    // Years\n    {\n        key: 'yearSpacing',\n        help: 'define spacing between each year row/column depending on the direction.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.yearSpacing,\n        flavors: ['svg', 'canvas', 'api'],\n        group: 'Years',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 160,\n            step: 5,\n        },\n    },\n    {\n        key: 'yearLegend',\n        group: 'Years',\n        help: `can be used to customize years label, returns 'YYYY' by default.`,\n        type: '(year: number) => string | number',\n        required: false,\n        flavors: ['svg', 'canvas', 'api'],\n    },\n    {\n        key: 'yearLegendPosition',\n        help: 'defines year legends position.',\n        type: `'before' | 'after'`,\n        required: false,\n        defaultValue: defaults.yearLegendPosition,\n        flavors: ['svg', 'canvas', 'api'],\n        group: 'Years',\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'yearLegendOffset',\n        help: 'define offset from year edge to its label.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.yearLegendOffset,\n        flavors: ['svg', 'canvas', 'api'],\n        group: 'Years',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    // Months\n    {\n        key: 'monthSpacing',\n        help: 'define spacing between each month row/column depending on the direction.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.monthSpacing,\n        flavors: ['svg', 'canvas', 'api'],\n        group: 'Months',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 160,\n            step: 5,\n        },\n    },\n    {\n        key: 'monthBorderWidth',\n        flavors: ['svg', 'api'],\n        help: 'width of month borders.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.monthBorderWidth,\n        control: { type: 'lineWidth' },\n        group: 'Months',\n    },\n    {\n        key: 'monthBorderColor',\n        flavors: ['svg', 'api'],\n        help: 'color to use for months border.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.monthBorderColor,\n        control: { type: 'colorPicker' },\n        group: 'Months',\n    },\n    {\n        key: 'monthLegend',\n        help: `can be used to customize months label, returns abbreviated month name (english) by default. This can be used to use a different language`,\n        type: '(year: number, month: number, date: Date) => string | number',\n        required: false,\n        group: 'Months',\n        flavors: ['svg', 'canvas', 'api'],\n    },\n    {\n        key: 'monthLegendPosition',\n        help: 'defines month legends position.',\n        type: `'before' | 'after'`,\n        required: false,\n        defaultValue: defaults.monthLegendPosition,\n        flavors: ['svg', 'canvas', 'api'],\n        group: 'Months',\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'monthLegendOffset',\n        help: 'define offset from month edge to its label.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.monthLegendOffset,\n        flavors: ['svg', 'canvas', 'api'],\n        group: 'Months',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    // Days\n    {\n        key: 'daySpacing',\n        help: 'define spacing between each day cell.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.daySpacing,\n        flavors: ['svg', 'canvas', 'api'],\n        group: 'Days',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'dayBorderWidth',\n        help: 'width of days border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.dayBorderWidth,\n        flavors: ['svg', 'canvas', 'api'],\n        control: { type: 'lineWidth' },\n        group: 'Days',\n    },\n    {\n        key: 'dayBorderColor',\n        help: 'color to use for days border.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.dayBorderColor,\n        flavors: ['svg', 'canvas', 'api'],\n        control: { type: 'colorPicker' },\n        group: 'Days',\n    },\n    isInteractive({\n        flavors: ['svg', 'canvas'],\n        defaultValue: defaults.isInteractive,\n    }),\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onClick handler, it receives clicked day data and mouse event.',\n        type: '(day, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation, it must return a valid HTML\n            element and will receive the following data:\n            \\`\\`\\`\n            {\n                day:   string,\n                date:  {Date},\n                value: number,\n                color: string,\n                x:     number,\n                y:     number,\n                size:  number\n            }\n            \\`\\`\\`\n            You can also customize the tooltip style\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        flavors: ['svg', 'canvas'],\n        help: 'Showcase custom tooltip.',\n        type: 'boolean',\n        required: false,\n        control: { type: 'switch' },\n        group: 'Interactivity',\n    },\n]\n\nexport const groups = groupProperties(props)\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { BoxLegendSvgProps, LegendAnchor, LegendItemDirection } from './types'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","import { computeDimensions, computePositionFromAnchor, computeItemLayout } from './compute'\nimport { LegendCanvasProps } from './types'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n","import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n        if (reverse === true) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse])\n}\n","import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n","var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n"],"names":["durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","arguments","length","floor","ceil","round","d0","d1","offset","step","Math","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","d","month","setDate","setHours","setMonth","getMonth","getFullYear","months","weekday","i","getDate","getDay","getTimezoneOffset","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","year","setFullYear","k","TooltipWrapper","styled","TooltipKey","CustomTooltip","day","style","color","value","x","y","size","settingsMapper","tooltip","values","exclude","allFlavors","props","key","group","help","description","type","required","flavors","chartDimensions","defaultValue","defaults","control","choices","label","disabledValue","min","max","themeProperty","unit","isInteractive","groups","groupProperties","zeroPadding","top","right","bottom","left","computeDimensions","item","direction","itemsSpacing","_padding","padding","itemCount","itemWidth","itemHeight","Array","isArray","Error","horizontalPadding","verticalPadding","width","height","spacing","computePositionFromAnchor","anchor","translateX","translateY","containerWidth","containerHeight","computeItemLayout","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","justify","symbolSize","symbolSpacing","symbolByShape","circle","fill","opacity","borderWidth","borderColor","_jsx","r","cx","cy","strokeWidth","stroke","pointerEvents","diamond","transform","square","triangle","LegendSvgItem","data","textColor","background","symbolShape","symbolBorderWidth","symbolBorderColor","onClick","onMouseEnter","onMouseLeave","toggleSerie","effects","useState","setStyle","theme","useTheme","handleMouseEnter","useCallback","event","on","reduce","acc","effect","handleMouseLeave","some","handler","SymbolShape","_jsxs","itemOpacity","itemBackground","cursor","e","id","React","hidden","legends","symbol","textAnchor","text","itemTextColor","dominantBaseline","userSelect","LegendSvg","itemDirection","xStep","yStep","map","BoxLegendSvg","textAlignMapping","middle","renderLegendToCanvas","ctx","save","translate","font","fontSize","fontFamily","forEach","itemX","itemY","fillStyle","fillRect","textAlign","textBaseline","fillText","String","restore","useQuantizeColorScaleLegendData","scale","overriddenDomain","domain","reverse","valueFormat","v","separator","useMemo","items","domainValue","index","invertExtent","extent","LegendPropShape","PropTypes","isRequired","baseGetTag","isObjectLike","module","exports","baseIsDate","baseUnary","nodeUtil","nodeIsDate","isDate"],"sourceRoot":""}