{"version":3,"sources":["webpack:///../node_modules/lodash/_copySymbols.js","webpack:///../node_modules/lodash/_baseClone.js","webpack:///../node_modules/lodash/_initCloneArray.js","webpack:///../node_modules/lodash/_cloneDataView.js","webpack:///../node_modules/lodash/_cloneRegExp.js","webpack:///../node_modules/lodash/_parent.js","webpack:///../node_modules/lodash/_baseAssignIn.js","webpack:///../node_modules/lodash/_getSymbolsIn.js","webpack:///../node_modules/lodash/isMap.js","webpack:///../node_modules/lodash/_copySymbolsIn.js","webpack:///../node_modules/lodash/_baseIsMap.js","webpack:///../node_modules/lodash/isSet.js","webpack:///../node_modules/lodash/_cloneSymbol.js","webpack:///./src/data/components/swarmplot/generator.js","webpack:///../node_modules/lodash/_baseUnset.js","webpack:///../node_modules/lodash/omit.js","webpack:///../node_modules/lodash/_arrayEach.js","webpack:///../node_modules/lodash/_customOmitClone.js","webpack:///../node_modules/lodash/_initCloneByTag.js","webpack:///../node_modules/lodash/_baseAssign.js","webpack:///./src/data/components/swarmplot/props.js","webpack:///../node_modules/lodash/_getAllKeysIn.js","webpack:///../node_modules/lodash/_baseIsSet.js"],"names":["copyObject","getSymbols","module","exports","source","object","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","keys","cloneableTags","baseClone","value","bitmask","customizer","key","stack","result","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","forEach","subValue","add","keysFunc","keysIn","props","hasOwnProperty","Object","prototype","array","length","constructor","call","index","input","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","baseGet","baseSlice","path","arrayPush","getPrototype","stubArray","getSymbolsIn","getOwnPropertySymbols","baseIsMap","baseUnary","nodeUtil","nodeIsMap","isObjectLike","baseIsSet","nodeIsSet","Symbol","symbolProto","symbolValueOf","valueOf","symbol","allGroups","generateLightDataSet","previousData","randomizeSwarmPlotData","generateSwarmPlotData","slice","min","max","generateHeavyDataSet","castPath","last","parent","toKey","arrayMap","baseUnset","customOmitClone","flatRest","omit","paths","CLONE_DEEP_FLAG","iteratee","isPlainObject","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","defaults","SwarmPlotDefaultProps","help","description","type","group","required","defaultValue","groupBy","identity","label","size","spacing","controlType","controlOptions","unit","enableControlForFlavors","flavors","forceStrength","step","simulationIterations","layout","choices","gap","themeProperty","colors","colorBy","map","borderWidth","borderColor","layers","enableGridX","enableGridY","axesProperties","isInteractive","useMesh","debugMesh","motionProperties","groups","groupProperties","baseGetAllKeys"],"mappings":"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","file":"efe91cf6703fad396db656d24d0f48444463fb65-f81e075faf9db79d5cbf.js","sourcesContent":["var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { generateSwarmPlotData, randomizeSwarmPlotData } from '@nivo/generators'\n\nconst allGroups = ['group A', 'group B', 'group C', 'group D', 'group E', 'group F', 'group G']\n\nexport const generateLightDataSet = previousData => {\n    if (previousData !== undefined) return randomizeSwarmPlotData(previousData)\n\n    return generateSwarmPlotData(allGroups.slice(0, 3), { min: 50, max: 80 })\n}\n\nexport const generateHeavyDataSet = previousData => {\n    if (previousData !== undefined) return randomizeSwarmPlotData(previousData)\n\n    return generateSwarmPlotData(allGroups, { min: 60, max: 100 })\n}\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { SwarmPlotDefaultProps } from '@nivo/swarmplot'\nimport {\n    themeProperty,\n    motionProperties,\n    axesProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\n\nconst defaults = SwarmPlotDefaultProps\n\nconst props = [\n    {\n        key: 'data',\n        help: 'Chart data.',\n        description: `\n            This Chart's doesn't have a predefined structure,\n            you must use a schema which match \\`groupBy\\`,\n            \\`identity\\` and \\`value\\` properties.\n        `,\n        type: 'object[]',\n        group: 'Base',\n        required: true,\n    },\n    {\n        key: 'groups',\n        group: 'Base',\n        type: 'string[]',\n        required: true,\n        help: 'Available groups.',\n    },\n    {\n        key: 'groupBy',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help:\n            'Propety used to group nodes, must return a group which is available in the groups property.',\n        defaultValue: defaults.groupBy,\n    },\n    {\n        key: 'identity',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: `Property used to retrieve the node's unique identifier.`,\n        description: `\n            This property will determine the identifier of a datum\n            amongst the whole data set, thus, it's really important \n            that it's unique.\n\n            It is especially important to have proper identifier\n            when enabling animations, as it will be used to determine\n            if a node is a new one or should transition from previous\n            to next state.\n        `,\n        defaultValue: defaults.identity,\n    },\n    {\n        key: 'label',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: `Control node label.`,\n        defaultValue: defaults.label,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: `Property used to retrieve the node's value.`,\n        defaultValue: defaults.value,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: `Optional value formatter.`,\n    },\n    {\n        key: 'size',\n        group: 'Base',\n        type: 'number | object | Function',\n        required: false,\n        help: `How to compute node size, static or dynamic.`,\n        description: `\n            If you provide a **number**, all nodes will have the same\n            **fixed size**.\n\n            You can also use an object to define a varying size,\n            it must conform to the following interface:\n\n            \\`\\`\\`\n            {\n                key:    string\n                values: [min: number, max: number]\n                sizes:  [min: number, max: number]\n            }\n            \\`\\`\\`\n\n            Then the size of each node will **depend on the value\n            of \\`key\\` and \\`sizes\\`**.\n\n            If you use a **custom function**, it will receive the current\n            node and must **return a number**.\n        `,\n        defaultValue: defaults.size,\n    },\n    {\n        key: 'spacing',\n        help: 'Spacing between nodes.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.spacing,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        group: 'Base',\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        group: 'Base',\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'forceStrength',\n        help: 'Force strength.',\n        description: `\n            This value determine the strength applied on the value\n            axis, using lower value will result in a **more linear\n            arrangement**, however nodes won't be placed accurately\n            according to their values.\n\n            On the other hand, if you increase this value, the\n            simulation will try to **align the nodes with their\n            corresponding values** on the value axis, resulting\n            in a narrower chart.\n\n            Please note that increasing this value will sometimes\n            require to **increase the quality of the simulation**\n            via the \\`simulationIterations\\` property.\n        `,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.forceStrength,\n        controlType: 'range',\n        group: 'Simulation',\n        controlOptions: {\n            step: 0.2,\n            min: 0.2,\n            max: 9,\n        },\n    },\n    {\n        key: 'simulationIterations',\n        help: 'Adjust the simulation quality.',\n        description: `\n            Increasing this number will result in a **more accurate simulation**,\n            however it will also involve more computing.\n        `,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.simulationIterations,\n        controlType: 'range',\n        group: 'Simulation',\n        controlOptions: {\n            min: 60,\n            max: 260,\n        },\n    },\n    {\n        key: 'layout',\n        help: `Chart layout.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.layout,\n        controlType: 'radio',\n        group: 'Layout',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'gap',\n        help: 'Gap between each serie.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.gap,\n        controlType: 'range',\n        group: 'Layout',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 100,\n        },\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines how to compute node color.',\n        description: `\n            The colors property is used to determine the **ordinal color scale**\n            to use to compute nodes' color, it use the serie id as a discriminator.\n\n            You can use a **predefined color scheme**, using the following form:\n\n            \\`\\`\\`\n            colors={{ scheme: 'category10' }}\n            \\`\\`\\`\n\n            Where \\`category10\\` is the identifier of the color scheme.\n            Please have a look at [the dedicated guide](self:/guides/colors)\n            for available schemes.\n\n            If you wish to use **color already defined on the data**\n            you passed to the chart, you can also use this form:\n\n            \\`\\`\\`\n            colors={{ datum: 'color' }}\n            \\`\\`\\`\n\n            Where \\`color\\` is the path to the property containing the color\n            to apply in the current datum.\n\n            You can also use a **custom function** which will receive the current\n            datum and must **return a valid color code**.\n\n            If you pass a string, it will be **used as a color for each and every nodes**.\n        `,\n        type: `Function | object | string`,\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'colorBy',\n        group: 'Style',\n        help: 'Property or accessor function to be used with colors.',\n        description: `\n            When using a color scheme or an array of colors,\n            you'll generate a color scale, this scale will\n            receive a value which will be translated to a color.\n\n            This property define the way we get this value,\n            it can be either a \\`string\\` or a custom function.\n\n            Please have a look at [the colors guide](self:/guides/colors)\n            for further information.\n        `,\n        type: `Function | string`,\n        required: false,\n        defaultValue: defaults.colorBy,\n        controlType: 'choices',\n        controlOptions: {\n            choices: ['group', 'id'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'borderWidth',\n        help: 'Control node border width.',\n        type: 'number | Function',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Control node border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`grid\\`, \\`axes\\`, \\`nodes\\`, \\`mesh\\`.\n\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n            \n            The layer function which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`SwarmPlot\\` component.\n\n            When using the canvas implementation, the function\n            will receive the canvas 2d context as first argument\n            and the chart's context and computed data as second.\n\n            Please make sure to use \\`context.save()\\` and\n            \\`context.restore()\\` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n\n            You can see a live example of custom layers\n            [here](storybook:/swarmplot--extra-layers).\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaults.layers,\n    },\n    {\n        key: 'renderNode',\n        group: 'Customization',\n        help: 'Override default node rendering.',\n        description: `\n            This property can be used to completely\n            customize the way nodes are rendered.\n            \n            when using the SVG implementation, you should\n            return a valid SVG node.\n            \n            When using canvas, the rendering function will\n            receive the canvas 2d context as first argument.\n\n            Please make sure to use \\`context.save()\\` and\n            \\`context.restore()\\` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n\n            You can see a live example of custom node rendering\n            [here](storybook:/swarmplot--custom-node-rendering).\n        `,\n        required: false,\n        type: 'Function',\n    },\n    /*\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'color',\n        group: 'Style',\n    },\n    */\n    {\n        key: 'enableGridX',\n        group: 'Grid & Axes',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n    },\n    {\n        key: 'gridXValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for vertical grid lines.',\n        type: 'Array<number | string>',\n        required: false,\n    },\n    {\n        key: 'enableGridY',\n        group: 'Grid & Axes',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridY,\n        controlType: 'switch',\n    },\n    {\n        key: 'gridYValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for horizontal grid lines.',\n        type: 'Array<number | string>',\n        required: false,\n    },\n    ...axesProperties(),\n    {\n        key: 'isInteractive',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'useMesh',\n        help: 'Use a mesh to detect mouse interactions.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.useMesh,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'debugMesh',\n        help: 'Display mesh used to detect mouse interactions (voronoi cells).',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.debugMesh,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        help: 'onMouseEnter handler.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        help: 'onMouseMove handler.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        help: 'onMouseLeave handler.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        help: 'onClick handler.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the node's data.\n        `,\n    },\n    ...motionProperties(['svg'], defaults),\n]\n\nexport const groups = groupProperties(props)\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n"],"sourceRoot":""}