(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{I6XV:function(e,t,o){"use strict";o.d(t,"a",(function(){return s}));var r=o("Eo5u"),a=o("5QYd"),n=o("UFHW"),i=o("RQLE"),l=[{key:"data",group:"Base",help:"Chart data.",description:"\n            Chart data, which must conform to this structure:\n            ```\n            Array<{\n                id:   string | number\n                data: Array<{\n                    x: number | string | Date\n                    y: number | string | Date\n                }>\n            }>\n            ```\n        ",required:!0,type:"object[]"},{key:"xScale",type:"object",group:"Base",help:"X scale configuration.",controlType:"object",controlOptions:{props:[{key:"type",help:"Scale type.",type:"string",controlType:"choices",controlOptions:{disabled:!0,choices:["linear","point"].map((function(e){return{label:e,value:e}}))}}]}},{key:"xFormat",group:"Base",help:"Optional formatter for x values.",description:"\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        ",required:!1,type:"Function | string",controlType:"valueFormat"},{key:"yScale",type:"object",help:"Y scale configuration.",group:"Base",controlType:"object",controlOptions:{props:[{key:"type",help:"Scale type.",type:"string",controlType:"choices",controlOptions:{disabled:!0,choices:["linear","point"].map((function(e){return{label:e,value:e}}))}},{key:"stacked",help:"Enable/disable stacked mode.",type:"boolean",required:!1,controlType:"switch"},{key:"min",help:"Minimum scale value.",required:!1,type:"number | 'auto'",controlType:"switchableRange",controlOptions:{disabledValue:"auto",defaultValue:0,min:-2e3,max:2e3}},{key:"max",help:"Maximum scale value.",required:!1,type:"number | 'auto'",controlType:"switchableRange",controlOptions:{disabledValue:"auto",defaultValue:1200,min:-2e3,max:2e3}}]}},{key:"yFormat",group:"Base",help:"Optional formatter for y values.",description:"\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        ",required:!1,type:"Function | string",controlType:"valueFormat"},{key:"width",enableControlForFlavors:["api"],help:"Chart width, not required when using responsive variant.",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"height",enableControlForFlavors:["api"],help:"Chart height, not required when using responsive variant.",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"margin",help:"Chart margin.",type:"object",required:!1,controlType:"margin",group:"Base"},{key:"curve",help:"Curve interpolation.",description:"\n            Defines the curve factory to use for the line generator.\n        ",type:"string",required:!1,defaultValue:n.c.curve,controlType:"choices",group:"Style",controlOptions:{choices:a.P.map((function(e){return{label:e,value:e}}))}},i.f,{key:"colors",help:"Defines color range.",type:"string | Function | string[]",required:!1,defaultValue:n.c.colors,controlType:"ordinalColors",group:"Style"},{key:"lineWidth",help:"Line width.",type:"number",required:!1,defaultValue:n.c.lineWidth,controlType:"lineWidth",group:"Style"},{key:"enableArea",help:"Enable/disable area below each line.",type:"boolean",required:!1,defaultValue:n.c.enableArea,controlType:"switch",group:"Style"},{key:"areaBaselineValue",help:"Define the value to be used for area baseline.",description:"\n            Define the value to be used for area baseline.\n            Please note that this value isn't the\n            position of the baseline but the value used\n            to compute it.\n        ",type:"number | string | Date",required:!1,defaultValue:n.c.areaBaselineValue,controlType:"range",group:"Style",controlOptions:{min:0,max:200,step:10}},{key:"areaOpacity",help:"Area opacity (0~1), depends on enableArea.",required:!1,defaultValue:n.c.areaOpacity,type:"number",controlType:"opacity",group:"Style"},{key:"areaBlendMode",flavors:["svg"],help:"Defines CSS mix-blend-mode property.",description:"\n            Defines CSS `mix-blend-mode` property for areas,\n            see\n            [MDN documentation](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode).\n        ",type:"string",required:!1,defaultValue:n.c.areaBlendMode,controlType:"blendMode",group:"Style"}].concat(Object(r.a)(Object(i.b)("Style",["svg"])),[{key:"layers",group:"Customization",help:"Defines the order of layers and add custom layers.",description:"\n            You can also use this property to insert extra layers\n            to the chart, this extra layer must be\n            a function which will receive the chart\n            computed data and must return a valid SVG element.\n        ",required:!1,defaultValue:n.c.layers},{key:"enablePoints",help:"Enable/disable points.",type:"boolean",required:!1,defaultValue:n.c.enablePoints,controlType:"switch",group:"Points"},{key:"pointSymbol",flavors:["svg"],help:"Overrides default point circle. The function will receive `size`, `color`, `borderWidth` and `borderColor` props and must return a valid SVG element.",type:"Function",required:!1,group:"Points"},{key:"pointSize",help:"Size of the points.",type:"number",required:!1,defaultValue:n.c.pointSize,controlType:"range",group:"Points",controlOptions:{unit:"px",min:2,max:20}},{key:"pointColor",help:"Method to compute points color.",type:"string | object | Function",required:!1,defaultValue:n.c.pointColor,controlType:"inheritedColor",group:"Points"},{key:"pointBorderWidth",help:"Width of the points border.",type:"number",required:!1,defaultValue:n.c.pointBorderWidth,controlType:"lineWidth",group:"Points"},{key:"pointBorderColor",help:"Method to compute points border color.",type:"string | object | Function",required:!1,defaultValue:n.c.pointBorderColor,controlType:"inheritedColor",group:"Points"},{key:"enablePointLabel",flavors:["svg","api"],group:"Points",help:"Enable/disable points label.",type:"boolean",required:!1,defaultValue:n.c.enablePointLabel,controlType:"switch"},{key:"pointLabel",flavors:["svg","api"],group:"Points",help:"Property to use to determine point label. If a function is provided, it will receive current point data and should return the desired label.",type:"string",required:!1,controlType:"choices",controlOptions:{choices:["y","yFormatted","x","xFormatted","d => `${d.x}: ${d.y}`"].map((function(e){return{label:e,value:e}}))}},{key:"pointLabelYOffset",flavors:["svg","api"],group:"Points",help:"Label Y offset from point shape.",type:"number",required:!1,defaultValue:a.e.labelYOffset,controlType:"range",controlOptions:{unit:"px",min:-24,max:24}},{key:"enableGridX",help:"Enable/disable x grid.",type:"boolean",required:!1,defaultValue:n.c.enableGridX,controlType:"switch",group:"Grid & Axes"},{key:"gridXValues",group:"Grid & Axes",help:"Specify values to use for vertical grid lines.",type:"Array<number | string | Date>",required:!1},{key:"enableGridY",help:"Enable/disable y grid.",type:"boolean",required:!1,defaultValue:n.c.enableGridY,controlType:"switch",group:"Grid & Axes"},{key:"gridYValues",group:"Grid & Axes",help:"Specify values to use for horizontal grid lines.",type:"Array<number | string | Date>",required:!1}],Object(r.a)(Object(i.a)()),[{key:"isInteractive",flavors:["svg","canvas"],help:"Enable/disable interactivity.",type:"boolean",required:!1,defaultValue:n.c.isInteractive,controlType:"switch",group:"Interactivity"},{key:"useMesh",flavors:["svg"],help:"Use a voronoi mesh to detect mouse interactions, enableSlices must be disabled",type:"boolean",required:!1,defaultValue:n.c.useMesh,controlType:"switch",group:"Interactivity"},{key:"debugMesh",flavors:["svg","canvas"],help:"Display mesh used to detect mouse interactions (voronoi cells).",type:"boolean",required:!1,defaultValue:n.c.debugMesh,controlType:"switch",group:"Interactivity"},{key:"onMouseEnter",flavors:["svg"],group:"Interactivity",help:"onMouseEnter handler, doesn't work with slice tooltip.",type:"(point, event) => void",required:!1},{key:"onMouseMove",flavors:["svg"],group:"Interactivity",help:"onMouseMove handler, doesn't work with slice tooltip.",type:"(point, event) => void",required:!1},{key:"onMouseLeave",flavors:["svg","canvas"],group:"Interactivity",help:"onMouseLeave handler, doesn't work with slice tooltip.",type:"(point, event) => void",required:!1},{key:"onClick",flavors:["svg","canvas"],group:"Interactivity",help:"onClick handler, doesn't work with slice tooltip.",type:"(point, event) => void",required:!1},{key:"tooltip",flavors:["svg","canvas"],group:"Interactivity",help:"Custom point tooltip",type:"Function",required:!1},{key:"enableSlices",group:"Interactivity",flavors:["svg"],help:"Enable/disable slices tooltip for x or y axis, automatically disable mesh.",type:"'x' | 'y' | false",required:!1,defaultValue:n.c.enableSlicesTooltip,controlType:"choices",controlOptions:{choices:[{label:"false",value:!1},{label:"x",value:"x"},{label:"y",value:"y"}]}},{key:"debugSlices",flavors:["svg"],help:"Display area used to detect mouse interactions for slices.",type:"boolean",required:!1,defaultValue:n.c.debugSlices,controlType:"switch",group:"Interactivity"},{key:"sliceTooltip",flavors:["svg","canvas"],group:"Interactivity",help:"Custom slice tooltip",type:"Function",required:!1},{key:"enableCrosshair",flavors:["svg"],group:"Interactivity",help:"Enable/disable crosshair.",type:"boolean",required:!1,controlType:"switch",defaultValue:n.c.enableCrosshair},{key:"crosshairType",flavors:["svg"],group:"Interactivity",required:!1,defaultValue:n.c.crosshairType,help:"Crosshair type, forced to slices axis if enabled.",type:"string",controlType:"choices",controlOptions:{disabled:!0,choices:["x","y","top-left","top","top-right","right","bottom-right","bottom","bottom-left","left","cross"].map((function(e){return{label:e,value:e}}))}},{key:"legends",flavors:["svg","canvas"],type:"object[]",help:"Optional chart's legends.",group:"Legends",controlType:"array",controlOptions:{props:Object(i.c)(["svg","canvas"]),shouldCreate:!0,addLabel:"add legend",shouldRemove:!0,getItemTitle:function(e,t){return"legend["+e+"]: "+t.anchor+", "+t.direction},defaults:{anchor:"left",direction:"column",justify:!1,translateX:0,translateY:0,itemWidth:100,itemHeight:20,itemsSpacing:4,symbolSize:20,symbolShape:"circle",itemDirection:"left-to-right",itemTextColor:"#777",onClick:function(e){alert(JSON.stringify(e,null,"    "))},effects:[{on:"hover",style:{itemBackground:"rgba(0, 0, 0, .03)",itemOpacity:1}}]}}}],Object(r.a)(Object(i.e)(["svg"],n.c,"react-spring"))),s=Object(i.d)(l)},KJQv:function(e,t,o){"use strict";o.d(t,"b",(function(){return i})),o.d(t,"a",(function(){return l}));var r=o("q8Y+"),a=o.n(r),n=o("6zZa"),i=function(){return Object(n.k)(["japan","france","us","germany","norway"],["plane","helicopter","boat","train","subway","bus","car","moto","bicycle","horse","skateboard","others"])},l=function(){return Object(n.k)(["japan","brazil","france","us","germany","norway","china","algeria","mexico","finland","australia"],a()(121))}},MEtr:function(e,t,o){"use strict";var r=o("nLLr");t.a=Object(r.c)({pointLabel:function(e){return"d => `${d.x}: ${d.y}`"===e?function(e){return e.x+": "+e.y}:e},xFormat:r.b,yFormat:r.b,axisTop:Object(r.a)("top"),axisRight:Object(r.a)("right"),axisBottom:Object(r.a)("bottom"),axisLeft:Object(r.a)("left")},{exclude:["enable axisTop","enable axisRight","enable axisBottom","enable axisLeft"]})},ULus:function(e,t,o){"use strict";o.r(t);var r=o("mXGw"),a=o.n(r),n=o("PWxN"),i=o.n(n),l=o("UFHW"),s=o("ZS2m"),c=o("erwu"),u=o.n(c),p=o("MEtr"),d=o("I6XV"),y=o("qC1b"),h=o("KJQv"),b=Object.assign({},i()(y.a,["width","height"]),{useMesh:!0,debugMesh:!1,legends:[{anchor:"bottom-right",direction:"column",justify:!1,translateX:100,translateY:0,itemsSpacing:0,itemDirection:"left-to-right",itemWidth:80,itemHeight:20,itemOpacity:.75,symbolSize:12,symbolShape:"circle",symbolBorderColor:"rgba(0, 0, 0, .5)",onClick:function(e){alert(JSON.stringify(e,null,"    "))},effects:[{on:"hover",style:{itemBackground:"rgba(0, 0, 0, .03)",itemOpacity:1}}]}],animate:l.c.animate,motionConfig:l.c.motionConfig}),f=[{id:"fake corp. A",data:[{x:0,y:7},{x:1,y:5},{x:2,y:11},{x:3,y:9},{x:4,y:13},{x:7,y:16},{x:9,y:12}]}];t.default=function(){return a.a.createElement(s.a,{name:"Line",meta:u.a.Line,icon:"line",flavors:u.a.flavors,currentFlavor:"svg",properties:d.a,initialProperties:b,defaultProperties:l.c,propertiesMapper:p.a,generateData:h.b},(function(e,t,o,r){return a.a.createElement(l.d,Object.assign({data:"linear"===e.xScale.type?f:t},e,{theme:o,onClick:function(e){r({type:"click",label:"[point] serie: "+e.serieId+", x: "+e.data.x+", y: "+e.data.y,color:e.serieColor,data:e})}}))}))}},nLLr:function(e,t,o){"use strict";o.d(t,"c",(function(){return l})),o.d(t,"a",(function(){return s})),o.d(t,"b",(function(){return c}));var r=o("PWxN"),a=o.n(r),n=o("KXzt"),i=o.n(n),l=function(e,t){var o=(void 0===t?{}:t).exclude,r=void 0===o?[]:o;return function(t,o){void 0===o&&(o={});var n={};return Object.keys(t).forEach((function(r){e[r]&&(n[r]=e[r](t[r],t,o))})),Object.assign({},a()(t,r),n)}},s=function(e){return function(t,o){return o["axis"+i()(e)].enable?a()(t,["enable"]):null}},c=function(e){var t=e.format;return!0===e.enabled?t:void 0}},qC1b:function(e,t,o){"use strict";var r=o("UFHW");t.a={width:600,height:400,margin:{top:50,right:110,bottom:50,left:60},xScale:{type:"point"},xFormat:{format:"",enabled:!1},yScale:{type:"linear",min:"auto",max:"auto",stacked:!0,reverse:!1},yFormat:{format:" >-.2f",enabled:!0},curve:r.c.curve,axisTop:{enable:!1,orient:"top",tickSize:5,tickPadding:5,tickRotation:0,legend:"",legendOffset:36},axisRight:{enable:!1,orient:"right",tickSize:5,tickPadding:5,tickRotation:0,legend:"",legendOffset:0},axisBottom:{enable:!0,orient:"bottom",tickSize:5,tickPadding:5,tickRotation:0,legend:"transportation",legendOffset:36,legendPosition:"middle"},axisLeft:{enable:!0,orient:"left",tickSize:5,tickPadding:5,tickRotation:0,legend:"count",legendOffset:-40,legendPosition:"middle"},enableGridX:r.c.enableGridX,enableGridY:r.c.enableGridY,colors:r.c.colors,lineWidth:2,enablePoints:!0,pointSize:10,pointColor:{theme:"background"},pointBorderWidth:2,pointBorderColor:{from:"serieColor"},enablePointLabel:r.c.enablePointLabel,pointLabel:r.c.pointLabel,pointLabelYOffset:-12,enableArea:r.c.enableArea,areaBlendMode:r.c.areaBlendMode,areaBaselineValue:r.c.areaBaselineValue,areaOpacity:r.c.areaOpacity,isInteractive:r.c.isInteractive,enableSlices:!1,debugSlices:!1,enableCrosshair:!0,crosshairType:"bottom-left"}}}]);
//# sourceMappingURL=component---src-pages-line-index-js-e8f8671ef347bc13c1b7.js.map