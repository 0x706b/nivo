{"version":3,"file":"d21880e58bb68c42adaa9764cc7aefd4a916e7e3-5ba83ea442edbd1bb85a.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-geo/src/math.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/azimuthal.js","webpack://nivo-website/../node_modules/d3-geo/src/noop.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/buffer.js","webpack://nivo-website/../node_modules/d3-geo/src/pointEqual.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/rejoin.js","webpack://nivo-website/../node_modules/d3-geo/src/adder.js","webpack://nivo-website/../node_modules/d3-geo/src/cartesian.js","webpack://nivo-website/../node_modules/d3-geo/src/polygonContains.js","webpack://nivo-website/../node_modules/d3-geo/node_modules/d3-array/src/ascending.js","webpack://nivo-website/../node_modules/d3-geo/node_modules/d3-array/src/bisector.js","webpack://nivo-website/../node_modules/d3-geo/node_modules/d3-array/src/bisect.js","webpack://nivo-website/../node_modules/d3-geo/node_modules/d3-array/src/array.js","webpack://nivo-website/../node_modules/d3-geo/node_modules/d3-array/src/ticks.js","webpack://nivo-website/../node_modules/d3-geo/node_modules/d3-array/src/merge.js","webpack://nivo-website/../node_modules/d3-geo/node_modules/d3-array/src/range.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/index.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/antimeridian.js","webpack://nivo-website/../node_modules/d3-geo/src/circle.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/circle.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/rectangle.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/line.js","webpack://nivo-website/../node_modules/d3-geo/src/compose.js","webpack://nivo-website/../node_modules/d3-geo/src/identity.js","webpack://nivo-website/../node_modules/d3-geo/src/rotation.js","webpack://nivo-website/../node_modules/d3-geo/src/transform.js","webpack://nivo-website/../node_modules/d3-geo/src/stream.js","webpack://nivo-website/../node_modules/d3-geo/src/path/bounds.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/fit.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/resample.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/index.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/gnomonic.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/orthographic.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/stereographic.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/equalEarth.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/equirectangular.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/mercator.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/transverseMercator.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/naturalEarth1.js","webpack://nivo-website/../node_modules/d3-geo/src/path/area.js","webpack://nivo-website/../node_modules/d3-geo/src/path/centroid.js","webpack://nivo-website/../node_modules/d3-geo/src/path/context.js","webpack://nivo-website/../node_modules/d3-geo/src/path/measure.js","webpack://nivo-website/../node_modules/d3-geo/src/path/string.js","webpack://nivo-website/../node_modules/d3-geo/src/graticule.js","webpack://nivo-website/../node_modules/d3-geo/src/length.js","webpack://nivo-website/../node_modules/d3-geo/src/distance.js","webpack://nivo-website/../node_modules/d3-geo/src/contains.js","webpack://nivo-website/../src/hooks.js","webpack://nivo-website/../node_modules/d3-geo/src/path/index.js","webpack://nivo-website/../src/ChoroplethTooltip.js","webpack://nivo-website/../src/props.js","webpack://nivo-website/../src/GeoGraticule.js","webpack://nivo-website/../src/GeoMapFeature.js","webpack://nivo-website/../src/GeoMap.js","webpack://nivo-website/../src/ResponsiveGeoMap.js","webpack://nivo-website/../src/GeoMapCanvas.js","webpack://nivo-website/../src/ResponsiveGeoMapCanvas.js","webpack://nivo-website/../src/Choropleth.js","webpack://nivo-website/../src/ResponsiveChoropleth.js","webpack://nivo-website/../src/ChoroplethCanvas.js","webpack://nivo-website/../src/ResponsiveChoroplethCanvas.js"],"sourcesContent":["export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","import { asin, atan2, cos, sin, sqrt } from \"../math.js\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","export default function noop() {}","import noop from \"../noop.js\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { abs, epsilon } from \"./math.js\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual.js\";\nimport { epsilon } from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n\n        for (i = 0; i < n; ++i) {\n          stream.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        stream.lineEnd();\n        return;\n      } // handle degenerate cases by moving the point\n\n\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","import { asin, atan2, cos, sin, sqrt } from \"./math.js\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder.js\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian.js\";\nimport { abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau } from \"./math.js\";\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi) return point[0];else return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function (polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport { epsilon, halfPi } from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index.js\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math.js\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math.js\";\nimport { rotateRadians } from \"./rotation.js\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian.js\";\nimport { circleStream } from \"../circle.js\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) point1[2] = 1;\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","import { abs, epsilon } from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","export default function (x) {\n  return x;\n}","import compose from \"./compose.js\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import noop from \"../noop.js\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { default as geoStream } from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian.js\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math.js\";\nimport { transformer } from \"../transform.js\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math.js\";\nimport { rotateRadians } from \"../rotation.js\";\nimport { transformer } from \"../transform.js\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit.js\";\nimport resample from \"./resample.js\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate angle\n  sx = 1,\n      // reflectX\n  sy = 1,\n      // reflectX\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function (_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function (_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { asin, sqrt } from \"../math.js\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math.js\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, cos, sin } from \"../math.js\";\nimport { azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import { asin, cos, epsilon, sin } from \"../math.js\";\nimport { azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math.js\";\nimport { azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import projection from \"./index.js\";\nimport { abs, asin, cos, epsilon2, sin, sqrt } from \"../math.js\";\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  return [lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\n\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l), asin(sin(l) / M)];\n};\n\nexport default function () {\n  return projection(equalEarthRaw).scale(177.158);\n}","import projection from \"./index.js\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import { atan, exp, halfPi, log, tan } from \"../math.js\";\nimport { mercatorProjection } from \"./mercator.js\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","import projection from \"./index.js\";\nimport { abs, epsilon } from \"../math.js\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}","import adder from \"../adder.js\";\nimport { abs } from \"../math.js\";\nimport noop from \"../noop.js\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","import { sqrt } from \"../math.js\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math.js\";\nimport noop from \"../noop.js\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder.js\";\nimport { sqrt } from \"../math.js\";\nimport noop from \"../noop.js\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import { range } from \"d3-array\";\nimport { abs, ceil, epsilon } from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function (x) {\n    return y.map(function (y) {\n      return [x, y];\n    });\n  };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function (y) {\n    return x.map(function (x) {\n      return [x, y];\n    });\n  };\n}\n\nexport default function graticule() {\n  var x1,\n      x0,\n      X1,\n      X0,\n      y1,\n      y0,\n      Y1,\n      Y0,\n      dx = 10,\n      dy = dx,\n      DX = 90,\n      DY = 360,\n      x,\n      y,\n      X,\n      Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {\n      type: \"MultiLineString\",\n      coordinates: lines()\n    };\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n      return abs(x % DX) > epsilon;\n    }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n      return abs(y % DY) > epsilon;\n    }).map(y));\n  }\n\n  graticule.lines = function () {\n    return lines().map(function (coordinates) {\n      return {\n        type: \"LineString\",\n        coordinates: coordinates\n      };\n    });\n  };\n\n  graticule.outline = function () {\n    return {\n      type: \"Polygon\",\n      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n    };\n  };\n\n  graticule.extent = function (_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function (_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function (_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function (_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function (_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function (_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function (_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\nexport function graticule10() {\n  return graticule()();\n}","import adder from \"./adder.js\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import length from \"./length.js\";\nvar coordinates = [null, null],\n    object = {\n  type: \"LineString\",\n  coordinates: coordinates\n};\nexport default function (a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}","import { default as polygonContains } from \"./polygonContains.js\";\nimport { default as distance } from \"./distance.js\";\nimport { epsilon2, radians } from \"./math.js\";\nvar containsObjectType = {\n  Feature: function Feature(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function FeatureCollection(object, point) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      if (containsGeometry(features[i].geometry, point)) return true;\n    }\n\n    return false;\n  }\n};\nvar containsGeometryType = {\n  Sphere: function Sphere() {\n    return true;\n  },\n  Point: function Point(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function MultiPoint(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPoint(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  LineString: function LineString(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function MultiLineString(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsLine(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  Polygon: function Polygon(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function MultiPolygon(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPolygon(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  GeometryCollection: function GeometryCollection(object, point) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      if (containsGeometry(geometries[i], point)) return true;\n    }\n\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab) return true;\n    }\n\n    ao = bo;\n  }\n\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function (object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { isFunction, get } from 'lodash'\nimport { format } from 'd3-format'\nimport {\n    geoPath,\n    geoAzimuthalEqualArea,\n    geoAzimuthalEquidistant,\n    geoGnomonic,\n    geoOrthographic,\n    geoStereographic,\n    geoEqualEarth,\n    geoEquirectangular,\n    geoMercator,\n    geoTransverseMercator,\n    geoNaturalEarth1,\n    geoGraticule,\n} from 'd3-geo'\nimport { guessQuantizeColorScale, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useQuantizeColorScaleLegendData } from '@nivo/legends'\n\nexport const projectionById = {\n    azimuthalEqualArea: geoAzimuthalEqualArea,\n    azimuthalEquidistant: geoAzimuthalEquidistant,\n    gnomonic: geoGnomonic,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    mercator: geoMercator,\n    transverseMercator: geoTransverseMercator,\n    naturalEarth1: geoNaturalEarth1,\n}\n\nexport const useGeoMap = ({\n    width,\n    height,\n    projectionType,\n    projectionScale,\n    projectionTranslation,\n    projectionRotation,\n    fillColor,\n    borderWidth,\n    borderColor,\n}) => {\n    const projection = useMemo(() => {\n        return projectionById[projectionType]()\n            .scale(projectionScale)\n            .translate([width * projectionTranslation[0], height * projectionTranslation[1]])\n            .rotate(projectionRotation)\n    }, [\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation[0],\n        projectionTranslation[1],\n        projectionRotation[0],\n        projectionRotation[1],\n        projectionRotation[2],\n    ])\n    const path = useMemo(() => geoPath(projection), [projection])\n    const graticule = useMemo(() => geoGraticule())\n\n    const theme = useTheme()\n    const getBorderWidth = useMemo(\n        () => (typeof borderWidth === 'function' ? borderWidth : () => borderWidth),\n        [borderWidth]\n    )\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getFillColor = useMemo(\n        () => (typeof fillColor === 'function' ? fillColor : () => fillColor),\n        [fillColor]\n    )\n\n    return {\n        projection,\n        path,\n        graticule,\n        getBorderWidth,\n        getBorderColor,\n        getFillColor,\n    }\n}\n\nexport const useChoropleth = ({\n    features,\n    data,\n    match,\n    label,\n    value,\n    valueFormat,\n    colors,\n    unknownColor,\n    domain,\n}) => {\n    const findMatchingDatum = useMemo(() => {\n        if (isFunction(match)) return match\n        return (feature, datum) => {\n            const featureKey = get(feature, match)\n            const datumKey = get(datum, match)\n\n            return featureKey && featureKey === datumKey\n        }\n    }, [match])\n    const getLabel = useMemo(\n        () => (isFunction(label) ? label : datum => get(datum, label)),\n        [label]\n    )\n    const getValue = useMemo(\n        () => (isFunction(value) ? value : datum => get(datum, value)),\n        [value]\n    )\n    const valueFormatter = useMemo(() => {\n        if (valueFormat === undefined) return d => d\n        if (isFunction(valueFormat)) return valueFormat\n        return format(valueFormat)\n    }, [valueFormat])\n\n    const colorScale = useMemo(\n        () => guessQuantizeColorScale(colors).domain(domain),\n        [colors, domain]\n    )\n    const getFillColor = useMemo(() => {\n        return feature => {\n            if (feature.value === undefined) return unknownColor\n            return colorScale(feature.value)\n        }\n    }, [colorScale, unknownColor])\n\n    const boundFeatures = useMemo(\n        () =>\n            features.map(feature => {\n                const datum = data.find(datum => findMatchingDatum(feature, datum))\n                const datumValue = getValue(datum)\n\n                if (datum) {\n                    const featureWithData = {\n                        ...feature,\n                        data: datum,\n                        value: datumValue,\n                        formattedValue: valueFormatter(datumValue),\n                    }\n                    featureWithData.color = getFillColor(featureWithData)\n                    featureWithData.label = getLabel(featureWithData)\n\n                    return featureWithData\n                }\n\n                return feature\n            }),\n        [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]\n    )\n\n    const legendData = useQuantizeColorScaleLegendData({\n        scale: colorScale,\n        valueFormat: valueFormatter,\n    })\n\n    return {\n        colorScale,\n        getFillColor,\n        boundFeatures,\n        valueFormatter,\n        legendData,\n    }\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChoroplethTooltip = memo(({ feature }) => {\n    if (feature.data === undefined) return null\n\n    return (\n        <BasicTooltip\n            id={feature.label}\n            color={feature.color}\n            enableChip={true}\n            value={feature.formattedValue}\n        />\n    )\n})\n\nChoroplethTooltip.propTypes = {\n    feature: PropTypes.object.isRequired,\n}\n\nChoroplethTooltip.displayName = 'ChoroplethTooltip'\n\nexport default ChoroplethTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { projectionById } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst commonPropTypes = {\n    features: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.oneOf(['Feature']).isRequired,\n            properties: PropTypes.object,\n            geometry: PropTypes.object.isRequired,\n        })\n    ).isRequired,\n\n    projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n    projectionScale: PropTypes.number.isRequired,\n    projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n    projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGraticule: PropTypes.bool.isRequired,\n    graticuleLineWidth: PropTypes.number.isRequired,\n    graticuleLineColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const GeoMapPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const GeoMapCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonChoroplethPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    colors: quantizeColorScalePropType.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    unknownColor: PropTypes.string.isRequired,\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const ChoroplethPropTypes = {\n    ...GeoMapPropTypes,\n    ...commonChoroplethPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChoroplethCanvasPropTypes = {\n    ...GeoMapCanvasPropTypes,\n    ...commonChoroplethPropTypes,\n}\n\nconst commonDefaultProps = {\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: false,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#999999',\n\n    fillColor: '#dddddd',\n    borderWidth: 0,\n    borderColor: '#000000',\n\n    isInteractive: true,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseMove: () => {},\n    onClick: () => {},\n\n    layers: ['graticule', 'features'],\n    legends: [],\n\n    fill: [],\n    defs: [],\n}\n\nexport const GeoMapDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const GeoMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nconst commonChoroplethDefaultProps = {\n    match: 'id',\n    label: 'id',\n    value: 'value',\n    colors: 'PuBuGn',\n    unknownColor: '#999',\n    tooltip: ChoroplethTooltip,\n    layers: ['graticule', 'features', 'legends'],\n}\n\nexport const ChoroplethDefaultProps = {\n    ...GeoMapDefaultProps,\n    ...commonChoroplethDefaultProps,\n    role: 'img',\n}\n\nexport const ChoroplethCanvasDefaultProps = {\n    ...GeoMapCanvasDefaultProps,\n    ...commonChoroplethDefaultProps,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoGraticule = memo(({ path, graticule, lineWidth, lineColor }) => {\n    return <path fill=\"none\" strokeWidth={lineWidth} stroke={lineColor} d={path(graticule())} />\n})\n\nGeoGraticule.propTypes = {\n    path: PropTypes.func.isRequired,\n    graticule: PropTypes.func.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineColor: PropTypes.string.isRequired,\n}\n\nGeoGraticule.displayName = 'GeoGraticule'\n\nexport default GeoGraticule\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoMapFeature = memo(\n    ({\n        feature,\n        path,\n        fillColor,\n        borderWidth,\n        borderColor,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }) => {\n        return (\n            <path\n                key={feature.id}\n                fill={feature?.fill ?? fillColor}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                strokeLinejoin=\"bevel\"\n                d={path(feature)}\n                onMouseEnter={event => onMouseEnter(feature, event)}\n                onMouseMove={event => onMouseMove(feature, event)}\n                onMouseLeave={event => onMouseLeave(feature, event)}\n                onClick={event => onClick(feature, event)}\n            />\n        )\n    }\n)\n\nGeoMapFeature.propTypes = {\n    feature: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['Feature']).isRequired,\n        properties: PropTypes.object,\n        geometry: PropTypes.object.isRequired,\n    }).isRequired,\n    path: PropTypes.func.isRequired,\n\n    fillColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nGeoMapFeature.displayName = 'GeoMapFeature'\n\nexport default GeoMapFeature\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useCallback, memo } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapPropTypes, GeoMapDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap } from './hooks'\n\nconst GeoMap = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        layers,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    } = props\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n    })\n\n    const theme = useTheme()\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {features.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n\n                return <Fragment key={i}>{layer(props)}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nGeoMap.displayName = 'GeoMap'\nGeoMap.propTypes = GeoMapPropTypes\nGeoMap.defaultProps = GeoMapDefaultProps\n\nexport default withContainer(GeoMap)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMap from './GeoMap'\n\nconst ResponsiveGeoMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapCanvasDefaultProps, GeoMapCanvasPropTypes } from './props'\nimport { useGeoMap } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst GeoMapCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        layers,\n\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n\n        fillColor,\n        borderWidth,\n        borderColor,\n\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap(\n        {\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor,\n            borderWidth,\n            borderColor,\n        }\n    )\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                features.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else {\n                layer(ctx, props)\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        features,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(\n        event => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        },\n        [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n    const handleClick = useCallback(\n        event => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                onClick(feature, event)\n            }\n        },\n        [isInteractive, canvasEl, features, projection, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nGeoMapCanvas.displatName = 'GeoMapCanvas'\nGeoMapCanvas.propTypes = GeoMapCanvasPropTypes\nGeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps\n\nexport default withContainer(GeoMapCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMapCanvas from './GeoMapCanvas'\n\nconst ResponsiveGeoMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, Fragment, useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme, bindDefs } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethPropTypes, ChoroplethDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst Choropleth = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n        defs = ChoroplethDefaultProps.defs,\n        fill = ChoroplethDefaultProps.fill,\n    }) => {\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        const theme = useTheme()\n\n        const boundDefs = bindDefs(defs, boundFeatures, fill, {\n            dataKey: 'data',\n            targetKey: 'fill',\n        })\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleClick = useCallback(\n            (feature, event) => isInteractive && onClick && onClick(feature, event),\n            [isInteractive, onClick]\n        )\n        const handleMouseEnter = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseMove = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseLeave = useCallback(\n            () => isInteractive && hideTooltip(),\n            [isInteractive, hideTooltip]\n        )\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                defs={boundDefs}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layer === 'graticule') {\n                        if (enableGraticule !== true) return null\n\n                        return (\n                            <GeoGraticule\n                                key=\"graticule\"\n                                path={path}\n                                graticule={graticule}\n                                lineWidth={graticuleLineWidth}\n                                lineColor={graticuleLineColor}\n                            />\n                        )\n                    }\n                    if (layer === 'features') {\n                        return (\n                            <Fragment key=\"features\">\n                                {boundFeatures.map(feature => (\n                                    <GeoMapFeature\n                                        key={feature.id}\n                                        feature={feature}\n                                        path={path}\n                                        fillColor={getFillColor(feature)}\n                                        borderWidth={getBorderWidth(feature)}\n                                        borderColor={getBorderColor(feature)}\n                                        onMouseEnter={handleMouseEnter}\n                                        onMouseMove={handleMouseMove}\n                                        onMouseLeave={handleMouseLeave}\n                                        onClick={handleClick}\n                                    />\n                                ))}\n                            </Fragment>\n                        )\n                    }\n                    if (layer === 'legends') {\n                        return legends.map((legend, i) => {\n                            return (\n                                <BoxLegendSvg\n                                    key={i}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    {...legend}\n                                />\n                            )\n                        })\n                    }\n\n                    return <Fragment key={i}>{layer({})}</Fragment>\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nChoropleth.displayName = 'Choropleth'\nChoropleth.propTypes = ChoroplethPropTypes\nChoropleth.defaultProps = ChoroplethDefaultProps\n\nexport default withContainer(Choropleth)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Choropleth from './Choropleth'\n\nconst ResponsiveChoropleth = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Choropleth width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoropleth\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethCanvasDefaultProps, ChoroplethCanvasPropTypes } from './props'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst ChoroplethCanvas = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    }) => {\n        const canvasEl = useRef(null)\n        const theme = useTheme()\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { projection, graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        useEffect(() => {\n            if (!canvasEl) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            path.context(ctx)\n\n            layers.forEach(layer => {\n                if (layer === 'graticule') {\n                    if (enableGraticule === true) {\n                        ctx.lineWidth = graticuleLineWidth\n                        ctx.strokeStyle = graticuleLineColor\n                        ctx.beginPath()\n                        path(graticule())\n                        ctx.stroke()\n                    }\n                } else if (layer === 'features') {\n                    boundFeatures.forEach(feature => {\n                        ctx.beginPath()\n                        path(feature)\n                        ctx.fillStyle = getFillColor(feature)\n                        ctx.fill()\n\n                        const borderWidth = getBorderWidth(feature)\n                        if (borderWidth > 0) {\n                            ctx.strokeStyle = getBorderColor(feature)\n                            ctx.lineWidth = borderWidth\n                            ctx.stroke()\n                        }\n                    })\n                } else if (layer === 'legends') {\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: width,\n                            containerHeight: height,\n                            theme,\n                        })\n                    })\n                } else {\n                    // layer(ctx, {})\n                }\n            })\n        }, [\n            canvasEl,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            path,\n            graticule,\n            getFillColor,\n            getBorderWidth,\n            getBorderColor,\n            boundFeatures,\n            legends,\n            layers,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleMouseMove = useCallback(\n            event => {\n                if (!isInteractive || !Tooltip) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    showTooltipFromEvent(<Tooltip feature={feature} />, event)\n                } else {\n                    hideTooltip()\n                }\n                onMouseMove && onMouseMove(feature || null, event)\n            },\n            [\n                showTooltipFromEvent,\n                hideTooltip,\n                isInteractive,\n                Tooltip,\n                canvasEl,\n                boundFeatures,\n                projection,\n            ]\n        )\n        const handleMouseLeave = useCallback(\n            () => isInteractive && hideTooltip(),\n            [isInteractive, hideTooltip]\n        )\n        const handleClick = useCallback(\n            event => {\n                if (!isInteractive || !onClick) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    onClick(feature, event)\n                }\n            },\n            [isInteractive, canvasEl, boundFeatures, projection, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChoroplethCanvas.displayName = 'ChoroplethCanvas'\nChoroplethCanvas.propTypes = ChoroplethCanvasPropTypes\nChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps\n\nexport default withContainer(ChoroplethCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChoroplethCanvas from './ChoroplethCanvas'\n\nconst ResponsiveChoroplethCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChoroplethCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoroplethCanvas\n"],"names":["epsilon","pi","Math","PI","halfPi","quarterPi","tau","abs","atan","atan2","cos","ceil","exp","log","floor","sin","pow","sign","x","sqrt","tan","acos","asin","azimuthalRaw","scale","y","cx","cy","k","azimuthalInvert","angle","z","c","sc","cc","noop","line","lines","point","m","push","lineStart","lineEnd","rejoin","length","pop","concat","shift","result","a","b","Intersection","points","other","entry","this","o","e","v","n","p","segments","compareIntersection","startInside","interpolate","stream","i","subject","clip","forEach","segment","p0","p1","pointEqual","sort","start","current","isSubject","array","Adder","reset","prototype","constructor","s","t","add","_add","temp","valueOf","adder","bv","av","spherical","cartesian","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","sum","longitude","polygon","sinPhi","normal","winding","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","j","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","arc","intersection","phiArc","NaN","compare","f","Array","slice","map","arrays","merged","stop","step","arguments","max","range","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","polygonStart","pointRing","ringStart","ringEnd","polygonEnd","merge","polygonContains","sphere","pointLine","clean","ringSegments","filter","validSegment","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","direction","circleStream","radius","t0","t1","cosRadius","sinRadius","circleRadius","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","w","uu","t2","q","polar","q1","code","r","c0","v0","v00","point2","clipMax","clipMin","clipRectangle","x0","y0","x1","y1","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","min","ax","ay","dx","dy","compose","invert","rotationIdentity","round","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","transformer","methods","TransformStream","key","streamGeometry","geometry","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","Sphere","Point","coordinates","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","Infinity","boundsStream","bounds","fit","projection","fitBounds","clipExtent","translate","fitExtent","extent","h","cosMinDistance","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslate","sx","sy","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","recenter","center","apply","resample","transformRotate","_","undefined","clipAngle","reflectX","reflectY","precision","fitSize","size","fitWidth","width","fitHeight","height","projectionMutator","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","gnomonicRaw","orthographicRaw","stereographicRaw","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","equirectangularRaw","mercatorRaw","mercatorProjection","reclip","forward","transverseMercatorRaw","naturalEarth1Raw","phi4","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","PathString","_string","graticuleX","graticuleY","graticule","X","Y","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","_circle","join","lengthLineEnd","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","distance","ao","bo","ab","ringRadians","pointRadians","projectionById","azimuthalEqualArea","azimuthalEquidistant","gnomonic","orthographic","stereographic","equalEarth","equirectangular","mercator","transverseMercator","naturalEarth1","useGeoMap","projectionType","projectionScale","projectionTranslation","projectionRotation","fillColor","borderWidth","borderColor","useMemo","path","projectionStream","contextStream","measure","geoPath","geoGraticule","theme","useTheme","getBorderWidth","getBorderColor","useInheritedColor","getFillColor","useChoropleth","data","match","label","value","valueFormat","colors","unknownColor","domain","findMatchingDatum","_isFunction","feature","datum","featureKey","_get","datumKey","getLabel","getValue","valueFormatter","format","colorScale","guessQuantizeColorScale","boundFeatures","find","datumValue","featureWithData","formattedValue","color","legendData","useQuantizeColorScaleLegendData","ChoroplethTooltip","memo","_jsx","BasicTooltip","id","enableChip","propTypes","PropTypes","displayName","commonPropTypes","isRequired","properties","Object","keys","inheritedColorPropType","enableGraticule","graticuleLineWidth","graticuleLineColor","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","layers","GeoMapPropTypes","role","GeoMapCanvasPropTypes","pixelRatio","commonChoroplethPropTypes","quantizeColorScalePropType","ChoroplethPropTypes","ChoroplethCanvasPropTypes","commonDefaultProps","legends","fill","defs","GeoMapDefaultProps","GeoMapCanvasDefaultProps","window","devicePixelRatio","commonChoroplethDefaultProps","ChoroplethDefaultProps","ChoroplethCanvasDefaultProps","GeoGraticule","lineWidth","lineColor","strokeWidth","stroke","GeoMapFeature","strokeLinejoin","event","GeoMap","props","partialMargin","margin","Tooltip","useDimensions","outerWidth","outerHeight","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","handleMouseEnter","handleMouseMove","handleMouseLeave","SvgWrapper","layer","Fragment","defaultProps","withContainer","ResponsiveGeoMap","ResponsiveWrapper","getFeatureFromMouseEvent","el","getRelativeCursor","geoContains","GeoMapCanvas","canvasEl","useRef","useEffect","ctx","getContext","fillStyle","background","fillRect","left","top","strokeStyle","beginPath","ref","style","cursor","displatName","ResponsiveGeoMapCanvas","Choropleth","boundDefs","bindDefs","dataKey","targetKey","legend","BoxLegendSvg","containerWidth","containerHeight","ResponsiveChoropleth","ChoroplethCanvas","renderLegendToCanvas","ResponsiveChoroplethCanvas"],"sourceRoot":""}