{"version":3,"file":"638c3b18840322299908ff491e302aba29258b71-da6625d8f4f75e43c65e.js","mappings":"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","sources":["webpack://nivo-website/../src/WaffleCell.js","webpack://nivo-website/../src/WaffleCellHtml.js","webpack://nivo-website/../src/props.js","webpack://nivo-website/../src/compute.js","webpack://nivo-website/../src/enhance.js","webpack://nivo-website/../src/WaffleCellTooltip.js","webpack://nivo-website/../src/Waffle.js","webpack://nivo-website/../src/ResponsiveWaffle.js","webpack://nivo-website/../src/WaffleHtml.js","webpack://nivo-website/../src/ResponsiveWaffleHtml.js","webpack://nivo-website/../src/WaffleCanvas.js","webpack://nivo-website/../src/ResponsiveWaffleCanvas.js","webpack://nivo-website/../node_modules/lodash/_LazyWrapper.js","webpack://nivo-website/../node_modules/lodash/_LodashWrapper.js","webpack://nivo-website/../node_modules/lodash/_baseLodash.js","webpack://nivo-website/../node_modules/lodash/_baseSetData.js","webpack://nivo-website/../node_modules/lodash/_composeArgs.js","webpack://nivo-website/../node_modules/lodash/_composeArgsRight.js","webpack://nivo-website/../node_modules/lodash/_countHolders.js","webpack://nivo-website/../node_modules/lodash/_createBind.js","webpack://nivo-website/../node_modules/lodash/_createCtor.js","webpack://nivo-website/../node_modules/lodash/_createCurry.js","webpack://nivo-website/../node_modules/lodash/_createHybrid.js","webpack://nivo-website/../node_modules/lodash/_createPartial.js","webpack://nivo-website/../node_modules/lodash/_createRecurry.js","webpack://nivo-website/../node_modules/lodash/_createWrap.js","webpack://nivo-website/../node_modules/lodash/_getData.js","webpack://nivo-website/../node_modules/lodash/_getFuncName.js","webpack://nivo-website/../node_modules/lodash/_getHolder.js","webpack://nivo-website/../node_modules/lodash/_getWrapDetails.js","webpack://nivo-website/../node_modules/lodash/_insertWrapDetails.js","webpack://nivo-website/../node_modules/lodash/_isLaziable.js","webpack://nivo-website/../node_modules/lodash/_mergeData.js","webpack://nivo-website/../node_modules/lodash/_metaMap.js","webpack://nivo-website/../node_modules/lodash/_realNames.js","webpack://nivo-website/../node_modules/lodash/_reorder.js","webpack://nivo-website/../node_modules/lodash/_replaceHolders.js","webpack://nivo-website/../node_modules/lodash/_setData.js","webpack://nivo-website/../node_modules/lodash/_setWrapToString.js","webpack://nivo-website/../node_modules/lodash/_updateWrapDetails.js","webpack://nivo-website/../node_modules/lodash/_wrapperClone.js","webpack://nivo-website/../node_modules/lodash/partial.js","webpack://nivo-website/../node_modules/lodash/toInteger.js","webpack://nivo-website/../node_modules/lodash/wrapperLodash.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { pure } from '@nivo/recompose'\n\nconst WaffleCell = ({\n    position,\n    size,\n    x,\n    y,\n    color,\n    fill,\n    opacity,\n    borderWidth,\n    borderColor,\n    data,\n    onHover,\n    onLeave,\n    onClick,\n}) => (\n    <rect\n        width={size}\n        height={size}\n        x={x}\n        y={y}\n        fill={fill || color}\n        strokeWidth={borderWidth}\n        stroke={borderColor}\n        opacity={opacity}\n        onMouseEnter={onHover}\n        onMouseMove={onHover}\n        onMouseLeave={onLeave}\n        onClick={event => {\n            onClick({ position, color, x, y, data }, event)\n        }}\n    />\n)\n\nWaffleCell.propTypes = {\n    position: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    fill: PropTypes.string,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    data: PropTypes.object.isRequired,\n    onHover: PropTypes.func.isRequired,\n    onLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\nWaffleCell.defaultProps = {\n    data: {},\n}\nWaffleCell.displayName = 'WaffleCell'\n\nexport default pure(WaffleCell)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { pure } from '@nivo/recompose'\n\nconst WaffleCellHtml = ({\n    position,\n    size,\n    x,\n    y,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    data,\n    onHover,\n    onLeave,\n    onClick,\n}) => {\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                top: y,\n                left: x,\n                width: size,\n                height: size,\n                background: color,\n                opacity,\n                boxSizing: 'content-box',\n                borderStyle: 'solid',\n                borderWidth: `${borderWidth}px`,\n                borderColor,\n            }}\n            onMouseEnter={onHover}\n            onMouseMove={onHover}\n            onMouseLeave={onLeave}\n            onClick={event => {\n                onClick({ position, color, x, y, data }, event)\n            }}\n        />\n    )\n}\n\nWaffleCellHtml.propTypes = {\n    position: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    data: PropTypes.object.isRequired,\n    onHover: PropTypes.func.isRequired,\n    onLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\nWaffleCellHtml.defaultProps = {\n    data: {},\n}\nWaffleCellHtml.displayName = 'WaffleCellHtml'\n\nexport default pure(WaffleCellHtml)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { defsPropTypes, noop } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { LegendPropShape } from '@nivo/legends'\nimport WaffleCell from './WaffleCell'\nimport WaffleCellHtml from './WaffleCellHtml'\n\nconst commonPropTypes = {\n    total: PropTypes.number.isRequired,\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            value: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    hiddenIds: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n        .isRequired,\n\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n    fillDirection: PropTypes.oneOf(['top', 'right', 'bottom', 'left']).isRequired,\n    padding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    emptyColor: PropTypes.string.isRequired,\n    emptyOpacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    getBorderColor: PropTypes.func.isRequired, // computed\n\n    isInteractive: PropTypes.bool,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    tooltip: PropTypes.func,\n\n    cellSize: PropTypes.number.isRequired,\n    cells: PropTypes.array.isRequired,\n    origin: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired,\n    }).isRequired,\n}\n\nexport const WafflePropTypes = {\n    ...commonPropTypes,\n    cellComponent: PropTypes.func.isRequired,\n    role: PropTypes.string.isRequired,\n    ...defsPropTypes,\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n}\n\nexport const WaffleHtmlPropTypes = {\n    ...commonPropTypes,\n    cellComponent: PropTypes.func.isRequired,\n}\n\nexport const WaffleCanvasPropTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n}\n\nconst commonDefaultProps = {\n    hiddenIds: [],\n\n    fillDirection: 'bottom',\n    padding: 1,\n\n    colors: { scheme: 'nivo' },\n    emptyColor: '#cccccc',\n    emptyOpacity: 1,\n    borderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 1]] },\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n    onClick: noop,\n}\n\nexport const WaffleDefaultProps = {\n    ...commonDefaultProps,\n    cellComponent: WaffleCell,\n    role: 'img',\n    defs: [],\n    fill: [],\n    legends: [],\n}\n\nexport const WaffleHtmlDefaultProps = {\n    ...commonDefaultProps,\n    cellComponent: WaffleCellHtml,\n}\n\nexport const WaffleCanvasDefaultProps = {\n    ...commonDefaultProps,\n    legends: [],\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport range from 'lodash/range'\n\n/**\n * Computes optimal cell size according to dimensions/layout/padding.\n *\n * @param {number} width\n * @param {number} height\n * @param {number} rows\n * @param {number} columns\n * @param {number} padding\n *\n * @return {number}\n */\nexport const computeCellSize = (width, height, rows, columns, padding) => {\n    const sizeX = (width - (columns - 1) * padding) / columns\n    const sizeY = (height - (rows - 1) * padding) / rows\n\n    return Math.min(sizeX, sizeY)\n}\n\n/**\n * Computes empty cells according to dimensions/layout/padding.\n *\n * @param {number}                        width\n * @param {number}                        height\n * @param {number}                        rows\n * @param {number}                        columns\n * @param {'top'|'right'|'bottom'|'left'} fillDirection\n * @param {number}                        padding\n *\n * @return {{ cells: Array, cellSize: number, origin: { x: number, y: number } } }\n */\nexport const computeGrid = (width, height, rows, columns, fillDirection, padding) => {\n    const cellSize = computeCellSize(width, height, rows, columns, padding)\n\n    const cells = []\n    switch (fillDirection) {\n        case 'top':\n            range(rows).forEach(row => {\n                range(columns).forEach(column => {\n                    cells.push({\n                        position: row * columns + column,\n                        row,\n                        column,\n                        x: column * (cellSize + padding),\n                        y: row * (cellSize + padding),\n                    })\n                })\n            })\n            break\n\n        case 'bottom':\n            range(rows - 1, -1).forEach(row => {\n                range(columns).forEach(column => {\n                    cells.push({\n                        position: row * columns + column,\n                        row,\n                        column,\n                        x: column * (cellSize + padding),\n                        y: row * (cellSize + padding),\n                    })\n                })\n            })\n            break\n\n        case 'left':\n            range(columns).forEach(column => {\n                range(rows).forEach(row => {\n                    cells.push({\n                        position: row * columns + column,\n                        row,\n                        column,\n                        x: column * (cellSize + padding),\n                        y: row * (cellSize + padding),\n                    })\n                })\n            })\n            break\n\n        case 'right':\n            range(columns - 1, -1).forEach(column => {\n                range(rows - 1, -1).forEach(row => {\n                    cells.push({\n                        position: row * columns + column,\n                        row,\n                        column,\n                        x: column * (cellSize + padding),\n                        y: row * (cellSize + padding),\n                    })\n                })\n            })\n            break\n\n        default:\n            throw new Error(`Invalid fill direction provided: ${fillDirection}`)\n    }\n\n    const origin = {\n        x: (width - (cellSize * columns + padding * (columns - 1))) / 2,\n        y: (height - (cellSize * rows + padding * (rows - 1))) / 2,\n    }\n\n    return { cells, cellSize, origin }\n}\n\nexport const applyDataToGrid = (_cells, data) => {\n    const cells = _cells.map(cell => ({ ...cell }))\n\n    data.forEach(datum => {\n        range(datum.startAt, datum.endAt).forEach(position => {\n            const cell = cells[position]\n            if (cell !== undefined) {\n                cell.data = datum\n                cell.groupIndex = datum.groupIndex\n                cell.color = datum.color\n            }\n        })\n    })\n\n    return cells\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { withDimensions, withTheme, withMotion, bindDefs } from '@nivo/core'\nimport { getOrdinalColorScale, getInheritedColorGenerator } from '@nivo/colors'\nimport { compose, defaultProps, withPropsOnChange, withState, pure } from '@nivo/recompose'\nimport * as props from './props'\nimport { computeGrid } from './compute'\n\nconst commonEnhancers = [\n    withDimensions(),\n    withTheme(),\n    withMotion(),\n    withPropsOnChange(['colors'], ({ colors }) => ({\n        getColor: getOrdinalColorScale(colors, 'id'),\n    })),\n    withPropsOnChange(['borderColor', 'theme'], ({ borderColor, theme }) => ({\n        getBorderColor: getInheritedColorGenerator(borderColor, theme),\n    })),\n    withState('currentCell', 'setCurrentCell', null),\n    withPropsOnChange(['rows', 'columns', 'total'], ({ rows, columns, total }) => ({\n        unit: total / (rows * columns),\n    })),\n    withPropsOnChange(\n        ['width', 'height', 'rows', 'columns', 'fillDirection', 'padding'],\n        ({ width, height, rows, columns, fillDirection, padding }) => {\n            return computeGrid(width, height, rows, columns, fillDirection, padding)\n        }\n    ),\n    withPropsOnChange(\n        ['data', 'unit', 'getColor', 'hiddenIds'],\n        ({ data, unit, getColor, hiddenIds }) => {\n            let currentPosition = 0\n\n            return {\n                computedData: data.map((datum, groupIndex) => {\n                    if (!hiddenIds.includes(datum.id)) {\n                        const enhancedDatum = {\n                            ...datum,\n                            groupIndex,\n                            startAt: currentPosition,\n                            endAt: currentPosition + Math.round(datum.value / unit),\n                            color: getColor(datum),\n                        }\n\n                        currentPosition = enhancedDatum.endAt\n\n                        return enhancedDatum\n                    }\n\n                    return {\n                        ...datum,\n                        groupIndex,\n                        startAt: currentPosition,\n                        endAt: currentPosition,\n                        color: getColor(datum),\n                    }\n                }),\n            }\n        }\n    ),\n    withPropsOnChange(['computedData'], ({ computedData }) => ({\n        legendData: computedData.map(datum => ({\n            id: datum.id,\n            label: datum.id,\n            color: datum.color,\n            fill: datum.fill,\n        })),\n    })),\n]\n\nexport default Component => {\n    const implDefaultProps = props[`${Component.displayName}DefaultProps`]\n\n    switch (Component.displayName) {\n        case 'Waffle':\n            return compose(\n                ...[\n                    defaultProps(implDefaultProps),\n                    ...commonEnhancers,\n                    withMotion(),\n                    withPropsOnChange(\n                        ['computedData', 'defs', 'fill'],\n                        ({ computedData, defs, fill }) => ({\n                            defs: bindDefs(defs, computedData, fill, { targetKey: 'fill' }),\n                        })\n                    ),\n                    pure,\n                ]\n            )(Component)\n\n        case 'WaffleHtml':\n            return compose(\n                ...[defaultProps(implDefaultProps), ...commonEnhancers, withMotion(), pure]\n            )(Component)\n\n        case 'WaffleCanvas':\n            return compose(...[defaultProps(implDefaultProps), ...commonEnhancers, pure])(Component)\n    }\n\n    return Component\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst WaffleCellTooltip = ({\n    position,\n    row,\n    column,\n    color,\n    data,\n    theme,\n    tooltipFormat,\n    tooltip,\n}) => (\n    <BasicTooltip\n        id={data.label}\n        value={data.value}\n        enableChip={true}\n        color={color}\n        theme={theme}\n        format={tooltipFormat}\n        renderContent={\n            typeof tooltip === 'function'\n                ? tooltip.bind(null, {\n                      position,\n                      row,\n                      column,\n                      color,\n                      ...data,\n                  })\n                : null\n        }\n    />\n)\n\nWaffleCellTooltip.displayName = 'WaffleCellTooltip'\nWaffleCellTooltip.propTypes = {\n    position: PropTypes.number.isRequired,\n    row: PropTypes.number.isRequired,\n    column: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    data: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    tooltip: PropTypes.func,\n}\n\nexport default WaffleCellTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, Component, Fragment } from 'react'\nimport partial from 'lodash/partial'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { setDisplayName } from '@nivo/recompose'\nimport { LegacyContainer, SvgWrapper } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { WafflePropTypes } from './props'\nimport enhance from './enhance'\nimport { applyDataToGrid } from './compute'\nimport WaffleCellTooltip from './WaffleCellTooltip'\n\nexport class Waffle extends Component {\n    static propTypes = WafflePropTypes\n\n    handleCellHover = (showTooltip, cell, event) => {\n        const { setCurrentCell, theme, tooltipFormat, tooltip } = this.props\n\n        setCurrentCell(cell)\n\n        if (!cell.data) return\n\n        showTooltip(\n            <WaffleCellTooltip\n                position={cell.position}\n                row={cell.row}\n                column={cell.column}\n                color={cell.color}\n                data={cell.data}\n                theme={theme}\n                tooltipFormat={tooltipFormat}\n                tooltip={tooltip}\n            />,\n            event\n        )\n    }\n\n    handleCellLeave = hideTooltip => {\n        this.props.setCurrentCell(null)\n        hideTooltip()\n    }\n\n    render() {\n        const {\n            hiddenIds,\n\n            // dimensions\n            margin,\n            width,\n            height,\n            outerWidth,\n            outerHeight,\n\n            // styling\n            cellComponent,\n            emptyColor,\n            emptyOpacity,\n            borderWidth,\n            getBorderColor,\n            theme,\n            defs,\n\n            // motion\n            animate,\n            motionStiffness,\n            motionDamping,\n\n            // interactivity\n            isInteractive,\n            onClick,\n\n            // computed\n            cells,\n            cellSize,\n            origin,\n            computedData,\n            legendData,\n\n            legends,\n            role,\n        } = this.props\n\n        cells.forEach(cell => {\n            cell.color = emptyColor\n        })\n\n        return (\n            <LegacyContainer\n                isInteractive={isInteractive}\n                theme={theme}\n                animate={animate}\n                motionDamping={motionDamping}\n                motionStiffness={motionStiffness}\n            >\n                {({ showTooltip, hideTooltip }) => {\n                    const onHover = partial(this.handleCellHover, showTooltip)\n                    const onLeave = partial(this.handleCellLeave, hideTooltip)\n\n                    let cellsRender\n                    if (animate === true) {\n                        const springConfig = {\n                            stiffness: motionStiffness,\n                            damping: motionDamping,\n                        }\n\n                        cellsRender = (\n                            <TransitionMotion\n                                styles={computedData.map(datum => ({\n                                    key: datum.id,\n                                    data: datum,\n                                    style: {\n                                        startAt: spring(datum.startAt, springConfig),\n                                        endAt: spring(datum.endAt, springConfig),\n                                    },\n                                }))}\n                            >\n                                {interpolatedStyles => {\n                                    const computedCells = applyDataToGrid(\n                                        cells,\n                                        interpolatedStyles.map(s => ({\n                                            ...s.data,\n                                            startAt: Math.round(s.style.startAt),\n                                            endAt: Math.round(s.style.endAt),\n                                        })),\n                                        hiddenIds\n                                    )\n\n                                    return (\n                                        <Fragment>\n                                            {computedCells.map(cell =>\n                                                createElement(cellComponent, {\n                                                    key: cell.position,\n                                                    position: cell.position,\n                                                    size: cellSize,\n                                                    x: cell.x,\n                                                    y: cell.y,\n                                                    color: cell.color,\n                                                    fill: cell.data && cell.data.fill,\n                                                    opacity: cell.data ? 1 : emptyOpacity,\n                                                    borderWidth,\n                                                    borderColor: getBorderColor(cell),\n                                                    data: cell.data,\n                                                    onHover: partial(onHover, cell),\n                                                    onLeave,\n                                                    onClick,\n                                                })\n                                            )}\n                                        </Fragment>\n                                    )\n                                }}\n                            </TransitionMotion>\n                        )\n                    } else {\n                        const computedCells = applyDataToGrid(cells, computedData, hiddenIds)\n\n                        cellsRender = (\n                            <Fragment>\n                                {computedCells.map(cell =>\n                                    createElement(cellComponent, {\n                                        key: cell.position,\n                                        position: cell.position,\n                                        size: cellSize,\n                                        x: cell.x,\n                                        y: cell.y,\n                                        color: cell.color,\n                                        fill: cell.data && cell.data.fill,\n                                        opacity: cell.data ? 1 : emptyOpacity,\n                                        borderWidth,\n                                        borderColor: getBorderColor(cell),\n                                        data: cell.data,\n                                        onHover: partial(onHover, cell),\n                                        onLeave,\n                                        onClick,\n                                    })\n                                )}\n                            </Fragment>\n                        )\n                    }\n\n                    return (\n                        <SvgWrapper\n                            width={outerWidth}\n                            height={outerHeight}\n                            margin={margin}\n                            defs={defs}\n                            theme={theme}\n                            role={role}\n                        >\n                            <g transform={`translate(${origin.x}, ${origin.y})`}>{cellsRender}</g>\n                            {legends.map((legend, i) => (\n                                <BoxLegendSvg\n                                    key={i}\n                                    {...legend}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    theme={theme}\n                                />\n                            ))}\n                        </SvgWrapper>\n                    )\n                }}\n            </LegacyContainer>\n        )\n    }\n}\n\nWaffle.displayName = 'Waffle'\n\nexport default setDisplayName(Waffle.displayName)(enhance(Waffle))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Waffle from './Waffle'\n\nconst ResponsiveWaffle = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Waffle width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveWaffle\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, Component, Fragment } from 'react'\nimport partial from 'lodash/partial'\nimport { setDisplayName } from '@nivo/recompose'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { LegacyContainer } from '@nivo/core'\nimport enhance from './enhance'\nimport { WaffleHtmlPropTypes } from './props'\nimport { applyDataToGrid } from './compute'\nimport WaffleCellTooltip from './WaffleCellTooltip'\n\nclass WaffleHtml extends Component {\n    static propTypes = WaffleHtmlPropTypes\n\n    handleCellHover = (showTooltip, cell, event) => {\n        const { setCurrentCell, theme, tooltipFormat, tooltip } = this.props\n\n        setCurrentCell(cell)\n\n        if (!cell.data) return\n\n        showTooltip(\n            <WaffleCellTooltip\n                position={cell.position}\n                row={cell.row}\n                column={cell.column}\n                color={cell.color}\n                data={cell.data}\n                theme={theme}\n                tooltipFormat={tooltipFormat}\n                tooltip={tooltip}\n            />,\n            event\n        )\n    }\n\n    handleCellLeave = hideTooltip => {\n        this.props.setCurrentCell(null)\n        hideTooltip()\n    }\n\n    render() {\n        const {\n            // dimensions\n            margin,\n            outerWidth,\n            outerHeight,\n\n            // styling\n            cellComponent,\n            emptyColor,\n            emptyOpacity,\n            borderWidth,\n            getBorderColor,\n            theme,\n\n            // motion\n            animate,\n            motionStiffness,\n            motionDamping,\n\n            // interactivity\n            isInteractive,\n            onClick,\n\n            // computed\n            cells,\n            cellSize,\n            origin,\n            computedData,\n        } = this.props\n\n        cells.forEach(cell => {\n            cell.color = emptyColor\n        })\n\n        return (\n            <LegacyContainer\n                isInteractive={isInteractive}\n                theme={theme}\n                animate={animate}\n                motionDamping={motionDamping}\n                motionStiffness={motionStiffness}\n            >\n                {({ showTooltip, hideTooltip }) => {\n                    const onHover = partial(this.handleCellHover, showTooltip)\n                    const onLeave = partial(this.handleCellLeave, hideTooltip)\n\n                    let cellsRender\n                    if (animate === true) {\n                        const springConfig = {\n                            stiffness: motionStiffness,\n                            damping: motionDamping,\n                        }\n\n                        cellsRender = (\n                            <TransitionMotion\n                                styles={computedData.map(datum => ({\n                                    key: datum.id,\n                                    data: datum,\n                                    style: {\n                                        startAt: spring(datum.startAt, springConfig),\n                                        endAt: spring(datum.endAt, springConfig),\n                                    },\n                                }))}\n                            >\n                                {interpolatedStyles => {\n                                    const computedCells = applyDataToGrid(\n                                        cells,\n                                        interpolatedStyles.map(s => ({\n                                            ...s.data,\n                                            startAt: Math.round(s.style.startAt),\n                                            endAt: Math.round(s.style.endAt),\n                                        }))\n                                    )\n\n                                    return (\n                                        <Fragment>\n                                            {computedCells.map(cell =>\n                                                createElement(cellComponent, {\n                                                    key: cell.position,\n                                                    position: cell.position,\n                                                    size: cellSize,\n                                                    x: cell.x,\n                                                    y: cell.y,\n                                                    color: cell.color,\n                                                    fill: cell.data && cell.data.fill,\n                                                    opacity: cell.data ? 1 : emptyOpacity,\n                                                    borderWidth,\n                                                    borderColor: getBorderColor(cell),\n                                                    data: cell.data,\n                                                    onHover: partial(onHover, cell),\n                                                    onLeave,\n                                                    onClick,\n                                                })\n                                            )}\n                                        </Fragment>\n                                    )\n                                }}\n                            </TransitionMotion>\n                        )\n                    } else {\n                        const computedCells = applyDataToGrid(cells, computedData)\n\n                        cellsRender = (\n                            <Fragment>\n                                {computedCells.map(cell =>\n                                    createElement(cellComponent, {\n                                        key: cell.position,\n                                        position: cell.position,\n                                        size: cellSize,\n                                        x: cell.x,\n                                        y: cell.y,\n                                        color: cell.color,\n                                        fill: cell.data && cell.data.fill,\n                                        opacity: cell.data ? 1 : emptyOpacity,\n                                        borderWidth,\n                                        borderColor: getBorderColor(cell),\n                                        data: cell.data,\n                                        onHover: partial(onHover, cell),\n                                        onLeave,\n                                        onClick,\n                                    })\n                                )}\n                            </Fragment>\n                        )\n                    }\n\n                    return (\n                        <div\n                            style={{\n                                position: 'relative',\n                                width: outerWidth,\n                                height: outerHeight,\n                            }}\n                        >\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    top: margin.top + origin.y,\n                                    left: margin.left + origin.x,\n                                }}\n                            >\n                                {cellsRender}\n                            </div>\n                        </div>\n                    )\n                }}\n            </LegacyContainer>\n        )\n    }\n}\n\nWaffleHtml.displayName = 'WaffleHtml'\n\nexport default setDisplayName(WaffleHtml.displayName)(enhance(WaffleHtml))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport WaffleHtml from './WaffleHtml'\n\nconst ResponsiveWaffleHtml = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <WaffleHtml width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveWaffleHtml\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Component } from 'react'\nimport range from 'lodash/range'\nimport { setDisplayName } from '@nivo/recompose'\nimport { isCursorInRect, getRelativeCursor, LegacyContainer } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport enhance from './enhance'\nimport { WaffleCanvasPropTypes } from './props'\nimport WaffleCellTooltip from './WaffleCellTooltip'\n\nconst findCellUnderCursor = (cells, cellSize, origin, margin, x, y) =>\n    cells.find(cell =>\n        isCursorInRect(\n            cell.x + origin.x + margin.left,\n            cell.y + origin.y + margin.top,\n            cellSize,\n            cellSize,\n            x,\n            y\n        )\n    )\n\nclass WaffleCanvas extends Component {\n    static propTypes = WaffleCanvasPropTypes\n\n    componentDidMount() {\n        this.ctx = this.surface.getContext('2d')\n        this.draw(this.props)\n    }\n\n    componentDidUpdate() {\n        this.ctx = this.surface.getContext('2d')\n        this.draw(this.props)\n    }\n\n    draw(props) {\n        const {\n            pixelRatio,\n\n            margin,\n            width,\n            height,\n            outerWidth,\n            outerHeight,\n\n            getColor,\n            emptyColor,\n            emptyOpacity,\n            borderWidth,\n            getBorderColor,\n\n            cells,\n            cellSize,\n            origin,\n            computedData,\n            legendData,\n\n            legends,\n\n            theme,\n        } = props\n\n        this.surface.width = outerWidth * pixelRatio\n        this.surface.height = outerHeight * pixelRatio\n\n        this.ctx.scale(pixelRatio, pixelRatio)\n        this.ctx.fillStyle = theme.background\n        this.ctx.fillRect(0, 0, outerWidth, outerHeight)\n        this.ctx.translate(margin.left, margin.top)\n\n        cells.forEach(cell => {\n            cell.color = emptyColor\n        })\n\n        computedData.forEach(datum => {\n            range(datum.startAt, datum.endAt).forEach(position => {\n                const cell = cells[position]\n                if (cell !== undefined) {\n                    cell.data = datum\n                    cell.groupIndex = datum.groupIndex\n                    cell.color = getColor(datum)\n                }\n            })\n        })\n\n        cells.forEach(cell => {\n            this.ctx.save()\n            this.ctx.globalAlpha = cell.data ? 1 : emptyOpacity\n\n            this.ctx.fillStyle = cell.color\n            this.ctx.fillRect(cell.x + origin.x, cell.y + origin.y, cellSize, cellSize)\n\n            if (borderWidth > 0) {\n                this.ctx.strokeStyle = getBorderColor(cell)\n                this.ctx.lineWidth = borderWidth\n                this.ctx.strokeRect(cell.x + origin.x, cell.y + origin.y, cellSize, cellSize)\n            }\n\n            this.ctx.restore()\n        })\n\n        legends.forEach(legend => {\n            renderLegendToCanvas(this.ctx, {\n                ...legend,\n                data: legendData,\n                containerWidth: width,\n                containerHeight: height,\n                theme,\n            })\n        })\n    }\n\n    handleMouseHover = (showTooltip, hideTooltip) => event => {\n        const { isInteractive, margin, theme, cells, cellSize, origin, tooltipFormat, tooltip } =\n            this.props\n\n        if (!isInteractive || !cells) return\n\n        const [x, y] = getRelativeCursor(this.surface, event)\n        const cell = findCellUnderCursor(cells, cellSize, origin, margin, x, y)\n\n        if (cell !== undefined && cell.data) {\n            showTooltip(\n                <WaffleCellTooltip\n                    position={cell.position}\n                    row={cell.row}\n                    column={cell.column}\n                    color={cell.color}\n                    data={cell.data}\n                    theme={theme}\n                    tooltipFormat={tooltipFormat}\n                    tooltip={tooltip}\n                />,\n                event\n            )\n        } else {\n            hideTooltip()\n        }\n    }\n\n    handleMouseLeave = hideTooltip => () => {\n        if (this.props.isInteractive !== true) return\n\n        hideTooltip()\n    }\n\n    handleClick = event => {\n        const { isInteractive, margin, onClick, cells, cellSize, origin } = this.props\n\n        if (!isInteractive || !cells) return\n\n        const [x, y] = getRelativeCursor(this.surface, event)\n        const cell = findCellUnderCursor(cells, cellSize, origin, margin, x, y)\n        if (cell !== undefined) onClick(cell, event)\n    }\n\n    render() {\n        const { outerWidth, outerHeight, pixelRatio, isInteractive, theme } = this.props\n\n        return (\n            <LegacyContainer isInteractive={isInteractive} theme={theme} animate={false}>\n                {({ showTooltip, hideTooltip }) => (\n                    <canvas\n                        ref={surface => {\n                            this.surface = surface\n                        }}\n                        width={outerWidth * pixelRatio}\n                        height={outerHeight * pixelRatio}\n                        style={{\n                            width: outerWidth,\n                            height: outerHeight,\n                        }}\n                        onMouseEnter={this.handleMouseHover(showTooltip, hideTooltip)}\n                        onMouseMove={this.handleMouseHover(showTooltip, hideTooltip)}\n                        onMouseLeave={this.handleMouseLeave(hideTooltip)}\n                        onClick={this.handleClick}\n                    />\n                )}\n            </LegacyContainer>\n        )\n    }\n}\n\nWaffleCanvas.displayName = 'WaffleCanvas'\n\nexport default setDisplayName(WaffleCanvas.displayName)(enhance(WaffleCanvas))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport WaffleCanvas from './WaffleCanvas'\n\nconst ResponsiveWaffleCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <WaffleCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveWaffleCanvas\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @constructor\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\n  this.__views__ = [];\n}\n\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nmodule.exports = LazyWrapper;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\n */\nfunction LodashWrapper(value, chainAll) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__chain__ = !!chainAll;\n  this.__index__ = 0;\n  this.__values__ = undefined;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n","/**\n * The function whose prototype chain sequence wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nmodule.exports = baseLodash;\n","var identity = require('./identity'),\n    metaMap = require('./_metaMap');\n\n/**\n * The base implementation of `setData` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar baseSetData = !metaMap ? identity : function(func, data) {\n  metaMap.set(func, data);\n  return func;\n};\n\nmodule.exports = baseSetData;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array that is the composition of partially applied arguments,\n * placeholders, and provided arguments into a single array of arguments.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to prepend to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgs(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersLength = holders.length,\n      leftIndex = -1,\n      leftLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(leftLength + rangeLength),\n      isUncurried = !isCurried;\n\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n  while (++argsIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[holders[argsIndex]] = args[argsIndex];\n    }\n  }\n  while (rangeLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n  return result;\n}\n\nmodule.exports = composeArgs;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This function is like `composeArgs` except that the arguments composition\n * is tailored for `_.partialRight`.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to append to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgsRight(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersIndex = -1,\n      holdersLength = holders.length,\n      rightIndex = -1,\n      rightLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(rangeLength + rightLength),\n      isUncurried = !isCurried;\n\n  while (++argsIndex < rangeLength) {\n    result[argsIndex] = args[argsIndex];\n  }\n  var offset = argsIndex;\n  while (++rightIndex < rightLength) {\n    result[offset + rightIndex] = partials[rightIndex];\n  }\n  while (++holdersIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[offset + holders[holdersIndex]] = args[argsIndex++];\n    }\n  }\n  return result;\n}\n\nmodule.exports = composeArgsRight;\n","/**\n * Gets the number of `placeholder` occurrences in `array`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} placeholder The placeholder to search for.\n * @returns {number} Returns the placeholder count.\n */\nfunction countHolders(array, placeholder) {\n  var length = array.length,\n      result = 0;\n\n  while (length--) {\n    if (array[length] === placeholder) {\n      ++result;\n    }\n  }\n  return result;\n}\n\nmodule.exports = countHolders;\n","var createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the optional `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createBind(func, bitmask, thisArg) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, arguments);\n  }\n  return wrapper;\n}\n\nmodule.exports = createBind;\n","var baseCreate = require('./_baseCreate'),\n    isObject = require('./isObject');\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtor;\n","var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    createHybrid = require('./_createHybrid'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createCurry;\n","var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    countHolders = require('./_countHolders'),\n    createCtor = require('./_createCtor'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    reorder = require('./_reorder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybrid;\n","var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the `this` binding\n * of `thisArg` and `partials` prepended to the arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to\n *  the new function.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createPartial(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength),\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    return apply(fn, isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createPartial;\n","var isLaziable = require('./_isLaziable'),\n    setData = require('./_setData'),\n    setWrapToString = require('./_setWrapToString');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * Creates a function that wraps `func` to continue currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {Function} wrapFunc The function to create the `func` wrapper.\n * @param {*} placeholder The placeholder value.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n  var isCurry = bitmask & WRAP_CURRY_FLAG,\n      newHolders = isCurry ? holders : undefined,\n      newHoldersRight = isCurry ? undefined : holders,\n      newPartials = isCurry ? partials : undefined,\n      newPartialsRight = isCurry ? undefined : partials;\n\n  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n  }\n  var newData = [\n    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n    newHoldersRight, argPos, ary, arity\n  ];\n\n  var result = wrapFunc.apply(undefined, newData);\n  if (isLaziable(func)) {\n    setData(result, newData);\n  }\n  result.placeholder = placeholder;\n  return setWrapToString(result, func, bitmask);\n}\n\nmodule.exports = createRecurry;\n","var baseSetData = require('./_baseSetData'),\n    createBind = require('./_createBind'),\n    createCurry = require('./_createCurry'),\n    createHybrid = require('./_createHybrid'),\n    createPartial = require('./_createPartial'),\n    getData = require('./_getData'),\n    mergeData = require('./_mergeData'),\n    setData = require('./_setData'),\n    setWrapToString = require('./_setWrapToString'),\n    toInteger = require('./toInteger');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that either curries or invokes `func` with optional\n * `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags.\n *    1 - `_.bind`\n *    2 - `_.bindKey`\n *    4 - `_.curry` or `_.curryRight` of a bound function\n *    8 - `_.curry`\n *   16 - `_.curryRight`\n *   32 - `_.partial`\n *   64 - `_.partialRight`\n *  128 - `_.rearg`\n *  256 - `_.ary`\n *  512 - `_.flip`\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to be partially applied.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n  if (!isBindKey && typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var length = partials ? partials.length : 0;\n  if (!length) {\n    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n    partials = holders = undefined;\n  }\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n  arity = arity === undefined ? arity : toInteger(arity);\n  length -= holders ? holders.length : 0;\n\n  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n    var partialsRight = partials,\n        holdersRight = holders;\n\n    partials = holders = undefined;\n  }\n  var data = isBindKey ? undefined : getData(func);\n\n  var newData = [\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n    argPos, ary, arity\n  ];\n\n  if (data) {\n    mergeData(newData, data);\n  }\n  func = newData[0];\n  bitmask = newData[1];\n  thisArg = newData[2];\n  partials = newData[3];\n  holders = newData[4];\n  arity = newData[9] = newData[9] === undefined\n    ? (isBindKey ? 0 : func.length)\n    : nativeMax(newData[9] - length, 0);\n\n  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n  }\n  if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n    var result = createBind(func, bitmask, thisArg);\n  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n    result = createCurry(func, bitmask, arity);\n  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n    result = createPartial(func, bitmask, thisArg, partials);\n  } else {\n    result = createHybrid.apply(undefined, newData);\n  }\n  var setter = data ? baseSetData : setData;\n  return setWrapToString(setter(result, newData), func, bitmask);\n}\n\nmodule.exports = createWrap;\n","var metaMap = require('./_metaMap'),\n    noop = require('./noop');\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n","var realNames = require('./_realNames');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nmodule.exports = getFuncName;\n","/**\n * Gets the argument placeholder value for `func`.\n *\n * @private\n * @param {Function} func The function to inspect.\n * @returns {*} Returns the placeholder value.\n */\nfunction getHolder(func) {\n  var object = func;\n  return object.placeholder;\n}\n\nmodule.exports = getHolder;\n","/** Used to match wrap detail comments. */\nvar reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n    reSplitDetails = /,? & /;\n\n/**\n * Extracts wrapper details from the `source` body comment.\n *\n * @private\n * @param {string} source The source to inspect.\n * @returns {Array} Returns the wrapper details.\n */\nfunction getWrapDetails(source) {\n  var match = source.match(reWrapDetails);\n  return match ? match[1].split(reSplitDetails) : [];\n}\n\nmodule.exports = getWrapDetails;\n","/** Used to match wrap detail comments. */\nvar reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/;\n\n/**\n * Inserts wrapper `details` in a comment at the top of the `source` body.\n *\n * @private\n * @param {string} source The source to modify.\n * @returns {Array} details The details to insert.\n * @returns {string} Returns the modified source.\n */\nfunction insertWrapDetails(source, details) {\n  var length = details.length;\n  if (!length) {\n    return source;\n  }\n  var lastIndex = length - 1;\n  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n  details = details.join(length > 2 ? ', ' : ' ');\n  return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n}\n\nmodule.exports = insertWrapDetails;\n","var LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n","var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Merges the function metadata of `source` into `data`.\n *\n * Merging metadata reduces the number of wrappers used to invoke a function.\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n * may be applied regardless of execution order. Methods like `_.ary` and\n * `_.rearg` modify function arguments, making the order in which they are\n * executed important, preventing the merging of metadata. However, we make\n * an exception for a safe combined case where curried functions have `_.ary`\n * and or `_.rearg` applied.\n *\n * @private\n * @param {Array} data The destination metadata.\n * @param {Array} source The source metadata.\n * @returns {Array} Returns `data`.\n */\nfunction mergeData(data, source) {\n  var bitmask = data[1],\n      srcBitmask = source[1],\n      newBitmask = bitmask | srcBitmask,\n      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n  var isCombo =\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n  // Exit early if metadata can't be merged.\n  if (!(isCommon || isCombo)) {\n    return data;\n  }\n  // Use source `thisArg` if available.\n  if (srcBitmask & WRAP_BIND_FLAG) {\n    data[2] = source[2];\n    // Set when currying a bound function.\n    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n  }\n  // Compose partial arguments.\n  var value = source[3];\n  if (value) {\n    var partials = data[3];\n    data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n  }\n  // Compose partial right arguments.\n  value = source[5];\n  if (value) {\n    partials = data[5];\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n  }\n  // Use source `argPos` if available.\n  value = source[7];\n  if (value) {\n    data[7] = value;\n  }\n  // Use source `ary` if it's smaller.\n  if (srcBitmask & WRAP_ARY_FLAG) {\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n  }\n  // Use source `arity` if one is not provided.\n  if (data[9] == null) {\n    data[9] = source[9];\n  }\n  // Use source `func` and merge bitmasks.\n  data[0] = source[0];\n  data[1] = newBitmask;\n\n  return data;\n}\n\nmodule.exports = mergeData;\n","var WeakMap = require('./_WeakMap');\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nmodule.exports = metaMap;\n","/** Used to lookup unminified function names. */\nvar realNames = {};\n\nmodule.exports = realNames;\n","var copyArray = require('./_copyArray'),\n    isIndex = require('./_isIndex');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Reorder `array` according to the specified indexes where the element at\n * the first index is assigned as the first element, the element at\n * the second index is assigned as the second element, and so on.\n *\n * @private\n * @param {Array} array The array to reorder.\n * @param {Array} indexes The arranged array indexes.\n * @returns {Array} Returns `array`.\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n      length = nativeMin(indexes.length, arrLength),\n      oldArray = copyArray(array);\n\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\n\nmodule.exports = reorder;\n","/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value === placeholder || value === PLACEHOLDER) {\n      array[index] = PLACEHOLDER;\n      result[resIndex++] = index;\n    }\n  }\n  return result;\n}\n\nmodule.exports = replaceHolders;\n","var baseSetData = require('./_baseSetData'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets metadata for `func`.\n *\n * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n * period of time, it will trip its breaker and transition to an identity\n * function to avoid garbage collection pauses in V8. See\n * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n * for more details.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar setData = shortOut(baseSetData);\n\nmodule.exports = setData;\n","var getWrapDetails = require('./_getWrapDetails'),\n    insertWrapDetails = require('./_insertWrapDetails'),\n    setToString = require('./_setToString'),\n    updateWrapDetails = require('./_updateWrapDetails');\n\n/**\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n * with wrapper details in a comment at the top of the source body.\n *\n * @private\n * @param {Function} wrapper The function to modify.\n * @param {Function} reference The reference function.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Function} Returns `wrapper`.\n */\nfunction setWrapToString(wrapper, reference, bitmask) {\n  var source = (reference + '');\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n}\n\nmodule.exports = setWrapToString;\n","var arrayEach = require('./_arrayEach'),\n    arrayIncludes = require('./_arrayIncludes');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256,\n    WRAP_FLIP_FLAG = 512;\n\n/** Used to associate wrap methods with their bit flags. */\nvar wrapFlags = [\n  ['ary', WRAP_ARY_FLAG],\n  ['bind', WRAP_BIND_FLAG],\n  ['bindKey', WRAP_BIND_KEY_FLAG],\n  ['curry', WRAP_CURRY_FLAG],\n  ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n  ['flip', WRAP_FLIP_FLAG],\n  ['partial', WRAP_PARTIAL_FLAG],\n  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n  ['rearg', WRAP_REARG_FLAG]\n];\n\n/**\n * Updates wrapper `details` based on `bitmask` flags.\n *\n * @private\n * @returns {Array} details The details to modify.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Array} Returns `details`.\n */\nfunction updateWrapDetails(details, bitmask) {\n  arrayEach(wrapFlags, function(pair) {\n    var value = '_.' + pair[0];\n    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n      details.push(value);\n    }\n  });\n  return details.sort();\n}\n\nmodule.exports = updateWrapDetails;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    copyArray = require('./_copyArray');\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  if (wrapper instanceof LazyWrapper) {\n    return wrapper.clone();\n  }\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n  result.__actions__ = copyArray(wrapper.__actions__);\n  result.__index__  = wrapper.__index__;\n  result.__values__ = wrapper.__values__;\n  return result;\n}\n\nmodule.exports = wrapperClone;\n","var baseRest = require('./_baseRest'),\n    createWrap = require('./_createWrap'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with `partials` prepended to the\n * arguments it receives. This method is like `_.bind` except it does **not**\n * alter the `this` binding.\n *\n * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 0.2.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var sayHelloTo = _.partial(greet, 'hello');\n * sayHelloTo('fred');\n * // => 'hello fred'\n *\n * // Partially applied with placeholders.\n * var greetFred = _.partial(greet, _, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n */\nvar partial = baseRest(function(func, partials) {\n  var holders = replaceHolders(partials, getHolder(partial));\n  return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n});\n\n// Assign default placeholders.\npartial.placeholder = {};\n\nmodule.exports = partial;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseLodash = require('./_baseLodash'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike'),\n    wrapperClone = require('./_wrapperClone');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nmodule.exports = lodash;\n"],"names":["WaffleCell","position","size","x","y","color","fill","opacity","borderWidth","borderColor","data","onHover","onLeave","onClick","_jsx","width","height","strokeWidth","stroke","onMouseEnter","onMouseMove","onMouseLeave","e","event","propTypes","PropTypes","defaultProps","displayName","pure","WaffleCellHtml","style","top","left","background","boxSizing","borderStyle","commonPropTypes","total","id","isRequired","label","value","hiddenIds","rows","columns","fillDirection","padding","colors","ordinalColorsPropType","emptyColor","emptyOpacity","inheritedColorPropType","getBorderColor","isInteractive","tooltipFormat","tooltip","cellSize","cells","origin","WafflePropTypes","cellComponent","role","defsPropTypes","legends","LegendPropShape","WaffleHtmlPropTypes","WaffleCanvasPropTypes","pixelRatio","commonDefaultProps","scheme","from","modifiers","defs","noop","WaffleDefaultProps","WaffleHtmlDefaultProps","WaffleCanvasDefaultProps","window","devicePixelRatio","applyDataToGrid","_cells","map","cell","forEach","range","datum","startAt","endAt","groupIndex","commonEnhancers","withDimensions","withTheme","withMotion","withPropsOnChange","getColor","getOrdinalColorScale","theme","getInheritedColorGenerator","withState","unit","sizeX","sizeY","Math","min","push","row","column","Error","computeGrid","currentPosition","computedData","includes","enhancedDatum","round","legendData","Component","implDefaultProps","props","compose","bindDefs","targetKey","WaffleCellTooltip","BasicTooltip","enableChip","format","renderContent","bind","func","Waffle","handleCellHover","showTooltip","_this","setCurrentCell","handleCellLeave","hideTooltip","render","this","margin","outerWidth","outerHeight","animate","motionStiffness","motionDamping","LegacyContainer","cellsRender","partial","_this2","springConfig","stiffness","damping","TransitionMotion","styles","key","spring","computedCells","interpolatedStyles","s","Fragment","createElement","_jsxs","SvgWrapper","transform","legend","i","BoxLegendSvg","containerWidth","containerHeight","setDisplayName","enhance","ResponsiveWaffle","ResponsiveWrapper","WaffleHtml","ResponsiveWaffleHtml","findCellUnderCursor","find","isCursorInRect","WaffleCanvas","handleMouseHover","getRelativeCursor","surface","handleMouseLeave","handleClick","componentDidMount","ctx","getContext","draw","componentDidUpdate","scale","fillStyle","fillRect","translate","save","globalAlpha","strokeStyle","lineWidth","strokeRect","restore","renderLegendToCanvas","ref","_this3","ResponsiveWaffleCanvas","baseCreate","baseLodash","LazyWrapper","__wrapped__","__actions__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","prototype","constructor","module","exports","LodashWrapper","chainAll","__chain__","__index__","__values__","undefined","identity","metaMap","baseSetData","set","nativeMax","max","args","partials","holders","isCurried","argsIndex","argsLength","length","holdersLength","leftIndex","leftLength","rangeLength","result","Array","isUncurried","holdersIndex","rightIndex","rightLength","offset","array","placeholder","createCtor","root","bitmask","thisArg","isBind","Ctor","wrapper","fn","apply","arguments","isObject","thisBinding","createHybrid","createRecurry","getHolder","replaceHolders","arity","index","composeArgs","composeArgsRight","countHolders","reorder","partialsRight","holdersRight","argPos","ary","isAry","isBindKey","isFlip","holdersCount","newHolders","reverse","isLaziable","setData","setWrapToString","wrapFunc","isCurry","newData","createBind","createCurry","createPartial","getData","mergeData","toInteger","TypeError","get","realNames","hasOwnProperty","Object","name","call","otherFunc","reWrapDetails","reSplitDetails","source","match","split","reWrapComment","details","lastIndex","join","replace","getFuncName","lodash","funcName","other","PLACEHOLDER","WRAP_ARY_FLAG","nativeMin","srcBitmask","newBitmask","isCommon","isCombo","WeakMap","copyArray","isIndex","indexes","arrLength","oldArray","resIndex","shortOut","getWrapDetails","insertWrapDetails","setToString","updateWrapDetails","reference","arrayEach","arrayIncludes","wrapFlags","pair","sort","clone","baseRest","createWrap","toFinite","remainder","isArray","isObjectLike","wrapperClone"],"sourceRoot":""}