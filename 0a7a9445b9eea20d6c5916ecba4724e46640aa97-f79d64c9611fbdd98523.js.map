{"version":3,"file":"0a7a9445b9eea20d6c5916ecba4724e46640aa97-f79d64c9611fbdd98523.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/arc.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/./src/data/components/radar/mapper.ts","webpack://nivo-website/./src/data/components/radar/props.ts","webpack://nivo-website/../src/svg/symbols/SymbolTriangle.tsx","webpack://nivo-website/../src/defaults.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/svg/ContinuousColorsLegendSvg.tsx","webpack://nivo-website/../src/svg/AnchoredContinuousColorsLegendSvg.tsx","webpack://nivo-website/../src/svg/LegendSvgItem.tsx","webpack://nivo-website/../src/svg/symbols/SymbolCircle.tsx","webpack://nivo-website/../src/svg/symbols/SymbolDiamond.tsx","webpack://nivo-website/../src/svg/symbols/SymbolSquare.tsx","webpack://nivo-website/../src/svg/LegendSvg.tsx","webpack://nivo-website/../src/svg/BoxLegendSvg.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../node_modules/d3-shape/src/curve/radial.js","webpack://nivo-website/../node_modules/d3-shape/src/lineRadial.js","webpack://nivo-website/../src/RadarLayer.tsx","webpack://nivo-website/../src/RadarGridLabels.tsx","webpack://nivo-website/../src/RadarGridLevels.tsx","webpack://nivo-website/../src/RadarGrid.tsx","webpack://nivo-website/../src/RadarSlice.tsx","webpack://nivo-website/../src/RadarSlices.tsx","webpack://nivo-website/../src/RadarDots.tsx","webpack://nivo-website/../src/RadarGridLabel.tsx","webpack://nivo-website/../src/RadarSliceTooltip.tsx","webpack://nivo-website/../src/Radar.tsx","webpack://nivo-website/../src/ResponsiveRadar.tsx"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport { abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau } from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0,\n      y10 = y1 - y0,\n      x32 = x3 - x2,\n      y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n} // Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\n\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00; // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function () {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n    if (!context) context = buffer = path(); // Ensure that the outer radius is always larger than the inner radius.\n\n    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?\n\n    if (!(r1 > epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    } // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = ap > epsilon && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10); // Apply rounded corners?\n\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc; // Restrict the corner radius according to the sector angle.\n\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      } // Is the sector collapsed to a line?\n\n\n      if (!(da1 > epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      } // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      } // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function () {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function (_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function (_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function (_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function (_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n}","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import { settingsMapper, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper({\n    valueFormat: mapFormat,\n    dotLabel: (value: string) => {\n        if (value === `p => \\`\\${p.key}: \\${p.value}\\``) return (p: any) => `${p.key}: ${p.value}`\n        if (value === `p => \\`\\${p.index}: \\${p.value}\\``)\n            return (p: any) => `${p.index}: ${p.value}`\n        return value\n    },\n})\n","import { closedCurvePropKeys } from '@nivo/core'\nimport { svgDefaultProps } from '@nivo/radar'\nimport {\n    themeProperty,\n    motionProperties,\n    groupProperties,\n    defsProperties,\n} from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    ordinalColors,\n    blendMode,\n    isInteractive,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg', 'api']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: 'Datum[]',\n        required: true,\n        help: 'Chart data.',\n        description: `\n            For example, given this config:\n            \\`\\`\\`\n            [\n                { language: 'javascript', john: 12, sarah: 32, bob: 27 },\n                { language: 'golang', john: 25, sarah: 15, bob: 3 },\n                { language: 'python', john: 5, sarah: 22, bob: 31 },\n                { language: 'java', john: 19, sarah: 17, bob: 9 }\n            ]\n            keys: ['john', 'sarah', 'bob']\n            indexBy: 'language'\n            \\`\\`\\`\n            We'll have a radar chart representing programing\n            skills for each user by language\n            (3 layers and 4 dimensions).\n        `,\n        flavors: allFlavors,\n    },\n    {\n        key: 'indexBy',\n        group: 'Base',\n        type: 'string',\n        required: true,\n        help: 'Key to use to index the data.',\n        description: `\n            Key to use to index the data, this key\n            must exist in each data item.\n        `,\n        flavors: allFlavors,\n    },\n    {\n        key: 'keys',\n        group: 'Base',\n        type: 'string[]',\n        required: true,\n        help: 'Keys to use to determine each serie.',\n        description: `\n            Keys to use to determine each serie.\n            Those keys should exist in each data item.\n        `,\n        flavors: allFlavors,\n    },\n    {\n        key: 'maxValue',\n        group: 'Base',\n        type: `number | 'auto'`,\n        required: false,\n        help: 'Maximum value.',\n        description: `\n            Maximum value, if 'auto',\n            will use max value from\n            the provided data.\n        `,\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.maxValue,\n        control: {\n            type: 'switchableRange',\n            disabledValue: 'auto',\n            defaultValue: 200,\n            min: 0,\n            max: 1000,\n        },\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | (value: number) => string',\n        required: false,\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        flavors: allFlavors,\n        control: { type: 'valueFormat' },\n    },\n    {\n        key: 'curve',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use\n            for the line generator.\n        `,\n        defaultValue: svgDefaultProps.curve,\n        flavors: allFlavors,\n        control: {\n            type: 'choices',\n            choices: closedCurvePropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    ...chartDimensions(allFlavors),\n    themeProperty(['svg', 'api']),\n    ordinalColors({\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.colors,\n    }),\n    {\n        key: 'fillOpacity',\n        group: 'Style',\n        type: 'number',\n        required: false,\n        help: 'Shape fill opacity.',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.fillOpacity,\n        control: { type: 'opacity' },\n    },\n    blendMode({\n        target: 'layers',\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.blendMode,\n    }),\n    {\n        key: 'borderWidth',\n        group: 'Style',\n        type: 'number',\n        required: false,\n        help: 'Shape border width.',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.borderWidth,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'borderColor',\n        group: 'Style',\n        type: 'string | object | Function',\n        required: false,\n        help: 'Method to compute border color.',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.borderColor,\n        control: { type: 'inheritedColor' },\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'gridLevels',\n        group: 'Grid',\n        type: 'number',\n        required: false,\n        help: 'Number of levels to display for grid',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.gridLevels,\n        control: {\n            type: 'range',\n            min: 1,\n            max: 12,\n        },\n    },\n    {\n        key: 'gridShape',\n        group: 'Grid',\n        type: 'string',\n        required: false,\n        help: 'Determine shape of the grid.',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.gridShape,\n        control: {\n            type: 'choices',\n            choices: [\n                { label: 'circular', value: 'circular' },\n                { label: 'linear', value: 'linear' },\n            ],\n        },\n    },\n    {\n        key: 'gridLabel',\n        group: 'Grid',\n        type: 'Function',\n        required: false,\n        help: 'Grid label.',\n        description: `\n            An optional function to override label rendering.\n            It must return a **valid SVG element** and will\n            receive the following props:\n            \\`\\`\\`\n            {\n                id:     string\n                # this can be used to determine the label layout,\n                # if the element should be centered, left/right aligned\n                anchor: 'start' | 'middle' | 'end'\n                # angle in degrees\n                angle:  number\n            }\n            \\`\\`\\`\n            The component will be wrapped inside\n            a \\`g\\` element **already positioned**\n            where the default label would have been placed.\n        `,\n        flavors: ['svg'],\n    },\n    {\n        key: 'gridLabelOffset',\n        group: 'Grid',\n        type: 'number',\n        required: false,\n        help: 'Label offset from outer radius.',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.gridLabelOffset,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'enableDots',\n        group: 'Dots',\n        type: 'boolean',\n        required: false,\n        help: 'Enable/disable dots.',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.enableDots,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'dotSymbol',\n        group: 'Dots',\n        type: 'Function',\n        required: false,\n        help: 'Overrides default dot circle.',\n        description: `\n            Overrides default dot circle.\n            The function will receive \\`size\\`,\n            \\`color\\`, \\`borderWidth\\` and \\`borderColor\\`\n            props and must return a valid SVG element.\n        `,\n        flavors: ['svg'],\n    },\n    {\n        key: 'dotSize',\n        group: 'Dots',\n        type: 'number',\n        required: false,\n        help: 'Size of the dots.',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.dotSize,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 2,\n            max: 64,\n        },\n    },\n    {\n        key: 'dotColor',\n        type: 'string | object | Function',\n        required: false,\n        help: 'Method to compute dots color.',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.dotColor,\n        control: { type: 'inheritedColor' },\n        group: 'Dots',\n    },\n    {\n        key: 'dotBorderWidth',\n        group: 'Dots',\n        type: 'number',\n        required: false,\n        help: 'Width of the dots border.',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.dotBorderWidth,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 10,\n        },\n    },\n    {\n        key: 'dotBorderColor',\n        group: 'Dots',\n        type: 'string | object | Function',\n        required: false,\n        help: 'Method to compute dots border color.',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.dotBorderColor,\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'enableDotLabel',\n        group: 'Dots',\n        help: 'Enable/disable dots label.',\n        type: 'boolean',\n        required: false,\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.enableDotLabel,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'dotLabel',\n        group: 'Dots',\n        type: 'string | ((point: PointData) => string | number)',\n        required: false,\n        help: 'Dot label.',\n        description:\n            'Property to use to determine dot label. If a function is provided, it will receive current value and serie and must return a label.',\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.dotLabel,\n        control: {\n            type: 'choices',\n            choices: [\n                'value',\n                'formattedValue',\n                'index',\n                'key',\n                `p => \\`\\${p.key}: \\${p.value}\\``,\n                `p => \\`\\${p.index}: \\${p.value}\\``,\n            ].map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'dotLabelYOffset',\n        group: 'Dots',\n        type: 'number',\n        required: false,\n        help: 'Label Y offset from dot shape.',\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.dotLabelYOffset,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: -24,\n            max: 24,\n        },\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer should be a component.\n            \n            The layer function which will receive the chart's\n            context & computed data and must return a valid SVG element.\n        `,\n        required: false,\n        type: '(RadarLayerId | FunctionComponent<RadarCustomLayerProps>)[]',\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.layers,\n    },\n    isInteractive({\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.isInteractive,\n    }),\n    {\n        key: 'sliceTooltip',\n        group: 'Interactivity',\n        type: 'FunctionComponent<RadarSliceTooltipProps>',\n        required: false,\n        help: 'Override default slice tooltip.',\n        flavors: ['svg'],\n    },\n    ...motionProperties(['svg'], svgDefaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { ContinuousColorsLegendProps } from './types'\n\nexport const continuousColorsLegendDefaults: {\n    length: NonNullable<ContinuousColorsLegendProps['length']>\n    thickness: NonNullable<ContinuousColorsLegendProps['thickness']>\n    direction: NonNullable<ContinuousColorsLegendProps['direction']>\n    tickPosition: NonNullable<ContinuousColorsLegendProps['tickPosition']>\n    tickSize: NonNullable<ContinuousColorsLegendProps['tickSize']>\n    tickSpacing: NonNullable<ContinuousColorsLegendProps['tickSpacing']>\n    tickOverlap: NonNullable<ContinuousColorsLegendProps['tickOverlap']>\n    tickFormat: NonNullable<ContinuousColorsLegendProps['tickFormat']>\n    titleAlign: NonNullable<ContinuousColorsLegendProps['titleAlign']>\n    titleOffset: NonNullable<ContinuousColorsLegendProps['titleOffset']>\n} = {\n    length: 200,\n    thickness: 16,\n    direction: 'row',\n    tickPosition: 'after',\n    tickSize: 4,\n    tickSpacing: 3,\n    tickOverlap: false,\n    tickFormat: (value: number) => `${value}`,\n    titleAlign: 'start',\n    titleOffset: 4,\n}\n","import { scaleLinear } from 'd3-scale'\nimport { getValueFormatter } from '@nivo/core'\nimport { computeContinuousColorScaleColorStops } from '@nivo/colors'\nimport {\n    BoxLegendSvgProps,\n    ContinuousColorsLegendProps,\n    LegendAnchor,\n    LegendItemDirection,\n} from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n\nexport const computeContinuousColorsLegend = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    // left to right for `row`, bottom to top for `column`\n    const domain = direction === 'column' ? [...scale.domain()].reverse() : scale.domain()\n\n    const positionScale = scaleLinear().domain(domain)\n    if (domain.length === 2) {\n        // sequential, quantize\n        positionScale.range([0, length])\n    } else if (domain.length === 3) {\n        // diverging\n        positionScale.range([0, length / 2, length])\n    }\n\n    let values: number[]\n    if ('thresholds' in scale) {\n        // quantize\n        values = [domain[0], ...scale.thresholds(), domain[1]]\n    } else {\n        // sequential, diverging\n        values = Array.isArray(ticks) ? ticks : (scale as any).ticks(ticks)\n    }\n\n    const colorStops = computeContinuousColorScaleColorStops(scale, 32)\n\n    const formatValue = getValueFormatter(tickFormat)\n\n    const computedTicks: {\n        x1: number\n        y1: number\n        x2: number\n        y2: number\n        text: string\n        textX: number\n        textY: number\n        textHorizontalAlign: 'start' | 'middle' | 'end'\n        textVerticalAlign: 'alphabetic' | 'central' | 'hanging'\n    }[] = []\n\n    let width: number\n    let height: number\n\n    const gradientX1 = 0\n    let gradientY1 = 0\n    let gradientX2 = 0\n    const gradientY2 = 0\n\n    let titleX: number\n    let titleY: number\n    let titleRotation: number\n    let titleVerticalAlign: 'alphabetic' | 'hanging'\n\n    if (direction === 'row') {\n        width = length\n        height = thickness\n\n        gradientX2 = 1\n\n        let y1: number\n        let y2: number\n\n        let textY: number\n        const textHorizontalAlign = 'middle'\n        let textVerticalAlign: 'alphabetic' | 'hanging'\n\n        titleRotation = 0\n        if (titleAlign === 'start') {\n            titleX = 0\n        } else if (titleAlign === 'middle') {\n            titleX = length / 2\n        } else {\n            titleX = length\n        }\n\n        if (tickPosition === 'before') {\n            y1 = -tickSize\n            y2 = tickOverlap ? thickness : 0\n\n            textY = -tickSize - tickSpacing\n            textVerticalAlign = 'alphabetic'\n\n            titleY = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            y1 = tickOverlap ? 0 : thickness\n            y2 = thickness + tickSize\n\n            textY = y2 + tickSpacing\n            textVerticalAlign = 'hanging'\n\n            titleY = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const x = positionScale(value)\n\n            computedTicks.push({\n                x1: x,\n                y1,\n                x2: x,\n                y2,\n                text: formatValue(value),\n                textX: x,\n                textY,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    } else {\n        width = thickness\n        height = length\n\n        gradientY1 = 1\n\n        let x1: number\n        let x2: number\n\n        let textX: number\n        let textHorizontalAlign: 'start' | 'end'\n        const textVerticalAlign = 'central'\n\n        titleRotation = -90\n        if (titleAlign === 'start') {\n            titleY = length\n        } else if (titleAlign === 'middle') {\n            titleY = length / 2\n        } else {\n            titleY = 0\n        }\n\n        if (tickPosition === 'before') {\n            x1 = -tickSize\n            x2 = tickOverlap ? thickness : 0\n\n            textX = x1 - tickSpacing\n            textHorizontalAlign = 'end'\n\n            titleX = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            x1 = tickOverlap ? 0 : thickness\n            x2 = thickness + tickSize\n\n            textX = x2 + tickSpacing\n            textHorizontalAlign = 'start'\n\n            titleX = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const y = positionScale(value)\n\n            computedTicks.push({\n                x1,\n                y1: y,\n                x2,\n                y2: y,\n                text: formatValue(value),\n                textX,\n                textY: y,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    }\n\n    return {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks: computedTicks,\n        titleText: title,\n        titleX,\n        titleY,\n        titleRotation,\n        titleHorizontalAlign: titleAlign,\n        titleVerticalAlign,\n    }\n}\n","import { Fragment } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { computeContinuousColorsLegend } from '../compute'\nimport { ContinuousColorsLegendProps } from '../types'\nimport { continuousColorsLegendDefaults } from '../defaults'\n\nexport const ContinuousColorsLegendSvg = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        ticks: computedTicks,\n        colorStops,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const theme = useTheme()\n\n    const id = `ContinuousColorsLegendSvgGradient.${direction}.${colorStops\n        .map(stop => stop.offset)\n        .join('_')}`\n\n    return (\n        <g>\n            <defs>\n                <linearGradient\n                    id={id}\n                    x1={gradientX1}\n                    y1={gradientY1}\n                    x2={gradientX2}\n                    y2={gradientY2}\n                >\n                    {colorStops.map(colorStop => (\n                        <stop {...colorStop} />\n                    ))}\n                </linearGradient>\n            </defs>\n            {titleText && (\n                <text\n                    transform={`translate(${titleX}, ${titleY}) rotate(${titleRotation})`}\n                    textAnchor={titleHorizontalAlign}\n                    dominantBaseline={titleVerticalAlign}\n                    style={theme.legends.title.text}\n                >\n                    {titleText}\n                </text>\n            )}\n            <rect width={width} height={height} fill={`url(#${id}`} />\n            {computedTicks.map((tick, index) => (\n                <Fragment key={index}>\n                    <line\n                        x1={tick.x1}\n                        y1={tick.y1}\n                        x2={tick.x2}\n                        y2={tick.y2}\n                        style={theme.legends.ticks.line}\n                    />\n                    <text\n                        x={tick.textX}\n                        y={tick.textY}\n                        textAnchor={tick.textHorizontalAlign}\n                        dominantBaseline={tick.textVerticalAlign}\n                        style={theme.legends.ticks.text}\n                    >\n                        {tick.text}\n                    </text>\n                </Fragment>\n            ))}\n        </g>\n    )\n}\n","import { AnchoredContinuousColorsLegendProps } from '../types'\nimport { computePositionFromAnchor } from '../compute'\nimport { continuousColorsLegendDefaults } from '../defaults'\nimport { ContinuousColorsLegendSvg } from './ContinuousColorsLegendSvg'\n\nexport const AnchoredContinuousColorsLegendSvg = ({\n    containerWidth,\n    containerHeight,\n    anchor,\n    translateX = 0,\n    translateY = 0,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    ...legendProps\n}: AnchoredContinuousColorsLegendProps) => {\n    let width: number\n    let height: number\n    if (direction === 'row') {\n        width = length\n        height = thickness\n    } else {\n        width = thickness\n        height = length\n    }\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <ContinuousColorsLegendSvg\n                length={length}\n                thickness={thickness}\n                direction={direction}\n                {...legendProps}\n            />\n        </g>\n    )\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","import { CompleteTheme, degreesToRadians } from '@nivo/core'\nimport {\n    computeDimensions,\n    computePositionFromAnchor,\n    computeItemLayout,\n    computeContinuousColorsLegend,\n} from './compute'\nimport { AnchoredContinuousColorsLegendProps, LegendCanvasProps } from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n\nexport const renderContinuousColorLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        containerWidth,\n        containerHeight,\n        anchor,\n        translateX = 0,\n        translateY = 0,\n        scale,\n        length = continuousColorsLegendDefaults.length,\n        thickness = continuousColorsLegendDefaults.thickness,\n        direction = continuousColorsLegendDefaults.direction,\n        ticks: _ticks,\n        tickPosition = continuousColorsLegendDefaults.tickPosition,\n        tickSize = continuousColorsLegendDefaults.tickSize,\n        tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n        tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n        tickFormat = continuousColorsLegendDefaults.tickFormat,\n        title,\n        titleAlign = continuousColorsLegendDefaults.titleAlign,\n        titleOffset = continuousColorsLegendDefaults.titleOffset,\n        theme,\n    }: AnchoredContinuousColorsLegendProps & {\n        theme: CompleteTheme\n    }\n) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks: _ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const initialStyles = {\n        font: ctx.font,\n        textAlign: ctx.textAlign,\n        textBaseline: ctx.textBaseline,\n    }\n    ctx.save()\n\n    ctx.translate(x, y)\n\n    const gradient = ctx.createLinearGradient(\n        gradientX1 * width,\n        gradientY1 * height,\n        gradientX2 * width,\n        gradientY2 * height\n    )\n    colorStops.forEach(colorStop => {\n        gradient.addColorStop(colorStop.offset, colorStop.stopColor)\n    })\n\n    ctx.fillStyle = gradient\n    ctx.fillRect(0, 0, width, height)\n\n    ctx.font = `${\n        theme.legends.ticks.text.fontWeight ? `${theme.legends.ticks.text.fontWeight} ` : ''\n    }${theme.legends.ticks.text.fontSize}px ${theme.legends.ticks.text.fontFamily}`\n\n    ticks.forEach(tick => {\n        if ((theme.legends.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n            ctx.lineCap = 'square'\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x1, tick.y1)\n            ctx.lineTo(tick.x2, tick.y2)\n            ctx.stroke()\n        }\n\n        if (theme.legends.ticks.text.fill) {\n            ctx.fillStyle = theme.legends.ticks.text.fill\n        }\n        ctx.textAlign = tick.textHorizontalAlign === 'middle' ? 'center' : tick.textHorizontalAlign\n        ctx.textBaseline = tick.textVerticalAlign === 'central' ? 'middle' : tick.textVerticalAlign\n\n        ctx.fillText(tick.text, tick.textX, tick.textY)\n    })\n\n    if (titleText) {\n        ctx.save()\n        ctx.translate(titleX, titleY)\n        ctx.rotate(degreesToRadians(titleRotation))\n\n        ctx.font = `${\n            theme.legends.title.text.fontWeight ? `${theme.legends.title.text.fontWeight} ` : ''\n        }${theme.legends.title.text.fontSize}px ${theme.legends.title.text.fontFamily}`\n        if (theme.legends.title.text.fill) {\n            ctx.fillStyle = theme.legends.title.text.fill\n        }\n        ctx.textAlign = titleHorizontalAlign === 'middle' ? 'center' : titleHorizontalAlign\n        ctx.textBaseline = titleVerticalAlign\n\n        ctx.fillText(titleText, 0, 0)\n\n        ctx.restore()\n    }\n\n    ctx.restore()\n\n    ctx.font = initialStyles.font\n    ctx.textAlign = initialStyles.textAlign\n    ctx.textBaseline = initialStyles.textBaseline\n}\n","import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n\n        if (reverse) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse, separator, valueFormat])\n}\n","import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n","import curveLinear from \"./linear.js\";\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function areaStart() {\n    this._curve.areaStart();\n  },\n  areaEnd: function areaEnd() {\n    this._curve.areaEnd();\n  },\n  lineStart: function lineStart() {\n    this._curve.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this._curve.lineEnd();\n  },\n  point: function point(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\nexport default function curveRadial(curve) {\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n  return radial;\n}","import curveRadial, { curveRadialLinear } from \"./curve/radial.js\";\nimport line from \"./line.js\";\nexport function lineRadial(l) {\n  var c = l.curve;\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function (_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\nexport default function () {\n  return lineRadial(line().curve(curveRadialLinear));\n}","import { useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { lineRadial, CurveFactory } from 'd3-shape'\nimport { ScaleLinear } from 'd3-scale'\nimport { useMotionConfig, useTheme, useAnimatedPath } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { RadarCommonProps } from './types'\n\ninterface RadarLayerProps<D extends Record<string, unknown>> {\n    data: D[]\n    item: string\n    colorByKey: Record<string | number, string>\n    fillByKey: Record<string, string | null>\n    radiusScale: ScaleLinear<number, number>\n    angleStep: number\n    curveFactory: CurveFactory\n    borderWidth: RadarCommonProps<D>['borderWidth']\n    borderColor: RadarCommonProps<D>['borderColor']\n    fillOpacity: RadarCommonProps<D>['fillOpacity']\n    blendMode: RadarCommonProps<D>['blendMode']\n}\n\nexport const RadarLayer = <D extends Record<string, unknown>>({\n    data,\n    item: key,\n    colorByKey,\n    fillByKey,\n    radiusScale,\n    angleStep,\n    curveFactory,\n    borderWidth,\n    borderColor,\n    fillOpacity,\n    blendMode,\n}: RadarLayerProps<D>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const lineGenerator = useMemo(() => {\n        return lineRadial<number>()\n            .radius(d => radiusScale(d))\n            .angle((_, i) => i * angleStep)\n            .curve(curveFactory)\n    }, [radiusScale, angleStep, curveFactory])\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(lineGenerator(data.map(d => d[key] as number)) as string)\n    const animatedProps = useSpring<{ fill: string; stroke: string }>({\n        fill: colorByKey[key],\n        stroke: getBorderColor({ key, color: colorByKey[key] }),\n        config: springConfig,\n        immediate: !animate,\n    })\n    const fill = fillByKey[key] ?? animatedProps.fill\n\n    return (\n        <animated.path\n            key={key}\n            d={animatedPath}\n            fill={fill}\n            fillOpacity={fillOpacity}\n            stroke={animatedProps.stroke}\n            strokeWidth={borderWidth}\n            style={{ mixBlendMode: blendMode }}\n        />\n    )\n}\n","import { createElement } from 'react'\nimport { useSprings } from '@react-spring/web'\nimport { useMotionConfig, positionFromAngle, radiansToDegrees } from '@nivo/core'\nimport { GridLabelComponent } from './types'\n\nconst textAnchorFromAngle = (_angle: number) => {\n    const angle = radiansToDegrees(_angle) + 90\n\n    if (angle <= 10 || angle >= 350 || (angle >= 170 && angle <= 190)) return 'middle' as const\n    if (angle > 180) return 'end' as const\n    return 'start' as const\n}\n\ninterface RadarGridLabelsProps {\n    radius: number\n    angles: number[]\n    indices: string[]\n    label: GridLabelComponent\n    labelOffset: number\n}\n\nexport const RadarGridLabels = ({\n    radius,\n    angles,\n    indices,\n    label: labelComponent,\n    labelOffset,\n}: RadarGridLabelsProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = indices.map((index, i) => {\n        const position = positionFromAngle(angles[i], radius + labelOffset)\n        const textAnchor = textAnchorFromAngle(angles[i])\n\n        return {\n            id: index,\n            angle: radiansToDegrees(angles[i]),\n            anchor: textAnchor,\n            ...position,\n        }\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y})`,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return (\n        <>\n            {springs.map((animatedProps, index) => {\n                const label = labels[index]\n\n                return createElement(labelComponent, {\n                    key: label.id,\n                    id: label.id,\n                    anchor: label.anchor,\n                    angle: label.angle,\n                    x: label.x,\n                    y: label.y,\n                    animated: animatedProps,\n                })\n            })}\n        </>\n    )\n}\n","import { memo, SVGProps, useMemo } from 'react'\nimport { lineRadial, curveLinearClosed } from 'd3-shape'\nimport { animated, useSpring, to } from '@react-spring/web'\nimport { useTheme, useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { RadarCommonProps } from './types'\n\ninterface RadarGridLevelCircularProps {\n    radius: number\n}\n\nconst RadarGridLevelCircular = memo(({ radius }: RadarGridLevelCircularProps) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        radius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            fill=\"none\"\n            r={to(animatedProps.radius, value => Math.max(value, 0))}\n            {...(theme.grid.line as Omit<SVGProps<SVGCircleElement>, 'ref'>)}\n        />\n    )\n})\n\ninterface RadarGridLevelLinearProps {\n    radius: number\n    angleStep: number\n    dataLength: number\n}\n\nconst RadarGridLevelLinear = ({ radius, angleStep, dataLength }: RadarGridLevelLinearProps) => {\n    const theme = useTheme()\n\n    const radarLineGenerator = useMemo(\n        () =>\n            lineRadial<number>()\n                .angle(i => i * angleStep)\n                .radius(radius)\n                .curve(curveLinearClosed),\n        [angleStep, radius]\n    )\n\n    const points = Array.from({ length: dataLength }, (_, i) => i)\n    const animatedPath = useAnimatedPath(radarLineGenerator(points) as string)\n\n    return (\n        <animated.path\n            fill=\"none\"\n            d={animatedPath}\n            {...(theme.grid.line as Omit<SVGProps<SVGPathElement>, 'ref'>)}\n        />\n    )\n}\n\ninterface RadarGridLevelsProps<D extends Record<string, unknown>> {\n    shape: RadarCommonProps<D>['gridShape']\n    radius: number\n    angleStep: number\n    dataLength: number\n}\n\nexport const RadarGridLevels = <D extends Record<string, unknown>>({\n    shape,\n    ...props\n}: RadarGridLevelsProps<D>) => {\n    return shape === 'circular' ? (\n        <RadarGridLevelCircular radius={props.radius} />\n    ) : (\n        <RadarGridLevelLinear {...props} />\n    )\n}\n","import { SVGProps, useMemo } from 'react'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport { RadarGridLabels } from './RadarGridLabels'\nimport { RadarGridLevels } from './RadarGridLevels'\nimport { GridLabelComponent, RadarCommonProps } from './types'\n\ninterface RadarGridProps<D extends Record<string, unknown>> {\n    indices: string[]\n    shape: RadarCommonProps<D>['gridShape']\n    radius: number\n    levels: number\n    angleStep: number\n    label: GridLabelComponent\n    labelOffset: number\n}\n\nexport const RadarGrid = <D extends Record<string, unknown>>({\n    indices,\n    levels,\n    shape,\n    radius,\n    angleStep,\n    label,\n    labelOffset,\n}: RadarGridProps<D>) => {\n    const theme = useTheme()\n    const { radii, angles } = useMemo(() => {\n        return {\n            radii: Array.from({ length: levels })\n                .map((_, i) => (radius / levels) * (i + 1))\n                .reverse(),\n            angles: Array.from({ length: indices.length }, (_, i) => i * angleStep - Math.PI / 2),\n        }\n    }, [indices, levels, radius, angleStep])\n\n    return (\n        <>\n            {angles.map((angle, i) => {\n                const position = positionFromAngle(angle, radius)\n                return (\n                    <line\n                        key={`axis.${i}`}\n                        x1={0}\n                        y1={0}\n                        x2={position.x}\n                        y2={position.y}\n                        {...(theme.grid.line as SVGProps<SVGLineElement>)}\n                    />\n                )\n            })}\n            {radii.map((radius, i) => (\n                <RadarGridLevels<D>\n                    key={`level.${i}`}\n                    shape={shape}\n                    radius={radius}\n                    angleStep={angleStep}\n                    dataLength={indices.length}\n                />\n            ))}\n            <RadarGridLabels\n                radius={radius}\n                angles={angles}\n                indices={indices}\n                labelOffset={labelOffset}\n                label={label}\n            />\n        </>\n    )\n}\n","import { useMemo, useState, useCallback, createElement } from 'react'\nimport { Arc } from 'd3-shape'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { RadarCommonProps, RadarDataProps, RadarSliceTooltipDatum } from './types'\n\ninterface RadarSliceProps<D extends Record<string, unknown>> {\n    datum: D\n    keys: RadarDataProps<D>['keys']\n    index: string | number\n    formatValue: (value: number, context: string) => string\n    colorByKey: Record<string, string>\n    startAngle: number\n    endAngle: number\n    radius: number\n    arcGenerator: Arc<void, { startAngle: number; endAngle: number }>\n    tooltip: RadarCommonProps<D>['sliceTooltip']\n}\n\nexport const RadarSlice = <D extends Record<string, unknown>>({\n    datum,\n    keys,\n    index,\n    formatValue,\n    colorByKey,\n    radius,\n    startAngle,\n    endAngle,\n    arcGenerator,\n    tooltip,\n}: RadarSliceProps<D>) => {\n    const [isHover, setIsHover] = useState(false)\n    const theme = useTheme()\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipData = useMemo(() => {\n        const data: RadarSliceTooltipDatum[] = keys.map(key => ({\n            color: colorByKey[key],\n            id: key,\n            value: datum[key] as number,\n            formattedValue: formatValue(datum[key] as number, key),\n        }))\n        data.sort((a, b) => a.value - b.value)\n        data.reverse()\n\n        return data\n    }, [datum, keys, formatValue, colorByKey])\n\n    const showItemTooltip = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(\n                createElement(tooltip, {\n                    index,\n                    data: tooltipData,\n                }),\n                event\n            )\n        },\n        [showTooltipFromEvent, tooltip, index, tooltipData]\n    )\n\n    const hideItemTooltip = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [hideTooltip, setIsHover])\n\n    const { path, tipX, tipY } = useMemo(() => {\n        const position = positionFromAngle(\n            startAngle + (endAngle - startAngle) * 0.5 - Math.PI / 2,\n            radius\n        )\n\n        return {\n            path: arcGenerator({ startAngle, endAngle }) as string,\n            tipX: position.x,\n            tipY: position.y,\n        }\n    }, [startAngle, endAngle, radius, arcGenerator])\n\n    return (\n        <>\n            {isHover && <line x1={0} y1={0} x2={tipX} y2={tipY} style={theme.crosshair.line} />}\n            <path\n                d={path}\n                fill=\"#F00\"\n                fillOpacity={0}\n                onMouseEnter={showItemTooltip}\n                onMouseMove={showItemTooltip}\n                onMouseLeave={hideItemTooltip}\n            />\n        </>\n    )\n}\n","import { arc as d3Arc } from 'd3-shape'\nimport { RadarSlice } from './RadarSlice'\nimport { RadarColorMapping, RadarCommonProps, RadarDataProps } from './types'\n\ninterface RadarSlicesProps<D extends Record<string, unknown>> {\n    data: RadarDataProps<D>['data']\n    keys: RadarDataProps<D>['keys']\n    getIndex: (d: D) => string | number\n    formatValue: (value: number, context: string) => string\n    colorByKey: RadarColorMapping\n    radius: number\n    angleStep: number\n    tooltip: RadarCommonProps<D>['sliceTooltip']\n}\n\nexport const RadarSlices = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    getIndex,\n    formatValue,\n    colorByKey,\n    radius,\n    angleStep,\n    tooltip,\n}: RadarSlicesProps<D>) => {\n    const arc = d3Arc<{ startAngle: number; endAngle: number }>().outerRadius(radius).innerRadius(0)\n\n    const halfAngleStep = angleStep * 0.5\n    let rootStartAngle = -halfAngleStep\n\n    return (\n        <>\n            {data.map(d => {\n                const index = getIndex(d)\n                const startAngle = rootStartAngle\n                const endAngle = startAngle + angleStep\n\n                rootStartAngle += angleStep\n\n                return (\n                    <RadarSlice\n                        key={index}\n                        datum={d}\n                        keys={keys}\n                        index={index}\n                        formatValue={formatValue}\n                        colorByKey={colorByKey}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        radius={radius}\n                        arcGenerator={arc}\n                        tooltip={tooltip}\n                    />\n                )\n            })}\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { ScaleLinear } from 'd3-scale'\nimport { useTheme, positionFromAngle, DotsItem, usePropertyAccessor } from '@nivo/core'\nimport { getInheritedColorGenerator } from '@nivo/colors'\nimport { RadarCommonProps, RadarDataProps, PointProps, PointData, RadarColorMapping } from './types'\n\ninterface RadarDotsProps<D extends Record<string, unknown>> {\n    data: RadarDataProps<D>['data']\n    keys: RadarDataProps<D>['keys']\n    radiusScale: ScaleLinear<number, number>\n    getIndex: (d: D) => string\n    colorByKey: RadarColorMapping\n    angleStep: number\n    symbol?: RadarCommonProps<D>['dotSymbol']\n    size: number\n    color: RadarCommonProps<D>['dotColor']\n    borderWidth: number\n    borderColor: RadarCommonProps<D>['dotBorderColor']\n    enableLabel: boolean\n    label: RadarCommonProps<D>['dotLabel']\n    formatValue: (value: number, context: string) => string\n    labelYOffset: number\n}\n\nexport const RadarDots = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    getIndex,\n    colorByKey,\n    radiusScale,\n    angleStep,\n    symbol,\n    size = 6,\n    color = { from: 'color' },\n    borderWidth = 0,\n    borderColor = { from: 'color' },\n    enableLabel = false,\n    label = 'value',\n    formatValue,\n    labelYOffset,\n}: RadarDotsProps<D>) => {\n    const theme = useTheme()\n    const fillColor = getInheritedColorGenerator(color, theme)\n    const strokeColor = getInheritedColorGenerator(borderColor, theme)\n    const getLabel = usePropertyAccessor<PointData, string | number>(label)\n\n    const points: PointProps[] = useMemo(\n        () =>\n            data.reduce((acc, datum, i) => {\n                const index = getIndex(datum)\n                keys.forEach(key => {\n                    const value = datum[key] as number\n\n                    const pointData: PointData = {\n                        index,\n                        key,\n                        value,\n                        formattedValue: formatValue(value, key),\n                        color: colorByKey[key],\n                    }\n\n                    acc.push({\n                        key: `${key}.${index}`,\n                        label: enableLabel ? getLabel(pointData) : undefined,\n                        style: {\n                            fill: fillColor(pointData),\n                            stroke: strokeColor(pointData),\n                            ...positionFromAngle(\n                                angleStep * i - Math.PI / 2,\n                                radiusScale(datum[key] as number)\n                            ),\n                        },\n                        data: pointData,\n                    })\n                })\n\n                return acc\n            }, [] as PointProps[]),\n        [\n            data,\n            keys,\n            getIndex,\n            colorByKey,\n            enableLabel,\n            getLabel,\n            formatValue,\n            fillColor,\n            strokeColor,\n            angleStep,\n            radiusScale,\n        ]\n    )\n\n    return (\n        <>\n            {points.map(point => (\n                <DotsItem\n                    key={point.key}\n                    x={point.style.x}\n                    y={point.style.y}\n                    symbol={symbol}\n                    size={size}\n                    color={point.style.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.style.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    datum={point.data}\n                />\n            ))}\n        </>\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { GridLabelProps } from './types'\n\nexport const RadarGridLabel = ({ id, anchor, animated: animatedProps }: GridLabelProps) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <text style={theme.axis.ticks.text} dominantBaseline=\"central\" textAnchor={anchor}>\n                {id}\n            </text>\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { RadarSliceTooltipProps } from './types'\n\nexport const RadarSliceTooltip = ({ index, data }: RadarSliceTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            data.map(datum => [\n                <Chip key={datum.id} color={datum.color} />,\n                datum.id,\n                datum.formattedValue,\n            ]),\n        [data]\n    )\n\n    return <TableTooltip title={<strong>{index}</strong>} rows={rows} />\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport { Container, useDimensions, SvgWrapper } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { RadarLayer } from './RadarLayer'\nimport { RadarGrid } from './RadarGrid'\nimport { RadarSlices } from './RadarSlices'\nimport { RadarDots } from './RadarDots'\nimport { svgDefaultProps } from './props'\nimport { RadarLayerId, RadarSvgProps } from './types'\nimport { useRadar } from './hooks'\n\ntype InnerRadarProps<D extends Record<string, unknown>> = Omit<\n    RadarSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerRadar = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    indexBy,\n    layers = svgDefaultProps.layers,\n    maxValue = svgDefaultProps.maxValue,\n    valueFormat,\n    curve = svgDefaultProps.curve,\n    margin: partialMargin,\n    width,\n    height,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n    gridLevels = svgDefaultProps.gridLevels,\n    gridShape = svgDefaultProps.gridShape,\n    gridLabel = svgDefaultProps.gridLabel,\n    gridLabelOffset = svgDefaultProps.gridLabelOffset,\n    enableDots = svgDefaultProps.enableDots,\n    dotSymbol,\n    dotSize = svgDefaultProps.dotSize,\n    dotColor = svgDefaultProps.dotColor,\n    dotBorderWidth = svgDefaultProps.dotBorderWidth,\n    dotBorderColor = svgDefaultProps.dotBorderColor,\n    enableDotLabel = svgDefaultProps.enableDotLabel,\n    dotLabel = svgDefaultProps.dotLabel,\n    dotLabelYOffset = svgDefaultProps.dotLabelYOffset,\n    colors = svgDefaultProps.colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    blendMode = svgDefaultProps.blendMode,\n    isInteractive = svgDefaultProps.isInteractive,\n    sliceTooltip = svgDefaultProps.sliceTooltip,\n    legends = svgDefaultProps.legends,\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n}: InnerRadarProps<D>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        getIndex,\n        indices,\n        formatValue,\n        colorByKey,\n        fillByKey,\n        boundDefs,\n        radius,\n        radiusScale,\n        centerX,\n        centerY,\n        angleStep,\n        curveFactory,\n        boundLegends,\n        customLayerProps,\n    } = useRadar<D>({\n        data,\n        keys,\n        indexBy,\n        maxValue,\n        valueFormat,\n        curve,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        legends,\n        defs,\n        fill,\n    })\n\n    const layerById: Record<RadarLayerId, ReactNode> = {\n        grid: null,\n        layers: null,\n        slices: null,\n        dots: null,\n        legends: null,\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <g key=\"grid\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarGrid<D>\n                    levels={gridLevels}\n                    shape={gridShape}\n                    radius={radius}\n                    angleStep={angleStep}\n                    indices={indices}\n                    label={gridLabel}\n                    labelOffset={gridLabelOffset}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('layers')) {\n        layerById.layers = (\n            <g key=\"layers\" transform={`translate(${centerX}, ${centerY})`}>\n                {keys.map(key => (\n                    <RadarLayer<D>\n                        key={key}\n                        data={data}\n                        item={key}\n                        colorByKey={colorByKey}\n                        fillByKey={fillByKey}\n                        radiusScale={radiusScale}\n                        angleStep={angleStep}\n                        curveFactory={curveFactory}\n                        borderWidth={borderWidth}\n                        borderColor={borderColor}\n                        fillOpacity={fillOpacity}\n                        blendMode={blendMode}\n                    />\n                ))}\n            </g>\n        )\n    }\n\n    if (layers.includes('slices') && isInteractive) {\n        layerById.slices = (\n            <g key=\"slices\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarSlices<D>\n                    data={data}\n                    keys={keys}\n                    getIndex={getIndex}\n                    formatValue={formatValue}\n                    colorByKey={colorByKey}\n                    radius={radius}\n                    angleStep={angleStep}\n                    tooltip={sliceTooltip}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <g key=\"dots\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarDots<D>\n                    data={data}\n                    keys={keys}\n                    getIndex={getIndex}\n                    radiusScale={radiusScale}\n                    angleStep={angleStep}\n                    symbol={dotSymbol}\n                    size={dotSize}\n                    colorByKey={colorByKey}\n                    color={dotColor}\n                    borderWidth={dotBorderWidth}\n                    borderColor={dotBorderColor}\n                    enableLabel={enableDotLabel}\n                    label={dotLabel}\n                    formatValue={formatValue}\n                    labelYOffset={dotLabelYOffset}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {boundLegends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Radar = <D extends Record<string, unknown>>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: RadarSvgProps<D>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerRadar<D> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { RadarSvgProps } from './types'\nimport { Radar } from './Radar'\n\nexport const ResponsiveRadar = <D extends Record<string, unknown>>(\n    props: Omit<RadarSvgProps<D>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Radar<D> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","arcInnerRadius","d","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","x3","y3","x10","y10","x32","y32","t","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","cornerRadius","padRadius","context","buffer","r0","apply","arguments","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","ax","ay","bx","by","kc","lc","centroid","a","length","defined","curve","output","line","data","i","n","defined0","lineStart","lineEnd","point","p","durationSecond","durationMinute","durationHour","durationDay","durationWeek","Date","newInterval","floori","offseti","count","field","interval","date","floor","ceil","round","d0","d1","offset","step","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","settingsMapper","valueFormat","mapFormat","dotLabel","value","key","index","allFlavors","props","group","type","required","help","description","flavors","defaultValue","svgDefaultProps","control","disabledValue","min","max","choices","closedCurvePropKeys","label","chartDimensions","themeProperty","ordinalColors","blendMode","target","defsProperties","unit","map","choice","isInteractive","motionProperties","groups","groupProperties","continuousColorsLegendDefaults","thickness","direction","tickPosition","tickSize","tickSpacing","tickOverlap","tickFormat","titleAlign","titleOffset","zeroPadding","top","right","bottom","left","computeDimensions","item","itemsSpacing","_padding","padding","itemCount","itemWidth","itemHeight","Array","isArray","horizontalPadding","verticalPadding","width","height","spacing","computePositionFromAnchor","anchor","translateX","translateY","containerWidth","containerHeight","computeItemLayout","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","justify","symbolSize","symbolSpacing","computeContinuousColorsLegend","values","scale","ticks","title","domain","reverse","positionScale","scaleLinear","thresholds","titleX","titleY","titleRotation","titleVerticalAlign","textY","textVerticalAlign","textX","textHorizontalAlign","colorStops","computeContinuousColorScaleColorStops","formatValue","getValueFormatter","computedTicks","gradientY1","gradientX2","forEach","text","gradientX1","gradientY2","titleText","titleHorizontalAlign","ContinuousColorsLegendSvg","theme","useTheme","id","join","_jsxs","_jsx","colorStop","transform","textAnchor","dominantBaseline","style","legends","fill","tick","Fragment","AnchoredContinuousColorsLegendSvg","legendProps","symbolByShape","circle","size","opacity","borderWidth","borderColor","strokeWidth","stroke","pointerEvents","diamond","square","triangle","LegendSvgItem","textColor","background","symbolShape","symbolBorderWidth","symbolBorderColor","onClick","onMouseEnter","onMouseLeave","toggleSerie","effects","useState","setStyle","handleMouseEnter","useCallback","event","on","reduce","acc","effect","handleMouseLeave","some","handler","SymbolShape","itemOpacity","itemBackground","cursor","React","color","hidden","symbol","itemTextColor","userSelect","LegendSvg","itemDirection","xStep","yStep","BoxLegendSvg","textAlignMapping","middle","renderLegendToCanvas","ctx","save","translate","font","fontSize","fontFamily","itemX","itemY","fillStyle","fillRect","textAlign","textBaseline","fillText","String","restore","renderContinuousColorLegendToCanvas","_ticks","initialStyles","gradient","createLinearGradient","addColorStop","stopColor","fontWeight","lineWidth","Number","axis","strokeStyle","lineCap","beginPath","rotate","degreesToRadians","useQuantizeColorScaleLegendData","overriddenDomain","v","separator","useMemo","items","domainValue","invertExtent","extent","LegendPropShape","PropTypes","isRequired","curveRadialLinear","curveRadial","Radial","_curve","radial","areaStart","areaEnd","c","angle","radius","RadarLayer","colorByKey","fillByKey","radiusScale","angleStep","curveFactory","fillOpacity","getBorderColor","useInheritedColor","lineGenerator","lineRadial","useMotionConfig","animate","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","animated","mixBlendMode","RadarGridLabels","angles","indices","labelComponent","labelOffset","labels","_angle","position","positionFromAngle","radiansToDegrees","springs","useSprings","createElement","RadarGridLevelCircular","memo","to","grid","RadarGridLevelLinear","dataLength","radarLineGenerator","curveLinearClosed","points","from","RadarGridLevels","shape","RadarGrid","levels","radii","RadarSlice","datum","keys","arcGenerator","tooltip","isHover","setIsHover","useTooltip","showTooltipFromEvent","hideTooltip","tooltipData","formattedValue","sort","b","showItemTooltip","e","hideItemTooltip","tipX","tipY","crosshair","onMouseMove","RadarSlices","getIndex","d3Arc","rootStartAngle","RadarDots","enableLabel","labelYOffset","fillColor","getInheritedColorGenerator","strokeColor","getLabel","usePropertyAccessor","pointData","DotsItem","layers","maxValue","gridLevels","gridShape","gridLabelOffset","gridLabel","g","enableDots","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabelYOffset","colors","scheme","sliceTooltip","rows","Chip","TableTooltip","role","motionConfig","defs","InnerRadar","indexBy","partialMargin","margin","dotSymbol","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","useValueFormatter","getColor","useOrdinalColorScale","mapping","keyData","k","boundDefs","bindDefs","keyDatum","keyName","allValues","computedMaxValue","centerX","centerY","useCurveInterpolation","customLayerProps","legendData","boundLegends","customData","legend","boundData","find","ld","cd","layerById","slices","dots","includes","SvgWrapper","layer","Radar","renderWrapper","otherProps","Container","ResponsiveRadar","ResponsiveWrapper"],"sourceRoot":""}