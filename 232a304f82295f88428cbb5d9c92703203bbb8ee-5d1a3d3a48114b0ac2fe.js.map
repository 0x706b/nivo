{"version":3,"sources":["webpack:///../node_modules/lodash/_copySymbols.js","webpack:///../node_modules/lodash/_baseClone.js","webpack:///../node_modules/lodash/_initCloneArray.js","webpack:///../node_modules/lodash/_cloneDataView.js","webpack:///../node_modules/lodash/_cloneRegExp.js","webpack:///../node_modules/lodash/_parent.js","webpack:///../node_modules/lodash/_baseAssignIn.js","webpack:///../node_modules/lodash/_getSymbolsIn.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../src/SunburstTooltip.tsx","webpack:///../src/props.ts","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../src/Arcs.tsx","webpack:///../src/Sunburst.tsx","webpack:///../src/hooks.ts","webpack:///../src/ResponsiveSunburst.tsx","webpack:///../node_modules/lodash/isMap.js","webpack:///../node_modules/lodash/_copySymbolsIn.js","webpack:///../node_modules/lodash/_baseIsMap.js","webpack:///../node_modules/lodash/isSet.js","webpack:///./src/data/components/sunburst/props.js","webpack:///../node_modules/lodash/_cloneSymbol.js","webpack:///../node_modules/lodash/_baseUnset.js","webpack:///../node_modules/lodash/omit.js","webpack:///./src/data/components/sunburst/mapper.js","webpack:///../node_modules/lodash/_arrayEach.js","webpack:///../node_modules/lodash/_customOmitClone.js","webpack:///../node_modules/lodash/_initCloneByTag.js","webpack:///./src/lib/settings.js","webpack:///../node_modules/lodash/_baseAssign.js","webpack:///../node_modules/lodash/cloneDeep.js","webpack:///../node_modules/lodash/_getAllKeysIn.js","webpack:///../node_modules/lodash/_baseIsSet.js"],"names":["copyObject","getSymbols","module","exports","source","object","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","keys","cloneableTags","baseClone","value","bitmask","customizer","key","stack","result","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","forEach","subValue","add","keysFunc","keysIn","props","hasOwnProperty","Object","prototype","array","length","constructor","call","index","input","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","baseGet","baseSlice","path","arrayPush","getPrototype","stubArray","getSymbolsIn","getOwnPropertySymbols","_objectWithoutProperties","excluded","i","target","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","defaultProps","id","cornerRadius","layers","colors","scheme","colorBy","inheritColorFromParent","childColor","from","borderWidth","borderColor","enableArcLabels","arcLabel","arcLabelsRadiusOffset","arcLabelsSkipAngle","arcLabelsTextColor","theme","animate","motionConfig","transitionMode","isInteractive","defs","fill","tooltip","formattedValue","color","enableChip","role","_arrayLikeToArray","arr","len","arr2","Array","_toConsumableArray","arrayLikeToArray","arrayWithoutHoles","iter","Symbol","iterator","iterableToArray","o","minLen","n","toString","slice","name","test","unsupportedIterableToArray","TypeError","nonIterableSpread","Arcs","center","data","arcGenerator","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useMemo","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","InnerSunburst","valueFormat","partialMargin","margin","width","height","arcLabelsComponent","useDimensions","innerHeight","innerWidth","outerHeight","outerWidth","radius","Math","centerX","centerY","useTheme","getColor","useOrdinalColorScale","getChildColor","useInheritedColor","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","nodes","clonedData","cloneDeep","hierarchy","d3Hierarchy","descendants","d3Partition","partition","total","sortBy","descendant","percentage","ancestor","arc","startAngle","endAngle","innerRadius","outerRadius","parent","acc","node","normalizedNode","depth","useArcGenerator","useSunburst","boundDefs","bindDefs","dataKey","colorKey","targetKey","layerById","arcs","arcLabels","label","radiusOffset","skipAngle","textColor","component","layerContext","useSunburstLayerContext","layer","Sunburst","otherProps","ResponsiveSunburst","baseIsMap","baseUnary","nodeUtil","nodeIsMap","isObjectLike","baseIsSet","nodeIsSet","group","help","description","type","required","defaultValue","controlType","controlOptions","unit","min","max","step","enableControlForFlavors","themeProperty","choices","defsProperties","flavors","map","choice","motionProperties","arcTransitionModes","groups","groupProperties","symbolProto","symbolValueOf","valueOf","symbol","castPath","last","toKey","arrayMap","baseUnset","customOmitClone","flatRest","omit","paths","CLONE_DEEP_FLAG","TooltipWrapper","styled","div","TooltipKey","span","TooltipValue","CustomTooltip","style","round","settingsMapper","mapFormat","d","values","patternLinesDef","background","rotation","lineWidth","spacing","match","exclude","iteratee","isPlainObject","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","mapping","settings","options","overrides","mapAxis","upperFirst","enable","format","enabled","baseGetAllKeys"],"mappings":"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","file":"232a304f82295f88428cbb5d9c92703203bbb8ee-5d1a3d3a48114b0ac2fe.js","sourcesContent":["var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const SunburstTooltip = <RawDatum,>({\n    id,\n    formattedValue,\n    color,\n}: ComputedDatum<RawDatum>) => (\n    <BasicTooltip id={id} value={formattedValue} enableChip={true} color={color} />\n)\n","import { ArcTransitionMode } from '@nivo/arcs'\nimport { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { SunburstTooltip } from './SunburstTooltip'\nimport { SunburstLayerId } from './types'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    cornerRadius: 0,\n    layers: ['arcs', 'arcLabels'] as SunburstLayerId[],\n    colors: ({ scheme: 'nivo' } as unknown) as OrdinalColorScaleConfig,\n    colorBy: 'id' as const,\n    inheritColorFromParent: true,\n    childColor: { from: 'color' },\n    borderWidth: 1,\n    borderColor: 'white',\n    enableArcLabels: false,\n    arcLabel: 'formattedValue',\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsSkipAngle: 0,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n    isInteractive: true,\n    defs: [],\n    fill: [],\n    tooltip: SunburstTooltip,\n    role: 'img',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { createElement, useMemo } from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { ComputedDatum, SunburstCommonProps, MouseHandlers } from './types'\nimport { useTooltip } from '@nivo/tooltip'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: SunburstCommonProps<RawDatum>['borderWidth']\n    borderColor: SunburstCommonProps<RawDatum>['borderColor']\n    isInteractive: SunburstCommonProps<RawDatum>['isInteractive']\n    onClick?: MouseHandlers<RawDatum>['onClick']\n    onMouseEnter?: MouseHandlers<RawDatum>['onMouseEnter']\n    onMouseMove?: MouseHandlers<RawDatum>['onMouseMove']\n    onMouseLeave?: MouseHandlers<RawDatum>['onMouseLeave']\n    tooltip: SunburstCommonProps<RawDatum>['tooltip']\n    transitionMode: SunburstCommonProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import React, { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    Container,\n    SvgWrapper,\n    useDimensions,\n} from '@nivo/core'\nimport { ArcLabelsLayer } from '@nivo/arcs'\nimport { defaultProps } from './props'\nimport { useSunburst, useSunburstLayerContext } from './hooks'\nimport { SunburstSvgProps, SunburstLayerId, SunburstLayer, ComputedDatum } from './types'\nimport { Arcs } from './Arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\n\ntype InnerSunburstProps<RawDatum> = Partial<\n    Omit<\n        SunburstSvgProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nconst InnerSunburst = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    cornerRadius = defaultProps.cornerRadius,\n    layers = defaultProps.layers as SunburstLayer<RawDatum>[],\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor,\n    margin: partialMargin,\n    width,\n    height,\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsComponent,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    transitionMode = defaultProps.transitionMode,\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n    role = defaultProps.role,\n}: InnerSunburstProps<RawDatum>) => {\n    const { innerHeight, innerWidth, margin, outerHeight, outerWidth } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { centerX, centerY, radius } = useMemo(() => {\n        const radius = Math.min(innerWidth, innerHeight) / 2\n\n        return { radius, centerX: innerWidth / 2, centerY: innerHeight / 2 }\n    }, [innerHeight, innerWidth])\n\n    const { arcGenerator, nodes } = useSunburst({\n        data,\n        id,\n        value,\n        valueFormat,\n        radius,\n        cornerRadius,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const boundDefs = bindDefs(defs, nodes, fill, {\n        dataKey: '.',\n        colorKey: 'color',\n        targetKey: 'fill',\n    })\n\n    const layerById: Record<SunburstLayerId, ReactNode> = {\n        arcs: null,\n        arcLabels: null,\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={nodes}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                transitionMode={transitionMode}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseMove={onMouseMove}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={nodes}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    const layerContext = useSunburstLayerContext<RawDatum>({\n        nodes,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            defs={boundDefs}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as SunburstLayerId] !== undefined) {\n                    return layerById[layer as SunburstLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Sunburst = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    ...otherProps\n}: Partial<Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme }}>\n        <InnerSunburst<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport sortBy from 'lodash/sortBy'\nimport cloneDeep from 'lodash/cloneDeep'\nimport { usePropertyAccessor, useTheme, useValueFormatter } from '@nivo/core'\nimport { Arc, useArcGenerator } from '@nivo/arcs'\nimport { useOrdinalColorScale, useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { partition as d3Partition, hierarchy as d3Hierarchy } from 'd3-hierarchy'\nimport {\n    SunburstCommonProps,\n    ComputedDatum,\n    DataProps,\n    DatumId,\n    SunburstCustomLayerProps,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useSunburst = <RawDatum>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    radius,\n    cornerRadius = defaultProps.cornerRadius,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n}: {\n    data: DataProps<RawDatum>['data']\n    id?: DataProps<RawDatum>['id']\n    value?: DataProps<RawDatum>['value']\n    valueFormat?: DataProps<RawDatum>['valueFormat']\n    radius: number\n    cornerRadius?: SunburstCommonProps<RawDatum>['cornerRadius']\n    colors?: SunburstCommonProps<RawDatum>['colors']\n    colorBy?: SunburstCommonProps<RawDatum>['colorBy']\n    inheritColorFromParent?: SunburstCommonProps<RawDatum>['inheritColorFromParent']\n    childColor?: SunburstCommonProps<RawDatum>['childColor']\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>>(\n        colors,\n        colorBy\n    )\n    const getChildColor = useInheritedColor<ComputedDatum<RawDatum>>(childColor, theme)\n\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const nodes: ComputedDatum<RawDatum>[] = useMemo(() => {\n        // d3 mutates the data for performance reasons,\n        // however it does not work well with reactive programming,\n        // this ensures that we don't mutate the input data\n        const clonedData = cloneDeep(data)\n\n        const hierarchy = d3Hierarchy(clonedData).sum(getValue)\n\n        const partition = d3Partition<RawDatum>().size([2 * Math.PI, radius * radius])\n        // exclude root node\n        const descendants = partition(hierarchy).descendants().slice(1)\n\n        const total = hierarchy.value ?? 0\n\n        // It's important to sort node by depth,\n        // it ensures that we assign a parent node\n        // which has already been computed, because parent nodes\n        // are going to be computed first\n        const sortedNodes = sortBy(descendants, 'depth')\n\n        return sortedNodes.reduce<ComputedDatum<RawDatum>[]>((acc, descendant) => {\n            const id = getId(descendant.data)\n            // d3 hierarchy node value is optional by default as it depends on\n            // a call to `count()` or `sum()`, and we previously called `sum()`,\n            // d3 typings could be improved and make it non optional when calling\n            // one of those.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const value = descendant.value!\n            const percentage = (100 * value) / total\n            const path = descendant.ancestors().map(ancestor => getId(ancestor.data))\n\n            const arc: Arc = {\n                startAngle: descendant.x0,\n                endAngle: descendant.x1,\n                innerRadius: Math.sqrt(descendant.y0),\n                outerRadius: Math.sqrt(descendant.y1),\n            }\n\n            let parent: ComputedDatum<RawDatum> | undefined\n            if (descendant.parent) {\n                // as the parent is defined by the input data, and we sorted the data\n                // by `depth`, we can safely assume it's defined.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                parent = acc.find(node => node.id === getId(descendant.parent!.data))\n            }\n\n            const normalizedNode: ComputedDatum<RawDatum> = {\n                id,\n                path,\n                value,\n                percentage,\n                formattedValue: valueFormat ? formatValue(value) : `${percentage.toFixed(2)}%`,\n                color: '',\n                arc,\n                data: descendant.data,\n                depth: descendant.depth,\n                height: descendant.height,\n            }\n\n            if (inheritColorFromParent && parent && normalizedNode.depth > 1) {\n                normalizedNode.color = getChildColor(parent)\n            } else {\n                normalizedNode.color = getColor(normalizedNode)\n            }\n\n            return [...acc, normalizedNode]\n        }, [])\n    }, [\n        data,\n        radius,\n        getValue,\n        getId,\n        valueFormat,\n        formatValue,\n        getColor,\n        inheritColorFromParent,\n        getChildColor,\n    ])\n\n    const arcGenerator = useArcGenerator({ cornerRadius })\n\n    return { arcGenerator, nodes }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useSunburstLayerContext = <RawDatum>({\n    nodes,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n}: SunburstCustomLayerProps<RawDatum>): SunburstCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            nodes,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n        }),\n        [nodes, arcGenerator, centerX, centerY, radius]\n    )\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { Sunburst } from './Sunburst'\nimport { SunburstSvgProps } from './types'\n\ntype ResponsiveSunburstProps<RawDatum> = Partial<\n    Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data'>\n\nexport const ResponsiveSunburst = <RawDatum,>(props: ResponsiveSunburstProps<RawDatum>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Sunburst<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","import { defaultProps } from '@nivo/sunburst'\nimport { arcTransitionModes } from '@nivo/arcs'\nimport {\n    groupProperties,\n    defsProperties,\n    motionProperties,\n    themeProperty,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data, which should be immutable.',\n        description: `\n            Chart data, which must conform to this structure\n            if using the default \\`id\\` and \\`value\\` accessors:\n\n            \\`\\`\\`\n            {\n                // must be unique for the whole dataset\n                id: string | number\n                value: number\n                children: {\n                    id: string | number\n                    value: number\n                    children: ...\n                }[]\n            }\n            \\`\\`\\`\n\n            If using a different data structure, you must make sure\n            to adjust both \\`id\\` and \\`value\\`. Meaning you can provide\n            a completely different data structure as long as \\`id\\` and \\`value\\`\n            return the appropriate values.\n\n            Immutability of the data is important as re-computations\n            depends on it.\n        `,\n        type: 'object',\n        required: true,\n    },\n    {\n        key: 'id',\n        group: 'Base',\n        help: 'Id accessor.',\n        description: `\n            define id accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            id (string | number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.id,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        help: 'Value accessor',\n        description: `\n            define value accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            value (number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.value,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'string | (value: number) => string | number',\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'cornerRadius',\n        help: 'Round node shape.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.cornerRadius,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveSunburst/>\\`.\n        `,\n        help: 'Chart width.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveSunburst/>\\`.\n        `,\n        help: 'Chart height.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines how to compute node color.',\n        required: false,\n        defaultValue: defaultProps.colors,\n        controlType: 'ordinalColors',\n        type: 'string | Function | string[]',\n        group: 'Style',\n    },\n    {\n        key: 'colorBy',\n        help: `Define the property to use to assign a color to arcs.`,\n        description: `\n            When using \\`id\\`, each node will get a new color,\n            and when using \\`depth\\` the nodes' color will depend on their depth.\n        `,\n        type: `'id' | 'depth'`,\n        required: false,\n        defaultValue: defaultProps.colorBy,\n        controlType: 'radio',\n        group: 'Style',\n        controlOptions: {\n            choices: [\n                { label: 'id', value: 'id' },\n                { label: 'depth', value: 'depth' },\n            ],\n        },\n    },\n    {\n        key: 'inheritColorFromParent',\n        help: 'Inherit color from parent node starting from 2nd level.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.inheritColorFromParent,\n        controlType: 'switch',\n        group: 'Style',\n    },\n    {\n        key: 'childColor',\n        help: 'Defines how to compute child nodes color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.childColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Node border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Defines how to compute arcs color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg', 'api']),\n    {\n        key: 'showcase pattern usage',\n        flavors: ['svg'],\n        help: 'Patterns.',\n        description: `\n            You can use \\`defs\\` and \\`fill\\` properties\n            to use patterns, see\n            [dedicated guide](self:/guides/patterns)\n            for further information.\n        `,\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Style',\n    },\n    {\n        key: 'enableArcLabels',\n        help: 'Enable/disable arc labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.enableArcLabels,\n        controlType: 'switch',\n        group: 'Arc labels',\n    },\n    {\n        key: 'arcLabel',\n        help:\n            'Defines how to get label text, can be a string (used to access current node data property) or a function which will receive the actual node data.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.arcLabel,\n        controlType: 'choices',\n        group: 'Arc labels',\n        controlOptions: {\n            choices: ['id', 'value', 'formattedValue', `d => \\`\\${d.id} (\\${d.value})\\``].map(\n                choice => ({\n                    label: choice,\n                    value: choice,\n                })\n            ),\n        },\n    },\n    {\n        key: 'arcLabelsRadiusOffset',\n        help: `\n            Define the radius to use to determine the label position, starting from inner radius,\n            this is expressed as a ratio.\n        `,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.arcLabelsRadiusOffset,\n        controlType: 'range',\n        group: 'Arc labels',\n        controlOptions: {\n            min: 0,\n            max: 2,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'arcLabelsSkipAngle',\n        help: `Skip label if corresponding arc's angle is lower than provided value.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.arcLabelsSkipAngle,\n        controlType: 'range',\n        group: 'Arc labels',\n        controlOptions: {\n            unit: '°',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'arcLabelsTextColor',\n        help: 'Defines how to compute arc label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.arcLabelsTextColor,\n        controlType: 'inheritedColor',\n        group: 'Arc labels',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n\n            The layer component which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`Sunburst\\` component.\n\n            The context passed to layers has the following structure:\n\n            \\`\\`\\`\n            {\n                nodes:  ComputedDatum<RawDatum>[],\n                arcGenerator: Function\n                centerX:      number\n                centerY:      number\n                radius:       number\n            }\n            \\`\\`\\`\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaultProps.layers,\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        help: 'Enable/disable interactivity.',\n        type: '{boolean}',\n        required: false,\n        defaultValue: defaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n    {\n        key: 'transitionMode',\n        flavors: ['svg'],\n        help: 'Define how transitions behave.',\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.transitionMode,\n        controlType: 'choices',\n        group: 'Motion',\n        controlOptions: {\n            choices: arcTransitionModes.map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Tooltip custom component',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the following data:\n            \\`\\`\\`\n            {\n                id:         string | number,\n                value:      number,\n                depth:      number,\n                color:      string,\n                name:       string\n                loc:        number\n                percentage: number\n                // the parent datum\n                ancestor:   object\n            }\n            \\`\\`\\`\n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'Showcase custom tooltip component.',\n        type: 'boolean',\n        controlType: 'switch',\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'onClick handler',\n        description: `\n            onClick handler, will receive node data as first argument\n            & event as second one. The node data has the following shape:\n\n            \\`\\`\\`\n            {\n                id:         string | number,\n                value:      number,\n                depth:      number,\n                color:      string,\n                name:       string\n                loc:        number\n                percentage: number\n                // the parent datum\n                ancestor:   object\n            }\n            \\`\\`\\`\n        `,\n    },\n]\n\nexport const groups = groupProperties(props)\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { patternLinesDef } from '@nivo/core'\nimport { mapFormat, settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    background: #fff;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    font-size: 12px;\n    border-radius: 2px;\n    box-shadow: 1px 1px 0 rgba(0, 0, 0, 0.15);\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\nconst TooltipValue = styled.span``\n\nconst CustomTooltip = node => {\n    return (\n        <TooltipWrapper style={{ color: node.color }}>\n            <TooltipKey>id</TooltipKey>\n            <TooltipValue>{node.id}</TooltipValue>\n            <TooltipKey>value</TooltipKey>\n            <TooltipValue>{node.value}</TooltipValue>\n            <TooltipKey>percentage</TooltipKey>\n            <TooltipValue>{Math.round(node.percentage * 100) / 100}%</TooltipValue>\n            <TooltipKey>color</TooltipKey>\n            <TooltipValue>{node.color}</TooltipValue>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        arcLabel: value => {\n            if (value === `d => \\`\\${d.id} (\\${d.value})\\``) return d => `${d.id} (${d.value})`\n            return value\n        },\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n        defs: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                patternLinesDef('lines', {\n                    background: 'rgba(0, 0, 0, 0)',\n                    color: 'inherit',\n                    rotation: -45,\n                    lineWidth: 4,\n                    spacing: 8,\n                }),\n            ]\n        },\n        fill: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                { match: { id: 'set' }, id: 'lines' },\n                { match: { id: 'misc' }, id: 'lines' },\n            ]\n        },\n    },\n    {\n        exclude: ['custom tooltip example', 'showcase pattern usage'],\n    }\n)\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping, { exclude = [] } = {}) => (settings, options = {}) => {\n    const overrides = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = type => (value, settings) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }) => (enabled === true ? format : undefined)\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n"],"sourceRoot":""}