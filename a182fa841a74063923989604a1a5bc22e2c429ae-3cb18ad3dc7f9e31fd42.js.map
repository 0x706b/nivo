{"version":3,"sources":["webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../src/hooks.ts","webpack:///../src/props.ts","webpack:///../src/CirclePackingTooltip.tsx","webpack:///../src/Circles.tsx","webpack:///../src/CircleSvg.tsx","webpack:///../src/Labels.tsx","webpack:///../src/LabelSvg.tsx","webpack:///../src/CirclePacking.tsx","webpack:///../src/ResponsiveCirclePacking.tsx","webpack:///../src/CircleHtml.tsx","webpack:///../src/LabelHtml.tsx","webpack:///../src/CirclePackingHtml.tsx","webpack:///../src/ResponsiveCirclePackingHtml.tsx","webpack:///../src/CirclePackingCanvas.tsx","webpack:///../src/ResponsiveCirclePackingCanvas.tsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","toString","slice","constructor","name","from","test","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","unsupportedIterableToArray","TypeError","nonIterableRest","_toConsumableArray","arrayWithoutHoles","iter","iterableToArray","nonIterableSpread","useCirclePacking","data","id","valueFormat","width","height","padding","leavesOnly","colors","colorBy","inheritColorFromParent","childColor","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","theme","useTheme","getChildColor","useInheritedColor","clonedData","cloneDeep","hierarchy","d3Hierarchy","packedData","d3Pack","pack","nodes","sortedNodes","sortBy","total","descendant","percentage","path","ancestor","parent","acc","node","normalizedNode","formattedValue","x","y","radius","color","depth","useCirclePackingZoom","useMemo","zoomedNode","ratio","Math","offsetX","offsetY","useCirclePackingLabels","label","skipRadius","textColor","getLabel","getTextColor","labels","useNodeMouseHandlers","onMouseEnter","onMouseMove","onMouseLeave","onClick","useCirclePackingLayerContext","defaultProps","layers","scheme","modifiers","borderWidth","borderColor","defs","fill","enableLabels","labelTextColor","labelsSkipRadius","isInteractive","tooltip","enableChip","animate","motionConfig","role","pixelRatio","window","interpolateRadius","radiusValue","to","Circles","component","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","handleClick","useMotionConfig","springConfig","getBorderColor","transitionPhases","enter","opacity","update","leave","getTransitionPhases","transition","useTransition","initial","config","immediate","style","transitionProps","CircleSvg","handlers","cx","cy","r","stroke","strokeWidth","Labels","LabelSvg","textAnchor","dominantBaseline","pointerEvents","InnerCirclePacking","partialMargin","margin","circleComponent","labelsFilter","labelComponent","zoomedId","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","zoomedNodes","boundDefs","bindDefs","targetKey","layerById","circles","layerContext","layer","CirclePacking","otherProps","ResponsiveCirclePacking","interpolatePosition","positionValue","position","interpolateSize","CircleHtml","size","top","left","borderRadius","backgroundColor","borderStyle","boxSizing","LabelHtml","display","justifyContent","alignItems","InnerCirclePackingHtml","overflow","CirclePackingHtml","ResponsiveCirclePackingHtml","InnerCirclePackingCanvas","canvasEl","useRef","useEffect","ctx","getNodeFromMouseEvent","useCallback","getRelativeCursor","getDistance","useMouseCircleDetection","handleMouseHover","ref","cursor","CirclePackingCanvas","ResponsiveCirclePackingCanvas"],"mappings":"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","file":"a182fa841a74063923989604a1a5bc22e2c429ae-3cb18ad3dc7f9e31fd42.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useMemo, MouseEvent, MutableRefObject, useCallback } from 'react'\nimport { pack as d3Pack, hierarchy as d3Hierarchy } from 'd3-hierarchy'\nimport cloneDeep from 'lodash/cloneDeep'\nimport sortBy from 'lodash/sortBy'\nimport {\n    usePropertyAccessor,\n    useValueFormatter,\n    useTheme,\n    getRelativeCursor,\n    getDistance,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    CirclePackingCommonProps,\n    CirclePackingCustomLayerProps,\n    ComputedDatum,\n    MouseHandlers,\n} from './types'\n\nexport const useCirclePacking = <RawDatum>({\n    data,\n    id,\n    value,\n    valueFormat,\n    width,\n    height,\n    padding,\n    leavesOnly,\n    colors,\n    colorBy,\n    inheritColorFromParent,\n    childColor,\n}: {\n    data: CirclePackingCommonProps<RawDatum>['data']\n    id: CirclePackingCommonProps<RawDatum>['id']\n    value: CirclePackingCommonProps<RawDatum>['value']\n    valueFormat?: CirclePackingCommonProps<RawDatum>['valueFormat']\n    width: number\n    height: number\n    padding: CirclePackingCommonProps<RawDatum>['padding']\n    leavesOnly: CirclePackingCommonProps<RawDatum>['leavesOnly']\n    colors: CirclePackingCommonProps<RawDatum>['colors']\n    colorBy: CirclePackingCommonProps<RawDatum>['colorBy']\n    inheritColorFromParent: CirclePackingCommonProps<RawDatum>['inheritColorFromParent']\n    childColor: CirclePackingCommonProps<RawDatum>['childColor']\n}): ComputedDatum<RawDatum>[] => {\n    const getId = usePropertyAccessor<RawDatum, string>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>>(\n        colors,\n        colorBy\n    )\n    const theme = useTheme()\n    const getChildColor = useInheritedColor<ComputedDatum<RawDatum>>(childColor, theme)\n\n    // d3 mutates the data for performance reasons,\n    // however it does not work well with reactive programming,\n    // this ensures that we don't mutate the input data\n    const clonedData = cloneDeep(data)\n\n    const hierarchy = d3Hierarchy<RawDatum>(clonedData).sum(getValue)\n\n    const pack = d3Pack<RawDatum>().size([width, height]).padding(padding)\n    const packedData = pack(hierarchy)\n\n    const nodes = leavesOnly ? packedData.leaves() : packedData.descendants()\n\n    // It's important to sort node by depth,\n    // it ensures that we assign a parent node\n    // which has already been computed, because parent nodes\n    // are gonna be computed first\n    const sortedNodes = sortBy(nodes, 'depth')\n\n    const total = hierarchy.value ?? 0\n\n    const computedNodes = sortedNodes.reduce<ComputedDatum<RawDatum>[]>((acc, descendant) => {\n        const id = getId(descendant.data)\n        const value = descendant.value!\n        const percentage = (100 * value) / total\n        const path = descendant.ancestors().map(ancestor => getId(ancestor.data))\n\n        let parent: ComputedDatum<RawDatum> | undefined\n        if (descendant.parent) {\n            parent = acc.find(node => node.id === getId(descendant.parent!.data))\n        }\n\n        const normalizedNode: ComputedDatum<RawDatum> = {\n            id,\n            path,\n            value,\n            percentage,\n            formattedValue: valueFormat ? formatValue(value) : `${percentage.toFixed(2)}%`,\n            x: descendant.x,\n            y: descendant.y,\n            radius: descendant.r,\n            color: '',\n            data: descendant.data,\n            depth: descendant.depth,\n            height: descendant.height,\n        }\n\n        if (inheritColorFromParent && parent && normalizedNode.depth > 1) {\n            normalizedNode.color = getChildColor(parent)\n        } else {\n            normalizedNode.color = getColor(normalizedNode)\n        }\n\n        return [...acc, normalizedNode]\n    }, [])\n\n    return computedNodes\n}\n\nexport const useCirclePackingZoom = <RawDatum>(\n    nodes: ComputedDatum<RawDatum>[],\n    zoomedId: CirclePackingCommonProps<RawDatum>['zoomedId'],\n    width: number,\n    height: number\n) =>\n    useMemo(() => {\n        if (!zoomedId) return nodes\n\n        const zoomedNode = nodes.find(({ id }) => id === zoomedId)\n        if (!zoomedNode) return nodes\n\n        const ratio = Math.min(width, height) / (zoomedNode.radius * 2)\n        const offsetX = width / 2 - zoomedNode.x * ratio\n        const offsetY = height / 2 - zoomedNode.y * ratio\n\n        return nodes.map(node => ({\n            ...node,\n            x: node.x * ratio + offsetX,\n            y: node.y * ratio + offsetY,\n            radius: node.radius * ratio,\n        }))\n    }, [nodes, zoomedId, width, height])\n\nexport const useCirclePackingLabels = <RawDatum>({\n    nodes,\n    label,\n    filter,\n    skipRadius,\n    textColor,\n}: {\n    nodes: ComputedDatum<RawDatum>[]\n    label: CirclePackingCommonProps<RawDatum>['label']\n    filter: CirclePackingCommonProps<RawDatum>['labelsFilter']\n    skipRadius: CirclePackingCommonProps<RawDatum>['labelsSkipRadius']\n    textColor: CirclePackingCommonProps<RawDatum>['labelTextColor']\n}) => {\n    const getLabel = usePropertyAccessor<ComputedDatum<RawDatum>, string | number>(label)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<ComputedDatum<RawDatum>>(textColor, theme)\n\n    // computing the labels\n    const labels = useMemo(\n        () =>\n            nodes\n                .filter(node => node.radius >= skipRadius)\n                .map(node => ({\n                    label: getLabel(node),\n                    textColor: getTextColor(node),\n                    node,\n                })),\n        [nodes, skipRadius, getLabel, getTextColor]\n    )\n\n    // apply extra filtering if provided\n    return useMemo(() => {\n        if (!filter) return labels\n\n        return labels.filter(filter)\n    }, [labels, filter])\n}\n\nexport const useNodeMouseHandlers = <RawDatum>(\n    node: ComputedDatum<RawDatum>,\n    { onMouseEnter, onMouseMove, onMouseLeave, onClick }: MouseHandlers<RawDatum>\n): Partial<\n    Record<'onMouseEnter' | 'onMouseMove' | 'onMouseLeave' | 'onClick', (event: MouseEvent) => void>\n> =>\n    useMemo(\n        () => ({\n            onMouseEnter: onMouseEnter\n                ? (event: MouseEvent) => {\n                      onMouseEnter(node, event)\n                  }\n                : undefined,\n            onMouseMove: onMouseMove\n                ? (event: MouseEvent) => {\n                      onMouseMove(node, event)\n                  }\n                : undefined,\n            onMouseLeave: onMouseLeave\n                ? (event: MouseEvent) => {\n                      onMouseLeave(node, event)\n                  }\n                : undefined,\n            onClick: onClick\n                ? (event: MouseEvent) => {\n                      onClick(node, event)\n                  }\n                : undefined,\n        }),\n        [node, onMouseEnter, onMouseMove, onMouseLeave, onClick]\n    )\n\nexport const useMouseCircleDetection = <RawDatum>({\n    nodes,\n    canvasEl,\n    margin,\n}: {\n    nodes: ComputedDatum<RawDatum>[]\n    canvasEl: MutableRefObject<HTMLCanvasElement | null>\n    margin: {\n        top: number\n        left: number\n    }\n}) => {\n    // we need to sort in order to detect higher nodes first\n    const sortedNodes = useMemo(() => sortBy(nodes, 'height'), [nodes])\n\n    return useCallback(\n        (event: MouseEvent) => {\n            if (!canvasEl.current) return null\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n            return sortedNodes.find(node => {\n                const distanceFromNode = getDistance(\n                    node.x,\n                    node.y,\n                    x - margin.left,\n                    y - margin.top\n                )\n                return distanceFromNode <= node.radius\n            })\n        },\n        [canvasEl, margin, sortedNodes]\n    )\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useCirclePackingLayerContext = <RawDatum>({\n    nodes,\n}: {\n    nodes: ComputedDatum<RawDatum>[]\n}): CirclePackingCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            nodes,\n        }),\n        [nodes]\n    )\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { CirclePackingLayerId } from './types'\nimport { CirclePackingTooltip } from './CirclePackingTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    padding: 0,\n    leavesOnly: false,\n    layers: ['circles', 'labels'] as CirclePackingLayerId[],\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n    colorBy: 'depth' as const,\n    inheritColorFromParent: false,\n    childColor: {\n        from: 'color',\n        modifiers: [['darker', 0.3]],\n    },\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.3]],\n    },\n    defs: [],\n    fill: [],\n    enableLabels: false,\n    label: 'id',\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1.6]],\n    },\n    labelsSkipRadius: 8,\n    isInteractive: true,\n    tooltip: CirclePackingTooltip,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const CirclePackingTooltip = <RawDatum,>({\n    id,\n    formattedValue,\n    color,\n}: ComputedDatum<RawDatum>) => (\n    <BasicTooltip id={id} value={formattedValue} enableChip={true} color={color} />\n)\n","import { createElement, useMemo, MouseEvent } from 'react'\nimport * as React from 'react'\nimport { useTransition, to, SpringValue } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CircleComponent, MouseHandlers, CirclePackingCommonProps } from './types'\n\n/**\n * A negative radius value is invalid for an SVG circle,\n * this custom interpolation makes sure it's either\n * positive or zero.\n */\nexport const interpolateRadius = (radiusValue: SpringValue<number>) =>\n    to([radiusValue], radius => Math.max(0, radius))\n\ntype CirclesProps<RawDatum> = {\n    nodes: ComputedDatum<RawDatum>[]\n    borderWidth: CirclePackingCommonProps<RawDatum>['borderWidth']\n    borderColor: CirclePackingCommonProps<RawDatum>['borderColor']\n    component: CircleComponent<RawDatum>\n    isInteractive: CirclePackingCommonProps<RawDatum>['isInteractive']\n    tooltip: CirclePackingCommonProps<RawDatum>['tooltip']\n} & MouseHandlers<RawDatum>\n\nconst getTransitionPhases = <RawDatum,>(\n    getBorderColor: (node: ComputedDatum<RawDatum>) => string\n) => ({\n    enter: (node: ComputedDatum<RawDatum>) => ({\n        x: node.x,\n        y: node.y,\n        radius: 0,\n        color: node.color,\n        borderColor: getBorderColor(node),\n        opacity: 0,\n    }),\n    update: (node: ComputedDatum<RawDatum>) => ({\n        x: node.x,\n        y: node.y,\n        radius: node.radius,\n        color: node.color,\n        borderColor: getBorderColor(node),\n        opacity: 1,\n    }),\n    leave: (node: ComputedDatum<RawDatum>) => ({\n        x: node.x,\n        y: node.y,\n        radius: 0,\n        color: node.color,\n        borderColor: getBorderColor(node),\n        opacity: 0,\n    }),\n})\n\nexport const Circles = <RawDatum,>({\n    nodes,\n    borderWidth,\n    borderColor,\n    component,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: CirclesProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, node), event)\n            onMouseEnter?.(node, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, node), event)\n            onMouseMove?.(node, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            hideTooltip()\n            onMouseLeave?.(node, event)\n        }\n    }, [isInteractive, hideTooltip, onMouseLeave])\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            onClick?.(node, event)\n        }\n    }, [isInteractive, onClick])\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const transitionPhases = useMemo(() => getTransitionPhases<RawDatum>(getBorderColor), [\n        getBorderColor,\n    ])\n\n    const transition = useTransition<\n        ComputedDatum<RawDatum>,\n        {\n            x: number\n            y: number\n            radius: number\n            color: string\n            borderColor: string\n            opacity: number\n        }\n    >(nodes, {\n        keys: node => node.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((transitionProps, node) => {\n                return React.createElement(component, {\n                    key: node.id,\n                    node,\n                    style: {\n                        ...transitionProps,\n                        radius: interpolateRadius(transitionProps.radius),\n                        borderWidth,\n                    },\n                    onMouseEnter: handleMouseEnter,\n                    onMouseMove: handleMouseMove,\n                    onMouseLeave: handleMouseLeave,\n                    onClick: handleClick,\n                })\n            })}\n        </>\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { CircleProps } from './types'\nimport { useNodeMouseHandlers } from './hooks'\n\nexport const CircleSvg = <RawDatum,>({\n    node,\n    style,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: CircleProps<RawDatum>) => {\n    const handlers = useNodeMouseHandlers<RawDatum>(node, {\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    })\n\n    return (\n        <animated.circle\n            key={node.id}\n            cx={style.x}\n            cy={style.y}\n            r={style.radius}\n            fill={node.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            opacity={style.opacity}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n","import { createElement, useMemo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { CirclePackingCommonProps, ComputedDatum, LabelComponent, ComputedLabel } from './types'\nimport { useCirclePackingLabels } from './hooks'\nimport { interpolateRadius } from './Circles'\n\ninterface CirclesProps<RawDatum> {\n    nodes: ComputedDatum<RawDatum>[]\n    label: CirclePackingCommonProps<RawDatum>['label']\n    filter?: CirclePackingCommonProps<RawDatum>['labelsFilter']\n    skipRadius: CirclePackingCommonProps<RawDatum>['labelsSkipRadius']\n    textColor: CirclePackingCommonProps<RawDatum>['labelTextColor']\n    component: LabelComponent<RawDatum>\n}\n\nconst getTransitionPhases = <RawDatum,>() => ({\n    enter: (label: ComputedLabel<RawDatum>) => ({\n        x: label.node.x,\n        y: label.node.y,\n        radius: label.node.radius,\n        textColor: label.textColor,\n        opacity: 0,\n    }),\n    update: (label: ComputedLabel<RawDatum>) => ({\n        x: label.node.x,\n        y: label.node.y,\n        radius: label.node.radius,\n        textColor: label.textColor,\n        opacity: 1,\n    }),\n    leave: (label: ComputedLabel<RawDatum>) => ({\n        x: label.node.x,\n        y: label.node.y,\n        radius: label.node.radius,\n        textColor: label.textColor,\n        opacity: 0,\n    }),\n})\n\nexport const Labels = <RawDatum,>({\n    nodes,\n    label,\n    filter,\n    skipRadius,\n    textColor,\n    component,\n}: CirclesProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useCirclePackingLabels({\n        nodes,\n        label,\n        filter,\n        skipRadius,\n        textColor,\n    })\n\n    const transitionPhases = useMemo(() => getTransitionPhases<RawDatum>(), [])\n\n    const transition = useTransition<\n        ComputedLabel<RawDatum>,\n        {\n            x: number\n            y: number\n            radius: number\n            textColor: string\n            opacity: number\n        }\n    >(labels, {\n        keys: label => label.node.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((transitionProps, label) => {\n                return createElement(component, {\n                    key: label.node.id,\n                    label: label.label,\n                    style: {\n                        ...transitionProps,\n                        radius: interpolateRadius(transitionProps.radius),\n                    },\n                    node: label.node,\n                })\n            })}\n        </>\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { LabelProps } from './types'\n\nexport const LabelSvg = <RawDatum,>({ node, label, style }: LabelProps<RawDatum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.text\n            key={node.id}\n            x={style.x}\n            y={style.y}\n            textAnchor=\"middle\"\n            dominantBaseline=\"central\"\n            style={{\n                ...theme.labels.text,\n                fill: style.textColor,\n                opacity: style.opacity,\n                pointerEvents: 'none',\n            }}\n        >\n            {label}\n        </animated.text>\n    )\n}\n","import { createElement, Fragment, ReactNode, useMemo } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { CirclePackingLayerId, CirclePackingSvgProps, ComputedDatum } from './types'\nimport { useCirclePacking, useCirclePackingZoom, useCirclePackingLayerContext } from './hooks'\nimport { defaultProps } from './props'\nimport { Circles } from './Circles'\nimport { CircleSvg } from './CircleSvg'\nimport { Labels } from './Labels'\nimport { LabelSvg } from './LabelSvg'\n\ntype InnerCirclePackingProps<RawDatum> = Partial<\n    Omit<\n        CirclePackingSvgProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nconst InnerCirclePacking = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    width,\n    height,\n    margin: partialMargin,\n    padding = defaultProps.padding,\n    leavesOnly = defaultProps.leavesOnly,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>\n    >,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    circleComponent = CircleSvg,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    enableLabels = defaultProps.enableLabels,\n    label = defaultProps.label,\n    labelsFilter,\n    labelsSkipRadius = defaultProps.labelsSkipRadius,\n    labelTextColor = defaultProps.labelTextColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    labelComponent = LabelSvg,\n    layers = defaultProps.layers,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = defaultProps.tooltip,\n    zoomedId,\n    role = defaultProps.role,\n}: InnerCirclePackingProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const nodes = useCirclePacking<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        leavesOnly,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const zoomedNodes = useCirclePackingZoom<RawDatum>(nodes, zoomedId, innerWidth, innerHeight)\n\n    const boundDefs = useMemo(() => bindDefs(defs, zoomedNodes, fill, { targetKey: 'fill' }), [\n        defs,\n        zoomedNodes,\n        fill,\n    ])\n\n    const layerById: Record<CirclePackingLayerId, ReactNode> = {\n        circles: null,\n        labels: null,\n    }\n\n    if (layers.includes('circles')) {\n        layerById.circles = (\n            <Circles<RawDatum>\n                key=\"circles\"\n                nodes={zoomedNodes}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                component={circleComponent}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (enableLabels && layers.includes('labels')) {\n        layerById.labels = (\n            <Labels<RawDatum>\n                key=\"labels\"\n                nodes={zoomedNodes}\n                label={label}\n                filter={labelsFilter}\n                skipRadius={labelsSkipRadius}\n                textColor={labelTextColor}\n                component={labelComponent}\n            />\n        )\n    }\n\n    const layerContext = useCirclePackingLayerContext<RawDatum>({\n        nodes,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as CirclePackingLayerId] !== undefined) {\n                    return layerById[layer as CirclePackingLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const CirclePacking = <RawDatum,>({\n    theme,\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    ...otherProps\n}: Partial<Omit<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container\n        isInteractive={isInteractive}\n        animate={animate}\n        motionConfig={motionConfig}\n        theme={theme}\n    >\n        <InnerCirclePacking<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CirclePackingSvgProps } from './types'\nimport { CirclePacking } from './CirclePacking'\n\ntype ResponsiveCirclePackingProps<RawDatum> = Partial<\n    Omit<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<CirclePackingSvgProps<RawDatum>, 'data'>\n\nexport const ResponsiveCirclePacking = <RawDatum,>(\n    props: ResponsiveCirclePackingProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <CirclePacking<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { animated, to, SpringValue, Interpolation } from '@react-spring/web'\nimport { CircleProps } from './types'\nimport { useNodeMouseHandlers } from './hooks'\n\nexport const interpolatePosition = (\n    positionValue: SpringValue<number>,\n    radiusValue: Interpolation<number>\n) => to([positionValue, radiusValue], (position, radius) => position - radius)\n\nexport const interpolateSize = (radiusValue: Interpolation<number>) =>\n    to([radiusValue], radius => radius * 2)\n\nexport const interpolateBorderWidth = (borderWidth: number, radiusValue: Interpolation<number>) =>\n    to([radiusValue], radius => Math.min(borderWidth, radius))\n\nexport const CircleHtml = <RawDatum,>({\n    node,\n    style,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: CircleProps<RawDatum>) => {\n    const size = interpolateSize(style.radius)\n\n    const handlers = useNodeMouseHandlers<RawDatum>(node, {\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    })\n\n    return (\n        <animated.div\n            style={{\n                position: 'absolute',\n                top: interpolatePosition(style.y, style.radius),\n                left: interpolatePosition(style.x, style.radius),\n                height: size,\n                width: size,\n                borderRadius: style.radius,\n                backgroundColor: style.color,\n                borderWidth: interpolateBorderWidth(style.borderWidth, style.radius),\n                borderStyle: 'solid',\n                borderColor: style.borderColor,\n                boxSizing: 'border-box',\n            }}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { LabelProps } from './types'\nimport { interpolatePosition, interpolateSize } from './CircleHtml'\n\nexport const LabelHtml = <RawDatum,>({ node, label, style }: LabelProps<RawDatum>) => {\n    const theme = useTheme()\n    const size = interpolateSize(style.radius)\n\n    return (\n        <animated.div\n            key={node.id}\n            style={{\n                ...theme.labels.text,\n                position: 'absolute',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                top: interpolatePosition(style.y, style.radius),\n                left: interpolatePosition(style.x, style.radius),\n                width: size,\n                height: size,\n                color: style.textColor,\n                opacity: style.opacity,\n                pointerEvents: 'none',\n            }}\n        >\n            {label}\n        </animated.div>\n    )\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, useDimensions } from '@nivo/core'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { CirclePackingHtmlProps, CirclePackingLayerId, ComputedDatum } from './types'\nimport { useCirclePacking, useCirclePackingLayerContext, useCirclePackingZoom } from './hooks'\nimport { Circles } from './Circles'\nimport { CircleHtml } from './CircleHtml'\nimport { defaultProps } from './props'\nimport { Labels } from './Labels'\nimport { LabelHtml } from './LabelHtml'\n\ntype InnerCirclePackingHtmlProps<RawDatum> = Partial<\n    Omit<\n        CirclePackingHtmlProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nexport const InnerCirclePackingHtml = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    width,\n    height,\n    margin: partialMargin,\n    padding = defaultProps.padding,\n    leavesOnly = defaultProps.leavesOnly,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>\n    >,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    circleComponent = CircleHtml,\n    enableLabels = defaultProps.enableLabels,\n    label = defaultProps.label,\n    labelsFilter,\n    labelsSkipRadius = defaultProps.labelsSkipRadius,\n    labelTextColor = defaultProps.labelTextColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    labelComponent = LabelHtml,\n    layers = defaultProps.layers,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = defaultProps.tooltip,\n    zoomedId,\n    role = defaultProps.role,\n}: InnerCirclePackingHtmlProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const nodes = useCirclePacking<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        leavesOnly,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const zoomedNodes = useCirclePackingZoom<RawDatum>(nodes, zoomedId, innerWidth, innerHeight)\n\n    const layerById: Record<CirclePackingLayerId, ReactNode> = {\n        circles: null,\n        labels: null,\n    }\n\n    if (layers.includes('circles')) {\n        layerById.circles = (\n            <Circles<RawDatum>\n                key=\"circles\"\n                nodes={zoomedNodes}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                component={circleComponent}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (enableLabels && layers.includes('labels')) {\n        layerById.labels = (\n            <Labels<RawDatum>\n                key=\"labels\"\n                nodes={zoomedNodes}\n                label={label}\n                filter={labelsFilter}\n                skipRadius={labelsSkipRadius}\n                textColor={labelTextColor}\n                component={labelComponent}\n            />\n        )\n    }\n\n    const layerContext = useCirclePackingLayerContext<RawDatum>({\n        nodes,\n    })\n\n    return (\n        <div\n            role={role}\n            style={{\n                position: 'relative',\n                overflow: 'hidden',\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        >\n            <div\n                style={{\n                    position: 'absolute',\n                    top: margin.top,\n                    left: margin.left,\n                }}\n            >\n                {layers.map((layer, i) => {\n                    if (layerById[layer as CirclePackingLayerId] !== undefined) {\n                        return layerById[layer as CirclePackingLayerId]\n                    }\n\n                    if (typeof layer === 'function') {\n                        return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                    }\n\n                    return null\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport const CirclePackingHtml = <RawDatum,>({\n    theme,\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    ...otherProps\n}: Partial<Omit<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container\n        isInteractive={isInteractive}\n        animate={animate}\n        motionConfig={motionConfig}\n        theme={theme}\n    >\n        <InnerCirclePackingHtml<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CirclePackingHtmlProps } from './types'\nimport { CirclePackingHtml } from './CirclePackingHtml'\n\ntype ResponsiveCirclePackingHtmlProps<RawDatum> = Partial<\n    Omit<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<CirclePackingHtmlProps<RawDatum>, 'data'>\n\nexport const ResponsiveCirclePackingHtml = <RawDatum,>(\n    props: ResponsiveCirclePackingHtmlProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <CirclePackingHtml<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { useCallback, useEffect, useRef, createElement } from 'react'\nimport * as React from 'react'\nimport { useDimensions, useTheme, Container } from '@nivo/core'\nimport { InheritedColorConfig, OrdinalColorScaleConfig, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { CirclePackingCanvasProps, ComputedDatum } from './types'\nimport { defaultProps } from './props'\nimport {\n    useCirclePacking,\n    useCirclePackingZoom,\n    useCirclePackingLabels,\n    useMouseCircleDetection,\n} from './hooks'\n\ntype InnerCirclePackingCanvasProps<RawDatum> = Partial<\n    Omit<\n        CirclePackingCanvasProps<RawDatum>,\n        'data' | 'width' | 'height' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>\n\nconst InnerCirclePackingCanvas = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    width,\n    height,\n    margin: partialMargin,\n    padding = defaultProps.padding,\n    leavesOnly = defaultProps.leavesOnly,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>\n    >,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    enableLabels = defaultProps.enableLabels,\n    label = defaultProps.label,\n    labelsFilter,\n    labelsSkipRadius = defaultProps.labelsSkipRadius,\n    labelTextColor = defaultProps.labelTextColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    isInteractive,\n    onMouseMove,\n    onClick,\n    tooltip = defaultProps.tooltip,\n    zoomedId,\n    role = defaultProps.role,\n    pixelRatio = defaultProps.pixelRatio,\n}: InnerCirclePackingCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const nodes = useCirclePacking<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        leavesOnly,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const zoomedNodes = useCirclePackingZoom<RawDatum>(nodes, zoomedId, innerWidth, innerHeight)\n\n    const labels = useCirclePackingLabels({\n        nodes: zoomedNodes,\n        label,\n        filter: labelsFilter,\n        skipRadius: labelsSkipRadius,\n        textColor: labelTextColor,\n    })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n\n        zoomedNodes.forEach(node => {\n            if (borderWidth > 0) {\n                ctx.strokeStyle = getBorderColor(node)\n                ctx.lineWidth = borderWidth\n            }\n\n            ctx.beginPath()\n            ctx.arc(node.x, node.y, node.radius, 0, 2 * Math.PI)\n            ctx.fillStyle = node.color\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableLabels) {\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            labels.forEach(label => {\n                ctx.fillStyle = label.textColor\n                ctx.fillText(`${label.label}`, label.node.x, label.node.y)\n            })\n        }\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        theme,\n        pixelRatio,\n        zoomedNodes,\n        enableLabels,\n        labels,\n        borderWidth,\n        getBorderColor,\n    ])\n\n    const getNodeFromMouseEvent = useMouseCircleDetection<RawDatum>({\n        nodes: zoomedNodes,\n        canvasEl,\n        margin,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            const node = getNodeFromMouseEvent(event)\n            if (node) {\n                onMouseMove?.(node, event)\n                showTooltipFromEvent(createElement(tooltip, node), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getNodeFromMouseEvent, showTooltipFromEvent, tooltip, hideTooltip]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!onClick) return\n\n            const node = getNodeFromMouseEvent(event)\n            if (node) {\n                onClick(node, event)\n            }\n        },\n        [getNodeFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            role={role}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const CirclePackingCanvas = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    ...otherProps\n}: Partial<Omit<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container isInteractive={isInteractive} theme={theme}>\n        <InnerCirclePackingCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CirclePackingCanvasProps } from './types'\nimport { CirclePackingCanvas } from './CirclePackingCanvas'\n\ntype ResponsiveCirclePackingCanvasProps<RawDatum> = Partial<\n    Omit<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<CirclePackingCanvasProps<RawDatum>, 'data'>\n\nexport const ResponsiveCirclePackingCanvas = <RawDatum,>(\n    props: ResponsiveCirclePackingCanvasProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <CirclePackingCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"sourceRoot":""}