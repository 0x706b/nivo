{"version":3,"file":"component---src-pages-sunburst-api-tsx-8c1edd72dd6b7a656c20.js","mappings":"8NASMA,GAAOC,EAAAA,EAAAA,MAoEb,UAlEoB,WAChB,IAE4CC,GAExCC,EAAAA,EAAAA,gBAAe,aAHfD,MACIE,gBAAmBC,gBAY3B,OACI,iCACI,SAAC,IAAD,CACIC,MAAM,oBACNJ,MAAOA,EACPK,SAAQ,UAAMC,EAAAA,EAAAA,KAAN,CAA0B,gBAEtC,SAAC,IAAD,CACIC,cAAc,WACdC,WAAW,WACXC,QAAQ,mBACRC,QAASJ,EAAAA,EACTK,aAAa,OACbC,cAAeC,EAAAA,EACfC,YAAaC,EAAAA,EACbC,aAAc,CACVC,MAAO,IACPC,OAAQ,IACRpB,KAAMqB,KAAKC,UAAUtB,EAAM,KAAM,MACjCuB,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAEVC,GAAI,OACJC,MAAO,MACPC,YAAa,CAAEC,OAAQ,GAAIC,SAAS,GACpCC,aAAc,EACdC,YAAa,EACbC,YAAa,QACbC,OAAQ,CAAEC,OAAQ,QAClBC,QAAS,KACTC,wBAAwB,EACxBC,WAAY,CACRC,KAAM,SAEVC,iBAAiB,EACjBC,SAAU,iBACVC,sBAAuB,GACvBC,mBAAoB,GACpBC,mBAAoB,CAChBL,KAAM,QACNM,UAAW,CAAC,CAAC,SAAU,e,sBCrE/C,IAAIC,EAAU,EAAQ,OAClBC,EAAO,EAAQ,OAcnBC,EAAOC,QAJP,SAAoBC,EAAQC,GAC1B,OAAOD,GAAUJ,EAAQI,EAAQC,EAAUJ","sources":["webpack://nivo-website/./src/pages/sunburst/api.tsx","webpack://nivo-website/../node_modules/lodash/_baseForOwn.js"],"sourcesContent":["import React from 'react'\nimport { generateLibTree } from '@nivo/generators'\nimport { Seo } from '../../components/Seo'\nimport { ApiClient } from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/sunburst/props'\nimport mapper from '../../data/components/sunburst/mapper'\nimport meta from '../../data/components/sunburst/meta.yml'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst data = generateLibTree()\n\nconst SunburstApi = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/sunburst.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <>\n            <Seo\n                title=\"Sunburst HTTP API\"\n                image={image}\n                keywords={[...meta.Sunburst.tags, 'HTTP API']}\n            />\n            <ApiClient\n                componentName=\"Sunburst\"\n                chartClass=\"sunburst\"\n                apiPath=\"/charts/sunburst\"\n                flavors={meta.flavors}\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 600,\n                    height: 600,\n                    data: JSON.stringify(data, null, '  '),\n                    margin: {\n                        top: 10,\n                        right: 10,\n                        bottom: 10,\n                        left: 10,\n                    },\n                    id: 'name',\n                    value: 'loc',\n                    valueFormat: { format: '', enabled: false },\n                    cornerRadius: 2,\n                    borderWidth: 1,\n                    borderColor: 'white',\n                    colors: { scheme: 'nivo' },\n                    colorBy: 'id',\n                    inheritColorFromParent: true,\n                    childColor: {\n                        from: 'color',\n                    },\n                    enableArcLabels: true,\n                    arcLabel: 'formattedValue',\n                    arcLabelsRadiusOffset: 0.5,\n                    arcLabelsSkipAngle: 10,\n                    arcLabelsTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1.4]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default SunburstApi\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n"],"names":["data","generateLibTree","image","useStaticQuery","childImageSharp","gatsbyImageData","title","keywords","meta","componentName","chartClass","apiPath","flavors","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","width","height","JSON","stringify","margin","top","right","bottom","left","id","value","valueFormat","format","enabled","cornerRadius","borderWidth","borderColor","colors","scheme","colorBy","inheritColorFromParent","childColor","from","enableArcLabels","arcLabel","arcLabelsRadiusOffset","arcLabelsSkipAngle","arcLabelsTextColor","modifiers","baseFor","keys","module","exports","object","iteratee"],"sourceRoot":""}