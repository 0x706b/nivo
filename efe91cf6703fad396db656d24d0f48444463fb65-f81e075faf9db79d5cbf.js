(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{"+Ckz":function(e,t,n){var r=n("V2ZB"),o=n("tb+2");e.exports=function(e,t){return r(e,o(e),t)}},"0711":function(e,t,n){var r=n("WRuO"),o=n("WMT/"),i=n("F3Ab"),a=n("wnk4"),u=n("ArpJ"),s=n("Fldm"),l=n("e766"),c=n("+Ckz"),p=n("CIBY"),d=n("2AbI"),h=n("zIph"),y=n("s3t7"),f=n("316b"),b=n("iXK7"),m=n("FQMq"),g=n("PqlX"),v=n("tfj2"),w=n("Bpme"),j=n("9aUh"),x=n("CPLO"),k=n("h0av"),q={};q["[object Arguments]"]=q["[object Array]"]=q["[object ArrayBuffer]"]=q["[object DataView]"]=q["[object Boolean]"]=q["[object Date]"]=q["[object Float32Array]"]=q["[object Float64Array]"]=q["[object Int8Array]"]=q["[object Int16Array]"]=q["[object Int32Array]"]=q["[object Map]"]=q["[object Number]"]=q["[object Object]"]=q["[object RegExp]"]=q["[object Set]"]=q["[object String]"]=q["[object Symbol]"]=q["[object Uint8Array]"]=q["[object Uint8ClampedArray]"]=q["[object Uint16Array]"]=q["[object Uint32Array]"]=!0,q["[object Error]"]=q["[object Function]"]=q["[object WeakMap]"]=!1,e.exports=function e(t,n,A,V,B,I){var O,F=1&n,T=2&n,C=4&n;if(A&&(O=B?A(t,V,B,I):A(t)),void 0!==O)return O;if(!j(t))return t;var S=g(t);if(S){if(O=f(t),!F)return l(t,O)}else{var z=y(t),M="[object Function]"==z||"[object GeneratorFunction]"==z;if(v(t))return s(t,F);if("[object Object]"==z||"[object Arguments]"==z||M&&!B){if(O=T||M?{}:m(t),!F)return T?p(t,u(O,t)):c(t,a(O,t))}else{if(!q[z])return B?t:{};O=b(t,z,F)}}I||(I=new r);var P=I.get(t);if(P)return P;I.set(t,O),x(t)?t.forEach((function(r){O.add(e(r,n,A,r,t,I))})):w(t)&&t.forEach((function(r,o){O.set(o,e(r,n,A,o,t,I))}));var G=C?T?h:d:T?keysIn:k,L=S?void 0:G(t);return o(L||t,(function(r,o){L&&(r=t[o=r]),i(O,o,e(r,n,A,o,t,I))})),O}},"316b":function(e,t){var n=Object.prototype.hasOwnProperty;e.exports=function(e){var t=e.length,r=new e.constructor(t);return t&&"string"==typeof e[0]&&n.call(e,"index")&&(r.index=e.index,r.input=e.input),r}},"5+lF":function(e,t,n){var r=n("naAV");e.exports=function(e,t){var n=t?r(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}},"7qnD":function(e,t){var n=/\w*$/;e.exports=function(e){var t=new e.constructor(e.source,n.exec(e));return t.lastIndex=e.lastIndex,t}},A277:function(e,t,n){var r=n("Exs5"),o=n("UnPy");e.exports=function(e,t){return t.length<2?e:r(e,o(t,0,-1))}},ArpJ:function(e,t,n){var r=n("V2ZB"),o=n("Vujp");e.exports=function(e,t){return e&&r(t,o(t),e)}},"B4/L":function(e,t,n){var r=n("gwRl"),o=n("LBQr"),i=n("tb+2"),a=n("E7Xw"),u=Object.getOwnPropertySymbols?function(e){for(var t=[];e;)r(t,i(e)),e=o(e);return t}:a;e.exports=u},Bpme:function(e,t,n){var r=n("CIUO"),o=n("TsNJ"),i=n("DhoL"),a=i&&i.isMap,u=a?o(a):r;e.exports=u},CIBY:function(e,t,n){var r=n("V2ZB"),o=n("B4/L");e.exports=function(e,t){return r(e,o(e),t)}},CIUO:function(e,t,n){var r=n("s3t7"),o=n("T9Ud");e.exports=function(e){return o(e)&&"[object Map]"==r(e)}},CPLO:function(e,t,n){var r=n("zlak"),o=n("TsNJ"),i=n("DhoL"),a=i&&i.isSet,u=a?o(a):r;e.exports=u},G9gt:function(e,t,n){var r=n("jgJv"),o=r?r.prototype:void 0,i=o?o.valueOf:void 0;e.exports=function(e){return i?Object(i.call(e)):{}}},"J/8h":function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return a}));var r=n("6zZa"),o=["group A","group B","group C","group D","group E","group F","group G"],i=function(e){return void 0!==e?Object(r.n)(e):Object(r.l)(o.slice(0,3),{min:50,max:80})},a=function(e){return void 0!==e?Object(r.n)(e):Object(r.l)(o,{min:60,max:100})}},JZQH:function(e,t,n){var r=n("sWZd"),o=n("mH3y"),i=n("A277"),a=n("cTHi");e.exports=function(e,t){return t=r(t,e),null==(e=i(e,t))||delete e[a(o(t))]}},PWxN:function(e,t,n){var r=n("NmMy"),o=n("0711"),i=n("JZQH"),a=n("sWZd"),u=n("V2ZB"),s=n("fdVR"),l=n("yF7r"),c=n("zIph"),p=l((function(e,t){var n={};if(null==e)return n;var l=!1;t=r(t,(function(t){return t=a(t,e),l||(l=t.length>1),t})),u(e,c(e),n),l&&(n=o(n,7,s));for(var p=t.length;p--;)i(n,t[p]);return n}));e.exports=p},"WMT/":function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e}},fdVR:function(e,t,n){var r=n("NfLg");e.exports=function(e){return r(e)?void 0:e}},iXK7:function(e,t,n){var r=n("naAV"),o=n("5+lF"),i=n("7qnD"),a=n("G9gt"),u=n("vvBr");e.exports=function(e,t,n){var s=e.constructor;switch(t){case"[object ArrayBuffer]":return r(e);case"[object Boolean]":case"[object Date]":return new s(+e);case"[object DataView]":return o(e,n);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return u(e,n);case"[object Map]":return new s;case"[object Number]":case"[object String]":return new s(e);case"[object RegExp]":return i(e);case"[object Set]":return new s;case"[object Symbol]":return a(e)}}},wnk4:function(e,t,n){var r=n("V2ZB"),o=n("h0av");e.exports=function(e,t){return e&&r(t,o(t),e)}},wuXj:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("Eo5u"),o=n("1JOb"),i=n("RQLE"),a=o.e,u=[{key:"data",help:"Chart data.",description:"\n            This Chart's doesn't have a predefined structure,\n            you must use a schema which match `groupBy`,\n            `identity` and `value` properties.\n        ",type:"object[]",group:"Base",required:!0},{key:"groups",group:"Base",type:"string[]",required:!0,help:"Available groups."},{key:"groupBy",group:"Base",type:"string | Function",required:!1,help:"Propety used to group nodes, must return a group which is available in the groups property.",defaultValue:a.groupBy},{key:"identity",group:"Base",type:"string | Function",required:!1,help:"Property used to retrieve the node's unique identifier.",description:"\n            This property will determine the identifier of a datum\n            amongst the whole data set, thus, it's really important \n            that it's unique.\n\n            It is especially important to have proper identifier\n            when enabling animations, as it will be used to determine\n            if a node is a new one or should transition from previous\n            to next state.\n        ",defaultValue:a.identity},{key:"label",group:"Base",type:"string | Function",required:!1,help:"Control node label.",defaultValue:a.label},{key:"value",group:"Base",type:"string | Function",required:!1,help:"Property used to retrieve the node's value.",defaultValue:a.value},{key:"valueFormat",group:"Base",type:"string | Function",required:!1,help:"Optional value formatter."},{key:"size",group:"Base",type:"number | object | Function",required:!1,help:"How to compute node size, static or dynamic.",description:"\n            If you provide a **number**, all nodes will have the same\n            **fixed size**.\n\n            You can also use an object to define a varying size,\n            it must conform to the following interface:\n\n            ```\n            {\n                key:    string\n                values: [min: number, max: number]\n                sizes:  [min: number, max: number]\n            }\n            ```\n\n            Then the size of each node will **depend on the value\n            of `key` and `sizes`**.\n\n            If you use a **custom function**, it will receive the current\n            node and must **return a number**.\n        ",defaultValue:a.size},{key:"spacing",help:"Spacing between nodes.",type:"number",required:!1,defaultValue:a.spacing,controlType:"range",group:"Base",controlOptions:{unit:"px",min:0,max:20}},{key:"width",enableControlForFlavors:["api"],group:"Base",help:"Chart width.",description:"\n            not required if using responsive alternative\n            of the component `<Responsive*/>`.\n        ",type:"number",required:!0},{key:"height",enableControlForFlavors:["api"],group:"Base",help:"Chart height.",description:"\n            not required if using responsive alternative\n            of the component `<Responsive*/>`.\n        ",type:"number",required:!0},{key:"pixelRatio",flavors:["canvas"],help:"Adjust pixel ratio, useful for HiDPI screens.",required:!1,defaultValue:"Depends on device",type:"number",controlType:"range",group:"Base",controlOptions:{min:1,max:2}},{key:"margin",help:"Chart margin.",type:"object",required:!1,controlType:"margin",group:"Base"},{key:"forceStrength",help:"Force strength.",description:"\n            This value determine the strength applied on the value\n            axis, using lower value will result in a **more linear\n            arrangement**, however nodes won't be placed accurately\n            according to their values.\n\n            On the other hand, if you increase this value, the\n            simulation will try to **align the nodes with their\n            corresponding values** on the value axis, resulting\n            in a narrower chart.\n\n            Please note that increasing this value will sometimes\n            require to **increase the quality of the simulation**\n            via the `simulationIterations` property.\n        ",type:"number",required:!1,defaultValue:a.forceStrength,controlType:"range",group:"Simulation",controlOptions:{step:.2,min:.2,max:9}},{key:"simulationIterations",help:"Adjust the simulation quality.",description:"\n            Increasing this number will result in a **more accurate simulation**,\n            however it will also involve more computing.\n        ",type:"number",required:!1,defaultValue:a.simulationIterations,controlType:"range",group:"Simulation",controlOptions:{min:60,max:260}},{key:"layout",help:"Chart layout.",type:"string",required:!1,defaultValue:a.layout,controlType:"radio",group:"Layout",controlOptions:{choices:[{label:"horizontal",value:"horizontal"},{label:"vertical",value:"vertical"}]}},{key:"gap",help:"Gap between each serie.",type:"number",required:!1,defaultValue:a.gap,controlType:"range",group:"Layout",controlOptions:{unit:"px",min:0,max:100}},i.f,{key:"colors",help:"Defines how to compute node color.",description:"\n            The colors property is used to determine the **ordinal color scale**\n            to use to compute nodes' color, it use the serie id as a discriminator.\n\n            You can use a **predefined color scheme**, using the following form:\n\n            ```\n            colors={{ scheme: 'category10' }}\n            ```\n\n            Where `category10` is the identifier of the color scheme.\n            Please have a look at [the dedicated guide](self:/guides/colors)\n            for available schemes.\n\n            If you wish to use **color already defined on the data**\n            you passed to the chart, you can also use this form:\n\n            ```\n            colors={{ datum: 'color' }}\n            ```\n\n            Where `color` is the path to the property containing the color\n            to apply in the current datum.\n\n            You can also use a **custom function** which will receive the current\n            datum and must **return a valid color code**.\n\n            If you pass a string, it will be **used as a color for each and every nodes**.\n        ",type:"Function | object | string",required:!1,defaultValue:a.colors,controlType:"ordinalColors",group:"Style"},{key:"colorBy",group:"Style",help:"Property or accessor function to be used with colors.",description:"\n            When using a color scheme or an array of colors,\n            you'll generate a color scale, this scale will\n            receive a value which will be translated to a color.\n\n            This property define the way we get this value,\n            it can be either a `string` or a custom function.\n\n            Please have a look at [the colors guide](self:/guides/colors)\n            for further information.\n        ",type:"Function | string",required:!1,defaultValue:a.colorBy,controlType:"choices",controlOptions:{choices:["group","id"].map((function(e){return{label:e,value:e}}))}},{key:"borderWidth",help:"Control node border width.",type:"number | Function",required:!1,defaultValue:a.borderWidth,controlType:"lineWidth",group:"Style"},{key:"borderColor",help:"Control node border color.",type:"string | object | Function",required:!1,defaultValue:a.borderColor,controlType:"inheritedColor",group:"Style"},{key:"layers",group:"Customization",help:"Defines the order of layers and add custom layers.",description:"\n            Defines the order of layers, available layers are:\n            `grid`, `axes`, `nodes`, `mesh`.\n\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n            \n            The layer function which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the `SwarmPlot` component.\n\n            When using the canvas implementation, the function\n            will receive the canvas 2d context as first argument\n            and the chart's context and computed data as second.\n\n            Please make sure to use `context.save()` and\n            `context.restore()` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n\n            You can see a live example of custom layers\n            [here](storybook:/swarmplot--extra-layers).\n        ",required:!1,type:"Array<string | Function>",defaultValue:a.layers},{key:"renderNode",group:"Customization",help:"Override default node rendering.",description:"\n            This property can be used to completely\n            customize the way nodes are rendered.\n            \n            when using the SVG implementation, you should\n            return a valid SVG node.\n            \n            When using canvas, the rendering function will\n            receive the canvas 2d context as first argument.\n\n            Please make sure to use `context.save()` and\n            `context.restore()` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n\n            You can see a live example of custom node rendering\n            [here](storybook:/swarmplot--custom-node-rendering).\n        ",required:!1,type:"Function"},{key:"enableGridX",group:"Grid & Axes",help:"Enable/disable x grid.",type:"boolean",required:!1,defaultValue:a.enableGridX,controlType:"switch"},{key:"gridXValues",group:"Grid & Axes",help:"Specify values to use for vertical grid lines.",type:"Array<number | string>",required:!1},{key:"enableGridY",group:"Grid & Axes",help:"Enable/disable y grid.",type:"boolean",required:!1,defaultValue:a.enableGridY,controlType:"switch"},{key:"gridYValues",group:"Grid & Axes",help:"Specify values to use for horizontal grid lines.",type:"Array<number | string>",required:!1}].concat(Object(r.a)(Object(i.a)()),[{key:"isInteractive",help:"Enable/disable interactivity.",type:"boolean",required:!1,defaultValue:a.isInteractive,controlType:"switch",group:"Interactivity"},{key:"useMesh",help:"Use a mesh to detect mouse interactions.",type:"boolean",required:!1,defaultValue:a.useMesh,controlType:"switch",group:"Interactivity"},{key:"debugMesh",help:"Display mesh used to detect mouse interactions (voronoi cells).",type:"boolean",required:!1,defaultValue:a.debugMesh,controlType:"switch",group:"Interactivity"},{key:"onMouseEnter",group:"Interactivity",help:"onMouseEnter handler.",type:"(node, event) => void",required:!1},{key:"onMouseMove",group:"Interactivity",help:"onMouseMove handler.",type:"(node, event) => void",required:!1},{key:"onMouseLeave",group:"Interactivity",help:"onMouseLeave handler.",type:"(node, event) => void",required:!1},{key:"onClick",group:"Interactivity",help:"onClick handler.",type:"(node, event) => void",required:!1},{key:"tooltip",group:"Interactivity",type:"Function",required:!1,help:"Custom tooltip component.",description:"\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the node's data.\n        "}],Object(r.a)(Object(i.e)(["svg"],a))),s=Object(i.d)(u)},zIph:function(e,t,n){var r=n("6TGQ"),o=n("B4/L"),i=n("Vujp");e.exports=function(e){return r(e,i,o)}},zlak:function(e,t,n){var r=n("s3t7"),o=n("T9Ud");e.exports=function(e){return o(e)&&"[object Set]"==r(e)}}}]);
//# sourceMappingURL=efe91cf6703fad396db656d24d0f48444463fb65-f81e075faf9db79d5cbf.js.map