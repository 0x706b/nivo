{"version":3,"sources":["webpack:///../node_modules/d3-force/src/center.js","webpack:///../node_modules/d3-quadtree/src/add.js","webpack:///../node_modules/d3-quadtree/src/cover.js","webpack:///../node_modules/d3-quadtree/src/quad.js","webpack:///../node_modules/d3-quadtree/src/x.js","webpack:///../node_modules/d3-quadtree/src/y.js","webpack:///../node_modules/d3-quadtree/src/quadtree.js","webpack:///../node_modules/d3-quadtree/src/data.js","webpack:///../node_modules/d3-quadtree/src/extent.js","webpack:///../node_modules/d3-quadtree/src/find.js","webpack:///../node_modules/d3-quadtree/src/remove.js","webpack:///../node_modules/d3-quadtree/src/root.js","webpack:///../node_modules/d3-quadtree/src/size.js","webpack:///../node_modules/d3-quadtree/src/visit.js","webpack:///../node_modules/d3-quadtree/src/visitAfter.js","webpack:///../node_modules/d3-force/src/constant.js","webpack:///../node_modules/d3-force/src/jiggle.js","webpack:///../node_modules/d3-force/src/collide.js","webpack:///../node_modules/d3-force/src/link.js","webpack:///../node_modules/d3-dispatch/src/dispatch.js","webpack:///../node_modules/d3-timer/src/timer.js","webpack:///../node_modules/d3-force/src/simulation.js","webpack:///../node_modules/d3-force/src/manyBody.js","webpack:///../node_modules/d3-force/src/x.js","webpack:///../node_modules/d3-force/src/y.js"],"names":["nodes","force","i","node","n","length","sx","sy","x","y","initialize","_","arguments","tree","d","isNaN","parent","xm","ym","xp","yp","right","bottom","j","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","call","_y","next","Array","this","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","undefined","leaf_copy","copy","treeProto","prototype","child","source","target","pop","push","add","cover","xz","yz","Infinity","Math","floor","z","visit","extent","find","x2","y2","q","x3","y3","quads","radius","dx","dy","d2","sqrt","remove","retainer","previous","removeAll","root","size","callback","visitAfter","random","vx","vy","radii","strength","iterations","xi","yi","ri","ri2","k","prepare","index","apply","quad","rj","r","l","jiggle","constant","nodeById","nodeId","get","Error","strengths","distances","count","bias","id","link","min","distance","alpha","links","b","m","Map","map","initializeStrength","initializeDistance","noop","value","dispatch","t","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","slice","hasOwnProperty","type","c","set","concat","constructor","on","typename","T","that","args","taskHead","taskTail","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","initialAngle","PI","simulation","_alpha","_alphaMin","_alphaDecay","pow","_alphaTarget","_velocityDecay","forces","stepper","step","event","tick","_nodes","forEach","fx","fy","initializeNodes","angle","cos","sin","initializeForce","alphaMin","alphaDecay","alphaTarget","velocityDecay","delete","closest","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta"],"mappings":"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","file":"317d40f543fde67a6c7d2a9698703c9d4ab4f7b5-eae5b783525f7401e9c6.js","sourcesContent":["export default function (x, y) {\n  var nodes;\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}","export default function (d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {\n    data: d\n  },\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  } // Is the new point is exactly coincident with the existing point?\n\n\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d,\n      i,\n      n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity; // Compute the points and their extent.\n\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  } // If there were no (valid) points, abort.\n\n\n  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.\n\n  this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}","export default function (x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1; // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  } // Otherwise, double repeatedly to cover.\n  else {\n      var z = x1 - x0,\n          node = this._root,\n          parent,\n          i;\n\n      while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n        i = (y < y0) << 1 | x < x0;\n        parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n\n        switch (i) {\n          case 0:\n            x1 = x0 + z, y1 = y0 + z;\n            break;\n\n          case 1:\n            x0 = x1 - z, y1 = y0 + z;\n            break;\n\n          case 2:\n            x1 = x0 + z, y0 = y1 - z;\n            break;\n\n          case 3:\n            x0 = x1 - z, y0 = y1 - z;\n            break;\n        }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}","export default function (node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}","export function defaultX(d) {\n  return d[0];\n}\nexport default function (_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}","export function defaultY(d) {\n  return d[1];\n}\nexport default function (_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}","import tree_add, { addAll as tree_addAll } from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, { removeAll as tree_removeAll } from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, { defaultX } from \"./x\";\nimport tree_y, { defaultY } from \"./y\";\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {\n    data: leaf.data\n  },\n      next = copy;\n\n  while (leaf = leaf.next) {\n    next = next.next = {\n      data: leaf.data\n    };\n  }\n\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function () {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n  if (!node) return copy;\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n  nodes = [{\n    source: node,\n    target: copy._root = new Array(4)\n  }];\n\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({\n          source: child,\n          target: node.target[i] = new Array(4)\n        });else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;","export default function () {\n  var data = [];\n  this.visit(function (node) {\n    if (!node.length) do {\n      data.push(node.data);\n    } while (node = node.next);\n  });\n  return data;\n}","export default function (_) {\n  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}","import Quad from \"./quad\";\nexport default function (x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n      quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n      if (i = (y >= ym) << 1 | x >= xm) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    } // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n  }\n\n  return data;\n}","export default function (d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return this; // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n  } // Find the point to remove.\n\n  while (node.data !== d) {\n    if (!(previous = node, node = node.next)) return this;\n  }\n\n  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n  if (!parent) return this._root = next, this; // Remove this leaf.\n\n  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n    if (retainer) retainer[j] = node;else this._root = node;\n  }\n\n  return this;\n}\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) {\n    this.remove(data[i]);\n  }\n\n  return this;\n}","export default function () {\n  return this._root;\n}","export default function () {\n  var size = 0;\n  this.visit(function (node) {\n    if (!node.length) do {\n      ++size;\n    } while (node = node.next);\n  });\n  return size;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      q,\n      node = this._root,\n      child,\n      x0,\n      y0,\n      x1,\n      y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n\n  return this;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      next = [],\n      q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    var node = q.node;\n\n    if (node.length) {\n      var child,\n          x0 = q.x0,\n          y0 = q.y0,\n          x1 = q.x1,\n          y1 = q.y1,\n          xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n\n    next.push(q);\n  }\n\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n\n  return this;\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function () {\n  return (Math.random() - 0.5) * 1e-6;\n}","import { quadtree } from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function (radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i,\n        n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data,\n          rj = quad.r,\n          r = ri + rj;\n\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n\n        return;\n      }\n\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    radii = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function (links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map(function (d, i) {\n      return [id(d, i, nodes), d];\n    })),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function (_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function (_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function (_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}","var noop = {\n  value: function value() {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\nexport default dispatch;","var frame = 0,\n    // is an animation frame pending?\ntimeout = 0,\n    // is a timeout pending?\ninterval = 0,\n    // are any timers active?\npokeDelay = 1000,\n    // how frequently we check for clock skew\ntaskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n  setTimeout(f, 17);\n};\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call = this._time = this._next = null;\n}\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function restart(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function stop() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\nexport function timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n  var t = taskHead,\n      e;\n\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(),\n      delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0,\n      t1 = taskHead,\n      t2,\n      time = Infinity;\n\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}","import { dispatch } from \"d3-dispatch\";\nimport { timer } from \"d3-timer\";\nexport function x(d) {\n  return d.x;\n}\nexport function y(d) {\n  return d.y;\n}\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\nexport default function (_nodes) {\n  var simulation,\n      _alpha = 1,\n      _alphaMin = 0.001,\n      _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),\n      _alphaTarget = 0,\n      _velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (_nodes == null) _nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n\n    if (_alpha < _alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i,\n        n = _nodes.length,\n        node;\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      _alpha += (_alphaTarget - _alpha) * _alphaDecay;\n      forces.forEach(function (force) {\n        force(_alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = _nodes.length, node; i < n; ++i) {\n      node = _nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i),\n            angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(_nodes);\n    return force;\n  }\n\n  initializeNodes();\n  return simulation = {\n    tick: tick,\n    restart: function restart() {\n      return stepper.restart(step), simulation;\n    },\n    stop: function stop() {\n      return stepper.stop(), simulation;\n    },\n    nodes: function nodes(_) {\n      return arguments.length ? (_nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : _nodes;\n    },\n    alpha: function alpha(_) {\n      return arguments.length ? (_alpha = +_, simulation) : _alpha;\n    },\n    alphaMin: function alphaMin(_) {\n      return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;\n    },\n    alphaDecay: function alphaDecay(_) {\n      return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;\n    },\n    alphaTarget: function alphaTarget(_) {\n      return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;\n    },\n    velocityDecay: function velocityDecay(_) {\n      return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;\n    },\n    force: function force(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.delete(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n    find: function find(x, y, radius) {\n      var i = 0,\n          n = _nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n      if (radius == null) radius = Infinity;else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n    on: function on(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}","import { quadtree } from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport { x, y } from \"./simulation.js\";\nexport default function () {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i,\n        n = nodes.length,\n        tree = quadtree(nodes, x, y).visitAfter(accumulate);\n\n    for (alpha = _, i = 0; i < n; ++i) {\n      node = nodes[i], tree.visit(apply);\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    strengths = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n    }\n  }\n\n  function accumulate(quad) {\n    var strength = 0,\n        q,\n        c,\n        weight = 0,\n        x,\n        y,\n        i; // For internal nodes, accumulate forces from child quadrants.\n\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n\n      quad.x = x / weight;\n      quad.y = y / weight;\n    } // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n        q = quad;\n        q.x = q.data.x;\n        q.y = q.data.y;\n\n        do {\n          strength += strengths[q.data.index];\n        } while (q = q.next);\n      }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n\n      return true;\n    } // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.\n\n\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do {\n      if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      }\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function (_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function (_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function (_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}","import constant from \"./constant.js\";\nexport default function (x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}","import constant from \"./constant.js\";\nexport default function (y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}"],"sourceRoot":""}