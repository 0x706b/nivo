{"version":3,"file":"component---src-pages-guides-colors-tsx-ce17ed37eda335cef469.js","mappings":"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CA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MC1PSC,EAAQ,CACjB,OACA,QACA,OACA,SACA,UACA,QACA,MACA,QACA,OACA,YACA,UACA,UACA,UACA,SACA,SACA,OACA,YACA,QACA,OACA,QACA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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/area.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/./src/components/PageContent.ts","webpack://nivo-website/./src/components/styled.ts","webpack://nivo-website/./src/components/guides/colors/ColorsIllustrations.js","webpack://nivo-website/./src/components/guides/colors/ColorsRanges.js","webpack://nivo-website/./src/components/guides/colors/ColorsColor.js","webpack://nivo-website/./src/pages/guides/colors.tsx","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/../src/StreamLayer.tsx","webpack://nivo-website/../src/StreamLayers.tsx","webpack://nivo-website/../src/StreamDots.tsx","webpack://nivo-website/../src/StreamSlicesItem.tsx","webpack://nivo-website/../src/StreamSlices.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/StreamDotsItem.tsx","webpack://nivo-website/../src/LayerTooltip.tsx","webpack://nivo-website/../src/StackTooltip.tsx","webpack://nivo-website/../src/Stream.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveStream.tsx","webpack://nivo-website/../node_modules/lodash/_arrayEach.js","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_asciiToArray.js","webpack://nivo-website/../node_modules/lodash/_baseAssign.js","webpack://nivo-website/../node_modules/lodash/_baseAssignIn.js","webpack://nivo-website/../node_modules/lodash/_baseClone.js","webpack://nivo-website/../node_modules/lodash/_baseIsMap.js","webpack://nivo-website/../node_modules/lodash/_baseIsSet.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseUnset.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_castSlice.js","webpack://nivo-website/../node_modules/lodash/_cloneDataView.js","webpack://nivo-website/../node_modules/lodash/_cloneRegExp.js","webpack://nivo-website/../node_modules/lodash/_cloneSymbol.js","webpack://nivo-website/../node_modules/lodash/_copySymbols.js","webpack://nivo-website/../node_modules/lodash/_copySymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_createCaseFirst.js","webpack://nivo-website/../node_modules/lodash/_customOmitClone.js","webpack://nivo-website/../node_modules/lodash/_getAllKeysIn.js","webpack://nivo-website/../node_modules/lodash/_getSymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_hasUnicode.js","webpack://nivo-website/../node_modules/lodash/_initCloneArray.js","webpack://nivo-website/../node_modules/lodash/_initCloneByTag.js","webpack://nivo-website/../node_modules/lodash/_parent.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/_stringToArray.js","webpack://nivo-website/../node_modules/lodash/_unicodeToArray.js","webpack://nivo-website/../node_modules/lodash/isMap.js","webpack://nivo-website/../node_modules/lodash/isSet.js","webpack://nivo-website/../node_modules/lodash/omit.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/upperFirst.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport default styled.div`\n    margin: 0 50px;\n    position: relative;\n\n    ${media.tablet`\n        & {\n            margin: 0 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px;\n        }\n    `}\n`\n","import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport const FullWidthBanner = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    margin-bottom: 40px;\n    padding: 20px;\n`\n\nexport const DescriptionBlock = styled.div`\n    max-width: 800px;\n    margin: 0 auto 50px;\n\n    ${media.tablet`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n`\n\nexport const Card = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    box-shadow: ${({ theme }) => theme.cardShadow};\n`\n","import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsiveStream } from '@nivo/stream'\nimport { ResponsiveTreeMap } from '@nivo/treemap'\nimport { generateCountriesData } from '@nivo/generators'\nimport { FullWidthBanner } from '../../styled'\nimport { useTheme } from '../../../theming/context'\n\nconst ColorsIllustrations = () => {\n    const theme = useTheme()\n\n    return (\n        <FullWidthBanner>\n            <div className=\"guide__illustrations\">\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveStream\n                        margin={{ top: -2, right: -2, bottom: -2, left: -2 }}\n                        data={generateCountriesData(['a', 'b', 'c', 'd', 'e'], { size: 9 })}\n                        indexBy=\"country\"\n                        keys={['a', 'b', 'c', 'd', 'e']}\n                        offsetType=\"expand\"\n                        axisLeft={null}\n                        axisBottom={null}\n                        enableGridX={false}\n                        colors={{ scheme: 'nivo' }}\n                        borderWidth={0}\n                        borderColor=\"#333\"\n                        isInteractive={false}\n                        animate={false}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveBar\n                        margin={{ top: 15, right: 10, bottom: -2, left: 10 }}\n                        data={generateCountriesData(['a', 'b', 'c'], { size: 9 })}\n                        indexBy=\"country\"\n                        keys={['a', 'b', 'c']}\n                        padding={0.2}\n                        axisLeft={null}\n                        axisBottom={null}\n                        enableGridY={false}\n                        enableLabel={false}\n                        colors={{ scheme: 'spectral' }}\n                        borderWidth={0}\n                        borderColor=\"#333\"\n                        isInteractive={false}\n                        animate={false}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveTreeMap\n                        margin={{ top: -2, right: -2, bottom: -2, left: -2 }}\n                        data={{\n                            country: 'root',\n                            children: generateCountriesData(['value'], { size: 18 }),\n                        }}\n                        colors={{ scheme: 'spectral' }}\n                        colorBy=\"id\"\n                        identity=\"country\"\n                        leavesOnly={true}\n                        outerPadding={10}\n                        innerPadding={4}\n                        borderWidth={0}\n                        nodeOpacity={1}\n                        isInteractive={false}\n                        animate={false}\n                        enableLabel={false}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__legend\">\n                    various color ranges applied to nivo components.\n                </div>\n            </div>\n        </FullWidthBanner>\n    )\n}\n\nexport default ColorsIllustrations\n","import React from 'react'\nimport {\n    categoricalColorSchemeIds,\n    divergingColorSchemeIds,\n    sequentialColorSchemeIds,\n    colorSchemes,\n} from '@nivo/colors'\nimport { Card } from '../../styled'\n\nconst ColorsRanges = () => (\n    <Card className=\"guide__table\">\n        <table>\n            <tbody>\n                <tr>\n                    <th colSpan={2}>Categorical colors</th>\n                </tr>\n                {categoricalColorSchemeIds.map(scheme => (\n                    <tr key={scheme}>\n                        <td>{scheme}</td>\n                        <td>\n                            {colorSchemes[scheme].map(color => (\n                                <span\n                                    key={color}\n                                    style={{\n                                        display: 'inline-block',\n                                        background: color,\n                                        width: 18,\n                                        height: 18,\n                                    }}\n                                />\n                            ))}\n                        </td>\n                    </tr>\n                ))}\n                <tr>\n                    <th colSpan={2}>Diverging colors</th>\n                </tr>\n                {divergingColorSchemeIds.map(scheme => (\n                    <tr key={scheme}>\n                        <td>{scheme}</td>\n                        <td>\n                            {colorSchemes[scheme][11].map(color => (\n                                <span\n                                    key={color}\n                                    style={{\n                                        display: 'inline-block',\n                                        background: color,\n                                        width: 18,\n                                        height: 18,\n                                    }}\n                                />\n                            ))}\n                        </td>\n                    </tr>\n                ))}\n                <tr>\n                    <th colSpan={2}>Sequential colors</th>\n                </tr>\n                {sequentialColorSchemeIds.map(scheme => (\n                    <tr key={scheme}>\n                        <td>{scheme}</td>\n                        <td>\n                            {colorSchemes[scheme][9].map(color => (\n                                <span\n                                    key={color}\n                                    style={{\n                                        display: 'inline-block',\n                                        background: color,\n                                        width: 18,\n                                        height: 18,\n                                    }}\n                                />\n                            ))}\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    </Card>\n)\n\nexport default ColorsRanges\n","import React from 'react'\nimport dedent from 'dedent-js'\nimport { DescriptionBlock } from '../../styled'\nimport { Markdown } from '../../Markdown'\nimport { Highlight } from '../../Highlight'\n\nconst ColorsColor = () => (\n    <DescriptionBlock>\n        <h2>Single color property</h2>\n        <Markdown\n            source={dedent(`\n                The main \\`colors\\` property defines the main colors to use\n                for your charts for main elements, for example the bars of a\n                [Bar](self:/bar) chart or the rectangles of a [TreeMap](self:/treemap).\n\n                For other elements such as borders, links (for [Pie](self:/pie) radial\n                labels for example), dots… you'll often have a dedicated color\n                property such as \\`borderColor\\` or \\`linkColor\\`.\n\n                Those are peripheral elements and sometimes to have a coherent\n                style you might want to use a color derived from the main element\n                they're bound to (rect —> border), or from the main theme.\n\n                So those properties support several strategies:\n            `)}\n        />\n        <h3>Inheriting from parent element color</h3>\n        <Markdown\n            source={dedent(`\n                The following example will use the \\`nivo\\` color scheme\n                to determine main element's color and then use this color\n                for the border of those elements.\n            `)}\n        />\n        <Highlight\n            code={dedent(`\n                <Chart\n                    colors={{ scheme: 'nivo' }}\n                    borderColor={{ from: 'color' }}\n                />\n            `)}\n            language=\"jsx\"\n        />\n        <Markdown\n            source={dedent(`\n                However it's not that useful as increasing the elements\n                size would visually give the same result.\n                That's where **modifiers** come into play, you can inherit\n                from the main color but apply modifiers to dissociate it\n                from the main element while keeping consistency.\n\n                The folowing code will inherit use the color from parent\n                element and darken it by an amount of \\`.6\\` and change its\n                opacity to \\`.5\\`:\n            `)}\n        />\n        <Highlight\n            code={dedent(`\n                <Chart\n                    colors={{ scheme: 'nivo' }}\n                    borderColor={{\n                        from: 'color',\n                        modifiers: [\n                            ['darker', .6],\n                            ['opacity', .5]\n                        ]\n                    }}\n                />\n            `)}\n            language=\"jsx\"\n        />\n        <Markdown\n            source={dedent(`\n                Available modifiers are \\`darker\\`, \\`brighter\\` and \\`opacity\\`.\n            `)}\n        />\n        <h3>Using a color from current theme</h3>\n        <Markdown\n            source={dedent(`\n                If you want to use a fixed color but want it to match current\n                theme, you can use the following config:\n            `)}\n        />\n        <Highlight\n            code={dedent(`\n                <Chart\n                    colors={{ scheme: 'nivo' }}\n                    borderColor={{ theme: 'background' }}\n                />\n            `)}\n            language=\"jsx\"\n        />\n        <Markdown\n            source={dedent(`\n                Now all borders will use the \\`background\\` property\n                from current theme.\n            `)}\n        />\n        <h3>Using a static custom color</h3>\n        <Markdown\n            source={dedent(`\n                Using a custom color is pretty straightforward:\n            `)}\n        />\n        <Highlight\n            code={dedent(`\n                <Chart\n                    colors={{ scheme: 'nivo' }}\n                    borderColor=\"#000000\"\n                />\n            `)}\n            language=\"jsx\"\n        />\n    </DescriptionBlock>\n)\n\nexport default ColorsColor\n","import React from 'react'\nimport Layout from '../../components/Layout'\nimport { Seo } from '../../components/Seo'\nimport PageContent from '../../components/PageContent'\nimport ColorsIllustrations from '../../components/guides/colors/ColorsIllustrations'\nimport ColorsRanges from '../../components/guides/colors/ColorsRanges'\nimport ColorsColor from '../../components/guides/colors/ColorsColor'\nimport { DescriptionBlock } from '../../components/styled'\n\nconst Colors = () => (\n    <Layout>\n        <Seo\n            title=\"Colors Guide\"\n            description=\"Using colors in nivo, color schemes, color scales…\"\n        />\n        <PageContent>\n            <div className=\"guide__header\">\n                <h1>Colors</h1>\n            </div>\n        </PageContent>\n        <DescriptionBlock>\n            <h2>The colors property</h2>\n            <p>\n                Beside highlighting data insights, your dataviz should be pretty, right?\n                <br />\n                nivo provides an easy way to deal with colors, very useful when using nested\n                components.\n            </p>\n        </DescriptionBlock>\n        <ColorsIllustrations />\n        <DescriptionBlock>\n            <h2>Available color schemes</h2>\n            <p>\n                Almost all color schemes come from{' '}\n                <a\n                    href=\"https://github.com/d3/d3-scale-chromatic\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    d3-scale-chromatic\n                </a>\n                .\n            </p>\n        </DescriptionBlock>\n        <ColorsRanges />\n        <ColorsColor />\n    </Layout>\n)\n\nexport default Colors\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    distance: number\n    source: string\n    target: string\n}\n\ntype ExtraNode = {\n    color: string\n    depth: number\n    id: string\n    radius: number\n}\n\nexport const generateNetworkData = ({\n    rootNodeRadius = 12,\n    minMidNodes = 6,\n    maxMidNodes = 16,\n    midNodeRadius = 8,\n    minLeaves = 4,\n    maxLeaves = 16,\n    leafRadius = 4,\n} = {}) => {\n    const rootNode = {\n        id: '0',\n        radius: rootNodeRadius,\n        depth: 0,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `${k + 1}`,\n        radius: midNodeRadius,\n        depth: 1,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: '0',\n            target: source.id,\n            distance: 50,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 70,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                radius: leafRadius,\n                depth: 2,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 30,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit?: number | null, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: Record<string, unknown> = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","import { useCallback, createElement } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamLayerData } from './types'\n\ninterface StreamLayerProps<RawDatum extends StreamDatum> {\n    layer: StreamLayerData\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayer = <RawDatum extends StreamDatum>({\n    layer,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayerProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { layer }), event, 'left')\n        },\n        [showTooltipFromEvent, layer]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(layer.path)\n    const animatedProps = useSpring({\n        color: layer.color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={layer.fill ? layer.fill : animatedProps.color}\n            fillOpacity={fillOpacity}\n            stroke={getBorderColor(layer)}\n            strokeWidth={borderWidth}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? hideTooltip : undefined}\n        />\n    )\n}\n","import { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { StreamLayer } from './StreamLayer'\nimport { StreamCommonProps, StreamLayerData, StreamDatum } from './types'\n\ninterface StreamLayersProps<RawDatum extends StreamDatum> {\n    layers: StreamLayerData[]\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayers = <RawDatum extends StreamDatum>({\n    layers,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayersProps<RawDatum>) => (\n    <g>\n        {layers.map((layer, i) => (\n            <StreamLayer<RawDatum>\n                key={i}\n                layer={layer}\n                getBorderColor={getBorderColor}\n                borderWidth={borderWidth}\n                fillOpacity={fillOpacity}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { createElement } from 'react'\nimport { StreamSvgProps, StreamLayerDatum, StreamDatum } from './types'\n\ninterface StreamDotsProps<RawDatum extends StreamDatum> {\n    id: string | number\n    color: string\n    data: StreamLayerDatum[]\n    dotComponent: Exclude<StreamSvgProps<RawDatum>['dotComponent'], undefined>\n    position: 'start' | 'center' | 'end'\n    getSize: (datum: StreamLayerDatum) => number\n    getColor: (datum: StreamLayerDatum) => string\n    getBorderWidth: (datum: StreamLayerDatum) => number\n    getBorderColor: (datum: StreamLayerDatum) => string\n}\n\nconst getDotY = <RawDatum extends StreamDatum>(\n    datum: StreamLayerDatum,\n    position: StreamDotsProps<RawDatum>['position']\n) => {\n    let y = datum.y2\n    if (position === 'center') {\n        y = datum.y1 + (datum.y2 - datum.y1) / 2\n    } else if (position === 'start') {\n        y = datum.y1\n    }\n\n    return y\n}\n\nexport const StreamDots = <RawDatum extends StreamDatum>({\n    data,\n    dotComponent,\n    position,\n    getSize,\n    getColor,\n    getBorderWidth,\n    getBorderColor,\n}: StreamDotsProps<RawDatum>) => (\n    <>\n        {data.map((datum, i) => {\n            return createElement(dotComponent, {\n                key: i,\n                datum,\n                x: datum.x,\n                y: getDotY<RawDatum>(datum, position),\n                size: getSize(datum),\n                color: getColor(datum),\n                borderWidth: getBorderWidth(datum),\n                borderColor: getBorderColor(datum),\n            })\n        })}\n    </>\n)\n","import { createElement, useCallback, useState } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamSliceData } from './types'\n\ninterface StreamSlicesItemProps<RawDatum extends StreamDatum> {\n    slice: StreamSliceData\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlicesItem = <RawDatum extends StreamDatum>({\n    slice,\n    height,\n    tooltip,\n}: StreamSlicesItemProps<RawDatum>) => {\n    const [isHover, setIsHover] = useState(false)\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(createElement(tooltip, { slice }), event, 'left')\n        },\n        [setIsHover, showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [setIsHover, hideTooltip])\n\n    return (\n        <g transform={`translate(${slice.x}, 0)`}>\n            {isHover && (\n                <line\n                    x1={0}\n                    x2={0}\n                    y1={0}\n                    y2={height}\n                    stroke=\"#000\"\n                    strokeOpacity={0.35}\n                    strokeWidth={1}\n                />\n            )}\n            <rect\n                x={-20}\n                width={40}\n                height={height}\n                fill=\"#000\"\n                fillOpacity={0}\n                onMouseEnter={handleMouseHover}\n                onMouseMove={handleMouseHover}\n                onMouseLeave={handleMouseLeave}\n            />\n        </g>\n    )\n}\n","import { StreamSliceData, StreamDatum, StreamCommonProps } from './types'\nimport { StreamSlicesItem } from './StreamSlicesItem'\n\ninterface StreamSlicesProps<RawDatum extends StreamDatum> {\n    slices: StreamSliceData[]\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlices = <RawDatum extends StreamDatum>({\n    slices,\n    height,\n    tooltip,\n}: StreamSlicesProps<RawDatum>) => (\n    <g>\n        {slices.map(slice => (\n            <StreamSlicesItem<RawDatum>\n                key={slice.index}\n                slice={slice}\n                height={height}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { StackOrder, StackOffset, AreaCurve } from '@nivo/core'\nimport { StreamCommonProps, StreamLayerId } from './types'\nimport { StreamDotsItem } from './StreamDotsItem'\nimport { LayerTooltip } from './LayerTooltip'\nimport { StackTooltip } from './StackTooltip'\n\nexport const defaultProps = {\n    label: 'id',\n\n    order: 'none' as StackOrder,\n    offsetType: 'wiggle' as StackOffset,\n    curve: 'catmullRom' as AreaCurve,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    colors: { scheme: 'nivo' } as StreamCommonProps<any>['colors'],\n    fillOpacity: 1,\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    } as StreamCommonProps<any>['borderColor'],\n\n    enableDots: false,\n    dotPosition: 'center' as StreamCommonProps<any>['dotPosition'],\n    dotComponent: StreamDotsItem,\n    dotSize: 6,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 0,\n    dotBorderColor: { from: 'color' },\n\n    isInteractive: true,\n    tooltip: LayerTooltip,\n    enableStackTooltip: true,\n    stackTooltip: StackTooltip,\n\n    legends: [],\n    legendLabel: 'id',\n\n    role: 'application',\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'layers', 'dots', 'slices', 'legends'] as StreamLayerId[],\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\n\nexport interface StreamDotsItemProps {\n    x: number\n    y: number\n    size: number\n    color: string\n    borderWidth: number\n    borderColor: string\n}\n\nexport const StreamDotsItem = ({\n    x,\n    y,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n}: StreamDotsItemProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size * 0.5,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius}\n            fill={animatedProps.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nexport const LayerTooltip = ({ layer }: TooltipProps) => (\n    <BasicTooltip id={layer.label} enableChip={true} color={layer.color} />\n)\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { StackTooltipProps } from './types'\n\nexport const StackTooltip = ({ slice }: StackTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            slice.stack.map(p => [\n                <Chip key={p.layerId} color={p.color} />,\n                p.layerLabel,\n                p.formattedValue,\n            ]),\n        [slice]\n    )\n\n    return <TableTooltip rows={rows} />\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    Container,\n    SvgWrapper,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { StreamLayers } from './StreamLayers'\nimport { StreamDots } from './StreamDots'\nimport { StreamSlices } from './StreamSlices'\nimport { useStream } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { StreamDatum, StreamLayerId, StreamSvgProps } from './types'\n\ntype InnerStreamProps<RawDatum extends StreamDatum> = Omit<\n    StreamSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerStream = <RawDatum extends StreamDatum>({\n    data,\n    keys,\n    label,\n    valueFormat,\n\n    offsetType,\n    order,\n    curve,\n\n    layers: chartLayers = svgDefaultProps.layers,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n\n    colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n\n    enableDots = svgDefaultProps.enableDots,\n    dotPosition = svgDefaultProps.dotPosition,\n    dotComponent = svgDefaultProps.dotComponent,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    enableStackTooltip = svgDefaultProps.enableStackTooltip,\n    stackTooltip = svgDefaultProps.stackTooltip,\n\n    legends = svgDefaultProps.legends,\n\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerStreamProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        xScale,\n        yScale,\n        layers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    } = useStream<RawDatum>({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        keys,\n        label,\n        valueFormat,\n        offsetType,\n        order,\n        curve,\n        colors,\n        borderColor,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n    })\n\n    const boundDefs = bindDefs(defs, layers, fill)\n\n    const layerById: Record<StreamLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        layers: null,\n        dots: null,\n        slices: null,\n        legends: null,\n    }\n\n    if (chartLayers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n            />\n        )\n    }\n\n    if (chartLayers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (chartLayers.includes('layers')) {\n        layerById.layers = (\n            <StreamLayers<RawDatum>\n                key=\"layers\"\n                layers={layers}\n                fillOpacity={fillOpacity}\n                borderWidth={borderWidth}\n                getBorderColor={getBorderColor}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <Fragment key=\"dots\">\n                {layers.map(layer => (\n                    <StreamDots\n                        key={layer.id}\n                        id={layer.id}\n                        color={layer.color}\n                        data={layer.data}\n                        dotComponent={dotComponent}\n                        position={dotPosition}\n                        getSize={getDotSize}\n                        getColor={getDotColor}\n                        getBorderWidth={getDotBorderWidth}\n                        getBorderColor={getDotBorderColor}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (chartLayers.includes('slices') && isInteractive && enableStackTooltip) {\n        layerById.slices = (\n            <StreamSlices<RawDatum>\n                key=\"slices\"\n                slices={slices}\n                height={innerHeight}\n                tooltip={stackTooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => {\n                    const legendData = layers\n                        .map(layer => ({\n                            id: layer.id,\n                            label: layer.label,\n                            color: layer.color,\n                            fill: layer.fill,\n                        }))\n                        .reverse()\n\n                    return (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legend}\n                            containerWidth={innerWidth}\n                            containerHeight={innerHeight}\n                            data={legendData}\n                        />\n                    )\n                })}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {chartLayers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Stream = <RawDatum extends StreamDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: StreamSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerStream<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport { area, stack as d3Stack } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport {\n    useTheme,\n    usePropertyAccessor,\n    useValueFormatter,\n    useCurveInterpolation,\n    // @ts-ignore\n    stackOrderFromProp,\n    // @ts-ignore\n    stackOffsetFromProp,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    StreamCommonProps,\n    StreamCustomLayerProps,\n    StreamDataProps,\n    StreamDatum,\n    StreamLayerData,\n    StreamLayerDatum,\n    StreamSliceData,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useStream = <RawDatum extends StreamDatum>({\n    width,\n    height,\n    data,\n    keys,\n    label = defaultProps.label,\n    valueFormat,\n    offsetType = defaultProps.offsetType,\n    order = defaultProps.order,\n    curve = defaultProps.curve,\n    colors = defaultProps.colors,\n    borderColor = defaultProps.borderColor,\n    dotSize = defaultProps.dotSize,\n    dotColor = defaultProps.dotColor,\n    dotBorderWidth = defaultProps.dotBorderWidth,\n    dotBorderColor = defaultProps.dotBorderColor,\n}: {\n    width: number\n    height: number\n    data: StreamDataProps<RawDatum>['data']\n    keys: StreamDataProps<RawDatum>['keys']\n    label?: StreamCommonProps<RawDatum>['label']\n    valueFormat?: StreamCommonProps<RawDatum>['valueFormat']\n    offsetType?: StreamCommonProps<RawDatum>['offsetType']\n    order?: StreamCommonProps<RawDatum>['order']\n    curve?: StreamCommonProps<RawDatum>['curve']\n    colors?: StreamCommonProps<RawDatum>['colors']\n    dotSize?: StreamCommonProps<RawDatum>['dotSize']\n    dotColor?: StreamCommonProps<RawDatum>['dotColor']\n    dotBorderWidth?: StreamCommonProps<RawDatum>['dotBorderWidth']\n    dotBorderColor?: StreamCommonProps<RawDatum>['dotBorderColor']\n    borderColor?: StreamCommonProps<RawDatum>['borderColor']\n}) => {\n    const areaCurveFactory = useCurveInterpolation(curve)\n    const areaGenerator = useMemo(\n        () =>\n            area<StreamLayerDatum>()\n                .x(({ x }) => x)\n                .y0(({ y1 }) => y1)\n                .y1(({ y2 }) => y2)\n                .curve(areaCurveFactory),\n        [areaCurveFactory]\n    )\n\n    const stack = useMemo(\n        () =>\n            d3Stack<RawDatum, string | number>()\n                .keys(keys)\n                .offset(stackOffsetFromProp(offsetType))\n                .order(stackOrderFromProp(order)),\n        [keys, offsetType, order]\n    )\n\n    const [layers, xScale, yScale] = useMemo(() => {\n        const allMin: number[] = []\n        const allMax: number[] = []\n\n        const layers = stack(data).map(layer => {\n            return layer.map(point => {\n                allMin.push(point[0])\n                allMax.push(point[1])\n\n                return {\n                    ...point,\n                    value: point.data[layer.key] as number,\n                }\n            })\n        })\n\n        const minValue = Math.min(...allMin)\n        const maxValue = Math.max(...allMax)\n\n        return [\n            layers,\n            scalePoint<number>()\n                .domain(Array.from({ length: data.length }, (_, i) => i))\n                .range([0, width]),\n            scaleLinear().domain([minValue, maxValue]).range([height, 0]),\n        ]\n    }, [stack, data, width, height])\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<StreamLayerData, 'label' | 'color' | 'data'>>(\n        colors,\n        'id'\n    )\n    const getBorderColor = useInheritedColor<StreamLayerData>(borderColor, theme)\n\n    const getDotSize = useMemo(\n        () => (typeof dotSize === 'function' ? dotSize : () => dotSize),\n        [dotSize]\n    )\n    const getDotColor = useInheritedColor(dotColor, theme)\n    const getDotBorderWidth = useMemo(\n        () => (typeof dotBorderWidth === 'function' ? dotBorderWidth : () => dotBorderWidth),\n        [dotBorderWidth]\n    )\n    const getDotBorderColor = useInheritedColor(dotBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<\n        Omit<StreamLayerData, 'label' | 'color' | 'data'>,\n        string | number\n    >(label)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const enhancedLayers: StreamLayerData[] = useMemo(\n        () =>\n            layers.map((points, layerIndex) => {\n                const computedPoints: StreamLayerDatum[] = points.map((point, i) => ({\n                    layerId: keys[layerIndex],\n                    layerLabel: '',\n                    index: i,\n                    color: '',\n                    x: xScale(i) as number,\n                    value: point.value,\n                    formattedValue: formatValue(point.value),\n                    y1: yScale(point[0]),\n                    y2: yScale(point[1]),\n                }))\n\n                const layer: Omit<StreamLayerData, 'label' | 'color' | 'data'> = {\n                    id: keys[layerIndex] as string,\n                    path: areaGenerator(computedPoints) as string,\n                }\n\n                const layerWithComputedProperties: Omit<StreamLayerData, 'data'> = {\n                    ...layer,\n                    label: getLabel(layer),\n                    color: getColor(layer),\n                }\n\n                return {\n                    ...layerWithComputedProperties,\n                    data: computedPoints.map(point => {\n                        point.layerLabel = layerWithComputedProperties.label\n                        point.color = layerWithComputedProperties.color\n\n                        return point\n                    }),\n                }\n            }),\n        [layers, keys, getLabel, areaGenerator, getColor, xScale, yScale, formatValue]\n    )\n\n    const slices: StreamSliceData[] = useMemo(\n        () =>\n            Array.from({ length: data.length }, (_, i) => {\n                const sliceStack = enhancedLayers\n                    .map(layer => layer.data[i])\n                    .sort((a, b) => a.y2 - b.y2)\n\n                return {\n                    index: i,\n                    x: enhancedLayers[0].data[i].x,\n                    stack: sliceStack,\n                }\n            }),\n        [data.length, enhancedLayers]\n    )\n\n    const layerContext: StreamCustomLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            layers: enhancedLayers,\n            slices,\n        }),\n        [xScale, yScale, enhancedLayers, slices]\n    )\n\n    return {\n        xScale,\n        yScale,\n        layers: enhancedLayers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    }\n}\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { StreamDatum, StreamSvgProps } from './types'\nimport { Stream } from './Stream'\n\nexport const ResponsiveStream = <RawDatum extends StreamDatum>(\n    props: Omit<StreamSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Stream<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","area","data","i","j","k","d","buffer","n","length","defined0","x0z","Array","y0z","areaStart","lineStart","lineEnd","point","areaEnd","arealine","arguments","lineX0","lineY0","lineY1","lineX1","line","p","day","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","days","range","styled","media","FullWidthBanner","theme","colors","cardBackground","DescriptionBlock","Card","cardShadow","useTheme","className","margin","top","right","bottom","left","generateCountriesData","size","indexBy","keys","offsetType","axisLeft","axisBottom","enableGridX","scheme","borderWidth","borderColor","isInteractive","animate","nivo","padding","enableGridY","enableLabel","country","children","colorBy","identity","leavesOnly","outerPadding","innerPadding","nodeOpacity","colSpan","categoricalColorSchemeIds","colorSchemes","map","color","style","display","background","width","height","divergingColorSchemeIds","sequentialColorSchemeIds","Markdown","source","dedent","Highlight","code","language","Layout","Seo","title","description","PageContent","href","target","rel","randColor","round","random","countryCodes","names","programmingLanguages","generateBulletData","id","max","subtitle","rangeCount","measureCount","markerCount","float","ranges","reduce","remaining","acc","measures","markers","generateChordData","minValue","maxValue","maxSize","min","selectedKeys","slice","matrix","generateNetworkData","rootNodeRadius","minMidNodes","maxMidNodes","midNodeRadius","minLeaves","maxLeaves","leafRadius","rootNode","radius","depth","nodes","from","links","extraNodes","forEach","push","distance","concat","generateParallelCoordinatesData","key","shuffle","value","availableNodes","name","getNodeTargets","currentPath","targets","filter","includes","join","targetId","getNodesTargets","targetsById","link","generateSankeyData","nodeCount","maxIterations","Object","assign","node","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","groups","categoryCount","group","groupIndex","price","index","datum","volume","categories","randomizeSwarmPlotData","previousData","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","label","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","types","find","generateSeries","ids","xKeys","generateDayCounts","to","timeDays","dayFormat","timeFormat","generateOrderedDayCounts","withColors","libTreeItems","generateLibTree","tree","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","StreamLayer","layer","fillOpacity","getBorderColor","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","createElement","event","useMotionConfig","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","_jsx","animated","fill","stroke","strokeWidth","onMouseMove","onMouseEnter","onMouseLeave","StreamLayers","layers","getDotY","position","StreamDots","dotComponent","getSize","getColor","getBorderWidth","StreamSlicesItem","useState","isHover","setIsHover","handleMouseLeave","_jsxs","transform","strokeOpacity","StreamSlices","slices","defaultProps","order","modifiers","enableDots","dotPosition","circle","cx","cy","dotSize","dotColor","dotBorderWidth","dotBorderColor","BasicTooltip","enableChip","enableStackTooltip","stackTooltip","rows","useMemo","stack","Chip","layerId","layerLabel","formattedValue","TableTooltip","legends","legendLabel","role","svgDefaultProps","defs","motionConfig","isFocusable","InnerStream","valueFormat","chartLayers","partialMargin","axisTop","axisRight","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","areaCurveFactory","useCurveInterpolation","areaGenerator","d3Stack","offset","stackOffsetFromProp","stackOrderFromProp","allMin","allMax","scalePoint","domain","scaleLinear","xScale","yScale","useOrdinalColorScale","useInheritedColor","getDotSize","getDotColor","getDotBorderWidth","getDotBorderColor","getLabel","usePropertyAccessor","formatValue","useValueFormatter","enhancedLayers","points","layerIndex","computedPoints","layerWithComputedProperties","sliceStack","sort","a","b","layerContext","boundDefs","bindDefs","layerById","grid","axes","dots","Grid","Axes","Fragment","legend","legendData","reverse","BoxLegendSvg","containerWidth","containerHeight","SvgWrapper","Stream","renderWrapper","otherProps","Container","ResponsiveStream","props","ResponsiveWrapper","module","exports","array","iteratee","copyArray","shuffleSelf","string","split","copyObject","object","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","result","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","subValue","add","isObjectLike","nativeFloor","floor","nativeRandom","lower","upper","values","collection","castPath","last","parent","toKey","arrayMap","baseSlice","cloneArrayBuffer","dataView","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","symbolValueOf","valueOf","symbol","call","getSymbols","getSymbolsIn","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","getOwnPropertySymbols","reHasUnicode","RegExp","test","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseGet","baseRandom","rand","asciiToArray","unicodeToArray","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","baseUnset","customOmitClone","flatRest","omit","paths","CLONE_DEEP_FLAG","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","upperFirst","createCaseFirst","baseValues"],"sourceRoot":""}