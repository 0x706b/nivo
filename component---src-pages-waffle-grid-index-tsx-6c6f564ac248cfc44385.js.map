{"version":3,"file":"component---src-pages-waffle-grid-index-tsx-6c6f564ac248cfc44385.js","mappings":"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","sources":["webpack://nivo-website/./src/data/components/radial-bar/mapper.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/./src/data/components/waffle-grid/props.ts","webpack://nivo-website/./src/pages/waffle-grid/index.tsx","webpack://nivo-website/../node_modules/lodash/_arrayEach.js","webpack://nivo-website/../node_modules/lodash/_baseAssign.js","webpack://nivo-website/../node_modules/lodash/_baseAssignIn.js","webpack://nivo-website/../node_modules/lodash/_baseClone.js","webpack://nivo-website/../node_modules/lodash/_baseIsMap.js","webpack://nivo-website/../node_modules/lodash/_baseIsSet.js","webpack://nivo-website/../node_modules/lodash/_baseUnset.js","webpack://nivo-website/../node_modules/lodash/_cloneDataView.js","webpack://nivo-website/../node_modules/lodash/_cloneRegExp.js","webpack://nivo-website/../node_modules/lodash/_cloneSymbol.js","webpack://nivo-website/../node_modules/lodash/_copySymbols.js","webpack://nivo-website/../node_modules/lodash/_copySymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_customOmitClone.js","webpack://nivo-website/../node_modules/lodash/_getAllKeysIn.js","webpack://nivo-website/../node_modules/lodash/_getSymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_initCloneArray.js","webpack://nivo-website/../node_modules/lodash/_initCloneByTag.js","webpack://nivo-website/../node_modules/lodash/_parent.js","webpack://nivo-website/../node_modules/lodash/isMap.js","webpack://nivo-website/../node_modules/lodash/isSet.js","webpack://nivo-website/../node_modules/lodash/omit.js"],"sourcesContent":["import omit from 'lodash/omit'\nimport { settingsMapper, mapFormat } from '../../../lib/settings'\n\nexport const mapAxis = (key: string) => (value: any, settings: any) =>\n    settings[key].enable ? omit(value, ['enable']) : null\n\nexport default settingsMapper({\n    valueFormat: mapFormat,\n    radialAxisStart: mapAxis('radialAxisStart'),\n    radialAxisEnd: mapAxis('radialAxisEnd'),\n    circularAxisInner: mapAxis('circularAxisInner'),\n    circularAxisOuter: mapAxis('circularAxisOuter'),\n})\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping: any, { exclude = [] } = {}) => (\n    settings: any,\n    options: any = {}\n) => {\n    const overrides: any = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","import { svgDefaultProps } from '@nivo/waffle-grid'\nimport {\n    themeProperty,\n    motionProperties,\n    groupProperties,\n    motionConfigProperty,\n} from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: 'number[][]',\n        required: true,\n        help: 'Chart data.',\n        description: `\n            Please note that the number of rows should match the length\n            of \\`yRange\\` and each row number of columns should match\n            the length of \\`xRange\\`.\n        `,\n        flavors: ['svg'],\n    },\n    {\n        key: 'xRange',\n        group: 'Base',\n        type: 'string[]',\n        required: true,\n        help: 'X range.',\n        flavors: ['svg'],\n    },\n    {\n        key: 'yRange',\n        group: 'Base',\n        type: 'string[]',\n        required: true,\n        help: 'Y range.',\n        flavors: ['svg'],\n    },\n    {\n        key: 'cellValue',\n        group: 'Base',\n        type: 'number',\n        required: true,\n        help: 'Define the value each cell represents.',\n        flavors: ['svg'],\n        controlType: 'range',\n        controlOptions: {\n            min: 500,\n            max: 2000,\n            step: 100,\n            unit: 'px',\n        },\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        type: 'number',\n        required: true,\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveRadialBar/>\\`.\n        `,\n        flavors: ['svg', 'api'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        type: 'number',\n        required: true,\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveRadialBar/>\\`.\n        `,\n        flavors: ['svg', 'api'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        group: 'Base',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        flavors: ['svg'],\n        controlType: 'margin',\n    },\n    {\n        key: 'enableBlankCells',\n        group: 'Base',\n        type: 'boolean',\n        required: false,\n        help: 'Enable/disable blank cells.',\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.enableBlankCells,\n        controlType: 'switch',\n    },\n    {\n        key: 'spacing',\n        group: 'Base',\n        type: 'number',\n        required: false,\n        help: 'Spacing between each waffle.',\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.spacing,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 36,\n            unit: 'px',\n        },\n    },\n    themeProperty(['svg']),\n    {\n        key: 'blankCellColor',\n        group: 'Style',\n        help: 'Defines how to compute blank cells color.',\n        type: 'InheritedColorConfig<WaffleGridCellData>',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.blankCellColor,\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'valueCellColor',\n        group: 'Style',\n        help: 'Defines how to compute value cells color.',\n        type: 'InheritedColorConfig<WaffleGridCellData>',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.valueCellColor,\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        type: '(WaffleGridLayerId | WaffleGridCustomLayer)[]',\n        required: false,\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer should be a component.\n            \n            The component will receive properties as defined in\n            the \\`WaffleGridCustomLayerProps\\` interface\n            and must return a valid SVG element.\n        `,\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.layers,\n    },\n    {\n        key: 'isInteractive',\n        group: 'Interactivity',\n        type: 'boolean',\n        required: false,\n        help: 'Enable/disable interactivity.',\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.isInteractive,\n        controlType: 'switch',\n    },\n    {\n        key: 'role',\n        group: 'Accessibility',\n        type: 'string',\n        required: false,\n        help: 'Main element role attribute.',\n        flavors: ['svg'],\n    },\n    {\n        key: 'ariaLabel',\n        group: 'Accessibility',\n        type: 'string',\n        required: false,\n        help: 'Main element [aria-label](https://www.w3.org/TR/wai-aria/#aria-label).',\n        flavors: ['svg'],\n    },\n    {\n        key: 'ariaLabelledBy',\n        group: 'Accessibility',\n        type: 'string',\n        required: false,\n        help: 'Main element [aria-labelledby](https://www.w3.org/TR/wai-aria/#aria-labelledby).',\n        flavors: ['svg'],\n    },\n    {\n        key: 'ariaDescribedBy',\n        group: 'Accessibility',\n        type: 'string',\n        required: false,\n        help: 'Main element [aria-describedby](https://www.w3.org/TR/wai-aria/#aria-describedby).',\n        flavors: ['svg'],\n    },\n    ...motionProperties(['svg'], svgDefaultProps, 'react-spring'),\n    motionConfigProperty(\n        'blankCellsMotionConfig',\n        ['svg'],\n        undefined,\n        'Optional motion config override for blank cells, use global `motionConfig` if unspecified.'\n    ),\n    {\n        key: 'blankCellsStaggeredDelay',\n        group: 'Motion',\n        type: 'number',\n        required: false,\n        help: 'Control the delay between each blank cell transition.',\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.blankCellsStaggeredDelay,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 20,\n            unit: 'ms',\n        },\n    },\n    motionConfigProperty(\n        'valueCellsMotionConfig',\n        ['svg'],\n        undefined,\n        'Optional motion config override for value cells, use global `motionConfig` if unspecified.'\n    ),\n    {\n        key: 'valueCellsStaggeredDelay',\n        group: 'Motion',\n        type: 'number',\n        required: false,\n        help: 'Control the delay between each value cell transition.',\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.valueCellsStaggeredDelay,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 20,\n            unit: 'ms',\n        },\n    },\n]\n\nexport const groups = groupProperties(props)\n","import React from 'react'\nimport { randomDemographicMatrix } from '@nivo/generators'\nimport { ResponsiveWaffleGrid, WaffleGridSvgProps, svgDefaultProps } from '@nivo/waffle-grid'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/waffle-grid/meta.yml'\nimport mapper from '../../data/components/radial-bar/mapper'\nimport { groups } from '../../data/components/waffle-grid/props'\n\ntype MappedRadarProps = Omit<WaffleGridSvgProps, 'data' | 'width' | 'height'>\ntype UnmappedRadarProps = MappedRadarProps\n\nconst initialProperties: UnmappedRadarProps = {\n    cellValue: 1000,\n    enableBlankCells: svgDefaultProps.enableBlankCells,\n    spacing: svgDefaultProps.spacing,\n    // valueFormat: { format: '>-.2f', enabled: true },\n\n    blankCellColor: svgDefaultProps.blankCellColor,\n    valueCellColor: svgDefaultProps.valueCellColor,\n\n    margin: {\n        top: 20,\n        right: 20,\n        bottom: 100,\n        left: 100,\n    },\n\n    animate: svgDefaultProps.animate,\n    motionConfig: 'gentle',\n    blankCellsMotionConfig: 'stiff',\n    blankCellsStaggeredDelay: svgDefaultProps.blankCellsStaggeredDelay,\n    valueCellsMotionConfig: 'gentle',\n    valueCellsStaggeredDelay: svgDefaultProps.valueCellsStaggeredDelay,\n\n    isInteractive: svgDefaultProps.isInteractive,\n\n    /*\n    legends: [\n        {\n            anchor: 'right',\n            direction: 'column',\n            justify: false,\n            translateX: 80,\n            translateY: 0,\n            itemsSpacing: 6,\n            itemDirection: 'left-to-right',\n            itemWidth: 100,\n            itemHeight: 18,\n            itemTextColor: '#999',\n            symbolSize: 18,\n            symbolShape: 'square',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000',\n                    },\n                },\n            ],\n        },\n    ],\n    */\n}\n\nconst WaffleGrid = () => (\n    <ComponentTemplate<UnmappedRadarProps, MappedRadarProps, any>\n        name=\"WaffleGrid\"\n        meta={meta.WaffleGrid}\n        icon=\"waffle-grid\"\n        flavors={meta.flavors}\n        currentFlavor=\"svg\"\n        properties={groups}\n        initialProperties={initialProperties}\n        defaultProperties={svgDefaultProps}\n        propertiesMapper={mapper}\n        codePropertiesMapper={(properties, data) => ({\n            xRange: data.xRange.keys,\n            yRange: data.yRange.keys,\n            ...properties,\n        })}\n        generateData={randomDemographicMatrix}\n        getTabData={data => data.data}\n    >\n        {(properties, data, theme, logAction) => (\n            <ResponsiveWaffleGrid\n                {...properties}\n                data={data.data}\n                xRange={data.xRange.keys}\n                yRange={data.yRange.keys}\n                theme={theme}\n            />\n        )}\n    </ComponentTemplate>\n)\n\nexport default WaffleGrid\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n"],"names":["mapAxis","key","value","settings","enable","omit","settingsMapper","valueFormat","mapFormat","radialAxisStart","radialAxisEnd","circularAxisInner","circularAxisOuter","mapping","exclude","options","overrides","Object","keys","forEach","type","upperFirst","format","enabled","undefined","props","group","required","help","description","flavors","controlType","controlOptions","min","max","step","unit","enableControlForFlavors","defaultValue","svgDefaultProps","themeProperty","motionProperties","motionConfigProperty","groups","groupProperties","initialProperties","cellValue","enableBlankCells","spacing","blankCellColor","valueCellColor","margin","top","right","bottom","left","animate","motionConfig","blankCellsMotionConfig","blankCellsStaggeredDelay","valueCellsMotionConfig","valueCellsStaggeredDelay","isInteractive","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","codePropertiesMapper","data","xRange","yRange","generateData","randomDemographicMatrix","getTabData","theme","logAction","module","exports","array","iteratee","index","length","copyObject","object","source","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","stack","result","isDeep","isFlat","isFull","isArr","tag","isFunc","stacked","get","set","subValue","add","isObjectLike","castPath","last","parent","toKey","path","cloneArrayBuffer","dataView","buffer","constructor","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","prototype","symbolValueOf","valueOf","symbol","call","getSymbols","getSymbolsIn","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","getOwnPropertySymbols","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseGet","baseSlice","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","arrayMap","baseUnset","customOmitClone","flatRest","paths","CLONE_DEEP_FLAG"],"sourceRoot":""}