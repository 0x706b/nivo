{"version":3,"file":"component---src-pages-guides-patterns-js-1be9443d44f5d1eeffce.js","mappings":"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","sources":["webpack://nivo-website/./src/components/PageContent.ts","webpack://nivo-website/./src/components/styled.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/StreamLayer.tsx","webpack://nivo-website/../src/StreamLayers.tsx","webpack://nivo-website/../src/StreamDots.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../src/StreamSlicesItem.tsx","webpack://nivo-website/../src/StreamSlices.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/StreamDotsItem.tsx","webpack://nivo-website/../src/LayerTooltip.tsx","webpack://nivo-website/../src/StackTooltip.tsx","webpack://nivo-website/../src/Stream.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveStream.tsx","webpack://nivo-website/./src/components/guides/patterns/PatternsIllustrations.js","webpack://nivo-website/./src/components/guides/patterns/PatternsExample.js","webpack://nivo-website/./src/components/CollapsibleCard.tsx","webpack://nivo-website/./src/components/guides/GuideDemoBlock.js","webpack://nivo-website/./src/components/guides/patterns/PatternsDots.js","webpack://nivo-website/./src/components/guides/patterns/PatternsLines.js","webpack://nivo-website/./src/components/guides/patterns/PatternsSquares.js","webpack://nivo-website/./src/pages/guides/patterns.js","webpack://nivo-website/../node_modules/lodash/_asciiToArray.js","webpack://nivo-website/../node_modules/lodash/_castSlice.js","webpack://nivo-website/../node_modules/lodash/_createCaseFirst.js","webpack://nivo-website/../node_modules/lodash/_hasUnicode.js","webpack://nivo-website/../node_modules/lodash/_stringToArray.js","webpack://nivo-website/../node_modules/lodash/_unicodeToArray.js","webpack://nivo-website/../node_modules/lodash/upperFirst.js"],"sourcesContent":["import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport default styled.div`\n    margin: 0 50px;\n    position: relative;\n\n    ${media.tablet`\n        & {\n            margin: 0 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px;\n        }\n    `}\n`\n","import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport const FullWidthBanner = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    margin-bottom: 40px;\n    padding: 20px;\n`\n\nexport const DescriptionBlock = styled.div`\n    max-width: 800px;\n    margin: 0 auto 50px;\n\n    ${media.tablet`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n`\n\nexport const Card = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    box-shadow: ${({ theme }) => theme.cardShadow};\n`\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useCallback, createElement } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamLayerData } from './types'\n\ninterface StreamLayerProps<RawDatum extends StreamDatum> {\n    layer: StreamLayerData\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayer = <RawDatum extends StreamDatum>({\n    layer,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayerProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { layer }), event, 'left')\n        },\n        [showTooltipFromEvent, layer]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(layer.path)\n    const animatedProps = useSpring({\n        color: layer.color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={layer.fill ? layer.fill : animatedProps.color}\n            fillOpacity={fillOpacity}\n            stroke={getBorderColor(layer)}\n            strokeWidth={borderWidth}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? hideTooltip : undefined}\n        />\n    )\n}\n","import { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { StreamLayer } from './StreamLayer'\nimport { StreamCommonProps, StreamLayerData, StreamDatum } from './types'\n\ninterface StreamLayersProps<RawDatum extends StreamDatum> {\n    layers: StreamLayerData[]\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayers = <RawDatum extends StreamDatum>({\n    layers,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayersProps<RawDatum>) => (\n    <g>\n        {layers.map((layer, i) => (\n            <StreamLayer<RawDatum>\n                key={i}\n                layer={layer}\n                getBorderColor={getBorderColor}\n                borderWidth={borderWidth}\n                fillOpacity={fillOpacity}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { createElement } from 'react'\nimport { StreamSvgProps, StreamLayerDatum, StreamDatum } from './types'\n\ninterface StreamDotsProps<RawDatum extends StreamDatum> {\n    id: string | number\n    color: string\n    data: StreamLayerDatum[]\n    dotComponent: Exclude<StreamSvgProps<RawDatum>['dotComponent'], undefined>\n    position: 'start' | 'center' | 'end'\n    getSize: (datum: StreamLayerDatum) => number\n    getColor: (datum: StreamLayerDatum) => string\n    getBorderWidth: (datum: StreamLayerDatum) => number\n    getBorderColor: (datum: StreamLayerDatum) => string\n}\n\nconst getDotY = <RawDatum extends StreamDatum>(\n    datum: StreamLayerDatum,\n    position: StreamDotsProps<RawDatum>['position']\n) => {\n    let y = datum.y2\n    if (position === 'center') {\n        y = datum.y1 + (datum.y2 - datum.y1) / 2\n    } else if (position === 'start') {\n        y = datum.y1\n    }\n\n    return y\n}\n\nexport const StreamDots = <RawDatum extends StreamDatum>({\n    data,\n    dotComponent,\n    position,\n    getSize,\n    getColor,\n    getBorderWidth,\n    getBorderColor,\n}: StreamDotsProps<RawDatum>) => (\n    <>\n        {data.map((datum, i) => {\n            return createElement(dotComponent, {\n                key: i,\n                datum,\n                x: datum.x,\n                y: getDotY<RawDatum>(datum, position),\n                size: getSize(datum),\n                color: getColor(datum),\n                borderWidth: getBorderWidth(datum),\n                borderColor: getBorderColor(datum),\n            })\n        })}\n    </>\n)\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createElement, useCallback, useState } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamSliceData } from './types'\n\ninterface StreamSlicesItemProps<RawDatum extends StreamDatum> {\n    slice: StreamSliceData\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlicesItem = <RawDatum extends StreamDatum>({\n    slice,\n    height,\n    tooltip,\n}: StreamSlicesItemProps<RawDatum>) => {\n    const [isHover, setIsHover] = useState(false)\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(createElement(tooltip, { slice }), event, 'left')\n        },\n        [setIsHover, showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [setIsHover, hideTooltip])\n\n    return (\n        <g transform={`translate(${slice.x}, 0)`}>\n            {isHover && (\n                <line\n                    x1={0}\n                    x2={0}\n                    y1={0}\n                    y2={height}\n                    stroke=\"#000\"\n                    strokeOpacity={0.35}\n                    strokeWidth={1}\n                />\n            )}\n            <rect\n                x={-20}\n                width={40}\n                height={height}\n                fill=\"#000\"\n                fillOpacity={0}\n                onMouseEnter={handleMouseHover}\n                onMouseMove={handleMouseHover}\n                onMouseLeave={handleMouseLeave}\n            />\n        </g>\n    )\n}\n","import { StreamSliceData, StreamDatum, StreamCommonProps } from './types'\nimport { StreamSlicesItem } from './StreamSlicesItem'\n\ninterface StreamSlicesProps<RawDatum extends StreamDatum> {\n    slices: StreamSliceData[]\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlices = <RawDatum extends StreamDatum>({\n    slices,\n    height,\n    tooltip,\n}: StreamSlicesProps<RawDatum>) => (\n    <g>\n        {slices.map(slice => (\n            <StreamSlicesItem<RawDatum>\n                key={slice.index}\n                slice={slice}\n                height={height}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { StackOrder, StackOffset, AreaCurve } from '@nivo/core'\nimport { StreamCommonProps, StreamLayerId } from './types'\nimport { StreamDotsItem } from './StreamDotsItem'\nimport { LayerTooltip } from './LayerTooltip'\nimport { StackTooltip } from './StackTooltip'\n\nexport const defaultProps = {\n    label: 'id',\n\n    order: 'none' as StackOrder,\n    offsetType: 'wiggle' as StackOffset,\n    curve: 'catmullRom' as AreaCurve,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    colors: { scheme: 'nivo' } as StreamCommonProps<any>['colors'],\n    fillOpacity: 1,\n    borderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 1]] } as StreamCommonProps<\n        any\n    >['borderColor'],\n\n    enableDots: false,\n    dotPosition: 'center' as StreamCommonProps<any>['dotPosition'],\n    dotComponent: StreamDotsItem,\n    dotSize: 6,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 0,\n    dotBorderColor: { from: 'color' },\n\n    isInteractive: true,\n    tooltip: LayerTooltip,\n    enableStackTooltip: true,\n    stackTooltip: StackTooltip,\n\n    legends: [],\n    legendLabel: 'id',\n\n    role: 'application',\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'layers', 'dots', 'slices', 'legends'] as StreamLayerId[],\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\n\nexport interface StreamDotsItemProps {\n    x: number\n    y: number\n    size: number\n    color: string\n    borderWidth: number\n    borderColor: string\n}\n\nexport const StreamDotsItem = ({\n    x,\n    y,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n}: StreamDotsItemProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size * 0.5,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius}\n            fill={animatedProps.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nexport const LayerTooltip = ({ layer }: TooltipProps) => (\n    <BasicTooltip id={layer.label} enableChip={true} color={layer.color} />\n)\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { StackTooltipProps } from './types'\n\nexport const StackTooltip = ({ slice }: StackTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            slice.stack.map(p => [\n                <Chip key={p.layerId} color={p.color} />,\n                p.layerLabel,\n                p.formattedValue,\n            ]),\n        [slice]\n    )\n\n    return <TableTooltip rows={rows} />\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    Container,\n    SvgWrapper,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { StreamLayers } from './StreamLayers'\nimport { StreamDots } from './StreamDots'\nimport { StreamSlices } from './StreamSlices'\nimport { useStream } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { StreamDatum, StreamLayerId, StreamSvgProps } from './types'\n\ntype InnerStreamProps<RawDatum extends StreamDatum> = Omit<\n    StreamSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerStream = <RawDatum extends StreamDatum>({\n    data,\n    keys,\n    label,\n    valueFormat,\n\n    offsetType,\n    order,\n    curve,\n\n    layers: chartLayers = svgDefaultProps.layers,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n\n    colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n\n    enableDots = svgDefaultProps.enableDots,\n    dotPosition = svgDefaultProps.dotPosition,\n    dotComponent = svgDefaultProps.dotComponent,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    enableStackTooltip = svgDefaultProps.enableStackTooltip,\n    stackTooltip = svgDefaultProps.stackTooltip,\n\n    legends = svgDefaultProps.legends,\n\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerStreamProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        xScale,\n        yScale,\n        layers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    } = useStream<RawDatum>({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        keys,\n        label,\n        valueFormat,\n        offsetType,\n        order,\n        curve,\n        colors,\n        borderColor,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n    })\n\n    const boundDefs = bindDefs(defs, layers, fill)\n\n    const layerById: Record<StreamLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        layers: null,\n        dots: null,\n        slices: null,\n        legends: null,\n    }\n\n    if (chartLayers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n            />\n        )\n    }\n\n    if (chartLayers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (chartLayers.includes('layers')) {\n        layerById.layers = (\n            <StreamLayers<RawDatum>\n                key=\"layers\"\n                layers={layers}\n                fillOpacity={fillOpacity}\n                borderWidth={borderWidth}\n                getBorderColor={getBorderColor}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <Fragment key=\"dots\">\n                {layers.map(layer => (\n                    <StreamDots\n                        key={layer.id}\n                        id={layer.id}\n                        color={layer.color}\n                        data={layer.data}\n                        dotComponent={dotComponent}\n                        position={dotPosition}\n                        getSize={getDotSize}\n                        getColor={getDotColor}\n                        getBorderWidth={getDotBorderWidth}\n                        getBorderColor={getDotBorderColor}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (chartLayers.includes('slices') && isInteractive && enableStackTooltip) {\n        layerById.slices = (\n            <StreamSlices<RawDatum>\n                key=\"slices\"\n                slices={slices}\n                height={innerHeight}\n                tooltip={stackTooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => {\n                    const legendData = layers\n                        .map(layer => ({\n                            id: layer.id,\n                            label: layer.label,\n                            color: layer.color,\n                            fill: layer.fill,\n                        }))\n                        .reverse()\n\n                    return (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legend}\n                            containerWidth={innerWidth}\n                            containerHeight={innerHeight}\n                            data={legendData}\n                        />\n                    )\n                })}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {chartLayers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Stream = <RawDatum extends StreamDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: StreamSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerStream<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport { area, stack as d3Stack } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport {\n    useTheme,\n    usePropertyAccessor,\n    useValueFormatter,\n    useCurveInterpolation,\n    // @ts-ignore\n    stackOrderFromProp,\n    // @ts-ignore\n    stackOffsetFromProp,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    StreamCommonProps,\n    StreamCustomLayerProps,\n    StreamDataProps,\n    StreamDatum,\n    StreamLayerData,\n    StreamLayerDatum,\n    StreamSliceData,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useStream = <RawDatum extends StreamDatum>({\n    width,\n    height,\n    data,\n    keys,\n    label = defaultProps.label,\n    valueFormat,\n    offsetType = defaultProps.offsetType,\n    order = defaultProps.order,\n    curve = defaultProps.curve,\n    colors = defaultProps.colors,\n    borderColor = defaultProps.borderColor,\n    dotSize = defaultProps.dotSize,\n    dotColor = defaultProps.dotColor,\n    dotBorderWidth = defaultProps.dotBorderWidth,\n    dotBorderColor = defaultProps.dotBorderColor,\n}: {\n    width: number\n    height: number\n    data: StreamDataProps<RawDatum>['data']\n    keys: StreamDataProps<RawDatum>['keys']\n    label?: StreamCommonProps<RawDatum>['label']\n    valueFormat?: StreamCommonProps<RawDatum>['valueFormat']\n    offsetType?: StreamCommonProps<RawDatum>['offsetType']\n    order?: StreamCommonProps<RawDatum>['order']\n    curve?: StreamCommonProps<RawDatum>['curve']\n    colors?: StreamCommonProps<RawDatum>['colors']\n    dotSize?: StreamCommonProps<RawDatum>['dotSize']\n    dotColor?: StreamCommonProps<RawDatum>['dotColor']\n    dotBorderWidth?: StreamCommonProps<RawDatum>['dotBorderWidth']\n    dotBorderColor?: StreamCommonProps<RawDatum>['dotBorderColor']\n    borderColor?: StreamCommonProps<RawDatum>['borderColor']\n}) => {\n    const areaCurveFactory = useCurveInterpolation(curve)\n    const areaGenerator = useMemo(\n        () =>\n            area<StreamLayerDatum>()\n                .x(({ x }) => x)\n                .y0(({ y1 }) => y1)\n                .y1(({ y2 }) => y2)\n                .curve(areaCurveFactory),\n        [areaCurveFactory]\n    )\n\n    const stack = useMemo(\n        () =>\n            d3Stack<RawDatum, string | number>()\n                .keys(keys)\n                .offset(stackOffsetFromProp(offsetType))\n                .order(stackOrderFromProp(order)),\n        [keys, offsetType, order]\n    )\n\n    const [layers, xScale, yScale] = useMemo(() => {\n        const allMin: number[] = []\n        const allMax: number[] = []\n\n        const layers = stack(data).map(layer => {\n            return layer.map(point => {\n                allMin.push(point[0])\n                allMax.push(point[1])\n\n                return {\n                    ...point,\n                    value: point.data[layer.key] as number,\n                }\n            })\n        })\n\n        const minValue = Math.min(...allMin)\n        const maxValue = Math.max(...allMax)\n\n        return [\n            layers,\n            scalePoint<number>()\n                .domain(Array.from({ length: data.length }, (_, i) => i))\n                .range([0, width]),\n            scaleLinear().domain([minValue, maxValue]).range([height, 0]),\n        ]\n    }, [stack, data, width, height])\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<StreamLayerData, 'label' | 'color' | 'data'>>(\n        colors,\n        'id'\n    )\n    const getBorderColor = useInheritedColor<StreamLayerData>(borderColor, theme)\n\n    const getDotSize = useMemo(() => (typeof dotSize === 'function' ? dotSize : () => dotSize), [\n        dotSize,\n    ])\n    const getDotColor = useInheritedColor(dotColor, theme)\n    const getDotBorderWidth = useMemo(\n        () => (typeof dotBorderWidth === 'function' ? dotBorderWidth : () => dotBorderWidth),\n        [dotBorderWidth]\n    )\n    const getDotBorderColor = useInheritedColor(dotBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<\n        Omit<StreamLayerData, 'label' | 'color' | 'data'>,\n        string | number\n    >(label)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const enhancedLayers: StreamLayerData[] = useMemo(\n        () =>\n            layers.map((points, layerIndex) => {\n                const computedPoints: StreamLayerDatum[] = points.map((point, i) => ({\n                    layerId: keys[layerIndex],\n                    layerLabel: '',\n                    index: i,\n                    color: '',\n                    x: xScale(i) as number,\n                    value: point.value,\n                    formattedValue: formatValue(point.value),\n                    y1: yScale(point[0]),\n                    y2: yScale(point[1]),\n                }))\n\n                const layer: Omit<StreamLayerData, 'label' | 'color' | 'data'> = {\n                    id: keys[layerIndex] as string,\n                    path: areaGenerator(computedPoints) as string,\n                }\n\n                const layerWithComputedProperties: Omit<StreamLayerData, 'data'> = {\n                    ...layer,\n                    label: getLabel(layer),\n                    color: getColor(layer),\n                }\n\n                return {\n                    ...layerWithComputedProperties,\n                    data: computedPoints.map(point => {\n                        point.layerLabel = layerWithComputedProperties.label\n                        point.color = layerWithComputedProperties.color\n\n                        return point\n                    }),\n                }\n            }),\n        [layers, keys, getLabel, areaGenerator, getColor, xScale, yScale, formatValue]\n    )\n\n    const slices: StreamSliceData[] = useMemo(\n        () =>\n            Array.from({ length: data.length }, (_, i) => {\n                const sliceStack = enhancedLayers\n                    .map(layer => layer.data[i])\n                    .sort((a, b) => a.y2 - b.y2)\n\n                return {\n                    index: i,\n                    x: enhancedLayers[0].data[i].x,\n                    stack: sliceStack,\n                }\n            }),\n        [data.length, enhancedLayers]\n    )\n\n    const layerContext: StreamCustomLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            layers: enhancedLayers,\n            slices,\n        }),\n        [xScale, yScale, enhancedLayers, slices]\n    )\n\n    return {\n        xScale,\n        yScale,\n        layers: enhancedLayers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    }\n}\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { StreamDatum, StreamSvgProps } from './types'\nimport { Stream } from './Stream'\n\nexport const ResponsiveStream = <RawDatum extends StreamDatum>(\n    props: Omit<StreamSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Stream<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import React from 'react'\nimport { patternDotsDef, patternLinesDef, patternSquaresDef } from '@nivo/core'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsiveStream } from '@nivo/stream'\nimport { ResponsiveTreeMap } from '@nivo/treemap'\nimport { generateCountriesData } from '@nivo/generators'\nimport { FullWidthBanner } from '../../styled'\nimport { useTheme } from '../../../theming/context'\n\nconst PatternsIllustrations = () => {\n    const theme = useTheme()\n\n    return (\n        <FullWidthBanner>\n            <div className=\"guide__illustrations\">\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveStream\n                        margin={{ top: -2, right: -2, bottom: -2, left: -2 }}\n                        data={generateCountriesData(['a', 'b', 'c'], { size: 7 })}\n                        indexBy=\"country\"\n                        keys={['a', 'b', 'c']}\n                        offsetType=\"expand\"\n                        axisLeft={null}\n                        axisBottom={null}\n                        enableGridX={false}\n                        defs={[\n                            patternLinesDef('example1.lines.1', {\n                                rotation: 45,\n                                lineWidth: 4,\n                                spacing: 6,\n                                background: 'transparent',\n                                color: 'inherit',\n                            }),\n                            patternLinesDef('example1.lines.2', {\n                                rotation: -45,\n                                lineWidth: 1,\n                                spacing: 3,\n                                background: 'transparent',\n                                color: 'inherit',\n                            }),\n                            patternDotsDef('example1.dots', {\n                                background: 'transparent',\n                                color: 'inherit',\n                                size: 4,\n                                padding: 0,\n                                stagger: true,\n                            }),\n                        ]}\n                        fill={[\n                            { match: { id: 'a' }, id: 'example1.lines.1' },\n                            { match: { id: 'b' }, id: 'example1.dots' },\n                            { match: { id: 'c' }, id: 'example1.lines.2' },\n                        ]}\n                        borderWidth={2}\n                        borderColor={'#333'}\n                        isInteractive={false}\n                        animate={false}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveBar\n                        margin={{ top: 15, right: -2, bottom: -2, left: -2 }}\n                        data={generateCountriesData(['a', 'b', 'c'], { size: 7 })}\n                        indexBy=\"country\"\n                        keys={['a', 'b', 'c']}\n                        colors={{ scheme: 'spectral' }}\n                        padding={0.3}\n                        axisLeft={null}\n                        axisBottom={null}\n                        enableGridY={false}\n                        enableLabel={false}\n                        colorBy=\"index\"\n                        defs={[\n                            patternLinesDef('example2.lines', {\n                                rotation: -45,\n                                lineWidth: 4,\n                                spacing: 6,\n                                background: 'transparent',\n                                color: 'inherit',\n                            }),\n                            patternDotsDef('example2.dots', {\n                                background: 'transparent',\n                                color: 'inherit',\n                                size: 4,\n                                padding: 0,\n                                stagger: true,\n                            }),\n                            patternSquaresDef('example2.squares', {\n                                background: 'transparent',\n                                color: 'inherit',\n                                stagger: true,\n                                size: 8,\n                                padding: 0,\n                            }),\n                        ]}\n                        fill={[\n                            { match: d => d.data.index % 3 === 0, id: 'example2.lines' },\n                            { match: d => d.data.index % 3 === 1, id: 'example2.dots' },\n                            { match: d => d.data.index % 3 === 2, id: 'example2.squares' },\n                        ]}\n                        borderWidth={2}\n                        borderColor=\"inherit\"\n                        isInteractive={false}\n                        animate={false}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveTreeMap\n                        margin={{ top: -2, right: -2, bottom: -2, left: -2 }}\n                        data={{\n                            country: 'root',\n                            children: generateCountriesData(['value'], { size: 9 }),\n                        }}\n                        identity=\"country\"\n                        leavesOnly={true}\n                        colors={{ scheme: 'spectral' }}\n                        colorBy=\"id\"\n                        borderWidth={4}\n                        outerPadding={10}\n                        innerPadding={4}\n                        nodeOpacity={1}\n                        borderColor=\"inherit\"\n                        isInteractive={false}\n                        animate={false}\n                        enableLabel={false}\n                        enableParentLabel={false}\n                        defs={[\n                            patternLinesDef('example3.lines', {\n                                rotation: -45,\n                                lineWidth: 4,\n                                spacing: 6,\n                                background: 'transparent',\n                                color: 'inherit',\n                            }),\n                        ]}\n                        fill={[{ match: '*', id: 'example3.lines' }]}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__legend\">\n                    patterns applied to various nivo components.\n                </div>\n            </div>\n        </FullWidthBanner>\n    )\n}\n\nexport default PatternsIllustrations\n","import React from 'react'\nimport { Highlight } from '../../Highlight'\n\nconst code = `\nimport { patternDotsDef, patternSquaresDef } from '@nivo/core'\nimport { Stream } from '@nivo/stream'\n\nconst MyChart = () => (\n    <Stream\n        data={/*…*/}\n        keys={['react', 'vue', 'elm']}\n        // 1. defining patterns\n        defs={[\n            // using helpers (cannot be used with http rendering API)\n            // will use color from current element\n            patternDotsDef('dots', { color: 'inherit' }),\n            // will use background color from current element\n            patternSquaresDef('squares', { background: 'inherit' }),\n            // using plain object\n            { id: 'custom', type: 'patternSquares', size: 24 },\n        ]}\n        // 2. defining rules to apply those patterns\n        fill={[\n            // match using query object\n            // (can be used with http rendering API\n            { match: { id: 'react' }, id: 'dots' },\n            // match using function\n            // (cannot be used with http rendering API\n            { match: d => d.id === 'vue', id: 'squares' },\n            // match all, will only affect 'elm' because once\n            // a rule match, others are skipped\n            // (can be used with http rendering API\n            { match: '*', id: 'custom' },\n        ]}\n    />\n)\n`.trim()\n\nconst PatternsExample = () => <Highlight code={code} language=\"jsx\" />\n\nexport default PatternsExample\n","import React, { useState, PropsWithChildren, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { MdArrowDropUp, MdArrowDropDown } from 'react-icons/md'\nimport { Card } from './styled'\n\nexport const CollapsibleCard = ({\n    title,\n    expandedByDefault = false,\n    children,\n}: PropsWithChildren<{ title: string; expandedByDefault?: boolean }>) => {\n    const [expanded, setExpanded] = useState(expandedByDefault)\n    const handleToggle = useCallback(() => {\n        setExpanded(prev => !prev)\n    }, [setExpanded])\n\n    return (\n        <Wrapper isExpanded={expanded}>\n            <Header className=\"no-select\" onClick={handleToggle}>\n                <Title>{title}</Title>\n                {expanded ? <MdArrowDropUp /> : <MdArrowDropDown />}\n            </Header>\n            {expanded && <div className=\"card_body\">{children}</div>}\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled(Card)<{ isExpanded: boolean }>`\n    margin-bottom: ${({ isExpanded }) => (isExpanded ? '30px' : 0)};\n\n    svg {\n        font-size: 26px;\n    }\n`\n\nconst Header = styled.div`\n    height: 52px;\n    width: 100%;\n    position: relative;\n    padding: 0 24px;\n    cursor: pointer;\n    color: ${({ theme }) => theme.colors.text};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst Title = styled.h3`\n    margin: 0;\n    color: ${({ theme }) => theme.colors.text};\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport media from '../../theming/mediaQueries'\nimport { CollapsibleCard } from '../CollapsibleCard'\nimport ControlsGroup from '../controls/ControlsGroup'\nimport { Highlight } from '../Highlight'\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 4fr 6fr;\n    grid-template-rows: 4fr 6fr;\n    max-height: 600px;\n\n    ${media.mobile`\n        & {\n            display: block;\n            max-height: none;\n        }\n    `}\n`\n\nconst Preview = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n\n    ${media.mobile`\n        & {\n            padding: 20px 0;\n            border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n        }\n    `}\n`\n\nconst Code = styled.div`\n    grid-column-start: 1;\n    grid-row-start: 2;\n    overflow-x: hidden;\n    overflow-y: auto;\n    border-top: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst Controls = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-left: 1px solid ${({ theme }) => theme.colors.borderLight};\n    grid-row-start: 1;\n    grid-row-end: 3;\n    grid-column-start: 2;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst GuideDemoBlock = ({ title, initialSettings, controls, generateCode, children }) => {\n    const [settings, setSettings] = useState(initialSettings)\n\n    return (\n        <CollapsibleCard title={title} expandedByDefault={true}>\n            <Container>\n                <Preview>{children(settings)}</Preview>\n                <Controls>\n                    <ControlsGroup\n                        name={title}\n                        controls={controls}\n                        settings={settings}\n                        onChange={setSettings}\n                    />\n                </Controls>\n                <Code>\n                    <Highlight language=\"jsx\" code={generateCode(settings)} />\n                </Code>\n            </Container>\n        </CollapsibleCard>\n    )\n}\n\nexport default GuideDemoBlock\n","import React from 'react'\nimport { Defs, patternDotsDef, PatternDots } from '@nivo/core'\nimport GuideDemoBlock from '../GuideDemoBlock'\n\nconst SAMPLE_SIZE = 120\nconst patternId = 'dots-pattern'\n\nconst controls = [\n    {\n        name: 'size',\n        type: 'number',\n        help: 'dots size.',\n        controlType: 'range',\n        defaultValue: PatternDots.defaultProps.size,\n        controlOptions: {\n            unit: 'px',\n            min: 1,\n            max: 24,\n        },\n    },\n    {\n        name: 'padding',\n        type: 'number',\n        help: 'padding between dots.',\n        controlType: 'range',\n        defaultValue: PatternDots.defaultProps.padding,\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    {\n        name: 'stagger',\n        type: 'boolean',\n        help: 'staggered dots.',\n        defaultValue: PatternDots.defaultProps.stagger,\n        controlType: 'switch',\n    },\n    {\n        name: 'background',\n        type: 'string',\n        help: 'pattern background color.',\n        defaultValue: PatternDots.defaultProps.background,\n        controlType: 'colorPicker',\n    },\n    {\n        name: 'color',\n        type: 'string',\n        help: 'dots color.',\n        defaultValue: PatternDots.defaultProps.color,\n        controlType: 'colorPicker',\n    },\n]\n\nconst initialSettings = {\n    size: PatternDots.defaultProps.size,\n    padding: PatternDots.defaultProps.padding,\n    stagger: PatternDots.defaultProps.stagger,\n    background: PatternDots.defaultProps.background,\n    color: PatternDots.defaultProps.color,\n}\n\nconst generateCode = settings =>\n    `\n// helper\npatternDotsDef('${patternId}', ${JSON.stringify(settings, null, '  ')})\n// plain object\n${JSON.stringify(patternDotsDef(patternId, settings), null, '    ')}\n`.trim()\n\nconst PatternDotsDemo = () => {\n    return (\n        <GuideDemoBlock\n            title=\"Dots\"\n            controls={controls}\n            initialSettings={initialSettings}\n            generateCode={generateCode}\n        >\n            {settings => (\n                <svg width={SAMPLE_SIZE} height={SAMPLE_SIZE}>\n                    <Defs defs={[patternDotsDef(patternId, settings)]} />\n                    <rect width={SAMPLE_SIZE} height={SAMPLE_SIZE} fill={`url(#${patternId})`} />\n                </svg>\n            )}\n        </GuideDemoBlock>\n    )\n}\n\nexport default PatternDotsDemo\n","import React from 'react'\nimport { Defs, PatternLines, patternLinesDef } from '@nivo/core'\nimport GuideDemoBlock from '../GuideDemoBlock'\n\nconst SAMPLE_SIZE = 120\nconst patternId = 'lines-pattern'\n\nconst controls = [\n    {\n        name: 'spacing',\n        type: 'number',\n        help: 'spacing between lines.',\n        defaultValue: PatternLines.defaultProps.spacing,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        name: 'rotation',\n        type: 'number',\n        help: 'lines rotation.',\n        defaultValue: PatternLines.defaultProps.rotation,\n        controlType: 'angle',\n        controlOptions: {\n            start: 90,\n            min: -360,\n            max: 360,\n        },\n    },\n    {\n        name: 'lineWidth',\n        type: 'number',\n        help: 'lines thickness.',\n        defaultValue: PatternLines.defaultProps.lineWidth,\n        controlType: 'lineWidth',\n        controlOptions: {\n            min: 1,\n        },\n    },\n    {\n        name: 'background',\n        type: 'string',\n        help: 'pattern background color.',\n        defaultValue: PatternLines.defaultProps.background,\n        controlType: 'colorPicker',\n    },\n    {\n        name: 'color',\n        type: 'string',\n        help: 'lines color.',\n        defaultValue: PatternLines.defaultProps.color,\n        controlType: 'colorPicker',\n    },\n]\n\nconst initialSettings = {\n    spacing: PatternLines.defaultProps.spacing,\n    rotation: PatternLines.defaultProps.rotation,\n    lineWidth: PatternLines.defaultProps.lineWidth,\n    background: PatternLines.defaultProps.background,\n    color: PatternLines.defaultProps.color,\n}\n\nconst generateCode = settings =>\n    `\n// helper\npatternLinesDef('${patternId}', ${JSON.stringify(settings, null, '  ')})\n// plain object\n${JSON.stringify(patternLinesDef(patternId, settings), null, '    ')}\n`.trim()\n\nconst PatternsLinesDemo = () => {\n    return (\n        <GuideDemoBlock\n            title=\"Lines\"\n            controls={controls}\n            initialSettings={initialSettings}\n            generateCode={generateCode}\n        >\n            {settings => (\n                <svg width={SAMPLE_SIZE} height={SAMPLE_SIZE}>\n                    <Defs defs={[patternLinesDef(patternId, settings)]} />\n                    <rect width={SAMPLE_SIZE} height={SAMPLE_SIZE} fill={`url(#${patternId})`} />\n                </svg>\n            )}\n        </GuideDemoBlock>\n    )\n}\n\nexport default PatternsLinesDemo\n","import React from 'react'\nimport { Defs, patternSquaresDef, PatternSquares } from '@nivo/core'\nimport GuideDemoBlock from '../GuideDemoBlock'\n\nconst SAMPLE_SIZE = 120\nconst patternId = 'squares-pattern'\n\nconst controls = [\n    {\n        name: 'size',\n        type: 'number',\n        help: 'squares size.',\n        defaultValue: PatternSquares.defaultProps.size,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 1,\n            max: 24,\n        },\n    },\n    {\n        name: 'padding',\n        type: 'number',\n        help: 'padding between squares.',\n        defaultValue: PatternSquares.defaultProps.padding,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    {\n        name: 'stagger',\n        type: 'boolean',\n        help: 'staggered squares.',\n        defaultValue: PatternSquares.defaultProps.stagger,\n        controlType: 'switch',\n    },\n    {\n        name: 'background',\n        type: 'string',\n        help: 'pattern background color.',\n        defaultValue: PatternSquares.defaultProps.background,\n        controlType: 'colorPicker',\n    },\n    {\n        name: 'color',\n        type: 'string',\n        help: 'squares color.',\n        defaultValue: PatternSquares.defaultProps.color,\n        controlType: 'colorPicker',\n    },\n]\n\nconst initialSettings = {\n    size: PatternSquares.defaultProps.size,\n    padding: PatternSquares.defaultProps.padding,\n    stagger: PatternSquares.defaultProps.stagger,\n    background: PatternSquares.defaultProps.background,\n    color: PatternSquares.defaultProps.color,\n}\n\nconst generateCode = settings =>\n    `\n// helper\npatternSquaresDef('${patternId}', ${JSON.stringify(settings, null, '  ')})\n// plain object\n${JSON.stringify(patternSquaresDef(patternId, settings), null, '    ')}\n`.trim()\n\nconst PatternsSquaresDemo = () => {\n    return (\n        <GuideDemoBlock\n            title=\"Squares\"\n            controls={controls}\n            initialSettings={initialSettings}\n            generateCode={generateCode}\n        >\n            {settings => (\n                <svg width={SAMPLE_SIZE} height={SAMPLE_SIZE}>\n                    <Defs defs={[patternSquaresDef(patternId, settings)]} />\n                    <rect width={SAMPLE_SIZE} height={SAMPLE_SIZE} fill={`url(#${patternId})`} />\n                </svg>\n            )}\n        </GuideDemoBlock>\n    )\n}\n\nexport default PatternsSquaresDemo\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport { Seo } from '../../components/Seo'\nimport PageContent from '../../components/PageContent'\nimport PatternsIllustrations from '../../components/guides/patterns/PatternsIllustrations'\nimport PatternsExample from '../../components/guides/patterns/PatternsExample'\nimport PatternsDots from '../../components/guides/patterns/PatternsDots'\nimport PatternsLines from '../../components/guides/patterns/PatternsLines'\nimport PatternsSquares from '../../components/guides/patterns/PatternsSquares'\nimport { DescriptionBlock } from '../../components/styled'\n\nconst Patterns = () => (\n    <Layout>\n        <Seo title=\"Patterns Guide\" />\n        <PageContent>\n            <div className=\"guide__header\">\n                <h1>Patterns</h1>\n            </div>\n        </PageContent>\n        <DescriptionBlock>\n            <h2>Purpose</h2>\n            <p>\n                Using patterns can be useful to <strong>group similar items</strong>, for example\n                imagine you want to build a pie chart displaying various foods, you can use a color\n                scale to assign a unique color to each one, then you can group\n                vegetables/fruits/meats/… using a similar pattern for each group (while keeping\n                color variation).\n            </p>\n            <h2>Using patterns in nivo</h2>\n            <p>\n                Defining patterns in nivo is a <strong>2 steps process</strong>, first you'll have\n                to declare available definitions (the same goes for{' '}\n                <Link to=\"/guides/gradients\">gradients</Link>) using dedicated helpers or providing\n                plain objects.\n                <br />\n                Then you must define the rules to apply those definitions using the{' '}\n                <code>fill</code> property.\n            </p>\n        </DescriptionBlock>\n        <PatternsIllustrations />\n        <DescriptionBlock>\n            <p>\n                <strong>Separating pattern definitions from application</strong> allows us to reuse\n                those in various places, like fills and borders, and while maintaining a direct\n                mapping for a bar chart with 5 items can be simple enough, when you're dealing with\n                a complex heatmap with tens of nodes it can quickly become cumbersome. Doing so also\n                provides the ability to{' '}\n                <strong>use a pattern depending on chart element value</strong>. Last but not least,{' '}\n                <strong>patterns colors can be inherited</strong> from current node ones.\n            </p>\n            <h2>Example</h2>\n            <PatternsExample />\n            <h2>Available patterns</h2>\n            <PatternsDots />\n            <PatternsLines />\n            <PatternsSquares />\n            <h2>Known limitations</h2>\n            <p>\n                Please be aware that pattern usage has some limitations, it's{' '}\n                <strong>not supported for canvas</strong> chart implementations for now, and\n                tooltips involving colored chips will use plain element color.\n            </p>\n        </DescriptionBlock>\n    </Layout>\n)\n\nexport default Patterns\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n"],"names":["styled","media","FullWidthBanner","theme","colors","cardBackground","DescriptionBlock","Card","cardShadow","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties","StreamLayer","layer","fillOpacity","borderWidth","getBorderColor","isInteractive","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","event","createElement","useMotionConfig","animate","springConfig","animatedPath","useAnimatedPath","animatedProps","useSpring","color","config","immediate","d","fill","stroke","strokeWidth","onMouseMove","onMouseEnter","onMouseLeave","undefined","StreamLayers","layers","getDotY","y","datum","position","StreamDots","data","dotComponent","getSize","getColor","getBorderWidth","x","size","borderColor","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","toString","slice","constructor","name","from","test","unsupportedIterableToArray","TypeError","nonIterableRest","StreamSlicesItem","height","useState","isHover","setIsHover","handleMouseLeave","transform","x1","x2","y1","y2","strokeOpacity","width","StreamSlices","slices","defaultProps","label","order","offsetType","curve","axisBottom","axisLeft","enableGridX","enableGridY","scheme","modifiers","enableDots","dotPosition","radius","cx","cy","r","dotSize","dotColor","dotBorderWidth","dotBorderColor","id","enableChip","enableStackTooltip","stackTooltip","rows","useMemo","p","legends","legendLabel","role","svgDefaultProps","defs","motionConfig","isFocusable","InnerStream","valueFormat","chartLayers","partialMargin","margin","axisTop","axisRight","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","areaCurveFactory","useCurveInterpolation","areaGenerator","stack","d3Stack","stackOffsetFromProp","stackOrderFromProp","allMin","allMax","point","minValue","Math","maxValue","scaleLinear","xScale","yScale","useTheme","useOrdinalColorScale","useInheritedColor","getDotSize","getDotColor","getDotBorderWidth","getDotBorderColor","getLabel","usePropertyAccessor","formatValue","useValueFormatter","enhancedLayers","computedPoints","points","layerId","layerLabel","index","formattedValue","path","layerWithComputedProperties","sliceStack","a","b","layerContext","useStream","boundDefs","bindDefs","layerById","grid","axes","dots","top","right","bottom","left","legendData","containerWidth","containerHeight","Stream","renderWrapper","otherProps","ResponsiveStream","className","generateCountriesData","indexBy","patternLinesDef","rotation","lineWidth","spacing","background","patternDotsDef","padding","stagger","match","nivo","enableLabel","colorBy","patternSquaresDef","country","children","identity","leavesOnly","outerPadding","innerPadding","nodeOpacity","enableParentLabel","code","trim","Highlight","language","CollapsibleCard","title","expandedByDefault","expanded","setExpanded","handleToggle","prev","Wrapper","isExpanded","Header","onClick","Title","text","borderLight","Container","Preview","cardAltBackground","Code","Controls","initialSettings","controls","generateCode","settings","setSettings","ControlsGroup","onChange","SAMPLE_SIZE","patternId","type","help","controlType","defaultValue","PatternDots","controlOptions","unit","min","max","JSON","stringify","PatternLines","start","PatternSquares","Layout","Seo","PageContent","Link","to","PatternsDots","PatternsLines","PatternsSquares","module","exports","string","split","baseSlice","array","end","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","join","reHasUnicode","RegExp","asciiToArray","unicodeToArray","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","upperFirst","createCaseFirst"],"sourceRoot":""}