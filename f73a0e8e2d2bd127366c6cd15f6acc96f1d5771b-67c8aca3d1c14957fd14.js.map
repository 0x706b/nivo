{"version":3,"sources":["webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/props.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/hooks.js","webpack:///../src/SankeyNodesItem.js","webpack:///../src/SankeyNodes.js","webpack:///../src/SankeyLinkGradient.js","webpack:///../src/SankeyLinksItem.js","webpack:///../src/SankeyLinks.js","webpack:///../src/links.js","webpack:///../src/SankeyLabels.js","webpack:///../src/Sankey.js","webpack:///../src/ResponsiveSankey.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","sankeyAlignmentPropMapping","center","justify","start","end","sankeyRight","sankeyAlignmentPropKeys","sankeyAlignmentPropType","PropTypes","SankeyDefaultProps","data","nodes","id","isRequired","links","layout","align","sort","colors","ordinalColorsPropType","nodeOpacity","nodeHoverOpacity","nodeHoverOthersOpacity","nodeThickness","nodeSpacing","nodeInnerPadding","nodeBorderWidth","nodeBorderColor","linkOpacity","linkHoverOpacity","linkHoverOthersOpacity","linkContract","linkBlendMode","blendModePropType","enableLinkGradient","enableLabels","labelPosition","labelPadding","labelOrientation","labelTextColor","label","labelFormat","nodeTooltip","linkTooltip","isInteractive","onClick","tooltipFormat","legends","layers","role","scheme","from","modifiers","animate","motionConfig","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","unsupportedIterableToArray","TypeError","nonIterableRest","getId","d","useSankey","width","height","useState","currentNode","setCurrentNode","currentLink","setCurrentLink","sortFunction","useMemo","a","b","linkSortMode","alignFunction","theme","useTheme","getColor","useOrdinalColorScale","getNodeBorderColor","useInheritedColor","getLabel","getLabelGenerator","getLabelTextColor","_data","sankey","d3Sankey","node","Math","oldX0","oldX1","link","computeNodeAndLinks","legendData","color","SankeyNodesItem","x","y","opacity","borderWidth","borderColor","setCurrent","tooltip","useMotionConfig","springConfig","animatedProps","useSpring","config","immediate","useTooltip","showTooltipFromEvent","hideTooltip","tooltipContent","enableChip","handleMouseEnter","useCallback","event","handleMouseMove","handleMouseLeave","handleClick","to","v","fill","fillOpacity","strokeWidth","stroke","strokeOpacity","onMouseEnter","onMouseMove","onMouseLeave","memo","SankeyNodes","isCurrentNode","getOpacity","SankeyLinkGradient","startColor","endColor","gradientProps","spreadMethod","offset","stopColor","tooltipStyles","container","display","alignItems","sourceChip","marginRight","targetChip","marginLeft","TooltipContent","format","style","SankeyLinksItem","path","blendMode","enableGradient","linkId","animatedPath","useAnimatedPath","encodeURI","mixBlendMode","SankeyLinks","lineGenerator","isCurrentLink","getLinkPath","line","halfThickness","contract","padLength","dots","sankeyLinkVertical","SankeyLabels","labelRotation","labels","textAnchor","useSprings","transform","dominantBaseline","pointerEvents","WrappedSankey","withContainer","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","currentNodeIds","layerProps","layerById","containerWidth","containerHeight","layer","ResponsiveSankey","props"],"mappings":"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","file":"f73a0e8e2d2bd127366c6cd15f6acc96f1d5771b-67c8aca3d1c14957fd14.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { sankeyCenter, sankeyJustify, sankeyLeft, sankeyRight } from 'd3-sankey'\nimport { noop, blendModePropType, motionPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { LegendPropShape } from '@nivo/legends'\n\nexport const sankeyAlignmentPropMapping = {\n    center: sankeyCenter,\n    justify: sankeyJustify,\n    start: sankeyLeft,\n    end: sankeyRight,\n}\n\nexport const sankeyAlignmentPropKeys = Object.keys(sankeyAlignmentPropMapping)\n\nexport const sankeyAlignmentPropType = PropTypes.oneOf(sankeyAlignmentPropKeys)\n\nexport const sankeyAlignmentFromProp = prop => sankeyAlignmentPropMapping[prop]\n\nexport const SankeyPropTypes = {\n    data: PropTypes.shape({\n        nodes: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            })\n        ).isRequired,\n        links: PropTypes.arrayOf(\n            PropTypes.shape({\n                source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n                target: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            })\n        ).isRequired,\n    }).isRequired,\n\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    align: sankeyAlignmentPropType.isRequired,\n    sort: PropTypes.oneOfType([\n        PropTypes.oneOf(['auto', 'input', 'ascending', 'descending']),\n        PropTypes.func,\n    ]).isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n\n    nodeOpacity: PropTypes.number.isRequired,\n    nodeHoverOpacity: PropTypes.number.isRequired,\n    nodeHoverOthersOpacity: PropTypes.number.isRequired,\n    nodeThickness: PropTypes.number.isRequired,\n    nodeSpacing: PropTypes.number.isRequired,\n    nodeInnerPadding: PropTypes.number.isRequired,\n    nodeBorderWidth: PropTypes.number.isRequired,\n    nodeBorderColor: inheritedColorPropType,\n\n    linkOpacity: PropTypes.number.isRequired,\n    linkHoverOpacity: PropTypes.number.isRequired,\n    linkHoverOthersOpacity: PropTypes.number.isRequired,\n    linkContract: PropTypes.number.isRequired,\n    linkBlendMode: blendModePropType.isRequired,\n    enableLinkGradient: PropTypes.bool.isRequired,\n\n    enableLabels: PropTypes.bool.isRequired,\n    labelPosition: PropTypes.oneOf(['inside', 'outside']).isRequired,\n    labelPadding: PropTypes.number.isRequired,\n    labelOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    labelTextColor: inheritedColorPropType,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n    nodeTooltip: PropTypes.func,\n    linkTooltip: PropTypes.func,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['links', 'nodes', 'labels', 'legends']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    role: PropTypes.string.isRequired,\n\n    ...motionPropTypes,\n}\n\nexport const SankeyDefaultProps = {\n    layout: 'horizontal',\n    align: 'center',\n    sort: 'auto',\n\n    colors: { scheme: 'nivo' },\n\n    nodeOpacity: 0.75,\n    nodeHoverOpacity: 1,\n    nodeHoverOthersOpacity: 0.15,\n    nodeThickness: 12,\n    nodeSpacing: 12,\n    nodeInnerPadding: 0,\n    nodeBorderWidth: 1,\n    nodeBorderColor: { from: 'color', modifiers: [['darker', 0.5]] },\n\n    linkOpacity: 0.25,\n    linkHoverOpacity: 0.6,\n    linkHoverOthersOpacity: 0.15,\n    linkContract: 0,\n    linkBlendMode: 'multiply',\n    enableLinkGradient: false,\n\n    enableLabels: true,\n    label: 'id',\n    labelPosition: 'inside',\n    labelPadding: 9,\n    labelOrientation: 'horizontal',\n    labelTextColor: { from: 'color', modifiers: [['darker', 0.8]] },\n\n    isInteractive: true,\n    onClick: noop,\n\n    legends: [],\n\n    layers: ['links', 'nodes', 'labels', 'legends'],\n\n    role: 'img',\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useMemo } from 'react'\nimport { cloneDeep } from 'lodash'\nimport { sankey as d3Sankey } from 'd3-sankey'\nimport { useTheme, getLabelGenerator } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { sankeyAlignmentFromProp } from './props'\n\nconst getId = d => d.id\n\nexport const computeNodeAndLinks = ({\n    data: _data,\n    layout,\n    alignFunction,\n    sortFunction,\n    linkSortMode,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    width,\n    height,\n    getColor,\n    getLabel,\n}) => {\n    const sankey = d3Sankey()\n        .nodeAlign(alignFunction)\n        .nodeSort(sortFunction)\n        .linkSort(linkSortMode)\n        .nodeWidth(nodeThickness)\n        .nodePadding(nodeSpacing)\n        .size(layout === 'horizontal' ? [width, height] : [height, width])\n        .nodeId(getId)\n\n    // deep clone is required as the sankey diagram mutates data\n    // we need a different identity for correct updates\n    const data = cloneDeep(_data)\n    sankey(data)\n\n    data.nodes.forEach(node => {\n        node.color = getColor(node)\n        node.label = getLabel(node)\n        if (layout === 'horizontal') {\n            node.x = node.x0 + nodeInnerPadding\n            node.y = node.y0\n            node.width = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n            node.height = Math.max(node.y1 - node.y0, 0)\n        } else {\n            node.x = node.y0\n            node.y = node.x0 + nodeInnerPadding\n            node.width = Math.max(node.y1 - node.y0, 0)\n            node.height = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n\n            const oldX0 = node.x0\n            const oldX1 = node.x1\n\n            node.x0 = node.y0\n            node.x1 = node.y1\n            node.y0 = oldX0\n            node.y1 = oldX1\n        }\n    })\n\n    data.links.forEach(link => {\n        link.color = link.source.color\n        link.pos0 = link.y0\n        link.pos1 = link.y1\n        link.thickness = link.width\n        delete link.y0\n        delete link.y1\n        delete link.width\n    })\n\n    return data\n}\n\nexport const useSankey = ({\n    data,\n    layout,\n    width,\n    height,\n    sort,\n    align,\n    colors,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    nodeBorderColor,\n    label,\n    labelFormat,\n    labelTextColor,\n}) => {\n    const [currentNode, setCurrentNode] = useState(null)\n    const [currentLink, setCurrentLink] = useState(null)\n\n    const sortFunction = useMemo(() => {\n        if (sort === 'auto') return undefined\n        if (sort === 'input') return null\n        if (sort === 'ascending') return (a, b) => a.value - b.value\n        if (sort === 'descending') return (a, b) => b.value - a.value\n\n        return sort\n    }, [sort])\n\n    // If \"input\" sorting is used, apply this setting to links, too.\n    // (In d3, `null` means input sorting and `undefined` is the default)\n    const linkSortMode = sort === 'input' ? null : undefined\n\n    const alignFunction = useMemo(() => sankeyAlignmentFromProp(align), [align])\n\n    const theme = useTheme()\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getNodeBorderColor = useInheritedColor(nodeBorderColor, theme)\n\n    const getLabel = useMemo(() => getLabelGenerator(label, labelFormat), [label, labelFormat])\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n\n    const { nodes, links } = useMemo(\n        () =>\n            computeNodeAndLinks({\n                data,\n                layout,\n                alignFunction,\n                sortFunction,\n                linkSortMode,\n                nodeThickness,\n                nodeSpacing,\n                nodeInnerPadding,\n                width,\n                height,\n                getColor,\n                getLabel,\n            }),\n        [\n            data,\n            layout,\n            alignFunction,\n            sortFunction,\n            linkSortMode,\n            nodeThickness,\n            nodeSpacing,\n            nodeInnerPadding,\n            width,\n            height,\n            getColor,\n            getLabel,\n        ]\n    )\n\n    const legendData = useMemo(\n        () =>\n            nodes.map(node => ({\n                id: node.id,\n                label: node.label,\n                color: node.color,\n            })),\n        [nodes]\n    )\n\n    return {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated, to } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { BasicTooltip, useTooltip } from '@nivo/tooltip'\n\nconst SankeyNodesItem = ({\n    node,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    setCurrent,\n    isInteractive,\n    onClick,\n    tooltip,\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        width,\n        height,\n        opacity,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipContent = useMemo(() => {\n        if (tooltip) {\n            return <BasicTooltip id={tooltip(node)} enableChip={false} />\n        }\n\n        return <BasicTooltip id={node.label} enableChip={true} color={node.color} />\n    }, [tooltip, node])\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(node)\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [setCurrent, node, showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick(node, event)\n        },\n        [onClick, node]\n    )\n\n    return (\n        <animated.rect\n            x={animatedProps.x}\n            y={animatedProps.y}\n            width={to(animatedProps.width, v => Math.max(v, 0))}\n            height={to(animatedProps.height, v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            fillOpacity={animatedProps.opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            strokeOpacity={opacity}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nSankeyNodesItem.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(SankeyNodesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SankeyNodesItem from './SankeyNodesItem'\n\nconst SankeyNodes = ({\n    nodes,\n    nodeOpacity,\n    nodeHoverOpacity,\n    nodeHoverOthersOpacity,\n    nodeBorderWidth,\n    getNodeBorderColor,\n    setCurrentNode,\n    currentNode,\n    currentLink,\n    isCurrentNode,\n    isInteractive,\n    onClick,\n    tooltip,\n}) => {\n    const getOpacity = node => {\n        if (!currentNode && !currentLink) return nodeOpacity\n        if (isCurrentNode(node)) return nodeHoverOpacity\n        return nodeHoverOthersOpacity\n    }\n\n    return nodes.map(node => (\n        <SankeyNodesItem\n            key={node.id}\n            node={node}\n            x={node.x}\n            y={node.y}\n            width={node.width}\n            height={node.height}\n            color={node.color}\n            opacity={getOpacity(node)}\n            borderWidth={nodeBorderWidth}\n            borderColor={getNodeBorderColor(node)}\n            setCurrent={setCurrentNode}\n            isInteractive={isInteractive}\n            onClick={onClick}\n            tooltip={tooltip}\n        />\n    ))\n}\n\nSankeyNodes.propTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            width: PropTypes.number.isRequired,\n            height: PropTypes.number.isRequired,\n            color: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    nodeOpacity: PropTypes.number.isRequired,\n    nodeHoverOpacity: PropTypes.number.isRequired,\n    nodeHoverOthersOpacity: PropTypes.number.isRequired,\n    nodeBorderWidth: PropTypes.number.isRequired,\n    getNodeBorderColor: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n    setCurrentNode: PropTypes.func.isRequired,\n    currentNode: PropTypes.object,\n    currentLink: PropTypes.object,\n    isCurrentNode: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst SankeyLinkGradient = memo(({ id, layout, startColor, endColor }) => {\n    const gradientProps = {}\n    if (layout === 'horizontal') {\n        gradientProps.x1 = '0%'\n        gradientProps.x2 = '100%'\n        gradientProps.y1 = '0%'\n        gradientProps.y2 = '0%'\n    } else {\n        gradientProps.x1 = '0%'\n        gradientProps.x2 = '0%'\n        gradientProps.y1 = '0%'\n        gradientProps.y2 = '100%'\n    }\n\n    return (\n        <linearGradient id={id} spreadMethod=\"pad\" {...gradientProps}>\n            <stop offset=\"0%\" stopColor={startColor} />\n            <stop offset=\"100%\" stopColor={endColor} />\n        </linearGradient>\n    )\n})\n\nSankeyLinkGradient.propTypes = {\n    id: PropTypes.string.isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    startColor: PropTypes.string.isRequired,\n    endColor: PropTypes.string.isRequired,\n}\n\nSankeyLinkGradient.displayName = 'SankeyLinkGradient'\n\nexport default SankeyLinkGradient\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { blendModePropType, useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { BasicTooltip, Chip, useTooltip } from '@nivo/tooltip'\nimport SankeyLinkGradient from './SankeyLinkGradient'\n\nconst tooltipStyles = {\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    sourceChip: {\n        marginRight: 7,\n    },\n    targetChip: {\n        marginLeft: 7,\n        marginRight: 7,\n    },\n}\n\nconst TooltipContent = ({ link, format }) => (\n    <span style={tooltipStyles.container}>\n        <Chip color={link.source.color} style={tooltipStyles.sourceChip} />\n        <strong>{link.source.label}</strong>\n        {' > '}\n        <strong>{link.target.label}</strong>\n        <Chip color={link.target.color} style={tooltipStyles.targetChip} />\n        <strong>{format ? format(link.value) : link.value}</strong>\n    </span>\n)\n\nTooltipContent.propTypes = {\n    link: PropTypes.shape({\n        source: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        target: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        color: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n}\n\nconst SankeyLinksItem = ({\n    link,\n    layout,\n    path,\n    color,\n    opacity,\n    blendMode,\n    enableGradient,\n    setCurrent,\n    tooltip,\n    tooltipFormat,\n    isInteractive,\n    onClick,\n}) => {\n    const linkId = `${link.source.id}.${link.target.id}`\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipContent = useMemo(() => {\n        if (tooltip) {\n            return <BasicTooltip id={tooltip(link)} enableChip={false} />\n        }\n\n        return <BasicTooltip id={<TooltipContent format={tooltipFormat} link={link} />} />\n    }, [tooltip, tooltipFormat, link])\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(link)\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [setCurrent, link, showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick(link, event)\n        },\n        [onClick, link]\n    )\n\n    return (\n        <>\n            {enableGradient && (\n                <SankeyLinkGradient\n                    id={linkId}\n                    layout={layout}\n                    startColor={link.startColor || link.source.color}\n                    endColor={link.endColor || link.target.color}\n                />\n            )}\n            <animated.path\n                fill={enableGradient ? `url(\"#${encodeURI(linkId)}\")` : animatedProps.color}\n                d={animatedPath}\n                fillOpacity={animatedProps.opacity}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                style={{ mixBlendMode: blendMode }}\n            />\n        </>\n    )\n}\n\nSankeyLinksItem.propTypes = {\n    link: PropTypes.shape({\n        source: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        target: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        color: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n        startColor: PropTypes.string,\n        endColor: PropTypes.string,\n    }).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    path: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n    enableGradient: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n}\n\nexport default memo(SankeyLinksItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { blendModePropType } from '@nivo/core'\nimport SankeyLinksItem from './SankeyLinksItem'\nimport { sankeyLinkHorizontal, sankeyLinkVertical } from './links'\n\nconst SankeyLinks = ({\n    links,\n    layout,\n    linkOpacity,\n    linkHoverOpacity,\n    linkHoverOthersOpacity,\n    linkContract,\n    linkBlendMode,\n    enableLinkGradient,\n    setCurrentLink,\n    currentNode,\n    currentLink,\n    isCurrentLink,\n    isInteractive,\n    onClick,\n    tooltipFormat,\n    tooltip,\n}) => {\n    const getOpacity = link => {\n        if (!currentNode && !currentLink) return linkOpacity\n        if (isCurrentLink(link)) return linkHoverOpacity\n        return linkHoverOthersOpacity\n    }\n\n    const getLinkPath = layout === 'horizontal' ? sankeyLinkHorizontal() : sankeyLinkVertical()\n\n    return links.map(link => (\n        <SankeyLinksItem\n            key={`${link.source.id}.${link.target.id}`}\n            link={link}\n            layout={layout}\n            path={getLinkPath(link, linkContract)}\n            color={link.color}\n            opacity={getOpacity(link)}\n            blendMode={linkBlendMode}\n            enableGradient={enableLinkGradient}\n            setCurrent={setCurrentLink}\n            isInteractive={isInteractive}\n            onClick={onClick}\n            tooltip={tooltip}\n            tooltipFormat={tooltipFormat}\n        />\n    ))\n}\n\nSankeyLinks.propTypes = {\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n                label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            }).isRequired,\n            target: PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n                label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            }).isRequired,\n            thickness: PropTypes.number.isRequired,\n            color: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    linkOpacity: PropTypes.number.isRequired,\n    linkHoverOpacity: PropTypes.number.isRequired,\n    linkHoverOthersOpacity: PropTypes.number.isRequired,\n    linkContract: PropTypes.number.isRequired,\n    linkBlendMode: blendModePropType.isRequired,\n    enableLinkGradient: PropTypes.bool.isRequired,\n    tooltip: PropTypes.func,\n    setCurrentLink: PropTypes.func.isRequired,\n    currentLink: PropTypes.object,\n    isCurrentLink: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { line, curveMonotoneX, curveMonotoneY } from 'd3-shape'\n\nexport const sankeyLinkHorizontal = () => {\n    const lineGenerator = line().curve(curveMonotoneX)\n\n    return (n, contract) => {\n        const thickness = Math.max(1, n.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = n.target.x0 - n.source.x1\n        const padLength = linkLength * 0.12\n\n        const dots = [\n            [n.source.x1, n.pos0 - halfThickness],\n            [n.source.x1 + padLength, n.pos0 - halfThickness],\n            [n.target.x0 - padLength, n.pos1 - halfThickness],\n            [n.target.x0, n.pos1 - halfThickness],\n            [n.target.x0, n.pos1 + halfThickness],\n            [n.target.x0 - padLength, n.pos1 + halfThickness],\n            [n.source.x1 + padLength, n.pos0 + halfThickness],\n            [n.source.x1, n.pos0 + halfThickness],\n            [n.source.x1, n.pos0 - halfThickness],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n\nexport const sankeyLinkVertical = () => {\n    const lineGenerator = line().curve(curveMonotoneY)\n\n    return (n, contract) => {\n        const thickness = Math.max(1, n.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = n.target.y0 - n.source.y1\n        const padLength = linkLength * 0.12\n\n        const dots = [\n            [n.pos0 + halfThickness, n.source.y1],\n            [n.pos0 + halfThickness, n.source.y1 + padLength],\n            [n.pos1 + halfThickness, n.target.y0 - padLength],\n            [n.pos1 + halfThickness, n.target.y0],\n            [n.pos1 - halfThickness, n.target.y0],\n            [n.pos1 - halfThickness, n.target.y0 - padLength],\n            [n.pos0 - halfThickness, n.source.y1 + padLength],\n            [n.pos0 - halfThickness, n.source.y1],\n            [n.pos0 + halfThickness, n.source.y1],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\n\nconst SankeyLabels = ({\n    nodes,\n    layout,\n    width,\n    height,\n    labelPosition,\n    labelPadding,\n    labelOrientation,\n    getLabelTextColor,\n}) => {\n    const theme = useTheme()\n\n    const labelRotation = labelOrientation === 'vertical' ? -90 : 0\n    const labels = nodes.map(node => {\n        let x\n        let y\n        let textAnchor\n        if (layout === 'horizontal') {\n            y = node.y + node.height / 2\n            if (node.x < width / 2) {\n                if (labelPosition === 'inside') {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                } else {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                } else {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                }\n            }\n        } else if (layout === 'vertical') {\n            x = node.x + node.width / 2\n            if (node.y < height / 2) {\n                if (labelPosition === 'inside') {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                } else {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                } else {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                }\n            }\n        }\n\n        return {\n            id: node.id,\n            label: node.label,\n            x,\n            y,\n            textAnchor,\n            color: getLabelTextColor(node),\n        }\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y}) rotate(${labelRotation})`,\n            color: label.color,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                dominantBaseline=\"central\"\n                textAnchor={label.textAnchor}\n                transform={animatedProps.transform}\n                style={{\n                    ...theme.labels.text,\n                    fill: animatedProps.color,\n                    pointerEvents: 'none',\n                }}\n            >\n                {label.label}\n            </animated.text>\n        )\n    })\n}\n\nSankeyLabels.propTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            x1: PropTypes.number.isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            width: PropTypes.number.isRequired,\n            height: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    labelPosition: PropTypes.oneOf(['inside', 'outside']).isRequired,\n    labelPadding: PropTypes.number.isRequired,\n    labelOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    getLabelTextColor: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment } from 'react'\nimport { uniq } from 'lodash'\nimport { SvgWrapper, useDimensions, withContainer } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { SankeyDefaultProps, SankeyPropTypes } from './props'\nimport { useSankey } from './hooks'\nimport SankeyNodes from './SankeyNodes'\nimport SankeyLinks from './SankeyLinks'\nimport SankeyLabels from './SankeyLabels'\n\nconst Sankey = ({\n    data,\n    layout,\n    sort,\n    align,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    nodeBorderColor,\n    nodeOpacity,\n    nodeHoverOpacity,\n    nodeHoverOthersOpacity,\n    nodeBorderWidth,\n    linkOpacity,\n    linkHoverOpacity,\n    linkHoverOthersOpacity,\n    linkContract,\n    linkBlendMode,\n    enableLinkGradient,\n    enableLabels,\n    labelPosition,\n    labelPadding,\n    labelOrientation,\n    label,\n    labelFormat,\n    labelTextColor,\n    nodeTooltip,\n    linkTooltip,\n    isInteractive,\n    onClick,\n    tooltipFormat,\n    legends,\n    layers,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    } = useSankey({\n        data,\n        layout,\n        width: innerWidth,\n        height: innerHeight,\n        sort,\n        align,\n        colors,\n        nodeThickness,\n        nodeSpacing,\n        nodeInnerPadding,\n        nodeBorderColor,\n        label,\n        labelFormat,\n        labelTextColor,\n    })\n\n    let isCurrentNode = () => false\n    let isCurrentLink = () => false\n\n    if (currentLink) {\n        isCurrentNode = ({ id }) => id === currentLink.source.id || id === currentLink.target.id\n        isCurrentLink = ({ source, target }) =>\n            source.id === currentLink.source.id && target.id === currentLink.target.id\n    }\n\n    if (currentNode) {\n        let currentNodeIds = [currentNode.id]\n        links\n            .filter(\n                ({ source, target }) => source.id === currentNode.id || target.id === currentNode.id\n            )\n            .forEach(({ source, target }) => {\n                currentNodeIds.push(source.id)\n                currentNodeIds.push(target.id)\n            })\n\n        currentNodeIds = uniq(currentNodeIds)\n        isCurrentNode = ({ id }) => currentNodeIds.includes(id)\n        isCurrentLink = ({ source, target }) =>\n            source.id === currentNode.id || target.id === currentNode.id\n    }\n\n    const layerProps = {\n        links,\n        nodes,\n        margin,\n        width,\n        height,\n        outerWidth,\n        outerHeight,\n    }\n\n    const layerById = {\n        links: (\n            <SankeyLinks\n                key=\"links\"\n                links={links}\n                layout={layout}\n                linkContract={linkContract}\n                linkOpacity={linkOpacity}\n                linkHoverOpacity={linkHoverOpacity}\n                linkHoverOthersOpacity={linkHoverOthersOpacity}\n                linkBlendMode={linkBlendMode}\n                enableLinkGradient={enableLinkGradient}\n                setCurrentLink={setCurrentLink}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentLink={isCurrentLink}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={linkTooltip}\n                tooltipFormat={tooltipFormat}\n            />\n        ),\n        nodes: (\n            <SankeyNodes\n                key=\"nodes\"\n                nodes={nodes}\n                nodeOpacity={nodeOpacity}\n                nodeHoverOpacity={nodeHoverOpacity}\n                nodeHoverOthersOpacity={nodeHoverOthersOpacity}\n                nodeBorderWidth={nodeBorderWidth}\n                getNodeBorderColor={getNodeBorderColor}\n                setCurrentNode={setCurrentNode}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentNode={isCurrentNode}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={nodeTooltip}\n                tooltipFormat={tooltipFormat}\n            />\n        ),\n        labels: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legendData}\n            />\n        )),\n    }\n\n    if (enableLabels) {\n        layerById.labels = (\n            <SankeyLabels\n                key=\"labels\"\n                nodes={nodes}\n                layout={layout}\n                width={innerWidth}\n                height={innerHeight}\n                labelPosition={labelPosition}\n                labelPadding={labelPadding}\n                labelOrientation={labelOrientation}\n                getLabelTextColor={getLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{layer(layerProps)}</Fragment>\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nSankey.propTypes = SankeyPropTypes\n\nconst WrappedSankey = withContainer(Sankey)\nWrappedSankey.defaultProps = SankeyDefaultProps\n\nexport default WrappedSankey\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Sankey from './Sankey'\n\nconst ResponsiveSankey = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Sankey width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveSankey\n"],"sourceRoot":""}