{"version":3,"file":"component---src-pages-area-bump-index-js-112743b2e99a5c590a60.js","mappings":"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","sources":["webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/./src/data/components/area-bump/props.ts","webpack://nivo-website/./src/data/components/area-bump/mapper.js","webpack://nivo-website/./src/pages/area-bump/index.js","webpack://nivo-website/../node_modules/lodash/_arrayEach.js","webpack://nivo-website/../node_modules/lodash/_baseAssign.js","webpack://nivo-website/../node_modules/lodash/_baseAssignIn.js","webpack://nivo-website/../node_modules/lodash/_baseClone.js","webpack://nivo-website/../node_modules/lodash/_baseIsMap.js","webpack://nivo-website/../node_modules/lodash/_baseIsSet.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseUnset.js","webpack://nivo-website/../node_modules/lodash/_cloneDataView.js","webpack://nivo-website/../node_modules/lodash/_cloneRegExp.js","webpack://nivo-website/../node_modules/lodash/_cloneSymbol.js","webpack://nivo-website/../node_modules/lodash/_copySymbols.js","webpack://nivo-website/../node_modules/lodash/_copySymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_customOmitClone.js","webpack://nivo-website/../node_modules/lodash/_getAllKeysIn.js","webpack://nivo-website/../node_modules/lodash/_getSymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_initCloneArray.js","webpack://nivo-website/../node_modules/lodash/_initCloneByTag.js","webpack://nivo-website/../node_modules/lodash/_parent.js","webpack://nivo-website/../node_modules/lodash/isMap.js","webpack://nivo-website/../node_modules/lodash/isSet.js","webpack://nivo-website/../node_modules/lodash/omit.js","webpack://nivo-website/../node_modules/lodash/random.js"],"sourcesContent":["import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping: any, { exclude = [] } = {}) => (\n    settings: any,\n    options: any = {}\n) => {\n    const overrides: any = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return (d3Format(format) as unknown) as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","import { AreaBumpDefaultProps as defaults } from '@nivo/bump'\nimport {\n    themeProperty,\n    axesProperties,\n    defsProperties,\n    groupProperties,\n    motionProperties,\n} from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:   string\n                data: Array<{\n                    x: number | string\n                    y: number\n                }>\n            }>\n            \\`\\`\\`\n            This component assumes that every serie contains all\n            x values sorted the same way they should appear on the chart.\n        `,\n        required: true,\n        type: 'object[]',\n        flavors: ['svg'],\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive component.\n            Also note that width does not include labels/axes,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        flavors: ['svg'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive component.\n            Also note that height does not include labels/axes,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        flavors: ['svg'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        group: 'Base',\n        type: 'object',\n        required: false,\n        help: 'Chart margin.',\n        flavors: ['svg'],\n        controlType: 'margin',\n    },\n    {\n        key: 'align',\n        group: 'Base',\n        help: `Chart alignment.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.align,\n        flavors: ['svg'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: [\n                { label: 'start', value: 'start' },\n                { label: 'middle', value: 'middle' },\n                { label: 'end', value: 'end' },\n            ],\n        },\n    },\n    {\n        key: 'interpolation',\n        group: 'Base',\n        type: 'string',\n        help: `Area interpolation.`,\n        required: false,\n        defaultValue: defaults.interpolation,\n        flavors: ['svg'],\n        controlType: 'radio',\n        controlOptions: {\n            choices: [\n                { label: 'smooth', value: 'smooth' },\n                { label: 'linear', value: 'linear' },\n            ],\n        },\n    },\n    {\n        key: 'spacing',\n        group: 'Base',\n        type: 'number',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaults.spacing,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'xPadding',\n        group: 'Base',\n        type: 'number',\n        defaultValue: defaults.xPadding,\n        flavors: ['svg'],\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    themeProperty(['svg']),\n    {\n        key: 'colors',\n        group: 'Style',\n        type: 'string | Function | string[]',\n        help: 'Defines color range.',\n        required: false,\n        defaultValue: defaults.colors,\n        flavors: ['svg'],\n        controlType: 'ordinalColors',\n    },\n    {\n        key: 'blendMode',\n        group: 'Style',\n        type: 'string',\n        help: 'Defines CSS mix-blend-mode property.',\n        description: `\n            Defines CSS \\`mix-blend-mode\\` property, see\n            [MDN documentation](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode).\n        `,\n        required: false,\n        defaultValue: defaults.blendMode,\n        flavors: ['svg'],\n        controlType: 'blendMode',\n    },\n    {\n        key: 'fillOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area fill opacity.',\n        defaultValue: defaults.fillOpacity,\n        flavors: ['svg'],\n        controlType: 'opacity',\n    },\n    {\n        key: 'activeFillOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area fill opacity for active series.',\n        defaultValue: defaults.activeFillOpacity,\n        flavors: ['svg'],\n        controlType: 'opacity',\n    },\n    {\n        key: 'inactiveFillOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area fill opacity for inactive series.',\n        defaultValue: defaults.inactiveFillOpacity,\n        flavors: ['svg'],\n        controlType: 'opacity',\n    },\n    {\n        key: 'borderWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border width.',\n        defaultValue: defaults.borderWidth,\n        flavors: ['svg'],\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'activeBorderWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border width for active series.',\n        defaultValue: defaults.activeBorderWidth,\n        flavors: ['svg'],\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'inactiveBorderWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border width for inactive series.',\n        defaultValue: defaults.inactiveBorderWidth,\n        flavors: ['svg'],\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'borderColor',\n        group: 'Style',\n        type: 'string | object | Function',\n        required: false,\n        help: 'Method to compute area border color.',\n        defaultValue: defaults.borderColor,\n        flavors: ['svg'],\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'borderOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border opacity.',\n        flavors: ['svg'],\n        defaultValue: defaults.borderOpacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'activeBorderOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border opacity for active series.',\n        defaultValue: defaults.activeBorderOpacity,\n        flavors: ['svg'],\n        controlType: 'opacity',\n    },\n    {\n        key: 'inactiveBorderOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border opacity for inactive series.',\n        defaultValue: defaults.inactiveBorderOpacity,\n        flavors: ['svg'],\n        controlType: 'opacity',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'startLabel',\n        group: 'Labels',\n        type: 'false | string | (serie: Serie) => string',\n        required: false,\n        help: 'Define area start label',\n        defaultValue: defaults.startLabel,\n        flavors: ['svg'],\n    },\n    {\n        key: 'startLabelPadding',\n        group: 'Labels',\n        type: 'number',\n        required: false,\n        help: 'Define area start label padding',\n        defaultValue: defaults.startLabelPadding,\n        flavors: ['svg'],\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'startLabelTextColor',\n        group: 'Labels',\n        type: 'string | object | Function',\n        required: false,\n        help: 'Method to compute start label text color.',\n        flavors: ['svg'],\n        defaultValue: defaults.startLabelTextColor,\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'endLabel',\n        group: 'Labels',\n        type: 'false | string | (serie: Serie) => string',\n        required: false,\n        help: 'Define area end label',\n        defaultValue: defaults.endLabel,\n        flavors: ['svg'],\n    },\n    {\n        key: 'endLabelPadding',\n        group: 'Labels',\n        type: 'number',\n        required: false,\n        help: 'Define area end label padding',\n        defaultValue: defaults.endLabelPadding,\n        flavors: ['svg'],\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'endLabelTextColor',\n        help: 'Method to compute end label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.endLabelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n        flavors: ['svg'],\n    },\n    {\n        key: 'enableGridX',\n        group: 'Grid & Axes',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n        flavors: ['svg'],\n    },\n    ...axesProperties({ exclude: ['right', 'left'] }),\n    {\n        key: 'isInteractive',\n        group: 'Interactivity',\n        type: 'boolean',\n        help: 'Enable/disable interactivity.',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        flavors: ['svg'],\n    },\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onMouseEnter handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onMouseMove handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onMouseLeave handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onClick handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        flavors: ['svg'],\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the series's data.\n        `,\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import { settingsMapper, mapAxis } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        axisTop: mapAxis('top'),\n        axisBottom: mapAxis('bottom'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisBottom'],\n    }\n)\n","import React from 'react'\nimport range from 'lodash/range'\nimport random from 'lodash/random'\nimport { patternDotsDef, patternLinesDef } from '@nivo/core'\nimport { ResponsiveAreaBump, AreaBumpDefaultProps } from '@nivo/bump'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/area-bump/meta.yml'\nimport { groups } from '../../data/components/area-bump/props'\nimport mapper from '../../data/components/area-bump/mapper'\n\nconst serieIds = ['JavaScript', 'ReasonML', 'TypeScript', 'Elm', 'CoffeeScript']\nconst generateData = () => {\n    const years = range(2000, 2006)\n\n    const series = serieIds.map(id => ({\n        id,\n        data: years.map(year => ({\n            x: year,\n            y: random(10, 30),\n        })),\n    }))\n\n    return series\n}\n\nconst initialProperties = {\n    margin: {\n        top: 40,\n        right: 100,\n        bottom: 40,\n        left: 100,\n    },\n\n    align: AreaBumpDefaultProps.align,\n    interpolation: AreaBumpDefaultProps.interpolation,\n    spacing: 8,\n    xPadding: AreaBumpDefaultProps.xPadding,\n\n    colors: { scheme: 'nivo' },\n    blendMode: 'multiply',\n    fillOpacity: AreaBumpDefaultProps.fillOpacity,\n    activeFillOpacity: AreaBumpDefaultProps.activeFillOpacity,\n    inactiveFillOpacity: AreaBumpDefaultProps.inactiveFillOpacity,\n    defs: [\n        patternDotsDef('dots', {\n            background: 'inherit',\n            color: '#38bcb2',\n            size: 4,\n            padding: 1,\n            stagger: true,\n        }),\n        patternLinesDef('lines', {\n            background: 'inherit',\n            color: '#eed312',\n            rotation: -45,\n            lineWidth: 6,\n            spacing: 10,\n        }),\n    ],\n    fill: [\n        { match: { id: 'CoffeeScript' }, id: 'dots' },\n        { match: { id: 'TypeScript' }, id: 'lines' },\n    ],\n    borderWidth: AreaBumpDefaultProps.borderWidth,\n    activeBorderWidth: AreaBumpDefaultProps.activeBorderWidth,\n    inactiveBorderWidth: AreaBumpDefaultProps.inactiveBorderWidth,\n    borderColor: AreaBumpDefaultProps.borderColor,\n    borderOpacity: AreaBumpDefaultProps.borderOpacity,\n    activeBorderOpacity: AreaBumpDefaultProps.activeBorderOpacity,\n    inactiveBorderOpacity: AreaBumpDefaultProps.inactiveBorderOpacity,\n\n    startLabel: 'id',\n    startLabelPadding: AreaBumpDefaultProps.startLabelPadding,\n    startLabelTextColor: AreaBumpDefaultProps.startLabelTextColor,\n    endLabel: 'id',\n    endLabelPadding: AreaBumpDefaultProps.endLabelPadding,\n    endLabelTextColor: AreaBumpDefaultProps.endLabelTextColor,\n\n    enableGridX: AreaBumpDefaultProps.enableGridX,\n    axisTop: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: -36,\n    },\n    axisBottom: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: 32,\n    },\n\n    isInteractive: true,\n\n    animate: AreaBumpDefaultProps.animate,\n    motionConfig: AreaBumpDefaultProps.motionConfig,\n}\n\nconst Bump = () => {\n    return (\n        <ComponentTemplate\n            name=\"AreaBump\"\n            meta={meta.AreaBump}\n            icon=\"area-bump\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            defaultProperties={AreaBumpDefaultProps}\n            initialProperties={initialProperties}\n            propertiesMapper={mapper}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveAreaBump\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={serie =>\n                            logAction({\n                                type: 'click',\n                                label: `[serie] ${serie.id}`,\n                                color: serie.color,\n                                data: serie,\n                            })\n                        }\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Bump\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"names":["settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","key","omit","mapAxis","type","value","upperFirst","enable","mapFormat","format","enabled","undefined","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","getOwnPropertyDescriptors","defineProperties","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","d","x","y","ticks","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","isArray","Array","x1","x2","y1","y2","AxisTick","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","tick","initial","textTransform","from","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","lines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","ctx","Number","degreesToRadians","String","renderAxesToCanvas","renderGridLinesToCanvas","group","help","description","required","flavors","enableControlForFlavors","controlType","controlOptions","unit","min","max","step","defaultValue","defaults","choices","label","themeProperty","defsProperties","axesProperties","motionProperties","groups","groupProperties","axisTop","axisBottom","serieIds","generateData","years","range","map","id","data","year","random","initialProperties","margin","align","AreaBumpDefaultProps","interpolation","spacing","xPadding","colors","scheme","blendMode","fillOpacity","activeFillOpacity","inactiveFillOpacity","defs","patternDotsDef","background","color","size","padding","stagger","patternLinesDef","rotation","lineWidth","fill","match","borderWidth","activeBorderWidth","inactiveBorderWidth","borderColor","borderOpacity","activeBorderOpacity","inactiveBorderOpacity","startLabel","startLabelPadding","startLabelTextColor","endLabel","endLabelPadding","endLabelTextColor","enableGridX","isInteractive","motionConfig","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","logAction","serie","module","exports","array","iteratee","index","copyObject","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","stack","result","isDeep","isFlat","isFull","isArr","tag","isFunc","stacked","get","set","subValue","add","isObjectLike","nativeFloor","Math","floor","nativeRandom","lower","upper","castPath","last","parent","toKey","path","cloneArrayBuffer","dataView","buffer","constructor","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","prototype","symbolValueOf","valueOf","symbol","call","getSymbols","getSymbolsIn","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseGet","baseSlice","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","arrayMap","baseUnset","customOmitClone","flatRest","paths","CLONE_DEEP_FLAG","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","rand"],"sourceRoot":""}