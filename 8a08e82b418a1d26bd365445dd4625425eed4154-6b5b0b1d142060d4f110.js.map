{"version":3,"file":"8a08e82b418a1d26bd365445dd4625425eed4154-6b5b0b1d142060d4f110.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/./src/data/components/parallel-coordinates/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/../src/props.js","webpack://nivo-website/../src/hooks.js","webpack://nivo-website/../src/ParallelCoordinatesLineTooltip.js","webpack://nivo-website/../src/ParallelCoordinatesLine.js","webpack://nivo-website/../src/ParallelCoordinates.js","webpack://nivo-website/../src/ResponsiveParallelCoordinates.js","webpack://nivo-website/../src/ParallelCoordinatesCanvas.js","webpack://nivo-website/../src/ResponsiveParallelCoordinatesCanvas.js","webpack://nivo-website/./src/data/components/parallel-coordinates/mapper.js","webpack://nivo-website/./src/data/components/parallel-coordinates/variables.js","webpack://nivo-website/../node_modules/lodash/_arrayEach.js","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseAssign.js","webpack://nivo-website/../node_modules/lodash/_baseAssignIn.js","webpack://nivo-website/../node_modules/lodash/_baseClone.js","webpack://nivo-website/../node_modules/lodash/_baseIsMap.js","webpack://nivo-website/../node_modules/lodash/_baseIsSet.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseUnset.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_cloneDataView.js","webpack://nivo-website/../node_modules/lodash/_cloneRegExp.js","webpack://nivo-website/../node_modules/lodash/_cloneSymbol.js","webpack://nivo-website/../node_modules/lodash/_copySymbols.js","webpack://nivo-website/../node_modules/lodash/_copySymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_customOmitClone.js","webpack://nivo-website/../node_modules/lodash/_getAllKeysIn.js","webpack://nivo-website/../node_modules/lodash/_getSymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_initCloneArray.js","webpack://nivo-website/../node_modules/lodash/_initCloneByTag.js","webpack://nivo-website/../node_modules/lodash/_parent.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/isMap.js","webpack://nivo-website/../node_modules/lodash/isSet.js","webpack://nivo-website/../node_modules/lodash/omit.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import { lineCurvePropKeys } from '@nivo/core'\nimport { commonDefaultProps as defaults } from '@nivo/parallel-coordinates'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        type: 'Array<object | Array>',\n        required: true,\n    },\n    {\n        key: 'variables',\n        type: 'object[]',\n        help: 'Variables configuration.',\n        description: `\n            Variables configuration, define accessor (\\`key\\`)\n            and variable type. Type must be one of\n            \\`linear\\` or \\`point\\`, \\`linear\\`\n            variables are suitable for continuous numerical\n            data such as age or cost while\n            \\`point\\` variables are suitable for\n            discrete values such as gender.\n        `,\n        group: 'Variables',\n        controlType: 'array',\n        controlOptions: {\n            shouldCreate: false,\n            shouldRemove: false,\n            getItemTitle: (index, values) => `${values.key} (${values.type})`,\n            props: [\n                {\n                    key: 'key',\n                    help: 'Variable key, used to access to corresponding datum value.',\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'type',\n                    help: `Variable type, must be one of: 'linear', 'point'.`,\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Min value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Max value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 1000,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                // {\n                //     key: 'padding',\n                //     help: 'Outer padding (0~1).',\n                //     type: `number`,\n                //     controlType: 'range',\n                //     controlOptions: {\n                //         when: ({ type }) => type === 'point',\n                //         min: 0,\n                //         max: 1,\n                //         step: 0.01,\n                //     },\n                // },\n            ],\n        },\n    },\n    {\n        key: 'layout',\n        help: `Chart layout.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.layout,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: lineCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'axesPlan',\n        help: `Axes plan.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesPlan,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'foreground', value: 'foreground' },\n                { label: 'background', value: 'background' },\n            ],\n        },\n    },\n    {\n        key: 'axesTicksPosition',\n        help: `Axes ticks position.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesTicksPosition,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty(['svg', 'canvas']),\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'strokeWidth',\n        help: 'Lines stroke width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.strokeWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'lineOpacity',\n        help: 'Lines opacity.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.lineOpacity,\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    distance: number\n    source: string\n    target: string\n}\n\ntype ExtraNode = {\n    color: string\n    depth: number\n    id: string\n    radius: number\n}\n\nexport const generateNetworkData = ({\n    rootNodeRadius = 12,\n    minMidNodes = 6,\n    maxMidNodes = 16,\n    midNodeRadius = 8,\n    minLeaves = 4,\n    maxLeaves = 16,\n    leafRadius = 4,\n} = {}) => {\n    const rootNode = {\n        id: '0',\n        radius: rootNodeRadius,\n        depth: 0,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `${k + 1}`,\n        radius: midNodeRadius,\n        depth: 1,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: '0',\n            target: source.id,\n            distance: 50,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 70,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                radius: leafRadius,\n                depth: 2,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 30,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit?: number | null, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: Record<string, unknown> = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\n\nconst commonVariablePropTypes = {\n    key: PropTypes.string.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n}\n\nexport const commonPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.shape({\n                ...commonVariablePropTypes,\n                key: PropTypes.string.isRequired,\n                type: PropTypes.oneOf(['point']).isRequired,\n                padding: PropTypes.number,\n                values: PropTypes.arrayOf(\n                    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                ),\n                tickValues: PropTypes.arrayOf(\n                    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                ),\n            }),\n            PropTypes.shape({\n                ...commonVariablePropTypes,\n                type: PropTypes.oneOf(['linear']).isRequired,\n                min: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n                max: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n                tickValues: PropTypes.oneOfType([\n                    PropTypes.number,\n                    PropTypes.arrayOf(PropTypes.number),\n                ]),\n            }),\n        ])\n    ).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    curve: lineCurvePropType.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    lineOpacity: PropTypes.number.isRequired,\n    axesPlan: PropTypes.oneOf(['foreground', 'background']).isRequired,\n    axesTicksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    colors: ordinalColorsPropType.isRequired,\n}\n\nexport const svgPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const commonDefaultProps = {\n    layout: 'horizontal',\n    curve: 'linear',\n    colors: { scheme: 'yellow_orange_red' },\n    strokeWidth: 2,\n    lineOpacity: 0.35,\n    axesPlan: 'foreground',\n    axesTicksPosition: 'after',\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n","import { useMemo } from 'react'\nimport { line } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport { curveFromProp } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\n\nexport const computeParallelCoordinatesLayout = ({ width, height, data, variables, layout }) => {\n    const variablesScale = scalePoint()\n        .range(layout === 'horizontal' ? [0, width] : [height, 0])\n        .domain(variables.map(({ key }) => key))\n\n    const range = layout === 'horizontal' ? [height, 0] : [0, width]\n    const variablesWithScale = variables.map(variable => {\n        const allValues = new Set()\n        data.forEach(d => allValues.add(d[variable.key]))\n\n        let scale\n        if (variable.type === 'linear') {\n            const min =\n                variable.min !== undefined && variable.min !== 'auto'\n                    ? variable.min\n                    : Math.min(...Array.from(allValues))\n            const max =\n                variable.max !== undefined && variable.max !== 'auto'\n                    ? variable.max\n                    : Math.max(...Array.from(allValues))\n\n            scale = scaleLinear().rangeRound(range).domain([min, max])\n        }\n\n        if (variable.type === 'point') {\n            scale = scalePoint()\n                .range(range)\n                .domain(variable.values || allValues)\n\n            if (variable.padding !== undefined) {\n                scale.padding(variable.padding)\n            }\n        }\n\n        return {\n            ...variable,\n            scale,\n            values: Array.from(allValues),\n        }\n    })\n\n    const dataWithPoints = data.map((datum, index) => {\n        const points = variablesWithScale.map(variable => ({\n            x:\n                layout === 'horizontal'\n                    ? variablesScale(variable.key)\n                    : variable.scale(datum[variable.key]),\n            y:\n                layout === 'horizontal'\n                    ? variable.scale(datum[variable.key])\n                    : variablesScale(variable.key),\n        }))\n\n        return { index, ...datum, points }\n    })\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n    }\n}\n\nexport const computeAxisDensity = (variable, data) => {\n    let kernels\n    if (variable.type === 'point') {\n        kernels = data.reduce((acc, datum) => {\n            const value = datum[variable.key]\n            let kernel = acc.find(k => k.id === value)\n            if (kernel === undefined) {\n                kernel = { id: value, count: 0 }\n                acc.push(kernel)\n            }\n            kernel.count++\n\n            return acc\n        }, [])\n        kernels = variable.scale\n            .domain()\n            .map(d => kernels.find(k => k.id === d))\n            .filter(k => k !== undefined)\n    } else if (variable.type === 'linear') {\n        kernels = variable.scale.ticks(5).map((id, index, ticks) => {\n            if (index === 0) {\n                return {\n                    id,\n                    count: variable.values.filter(v => v <= id).length,\n                }\n            }\n\n            return {\n                id,\n                count: variable.values.filter(v => v > ticks[index - 1] && v <= id).length,\n            }\n        })\n    }\n\n    if (kernels !== undefined) {\n        const scale = scaleLinear()\n            .rangeRound([0, 60])\n            .domain([0, Math.max(...kernels.map(k => k.count))])\n\n        return kernels.map(k => ({\n            id: k.id,\n            position: variable.scale(k.id),\n            size: scale(k.count),\n        }))\n    }\n\n    return []\n}\n\nexport const useParallelCoordinates = ({\n    width,\n    height,\n    data,\n    variables,\n    layout,\n    colors,\n    curve,\n}) => {\n    const getLineColor = useOrdinalColorScale(colors, 'index')\n\n    const lineGenerator = useMemo(\n        () =>\n            line()\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n\n    const { variablesScale, variablesWithScale, dataWithPoints } = useMemo(\n        () =>\n            computeParallelCoordinatesLayout({\n                width,\n                height,\n                data,\n                variables,\n                layout,\n            }),\n        [width, height, data, variables, layout]\n    )\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        getLineColor,\n        lineGenerator,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TableTooltip } from '@nivo/tooltip'\n\nconst ParallelCoordinatesLineTooltip = ({ data, variables }) => {\n    return (\n        <TableTooltip\n            rows={variables.map(variable => [\n                variable.key,\n                <strong>{data[variable.key]}</strong>, // eslint-disable-line react/jsx-key\n            ])}\n        />\n    )\n}\n\nParallelCoordinatesLineTooltip.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(ParallelCoordinatesLineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport ParallelCoordinatesLineTooltip from './ParallelCoordinatesLineTooltip'\n\nconst ParallelCoordinatesLine = ({\n    data,\n    variables,\n    lineGenerator,\n    points,\n    strokeWidth,\n    color,\n    opacity,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(\n                <ParallelCoordinatesLineTooltip data={data} variables={variables} />,\n                event\n            )\n        },\n        [data, variables]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(lineGenerator(points))\n    const animatedProps = useSpring({\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            stroke={animatedProps.color}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            opacity={animatedProps.opacity}\n            fill=\"none\"\n            onMouseEnter={handleMouseHover}\n            onMouseMove={handleMouseHover}\n            onMouseLeave={hideTooltip}\n        />\n    )\n}\n\nParallelCoordinatesLine.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n}\n\nexport default memo(ParallelCoordinatesLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { SvgWrapper, useDimensions, withContainer } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { svgPropTypes, svgDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\nimport ParallelCoordinatesLine from './ParallelCoordinatesLine'\n\nconst ParallelCoordinates = ({\n    data,\n    variables,\n    layout,\n    width,\n    height,\n    margin: partialMargin,\n    axesPlan,\n    axesTicksPosition,\n    strokeWidth,\n    lineOpacity,\n    curve,\n    colors,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { variablesScale, variablesWithScale, dataWithPoints, lineGenerator, getLineColor } =\n        useParallelCoordinates({\n            width: innerWidth,\n            height: innerHeight,\n            data,\n            variables,\n            layout,\n            colors,\n            curve,\n        })\n\n    const axes = variablesWithScale.map(variable => (\n        <Axis\n            key={variable.key}\n            axis={layout === 'horizontal' ? 'y' : 'x'}\n            length={layout === 'horizontal' ? innerHeight : innerWidth}\n            x={layout === 'horizontal' ? variablesScale(variable.key) : 0}\n            y={layout === 'horizontal' ? 0 : variablesScale(variable.key)}\n            scale={variable.scale}\n            ticksPosition={variable.ticksPosition || axesTicksPosition}\n            tickValues={variable.tickValues}\n            tickSize={variable.tickSize}\n            tickPadding={variable.tickPadding}\n            tickRotation={variable.tickRotation}\n            format={variable.tickFormat}\n            legend={variable.legend}\n            legendPosition={variable.legendPosition}\n            legendOffset={variable.legendOffset}\n        />\n    ))\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {axesPlan === 'background' && axes}\n            {dataWithPoints.map(datum => (\n                <ParallelCoordinatesLine\n                    key={datum.index}\n                    data={datum}\n                    variables={variables}\n                    lineGenerator={lineGenerator}\n                    points={datum.points}\n                    strokeWidth={strokeWidth}\n                    opacity={lineOpacity}\n                    color={getLineColor(datum)}\n                />\n            ))}\n            {axesPlan === 'foreground' && axes}\n        </SvgWrapper>\n    )\n}\n\nParallelCoordinates.propTypes = svgPropTypes\n\nconst WrappedParallelCoordinates = withContainer(ParallelCoordinates)\nWrappedParallelCoordinates.defaultProps = svgDefaultProps\n\nexport default WrappedParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinates from './ParallelCoordinates'\n\nconst ResponsiveParallelCoordinates = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ParallelCoordinates width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDimensions, useTheme, withContainer } from '@nivo/core'\nimport { renderAxisToCanvas } from '@nivo/axes'\nimport { commonPropTypes, commonDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\n\nconst ParallelCoordinatesCanvas = ({\n    data,\n    layout,\n    variables,\n    width,\n    height,\n    margin: partialMargin,\n    curve,\n    colors,\n    lineOpacity,\n    strokeWidth,\n    axesTicksPosition,\n    pixelRatio,\n}) => {\n    const canvasEl = useRef(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { variablesScale, variablesWithScale, dataWithPoints, lineGenerator, getLineColor } =\n        useParallelCoordinates({\n            width: innerWidth,\n            height: innerHeight,\n            data,\n            variables,\n            layout,\n            colors,\n            curve,\n        })\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        lineGenerator.context(ctx)\n        dataWithPoints.forEach(datum => {\n            ctx.save()\n            ctx.globalAlpha = lineOpacity\n\n            ctx.beginPath()\n            lineGenerator(datum.points)\n            ctx.strokeStyle = getLineColor(datum)\n            ctx.lineWidth = strokeWidth\n            ctx.stroke()\n\n            ctx.restore()\n        })\n\n        variablesWithScale.map(variable => {\n            renderAxisToCanvas(ctx, {\n                axis: layout === 'horizontal' ? 'y' : 'x',\n                scale: variable.scale,\n                x: layout === 'horizontal' ? variablesScale(variable.key) : 0,\n                y: layout === 'horizontal' ? 0 : variablesScale(variable.key),\n                length: layout === 'horizontal' ? innerHeight : innerWidth,\n                ticksPosition: axesTicksPosition,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        lineGenerator,\n        getLineColor,\n        lineOpacity,\n        strokeWidth,\n        dataWithPoints,\n        variablesWithScale,\n        layout,\n        axesTicksPosition,\n        theme,\n        pixelRatio,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        />\n    )\n}\n\nParallelCoordinatesCanvas.propTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nconst WrappedParallelCoordinatesCanvas = withContainer(ParallelCoordinatesCanvas)\nWrappedParallelCoordinatesCanvas.defaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nexport default WrappedParallelCoordinatesCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinatesCanvas from './ParallelCoordinatesCanvas'\n\nconst ResponsiveParallelCoordinatesCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => (\n            <ParallelCoordinatesCanvas width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinatesCanvas\n","import { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({})\n","export default [\n    {\n        key: 'temp',\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'temperature',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'cost',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'cost',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'color',\n        type: 'point',\n        padding: 1,\n        values: ['red', 'yellow', 'green'],\n        legend: 'color',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'target',\n        type: 'point',\n        padding: 0,\n        values: ['A', 'B', 'C', 'D', 'E'],\n        legend: 'target',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'volume',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        legend: 'volume',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n]\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","line","data","i","d","buffer","n","length","defined0","lineStart","lineEnd","point","arguments","p","day","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","days","range","props","key","group","help","type","required","description","controlType","controlOptions","shouldCreate","shouldRemove","getItemTitle","index","values","disabled","when","disabledValue","defaultValue","min","max","defaults","choices","label","value","lineCurvePropKeys","enableControlForFlavors","unit","flavors","themeProperty","motionProperties","groups","groupProperties","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","computeCartesianTicks","translate","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","getScaleTicks","textProps","textPropsByEngine","position","centerScale","lineX","lineY","text","textX","textY","isRTL","document","dir","textAlign","align","center","textBaseline","baseline","top","bottom","left","right","ticks","map","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","Array","isArray","lines","memoizedAxisTick","memo","_value","onClick","textAnchor","animatedProps","theme","useTheme","useMemo","style","opacity","cursor","event","React","animated","g","transform","dominantBaseline","textTransform","memoizedAxis","renderTick","AxisTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","t","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","rotate","domain","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","isXAxis","Axis","GridLine","grid","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","ctx","_format","save","font","fontWeight","fontSize","fontFamily","strokeWidth","lineWidth","Number","lineCap","stroke","strokeStyle","beginPath","degreesToRadians","fill","fillStyle","fillText","String","restore","renderAxesToCanvas","renderGridLinesToCanvas","randColor","round","random","countryCodes","names","programmingLanguages","generateBulletData","id","title","subtitle","rangeCount","measureCount","markerCount","float","ranges","reduce","remaining","acc","measures","markers","generateChordData","size","minValue","maxValue","maxSize","selectedKeys","slice","matrix","generateNetworkData","rootNodeRadius","minMidNodes","maxMidNodes","midNodeRadius","minLeaves","maxLeaves","leafRadius","rootNode","radius","depth","color","nodes","k","links","extraNodes","push","source","target","distance","concat","generateParallelCoordinatesData","shuffle","availableNodes","name","getNodeTargets","currentPath","targets","filter","includes","join","targetId","getNodesTargets","targetsById","link","generateSankeyData","nodeCount","maxIterations","assign","node","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","categoryCount","groupIndex","price","datum","volume","categories","randomizeSwarmPlotData","previousData","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","language","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","types","country","find","generateSeries","ids","xKeys","generateDayCounts","to","timeDays","dayFormat","generateOrderedDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","commonVariablePropTypes","commonPropTypes","isRequired","variables","shape","padding","layout","lineCurvePropType","lineOpacity","axesPlan","axesTicksPosition","colors","ordinalColorsPropType","commonDefaultProps","svgPropTypes","role","scheme","motionConfig","svgDefaultProps","useParallelCoordinates","getLineColor","useOrdinalColorScale","lineGenerator","curveFromProp","variablesScale","scalePoint","variablesWithScale","allValues","Set","add","variable","scaleLinear","rangeRound","dataWithPoints","points","ParallelCoordinatesLineTooltip","TableTooltip","rows","ParallelCoordinatesLine","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","e","animatedPath","useAnimatedPath","strokeLinecap","onMouseEnter","onMouseMove","onMouseLeave","WrappedParallelCoordinates","withContainer","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","tickFormat","SvgWrapper","defaultProps","ResponsiveParallelCoordinates","ResponsiveWrapper","ParallelCoordinates","WrappedParallelCoordinatesCanvas","pixelRatio","canvasEl","useRef","useEffect","current","getContext","background","fillRect","globalAlpha","ref","window","devicePixelRatio","ResponsiveParallelCoordinatesCanvas","ParallelCoordinatesCanvas","module","exports","array","iteratee","copyArray","shuffleSelf","copyObject","object","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","stack","result","isDeep","isFlat","isFull","isArr","tag","isFunc","stacked","get","set","subValue","isObjectLike","nativeFloor","floor","nativeRandom","lower","upper","collection","castPath","last","parent","toKey","arrayMap","cloneArrayBuffer","dataView","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","symbolValueOf","valueOf","symbol","call","getSymbols","getSymbolsIn","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","getOwnPropertySymbols","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseGet","baseSlice","baseRandom","rand","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","baseUnset","customOmitClone","flatRest","paths","CLONE_DEEP_FLAG","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","baseValues"],"sourceRoot":""}