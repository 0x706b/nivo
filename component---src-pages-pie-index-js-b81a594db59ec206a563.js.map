{"version":3,"sources":["webpack:///./src/pages/pie/index.js","webpack:///../src/PieSlice.tsx","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/PieTooltip.tsx","webpack:///../src/props.ts","webpack:///../src/hooks.ts","webpack:///../src/RadialLabel.tsx","webpack:///../src/RadialLabels.tsx","webpack:///../src/SliceLabels.tsx","webpack:///../src/PieLegends.tsx","webpack:///../src/Pie.tsx","webpack:///../src/ResponsivePie.tsx","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/PieCanvas.tsx","webpack:///../src/ResponsivePieCanvas.tsx","webpack:///./src/data/components/pie/props.js","webpack:///./src/data/components/pie/mapper.js"],"names":["generateData","generateProgrammingLanguageStats","map","d","id","label","initialProperties","margin","top","right","bottom","left","valueFormat","format","enabled","startAngle","endAngle","sortByValue","innerRadius","padAngle","cornerRadius","fit","colors","scheme","borderWidth","borderColor","from","modifiers","enableRadialLabels","radialLabel","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","enableSliceLabels","sliceLabel","sliceLabelsRadiusOffset","sliceLabelsSkipAngle","sliceLabelsTextColor","isInteractive","tooltip","defs","fill","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","style","Pie","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","defaultProps","propertiesMapper","mapper","data","theme","logAction","handleLegendClick","legendItem","type","formattedValue","color","onClick","slice","legend","PieSlice","datum","path","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","handleTooltip","useCallback","event","createElement","handleMouseEnter","handleMouseMove","handleMouseLeave","handleClick","strokeWidth","stroke","undefined","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties","layers","enableChip","role","pixelRatio","globalThis","useNormalizedData","getId","useMemo","getValue","formatValue","useValueFormatter","getColor","getOrdinalColorScale","datumId","datumValue","normalizedDatum","usePieArcs","pie","innerPie","degreesToRadians","angle","Math","arc","index","angleDeg","radiansToDegrees","usePieArcGenerator","radius","d3Arc","usePieFromBox","width","height","innerRadiusRatio","dataWithArc","computedProps","centerX","centerY","computeArcBoundingBox","points","box","ratio","adjustedBox","boundingBox","debug","arcGenerator","usePieSliceLabels","enable","skipAngle","radiusOffset","textColor","useTheme","getTextColor","useInheritedColor","getLabel","getLabelGenerator","datumWithArc","midAngle","labelRadius","position","positionFromAngle","datumTextColor","usePieRadialLabels","textXOffset","linkOffset","linkDiagonalLength","linkHorizontalLength","linkColor","getLinkColor","absoluteAngleRadians","positionA","positionB","absoluteAngleDegrees","positionC","x","y","labelPosition","textAlign","text","align","line","lineGenerator","RadialLabel","linkStrokeWidth","transform","textAnchor","textPropsByEngine","dominantBaseline","RadialLabels","radialLabels","labelData","sliceStyle","pointerEvents","SliceLabels","labelAccessor","labels","PieLegends","containerWidth","containerHeight","withContainer","partialMargin","_borderColor","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","normalizedData","boundDefs","bindDefs","layerById","slices","sliceLabels","layerContext","usePieLayerContext","layer","ResponsivePie","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","toString","constructor","test","unsupportedIterableToArray","TypeError","nonIterableRest","canvasEl","useRef","getBorderColor","useEffect","ctx","point","drawRadialLabels","drawSliceLabels","renderLegendToCanvas","arcs","getArcFromMouse","getRelativeCursor","hoveredArc","getHoveredArc","handleMouseHover","ref","cursor","ResponsivePieCanvas","props","group","help","description","required","defaultValue","defaults","controlType","enableControlForFlavors","controlOptions","unit","min","max","step","themeProperty","defsProperties","choices","choice","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","alert","JSON","stringify","groupProperties","TooltipWrapper","styled","div","TooltipKey","span","TooltipValue","CustomTooltip","settingsMapper","mapFormat","values","container","background","patternDotsDef","size","padding","stagger","patternLinesDef","rotation","lineWidth","spacing","match","exclude"],"mappings":"yNAiBMA,EAAe,kBACjBC,aAAiC,EAFhB,GAEoCC,KAAI,SAAAC,GAAC,sBACtDC,GAAID,EAAEE,OACHF,OAGLG,EAAoB,CACtBC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAGVC,YAAa,CAAEC,OAAQ,GAAIC,SAAS,GAEpCC,WAAY,EACZC,SAAU,IACVC,aAAa,EACbC,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,KAAK,EAELC,OAAQ,CAAEC,OAAQ,QAElBC,YAAa,EACbC,YAAa,CACTC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3BC,oBAAoB,EACpBC,YAAa,KACbC,sBAAuB,GACvBC,wBAAyB,EACzBC,sBAAuB,UACvBC,uBAAwB,EACxBC,+BAAgC,GAChCC,iCAAkC,GAClCC,4BAA6B,EAC7BC,sBAAuB,CAAEX,KAAM,SAE/BY,mBAAmB,EACnBC,WAAY,iBACZC,wBAAyB,GACzBC,qBAAsB,GACtBC,qBAAsB,UAEtBC,eAAe,EACf,0BAA0B,EAC1BC,QAAS,KACT,0BAA0B,EAE1BC,KAAM,GACNC,KAAM,GAENC,QAAS,CACL,CACIC,OAAQ,SACRC,UAAW,MACXC,SAAS,EACTC,WAAY,EACZC,WAAY,GACZC,aAAc,EACdC,UAAW,IACXC,WAAY,GACZC,cAAe,OACfC,cAAe,gBACfC,YAAa,EACbC,WAAY,GACZC,YAAa,SACbC,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHP,cAAe,aA0DxBQ,UAlDH,WACR,OACI,kBAAC,IAAD,CACIC,KAAK,MACLC,KAAMA,IAAKF,IACXG,KAAK,MACLC,QAASF,IAAKE,QACdC,cAAc,MACdC,WAAYC,IACZjE,kBAAmBA,EACnBkE,kBAAmBC,IACnBC,iBAAkBC,IAClB3E,aAAcA,IAEb,SAACsE,EAAYM,EAAMC,EAAOC,GACvB,IASMC,EAAoB,SAAAC,GACtBF,EAAU,CACNG,KAAM,QACN5E,MAAM,YAAa2E,EAAW3E,MAAzB,KAAmC2E,EAAWE,eACnDC,MAAOH,EAAWG,MAClBP,KAAMI,KAId,OACI,kBAAC,IAAD,eACIJ,KAAMA,GACFN,EAFR,CAGIO,MAAOA,EACPO,QAvBe,SAAAC,GACnBP,EAAU,CACNG,KAAM,QACN5E,MAAM,SAAUgF,EAAMjF,GAAjB,KAAwBiF,EAAMH,eACnCC,MAAOE,EAAMF,MACbP,KAAMS,KAmBNtC,QAASuB,EAAWvB,QAAQ7C,KAAI,SAAAoF,GAAM,wBAC/BA,EAD+B,CAElCF,QAASL,e,sbC3HxBQ,EAAW,YAWQ,IAV5BC,EAU2B,EAV3BA,MACAC,EAS2B,EAT3BA,KACAjE,EAQ2B,EAR3BA,YACAC,EAO2B,EAP3BA,YACAkB,EAM2B,EAN3BA,cACAyC,EAK2B,EAL3BA,QACAM,EAI2B,EAJ3BA,aACAC,EAG2B,EAH3BA,YACAC,EAE2B,EAF3BA,aACAhD,EAC2B,EAD3BA,QAC2B,EACmBiD,cAAtCC,EADmB,uBACGC,EADH,cAGrBC,EAAgBC,uBAClB,SAAAC,GAAK,OAAIJ,EAAqBK,wBAAcvD,EAAS,CAAE4C,UAAlD,KACL,CAACM,EAAqB,EAF1B,IAKMM,EAAmBH,uBACrB,SAAAC,GACIR,WAAY,EAAZA,GACAM,OAEJ,CAACN,EAAa,EALlB,IAQMW,EAAkBJ,uBACpB,SAAAC,GACIP,WAAW,EAAXA,GACAK,OAEJ,CAACL,EAAY,EALjB,IAQMW,EAAmBL,uBACrB,SAAAC,GACIN,WAAY,EAAZA,GACAG,OAEJ,CAACH,EAAa,EALlB,IAQMW,EAAcN,uBAChB,SAAAC,GACId,WAAO,EAAPA,KAEJ,CAACA,EAJL,IAOA,OACI,0BACIjF,EADJ,EAEI2C,KAAM0C,QAAcA,EAFxB,MAGIgB,YAHJ,EAIIC,OAJJ,EAKIf,aAAc/C,EAAa,OAL/B,EAMIgD,YAAahD,EAAa,OAN9B,EAOIiD,aAAcjD,EAAa,OAP/B,EAQIyC,QAASzC,EAAa,OAAiB+D,KC7EpC,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTMM,CAA6BV,EAAQC,GAGlD,GAAIK,OAAOK,sBAAuB,CAChC,IAAIC,EAAmBN,OAAOK,sBAAsBX,GAEpD,IAAKG,EAAI,EAAGA,EAAIS,EAAiBJ,OAAQL,IACvCD,EAAMU,EAAiBT,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOO,UAAUC,qBAAqBC,KAAKf,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,EEjBM,SAASY,EAAgBC,EAAKf,EAAKgB,GAYhD,OAXIhB,KAAOe,EACTX,OAAOa,eAAeF,EAAKf,EAAK,CAC9BgB,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIf,GAAOgB,EAGND,ECVT,SAASM,EAAQC,EAAQC,GACvB,IAAIlB,EAAOD,OAAOC,KAAKiB,GAEvB,GAAIlB,OAAOK,sBAAuB,CAChC,IAAIe,EAAUpB,OAAOK,sBAAsBa,GACvCC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOtB,OAAOuB,yBAAyBL,EAAQI,GAAKR,eAEtDb,EAAKuB,KAAKC,MAAMxB,EAAMmB,GAGxB,OAAOnB,EAGM,SAASyB,EAAe5B,GACrC,IAAK,IAAID,EAAI,EAAGA,EAAI8B,UAAUzB,OAAQL,IAAK,CACzC,IAAIH,EAAyB,MAAhBiC,UAAU9B,GAAa8B,UAAU9B,GAAK,GAE/CA,EAAI,EACNoB,EAAQjB,OAAON,IAAS,GAAMkC,SAAQ,SAAUhC,GAC9CiB,EAAef,EAAQF,EAAKF,EAAOE,OAE5BI,OAAO6B,0BAChB7B,OAAO8B,iBAAiBhC,EAAQE,OAAO6B,0BAA0BnC,IAEjEuB,EAAQjB,OAAON,IAASkC,SAAQ,SAAUhC,GACxCI,OAAOa,eAAef,EAAQF,EAAKI,OAAOuB,yBAAyB7B,EAAQE,OAKjF,OAAOE,EC5BF,I,ECFMvC,EAAe,CACxBrE,GADwB,KAExB0H,MAFwB,QAGxB7G,aAHwB,EAIxBC,YAJwB,EAKxBC,SALwB,EAMxBC,aANwB,EAQxB6H,OAAQ,CAAC,SAAS,eAAV,cARgB,WAWxBlI,WAXwB,EAYxBC,SAZwB,IAaxBK,KAbwB,EAgBxBG,YAhBwB,EAiBxBC,YAAa,CACTC,KADS,QAETC,UAAW,CAAC,CAAC,SAAF,KAIfE,YAvBwB,KAwBxBD,oBAxBwB,EAyBxBE,sBAzBwB,EA0BxBG,uBA1BwB,EA2BxBC,+BA3BwB,GA4BxBC,iCA5BwB,GA6BxBC,4BA7BwB,EA8BxBL,wBA9BwB,EA+BxBC,sBAAuB,CAAE6C,MAAO,oBAChCxC,sBAAuB,CAAEwC,MAAO,0BAGhCvC,mBAnCwB,EAoCxBC,WApCwB,iBAqCxBE,qBArCwB,EAsCxBD,wBAtCwB,GAuCxBE,qBAAsB,CAAEmC,MAAO,oBAG/BvD,OAAS,CAAEC,OAAQ,QACnBsB,KA3CwB,GA4CxBC,KA5CwB,GA+CxBH,eA/CwB,EAkDxBC,QDhDsB,gBAAe4C,EAAf,eACtB,uBACIpF,GAAIoF,EADR,GAEIsC,MAAOtC,EAFX,eAGI0D,YAHJ,EAII/D,MAAOK,EAAML,SC8CjBpC,QArDwB,GAuDxBoG,KAvDwB,MAyDxBC,WAAU,iBAAEC,iBAAF,IAAEA,gBAAF,EAAEA,WAAF,gCAAkC,GCNnCC,EAAoB,YAQuB,IAPpD1E,EAOmD,EAPnDA,KAOmD,IANnDxE,UAMmD,MAN9CqE,EAAarE,GAMiC,MALnD0H,aAKmD,MAL3CrD,EAAaqD,MAK8B,EAJnDlH,EAImD,EAJnDA,YAImD,IAHnDU,cAGmD,MAH1CmD,EAAanD,OAG6B,EAC7CiI,EAAQC,mBAAQ,iBAAO,uBAAgC,mBAAiB,MAAjB,MAA8B,CAA3F,IACMC,EAAWD,mBACb,iBAAO,uBAAsC,mBAAiB,MAAjB,MAC7C,CAFJ,IAIME,EAAcC,aAApB,GAEMC,EAAWJ,mBAAQ,kBAAMK,YAAqBvI,EAA3B,QAA0C,CAAnE,IAEA,OAAOkI,mBACH,kBACI5E,EAAA,KAAS,SAAAY,GAAU,IAAD,EACRsE,EAAUP,EAAhB,GACMQ,EAAaN,EAAnB,GAEMO,EAA2E,CAC7E5J,GAD6E,EAE7EC,MAAK,UAAEmF,EAAF,qBAFwE,EAG7EsC,MAH6E,EAI7E5C,eAAgBwE,EAJ6D,GAK7E9E,KAAMY,GAGV,OAAO,EAAP,YAEIL,MAAOyE,EAASI,UAG5B,CAACpF,EAAK,EAAN,IAnBJ,KA0BSqF,EAAa,YAYsB,IAX5CrF,EAW2C,EAX3CA,KAW2C,IAV3C7D,kBAU2C,MAV9B0D,EAAa1D,WAUiB,MAT3CC,gBAS2C,MAThCyD,EAAazD,SASmB,MAR3CG,gBAQ2C,MARhCsD,EAAatD,SAQmB,MAP3CF,mBAO2C,MAP7BwD,EAAaxD,YAOgB,EACrCiJ,EAAMV,mBAAQ,WAChB,IAAMW,EAAW,qBACN,mBAAsDhK,EAAtD,SADM,SAEHiK,YAFG,eAGDA,YAHC,aAIHA,YAJd,IAQA,OAFA,IAAInJ,GAAsBkJ,mBAEnBA,IACR,CAACpJ,EAAW,EAAZ,EAVH,IAYA,OAAOyI,mBACH,kBACI,UACI,YAKI,IAAMa,EAAQC,SAASC,WAAeA,EAAtC,YAEA,OAAO,EAAP,KACOA,EADP,UAEIA,IAAK,CACDC,MAAOD,EADN,MAEDxJ,WAAYwJ,EAFX,WAGDvJ,SAAUuJ,EAHT,SAIDpJ,SAAUoJ,EAJT,SAKDF,MALC,EAMDI,SAAUC,YAAiBL,WAM/C,CAAC,EAxBL,KA4BSM,EAAqB,SAAC,GAAD,IAC9BC,EAD8B,SAE9B1J,EAF8B,+BAG9BE,OAH8B,MAGfqD,EAHe,sBAS9B+E,mBAAQ,kBAAMqB,yDAAN,KAAuF,CAAC,EAAD,EATjE,KA6DrBC,EAAgB,YAwBtB,IAvBHlG,EAuBE,EAvBFA,KACAmG,EAsBE,EAtBFA,MACAC,EAqBE,EArBFA,OAqBE,IApBF9J,YAAa+J,OAoBX,MApB8BxG,EAAavD,YAoB3C,MAnBFH,kBAmBE,MAnBW0D,EAAa1D,WAmBxB,MAlBFC,gBAkBE,MAlBSyD,EAAazD,SAkBtB,MAjBFG,gBAiBE,MAjBSsD,EAAatD,SAiBtB,MAhBFF,mBAgBE,MAhBYwD,EAAaxD,YAgBzB,MAfFG,oBAeE,MAfaqD,EAAarD,aAe1B,MAdFC,WAcE,MAdIoD,EAAapD,IAcjB,EACI6J,EAAcjB,EAAW,CAC3BrF,KAD2B,EAE3B7D,WAF2B,EAG3BC,SAH2B,EAI3BG,SAJ2B,EAK3BF,gBAGEkK,EAAgB3B,mBAAQ,WAC1B,IAMA,EANIoB,EAASN,cAAb,EACIpJ,EAAc0J,EAASN,WAA3B,GAEIc,EAAUL,EAAd,EACIM,EAAUL,EAAd,EAGA,KAAS,CAAC,IAAD,EACsBM,YAAsB,EAAD,IAI5CvK,EAJ4C,GAK5CC,EANC,IACGuK,EADH,SACcC,EADd,gBAQCC,EAAQnB,SAASS,EAAQS,EAAjBlB,MAA4BU,EAASQ,EAAnD,QAEME,EAKF,CACAX,MAAOS,QADP,EAEAR,OAAQQ,SAAaC,GAEzBC,KAAiBX,EAAQW,EAAT,OAAhBA,EACAA,KAAiBV,EAASU,EAAV,QAAhBA,EAEAN,GAAYA,EAAUI,EAAX,GAAoBA,EAArB,MAAkCA,EAAlC,QAAsDE,EAAhEN,EACAC,GAAYA,EAAUG,EAAX,GAAoBA,EAArB,OAAmCA,EAAnC,SAAwDE,EAAlEL,EAEAM,EAAc,CAAEH,IAAF,EAAOC,MAAP,EAAcF,UAE5BX,KACA1J,KAGJ,MAAO,CACHkK,QADG,EAEHC,QAFG,EAGHT,OAHG,EAIH1J,YAJG,EAKH0K,MAAOD,KAEZ,CAACZ,EAAM,EAAP,QA9CH,IAsDA,OAAO,EAAP,CACIG,YADJ,EAEIW,aARiBlB,EAAmB,CACpCC,OAAQO,EAD4B,OAEpCjK,YAAaiK,EAFuB,YAGpC/J,kBAGJ,IAOS0K,EAAoB,YAkBE,IAjB/BC,EAiB8B,EAjB9BA,OACAb,EAgB8B,EAhB9BA,YACAc,EAe8B,EAf9BA,UACApB,EAc8B,EAd9BA,OACA1J,EAa8B,EAb9BA,YACA+K,EAY8B,EAZ9BA,aACA5L,EAW8B,EAX9BA,MACA6L,EAU8B,EAV9BA,UAWMrH,EAAQsH,eACRC,EAAeC,YAAkBH,EAAvC,GACMI,EAAW9C,mBAAQ,kBAAM+C,YAAN,KAAgC,CAAzD,IAEA,OAAO/C,mBAAQ,WACX,SAEO0B,EAAA,QACK,SAAAsB,GAAY,OAAIR,OAAmBQ,eAAvB,KADjB,KAEE,SAAAA,GACD,IAAMnC,EAAQoC,YAASD,EAATC,KAA6BnC,QAA3C,EACMoC,EAAcxL,GAAe0J,EAAD,GAAlC,EACM+B,EAAWC,YAAkBvC,EAAnC,GACMwC,EAAiBT,EAAvB,GAEA,OAAO,EAAP,YAEI/L,MAAOiM,EAFX,GAGIJ,UAHJ,EAII1G,MAAOgH,OAdA,KAiBpB,CAACT,EAAO,EAAR,UAlBH,KAqBSe,EAAqB,YAwBE,IAvBhCf,EAuB+B,EAvB/BA,OACAb,EAsB+B,EAtB/BA,YACA7K,EAqB+B,EArB/BA,MACA0M,EAoB+B,EApB/BA,YACAb,EAmB+B,EAnB/BA,UACAtB,EAkB+B,EAlB/BA,OACAoB,EAiB+B,EAjB/BA,UACAgB,EAgB+B,EAhB/BA,WACAC,EAe+B,EAf/BA,mBACAC,EAc+B,EAd/BA,qBACAC,EAa+B,EAb/BA,UAcMb,EAAW9C,mBAAQ,kBAAM+C,YAAN,KAAgC,CAAzD,IAEM1H,EAAQsH,eACRC,EAAeC,YAAkBH,EAAvC,GACMkB,EAAef,YAAkBc,EAAvC,GAEA,OAAO3D,mBAAQ,WACX,SAEO0B,EAAA,QACK,SAAA1F,GAAK,OAAIwG,OAAmBxG,eAAvB,KADV,KAEE,SAAAA,GACD,IAIA,EACA,EACA,EANM6E,EAAQgD,YAAqBZ,YAASjH,EAATiH,KAAsBnC,QAAzD,GACMgD,EAAYV,YAAkBvC,EAAOO,EAA3C,GACM2C,EAAYX,YAAkBvC,EAAOO,IAA3C,GAyBA,OAlBI4C,YAAqB9C,YAArB8C,QACAA,YAAqB9C,YAArB8C,KAFJ,KAIIC,EAAY,CAAEC,EAAGH,IAAL,EAAyCI,EAAGJ,EAAUI,GAClEC,EAAgB,CACZF,EAAGH,MADS,EAEZI,EAAGJ,EAAUI,GAEjBE,WAEAJ,EAAY,CAAEC,EAAGH,IAAL,EAAyCI,EAAGJ,EAAUI,GAClEC,EAAgB,CACZF,EAAGH,MADS,EAEZI,EAAGJ,EAAUI,GAEjBE,WAGG,CACHC,KAAMxB,EADH,GAEHJ,UAAWE,EAFR,GAGHO,SAHG,EAIHoB,MAJG,EAKHC,KAAM,CAACV,EAAU,EALd,GAMHH,UAAWC,EANR,GAOH5H,YAvCO,KA0CpB,CAAC,EAAD,gBA3CH,KCtXEyI,EAAgB,iBACf,mBAAc9N,EAAd,KADe,GAEf,mBAAcA,EAAd,KAGM+N,EAAc,YAGpB,IAHmC7N,EAGpC,EAHoCA,MAAO8N,EAG3C,EAH2CA,gBAIvCtJ,EAAQsH,eAEd,OACI,oCACI,0BACIhM,EAAG8N,EAAc5N,EADrB,MAEIyC,KAFJ,OAGIiB,MAAO,CAAEjB,KAAF,OAAgB2D,OAAQpG,EAAM8M,WACrC3G,YAAa2H,IAEjB,uBAAGC,UAAS,oBAAe/N,WAAf,eAAoCA,WAApC,QACR,0BACIgO,WAAYC,eAA4BjO,EAD5C,OAEIkO,iBAFJ,UAGIxK,MAAK,OACEc,SADF,UAED/B,KAAMzC,EAAM6L,aAGf7L,EAjBjB,SCESmO,EAAe,YAYQ,IAXhCtD,EAW+B,EAX/BA,YACA7K,EAU+B,EAV/BA,MACAuK,EAS+B,EAT/BA,OACAoB,EAQ+B,EAR/BA,UACAgB,EAO+B,EAP/BA,WACAC,EAM+B,EAN/BA,mBACAC,EAK+B,EAL/BA,qBACAiB,EAI+B,EAJ/BA,gBACApB,EAG+B,EAH/BA,YACAb,EAE+B,EAF/BA,UACAiB,EAC+B,EAD/BA,UAEMsB,EAAe3B,EAA6B,CAC9Cf,QAD8C,EAE9Cb,YAF8C,EAG9C7K,MAH8C,EAI9C0M,YAJ8C,EAK9Cb,UAL8C,EAM9CtB,OAN8C,EAO9CoB,UAP8C,EAQ9CgB,WAR8C,EAS9CC,mBAT8C,EAU9CC,qBAV8C,EAW9CC,cAGJ,OACI,oCACKsB,EAAA,KAAiB,SAAAC,GAAS,OACvB,qBAAa5H,IAAK4H,QAAlB,GAAsCrO,MAAtC,EAAwD8N,gBAAiBA,SC5CnFQ,EAA4B,CAC9BC,cAAe,QAcNC,EAAc,YAQQ,IAP/B3D,EAO8B,EAP9BA,YACO4D,EAMuB,EAN9BzO,MACAuK,EAK8B,EAL9BA,OACA1J,EAI8B,EAJ9BA,YACA+K,EAG8B,EAH9BA,aACAD,EAE8B,EAF9BA,UACAE,EAC8B,EAD9BA,UAEMrH,EAAQsH,eAER4C,EAASjD,EAAkB,CAC7BC,QAD6B,EAE7Bb,YAF6B,EAG7Bc,UAH6B,EAI7BpB,OAJ6B,EAK7B1J,YAL6B,EAM7B+K,aAN6B,EAO7B5L,MAP6B,EAQ7B6L,cAGJ,OACI,oCACK6C,EAAA,KAAW,SAAA1O,GAAK,OACb,uBACIyG,IAAKzG,QADT,GAEI+N,UAAS,oBAAe/N,EAAf,eAA2BA,EAA3B,EAFb,KAGI0D,MAAO4K,GAEP,0BACIN,WADJ,SAEIE,iBAFJ,UAGIxK,MAAK,OACEc,SADF,UAED/B,KAAMzC,EAAM6L,aAGf7L,EAdI,aCjCvB2O,EAAa,YAAqF,IAAtEjE,EAAqE,EAArEA,MAAOC,EAA8D,EAA9DA,OAAQjI,EAAsD,EAAtDA,QAASmI,EAA6C,EAA7CA,YACtD,OACI,oCACKnI,EAAA,KAAY,qBACT,qCACI+D,IAAKC,GADT,GAGIkI,eAHJ,EAIIC,gBAJJ,EAKItK,KAAMsG,UCuM1B,EAAeiE,cA3MH,YA2DkB,IA1D1BvK,EA0DyB,EA1DzBA,KA0DyB,IAzDzBxE,UAyDyB,MAzDpBqE,EAAarE,GAyDO,MAxDzB0H,aAwDyB,MAxDjBrD,EAAaqD,MAwDI,EAvDzBlH,EAuDyB,EAvDzBA,YAuDyB,IAtDzBK,mBAsDyB,MAtDXwD,EAAaxD,YAsDF,MApDzBgI,cAoDyB,MApDhBxE,EAAawE,OAoDG,MAlDzBlI,kBAkDyB,MAlDZ0D,EAAa1D,WAkDD,MAjDzBC,gBAiDyB,MAjDdyD,EAAazD,SAiDC,MAhDzBG,gBAgDyB,MAhDdsD,EAAatD,SAgDC,MA/CzBE,WA+CyB,MA/CnBoD,EAAapD,IA+CM,MA9CzBH,YAAa+J,OA8CY,MA9COxG,EAAavD,YA8CpB,MA7CzBE,oBA6CyB,MA7CVqD,EAAarD,aA6CH,EA3CzB2J,EA2CyB,EA3CzBA,MACAC,EA0CyB,EA1CzBA,OACQoE,EAyCiB,EAzCzB7O,OAyCyB,IAvCzBe,cAuCyB,MAvChBmD,EAAanD,OAuCG,MApCzBE,mBAoCyB,MApCXiD,EAAajD,YAoCF,MAnCzBC,YAAa4N,OAmCY,MAnCG5K,EAAahD,YAmChB,MAhCzBI,mBAgCyB,MAhCX4C,EAAa5C,YAgCF,MA/BzBD,0BA+ByB,MA/BJ6C,EAAa7C,mBA+BT,MA9BzBE,6BA8ByB,MA9BD2C,EAAa3C,sBA8BZ,MA7BzBG,8BA6ByB,MA7BAwC,EAAaxC,uBA6Bb,MA5BzBC,sCA4ByB,MA5BQuC,EAAavC,+BA4BrB,MA3BzBC,yCA2ByB,MA3BUsC,EAAatC,iCA2BvB,OA1BzBC,oCA0ByB,OA1BKqC,EAAarC,4BA0BlB,QAzBzBL,gCAyByB,OAzBC0C,EAAa1C,wBAyBd,QAxBzBC,8BAwByB,OAxBDyC,EAAazC,sBAwBZ,QAvBzBK,8BAuByB,OAvBDoC,EAAapC,sBAuBZ,QApBzBE,mBAoByB,OApBZkC,EAAalC,WAoBD,QAnBzBD,0BAmByB,OAnBLmC,EAAanC,kBAmBR,QAlBzBG,6BAkByB,OAlBFgC,EAAahC,qBAkBX,QAjBzBC,6BAiByB,OAjBF+B,EAAa/B,qBAiBX,QAhBzBF,gCAgByB,OAhBCiC,EAAajC,wBAgBd,QAbzBK,aAayB,OAblB4B,EAAa5B,KAaK,QAZzBC,aAYyB,OAZlB2B,EAAa3B,KAYK,QATzBH,sBASyB,OATT8B,EAAa9B,cASJ,GARzByC,GAQyB,EARzBA,QACAM,GAOyB,EAPzBA,aACAC,GAMyB,EANzBA,YACAC,GAKyB,EALzBA,aAKyB,KAJzBhD,gBAIyB,OAJf6B,EAAa7B,QAIE,QAFzBG,gBAEyB,OAFf0B,EAAa1B,QAEE,QADzBoG,aACyB,OADlB1E,EAAa0E,KACK,GACnBtE,GAAQsH,eADW,GAG4CmD,aAAc,EAAD,EAHzD,GAGjBC,GAHiB,cAGLC,GAHK,eAGQjP,GAHR,UAGgBkP,GAHhB,cAG4BC,GAH5B,eASnBC,GAAiBrG,EAA4B,CAC/C1E,KAD+C,EAE/CxE,GAF+C,EAG/C0H,MAH+C,EAI/ClH,YAJ+C,EAK/CU,WAdqB,GAiBoDwJ,EAAwB,CACjGlG,KADiG,GAEjGmG,MAFiG,GAGjGC,OAHiG,GAIjG3J,IAJiG,EAKjGH,YALiG,EAMjGH,WANiG,EAOjGC,SAPiG,EAQjGG,SARiG,EASjGF,YATiG,EAUjGG,iBAVI8J,GAjBiB,eAiBJW,GAjBI,gBAiBUT,GAjBV,WAiBmBC,GAjBnB,WAiB4BT,GAjB5B,UAiBoC1J,GAjBpC,eA8BnBO,GAAc4K,YAAkBgD,EAAtC,IAEMO,GAAYC,YAAShN,GAAK,GAAhC,IAEMiN,GAA2C,CAC7CC,OAD6C,KAE7CtB,aAF6C,KAG7CuB,YAH6C,KAI7CjN,QAAS,MAGTkG,WAAJ,YACI6G,UACI,uBAAGhJ,IAAH,SAAgBsH,UAAS,4CACpBlD,GAAA,KAAgB,SAAAsB,GAAY,OACzB,qBACI1F,IAAK0F,EADT,GAEIhH,MAFJ,EAGIC,KAAMoG,GAAaW,EAHvB,KAIIhL,YAJJ,EAKIC,YAAaA,GALjB,GAMImB,QANJ,GAOID,cAPJ,GAQIyC,QARJ,GASIM,aATJ,GAUIC,YAVJ,GAWIC,aAAcA,UAO9BhE,GAAsBqH,WAA1B,kBACI6G,gBACI,uBAAGhJ,IAAH,eAAsBsH,UAAS,4CAC3B,qBACIlD,YADJ,GAEIN,OAFJ,GAGIvK,MAHJ,EAII2L,UAJJ,EAKIgB,WALJ,EAMIC,mBANJ,EAOIC,qBAPJ,GAQIiB,gBARJ,GASIpB,YATJ,GAUIb,UAVJ,GAWIiB,UAAW9K,OAMvBC,IAAqB2G,WAAzB,iBACI6G,eACI,uBAAGhJ,IAAH,cAAqBsH,UAAS,4CAC1B,qBACIlD,YADJ,GAEI7K,MAFJ,GAGIuK,OAHJ,GAII1J,YAJJ,GAKI+K,aALJ,GAMID,UANJ,GAOIE,UAAWxJ,OAMvBK,aAAsBkG,WAA1B,aACI6G,WACI,qBACIhJ,IADJ,UAEIiE,MAFJ,GAGIC,OAHJ,GAIIE,YAJJ,GAKInI,QAASA,MAKrB,IAAMkN,GL8PwB,gBAC9B/E,EAD8B,cAE9BW,EAF8B,eAG9BT,EAH8B,UAI9BC,EAJ8B,UAK9BT,EAL8B,SAM9B1J,EAN8B,qBAe9BsI,mBACI,iBAAO,CACH0B,YADG,EAEHW,aAFG,EAGHT,QAHG,EAIHC,QAJG,EAKHT,OALG,EAMH1J,iBAEJ,CAACgK,EAAY,EAAb,MAxB0B,IK9PTgF,CAA6B,CAC9ChF,YAD8C,GAE9CW,aAF8C,GAG9CT,QAH8C,GAI9CC,QAJ8C,GAK9CT,OAL8C,GAM9C1J,iBAGJ,OACI,uBACI6J,MADJ,GAEIC,OAFJ,GAGIzK,OAHJ,GAIIsC,KAJJ,GAKIgC,MALJ,GAMIsE,KAAMA,IAELF,EAAA,KAAW,cACR,gBAAI6G,MACOA,GAAP,GAGJ,mBAAWK,EACA,8BAAUrJ,IAAKC,GAAIZ,wBAAcgK,EAAxC,KAGG,YC/MVC,EAAgB,mBACzB,4BACK,gBAAGrF,EAAH,QAAUC,EAAV,gBAA0D,mCAAeD,MAAf,EAA6BC,OAAQA,GAA/F,QCTM,SAASqF,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIlJ,UAAQmJ,EAAMD,EAAIlJ,QAE/C,IAAK,IAAIL,EAAI,EAAGyJ,EAAO,IAAIC,MAAMF,GAAMxJ,EAAIwJ,EAAKxJ,IAC9CyJ,EAAKzJ,GAAKuJ,EAAIvJ,GAGhB,OAAOyJ,ECHM,SAASE,EAAeJ,EAAKvJ,GAC1C,OCLa,SAAyBuJ,GACtC,GAAIG,MAAME,QAAQL,GAAM,OAAOA,EDIxBM,CAAeN,IELT,SAA+BA,EAAKvJ,GACjD,GAAsB,oBAAX8J,QAA4BA,OAAOC,YAAY5J,OAAOoJ,GAAjE,CACA,IAAIS,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKxK,EAET,IACE,IAAK,IAAiCyK,EAA7BC,EAAKd,EAAIO,OAAOC,cAAmBE,GAAMG,EAAKC,EAAGC,QAAQC,QAChEP,EAAKrI,KAAKyI,EAAGrJ,QAETf,GAAKgK,EAAK3J,SAAWL,GAH8CiK,GAAK,IAK9E,MAAOO,GACPN,GAAK,EACLC,EAAKK,EARP,QAUE,IACOP,GAAsB,MAAhBI,EAAE,QAAoBA,EAAE,SADrC,QAGE,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,GFnBuBS,CAAqBlB,EAAKvJ,IGJ3C,SAAqC0K,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOE,EAAiBF,EAAGC,GACtD,IAAIE,EAAI1K,OAAOO,UAAUoK,SAASlK,KAAK8J,GAAGpM,MAAM,GAAI,GAEpD,MADU,WAANuM,GAAkBH,EAAEK,cAAaF,EAAIH,EAAEK,YAAY7N,MAC7C,QAAN2N,GAAqB,QAANA,EAAoBnB,MAAM/O,KAAKkQ,GACxC,cAANA,GAAqB,2CAA2CG,KAAKH,GAAWD,EAAiBF,EAAGC,QAAxG,GHF8DM,CAA2B1B,EAAKvJ,IILjF,WACb,MAAM,IAAIkL,UAAU,6IJIgFC,GKyBtG,IAkTA,EAAe/C,cAlQG,YAmDe,IAlD7BvK,EAkD4B,EAlD5BA,KAkD4B,IAjD5BxE,UAiD4B,MAjDvBqE,EAAarE,GAiDU,MAhD5B0H,aAgD4B,MAhDpBrD,EAAaqD,MAgDO,EA/C5BlH,EA+C4B,EA/C5BA,YA+C4B,IA9C5BK,mBA8C4B,MA9CdwD,EAAaxD,YA8CC,MA5C5BF,kBA4C4B,MA5Cf0D,EAAa1D,WA4CE,MA3C5BC,gBA2C4B,MA3CjByD,EAAazD,SA2CI,MA1C5BG,gBA0C4B,MA1CjBsD,EAAatD,SA0CI,MAzC5BE,WAyC4B,MAzCtBoD,EAAapD,IAyCS,MAxC5BH,YAAa+J,OAwCe,MAxCIxG,EAAavD,YAwCjB,MAvC5BE,oBAuC4B,MAvCbqD,EAAarD,aAuCA,EArC5B2J,EAqC4B,EArC5BA,MACAC,EAoC4B,EApC5BA,OACQoE,EAmCoB,EAnC5B7O,OAmC4B,IAlC5B6I,kBAkC4B,MAlCf,EAkCe,MAhC5B9H,cAgC4B,MAhCnBmD,EAAanD,OAgCM,MA7B5BE,mBA6B4B,MA7BdiD,EAAajD,YA6BC,MA5B5BC,mBA4B4B,MA5BdgD,EAAahD,YA4BC,MAzB5BI,mBAyB4B,MAzBd4C,EAAa5C,YAyBC,MAxB5BD,0BAwB4B,MAxBP6C,EAAa7C,mBAwBN,MAvB5BE,6BAuB4B,MAvBJ2C,EAAa3C,sBAuBT,MAtB5BG,8BAsB4B,MAtBHwC,EAAaxC,uBAsBV,MArB5BC,uCAqB4B,MArBKuC,EAAavC,+BAqBlB,OApB5BC,yCAoB4B,OApBOsC,EAAatC,iCAoBpB,QAnB5BC,oCAmB4B,OAnBEqC,EAAarC,4BAmBf,QAlB5BL,gCAkB4B,OAlBF0C,EAAa1C,wBAkBX,QAjB5BC,8BAiB4B,OAjBJyC,EAAazC,sBAiBT,QAhB5BK,8BAgB4B,OAhBJoC,EAAapC,sBAgBT,QAb5BE,mBAa4B,OAbfkC,EAAalC,WAaE,QAZ5BD,0BAY4B,OAZRmC,EAAanC,kBAYL,QAX5BG,6BAW4B,OAXLgC,EAAahC,qBAWR,QAV5BC,6BAU4B,OAVL+B,EAAa/B,qBAUR,QAT5BF,gCAS4B,OATFiC,EAAajC,wBASX,QAN5BG,sBAM4B,OANZ8B,EAAa9B,cAMD,GAL5ByC,GAK4B,EAL5BA,QACAO,GAI4B,EAJ5BA,YAI4B,KAH5B/C,gBAG4B,OAHlB6B,EAAa7B,QAGK,QAD5BG,gBAC4B,OADlB0B,EAAa1B,QACK,GACtBoP,GAAWC,iBAAjB,MACMvN,GAAQsH,eAFc,GAIyCmD,aAAc,EAAD,EAJtD,GAIpB/O,GAJoB,UAIZkP,GAJY,cAIAC,GAJA,eAIaH,GAJb,cAIyBC,GAJzB,eAUtBG,GAAiBrG,EAA4B,CAC/C1E,KAD+C,EAE/CxE,GAF+C,EAG/C0H,MAH+C,EAI/ClH,YAJ+C,EAK/CU,WAfwB,GAkBiDwJ,EAAwB,CACjGlG,KADiG,GAEjGmG,MAFiG,GAGjGC,OAHiG,GAIjG3J,IAJiG,EAKjGH,YALiG,EAMjGH,WANiG,EAOjGC,SAPiG,EAQjGG,SARiG,EASjGF,YATiG,EAUjGG,iBAVI8J,GAlBoB,eAkBPW,GAlBO,gBAkBOT,GAlBP,WAkBgBC,GAlBhB,WAkByBT,GAlBzB,UAkBiC1J,GAlBjC,eA+BtBmR,GAAiBhG,YAAkB5K,EAAzC,IAEMgN,GAAe3B,EAA6B,CAC9Cf,OAD8C,EAE9Cb,YAF8C,GAG9C7K,MAH8C,EAI9C0M,YAJ8C,GAK9Cb,UAL8C,GAM9CtB,OAN8C,GAO9CoB,UAP8C,EAQ9CgB,WAR8C,EAS9CC,mBAT8C,GAU9CC,qBAV8C,GAW9CC,UAAW9K,KAGT2N,GAAclE,EAA4B,CAC5CC,OAD4C,GAE5Cb,YAF4C,GAG5C7K,MAH4C,GAI5CuK,OAJ4C,GAK5C1J,YAL4C,GAM5C+K,aAN4C,GAO5CD,UAP4C,GAQ5CE,UAAWxJ,KAGf4P,qBAAU,WACN,GAAKH,GAAL,SAEAA,iBAAyB5C,GAAzB4C,EACAA,kBAA0B3C,GAA1B2C,EAEA,IAAMI,EAAMJ,sBAAZ,MAEAI,aAEAA,YAAgB1N,GAAhB0N,WACAA,sBAEAA,SACAA,YAAchS,GAAdgS,KAA2BhS,GAA3BgS,KAEC1G,GAAD,WAEA0G,SACAA,mBAEArH,YAAoB,SAAAX,GAChBgI,cACAA,YAAgBhI,EAAhBgI,MAEAA,cAAkBF,GAAlBE,GACAA,cAEA1G,GAAatB,EAAbsB,KAEA0G,SAEI/Q,EAAJ,GACI+Q,eAIR,IAAI3Q,GA/Ka,kBAMrB2Q,wBACAA,iBAAc1N,cAAd0N,uBAAgD1N,cAAhD0N,YAEAxD,WAAe,SAAA1O,GACXkS,SACAA,YAAclS,WAAdkS,EAAgClS,WAAhCkS,GACAA,YAAgBlS,EAAhBkS,UACAA,YAAgBjE,kBAA+BjO,EAA/CkS,OACAA,qBAAgBlS,EAAhBkS,WACAA,YAEAA,cACAA,cAAkBlS,EAAlBkS,UACAA,cACAlS,gBAAmB,cACf,IAAImK,EAAa+H,SAAWC,EAAXD,EAAoBC,EAArC,GACKD,SAAWC,EAAXD,EAAoBC,EAApBD,MAELpE,EAAJ,GAAyBoE,cAwJrBE,CAAiBF,EAAI,GAAL,GAAhBE,KAGJ,IAAInQ,IAtMY,gBAKpBiQ,qBACAA,wBACAA,iBAAc1N,cAAd0N,uBAAgD1N,cAAhD0N,YAEAxD,WAAe,SAAA1O,GACXkS,SACAA,YAAclS,EAAdkS,EAAuBlS,EAAvBkS,GACAA,YAAgBlS,EAAhBkS,UACAA,qBAAgBlS,EAAhBkS,YACAA,eAyLIG,CAAgBH,EAAI,GAApBG,IAKJH,YACAxP,YAAgB,SAAAuC,GACZqN,YAAqBJ,EAAI,EAAL,YAEhB3N,KAFgB,GAGhBqK,eAHgB,GAIhBC,gBAJgB,GAKhBrK,kBAGT,CAAC,GAAD,YAMCtE,GAND,IAOCA,GAPD,oCAzDH+R,KA+EA,IAAMM,GAAOpJ,mBACT,kBACI0B,GAAA,KAAgB,SAAA1F,GAAK,UACjBpF,GAAIoF,EAAMpF,IACPoF,EAFc,UAIzB,CANJ,KASMqN,GAAkB,SAAC3M,GAAgD,IAAD,IACrD4M,YAAkBX,GAAD,QADoC,MAC7DzE,EAD6D,KAC1DC,EAD0D,KAG9DoF,EAAaC,YACfzS,QAD4B,GAE5BA,OAF4B,cAAhC,GAUA,SAEO2K,GAAA,MAAiB,SAAA1F,GAAK,OAAIA,OAAauN,EAAjB,MAFL,MA/JA,GAoKkBlN,cAAtCC,GApKoB,wBAoKEC,GApKF,eAsKtBkN,GAAmB,SAAC/M,GACtB,IAAMV,EAAQqN,GAAd,GACA,GACIlN,aAAW,EAAXA,GACAG,GAAqBK,wBAAcvD,GAAS,CAAE4C,UAA9CM,IAEAC,MAiBR,OACI,4BACImN,IADJ,GAEInI,MAAOwE,GAFX,EAGIvE,OAAQwE,GAHZ,EAIIzL,MAAO,CACHgH,MADG,GAEHC,OAFG,GAGHmI,OAAQxQ,GAAa,OAAY,UAErC+C,aAAc/C,GAAa,QAT/B,EAUIgD,YAAahD,GAAa,QAV9B,EAWIiD,aAAcjD,GAzBG,WACrBoD,WAaA,EAYIX,QAASzC,GAtBG,SAACuD,GACjB,OAEA,IAAMqE,EAAMsI,GAAZ,GACA,GACIzN,GAAQmF,EAARnF,UAiBuCsB,OCpUtC0M,EAAsB,mBAC/B,4BACK,gBAAGrI,EAAH,QAAUC,EAAV,gBAA0D,mCAAqBD,MAArB,EAAmCC,OAAQA,GAArG,S,oSCOT,I,EAAMqI,EAAK,CACP,CACIvM,IAAK,OACLwM,MAAO,OACPC,KAAM,yCACNC,YAAY,0qBAmBZvO,KAAM,WACNwO,UAAU,GAEd,CACI3M,IAAK,KACLwM,MAAO,OACPC,KAAM,eACNC,YAAY,oIAIZvO,KAAM,8CACNwO,UAAU,EACVC,aAAcC,IAASvT,IAE3B,CACI0G,IAAK,QACLwM,MAAO,OACPC,KAAM,kBACNC,YAAY,0IAIZvO,KAAM,qCACNwO,UAAU,EACVC,aAAcC,IAASvT,IAE3B,CACI0G,IAAK,cACLwM,MAAO,OACPC,KAAM,iCACNC,YAAY,sWAOZC,UAAU,EACVxO,KAAM,8CACN2O,YAAa,eAEjB,CACI9M,IAAK,QACL+M,wBAAyB,CAAC,OAC1BN,KAAM,eACNC,YAAY,iFAIZvO,KAAM,SACNwO,UAAU,EACVG,YAAa,QACbN,MAAO,OACPQ,eAAgB,CACZC,KAAM,KACNC,IAAK,IACLC,IAAK,IACLC,KAAM,IAGd,CACIpN,IAAK,SACL+M,wBAAyB,CAAC,OAC1BN,KAAM,gBACNC,YAAY,iFAIZvO,KAAM,SACNwO,UAAU,EACVG,YAAa,QACbN,MAAO,OACPQ,eAAgB,CACZC,KAAM,KACNC,IAAK,IACLC,IAAK,IACLC,KAAM,IAGd,CACIpN,IAAK,aACL1C,QAAS,CAAC,UACVmP,KAAK,gDACLE,UAAU,EACVC,aAAc,oBACdzO,KAAK,SACL2O,YAAa,QACbN,MAAO,OACPQ,eAAgB,CACZE,IAAK,EACLC,IAAK,IAGb,CACInN,IAAK,aACLyM,KAAM,+DACNtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAAS5S,WACvB6S,YAAa,QACbN,MAAO,OACPQ,eAAgB,CACZC,KAAM,IACNC,KAAM,IACNC,IAAK,IACLC,KAAM,IAGd,CACIpN,IAAK,WACLyM,KAAM,6DACNtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAAS3S,SACvB4S,YAAa,QACbN,MAAO,OACPQ,eAAgB,CACZC,KAAM,IACNC,KAAM,IACNC,IAAK,IACLC,KAAM,IAGd,CACIpN,IAAK,MACLyM,KAAK,iFACLtO,KAAM,UACNwO,UAAU,EACVC,aAAcC,IAAStS,IACvBuS,YAAa,SACbN,MAAO,QAEX,CACIxM,IAAK,cACLyM,KAAK,mGACLtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAASzS,YACvB0S,YAAa,QACbN,MAAO,OACPQ,eAAgB,CACZE,IAAK,EACLC,IAAK,IACLC,KAAM,MAGd,CACIpN,IAAK,WACLyM,KAAM,kCACNtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAASxS,SACvByS,YAAa,QACbN,MAAO,OACPQ,eAAgB,CACZC,KAAM,IACNC,IAAK,EACLC,IAAK,GACLC,KAAM,IAGd,CACIpN,IAAK,eACLyM,KAAM,kBACNtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAASvS,aACvBwS,YAAa,QACbN,MAAO,OACPQ,eAAgB,CACZC,KAAM,KACNC,IAAK,EACLC,IAAK,GACLC,KAAM,IAGd,CACIpN,IAAK,cACLyM,KAAK,uEACLtO,KAAM,UACNwO,UAAU,EACVC,aAAcC,IAAS1S,YACvB2S,YAAa,SACbN,MAAO,QAEX,CACIxM,IAAK,SACLyM,KAAM,gBACNtO,KAAM,SACNwO,UAAU,EACVG,YAAa,SACbN,MAAO,QAEXa,IACA,CACIrN,IAAK,SACLyM,KAAM,uBACNtO,KAAM,+BACNwO,UAAU,EACVC,aAAcC,IAASrS,OACvBsS,YAAa,gBACbN,MAAO,UAlOJ,O,+CAoOJc,YAAe,QAAS,CAAC,MAAO,U,6iBApO5B,CAqOP,CACItN,IAAK,yBACL1C,QAAS,CAAC,OACVmP,KAAM,YACNC,YAAY,iMAMZvO,KAAM,UACN2O,YAAa,SACbN,MAAO,SAEX,CACIxM,IAAK,cACLyM,KAAM,uBACNtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAASnS,YACvBoS,YAAa,YACbN,MAAO,SAEX,CACIxM,IAAK,cACLyM,KAAM,kCACNtO,KAAM,6BACNwO,UAAU,EACVC,aAAcC,IAASlS,YACvBmS,YAAa,iBACbN,MAAO,SAEX,CACIxM,IAAK,qBACLyM,KAAM,gCACNtO,KAAM,UACNwO,UAAU,EACVC,aAAcC,IAAS/R,mBACvBgS,YAAa,SACbN,MAAO,iBAEX,CACIxM,IAAK,cACLyM,KAAM,eACNC,YAAY,sMAKZvO,KAAM,oBACNwO,UAAU,EACVC,aAAcC,IAAS9R,YACvB+R,YAAa,UACbN,MAAO,gBACPQ,eAAgB,CACZO,QAAS,CAAC,KAAM,QAAP,+BAAmDnU,KAAI,SAAAoU,GAAM,MAAK,CACvEjU,MAAOiU,EACPxM,MAAOwM,QAInB,CACIxN,IAAK,wBACLyM,KAAK,0EACLtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAAS7R,sBACvB8R,YAAa,QACbN,MAAO,gBACPQ,eAAgB,CACZC,KAAM,IACNC,IAAK,EACLC,IAAK,GACLC,KAAM,IAGd,CACIpN,IAAK,yBACLyM,KAAK,kFACLtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAAS1R,uBACvB2R,YAAa,QACbN,MAAO,gBACPQ,eAAgB,CACZC,KAAM,KACNC,KAAM,GACNC,IAAK,GACLC,KAAM,IAGd,CACIpN,IAAK,iCACLyM,KAAK,wBACLtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAASzR,+BACvB0R,YAAa,QACbN,MAAO,gBACPQ,eAAgB,CACZC,KAAM,KACNC,IAAK,EACLC,IAAK,GACLC,KAAM,IAGd,CACIpN,IAAK,mCACLyM,KAAK,2BACLtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAASxR,iCACvByR,YAAa,QACbN,MAAO,gBACPQ,eAAgB,CACZC,KAAM,KACNC,IAAK,EACLC,IAAK,GACLC,KAAM,IAGd,CACIpN,IAAK,0BACLyM,KAAK,4BACLtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAAS5R,wBACvB6R,YAAa,QACbN,MAAO,gBACPQ,eAAgB,CACZC,KAAM,KACNC,IAAK,EACLC,IAAK,GACLC,KAAM,IAGd,CACIpN,IAAK,8BACLyM,KAAM,sBACNtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAASvR,4BACvBwR,YAAa,YACbN,MAAO,iBAEX,CACIxM,IAAK,wBACLyM,KAAM,kDACNtO,KAAM,6BACNwO,UAAU,EACVC,aAAcC,IAAS3R,sBACvB4R,YAAa,iBACbN,MAAO,iBAEX,CACIxM,IAAK,wBACLyM,KAAM,kDACNtO,KAAM,6BACNwO,UAAU,EACVC,aAAcC,IAAStR,sBACvBuR,YAAa,iBACbN,MAAO,iBAEX,CACIxM,IAAK,oBACLyM,KAAM,gCACNtO,KAAM,UACNwO,UAAU,EACVC,aAAcC,IAASrR,kBACvBsR,YAAa,SACbN,MAAO,gBAEX,CACIxM,IAAK,aACLyM,KACI,oJACJtO,KAAM,oBACNwO,UAAU,EACVC,aAAcC,IAASpR,WACvBqR,YAAa,UACbN,MAAO,eACPQ,eAAgB,CACZO,QAAS,CAAC,KAAM,QAAS,iBAAhB,+BAAqEnU,KAC1E,SAAAoU,GAAM,MAAK,CACPjU,MAAOiU,EACPxM,MAAOwM,QAKvB,CACIxN,IAAK,0BACLyM,KAAK,2JAILtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAASnR,wBACvBoR,YAAa,QACbN,MAAO,eACPQ,eAAgB,CACZE,IAAK,EACLC,IAAK,EACLC,KAAM,MAGd,CACIpN,IAAK,uBACLyM,KAAK,0EACLtO,KAAM,SACNwO,UAAU,EACVC,aAAcC,IAASlR,qBACvBmR,YAAa,QACbN,MAAO,eACPQ,eAAgB,CACZC,KAAM,IACNC,IAAK,EACLC,IAAK,GACLC,KAAM,IAGd,CACIpN,IAAK,uBACLyM,KAAM,iDACNtO,KAAM,6BACNwO,UAAU,EACVC,aAAcC,IAASjR,qBACvBkR,YAAa,iBACbN,MAAO,gBAEX,CACIxM,IAAK,SACLwM,MAAO,gBACPC,KAAM,qDACNC,YAAY,snCA8BZC,UAAU,EACVxO,KAAM,2BACNyO,aAAcC,IAAS1K,QAE3B,CACInC,IAAK,gBACL1C,QAAS,CAAC,MAAO,UACjBkP,MAAO,gBACPC,KAAM,gCACNtO,KAAM,UACNwO,UAAU,EACVC,aAAcC,IAAShR,cACvBiR,YAAa,UAEjB,CACI9M,IAAK,eACL1C,QAAS,CAAC,OACVkP,MAAO,gBACPC,KAAM,sEACNtO,KAAM,wBACNwO,UAAU,GAEd,CACI3M,IAAK,cACL1C,QAAS,CAAC,MAAO,UACjBkP,MAAO,gBACPC,KAAM,qEACNtO,KAAM,wBACNwO,UAAU,GAEd,CACI3M,IAAK,eACL1C,QAAS,CAAC,OACVkP,MAAO,gBACPC,KAAM,sEACNtO,KAAM,wBACNwO,UAAU,GAEd,CACI3M,IAAK,UACL1C,QAAS,CAAC,MAAO,UACjBkP,MAAO,gBACPC,KAAM,iEACNtO,KAAM,wBACNwO,UAAU,GAEd,CACI3M,IAAK,UACL1C,QAAS,CAAC,MAAO,UACjBkP,MAAO,gBACPrO,KAAM,YACNwO,UAAU,EACVF,KAAM,2BACNC,YAAY,oaAehB,CACI1M,IAAK,yBACL1C,QAAS,CAAC,MAAO,UACjBmP,KAAM,2BACNtO,KAAM,UACN2O,YAAa,SACbN,MAAO,iBAEX,CACIxM,IAAK,UACL1C,QAAS,CAAC,MAAO,UACjBa,KAAM,WACNsO,KAAK,4BACLD,MAAO,UACPM,YAAa,QACbE,eAAgB,CACZT,MAAOkB,YAAgB,CAAC,MAAO,WAC/BC,cAAc,EACdC,SAAU,aACVC,cAAc,EACdC,aAAc,SAACnK,EAAOlF,GAAR,gBACAkF,EADA,MACWlF,EAAOtC,OADlB,KAC6BsC,EAAOrC,WAClD0Q,SAAU,CACN3Q,OAAQ,WACRC,UAAW,SACXC,SAAS,EACTC,WAAY,EACZC,WAAY,EACZE,UAAW,IACXC,WAAY,GACZF,aAAc,EACdM,WAAY,GACZF,cAAe,gBACf2B,QAAS,SAAAR,GACLgQ,MAAMC,KAAKC,UAAUlQ,EAAM,KAAM,eAOxCL,EAASwQ,YAAgB1B,I,yGC9lBhC2B,EAAiBC,IAAOC,IAAV,4EAAGD,CAAH,yIASdE,EAAaF,IAAOG,KAAV,wEAAGH,CAAH,MACVI,EAAeJ,IAAOG,KAAV,0EAAGH,CAAH,sBAIZK,EAAgB,SAAC,GAAD,IAAG9P,EAAH,EAAGA,MAAH,OAClB,kBAACwP,EAAD,CAAgBjR,MAAO,CAAEoB,MAAOK,EAAML,QAClC,kBAACgQ,EAAD,WACA,kBAACE,EAAD,KAAe7P,EAAMpF,IACrB,kBAAC+U,EAAD,cACA,kBAACE,EAAD,KAAe7P,EAAMsC,OACrB,kBAACqN,EAAD,uBACA,kBAACE,EAAD,KAAe7P,EAAMN,gBACrB,kBAACiQ,EAAD,cACA,kBAACE,EAAD,KAAe7P,EAAML,SAIdoQ,gBACX,CACI3U,YAAa4U,IACb3T,YAAa,SAAAiG,GACT,MAAS,gCAALA,EAAoD,SAAA3H,GAAC,OAAOA,EAAEC,GAAT,KAAgBD,EAAE2H,MAAlB,KAClDA,GAEXvF,WAAY,SAAAuF,GACR,MAAS,gCAALA,EAAoD,SAAA3H,GAAC,OAAOA,EAAEC,GAAT,KAAgBD,EAAE2H,MAAlB,KAClDA,GAEXlF,QAAS,SAACkF,EAAO2N,GACb,GAAKA,EAAO,0BAEZ,OAAOH,GAEXzQ,MAAO,SAACiD,EAAO2N,GACX,OAAKA,EAAO,0BAEL,OAAP,UACOA,EAAO5Q,MADd,CAEIjC,QAAS,CACL8S,UAAU,OAAD,UACFD,EAAO5Q,MAAMjC,QAAQ8S,UADnB,CAELC,WAAY,YAPsB7N,GAYlDjF,KAAM,SAACiF,EAAO2N,GACV,GAAKA,EAAO,0BAEZ,MAAO,CACHG,YAAe,OAAQ,CACnBD,WAAY,UACZxQ,MAAO,2BACP0Q,KAAM,EACNC,QAAS,EACTC,SAAS,IAEbC,YAAgB,QAAS,CACrBL,WAAY,UACZxQ,MAAO,2BACP8Q,UAAW,GACXC,UAAW,EACXC,QAAS,OAIrBrT,KAAM,SAACgF,EAAO2N,GACV,GAAKA,EAAO,0BAEZ,MAAO,CACH,CAAEW,MAAO,CAAEhW,GAAI,QAAUA,GAAI,QAC7B,CAAEgW,MAAO,CAAEhW,GAAI,KAAOA,GAAI,QAC1B,CAAEgW,MAAO,CAAEhW,GAAI,MAAQA,GAAI,QAC3B,CAAEgW,MAAO,CAAEhW,GAAI,UAAYA,GAAI,QAC/B,CAAEgW,MAAO,CAAEhW,GAAI,SAAWA,GAAI,SAC9B,CAAEgW,MAAO,CAAEhW,GAAI,QAAUA,GAAI,SAC7B,CAAEgW,MAAO,CAAEhW,GAAI,UAAYA,GAAI,SAC/B,CAAEgW,MAAO,CAAEhW,GAAI,cAAgBA,GAAI,YAI/C,CACIiW,QAAS,CAAC,yBAA0B","file":"component---src-pages-pie-index-js-b81a594db59ec206a563.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsivePie, defaultProps } from '@nivo/pie'\nimport { generateProgrammingLanguageStats } from '@nivo/generators'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/pie/meta.yml'\nimport mapper from '../../data/components/pie/mapper'\nimport { groups } from '../../data/components/pie/props'\n\nconst DATASET_SIZE = 5\nconst generateData = () =>\n    generateProgrammingLanguageStats(true, DATASET_SIZE).map(d => ({\n        id: d.label,\n        ...d,\n    }))\n\nconst initialProperties = {\n    margin: {\n        top: 40,\n        right: 80,\n        bottom: 80,\n        left: 80,\n    },\n\n    valueFormat: { format: '', enabled: false },\n\n    startAngle: 0,\n    endAngle: 360,\n    sortByValue: false,\n    innerRadius: 0.5,\n    padAngle: 0.7,\n    cornerRadius: 3,\n    fit: true,\n\n    colors: { scheme: 'nivo' },\n\n    borderWidth: 1,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.2]],\n    },\n\n    enableRadialLabels: true,\n    radialLabel: 'id',\n    radialLabelsSkipAngle: 10,\n    radialLabelsTextXOffset: 6,\n    radialLabelsTextColor: '#333333',\n    radialLabelsLinkOffset: 0,\n    radialLabelsLinkDiagonalLength: 16,\n    radialLabelsLinkHorizontalLength: 24,\n    radialLabelsLinkStrokeWidth: 1,\n    radialLabelsLinkColor: { from: 'color' },\n\n    enableSliceLabels: true,\n    sliceLabel: 'formattedValue',\n    sliceLabelsRadiusOffset: 0.5,\n    sliceLabelsSkipAngle: 10,\n    sliceLabelsTextColor: '#333333',\n\n    isInteractive: true,\n    'custom tooltip example': false,\n    tooltip: null,\n    'showcase pattern usage': true,\n\n    defs: [],\n    fill: [],\n\n    legends: [\n        {\n            anchor: 'bottom',\n            direction: 'row',\n            justify: false,\n            translateX: 0,\n            translateY: 56,\n            itemsSpacing: 0,\n            itemWidth: 100,\n            itemHeight: 18,\n            itemTextColor: '#999',\n            itemDirection: 'left-to-right',\n            itemOpacity: 1,\n            symbolSize: 18,\n            symbolShape: 'circle',\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Pie = () => {\n    return (\n        <ComponentTemplate\n            name=\"Pie\"\n            meta={meta.Pie}\n            icon=\"pie\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={defaultProps}\n            propertiesMapper={mapper}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                const handleArcClick = slice => {\n                    logAction({\n                        type: 'click',\n                        label: `[arc] ${slice.id}: ${slice.formattedValue}`,\n                        color: slice.color,\n                        data: slice,\n                    })\n                }\n\n                const handleLegendClick = legendItem => {\n                    logAction({\n                        type: 'click',\n                        label: `[legend] ${legendItem.label}: ${legendItem.formattedValue}`,\n                        color: legendItem.color,\n                        data: legendItem,\n                    })\n                }\n\n                return (\n                    <ResponsivePie\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={handleArcClick}\n                        legends={properties.legends.map(legend => ({\n                            ...legend,\n                            onClick: handleLegendClick,\n                        }))}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Pie\n","import React, { createElement, useCallback } from 'react'\n// @ts-ignore\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface PieSliceProps<RawDatum> {\n    datum: ComputedDatum<RawDatum>\n    path: string\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: string\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    onClick: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave: CompletePieSvgProps<RawDatum>['onMouseLeave']\n}\n\n// prettier-ignore\nexport const PieSlice = <RawDatum, >({\n    datum,\n    path,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip,\n}: PieSliceProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleTooltip = useCallback(\n        event => showTooltipFromEvent(createElement(tooltip, { datum }), event),\n        [showTooltipFromEvent, datum, tooltip]\n    )\n\n    const handleMouseEnter = useCallback(\n        event => {\n            onMouseEnter?.(datum, event)\n            handleTooltip(event)\n        },\n        [onMouseEnter, handleTooltip, datum]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            onMouseMove?.(datum, event)\n            handleTooltip(event)\n        },\n        [onMouseMove, handleTooltip, datum]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            onMouseLeave?.(datum, event)\n            hideTooltip(event)\n        },\n        [onMouseLeave, hideTooltip, datum]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick?.(datum, event)\n        },\n        [onClick, datum]\n    )\n\n    return (\n        <path\n            d={path}\n            fill={datum.fill || datum.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\n// prettier-ignore\nexport const PieTooltip = <RawDatum, >({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { OrdinalColorsInstruction } from '@nivo/colors'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['slices', 'radialLabels', 'sliceLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // radial labels\n    radialLabel: 'id',\n    enableRadialLabels: true,\n    radialLabelsSkipAngle: 0,\n    radialLabelsLinkOffset: 0,\n    radialLabelsLinkDiagonalLength: 16,\n    radialLabelsLinkHorizontalLength: 24,\n    radialLabelsLinkStrokeWidth: 1,\n    radialLabelsTextXOffset: 6,\n    radialLabelsTextColor: { theme: 'labels.text.fill' },\n    radialLabelsLinkColor: { theme: 'axis.ticks.line.stroke' },\n\n    // slices labels\n    enableSliceLabels: true,\n    sliceLabel: 'formattedValue',\n    sliceLabelsSkipAngle: 0,\n    sliceLabelsRadiusOffset: 0.5,\n    sliceLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // styling\n    colors: ({ scheme: 'nivo' } as unknown) as OrdinalColorsInstruction,\n    defs: [],\n    fill: [],\n\n    // interactivity\n    isInteractive: true,\n\n    // tooltip\n    tooltip: PieTooltip,\n\n    // legends\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: globalThis?.devicePixelRatio ?? 1,\n}\n","import { useMemo } from 'react'\nimport { get } from 'lodash'\n// @ts-ignore\nimport { arc as d3Arc, pie as d3Pie } from 'd3-shape'\nimport {\n    // @ts-ignore\n    degreesToRadians,\n    // @ts-ignore\n    radiansToDegrees,\n    // @ts-ignore\n    useValueFormatter,\n    // @ts-ignore\n    computeArcBoundingBox,\n    // @ts-ignore\n    useTheme,\n    // @ts-ignore\n    positionFromAngle,\n    // @ts-ignore\n    midAngle,\n    // @ts-ignore\n    getLabelGenerator,\n    // @ts-ignore\n    absoluteAngleRadians,\n    // @ts-ignore\n    absoluteAngleDegrees,\n} from '@nivo/core'\nimport {\n    // @ts-ignore\n    getOrdinalColorScale,\n    // @ts-ignore\n    useInheritedColor,\n    OrdinalColorsInstruction,\n    InheritedColorProp,\n} from '@nivo/colors'\nimport { defaultProps } from './props'\nimport {\n    CompletePieSvgProps,\n    ComputedDatum,\n    PieArc,\n    PieArcGenerator,\n    LabelAccessorFunction,\n    PieCustomLayerProps,\n    RadialLabelData,\n    SliceLabelData,\n} from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorsInstruction,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = useMemo(() => (typeof id === 'function' ? id : (d: RawDatum) => get(d, id)), [id])\n    const getValue = useMemo(\n        () => (typeof value === 'function' ? value : (d: RawDatum) => get(d, value)),\n        [value]\n    )\n    const formatValue = useValueFormatter(valueFormat as any)\n\n    const getColor = useMemo(() => getOrdinalColorScale(colors, 'id'), [colors])\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    startAngle: number\n    endAngle: number\n    padAngle: number\n    sortByValue: boolean\n}): Omit<ComputedDatum<RawDatum>, 'fill'>[] => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie()\n            .value((d: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>) => d.value)\n            .padAngle(degreesToRadians(padAngle))\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n\n        if (sortByValue !== true) innerPie.sortValues(null)\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(\n        () =>\n            pie(data).map(\n                (\n                    arc: Omit<PieArc, 'angle' | 'angleDeg'> & {\n                        data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                    }\n                ) => {\n                    const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                    return {\n                        ...arc.data,\n                        arc: {\n                            index: arc.index,\n                            startAngle: arc.startAngle,\n                            endAngle: arc.endAngle,\n                            padAngle: arc.padAngle,\n                            angle,\n                            angleDeg: radiansToDegrees(angle),\n                        },\n                    }\n                }\n            ),\n\n        [pie, data]\n    )\n}\n\nexport const usePieArcGenerator = ({\n    radius,\n    innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n}: {\n    radius: number\n    innerRadius: number\n    cornerRadius: number\n}): PieArcGenerator =>\n    useMemo(() => d3Arc().outerRadius(radius).innerRadius(innerRadius).cornerRadius(cornerRadius), [\n        radius,\n        innerRadius,\n        cornerRadius,\n    ])\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    'startAngle' | 'endAngle' | 'padAngle' | 'sortByValue' | 'cornerRadius'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n    })\n\n    const arcGenerator = usePieArcGenerator({\n        radius,\n        innerRadius,\n        cornerRadius,\n    })\n\n    return { dataWithArc, arcGenerator }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n    })\n\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const arcGenerator = usePieArcGenerator({\n        radius: computedProps.radius,\n        innerRadius: computedProps.innerRadius,\n        cornerRadius,\n    })\n\n    return {\n        dataWithArc,\n        arcGenerator,\n        ...computedProps,\n    }\n}\n\nexport const usePieSliceLabels = <RawDatum>({\n    enable,\n    dataWithArc,\n    skipAngle,\n    radius,\n    innerRadius,\n    radiusOffset,\n    label,\n    textColor,\n}: {\n    enable: boolean\n    dataWithArc: ComputedDatum<RawDatum>[]\n    skipAngle: number\n    radius: number\n    innerRadius: number\n    radiusOffset: number\n    label: string | LabelAccessorFunction<RawDatum>\n    textColor: InheritedColorProp<ComputedDatum<RawDatum>>\n}): SliceLabelData<RawDatum>[] => {\n    const theme = useTheme()\n    const getTextColor = useInheritedColor(textColor, theme)\n    const getLabel = useMemo(() => getLabelGenerator(label), [label])\n\n    return useMemo(() => {\n        if (!enable) return []\n\n        return dataWithArc\n            .filter(datumWithArc => skipAngle === 0 || datumWithArc.arc.angleDeg > skipAngle)\n            .map(datumWithArc => {\n                const angle = midAngle(datumWithArc.arc) - Math.PI / 2\n                const labelRadius = innerRadius + (radius - innerRadius) * radiusOffset\n                const position = positionFromAngle(angle, labelRadius)\n                const datumTextColor = getTextColor(datumWithArc)\n\n                return {\n                    ...position,\n                    label: getLabel(datumWithArc),\n                    textColor: datumTextColor,\n                    datum: datumWithArc,\n                }\n            })\n    }, [enable, dataWithArc, skipAngle, radius, innerRadius, radiusOffset, getLabel, getTextColor])\n}\n\nexport const usePieRadialLabels = <RawDatum>({\n    enable,\n    dataWithArc,\n    label,\n    textXOffset,\n    textColor,\n    radius,\n    skipAngle,\n    linkOffset,\n    linkDiagonalLength,\n    linkHorizontalLength,\n    linkColor,\n}: {\n    enable: boolean\n    dataWithArc: ComputedDatum<RawDatum>[]\n    label: string | LabelAccessorFunction<RawDatum>\n    textXOffset: number\n    textColor: InheritedColorProp<ComputedDatum<RawDatum>>\n    radius: number\n    skipAngle: number\n    linkOffset: number\n    linkDiagonalLength: number\n    linkHorizontalLength: number\n    linkColor: InheritedColorProp<ComputedDatum<RawDatum>>\n}): RadialLabelData<RawDatum>[] => {\n    const getLabel = useMemo(() => getLabelGenerator(label), [label])\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor(textColor, theme)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    return useMemo(() => {\n        if (!enable) return []\n\n        return dataWithArc\n            .filter(datum => skipAngle === 0 || datum.arc.angleDeg > skipAngle)\n            .map(datum => {\n                const angle = absoluteAngleRadians(midAngle(datum.arc) - Math.PI / 2)\n                const positionA = positionFromAngle(angle, radius + linkOffset)\n                const positionB = positionFromAngle(angle, radius + linkOffset + linkDiagonalLength)\n\n                let positionC\n                let labelPosition\n                let textAlign\n\n                if (\n                    absoluteAngleDegrees(radiansToDegrees(angle)) < 90 ||\n                    absoluteAngleDegrees(radiansToDegrees(angle)) >= 270\n                ) {\n                    positionC = { x: positionB.x + linkHorizontalLength, y: positionB.y }\n                    labelPosition = {\n                        x: positionB.x + linkHorizontalLength + textXOffset,\n                        y: positionB.y,\n                    }\n                    textAlign = 'left'\n                } else {\n                    positionC = { x: positionB.x - linkHorizontalLength, y: positionB.y }\n                    labelPosition = {\n                        x: positionB.x - linkHorizontalLength - textXOffset,\n                        y: positionB.y,\n                    }\n                    textAlign = 'right'\n                }\n\n                return {\n                    text: getLabel(datum),\n                    textColor: getTextColor(datum),\n                    position: labelPosition,\n                    align: textAlign,\n                    line: [positionA, positionB, positionC],\n                    linkColor: getLinkColor(datum),\n                    datum,\n                }\n            })\n    }, [\n        dataWithArc,\n        skipAngle,\n        radius,\n        linkOffset,\n        linkDiagonalLength,\n        linkHorizontalLength,\n        textXOffset,\n        getLabel,\n        getTextColor,\n        getLinkColor,\n    ])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    arcGenerator: PieArcGenerator\n    centerX: number\n    centerY: number\n    radius: number\n    innerRadius: number\n}): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import React from 'react'\n// @ts-ignore\nimport { line } from 'd3-shape'\n// @ts-ignore\nimport { textPropsByEngine, useTheme } from '@nivo/core'\nimport { RadialLabelData, Point } from './types'\n\nconst lineGenerator = line()\n    .x((d: Point) => d.x)\n    .y((d: Point) => d.y)\n\n// prettier-ignore\nexport const RadialLabel = <RawDatum, >({ label, linkStrokeWidth }: {\n    label: RadialLabelData<RawDatum>\n    linkStrokeWidth: number\n}) => {\n    const theme = useTheme()\n\n    return (\n        <>\n            <path\n                d={lineGenerator(label.line)}\n                fill=\"none\"\n                style={{ fill: 'none', stroke: label.linkColor }}\n                strokeWidth={linkStrokeWidth}\n            />\n            <g transform={`translate(${label.position.x}, ${label.position.y})`}>\n                <text\n                    textAnchor={textPropsByEngine.svg.align[label.align]}\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: label.textColor,\n                    }}\n                >\n                    {label.text}\n                </text>\n            </g>\n        </>\n    )\n}\n","import React from 'react'\nimport { usePieRadialLabels } from './hooks'\nimport { RadialLabel } from './RadialLabel'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface RadialLabelsProps<RawDatum> {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    label: CompletePieSvgProps<RawDatum>['radialLabel']\n    skipAngle: CompletePieSvgProps<RawDatum>['radialLabelsSkipAngle']\n    radius: number\n    linkOffset: CompletePieSvgProps<RawDatum>['radialLabelsLinkOffset']\n    linkDiagonalLength: CompletePieSvgProps<RawDatum>['radialLabelsLinkDiagonalLength']\n    linkHorizontalLength: CompletePieSvgProps<RawDatum>['radialLabelsLinkHorizontalLength']\n    linkStrokeWidth: CompletePieSvgProps<RawDatum>['radialLabelsLinkStrokeWidth']\n    textXOffset: CompletePieSvgProps<RawDatum>['radialLabelsTextXOffset']\n    textColor: CompletePieSvgProps<RawDatum>['radialLabelsTextColor']\n    linkColor: CompletePieSvgProps<RawDatum>['radialLabelsLinkColor']\n}\n\n// prettier-ignore\nexport const RadialLabels = <RawDatum, >({\n    dataWithArc,\n    label,\n    radius,\n    skipAngle,\n    linkOffset,\n    linkDiagonalLength,\n    linkHorizontalLength,\n    linkStrokeWidth,\n    textXOffset,\n    textColor,\n    linkColor,\n}: RadialLabelsProps<RawDatum>) => {\n    const radialLabels = usePieRadialLabels<RawDatum>({\n        enable: true,\n        dataWithArc,\n        label,\n        textXOffset,\n        textColor,\n        radius,\n        skipAngle,\n        linkOffset,\n        linkDiagonalLength,\n        linkHorizontalLength,\n        linkColor,\n    })\n\n    return (\n        <>\n            {radialLabels.map(labelData => (\n                <RadialLabel key={labelData.datum.id} label={labelData} linkStrokeWidth={linkStrokeWidth} />\n            ))}\n        </>\n    )\n}\n","import React, { CSSProperties } from 'react'\n// @ts-ignore\nimport { useTheme } from '@nivo/core'\nimport { usePieSliceLabels } from './hooks'\nimport { CompletePieSvgProps, ComputedDatum } from './types'\n\nconst sliceStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\ninterface SliceLabelsProps<RawDatum> {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    label: CompletePieSvgProps<RawDatum>['sliceLabel']\n    radiusOffset: CompletePieSvgProps<RawDatum>['sliceLabelsRadiusOffset']\n    radius: number\n    innerRadius: number\n    skipAngle: CompletePieSvgProps<RawDatum>['sliceLabelsSkipAngle']\n    textColor: CompletePieSvgProps<RawDatum>['sliceLabelsTextColor']\n}\n\n// prettier-ignore\nexport const SliceLabels = <RawDatum, >({\n    dataWithArc,\n    label: labelAccessor,\n    radius,\n    innerRadius,\n    radiusOffset,\n    skipAngle,\n    textColor,\n}: SliceLabelsProps<RawDatum>) => {\n    const theme = useTheme()\n\n    const labels = usePieSliceLabels({\n        enable: true,\n        dataWithArc,\n        skipAngle,\n        radius,\n        innerRadius,\n        radiusOffset,\n        label: labelAccessor,\n        textColor,\n    })\n\n    return (\n        <>\n            {labels.map(label => (\n                <g\n                    key={label.datum.id}\n                    transform={`translate(${label.x}, ${label.y})`}\n                    style={sliceStyle}\n                >\n                    <text\n                        textAnchor=\"middle\"\n                        dominantBaseline=\"central\"\n                        style={{\n                            ...theme.labels.text,\n                            fill: label.textColor,\n                        }}\n                    >\n                        {label.label}\n                    </text>\n                </g>\n            ))}\n        </>\n    )\n}\n","import React from 'react'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    dataWithArc: ComputedDatum<RawDatum>[]\n}\n\n// prettier-ignore\nconst PieLegends = <RawDatum, >({ width, height, legends, dataWithArc }: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={dataWithArc}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","import React, { ReactNode, Fragment, createElement } from 'react'\n// @ts-ignore\nimport { withContainer, SvgWrapper, bindDefs, useTheme, useDimensions } from '@nivo/core'\nimport {\n    // @ts-ignore\n    useInheritedColor,\n    InheritedColorProp,\n} from '@nivo/colors'\nimport { PieSlice } from './PieSlice'\nimport { RadialLabels } from './RadialLabels'\nimport { SliceLabels } from './SliceLabels'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\n\n// prettier-ignore\nconst Pie = <RawDatum, >({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor: _borderColor = defaultProps.borderColor as InheritedColorProp<ComputedDatum<RawDatum>>,\n\n    // radial labels\n    radialLabel = defaultProps.radialLabel,\n    enableRadialLabels = defaultProps.enableRadialLabels,\n    radialLabelsSkipAngle = defaultProps.radialLabelsSkipAngle,\n    radialLabelsLinkOffset = defaultProps.radialLabelsLinkOffset,\n    radialLabelsLinkDiagonalLength = defaultProps.radialLabelsLinkDiagonalLength,\n    radialLabelsLinkHorizontalLength = defaultProps.radialLabelsLinkHorizontalLength,\n    radialLabelsLinkStrokeWidth = defaultProps.radialLabelsLinkStrokeWidth,\n    radialLabelsTextXOffset = defaultProps.radialLabelsTextXOffset,\n    radialLabelsTextColor = defaultProps.radialLabelsTextColor,\n    radialLabelsLinkColor = defaultProps.radialLabelsLinkColor,\n\n    // slices labels\n    sliceLabel = defaultProps.sliceLabel,\n    enableSliceLabels = defaultProps.enableSliceLabels,\n    sliceLabelsSkipAngle = defaultProps.sliceLabelsSkipAngle,\n    sliceLabelsTextColor = defaultProps.sliceLabelsTextColor,\n    sliceLabelsRadiusOffset = defaultProps.sliceLabelsRadiusOffset,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const theme = useTheme()\n\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n    })\n\n    const borderColor = useInheritedColor(_borderColor, theme)\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        slices: null,\n        radialLabels: null,\n        sliceLabels: null,\n        legends: null,\n    }\n\n    if (layers.includes('slices')) {\n        layerById.slices = (\n            <g key=\"slices\" transform={`translate(${centerX},${centerY})`}>\n                {dataWithArc.map(datumWithArc => (\n                    <PieSlice<RawDatum>\n                        key={datumWithArc.id}\n                        datum={datumWithArc}\n                        path={arcGenerator(datumWithArc.arc)}\n                        borderWidth={borderWidth}\n                        borderColor={borderColor(datumWithArc)}\n                        tooltip={tooltip}\n                        isInteractive={isInteractive}\n                        onClick={onClick}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                    />\n                ))}\n            </g>\n        )\n    }\n\n    if (enableRadialLabels && layers.includes('radialLabels')) {\n        layerById.radialLabels = (\n            <g key=\"radialLabels\" transform={`translate(${centerX},${centerY})`}>\n                <RadialLabels<RawDatum>\n                    dataWithArc={dataWithArc}\n                    radius={radius}\n                    label={radialLabel}\n                    skipAngle={radialLabelsSkipAngle}\n                    linkOffset={radialLabelsLinkOffset}\n                    linkDiagonalLength={radialLabelsLinkDiagonalLength}\n                    linkHorizontalLength={radialLabelsLinkHorizontalLength}\n                    linkStrokeWidth={radialLabelsLinkStrokeWidth}\n                    textXOffset={radialLabelsTextXOffset}\n                    textColor={radialLabelsTextColor}\n                    linkColor={radialLabelsLinkColor}\n                />\n            </g>\n        )\n    }\n\n    if (enableSliceLabels && layers.includes('sliceLabels')) {\n        layerById.sliceLabels = (\n            <g key=\"sliceLabels\" transform={`translate(${centerX},${centerY})`}>\n                <SliceLabels<RawDatum>\n                    dataWithArc={dataWithArc}\n                    label={sliceLabel}\n                    radius={radius}\n                    innerRadius={innerRadius}\n                    radiusOffset={sliceLabelsRadiusOffset}\n                    skipAngle={sliceLabelsSkipAngle}\n                    textColor={sliceLabelsTextColor}\n                />\n            </g>\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                dataWithArc={dataWithArc}\n                legends={legends}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport default withContainer(Pie) as <RawDatum>(props: PieSvgProps<RawDatum>) => JSX.Element\n","import React from 'react'\n// @ts-ignore\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Pie from './Pie'\nimport { PieSvgProps } from './types'\n\n// prettier-ignore\nexport const ResponsivePie = <RawDatum, >(props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number, height: number }) => <Pie<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { createElement, useEffect, useMemo, useRef } from 'react'\nimport {\n    // @ts-ignore\n    getHoveredArc,\n    // @ts-ignore\n    getRelativeCursor,\n    // @ts-ignore\n    textPropsByEngine,\n    // @ts-ignore\n    useDimensions,\n    // @ts-ignore\n    useTheme,\n    // @ts-ignore\n    withContainer,\n    Theme,\n} from '@nivo/core'\n// @ts-ignore\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport {\n    // @ts-ignore\n    useInheritedColor,\n    InheritedColorProp,\n} from '@nivo/colors'\n// @ts-ignore\nimport { useTooltip } from '@nivo/tooltip'\nimport { useNormalizedData, usePieFromBox, usePieRadialLabels, usePieSliceLabels } from './hooks'\nimport { ComputedDatum, PieCanvasProps, RadialLabelData, SliceLabelData } from './types'\nimport { defaultProps } from './props'\n\n// prettier-ignore\nconst drawSliceLabels = <RawDatum, >(\n    ctx: CanvasRenderingContext2D,\n    labels: SliceLabelData<RawDatum>[],\n    theme: Theme\n) => {\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels!.text!.fontSize}px ${theme.labels!.text!.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.save()\n        ctx.translate(label.x, label.y)\n        ctx.fillStyle = label.textColor\n        ctx.fillText(`${label.label}`, 0, 0)\n        ctx.restore()\n    })\n}\n\n// prettier-ignore\nconst drawRadialLabels = <RawDatum, >(\n    ctx: CanvasRenderingContext2D,\n    labels: RadialLabelData<RawDatum>[],\n    theme: Theme,\n    linkStrokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels!.text!.fontSize}px ${theme.labels!.text!.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.save()\n        ctx.translate(label.position.x, label.position.y)\n        ctx.fillStyle = label.textColor\n        ctx.textAlign = textPropsByEngine.canvas.align[label.align]\n        ctx.fillText(`${label.text}`, 0, 0)\n        ctx.restore()\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = linkStrokeWidth\n        label.line.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        if (linkStrokeWidth > 0) ctx.stroke()\n    })\n}\n\n// prettier-ignore\nconst PieCanvas = <RawDatum, >({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = 1,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorProp<ComputedDatum<RawDatum>>,\n\n    // radial labels\n    radialLabel = defaultProps.radialLabel,\n    enableRadialLabels = defaultProps.enableRadialLabels,\n    radialLabelsSkipAngle = defaultProps.radialLabelsSkipAngle,\n    radialLabelsLinkOffset = defaultProps.radialLabelsLinkOffset,\n    radialLabelsLinkDiagonalLength = defaultProps.radialLabelsLinkDiagonalLength,\n    radialLabelsLinkHorizontalLength = defaultProps.radialLabelsLinkHorizontalLength,\n    radialLabelsLinkStrokeWidth = defaultProps.radialLabelsLinkStrokeWidth,\n    radialLabelsTextXOffset = defaultProps.radialLabelsTextXOffset,\n    radialLabelsTextColor = defaultProps.radialLabelsTextColor,\n    radialLabelsLinkColor = defaultProps.radialLabelsLinkColor,\n\n    // slices labels\n    sliceLabel = defaultProps.sliceLabel,\n    enableSliceLabels = defaultProps.enableSliceLabels,\n    sliceLabelsSkipAngle = defaultProps.sliceLabelsSkipAngle,\n    sliceLabelsTextColor = defaultProps.sliceLabelsTextColor,\n    sliceLabelsRadiusOffset = defaultProps.sliceLabelsRadiusOffset,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n    })\n\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const radialLabels = usePieRadialLabels<RawDatum>({\n        enable: enableRadialLabels,\n        dataWithArc,\n        label: radialLabel,\n        textXOffset: radialLabelsTextXOffset,\n        textColor: radialLabelsTextColor,\n        radius,\n        skipAngle: radialLabelsSkipAngle,\n        linkOffset: radialLabelsLinkOffset,\n        linkDiagonalLength: radialLabelsLinkDiagonalLength,\n        linkHorizontalLength: radialLabelsLinkHorizontalLength,\n        linkColor: radialLabelsLinkColor,\n    })\n\n    const sliceLabels = usePieSliceLabels<RawDatum>({\n        enable: enableSliceLabels,\n        dataWithArc,\n        label: sliceLabel,\n        radius,\n        innerRadius,\n        radiusOffset: sliceLabelsRadiusOffset,\n        skipAngle: sliceLabelsSkipAngle,\n        textColor: sliceLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top);\n\n        (arcGenerator as any).context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableRadialLabels === true) {\n            drawRadialLabels(ctx, radialLabels, theme, radialLabelsLinkStrokeWidth)\n        }\n\n        if (enableSliceLabels === true) {\n            drawSliceLabels(ctx, sliceLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        getBorderColor,\n        enableRadialLabels,\n        radialLabels,\n        enableSliceLabels,\n        sliceLabels,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = getHoveredArc(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport default withContainer(PieCanvas) as <RawDatum>(\n    props: PieCanvasProps<RawDatum>\n) => JSX.Element\n","import React from 'react'\n// @ts-ignore\nimport { ResponsiveWrapper } from '@nivo/core'\nimport PieCanvas from './PieCanvas'\nimport { PieCanvasProps } from './types'\n\n// prettier-ignore\nexport const ResponsivePieCanvas = <RawDatum, >(props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number, height: number }) => <PieCanvas<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { defaultProps as defaults } from '@nivo/pie'\nimport {\n    themeProperty,\n    defsProperties,\n    groupProperties,\n    getLegendsProps,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data, which should be immutable.',\n        description: `\n            Chart data, which must conform to this structure\n            if using the default \\`id\\` and \\`value\\` accessors:\n            \n            \\`\\`\\`\n            Array<{\n                id:    string | number,\n                value: number\n            }>\n            \\`\\`\\`\n            \n            If using a different data structure, you must make sure\n            to adjust both \\`id\\` and \\`value\\`. Meaning you can provide\n            a completely different data structure as long as \\`id\\` and \\`value\\`\n            return the appropriate values.\n            \n            Immutability of the data is important as re-computations\n            depends on it.\n        `,\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'id',\n        group: 'Base',\n        help: 'ID accessor.',\n        description: `\n            Define how to access the ID of each datum,\n            by default, nivo will look for the \\`id\\` property.\n        `,\n        type: 'string | (datum: RawDatum): string | number',\n        required: false,\n        defaultValue: defaults.id,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        help: 'Value accessor.',\n        description: `\n            Define how to access the value of each datum,\n            by default, nivo will look for the \\`value\\` property.\n        `,\n        type: 'string | (datum: RawDatum): number',\n        required: false,\n        defaultValue: defaults.id,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'string | (value: number) => string | number',\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsivePie/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsivePie/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'startAngle',\n        help: 'Start angle (in degrees), useful to make gauges for example.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.startAngle,\n        controlType: 'angle',\n        group: 'Base',\n        controlOptions: {\n            unit: '°',\n            min: -180,\n            max: 360,\n            step: 5,\n        },\n    },\n    {\n        key: 'endAngle',\n        help: 'End angle (in degrees), useful to make gauges for example.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.endAngle,\n        controlType: 'angle',\n        group: 'Base',\n        controlOptions: {\n            unit: '°',\n            min: -360,\n            max: 360,\n            step: 5,\n        },\n    },\n    {\n        key: 'fit',\n        help: `If 'true', pie will be omptimized to occupy more space when using partial pie.`,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.fit,\n        controlType: 'switch',\n        group: 'Base',\n    },\n    {\n        key: 'innerRadius',\n        help: `Donut chart if greater than 0. Value should be between 0~1 as it's a ratio from original radius.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.innerRadius,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 0.95,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'padAngle',\n        help: 'Padding between each pie slice.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.padAngle,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: '°',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'cornerRadius',\n        help: 'Rounded slices.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.cornerRadius,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'sortByValue',\n        help: `If 'true', arcs will be ordered according to their associated value.`,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.sortByValue,\n        controlType: 'switch',\n        group: 'Base',\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg', 'api']),\n    {\n        key: 'showcase pattern usage',\n        flavors: ['svg'],\n        help: 'Patterns.',\n        description: `\n            You can use \\`defs\\` and \\`fill\\` properties\n            to use patterns, see\n            [dedicated guide](self:/guides/patterns)\n            for further information.\n        `,\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Slices border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'enableRadialLabels',\n        help: 'Enable/disable radial labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableRadialLabels,\n        controlType: 'switch',\n        group: 'Radial labels',\n    },\n    {\n        key: 'radialLabel',\n        help: 'Radial label',\n        description: `\n            Defines how to get label text,\n            can be a string (used to access current node data property)\n            or a function which will receive the actual node data.\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.radialLabel,\n        controlType: 'choices',\n        group: 'Radial labels',\n        controlOptions: {\n            choices: ['id', 'value', `d => \\`\\${d.id} (\\${d.value})\\``].map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'radialLabelsSkipAngle',\n        help: `Skip label if corresponding slice's angle is lower than provided value.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsSkipAngle,\n        controlType: 'range',\n        group: 'Radial labels',\n        controlOptions: {\n            unit: '°',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'radialLabelsLinkOffset',\n        help: `Link offset from pie outer radius, useful to have links overlapping pie slices.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsLinkOffset,\n        controlType: 'range',\n        group: 'Radial labels',\n        controlOptions: {\n            unit: 'px',\n            min: -24,\n            max: 24,\n            step: 1,\n        },\n    },\n    {\n        key: 'radialLabelsLinkDiagonalLength',\n        help: `Link diagonal length.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsLinkDiagonalLength,\n        controlType: 'range',\n        group: 'Radial labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n            step: 1,\n        },\n    },\n    {\n        key: 'radialLabelsLinkHorizontalLength',\n        help: `Links horizontal length.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsLinkHorizontalLength,\n        controlType: 'range',\n        group: 'Radial labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n            step: 1,\n        },\n    },\n    {\n        key: 'radialLabelsTextXOffset',\n        help: `X offset from links' end.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsTextXOffset,\n        controlType: 'range',\n        group: 'Radial labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n            step: 1,\n        },\n    },\n    {\n        key: 'radialLabelsLinkStrokeWidth',\n        help: 'Links stroke width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsLinkStrokeWidth,\n        controlType: 'lineWidth',\n        group: 'Radial labels',\n    },\n    {\n        key: 'radialLabelsTextColor',\n        help: 'Defines how to compute radial label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.radialLabelsTextColor,\n        controlType: 'inheritedColor',\n        group: 'Radial labels',\n    },\n    {\n        key: 'radialLabelsLinkColor',\n        help: 'Defines how to compute radial label link color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.radialLabelsLinkColor,\n        controlType: 'inheritedColor',\n        group: 'Radial labels',\n    },\n    {\n        key: 'enableSliceLabels',\n        help: 'Enable/disable slices labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableSliceLabels,\n        controlType: 'switch',\n        group: 'Slice labels',\n    },\n    {\n        key: 'sliceLabel',\n        help:\n            'Defines how to get label text, can be a string (used to access current node data property) or a function which will receive the actual node data.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.sliceLabel,\n        controlType: 'choices',\n        group: 'Slice labels',\n        controlOptions: {\n            choices: ['id', 'value', 'formattedValue', `d => \\`\\${d.id} (\\${d.value})\\``].map(\n                choice => ({\n                    label: choice,\n                    value: choice,\n                })\n            ),\n        },\n    },\n    {\n        key: 'sliceLabelsRadiusOffset',\n        help: `\n            Define the radius to use to determine the label position, starting from inner radius,\n            this is expressed as a ratio.\n        `,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.sliceLabelsRadiusOffset,\n        controlType: 'range',\n        group: 'Slice labels',\n        controlOptions: {\n            min: 0,\n            max: 2,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'sliceLabelsSkipAngle',\n        help: `Skip label if corresponding slice's angle is lower than provided value.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.sliceLabelsSkipAngle,\n        controlType: 'range',\n        group: 'Slice labels',\n        controlOptions: {\n            unit: '°',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'sliceLabelsTextColor',\n        help: 'Defines how to compute slice label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.sliceLabelsTextColor,\n        controlType: 'inheritedColor',\n        group: 'Slice labels',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n            \n            The layer component which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`Pie\\` component.\n\n            When using the canvas implementation, the function\n            will receive the canvas 2d context as first argument\n            and the chart's context and computed data as second.\n\n            Please make sure to use \\`context.save()\\` and\n            \\`context.restore()\\` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n            \n            The context passed to layers has the following structure:\n            \n            \\`\\`\\`\n            {\n                dataWithArc:  DatumWithArc[],\n                arcGenerator: Function\n                centerX:      number\n                centerY:      number\n                radius:       number\n                innerRadius:  number\n            }\n            \\`\\`\\`\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaults.layers,\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseEnter handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseMove handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseLeave handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onClick handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: 'Component',\n        required: false,\n        help: 'Custom tooltip component',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the following props:\n            \n            \\`\\`\\`\n            {\n                datum: PieComputedDatum\n            }\n            \\`\\`\\`\n            \n            You can also customize the style of the tooltip using\n            the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        flavors: ['svg', 'canvas'],\n        help: 'Showcase custom tooltip.',\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'legends',\n        flavors: ['svg', 'canvas'],\n        type: 'Legend[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 0,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { patternDotsDef, patternLinesDef } from '@nivo/core'\nimport { mapFormat, settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    background: #333;\n    padding: 12px 16px;\n    font-size: 12px;\n    border-radius: 2px;\n`\nconst TooltipKey = styled.span``\nconst TooltipValue = styled.span`\n    font-weight: 600;\n`\n\nconst CustomTooltip = ({ datum }) => (\n    <TooltipWrapper style={{ color: datum.color }}>\n        <TooltipKey>id</TooltipKey>\n        <TooltipValue>{datum.id}</TooltipValue>\n        <TooltipKey>value</TooltipKey>\n        <TooltipValue>{datum.value}</TooltipValue>\n        <TooltipKey>formattedValue</TooltipKey>\n        <TooltipValue>{datum.formattedValue}</TooltipValue>\n        <TooltipKey>color</TooltipKey>\n        <TooltipValue>{datum.color}</TooltipValue>\n    </TooltipWrapper>\n)\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        radialLabel: value => {\n            if (value === `d => \\`\\${d.id} (\\${d.value})\\``) return d => `${d.id} (${d.value})`\n            return value\n        },\n        sliceLabel: value => {\n            if (value === `d => \\`\\${d.id} (\\${d.value})\\``) return d => `${d.id} (${d.value})`\n            return value\n        },\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n        theme: (value, values) => {\n            if (!values['custom tooltip example']) return value\n\n            return {\n                ...values.theme,\n                tooltip: {\n                    container: {\n                        ...values.theme.tooltip.container,\n                        background: '#333',\n                    },\n                },\n            }\n        },\n        defs: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                patternDotsDef('dots', {\n                    background: 'inherit',\n                    color: 'rgba(255, 255, 255, 0.3)',\n                    size: 4,\n                    padding: 1,\n                    stagger: true,\n                }),\n                patternLinesDef('lines', {\n                    background: 'inherit',\n                    color: 'rgba(255, 255, 255, 0.3)',\n                    rotation: -45,\n                    lineWidth: 6,\n                    spacing: 10,\n                }),\n            ]\n        },\n        fill: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                { match: { id: 'ruby' }, id: 'dots' },\n                { match: { id: 'c' }, id: 'dots' },\n                { match: { id: 'go' }, id: 'dots' },\n                { match: { id: 'python' }, id: 'dots' },\n                { match: { id: 'scala' }, id: 'lines' },\n                { match: { id: 'lisp' }, id: 'lines' },\n                { match: { id: 'elixir' }, id: 'lines' },\n                { match: { id: 'javascript' }, id: 'lines' },\n            ]\n        },\n    },\n    {\n        exclude: ['custom tooltip example', 'showcase pattern usage'],\n    }\n)\n"],"sourceRoot":""}