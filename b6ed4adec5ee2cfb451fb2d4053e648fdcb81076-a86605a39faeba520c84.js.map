{"version":3,"file":"b6ed4adec5ee2cfb451fb2d4053e648fdcb81076-a86605a39faeba520c84.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/./src/components/components/api-client/ApiPreview.tsx","webpack://nivo-website/./src/components/components/api-client/ApiTabs.tsx","webpack://nivo-website/./src/components/components/api-client/ApiSubmit.tsx","webpack://nivo-website/./src/components/components/api-client/ApiResponse.tsx","webpack://nivo-website/./src/components/components/api-client/ApiClient.tsx","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ApiPreviewProps {\n    responseStatus: number | null\n    chartUrl: string\n}\n\nexport const ApiPreview = ({ responseStatus, chartUrl }: ApiPreviewProps) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n}\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n","import React, { useState } from 'react'\nimport styled, { keyframes, useTheme } from 'styled-components'\nimport media from '../../../theming/mediaQueries'\nimport { CodeBlock } from '../../CodeBlock'\nimport { ApiPreview } from './ApiPreview'\n\nconst tabs = ['preview', 'body', 'data'] as const\ntype Tab = typeof tabs[number]\n\ninterface ApiTabsProps<Data, Body> {\n    chartClass: string\n    data: Data\n    body: Body\n    isLoading: boolean\n    responseStatus: number | null\n    chartUrl: string\n}\n\nexport function ApiTabs<Data = any, Body = any>({\n    chartClass,\n    data,\n    body,\n    isLoading,\n    responseStatus,\n    chartUrl,\n}: ApiTabsProps<Data, Body>) {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState<Tab>('preview')\n    const [hoverTab, setHoverTab] = useState<Tab | null>(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview responseStatus={responseStatus} chartUrl={chartUrl} />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.55);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 55%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span<{\n    isCurrent: boolean\n}>`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Loader = ({ isLoading }: { isLoading: boolean }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n\nconst LoaderContainer = styled.div<{\n    isLoading: boolean\n}>`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span<{\n    index: number\n}>`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ApiSubmitProps {\n    loading: boolean\n    onClick: () => void\n}\n\nexport const ApiSubmit = ({ loading, onClick }: ApiSubmitProps) => {\n    return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n}\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ApiResponseProps {\n    responseStatus: number | null\n    response: any\n}\n\nexport const ApiResponse = ({ responseStatus, response }: ApiResponseProps) => {\n    let responseContent = 'no response available'\n    if (response) {\n        responseContent = JSON.stringify(response, null, '  ')\n    }\n\n    return (\n        <Container>\n            <Header>Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}</Header>\n            <ResponseJson>{responseContent}</ResponseJson>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport { ComponentPage } from '../ComponentPage'\nimport { ComponentHeader } from '../ComponentHeader'\nimport { ComponentFlavorSelector } from '../ComponentFlavorSelector'\nimport { ComponentDescription } from '../ComponentDescription'\nimport { ComponentSettings } from '../ComponentSettings'\nimport { ApiTabs } from './ApiTabs'\nimport { ApiSubmit } from './ApiSubmit'\nimport { ApiResponse } from './ApiResponse'\nimport config from '../../../data/config'\nimport { ChartPropertiesGroup, Flavor } from '../../../types'\n\nconst description = (component: string) => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\ninterface ApiClientProps {\n    componentName: string\n    chartClass: string\n    apiPath: string\n    dataProperty?: string\n    propsMapper?: (props: any) => any\n    defaultProps: any\n    flavors: {\n        flavor: Flavor\n        path: string\n    }[]\n    controlGroups: ChartPropertiesGroup[]\n}\n\nexport const ApiClient = ({\n    componentName,\n    chartClass,\n    apiPath,\n    dataProperty = 'data',\n    propsMapper = (props: any) => props,\n    defaultProps,\n    flavors,\n    controlGroups,\n}: ApiClientProps) => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [props, setProps] = useState(defaultProps)\n    const [responseStatus, setResponseStatus] = useState<number | null>(null)\n    const [response, setResponse] = useState<any | null>(null)\n\n    const handleSettingsUpdate = useCallback(\n        (settings: any) => {\n            setProps(settings)\n        },\n        [setProps]\n    )\n\n    const handleSubmit = useCallback(() => {\n        setIsLoading(true)\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                setIsLoading(false)\n                setResponseStatus(res.status)\n\n                return res.json()\n            })\n            .then(setResponse)\n            .catch(err => {\n                console.error(err)\n            })\n    }, [apiPath, propsMapper, props, setIsLoading, setIsLoading, setResponseStatus, setResponse])\n\n    const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n    return (\n        <Layout>\n            <ComponentPage>\n                <ComponentHeader\n                    chartClass={`${componentName} HTTP API`}\n                    tags={[`POST ${apiPath}`]}\n                />\n                {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                <ComponentDescription description={description(componentName)} />\n                <ApiTabs\n                    chartClass={chartClass}\n                    data={props[dataProperty]}\n                    body={propsMapper(props)}\n                    isLoading={isLoading}\n                    responseStatus={responseStatus}\n                    chartUrl={response ? response.url : null}\n                />\n                <ControlPanel>\n                    <SubmitWrapper>\n                        <ApiSubmit loading={isLoading} onClick={handleSubmit} />\n                    </SubmitWrapper>\n                    <ApiResponse responseStatus={responseStatus} response={response} />\n                </ControlPanel>\n                <ComponentSettings\n                    settings={props}\n                    flavors={flavorKeys}\n                    currentFlavor=\"api\"\n                    groups={controlGroups}\n                    onChange={handleSettingsUpdate}\n                />\n            </ComponentPage>\n        </Layout>\n    )\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.55);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 55%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] }: { exclude?: string[] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    source: string\n    target: string\n    distance: number\n}\n\ntype ExtraNode = {\n    id: string\n    height: number\n    color: string\n    size: number\n}\n\nexport const generateNetworkData = ({\n    rootSize = 32,\n    midSize = 24,\n    leafSize = 12,\n    minMidNodes = 5,\n    maxMidNodes = 11,\n    minLeaves = 3,\n    maxLeaves = 9,\n}: {\n    rootSize?: number\n    midSize?: number\n    leafSize?: number\n    minMidNodes?: number\n    maxMidNodes?: number\n    minLeaves?: number\n    maxLeaves?: number\n} = {}) => {\n    const rootNode = {\n        id: 'Node 0',\n        height: 2,\n        size: rootSize,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `Node ${k + 1}`,\n        height: 1,\n        size: midSize,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: 'Node 0',\n            target: source.id,\n            distance: 80,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 80,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                height: 0,\n                size: leafSize,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 50,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\ninterface LibTreeDatum {\n    name: string\n    loc?: number\n    color: string\n    children?: LibTreeDatum[]\n}\n\nexport const generateLibTree = (\n    name = 'nivo',\n    limit?: number | null,\n    children = libTreeItems\n): LibTreeDatum => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: LibTreeDatum = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["day","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","days","range","ApiPreview","responseStatus","chartUrl","Link","href","target","rel","Image","src","alt","EmptyContainer","styled","theme","colors","textLight","tabs","ApiTabs","chartClass","data","body","isLoading","useTheme","useState","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","map","tab","isCurrent","icon","iconColors","NavItem","onClick","onMouseEnter","onMouseLeave","Icon","id","Content","CodeBlock","JSON","stringify","Loader","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","background","text","LoaderContainer","LoaderBar","index","loaderBarAnimation","keyframes","accent","ApiSubmit","loading","Button","ApiResponse","response","responseContent","Container","Header","ResponseJson","borderLight","ApiClient","component","componentName","apiPath","dataProperty","propsMapper","props","defaultProps","flavors","controlGroups","setIsLoading","setProps","setResponseStatus","setResponse","handleSettingsUpdate","useCallback","settings","handleSubmit","fetch","config","method","headers","Accept","then","res","status","json","err","console","error","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","tags","ComponentFlavorSelector","current","ComponentDescription","description","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","groups","onChange","cardAltBackground","settingsMapper","mapping","exclude","options","overrides","Object","keys","forEach","key","omit","mapAxis","type","value","upperFirst","enable","mapFormat","format","enabled","undefined","randColor","Math","round","random","countryCodes","names","programmingLanguages","generateBulletData","max","title","subtitle","rangeCount","measureCount","markerCount","float","ranges","reduce","remaining","acc","measures","length","markers","generateChordData","size","minValue","maxValue","maxSize","min","selectedKeys","slice","matrix","generateNetworkData","rootSize","midSize","leafSize","minMidNodes","maxMidNodes","minLeaves","maxLeaves","rootNode","height","color","nodes","Array","from","_","k","links","extraNodes","push","source","distance","concat","generateParallelCoordinatesData","shuffle","availableNodes","n","name","getNodeTargets","currentPath","targets","filter","Error","includes","join","targetId","getNodesTargets","targetsById","link","generateSankeyData","nodeCount","maxIterations","assign","node","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","categoryCount","group","groupIndex","price","datum","volume","categories","randomizeSwarmPlotData","previousData","d","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","label","language","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","types","country","x","find","y","generateSeries","ids","xKeys","generateDayCounts","to","timeDays","dayFormat","timeFormat","generateOrderedDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","i","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","copyArray","shuffleSelf","module","exports","array","nativeFloor","floor","nativeRandom","lower","upper","values","collection","arrayMap","object","baseRandom","lastIndex","rand","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","isArray","baseValues"],"sourceRoot":""}