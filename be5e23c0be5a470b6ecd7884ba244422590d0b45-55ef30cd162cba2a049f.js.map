{"version":3,"file":"be5e23c0be5a470b6ecd7884ba244422590d0b45-55ef30cd162cba2a049f.js","mappings":"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","sources":["webpack://nivo-website/./src/data/components/scatterplot/generator.ts","webpack://nivo-website/./src/data/components/scatterplot/mapper.ts","webpack://nivo-website/./src/data/components/scatterplot/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/utils.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/AnnotationNote.tsx","webpack://nivo-website/../src/AnnotationLink.tsx","webpack://nivo-website/../src/CircleAnnotationOutline.tsx","webpack://nivo-website/../src/DotAnnotationOutline.tsx","webpack://nivo-website/../src/RectAnnotationOutline.tsx","webpack://nivo-website/../src/Annotation.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/svg/symbols/SymbolCircle.tsx","webpack://nivo-website/../src/svg/symbols/SymbolSquare.tsx","webpack://nivo-website/../src/svg/symbols/SymbolTriangle.tsx","webpack://nivo-website/../src/defaults.ts","webpack://nivo-website/../src/svg/ContinuousColorsLegendSvg.tsx","webpack://nivo-website/../src/svg/AnchoredContinuousColorsLegendSvg.tsx","webpack://nivo-website/../src/svg/LegendSvgItem.tsx","webpack://nivo-website/../src/svg/symbols/SymbolDiamond.tsx","webpack://nivo-website/../src/svg/LegendSvg.tsx","webpack://nivo-website/../src/svg/BoxLegendSvg.tsx","webpack://nivo-website/../node_modules/lodash/_baseFilter.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/filter.js","webpack://nivo-website/../node_modules/lodash/random.js"],"sourcesContent":["import range from 'lodash/range'\nimport random from 'lodash/random'\n\nconst keys = ['group A', 'group B', 'group C', 'group D', 'group E']\nconst ageRange = [0, 100]\nconst weightRange = [0, 120]\n\nconst generateData = size =>\n    keys.map(key => ({\n        id: key,\n        data: range(size).map(i => ({\n            x: random(ageRange[0], ageRange[1]),\n            y: random(weightRange[0], weightRange[1]),\n        })),\n    }))\n\nexport const generateLightDataSet = () => generateData(50)\n\nexport const generateHeavyDataSet = () => generateData(800)\n","import { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        xFormat: mapFormat,\n        yFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","import { commonDefaultProps, svgDefaultProps } from '@nivo/scatterplot'\nimport {\n    themeProperty,\n    motionProperties,\n    getLegendsProps,\n    groupProperties,\n} from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    ordinalColors,\n    blendMode,\n    chartGrid,\n    axes,\n    isInteractive,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg', 'canvas']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        flavors: allFlavors,\n        type: 'Object[]',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:   string | number\n                data: Array<{\n                    x: number | string | Date\n                    y: number | string | Date\n                }>\n            }>\n            \\`\\`\\`\n\n            Please note that you should adjust \\`xScale\\`\n            and \\`yScale\\` according to \\`x\\` and \\`y\\` type,\n            for example if you use dates, you should use\n            a \\`time\\` scale.\n        `,\n        required: true,\n    },\n    {\n        key: 'xScale',\n        type: 'object',\n        help: `X scale configuration.`,\n        flavors: allFlavors,\n        group: 'Base',\n        required: false,\n        control: {\n            type: 'object',\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type, supports linear, point and time scales.`,\n                    type: 'string',\n                    flavors: allFlavors,\n                    required: true,\n                    control: {\n                        type: 'choices',\n                        disabled: true,\n                        choices: ['linear'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Minimum scale value.',\n                    flavors: allFlavors,\n                    required: false,\n                    type: `number | 'auto'`,\n                    control: {\n                        type: 'switchableRange',\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Maximum scale value.',\n                    flavors: allFlavors,\n                    required: false,\n                    type: `number | 'auto'`,\n                    control: {\n                        type: 'switchableRange',\n                        disabledValue: 'auto',\n                        defaultValue: 1200,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'xFormat',\n        group: 'Base',\n        flavors: allFlavors,\n        required: false,\n        type: 'string | Function',\n        help: 'Optional formatter for x values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        control: { type: 'valueFormat' },\n    },\n    {\n        key: 'yScale',\n        group: 'Base',\n        flavors: allFlavors,\n        type: 'object',\n        help: `Y scale configuration.`,\n        required: false,\n        control: {\n            type: 'object',\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type, supports linear, point and time scales.`,\n                    type: 'string',\n                    flavors: allFlavors,\n                    required: true,\n                    control: {\n                        type: 'choices',\n                        disabled: true,\n                        choices: ['linear'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Minimum scale value.',\n                    flavors: allFlavors,\n                    required: false,\n                    type: `number | 'auto'`,\n                    control: {\n                        type: 'switchableRange',\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Maximum scale value.',\n                    required: false,\n                    flavors: allFlavors,\n                    type: `number | 'auto'`,\n                    control: {\n                        type: 'switchableRange',\n                        disabledValue: 'auto',\n                        defaultValue: 1200,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'yFormat',\n        group: 'Base',\n        flavors: allFlavors,\n        required: false,\n        type: 'string | Function',\n        help: 'Optional formatter for y values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        control: { type: 'valueFormat' },\n    },\n    {\n        key: 'nodeId',\n        group: 'Base',\n        flavors: allFlavors,\n        required: false,\n        defaultValue: '(d) => `${d.serieId}.${d.index}`',\n        type: 'string | (datum) => string',\n        help: `ID accessor for the node.`,\n        description: `\n            Define how to determine the id of each node on the plot. This value\n            will impact animation. Nodes will transition from a previous state\n            at the same index, thus, it can be  useful to specify this property\n            if we want to establish some continuity between nodes at different\n            index.\n\n            By default nivo will join together the serie.id and datum index.\n        `,\n    },\n    {\n        key: 'nodeSize',\n        group: 'Base',\n        flavors: allFlavors,\n        defaultValue: commonDefaultProps.nodeSize,\n        type: 'number | object | Function',\n        required: false,\n        help: `How to compute node size, static or dynamic.`,\n        description: `\n            If you provide a **number**, all nodes will have the same\n            **fixed size**.\n\n            You can also use an object to define a varying size,\n            it must conform to the following interface:\n\n            \\`\\`\\`\n            {\n                key:    string\n                values: [min: number, max: number]\n                sizes:  [min: number, max: number]\n            }\n            \\`\\`\\`\n\n            Then the size of each node will **depend on the value\n            of \\`key\\` and \\`sizes\\`**.\n\n            If you use a **custom function**, it will receive the current\n            node and must **return a number**.\n        `,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 2,\n            max: 24,\n        },\n    },\n    ...chartDimensions(allFlavors),\n    themeProperty(['svg', 'canvas']),\n    ordinalColors({\n        flavors: allFlavors,\n        defaultValue: commonDefaultProps.colors,\n    }),\n    blendMode({\n        flavors: ['svg'],\n        target: 'nodes',\n        defaultValue: 'normal', // commonDefaultProps.blendMode,\n    }),\n    {\n        key: 'layers',\n        flavors: ['svg', 'canvas'],\n        group: 'Customization',\n        help: 'Defines the order of layers.',\n        type: '(string | Component)[]',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`grid\\`, \\`axes\\`, \\`points\\`, \\`markers\\`,\n            \\`mesh\\`, \\`legends\\`.\n\n            You can also use this to insert extra layers\n            to the chart.\n\n            For \\`ScatterPlot\\`, the extra layer should be a component\n            and will receive current chart context as props.\n\n            If using \\`ScatterPlotCanvas\\`, the extra layer should be\n            a function and will receive canvas context as first argument\n            and current chart context object as second.\n        `,\n        required: false,\n        defaultValue: svgDefaultProps.layers,\n    },\n    {\n        key: 'nodeComponent',\n        flavors: ['svg'],\n        group: 'Customization',\n        help: 'Override default node rendering for SVG implementation.',\n        type: 'FunctionComponent<ScatterPlotNodeProps<RawDatum>>',\n        description: `\n            When you override the default node component, you should use\n            an \\`animated\\` element if you wish to preserve transitions,\n            for example:\n            \n            \\`\\`\\`\n            import { animated } from '@react-spring/web'\n            \n            export const MyCustomNode = (props) => (\n                <animated.circle\n                    cx={props.style.x}\n                    cy={props.style.y}\n                    r={props.style.size.to(size => size / 2)}\n                    fill={style.color}\n                    style={{ mixBlendMode: props.blendMode }}\n                />\n            )\n            \\`\\`\\`\n            \n            The \\`style\\` property contains \\`react-spring\\` values, suitable\n            for \\`animated.*\\` elements.\n            \n            You can have a look at the [default node implementation](https://github.com/plouc/nivo/blob/master/packages/scatterplot/src/Node.tsx)\n            to see how props are used by default.\n        `,\n        required: false,\n    },\n    {\n        key: 'renderNode',\n        flavors: ['canvas'],\n        group: 'Customization',\n        help: 'Override default node rendering for canvas implementation.',\n        type: '(ctx: CanvasRenderingContext2D, props: ScatterPlotLayerProps<RawDatum>) => void',\n        description: `\n            This is how the default rendering is done:\n            \n            \\`\\`\\`\n            const renderNode = (ctx, node) => {\n                ctx.beginPath()\n                ctx.arc(node.x, node.y, node.size / 2, 0, 2 * Math.PI)\n                ctx.fillStyle = node.color\n                ctx.fill()\n            }\n            \\`\\`\\`\n        `,\n        required: false,\n    },\n    ...chartGrid({\n        flavors: allFlavors,\n        values: true,\n        xDefault: commonDefaultProps.enableGridX,\n        yDefault: commonDefaultProps.enableGridY,\n    }),\n    ...axes({ flavors: allFlavors }),\n    isInteractive({\n        flavors: ['svg', 'canvas'],\n        defaultValue: commonDefaultProps.isInteractive,\n    }),\n    {\n        key: 'useMesh',\n        group: 'Interactivity',\n        flavors: ['svg'],\n        help: 'Use a mesh to detect mouse interactions.',\n        type: 'boolean',\n        required: false,\n        defaultValue: true, // commonDefaultProps.useMesh,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'debugMesh',\n        help: 'Display mesh used to detect mouse interactions (voronoi cells).',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: commonDefaultProps.debugMesh,\n        control: { type: 'switch' },\n        group: 'Interactivity',\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will\n            receive the node as a property.\n\n            You can also customize the tooltip style\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        flavors: allFlavors,\n        help: 'onMouseEnter handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        flavors: allFlavors,\n        help: 'onMouseMove handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        flavors: allFlavors,\n        help: 'onMouseLeave handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        flavors: allFlavors,\n        help: 'onClick handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'legends',\n        group: 'Legends',\n        flavors: ['svg', 'canvas'],\n        type: 'object[]',\n        help: `Optional chart's legends.`,\n        required: false,\n        control: {\n            type: 'array',\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend: any) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 0,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                onClick: (data: any) => {\n                    console.log(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n    {\n        key: 'annotations',\n        group: 'Annotations',\n        flavors: allFlavors,\n        help: 'Extra annotations.',\n        type: 'object[]',\n        required: false,\n    },\n    {\n        key: 'markers',\n        group: 'Annotations',\n        help: 'Extra markers.',\n        type: 'object[]',\n        flavors: ['svg'],\n        required: false,\n    },\n    ...motionProperties(['svg'], svgDefaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\nimport { AxisProps, CanvasAxisProps } from '@nivo/axes'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] }: { exclude?: string[] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport type AxisWithToggle<Axis extends AxisProps | CanvasAxisProps> = NonNullable<Axis> & {\n    enable: boolean\n}\n\nexport const mapAxis = (type: 'top' | 'right' | 'bottom' | 'left') => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: string; enabled: boolean }) =>\n    enabled ? format : undefined\n","export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { ContinuousColorsLegendProps } from './types'\n\nexport const continuousColorsLegendDefaults: {\n    length: NonNullable<ContinuousColorsLegendProps['length']>\n    thickness: NonNullable<ContinuousColorsLegendProps['thickness']>\n    direction: NonNullable<ContinuousColorsLegendProps['direction']>\n    tickPosition: NonNullable<ContinuousColorsLegendProps['tickPosition']>\n    tickSize: NonNullable<ContinuousColorsLegendProps['tickSize']>\n    tickSpacing: NonNullable<ContinuousColorsLegendProps['tickSpacing']>\n    tickOverlap: NonNullable<ContinuousColorsLegendProps['tickOverlap']>\n    tickFormat: NonNullable<ContinuousColorsLegendProps['tickFormat']>\n    titleAlign: NonNullable<ContinuousColorsLegendProps['titleAlign']>\n    titleOffset: NonNullable<ContinuousColorsLegendProps['titleOffset']>\n} = {\n    length: 200,\n    thickness: 16,\n    direction: 'row',\n    tickPosition: 'after',\n    tickSize: 4,\n    tickSpacing: 3,\n    tickOverlap: false,\n    tickFormat: (value: number) => `${value}`,\n    titleAlign: 'start',\n    titleOffset: 4,\n}\n","import { Fragment } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { computeContinuousColorsLegend } from '../compute'\nimport { ContinuousColorsLegendProps } from '../types'\nimport { continuousColorsLegendDefaults } from '../defaults'\n\nexport const ContinuousColorsLegendSvg = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        ticks: computedTicks,\n        colorStops,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const theme = useTheme()\n\n    const id = `ContinuousColorsLegendSvgGradient.${direction}.${colorStops\n        .map(stop => stop.offset)\n        .join('_')}`\n\n    return (\n        <g>\n            <defs>\n                <linearGradient\n                    id={id}\n                    x1={gradientX1}\n                    y1={gradientY1}\n                    x2={gradientX2}\n                    y2={gradientY2}\n                >\n                    {colorStops.map(colorStop => (\n                        <stop {...colorStop} />\n                    ))}\n                </linearGradient>\n            </defs>\n            {titleText && (\n                <text\n                    transform={`translate(${titleX}, ${titleY}) rotate(${titleRotation})`}\n                    textAnchor={titleHorizontalAlign}\n                    dominantBaseline={titleVerticalAlign}\n                    style={theme.legends.title.text}\n                >\n                    {titleText}\n                </text>\n            )}\n            <rect width={width} height={height} fill={`url(#${id}`} />\n            {computedTicks.map((tick, index) => (\n                <Fragment key={index}>\n                    <line\n                        x1={tick.x1}\n                        y1={tick.y1}\n                        x2={tick.x2}\n                        y2={tick.y2}\n                        style={theme.legends.ticks.line}\n                    />\n                    <text\n                        x={tick.textX}\n                        y={tick.textY}\n                        textAnchor={tick.textHorizontalAlign}\n                        dominantBaseline={tick.textVerticalAlign}\n                        style={theme.legends.ticks.text}\n                    >\n                        {tick.text}\n                    </text>\n                </Fragment>\n            ))}\n        </g>\n    )\n}\n","import { AnchoredContinuousColorsLegendProps } from '../types'\nimport { computePositionFromAnchor } from '../compute'\nimport { continuousColorsLegendDefaults } from '../defaults'\nimport { ContinuousColorsLegendSvg } from './ContinuousColorsLegendSvg'\n\nexport const AnchoredContinuousColorsLegendSvg = ({\n    containerWidth,\n    containerHeight,\n    anchor,\n    translateX = 0,\n    translateY = 0,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    ...legendProps\n}: AnchoredContinuousColorsLegendProps) => {\n    let width: number\n    let height: number\n    if (direction === 'row') {\n        width = length\n        height = thickness\n    } else {\n        width = thickness\n        height = length\n    }\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <ContinuousColorsLegendSvg\n                length={length}\n                thickness={thickness}\n                direction={direction}\n                {...legendProps}\n            />\n        </g>\n    )\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"names":["keys","ageRange","weightRange","generateData","size","map","key","id","data","range","i","x","random","y","generateLightDataSet","generateHeavyDataSet","settingsMapper","xFormat","mapFormat","yFormat","axisTop","mapAxis","axisRight","axisBottom","axisLeft","exclude","allFlavors","props","group","help","flavors","type","description","required","control","disabled","choices","v","label","value","disabledValue","defaultValue","min","max","commonDefaultProps","unit","chartDimensions","themeProperty","ordinalColors","blendMode","target","svgDefaultProps","chartGrid","values","xDefault","yDefault","axes","isInteractive","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","legend","anchor","direction","defaults","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","itemDirection","onClick","console","log","JSON","stringify","motionProperties","groups","groupProperties","mapping","settings","options","overrides","Object","forEach","omit","upperFirst","enable","format","enabled","undefined","defaultProps","isCircleAnnotation","annotationSpec","isDotAnnotation","isRectAnnotation","computeAnnotation","annotation","computedNoteX","computedNoteY","noteX","noteY","noteWidth","noteTextOffset","_isNumber","abs","Error","computedX","computedY","angle","sourceX","sourceY","targetX","targetY","Math","atan2","absoluteAngleDegrees","radiansToDegrees","getLinkAngle","position","positionFromAngle","degreesToRadians","eighth","round","height","width","textX","noteLineX","points","text","useAnnotations","annotations","getPosition","getDimensions","useMemo","reduce","acc","offset","_filter","match","datum","dimensions","_omit","bindAnnotations","useComputedAnnotations","computed","AnnotationNote","note","theme","useTheme","useMotionConfig","animate","springConfig","config","animatedProps","useSpring","immediate","createElement","_jsxDEV","outlineWidth","animated","style","strokeLinejoin","strokeWidth","stroke","outlineColor","AnnotationLink","isOutline","path","firstPoint","animatedPath","useAnimatedPath","link","strokeLinecap","opacity","outlineOpacity","fill","d","CircleAnnotationOutline","radius","outline","circle","cx","cy","r","DotAnnotationOutline","dotSize","symbol","RectAnnotationOutline","borderRadius","rect","rx","ry","Annotation","useComputedAnnotation","noteType","isValidElement","isSvgNote","drawPoints","ctx","moveTo","lineTo","renderAnnotationsToCanvas","length","save","isCanvasNote","lineCap","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","font","fontSize","fontFamily","textAlign","textBaseline","lineJoin","strokeText","fillText","restore","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","getScaleTicks","textProps","textPropsByEngine","centerScale","line","lineX","lineY","textY","isRTL","document","translate","ticks","getFormatter","formatter","timeFormat","d3Format","computeGridLines","_values","isArray","Array","lines","x1","x2","y1","y2","AxisTick","_value","textAnchor","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transition","useTransition","tick","initial","textTransform","from","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","Number","String","renderAxesToCanvas","renderGridLinesToCanvas","continuousColorsLegendDefaults","thickness","tickPosition","tickSpacing","tickOverlap","tickFormat","titleAlign","titleOffset","zeroPadding","computeDimensions","item","_padding","padding","itemCount","horizontalPadding","verticalPadding","spacing","computePositionFromAnchor","containerWidth","containerHeight","computeItemLayout","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","symbolSpacing","computeContinuousColorsLegend","title","domain","reverse","positionScale","scaleLinear","thresholds","titleX","titleY","titleRotation","titleVerticalAlign","textVerticalAlign","textHorizontalAlign","colorStops","computeContinuousColorScaleColorStops","getValueFormatter","computedTicks","gradientY1","gradientX2","push","gradientX1","gradientY2","titleText","titleHorizontalAlign","ContinuousColorsLegendSvg","stop","join","colorStop","legends","Fragment","AnchoredContinuousColorsLegendSvg","legendProps","symbolByShape","borderWidth","borderColor","pointerEvents","diamond","square","triangle","LegendSvgItem","textColor","background","symbolShape","symbolBorderWidth","symbolBorderColor","onMouseEnter","onMouseLeave","toggleSerie","effects","useState","setStyle","handleMouseEnter","useCallback","filter","on","effect","handleMouseLeave","some","handler","SymbolShape","itemOpacity","itemBackground","e","React","color","hidden","itemTextColor","userSelect","LegendSvg","xStep","yStep","BoxLegendSvg","textAlignMapping","start","middle","end","renderLegendToCanvas","t","itemX","itemY","fillRect","renderContinuousColorLegendToCanvas","_ticks","initialStyles","gradient","createLinearGradient","addColorStop","stopColor","fontWeight","useQuantizeColorScaleLegendData","overriddenDomain","valueFormat","separator","items","domainValue","invertExtent","extent","LegendPropShape","isRequired","baseEach","module","exports","collection","predicate","result","nativeFloor","floor","nativeRandom","lower","upper","arrayFilter","baseFilter","baseIteratee","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","rand"],"sourceRoot":""}