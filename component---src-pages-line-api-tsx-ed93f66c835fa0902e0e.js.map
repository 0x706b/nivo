{"version":3,"file":"component---src-pages-line-api-tsx-ed93f66c835fa0902e0e.js","mappings":"6cAWA,IAAMA,GAAOC,EAAAA,EAAAA,KA2Cb,UAzCgB,WACZ,IAE4CC,GAExCC,EAAAA,EAAAA,gBAAe,cAHfD,MACIE,gBAAmBC,gBAY3B,OACI,iCACI,SAAC,IAAD,CAAKC,MAAM,gBAAgBJ,MAAOA,EAAOK,SAAQ,UAAMC,EAAAA,GAAAA,KAAN,CAAsB,gBACvE,SAAC,IAAD,CACIC,cAAc,OACdC,QAAQ,eACRC,QAASH,EAAAA,GACTI,WAAW,OACXC,aAAa,OACbC,cAAeC,EAAAA,EACfC,YAAaC,EAAAA,EACbC,aAAY,KACLC,GAAAA,CAAKC,EAAAA,EAAiB,CACrB,gBACA,eACA,cACA,kBACA,kBANI,CAQRpB,KAAMqB,KAAKC,UAAUtB,EAAM,KAAM,e,sBC/CrD,IAAIuB,EAAU,EAAQ,OAClBC,EAAO,EAAQ,OAcnBC,EAAOC,QAJP,SAAoBC,EAAQC,GAC1B,OAAOD,GAAUJ,EAAQI,EAAQC,EAAUJ","sources":["webpack://nivo-website/./src/pages/line/api.tsx","webpack://nivo-website/../node_modules/lodash/_baseForOwn.js"],"sourcesContent":["import React from 'react'\nimport omit from 'lodash/omit'\nimport { Seo } from '../../components/Seo'\nimport { ApiClient } from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/line/props'\nimport mapper from '../../data/components/line/mapper'\nimport defaultSettings from '../../data/components/line/defaults'\nimport { generateLightDataSet } from '../../data/components/line/generator'\nimport meta from '../../data/components/line/meta.yml'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst data = generateLightDataSet()\n\nconst LineApi = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/line.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <>\n            <Seo title=\"Line HTTP API\" image={image} keywords={[...meta.Line.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"Line\"\n                apiPath=\"/charts/line\"\n                flavors={meta.flavors}\n                chartClass=\"line\"\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    ...omit(defaultSettings, [\n                        'isInteractive',\n                        'enableSlices',\n                        'debugSlices',\n                        'enableCrosshair',\n                        'crosshairType',\n                    ]),\n                    data: JSON.stringify(data, null, '  '),\n                }}\n            />\n        </>\n    )\n}\n\nexport default LineApi\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n"],"names":["data","generateLightDataSet","image","useStaticQuery","childImageSharp","gatsbyImageData","title","keywords","meta","componentName","apiPath","flavors","chartClass","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","omit","defaultSettings","JSON","stringify","baseFor","keys","module","exports","object","iteratee"],"sourceRoot":""}