{"version":3,"file":"3eb63827aedefc5d4ec11d6ea5346be64ba485df-783833d2c4ba3128c6cb.js","mappings":"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","sources":["webpack://nivo-website/../src/WaffleCell.js","webpack://nivo-website/../src/WaffleCellHtml.js","webpack://nivo-website/../src/props.js","webpack://nivo-website/../src/compute.js","webpack://nivo-website/../src/enhance.js","webpack://nivo-website/../src/WaffleCellTooltip.js","webpack://nivo-website/../src/Waffle.js","webpack://nivo-website/../src/ResponsiveWaffle.js","webpack://nivo-website/../src/WaffleHtml.js","webpack://nivo-website/../src/ResponsiveWaffleHtml.js","webpack://nivo-website/../src/WaffleCanvas.js","webpack://nivo-website/../src/ResponsiveWaffleCanvas.js","webpack://nivo-website/../node_modules/lodash/_LazyWrapper.js","webpack://nivo-website/../node_modules/lodash/_LodashWrapper.js","webpack://nivo-website/../node_modules/lodash/_baseLodash.js","webpack://nivo-website/../node_modules/lodash/_baseSetData.js","webpack://nivo-website/../node_modules/lodash/_composeArgs.js","webpack://nivo-website/../node_modules/lodash/_composeArgsRight.js","webpack://nivo-website/../node_modules/lodash/_countHolders.js","webpack://nivo-website/../node_modules/lodash/_createBind.js","webpack://nivo-website/../node_modules/lodash/_createCtor.js","webpack://nivo-website/../node_modules/lodash/_createCurry.js","webpack://nivo-website/../node_modules/lodash/_createHybrid.js","webpack://nivo-website/../node_modules/lodash/_createPartial.js","webpack://nivo-website/../node_modules/lodash/_createRecurry.js","webpack://nivo-website/../node_modules/lodash/_createWrap.js","webpack://nivo-website/../node_modules/lodash/_getData.js","webpack://nivo-website/../node_modules/lodash/_getFuncName.js","webpack://nivo-website/../node_modules/lodash/_getHolder.js","webpack://nivo-website/../node_modules/lodash/_getWrapDetails.js","webpack://nivo-website/../node_modules/lodash/_insertWrapDetails.js","webpack://nivo-website/../node_modules/lodash/_isLaziable.js","webpack://nivo-website/../node_modules/lodash/_mergeData.js","webpack://nivo-website/../node_modules/lodash/_metaMap.js","webpack://nivo-website/../node_modules/lodash/_realNames.js","webpack://nivo-website/../node_modules/lodash/_reorder.js","webpack://nivo-website/../node_modules/lodash/_replaceHolders.js","webpack://nivo-website/../node_modules/lodash/_setData.js","webpack://nivo-website/../node_modules/lodash/_setWrapToString.js","webpack://nivo-website/../node_modules/lodash/_updateWrapDetails.js","webpack://nivo-website/../node_modules/lodash/_wrapperClone.js","webpack://nivo-website/../node_modules/lodash/partial.js","webpack://nivo-website/../node_modules/lodash/toInteger.js","webpack://nivo-website/../node_modules/lodash/wrapperLodash.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { pure } from '@nivo/recompose'\n\nconst WaffleCell = ({\n    position,\n    size,\n    x,\n    y,\n    color,\n    fill,\n    opacity,\n    borderWidth,\n    borderColor,\n    data,\n    onHover,\n    onLeave,\n    onClick,\n}) => (\n    <rect\n        width={size}\n        height={size}\n        x={x}\n        y={y}\n        fill={fill || color}\n        strokeWidth={borderWidth}\n        stroke={borderColor}\n        opacity={opacity}\n        onMouseEnter={onHover}\n        onMouseMove={onHover}\n        onMouseLeave={onLeave}\n        onClick={event => {\n            onClick({ position, color, x, y, data }, event)\n        }}\n    />\n)\n\nWaffleCell.propTypes = {\n    position: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    fill: PropTypes.string,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    data: PropTypes.object.isRequired,\n    onHover: PropTypes.func.isRequired,\n    onLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\nWaffleCell.defaultProps = {\n    data: {},\n}\nWaffleCell.displayName = 'WaffleCell'\n\nexport default pure(WaffleCell)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { pure } from '@nivo/recompose'\n\nconst WaffleCellHtml = ({\n    position,\n    size,\n    x,\n    y,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    data,\n    onHover,\n    onLeave,\n    onClick,\n}) => {\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                top: y,\n                left: x,\n                width: size,\n                height: size,\n                background: color,\n                opacity,\n                boxSizing: 'content-box',\n                borderStyle: 'solid',\n                borderWidth: `${borderWidth}px`,\n                borderColor,\n            }}\n            onMouseEnter={onHover}\n            onMouseMove={onHover}\n            onMouseLeave={onLeave}\n            onClick={event => {\n                onClick({ position, color, x, y, data }, event)\n            }}\n        />\n    )\n}\n\nWaffleCellHtml.propTypes = {\n    position: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    data: PropTypes.object.isRequired,\n    onHover: PropTypes.func.isRequired,\n    onLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\nWaffleCellHtml.defaultProps = {\n    data: {},\n}\nWaffleCellHtml.displayName = 'WaffleCellHtml'\n\nexport default pure(WaffleCellHtml)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { defsPropTypes, noop } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { LegendPropShape } from '@nivo/legends'\nimport WaffleCell from './WaffleCell'\nimport WaffleCellHtml from './WaffleCellHtml'\n\nconst commonPropTypes = {\n    total: PropTypes.number.isRequired,\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            value: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    hiddenIds: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n        .isRequired,\n\n    rows: PropTypes.number.isRequired,\n    columns: PropTypes.number.isRequired,\n    fillDirection: PropTypes.oneOf(['top', 'right', 'bottom', 'left']).isRequired,\n    padding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    emptyColor: PropTypes.string.isRequired,\n    emptyOpacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    getBorderColor: PropTypes.func.isRequired, // computed\n\n    isInteractive: PropTypes.bool,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    tooltip: PropTypes.func,\n\n    cellSize: PropTypes.number.isRequired,\n    cells: PropTypes.array.isRequired,\n    origin: PropTypes.shape({\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired,\n    }).isRequired,\n}\n\nexport const WafflePropTypes = {\n    ...commonPropTypes,\n    cellComponent: PropTypes.func.isRequired,\n    role: PropTypes.string.isRequired,\n    ...defsPropTypes,\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n}\n\nexport const WaffleHtmlPropTypes = {\n    ...commonPropTypes,\n    cellComponent: PropTypes.func.isRequired,\n}\n\nexport const WaffleCanvasPropTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n}\n\nconst commonDefaultProps = {\n    hiddenIds: [],\n\n    fillDirection: 'bottom',\n    padding: 1,\n\n    colors: { scheme: 'nivo' },\n    emptyColor: '#cccccc',\n    emptyOpacity: 1,\n    borderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 1]] },\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n    onClick: noop,\n}\n\nexport const WaffleDefaultProps = {\n    ...commonDefaultProps,\n    cellComponent: WaffleCell,\n    role: 'img',\n    defs: [],\n    fill: [],\n    legends: [],\n}\n\nexport const WaffleHtmlDefaultProps = {\n    ...commonDefaultProps,\n    cellComponent: WaffleCellHtml,\n}\n\nexport const WaffleCanvasDefaultProps = {\n    ...commonDefaultProps,\n    legends: [],\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport range from 'lodash/range'\n\n/**\n * Computes optimal cell size according to dimensions/layout/padding.\n *\n * @param {number} width\n * @param {number} height\n * @param {number} rows\n * @param {number} columns\n * @param {number} padding\n *\n * @return {number}\n */\nexport const computeCellSize = (width, height, rows, columns, padding) => {\n    const sizeX = (width - (columns - 1) * padding) / columns\n    const sizeY = (height - (rows - 1) * padding) / rows\n\n    return Math.min(sizeX, sizeY)\n}\n\n/**\n * Computes empty cells according to dimensions/layout/padding.\n *\n * @param {number}                        width\n * @param {number}                        height\n * @param {number}                        rows\n * @param {number}                        columns\n * @param {'top'|'right'|'bottom'|'left'} fillDirection\n * @param {number}                        padding\n *\n * @return {{ cells: Array, cellSize: number, origin: { x: number, y: number } } }\n */\nexport const computeGrid = (width, height, rows, columns, fillDirection, padding) => {\n    const cellSize = computeCellSize(width, height, rows, columns, padding)\n\n    const cells = []\n    switch (fillDirection) {\n        case 'top':\n            range(rows).forEach(row => {\n                range(columns).forEach(column => {\n                    cells.push({\n                        position: row * columns + column,\n                        row,\n                        column,\n                        x: column * (cellSize + padding),\n                        y: row * (cellSize + padding),\n                    })\n                })\n            })\n            break\n\n        case 'bottom':\n            range(rows - 1, -1).forEach(row => {\n                range(columns).forEach(column => {\n                    cells.push({\n                        position: row * columns + column,\n                        row,\n                        column,\n                        x: column * (cellSize + padding),\n                        y: row * (cellSize + padding),\n                    })\n                })\n            })\n            break\n\n        case 'left':\n            range(columns).forEach(column => {\n                range(rows).forEach(row => {\n                    cells.push({\n                        position: row * columns + column,\n                        row,\n                        column,\n                        x: column * (cellSize + padding),\n                        y: row * (cellSize + padding),\n                    })\n                })\n            })\n            break\n\n        case 'right':\n            range(columns - 1, -1).forEach(column => {\n                range(rows - 1, -1).forEach(row => {\n                    cells.push({\n                        position: row * columns + column,\n                        row,\n                        column,\n                        x: column * (cellSize + padding),\n                        y: row * (cellSize + padding),\n                    })\n                })\n            })\n            break\n\n        default:\n            throw new Error(`Invalid fill direction provided: ${fillDirection}`)\n    }\n\n    const origin = {\n        x: (width - (cellSize * columns + padding * (columns - 1))) / 2,\n        y: (height - (cellSize * rows + padding * (rows - 1))) / 2,\n    }\n\n    return { cells, cellSize, origin }\n}\n\nexport const applyDataToGrid = (_cells, data) => {\n    const cells = _cells.map(cell => ({ ...cell }))\n\n    data.forEach(datum => {\n        range(datum.startAt, datum.endAt).forEach(position => {\n            const cell = cells[position]\n            if (cell !== undefined) {\n                cell.data = datum\n                cell.groupIndex = datum.groupIndex\n                cell.color = datum.color\n            }\n        })\n    })\n\n    return cells\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { withDimensions, withTheme, withMotion, bindDefs } from '@nivo/core'\nimport { getOrdinalColorScale, getInheritedColorGenerator } from '@nivo/colors'\nimport { compose, defaultProps, withPropsOnChange, withState, pure } from '@nivo/recompose'\nimport * as props from './props'\nimport { computeGrid } from './compute'\n\nconst commonEnhancers = [\n    withDimensions(),\n    withTheme(),\n    withMotion(),\n    withPropsOnChange(['colors'], ({ colors }) => ({\n        getColor: getOrdinalColorScale(colors, 'id'),\n    })),\n    withPropsOnChange(['borderColor', 'theme'], ({ borderColor, theme }) => ({\n        getBorderColor: getInheritedColorGenerator(borderColor, theme),\n    })),\n    withState('currentCell', 'setCurrentCell', null),\n    withPropsOnChange(['rows', 'columns', 'total'], ({ rows, columns, total }) => ({\n        unit: total / (rows * columns),\n    })),\n    withPropsOnChange(\n        ['width', 'height', 'rows', 'columns', 'fillDirection', 'padding'],\n        ({ width, height, rows, columns, fillDirection, padding }) => {\n            return computeGrid(width, height, rows, columns, fillDirection, padding)\n        }\n    ),\n    withPropsOnChange(\n        ['data', 'unit', 'getColor', 'hiddenIds'],\n        ({ data, unit, getColor, hiddenIds }) => {\n            let currentPosition = 0\n\n            return {\n                computedData: data.map((datum, groupIndex) => {\n                    if (!hiddenIds.includes(datum.id)) {\n                        const enhancedDatum = {\n                            ...datum,\n                            groupIndex,\n                            startAt: currentPosition,\n                            endAt: currentPosition + Math.round(datum.value / unit),\n                            color: getColor(datum),\n                        }\n\n                        currentPosition = enhancedDatum.endAt\n\n                        return enhancedDatum\n                    }\n\n                    return {\n                        ...datum,\n                        groupIndex,\n                        startAt: currentPosition,\n                        endAt: currentPosition,\n                        color: getColor(datum),\n                    }\n                }),\n            }\n        }\n    ),\n    withPropsOnChange(['computedData'], ({ computedData }) => ({\n        legendData: computedData.map(datum => ({\n            id: datum.id,\n            label: datum.id,\n            color: datum.color,\n            fill: datum.fill,\n        })),\n    })),\n]\n\nexport default Component => {\n    const implDefaultProps = props[`${Component.displayName}DefaultProps`]\n\n    switch (Component.displayName) {\n        case 'Waffle':\n            return compose(\n                ...[\n                    defaultProps(implDefaultProps),\n                    ...commonEnhancers,\n                    withMotion(),\n                    withPropsOnChange(\n                        ['computedData', 'defs', 'fill'],\n                        ({ computedData, defs, fill }) => ({\n                            defs: bindDefs(defs, computedData, fill, { targetKey: 'fill' }),\n                        })\n                    ),\n                    pure,\n                ]\n            )(Component)\n\n        case 'WaffleHtml':\n            return compose(\n                ...[defaultProps(implDefaultProps), ...commonEnhancers, withMotion(), pure]\n            )(Component)\n\n        case 'WaffleCanvas':\n            return compose(...[defaultProps(implDefaultProps), ...commonEnhancers, pure])(Component)\n    }\n\n    return Component\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst WaffleCellTooltip = ({\n    position,\n    row,\n    column,\n    color,\n    data,\n    theme,\n    tooltipFormat,\n    tooltip,\n}) => (\n    <BasicTooltip\n        id={data.label}\n        value={data.value}\n        enableChip={true}\n        color={color}\n        theme={theme}\n        format={tooltipFormat}\n        renderContent={\n            typeof tooltip === 'function'\n                ? tooltip.bind(null, {\n                      position,\n                      row,\n                      column,\n                      color,\n                      ...data,\n                  })\n                : null\n        }\n    />\n)\n\nWaffleCellTooltip.displayName = 'WaffleCellTooltip'\nWaffleCellTooltip.propTypes = {\n    position: PropTypes.number.isRequired,\n    row: PropTypes.number.isRequired,\n    column: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    data: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    tooltip: PropTypes.func,\n}\n\nexport default WaffleCellTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, Component, Fragment } from 'react'\nimport partial from 'lodash/partial'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { setDisplayName } from '@nivo/recompose'\nimport { LegacyContainer, SvgWrapper } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { WafflePropTypes } from './props'\nimport enhance from './enhance'\nimport { applyDataToGrid } from './compute'\nimport WaffleCellTooltip from './WaffleCellTooltip'\n\nexport class Waffle extends Component {\n    static propTypes = WafflePropTypes\n\n    handleCellHover = (showTooltip, cell, event) => {\n        const { setCurrentCell, theme, tooltipFormat, tooltip } = this.props\n\n        setCurrentCell(cell)\n\n        if (!cell.data) return\n\n        showTooltip(\n            <WaffleCellTooltip\n                position={cell.position}\n                row={cell.row}\n                column={cell.column}\n                color={cell.color}\n                data={cell.data}\n                theme={theme}\n                tooltipFormat={tooltipFormat}\n                tooltip={tooltip}\n            />,\n            event\n        )\n    }\n\n    handleCellLeave = hideTooltip => {\n        this.props.setCurrentCell(null)\n        hideTooltip()\n    }\n\n    render() {\n        const {\n            hiddenIds,\n\n            // dimensions\n            margin,\n            width,\n            height,\n            outerWidth,\n            outerHeight,\n\n            // styling\n            cellComponent,\n            emptyColor,\n            emptyOpacity,\n            borderWidth,\n            getBorderColor,\n            theme,\n            defs,\n\n            // motion\n            animate,\n            motionStiffness,\n            motionDamping,\n\n            // interactivity\n            isInteractive,\n            onClick,\n\n            // computed\n            cells,\n            cellSize,\n            origin,\n            computedData,\n            legendData,\n\n            legends,\n            role,\n        } = this.props\n\n        cells.forEach(cell => {\n            cell.color = emptyColor\n        })\n\n        return (\n            <LegacyContainer\n                isInteractive={isInteractive}\n                theme={theme}\n                animate={animate}\n                motionDamping={motionDamping}\n                motionStiffness={motionStiffness}\n            >\n                {({ showTooltip, hideTooltip }) => {\n                    const onHover = partial(this.handleCellHover, showTooltip)\n                    const onLeave = partial(this.handleCellLeave, hideTooltip)\n\n                    let cellsRender\n                    if (animate === true) {\n                        const springConfig = {\n                            stiffness: motionStiffness,\n                            damping: motionDamping,\n                        }\n\n                        cellsRender = (\n                            <TransitionMotion\n                                styles={computedData.map(datum => ({\n                                    key: datum.id,\n                                    data: datum,\n                                    style: {\n                                        startAt: spring(datum.startAt, springConfig),\n                                        endAt: spring(datum.endAt, springConfig),\n                                    },\n                                }))}\n                            >\n                                {interpolatedStyles => {\n                                    const computedCells = applyDataToGrid(\n                                        cells,\n                                        interpolatedStyles.map(s => ({\n                                            ...s.data,\n                                            startAt: Math.round(s.style.startAt),\n                                            endAt: Math.round(s.style.endAt),\n                                        })),\n                                        hiddenIds\n                                    )\n\n                                    return (\n                                        <Fragment>\n                                            {computedCells.map(cell =>\n                                                createElement(cellComponent, {\n                                                    key: cell.position,\n                                                    position: cell.position,\n                                                    size: cellSize,\n                                                    x: cell.x,\n                                                    y: cell.y,\n                                                    color: cell.color,\n                                                    fill: cell.data && cell.data.fill,\n                                                    opacity: cell.data ? 1 : emptyOpacity,\n                                                    borderWidth,\n                                                    borderColor: getBorderColor(cell),\n                                                    data: cell.data,\n                                                    onHover: partial(onHover, cell),\n                                                    onLeave,\n                                                    onClick,\n                                                })\n                                            )}\n                                        </Fragment>\n                                    )\n                                }}\n                            </TransitionMotion>\n                        )\n                    } else {\n                        const computedCells = applyDataToGrid(cells, computedData, hiddenIds)\n\n                        cellsRender = (\n                            <Fragment>\n                                {computedCells.map(cell =>\n                                    createElement(cellComponent, {\n                                        key: cell.position,\n                                        position: cell.position,\n                                        size: cellSize,\n                                        x: cell.x,\n                                        y: cell.y,\n                                        color: cell.color,\n                                        fill: cell.data && cell.data.fill,\n                                        opacity: cell.data ? 1 : emptyOpacity,\n                                        borderWidth,\n                                        borderColor: getBorderColor(cell),\n                                        data: cell.data,\n                                        onHover: partial(onHover, cell),\n                                        onLeave,\n                                        onClick,\n                                    })\n                                )}\n                            </Fragment>\n                        )\n                    }\n\n                    return (\n                        <SvgWrapper\n                            width={outerWidth}\n                            height={outerHeight}\n                            margin={margin}\n                            defs={defs}\n                            theme={theme}\n                            role={role}\n                        >\n                            <g transform={`translate(${origin.x}, ${origin.y})`}>{cellsRender}</g>\n                            {legends.map((legend, i) => (\n                                <BoxLegendSvg\n                                    key={i}\n                                    {...legend}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    theme={theme}\n                                />\n                            ))}\n                        </SvgWrapper>\n                    )\n                }}\n            </LegacyContainer>\n        )\n    }\n}\n\nWaffle.displayName = 'Waffle'\n\nexport default setDisplayName(Waffle.displayName)(enhance(Waffle))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Waffle from './Waffle'\n\nconst ResponsiveWaffle = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Waffle width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveWaffle\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, Component, Fragment } from 'react'\nimport partial from 'lodash/partial'\nimport { setDisplayName } from '@nivo/recompose'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { LegacyContainer } from '@nivo/core'\nimport enhance from './enhance'\nimport { WaffleHtmlPropTypes } from './props'\nimport { applyDataToGrid } from './compute'\nimport WaffleCellTooltip from './WaffleCellTooltip'\n\nclass WaffleHtml extends Component {\n    static propTypes = WaffleHtmlPropTypes\n\n    handleCellHover = (showTooltip, cell, event) => {\n        const { setCurrentCell, theme, tooltipFormat, tooltip } = this.props\n\n        setCurrentCell(cell)\n\n        if (!cell.data) return\n\n        showTooltip(\n            <WaffleCellTooltip\n                position={cell.position}\n                row={cell.row}\n                column={cell.column}\n                color={cell.color}\n                data={cell.data}\n                theme={theme}\n                tooltipFormat={tooltipFormat}\n                tooltip={tooltip}\n            />,\n            event\n        )\n    }\n\n    handleCellLeave = hideTooltip => {\n        this.props.setCurrentCell(null)\n        hideTooltip()\n    }\n\n    render() {\n        const {\n            // dimensions\n            margin,\n            outerWidth,\n            outerHeight,\n\n            // styling\n            cellComponent,\n            emptyColor,\n            emptyOpacity,\n            borderWidth,\n            getBorderColor,\n            theme,\n\n            // motion\n            animate,\n            motionStiffness,\n            motionDamping,\n\n            // interactivity\n            isInteractive,\n            onClick,\n\n            // computed\n            cells,\n            cellSize,\n            origin,\n            computedData,\n        } = this.props\n\n        cells.forEach(cell => {\n            cell.color = emptyColor\n        })\n\n        return (\n            <LegacyContainer\n                isInteractive={isInteractive}\n                theme={theme}\n                animate={animate}\n                motionDamping={motionDamping}\n                motionStiffness={motionStiffness}\n            >\n                {({ showTooltip, hideTooltip }) => {\n                    const onHover = partial(this.handleCellHover, showTooltip)\n                    const onLeave = partial(this.handleCellLeave, hideTooltip)\n\n                    let cellsRender\n                    if (animate === true) {\n                        const springConfig = {\n                            stiffness: motionStiffness,\n                            damping: motionDamping,\n                        }\n\n                        cellsRender = (\n                            <TransitionMotion\n                                styles={computedData.map(datum => ({\n                                    key: datum.id,\n                                    data: datum,\n                                    style: {\n                                        startAt: spring(datum.startAt, springConfig),\n                                        endAt: spring(datum.endAt, springConfig),\n                                    },\n                                }))}\n                            >\n                                {interpolatedStyles => {\n                                    const computedCells = applyDataToGrid(\n                                        cells,\n                                        interpolatedStyles.map(s => ({\n                                            ...s.data,\n                                            startAt: Math.round(s.style.startAt),\n                                            endAt: Math.round(s.style.endAt),\n                                        }))\n                                    )\n\n                                    return (\n                                        <Fragment>\n                                            {computedCells.map(cell =>\n                                                createElement(cellComponent, {\n                                                    key: cell.position,\n                                                    position: cell.position,\n                                                    size: cellSize,\n                                                    x: cell.x,\n                                                    y: cell.y,\n                                                    color: cell.color,\n                                                    fill: cell.data && cell.data.fill,\n                                                    opacity: cell.data ? 1 : emptyOpacity,\n                                                    borderWidth,\n                                                    borderColor: getBorderColor(cell),\n                                                    data: cell.data,\n                                                    onHover: partial(onHover, cell),\n                                                    onLeave,\n                                                    onClick,\n                                                })\n                                            )}\n                                        </Fragment>\n                                    )\n                                }}\n                            </TransitionMotion>\n                        )\n                    } else {\n                        const computedCells = applyDataToGrid(cells, computedData)\n\n                        cellsRender = (\n                            <Fragment>\n                                {computedCells.map(cell =>\n                                    createElement(cellComponent, {\n                                        key: cell.position,\n                                        position: cell.position,\n                                        size: cellSize,\n                                        x: cell.x,\n                                        y: cell.y,\n                                        color: cell.color,\n                                        fill: cell.data && cell.data.fill,\n                                        opacity: cell.data ? 1 : emptyOpacity,\n                                        borderWidth,\n                                        borderColor: getBorderColor(cell),\n                                        data: cell.data,\n                                        onHover: partial(onHover, cell),\n                                        onLeave,\n                                        onClick,\n                                    })\n                                )}\n                            </Fragment>\n                        )\n                    }\n\n                    return (\n                        <div\n                            style={{\n                                position: 'relative',\n                                width: outerWidth,\n                                height: outerHeight,\n                            }}\n                        >\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    top: margin.top + origin.y,\n                                    left: margin.left + origin.x,\n                                }}\n                            >\n                                {cellsRender}\n                            </div>\n                        </div>\n                    )\n                }}\n            </LegacyContainer>\n        )\n    }\n}\n\nWaffleHtml.displayName = 'WaffleHtml'\n\nexport default setDisplayName(WaffleHtml.displayName)(enhance(WaffleHtml))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport WaffleHtml from './WaffleHtml'\n\nconst ResponsiveWaffleHtml = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <WaffleHtml width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveWaffleHtml\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Component } from 'react'\nimport range from 'lodash/range'\nimport { setDisplayName } from '@nivo/recompose'\nimport { isCursorInRect, getRelativeCursor, LegacyContainer } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport enhance from './enhance'\nimport { WaffleCanvasPropTypes } from './props'\nimport WaffleCellTooltip from './WaffleCellTooltip'\n\nconst findCellUnderCursor = (cells, cellSize, origin, margin, x, y) =>\n    cells.find(cell =>\n        isCursorInRect(\n            cell.x + origin.x + margin.left,\n            cell.y + origin.y + margin.top,\n            cellSize,\n            cellSize,\n            x,\n            y\n        )\n    )\n\nclass WaffleCanvas extends Component {\n    static propTypes = WaffleCanvasPropTypes\n\n    componentDidMount() {\n        this.ctx = this.surface.getContext('2d')\n        this.draw(this.props)\n    }\n\n    componentDidUpdate() {\n        this.ctx = this.surface.getContext('2d')\n        this.draw(this.props)\n    }\n\n    draw(props) {\n        const {\n            pixelRatio,\n\n            margin,\n            width,\n            height,\n            outerWidth,\n            outerHeight,\n\n            getColor,\n            emptyColor,\n            emptyOpacity,\n            borderWidth,\n            getBorderColor,\n\n            cells,\n            cellSize,\n            origin,\n            computedData,\n            legendData,\n\n            legends,\n\n            theme,\n        } = props\n\n        this.surface.width = outerWidth * pixelRatio\n        this.surface.height = outerHeight * pixelRatio\n\n        this.ctx.scale(pixelRatio, pixelRatio)\n        this.ctx.fillStyle = theme.background\n        this.ctx.fillRect(0, 0, outerWidth, outerHeight)\n        this.ctx.translate(margin.left, margin.top)\n\n        cells.forEach(cell => {\n            cell.color = emptyColor\n        })\n\n        computedData.forEach(datum => {\n            range(datum.startAt, datum.endAt).forEach(position => {\n                const cell = cells[position]\n                if (cell !== undefined) {\n                    cell.data = datum\n                    cell.groupIndex = datum.groupIndex\n                    cell.color = getColor(datum)\n                }\n            })\n        })\n\n        cells.forEach(cell => {\n            this.ctx.save()\n            this.ctx.globalAlpha = cell.data ? 1 : emptyOpacity\n\n            this.ctx.fillStyle = cell.color\n            this.ctx.fillRect(cell.x + origin.x, cell.y + origin.y, cellSize, cellSize)\n\n            if (borderWidth > 0) {\n                this.ctx.strokeStyle = getBorderColor(cell)\n                this.ctx.lineWidth = borderWidth\n                this.ctx.strokeRect(cell.x + origin.x, cell.y + origin.y, cellSize, cellSize)\n            }\n\n            this.ctx.restore()\n        })\n\n        legends.forEach(legend => {\n            renderLegendToCanvas(this.ctx, {\n                ...legend,\n                data: legendData,\n                containerWidth: width,\n                containerHeight: height,\n                theme,\n            })\n        })\n    }\n\n    handleMouseHover = (showTooltip, hideTooltip) => event => {\n        const { isInteractive, margin, theme, cells, cellSize, origin, tooltipFormat, tooltip } =\n            this.props\n\n        if (!isInteractive || !cells) return\n\n        const [x, y] = getRelativeCursor(this.surface, event)\n        const cell = findCellUnderCursor(cells, cellSize, origin, margin, x, y)\n\n        if (cell !== undefined && cell.data) {\n            showTooltip(\n                <WaffleCellTooltip\n                    position={cell.position}\n                    row={cell.row}\n                    column={cell.column}\n                    color={cell.color}\n                    data={cell.data}\n                    theme={theme}\n                    tooltipFormat={tooltipFormat}\n                    tooltip={tooltip}\n                />,\n                event\n            )\n        } else {\n            hideTooltip()\n        }\n    }\n\n    handleMouseLeave = hideTooltip => () => {\n        if (this.props.isInteractive !== true) return\n\n        hideTooltip()\n    }\n\n    handleClick = event => {\n        const { isInteractive, margin, onClick, cells, cellSize, origin } = this.props\n\n        if (!isInteractive || !cells) return\n\n        const [x, y] = getRelativeCursor(this.surface, event)\n        const cell = findCellUnderCursor(cells, cellSize, origin, margin, x, y)\n        if (cell !== undefined) onClick(cell, event)\n    }\n\n    render() {\n        const { outerWidth, outerHeight, pixelRatio, isInteractive, theme } = this.props\n\n        return (\n            <LegacyContainer isInteractive={isInteractive} theme={theme} animate={false}>\n                {({ showTooltip, hideTooltip }) => (\n                    <canvas\n                        ref={surface => {\n                            this.surface = surface\n                        }}\n                        width={outerWidth * pixelRatio}\n                        height={outerHeight * pixelRatio}\n                        style={{\n                            width: outerWidth,\n                            height: outerHeight,\n                        }}\n                        onMouseEnter={this.handleMouseHover(showTooltip, hideTooltip)}\n                        onMouseMove={this.handleMouseHover(showTooltip, hideTooltip)}\n                        onMouseLeave={this.handleMouseLeave(hideTooltip)}\n                        onClick={this.handleClick}\n                    />\n                )}\n            </LegacyContainer>\n        )\n    }\n}\n\nWaffleCanvas.displayName = 'WaffleCanvas'\n\nexport default setDisplayName(WaffleCanvas.displayName)(enhance(WaffleCanvas))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport WaffleCanvas from './WaffleCanvas'\n\nconst ResponsiveWaffleCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <WaffleCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveWaffleCanvas\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @constructor\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\n  this.__views__ = [];\n}\n\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nmodule.exports = LazyWrapper;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\n */\nfunction LodashWrapper(value, chainAll) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__chain__ = !!chainAll;\n  this.__index__ = 0;\n  this.__values__ = undefined;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n","/**\n * The function whose prototype chain sequence wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nmodule.exports = baseLodash;\n","var identity = require('./identity'),\n    metaMap = require('./_metaMap');\n\n/**\n * The base implementation of `setData` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar baseSetData = !metaMap ? identity : function(func, data) {\n  metaMap.set(func, data);\n  return func;\n};\n\nmodule.exports = baseSetData;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array that is the composition of partially applied arguments,\n * placeholders, and provided arguments into a single array of arguments.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to prepend to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgs(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersLength = holders.length,\n      leftIndex = -1,\n      leftLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(leftLength + rangeLength),\n      isUncurried = !isCurried;\n\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n  while (++argsIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[holders[argsIndex]] = args[argsIndex];\n    }\n  }\n  while (rangeLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n  return result;\n}\n\nmodule.exports = composeArgs;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This function is like `composeArgs` except that the arguments composition\n * is tailored for `_.partialRight`.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to append to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgsRight(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersIndex = -1,\n      holdersLength = holders.length,\n      rightIndex = -1,\n      rightLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(rangeLength + rightLength),\n      isUncurried = !isCurried;\n\n  while (++argsIndex < rangeLength) {\n    result[argsIndex] = args[argsIndex];\n  }\n  var offset = argsIndex;\n  while (++rightIndex < rightLength) {\n    result[offset + rightIndex] = partials[rightIndex];\n  }\n  while (++holdersIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[offset + holders[holdersIndex]] = args[argsIndex++];\n    }\n  }\n  return result;\n}\n\nmodule.exports = composeArgsRight;\n","/**\n * Gets the number of `placeholder` occurrences in `array`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} placeholder The placeholder to search for.\n * @returns {number} Returns the placeholder count.\n */\nfunction countHolders(array, placeholder) {\n  var length = array.length,\n      result = 0;\n\n  while (length--) {\n    if (array[length] === placeholder) {\n      ++result;\n    }\n  }\n  return result;\n}\n\nmodule.exports = countHolders;\n","var createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the optional `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createBind(func, bitmask, thisArg) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, arguments);\n  }\n  return wrapper;\n}\n\nmodule.exports = createBind;\n","var baseCreate = require('./_baseCreate'),\n    isObject = require('./isObject');\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtor;\n","var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    createHybrid = require('./_createHybrid'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createCurry;\n","var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    countHolders = require('./_countHolders'),\n    createCtor = require('./_createCtor'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    reorder = require('./_reorder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybrid;\n","var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the `this` binding\n * of `thisArg` and `partials` prepended to the arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to\n *  the new function.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createPartial(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength),\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    return apply(fn, isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createPartial;\n","var isLaziable = require('./_isLaziable'),\n    setData = require('./_setData'),\n    setWrapToString = require('./_setWrapToString');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * Creates a function that wraps `func` to continue currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {Function} wrapFunc The function to create the `func` wrapper.\n * @param {*} placeholder The placeholder value.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n  var isCurry = bitmask & WRAP_CURRY_FLAG,\n      newHolders = isCurry ? holders : undefined,\n      newHoldersRight = isCurry ? undefined : holders,\n      newPartials = isCurry ? partials : undefined,\n      newPartialsRight = isCurry ? undefined : partials;\n\n  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n  }\n  var newData = [\n    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n    newHoldersRight, argPos, ary, arity\n  ];\n\n  var result = wrapFunc.apply(undefined, newData);\n  if (isLaziable(func)) {\n    setData(result, newData);\n  }\n  result.placeholder = placeholder;\n  return setWrapToString(result, func, bitmask);\n}\n\nmodule.exports = createRecurry;\n","var baseSetData = require('./_baseSetData'),\n    createBind = require('./_createBind'),\n    createCurry = require('./_createCurry'),\n    createHybrid = require('./_createHybrid'),\n    createPartial = require('./_createPartial'),\n    getData = require('./_getData'),\n    mergeData = require('./_mergeData'),\n    setData = require('./_setData'),\n    setWrapToString = require('./_setWrapToString'),\n    toInteger = require('./toInteger');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that either curries or invokes `func` with optional\n * `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags.\n *    1 - `_.bind`\n *    2 - `_.bindKey`\n *    4 - `_.curry` or `_.curryRight` of a bound function\n *    8 - `_.curry`\n *   16 - `_.curryRight`\n *   32 - `_.partial`\n *   64 - `_.partialRight`\n *  128 - `_.rearg`\n *  256 - `_.ary`\n *  512 - `_.flip`\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to be partially applied.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n  if (!isBindKey && typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var length = partials ? partials.length : 0;\n  if (!length) {\n    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n    partials = holders = undefined;\n  }\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n  arity = arity === undefined ? arity : toInteger(arity);\n  length -= holders ? holders.length : 0;\n\n  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n    var partialsRight = partials,\n        holdersRight = holders;\n\n    partials = holders = undefined;\n  }\n  var data = isBindKey ? undefined : getData(func);\n\n  var newData = [\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n    argPos, ary, arity\n  ];\n\n  if (data) {\n    mergeData(newData, data);\n  }\n  func = newData[0];\n  bitmask = newData[1];\n  thisArg = newData[2];\n  partials = newData[3];\n  holders = newData[4];\n  arity = newData[9] = newData[9] === undefined\n    ? (isBindKey ? 0 : func.length)\n    : nativeMax(newData[9] - length, 0);\n\n  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n  }\n  if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n    var result = createBind(func, bitmask, thisArg);\n  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n    result = createCurry(func, bitmask, arity);\n  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n    result = createPartial(func, bitmask, thisArg, partials);\n  } else {\n    result = createHybrid.apply(undefined, newData);\n  }\n  var setter = data ? baseSetData : setData;\n  return setWrapToString(setter(result, newData), func, bitmask);\n}\n\nmodule.exports = createWrap;\n","var metaMap = require('./_metaMap'),\n    noop = require('./noop');\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n","var realNames = require('./_realNames');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nmodule.exports = getFuncName;\n","/**\n * Gets the argument placeholder value for `func`.\n *\n * @private\n * @param {Function} func The function to inspect.\n * @returns {*} Returns the placeholder value.\n */\nfunction getHolder(func) {\n  var object = func;\n  return object.placeholder;\n}\n\nmodule.exports = getHolder;\n","/** Used to match wrap detail comments. */\nvar reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n    reSplitDetails = /,? & /;\n\n/**\n * Extracts wrapper details from the `source` body comment.\n *\n * @private\n * @param {string} source The source to inspect.\n * @returns {Array} Returns the wrapper details.\n */\nfunction getWrapDetails(source) {\n  var match = source.match(reWrapDetails);\n  return match ? match[1].split(reSplitDetails) : [];\n}\n\nmodule.exports = getWrapDetails;\n","/** Used to match wrap detail comments. */\nvar reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/;\n\n/**\n * Inserts wrapper `details` in a comment at the top of the `source` body.\n *\n * @private\n * @param {string} source The source to modify.\n * @returns {Array} details The details to insert.\n * @returns {string} Returns the modified source.\n */\nfunction insertWrapDetails(source, details) {\n  var length = details.length;\n  if (!length) {\n    return source;\n  }\n  var lastIndex = length - 1;\n  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n  details = details.join(length > 2 ? ', ' : ' ');\n  return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n}\n\nmodule.exports = insertWrapDetails;\n","var LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n","var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Merges the function metadata of `source` into `data`.\n *\n * Merging metadata reduces the number of wrappers used to invoke a function.\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n * may be applied regardless of execution order. Methods like `_.ary` and\n * `_.rearg` modify function arguments, making the order in which they are\n * executed important, preventing the merging of metadata. However, we make\n * an exception for a safe combined case where curried functions have `_.ary`\n * and or `_.rearg` applied.\n *\n * @private\n * @param {Array} data The destination metadata.\n * @param {Array} source The source metadata.\n * @returns {Array} Returns `data`.\n */\nfunction mergeData(data, source) {\n  var bitmask = data[1],\n      srcBitmask = source[1],\n      newBitmask = bitmask | srcBitmask,\n      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n  var isCombo =\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n  // Exit early if metadata can't be merged.\n  if (!(isCommon || isCombo)) {\n    return data;\n  }\n  // Use source `thisArg` if available.\n  if (srcBitmask & WRAP_BIND_FLAG) {\n    data[2] = source[2];\n    // Set when currying a bound function.\n    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n  }\n  // Compose partial arguments.\n  var value = source[3];\n  if (value) {\n    var partials = data[3];\n    data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n  }\n  // Compose partial right arguments.\n  value = source[5];\n  if (value) {\n    partials = data[5];\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n  }\n  // Use source `argPos` if available.\n  value = source[7];\n  if (value) {\n    data[7] = value;\n  }\n  // Use source `ary` if it's smaller.\n  if (srcBitmask & WRAP_ARY_FLAG) {\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n  }\n  // Use source `arity` if one is not provided.\n  if (data[9] == null) {\n    data[9] = source[9];\n  }\n  // Use source `func` and merge bitmasks.\n  data[0] = source[0];\n  data[1] = newBitmask;\n\n  return data;\n}\n\nmodule.exports = mergeData;\n","var WeakMap = require('./_WeakMap');\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nmodule.exports = metaMap;\n","/** Used to lookup unminified function names. */\nvar realNames = {};\n\nmodule.exports = realNames;\n","var copyArray = require('./_copyArray'),\n    isIndex = require('./_isIndex');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Reorder `array` according to the specified indexes where the element at\n * the first index is assigned as the first element, the element at\n * the second index is assigned as the second element, and so on.\n *\n * @private\n * @param {Array} array The array to reorder.\n * @param {Array} indexes The arranged array indexes.\n * @returns {Array} Returns `array`.\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n      length = nativeMin(indexes.length, arrLength),\n      oldArray = copyArray(array);\n\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\n\nmodule.exports = reorder;\n","/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value === placeholder || value === PLACEHOLDER) {\n      array[index] = PLACEHOLDER;\n      result[resIndex++] = index;\n    }\n  }\n  return result;\n}\n\nmodule.exports = replaceHolders;\n","var baseSetData = require('./_baseSetData'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets metadata for `func`.\n *\n * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n * period of time, it will trip its breaker and transition to an identity\n * function to avoid garbage collection pauses in V8. See\n * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n * for more details.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar setData = shortOut(baseSetData);\n\nmodule.exports = setData;\n","var getWrapDetails = require('./_getWrapDetails'),\n    insertWrapDetails = require('./_insertWrapDetails'),\n    setToString = require('./_setToString'),\n    updateWrapDetails = require('./_updateWrapDetails');\n\n/**\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n * with wrapper details in a comment at the top of the source body.\n *\n * @private\n * @param {Function} wrapper The function to modify.\n * @param {Function} reference The reference function.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Function} Returns `wrapper`.\n */\nfunction setWrapToString(wrapper, reference, bitmask) {\n  var source = (reference + '');\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n}\n\nmodule.exports = setWrapToString;\n","var arrayEach = require('./_arrayEach'),\n    arrayIncludes = require('./_arrayIncludes');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256,\n    WRAP_FLIP_FLAG = 512;\n\n/** Used to associate wrap methods with their bit flags. */\nvar wrapFlags = [\n  ['ary', WRAP_ARY_FLAG],\n  ['bind', WRAP_BIND_FLAG],\n  ['bindKey', WRAP_BIND_KEY_FLAG],\n  ['curry', WRAP_CURRY_FLAG],\n  ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n  ['flip', WRAP_FLIP_FLAG],\n  ['partial', WRAP_PARTIAL_FLAG],\n  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n  ['rearg', WRAP_REARG_FLAG]\n];\n\n/**\n * Updates wrapper `details` based on `bitmask` flags.\n *\n * @private\n * @returns {Array} details The details to modify.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Array} Returns `details`.\n */\nfunction updateWrapDetails(details, bitmask) {\n  arrayEach(wrapFlags, function(pair) {\n    var value = '_.' + pair[0];\n    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n      details.push(value);\n    }\n  });\n  return details.sort();\n}\n\nmodule.exports = updateWrapDetails;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    copyArray = require('./_copyArray');\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  if (wrapper instanceof LazyWrapper) {\n    return wrapper.clone();\n  }\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n  result.__actions__ = copyArray(wrapper.__actions__);\n  result.__index__  = wrapper.__index__;\n  result.__values__ = wrapper.__values__;\n  return result;\n}\n\nmodule.exports = wrapperClone;\n","var baseRest = require('./_baseRest'),\n    createWrap = require('./_createWrap'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with `partials` prepended to the\n * arguments it receives. This method is like `_.bind` except it does **not**\n * alter the `this` binding.\n *\n * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 0.2.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var sayHelloTo = _.partial(greet, 'hello');\n * sayHelloTo('fred');\n * // => 'hello fred'\n *\n * // Partially applied with placeholders.\n * var greetFred = _.partial(greet, _, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n */\nvar partial = baseRest(function(func, partials) {\n  var holders = replaceHolders(partials, getHolder(partial));\n  return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n});\n\n// Assign default placeholders.\npartial.placeholder = {};\n\nmodule.exports = partial;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseLodash = require('./_baseLodash'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike'),\n    wrapperClone = require('./_wrapperClone');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nmodule.exports = lodash;\n"],"names":["WaffleCell","position","size","x","y","color","fill","opacity","borderWidth","borderColor","data","onHover","onLeave","onClick","width","height","strokeWidth","stroke","onMouseEnter","onMouseMove","onMouseLeave","event","PropTypes","pure","WaffleCellHtml","style","top","left","background","boxSizing","borderStyle","commonPropTypes","total","id","label","value","hiddenIds","rows","columns","fillDirection","padding","colors","ordinalColorsPropType","emptyColor","emptyOpacity","inheritedColorPropType","getBorderColor","isInteractive","tooltipFormat","tooltip","cellSize","cells","origin","isRequired","WafflePropTypes","cellComponent","role","legends","WaffleHtmlPropTypes","WaffleCanvasPropTypes","pixelRatio","commonDefaultProps","scheme","from","modifiers","defs","noop","WaffleDefaultProps","WaffleHtmlDefaultProps","WaffleCanvasDefaultProps","window","computeGrid","sizeX","sizeY","Math","computeCellSize","range","row","column","applyDataToGrid","_cells","cell","datum","commonEnhancers","withDimensions","withTheme","withMotion","withPropsOnChange","getColor","getOrdinalColorScale","theme","getInheritedColorGenerator","withState","unit","currentPosition","computedData","enhancedDatum","groupIndex","startAt","endAt","legendData","Component","implDefaultProps","props","defaultProps","bindDefs","targetKey","compose","WaffleCellTooltip","enableChip","format","renderContent","Waffle","setCurrentCell","showTooltip","hideTooltip","render","this","margin","outerWidth","outerHeight","animate","motionStiffness","motionDamping","partial","springConfig","stiffness","damping","cellsRender","styles","key","spring","interpolatedStyles","computedCells","s","createElement","transform","containerWidth","containerHeight","propTypes","setDisplayName","enhance","ResponsiveWaffle","WaffleHtml","handleCellHover","handleCellLeave","ResponsiveWaffleHtml","findCellUnderCursor","isCursorInRect","WaffleCanvas","handleMouseHover","getRelativeCursor","handleMouseLeave","handleClick","componentDidMount","ctx","surface","getContext","draw","componentDidUpdate","scale","fillStyle","fillRect","translate","legend","renderLegendToCanvas","ref","ResponsiveWaffleCanvas","baseCreate","baseLodash","LazyWrapper","__wrapped__","__actions__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","prototype","constructor","module","exports","LodashWrapper","chainAll","__chain__","__index__","__values__","undefined","identity","metaMap","baseSetData","func","set","nativeMax","max","args","partials","holders","isCurried","argsIndex","argsLength","length","holdersLength","leftIndex","leftLength","rangeLength","result","Array","isUncurried","holdersIndex","rightIndex","rightLength","offset","array","placeholder","createCtor","root","bitmask","thisArg","isBind","Ctor","wrapper","fn","apply","arguments","isObject","thisBinding","createHybrid","createRecurry","getHolder","replaceHolders","arity","index","composeArgs","composeArgsRight","countHolders","reorder","partialsRight","holdersRight","argPos","ary","isAry","isBindKey","isFlip","holdersCount","newHolders","reverse","isLaziable","setData","setWrapToString","wrapFunc","isCurry","newData","createBind","createCurry","createPartial","getData","mergeData","toInteger","TypeError","get","realNames","hasOwnProperty","Object","name","call","otherFunc","reWrapDetails","reSplitDetails","source","match","split","reWrapComment","details","lastIndex","join","replace","getFuncName","lodash","funcName","other","PLACEHOLDER","WRAP_ARY_FLAG","nativeMin","min","srcBitmask","newBitmask","isCommon","isCombo","WeakMap","copyArray","isIndex","indexes","arrLength","oldArray","resIndex","shortOut","getWrapDetails","insertWrapDetails","setToString","updateWrapDetails","reference","arrayEach","arrayIncludes","wrapFlags","pair","push","sort","clone","baseRest","createWrap","toFinite","remainder","isArray","isObjectLike","wrapperClone"],"sourceRoot":""}