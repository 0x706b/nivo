{"version":3,"sources":["webpack:///./src/data/components/treemap/mapper.js","webpack:///./src/data/components/treemap/generator.js","webpack:///./src/data/components/treemap/props.js","webpack:///./src/pages/treemap/api.js","webpack:///../node_modules/lodash/startCase.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/TreeMapNode.js","webpack:///../src/TreeMapHtmlNode.js","webpack:///../src/props.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/TreeMapNodeTooltip.js","webpack:///../src/hooks.js","webpack:///../src/TreeMapNodes.js","webpack:///../src/TreeMap.js","webpack:///../src/ResponsiveTreeMap.js","webpack:///../src/TreeMapHtml.js","webpack:///../src/ResponsiveTreeMapHtml.js","webpack:///../src/TreeMapCanvas.js","webpack:///../src/ResponsiveTreeMapCanvas.js","webpack:///./src/components/components/api-client/ApiPreview.js","webpack:///./src/components/components/api-client/ApiTabs.js","webpack:///./src/components/components/api-client/ApiSubmit.js","webpack:///./src/components/components/api-client/ApiResponse.js","webpack:///./src/components/components/api-client/ApiClient.js","webpack:///../node_modules/lodash/cloneDeep.js"],"names":["settingsMapper","label","value","node","id","formattedValue","parentLabel","pathComponents","join","valueFormat","mapFormat","generateLightDataSet","root","generateLibTree","generateHeavyDataSet","children","range","map","i","random","nodeCount","defaults","TreeMapDefaultProps","props","key","group","help","type","required","defaultValue","identity","controlType","description","controlOptions","choices","leavesOnly","innerPadding","unit","min","max","outerPadding","enableControlForFlavors","flavors","colors","nodeOpacity","borderWidth","borderColor","defsProperties","enableLabel","prop","orientLabel","enableParentLabel","parentLabelSize","parentLabelPosition","parentLabelPadding","isInteractive","motionProperties","groups","groupProperties","data","TreeMapApi","title","keywords","meta","TreeMap","tags","componentName","chartClass","apiPath","controlGroups","propsMapper","mapper","defaultProps","JSON","stringify","format","enabled","tile","margin","top","right","bottom","left","labelSkipSize","labelTextColor","from","modifiers","parentLabelTextColor","scheme","colorBy","createCompounder","upperFirst","startCase","result","word","index","module","exports","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","memo","animatedProps","theme","useTheme","showLabel","Math","showParentLabel","transform","width","v","height","fill","strokeWidth","stroke","fillOpacity","onMouseEnter","onMouseMove","onMouseLeave","onClick","textAnchor","dominantBaseline","style","pointerEvents","labelTransform","parentLabelTransform","boxSizing","position","borderStyle","overflow","opacity","background","color","display","justifyContent","alignItems","whiteSpace","transformOrigin","commonPropTypes","PropTypes","ordinalColorsPropType","colorPropertyAccessorPropType","treeMapTilePropType","labelFormat","inheritedColorPropType","tooltip","func","commonDefaultProps","nodeComponent","role","isRequired","pixelRatio","animate","motionConfig","defs","TreeMapHtmlDefaultProps","TreeMapHtmlNode","TreeMapCanvasDefaultProps","global","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","unsupportedIterableToArray","TypeError","nonIterableRest","enableChip","renderContent","useAccessor","accessor","useMemo","d","get","useTreeMap","getIdentity","getValue","formatValue","useValueFormatter","getLabel","getParentLabel","layout","treemap","d3Treemap","treeMapTileFromProp","useTreeMapLayout","hierarchy","useHierarchy","rawNodes","cloneDeep","nodes","rawNode","path","ancestor","computeNodeIdAndPath","omit","x","y","treeDepth","treeHeight","isParent","isLeaf","getColor","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelTextColor","getParentLabelTextColor","enhancedNodes","getAnimatedNodeProps","htmlTransform","labelOpacity","labelHtmlTransform","parentLabelOpacity","parentLabelHtmlTransform","getEndingAnimatedNodeProps","transformPixels","interactiveNodes","useTooltip","showTooltipFromEvent","hideTooltip","showTooltip","useCallback","handleMouseEnter","handleMouseMove","handleMouseLeave","handleClick","event","useInteractiveTreeMapNodes","useMotionConfig","springConfig","useTransition","initial","enter","update","leave","config","immediate","item","WrappedTreeMap","withContainer","partialMargin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","boundDefs","bindDefs","ResponsiveTreeMap","WrappedTreeMapHtml","ResponsiveTreeMapHtml","findNodeUnderCursor","isCursorInRect","WrappedTreeMapCanvas","canvasEl","useRef","useEffect","ctx","rotate","degreesToRadians","handleMouseHover","getRelativeCursor","ref","ResponsiveTreeMapCanvas","Link","styled","a","Image","img","EmptyContainer","div","textLight","ApiPreview","responseStatus","chartUrl","href","rel","src","alt","tabs","ApiTabs","body","isLoading","useState","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","tab","isCurrent","icon","iconColors","NavItem","Icon","Content","CodeBlock","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","tablet","mobile","nav","span","text","LoaderContainer","loaderBarAnimation","keyframes","LoaderBar","accent","Loader","Button","ApiSubmit","render","this","loading","Component","Container","Header","borderLight","ResponseJson","pre","ApiResponse","response","responseContent","ApiClient","handleSettingsUpdate","settings","setState","handleDataUpdate","e","dataProperty","state","assign","handleSubmit","fetch","nivoApiUrl","method","headers","Accept","then","res","status","json","catch","console","error","component","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","ComponentFlavorSelector","current","ComponentDescription","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","onChange","cardAltBackground","baseClone","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG"],"mappings":"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","file":"component---src-pages-treemap-api-js-eee971b61aa4e57be1a8.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper({\n    label: value => {\n        if (value === `node => \\`\\${node.id} (\\${node.formattedValue})\\``)\n            return node => `${node.id} (${node.formattedValue})`\n        return value\n    },\n    parentLabel: value => {\n        if (value === `node => node.pathComponents.join(' / ')`)\n            return node => node.pathComponents.join(' / ')\n        return value\n    },\n    valueFormat: mapFormat,\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { generateLibTree } from '@nivo/generators'\nimport range from 'lodash/range'\nimport random from 'lodash/random'\n\nexport const generateLightDataSet = () => ({ root: generateLibTree() })\n\nconst HEAVY_NODE_COUNT = 600\n\nexport const generateHeavyDataSet = () => {\n    const children = range(HEAVY_NODE_COUNT).map(i => ({\n        id: `node.${i}`,\n        value: random(10, 100000),\n    }))\n\n    return {\n        root: {\n            id: 'root',\n            children,\n        },\n        nodeCount: HEAVY_NODE_COUNT,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { TreeMapDefaultProps } from '@nivo/treemap'\nimport { motionProperties, defsProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst defaults = TreeMapDefaultProps\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'The hierarchical data object.',\n        type: 'object',\n        required: true,\n    },\n    {\n        key: 'identity',\n        group: 'Base',\n        help: 'The key or function to use to retrieve nodes identity.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.identity,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        help: 'The key or function to use to retrieve nodes value.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: 'value',\n    },\n    {\n        key: 'valueFormat',\n        help: `\n            Value format supporting d3-format notation, this formatted value\n            will then be used for labels and tooltips.\n        `,\n        type: 'string | Function',\n        required: false,\n        controlType: 'valueFormat',\n        group: 'Base',\n    },\n    {\n        key: 'tile',\n        group: 'Base',\n        help: 'Strategy used to compute nodes.',\n        description: `\n            Strategy used to compute nodes, see\n            [official d3 documentation](https://github.com/mbostock/d3/wiki/Treemap-Layout#mode).\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: 'squarify',\n        controlType: 'choices',\n        controlOptions: {\n            choices: [\n                { label: 'binary', value: 'binary' },\n                { label: 'squarify', value: 'squarify' },\n                { label: 'slice', value: 'slice' },\n                { label: 'dice', value: 'dice' },\n                { label: 'sliceDice', value: 'sliceDice' },\n                {\n                    label: 'resquarify',\n                    value: 'resquarify',\n                },\n            ],\n        },\n    },\n    {\n        key: 'leavesOnly',\n        help: 'Only render leaf nodes (no parent).',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.leavesOnly,\n        controlType: 'switch',\n        group: 'Base',\n    },\n    {\n        key: 'innerPadding',\n        help: 'Padding between parent and child node.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.innerPadding,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'outerPadding',\n        help: 'Padding between parent and child node.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.outerPadding,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'colors',\n        help: 'Defines how to compute node color.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'nodeOpacity',\n        help: 'Node opacity (0~1).',\n        required: false,\n        defaultValue: defaults.nodeOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Control node border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'enableLabel',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        help: 'Label accessor.',\n        description:\n            'Defines how to get label text, can be a string (used to access current node property) or a function which will receive the actual node and must return the desired label.',\n        type: 'string | Function',\n        required: false,\n        controlType: 'choices',\n        group: 'Labels',\n        controlOptions: {\n            choices: [\n                'formattedValue',\n                'id',\n                `node => \\`\\${node.id} (\\${node.formattedValue})\\``,\n            ].map(prop => ({\n                label: prop,\n                value: prop,\n            })),\n        },\n    },\n    {\n        key: 'labelSkipSize',\n        help:\n            'Skip label rendering if node minimal side length is lower than given value, 0 to disable.',\n        type: 'number',\n        required: false,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 100,\n        },\n    },\n    {\n        key: 'orientLabel',\n        help: 'Orient labels according to max node width/height.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.orientLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'labelTextColor',\n        help: 'Method to compute label text color.',\n        type: 'string | object | Function',\n        required: false,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'enableParentLabel',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableParentLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'parentLabel',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Parent label accessor.',\n        description:\n            'Defines how to get parent label text, can be a string (used to access current node property) or a function which will receive the actual node and must return the desired label.',\n        type: 'string | Function',\n        required: false,\n        controlType: 'choices',\n        group: 'Labels',\n        controlOptions: {\n            choices: ['id', 'formattedValue', `node => node.pathComponents.join(' / ')`].map(\n                prop => ({\n                    label: prop,\n                    value: prop,\n                })\n            ),\n        },\n    },\n    {\n        key: 'parentLabelSize',\n        flavors: ['svg', 'html', 'api'],\n        help: `Parent label size.`,\n        required: false,\n        defaultValue: defaults.parentLabelSize,\n        type: `number`,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            min: 10,\n            max: 40,\n        },\n    },\n    {\n        key: 'parentLabelPosition',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Parent label position.',\n        type: `'top' | 'right' | 'bottom' | 'left'`,\n        required: false,\n        controlType: 'choices',\n        group: 'Labels',\n        defaultValue: defaults.parentLabelPosition,\n        controlOptions: {\n            choices: ['top', 'right', 'bottom', 'left'].map(prop => ({\n                label: prop,\n                value: prop,\n            })),\n        },\n    },\n    {\n        key: 'parentLabelPadding',\n        flavors: ['svg', 'html', 'api'],\n        help: `Parent label padding.`,\n        required: false,\n        defaultValue: defaults.parentLabelPadding,\n        type: `number`,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'parentLabelTextColor',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Method to compute parent label text color.',\n        type: 'string | object | Function',\n        required: false,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'html', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseEnter handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseMove handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseLeave handler.',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onClick handler.',\n        required: false,\n    },\n    ...motionProperties(['svg', 'html', 'canvas'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { TreeMapDefaultProps } from '@nivo/treemap'\nimport SEO from '../../components/seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/treemap/props'\nimport mapper from '../../data/components/treemap/mapper'\nimport { generateLightDataSet } from '../../data/components/treemap/generator'\nimport meta from '../../data/components/treemap/meta.yml'\n\nconst data = generateLightDataSet()\n\nconst TreeMapApi = () => {\n    return (\n        <>\n            <SEO title=\"TreeMap HTTP API\" keywords={[...meta.TreeMap.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"TreeMap\"\n                chartClass=\"treemap\"\n                apiPath=\"/charts/treemap\"\n                flavors={meta.flavors}\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    root: JSON.stringify(data.root, null, '  '),\n                    identity: 'name',\n                    value: 'loc',\n                    valueFormat: { format: '.02s', enabled: true },\n                    tile: TreeMapDefaultProps.tile,\n                    leavesOnly: TreeMapDefaultProps.leavesOnly,\n                    innerPadding: TreeMapDefaultProps.innerPadding,\n                    outerPadding: TreeMapDefaultProps.outerPadding,\n\n                    margin: {\n                        top: 10,\n                        right: 10,\n                        bottom: 10,\n                        left: 10,\n                    },\n\n                    enableLabel: TreeMapDefaultProps.enableLabel,\n                    label: TreeMapDefaultProps.label,\n                    labelSkipSize: 12,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1.2]],\n                    },\n                    orientLabel: TreeMapDefaultProps.orientLabel,\n                    enableParentLabel: TreeMapDefaultProps.enableParentLabel,\n                    parentLabel: TreeMapDefaultProps.parentLabel,\n                    parentLabelSize: TreeMapDefaultProps.parentLabelSize,\n                    parentLabelPosition: TreeMapDefaultProps.parentLabelPosition,\n                    parentLabelPadding: TreeMapDefaultProps.parentLabelPadding,\n                    parentLabelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 2]],\n                    },\n\n                    colors: { scheme: 'nivo' },\n                    colorBy: 'path.1',\n                    nodeOpacity: 0.5,\n                    borderWidth: 0,\n                    borderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.3]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default TreeMapApi\n","var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\n\n\nvar startCase = createCompounder(function (result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\nmodule.exports = startCase;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nconst TreeMapNode = ({\n    node,\n    animatedProps,\n    borderWidth,\n    enableLabel,\n    enableParentLabel,\n    labelSkipSize,\n}) => {\n    const theme = useTheme()\n\n    const showLabel =\n        enableLabel &&\n        node.isLeaf &&\n        (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n    const showParentLabel = enableParentLabel && node.isParent\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <animated.rect\n                width={animatedProps.width.interpolate(v => Math.max(v, 0))}\n                height={animatedProps.height.interpolate(v => Math.max(v, 0))}\n                fill={node.fill ? node.fill : animatedProps.color}\n                strokeWidth={borderWidth}\n                stroke={node.borderColor}\n                fillOpacity={node.opacity}\n                onMouseEnter={node.onMouseEnter}\n                onMouseMove={node.onMouseMove}\n                onMouseLeave={node.onMouseLeave}\n                onClick={node.onClick}\n            />\n            {showLabel && (\n                <animated.text\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: node.labelTextColor,\n                        pointerEvents: 'none',\n                    }}\n                    fillOpacity={animatedProps.labelOpacity}\n                    transform={animatedProps.labelTransform}\n                >\n                    {node.label}\n                </animated.text>\n            )}\n            {showParentLabel && (\n                <animated.text\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: node.parentLabelTextColor,\n                        pointerEvents: 'none',\n                    }}\n                    fillOpacity={animatedProps.parentLabelOpacity}\n                    transform={animatedProps.parentLabelTransform}\n                >\n                    {node.parentLabel}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n\nTreeMapNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    enableParentLabel: PropTypes.bool.isRequired,\n    labelSkipSize: PropTypes.number.isRequired,\n}\n\nexport default memo(TreeMapNode)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nconst TreeMapHtmlNode = ({\n    node,\n    animatedProps,\n    borderWidth,\n    enableLabel,\n    enableParentLabel,\n    labelSkipSize,\n}) => {\n    const theme = useTheme()\n\n    const showLabel =\n        enableLabel &&\n        node.isLeaf &&\n        (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n    const showParentLabel = enableParentLabel && node.isParent\n\n    return (\n        <animated.div\n            id={node.path.replace(/[^\\w]/gi, '-')}\n            style={{\n                boxSizing: 'border-box',\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                transform: animatedProps.htmlTransform,\n                width: animatedProps.width,\n                height: animatedProps.height,\n                borderWidth,\n                borderStyle: 'solid',\n                borderColor: node.borderColor,\n                overflow: 'hidden',\n            }}\n        >\n            <animated.div\n                style={{\n                    boxSizing: 'border-box',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    opacity: node.opacity,\n                    width: animatedProps.width,\n                    height: animatedProps.height,\n                    background: animatedProps.color,\n                }}\n                onMouseEnter={node.onMouseEnter}\n                onMouseMove={node.onMouseMove}\n                onMouseLeave={node.onMouseLeave}\n                onClick={node.onClick}\n            />\n            {showLabel && (\n                <animated.span\n                    style={{\n                        ...theme.labels.text,\n                        position: 'absolute',\n                        display: 'flex',\n                        top: -5,\n                        left: -5,\n                        width: 10,\n                        height: 10,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        whiteSpace: 'nowrap',\n                        color: node.labelTextColor,\n                        transformOrigin: 'center center',\n                        transform: animatedProps.labelHtmlTransform,\n                        opacity: animatedProps.labelOpacity,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {node.label}\n                </animated.span>\n            )}\n            {showParentLabel && (\n                <animated.span\n                    style={{\n                        ...theme.labels.text,\n                        position: 'absolute',\n                        display: 'flex',\n                        justifyContent: 'flex-start',\n                        alignItems: 'center',\n                        whiteSpace: 'nowrap',\n                        width: 10,\n                        height: 10,\n                        color: node.parentLabelTextColor,\n                        transformOrigin: 'top left',\n                        transform: animatedProps.parentLabelHtmlTransform,\n                        opacity: animatedProps.parentLabelOpacity,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {node.parentLabel}\n                </animated.span>\n            )}\n        </animated.div>\n    )\n}\n\nTreeMapHtmlNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    enableParentLabel: PropTypes.bool.isRequired,\n    labelSkipSize: PropTypes.number.isRequired,\n}\n\nexport default memo(TreeMapHtmlNode)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { treeMapTilePropType, defsPropTypes } from '@nivo/core'\nimport {\n    ordinalColorsPropType,\n    colorPropertyAccessorPropType,\n    inheritedColorPropType,\n} from '@nivo/colors'\nimport TreeMapNode from './TreeMapNode'\nimport TreeMapHtmlNode from './TreeMapHtmlNode'\n\nconst commonPropTypes = {\n    identity: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n    colors: ordinalColorsPropType.isRequired,\n    colorBy: colorPropertyAccessorPropType.isRequired,\n    nodeOpacity: PropTypes.number.isRequired,\n\n    leavesOnly: PropTypes.bool.isRequired,\n    tile: treeMapTilePropType.isRequired,\n    innerPadding: PropTypes.number.isRequired,\n    outerPadding: PropTypes.number.isRequired,\n\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.string,\n    labelSkipSize: PropTypes.number.isRequired,\n    labelTextColor: inheritedColorPropType.isRequired,\n    orientLabel: PropTypes.bool.isRequired,\n\n    enableParentLabel: PropTypes.bool.isRequired,\n    parentLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    parentLabelSize: PropTypes.number.isRequired,\n    parentLabelPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']).isRequired,\n    parentLabelPadding: PropTypes.number.isRequired,\n    parentLabelTextColor: inheritedColorPropType.isRequired,\n\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport const TreeMapPropTypes = {\n    ...commonPropTypes,\n    nodeComponent: PropTypes.elementType.isRequired,\n    role: PropTypes.string.isRequired,\n    ...defsPropTypes,\n}\n\nexport const TreeMapHtmlPropTypes = {\n    ...commonPropTypes,\n    nodeComponent: PropTypes.elementType.isRequired,\n}\n\nexport const TreeMapCanvasPropTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nconst commonDefaultProps = {\n    identity: 'id',\n    value: 'value',\n\n    tile: 'squarify',\n    leavesOnly: false,\n    innerPadding: 0,\n    outerPadding: 0,\n\n    colors: { scheme: 'nivo' },\n    colorBy: 'pathComponents.1',\n    nodeOpacity: 0.33,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipSize: 0,\n    labelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    orientLabel: true,\n\n    enableParentLabel: true,\n    parentLabel: 'id',\n    parentLabelSize: 20,\n    parentLabelPosition: 'top',\n    parentLabelPadding: 6,\n    parentLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    borderWidth: 1,\n    borderColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const TreeMapDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapNode,\n    role: 'img',\n    defs: [],\n    fill: [],\n}\n\nexport const TreeMapHtmlDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapHtmlNode,\n}\n\nexport const TreeMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst TreeMapNodeTooltip = ({ node, tooltip }) => {\n    return (\n        <BasicTooltip\n            id={node.id}\n            value={node.formattedValue}\n            enableChip={true}\n            color={node.color}\n            renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { node }) : null}\n        />\n    )\n}\n\nTreeMapNodeTooltip.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        formattedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    tooltip: PropTypes.elementType,\n}\n\nexport default memo(TreeMapNodeTooltip)\n","import React, { useCallback, useMemo } from 'react'\nimport get from 'lodash/get'\nimport omit from 'lodash/omit'\nimport cloneDeep from 'lodash/cloneDeep'\nimport startCase from 'lodash/startCase'\nimport { treemap as d3Treemap, hierarchy } from 'd3-hierarchy'\nimport { treeMapTileFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { TreeMapDefaultProps } from './props'\nimport TreeMapNodeTooltip from './TreeMapNodeTooltip'\n\nexport const useTreeMapLayout = ({\n    width,\n    height,\n    tile,\n    innerPadding,\n    outerPadding,\n    enableParentLabel,\n    parentLabelSize,\n    parentLabelPosition,\n    leavesOnly,\n}) =>\n    useMemo(() => {\n        const treemap = d3Treemap()\n            .size([width, height])\n            .tile(treeMapTileFromProp(tile))\n            .round(true)\n            .paddingInner(innerPadding)\n            .paddingOuter(outerPadding)\n\n        if (enableParentLabel && !leavesOnly) {\n            const parentLabelPadding = parentLabelSize + outerPadding * 2\n            treemap[`padding${startCase(parentLabelPosition)}`](parentLabelPadding)\n        }\n\n        return treemap\n    }, [\n        width,\n        height,\n        tile,\n        innerPadding,\n        outerPadding,\n        enableParentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        leavesOnly,\n    ])\n\nexport const useHierarchy = ({ root, getValue }) =>\n    useMemo(() => hierarchy(root).sum(getValue), [root, getValue])\n\nexport const useAccessor = accessor =>\n    useMemo(() => {\n        if (typeof accessor === 'function') return accessor\n        return d => get(d, accessor)\n    }, [accessor])\n\nconst computeNodeIdAndPath = (node, getIdentity) => {\n    const path = node\n        .ancestors()\n        .map(ancestor => getIdentity(ancestor.data))\n        .reverse()\n\n    return [path.join('.'), path]\n}\n\nexport const useTreeMap = ({\n    data,\n    identity = TreeMapDefaultProps.identity,\n    value = TreeMapDefaultProps.value,\n    valueFormat,\n    leavesOnly = TreeMapDefaultProps.leavesOnly,\n    width,\n    height,\n    tile = TreeMapDefaultProps.tile,\n    innerPadding = TreeMapDefaultProps.innerPadding,\n    outerPadding = TreeMapDefaultProps.outerPadding,\n    label = TreeMapDefaultProps.label,\n    orientLabel = TreeMapDefaultProps.orientLabel,\n    enableParentLabel = TreeMapDefaultProps.enableParentLabel,\n    parentLabel = TreeMapDefaultProps.parentLabel,\n    parentLabelSize = TreeMapDefaultProps.parentLabelSize,\n    parentLabelPosition = TreeMapDefaultProps.parentLabelPosition,\n    parentLabelPadding = TreeMapDefaultProps.parentLabelPadding,\n    colors = TreeMapDefaultProps.colors,\n    colorBy = TreeMapDefaultProps.colorBy,\n    nodeOpacity = TreeMapDefaultProps.nodeOpacity,\n    borderColor = TreeMapDefaultProps.borderColor,\n    labelTextColor = TreeMapDefaultProps.labelTextColor,\n    parentLabelTextColor = TreeMapDefaultProps.parentLabelTextColor,\n}) => {\n    const getIdentity = useAccessor(identity)\n    const getValue = useAccessor(value)\n    const formatValue = useValueFormatter(valueFormat)\n    const getLabel = useAccessor(label)\n    const getParentLabel = useAccessor(parentLabel)\n\n    const layout = useTreeMapLayout({\n        width,\n        height,\n        tile,\n        innerPadding,\n        outerPadding,\n        enableParentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        leavesOnly,\n    })\n\n    const hierarchy = useHierarchy({ root: data, getValue })\n\n    const rawNodes = useMemo(() => {\n        // d3 treemap mutates the data, so we need to copy it\n        // to have proper behavior for subsequents useMemo()\n        const root = cloneDeep(hierarchy)\n        layout(root)\n\n        return leavesOnly ? root.leaves() : root.descendants()\n    }, [hierarchy, layout, leavesOnly])\n\n    const nodes = useMemo(\n        () =>\n            rawNodes.map(rawNode => {\n                const [path, pathComponents] = computeNodeIdAndPath(rawNode, getIdentity)\n\n                const node = {\n                    id: getIdentity(rawNode.data),\n                    path,\n                    pathComponents,\n                    data: omit(rawNode.data, 'children'),\n                    x: rawNode.x0,\n                    y: rawNode.y0,\n                    width: rawNode.x1 - rawNode.x0,\n                    height: rawNode.y1 - rawNode.y0,\n                    value: rawNode.value,\n                    formattedValue: formatValue(rawNode.value),\n                    treeDepth: rawNode.depth,\n                    treeHeight: rawNode.height,\n                    isParent: rawNode.height > 0,\n                    isLeaf: rawNode.height === 0,\n                }\n\n                node.label = getLabel(node)\n                node.parentLabel = getParentLabel(node)\n                node.parentLabelRotation = 0\n\n                if (parentLabelPosition === 'top') {\n                    node.parentLabelX = outerPadding + parentLabelPadding\n                    node.parentLabelY = outerPadding + parentLabelSize / 2\n                }\n                if (parentLabelPosition === 'right') {\n                    node.parentLabelX = node.width - outerPadding - parentLabelSize / 2\n                    node.parentLabelY = node.height - outerPadding - parentLabelPadding\n                    node.parentLabelRotation = -90\n                }\n                if (parentLabelPosition === 'bottom') {\n                    node.parentLabelX = outerPadding + parentLabelPadding\n                    node.parentLabelY = node.height - outerPadding - parentLabelSize / 2\n                }\n                if (parentLabelPosition === 'left') {\n                    node.parentLabelX = outerPadding + parentLabelSize / 2\n                    node.parentLabelY = node.height - outerPadding - parentLabelPadding\n                    node.parentLabelRotation = -90\n                }\n\n                return node\n            }),\n        [\n            rawNodes,\n            leavesOnly,\n            getIdentity,\n            formatValue,\n            getLabel,\n            getParentLabel,\n            parentLabelSize,\n            parentLabelPosition,\n            parentLabelPadding,\n            outerPadding,\n        ]\n    )\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const getParentLabelTextColor = useInheritedColor(parentLabelTextColor, theme)\n\n    const enhancedNodes = useMemo(\n        () =>\n            nodes.map(node => {\n                node.opacity = nodeOpacity\n                node.labelRotation = orientLabel && node.height > node.width ? -90 : 0\n                node.color = getColor(node)\n                node.borderColor = getBorderColor(node)\n                node.labelTextColor = getLabelTextColor(node)\n                node.parentLabelTextColor = getParentLabelTextColor(node)\n\n                return node\n            }),\n        [\n            nodes,\n            getColor,\n            nodeOpacity,\n            getBorderColor,\n            getLabelTextColor,\n            getParentLabelTextColor,\n            orientLabel,\n        ]\n    )\n\n    return {\n        hierarchy,\n        nodes: enhancedNodes,\n        layout,\n    }\n}\n\nexport const useInteractiveTreeMapNodes = (\n    nodes,\n    { isInteractive, onMouseEnter, onMouseMove, onMouseLeave, onClick, tooltip }\n) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(\n                <TreeMapNodeTooltip node={node} tooltip={tooltip} />,\n                event,\n                'left'\n            )\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseEnter = useCallback(\n        (node, event) => {\n            showTooltip(node, event)\n            onMouseEnter && onMouseEnter(node, event)\n        },\n        [onMouseEnter, showTooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        (node, event) => {\n            showTooltip(node, event)\n            onMouseMove && onMouseMove(node, event)\n        },\n        [onMouseMove, showTooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (node, event) => {\n            hideTooltip()\n            onMouseLeave && onMouseLeave(node, event)\n        },\n        [onMouseLeave, hideTooltip]\n    )\n\n    const handleClick = useCallback(\n        (node, event) => {\n            onClick && onClick(node, event)\n        },\n        [onClick]\n    )\n\n    return useMemo(() => {\n        return nodes.map(node => {\n            if (!isInteractive) return node\n\n            return {\n                ...node,\n                onMouseEnter: event => handleMouseEnter(node, event),\n                onMouseMove: event => handleMouseMove(node, event),\n                onMouseLeave: event => handleMouseLeave(node, event),\n                onClick: event => handleClick(node, event),\n            }\n        })\n    }, [nodes, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { useInteractiveTreeMapNodes } from './hooks'\n\nconst getAnimatedNodeProps = node => {\n    return {\n        transform: `translate(${node.x},${node.y})`,\n        htmlTransform: `translate(${node.x}px,${node.y}px)`,\n        labelOpacity: 1,\n        labelTransform: `translate(${node.width / 2},${node.height / 2}) rotate(${\n            node.labelRotation\n        })`,\n        labelHtmlTransform: `translate(${node.width / 2}px,${node.height / 2}px) rotate(${\n            node.labelRotation\n        }deg)`,\n        parentLabelOpacity: 1,\n        parentLabelTransform: `translate(${node.parentLabelX},${node.parentLabelY}) rotate(${node.parentLabelRotation})`,\n        parentLabelHtmlTransform: `translate(${\n            node.parentLabelX - (node.parentLabelRotation === 0 ? 0 : 5)\n        }px,${node.parentLabelY - (node.parentLabelRotation === 0 ? 5 : 0)}px) rotate(${\n            node.parentLabelRotation\n        }deg)`,\n        width: node.width,\n        height: node.height,\n        color: node.color,\n    }\n}\n\nconst getEndingAnimatedNodeProps = node => {\n    const x = node.x + node.width / 2\n    const y = node.y + node.height / 2\n\n    return {\n        transform: `translate(${x},${y})`,\n        transformPixels: `translate(${x}px,${y}px)`,\n        labelOpacity: 0,\n        labelTransform: `translate(0,0) rotate(${node.labelRotation})`,\n        parentLabelOpacity: 0,\n        parentLabelTransform: `translate(0,0) rotate(${node.parentLabelRotation})`,\n        parentLabelHtmlTransform: `translate(0px,0px) rotate(${node.parentLabelRotation}deg)`,\n        width: 0,\n        height: 0,\n        color: node.color,\n    }\n}\n\nconst TreeMapNodes = ({\n    nodes,\n    nodeComponent,\n    borderWidth,\n    enableLabel,\n    labelSkipSize,\n    enableParentLabel,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}) => {\n    const interactiveNodes = useInteractiveTreeMapNodes(nodes, {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transitions = useTransition(interactiveNodes, node => node.path, {\n        initial: node => getAnimatedNodeProps(node),\n        from: node => getEndingAnimatedNodeProps(node),\n        enter: node => getAnimatedNodeProps(node),\n        update: node => getAnimatedNodeProps(node),\n        leave: node => getEndingAnimatedNodeProps(node),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return transitions.map(({ item: node, props: animatedProps, key }) => {\n        return React.createElement(nodeComponent, {\n            key,\n            node,\n            animatedProps,\n            borderWidth,\n            enableLabel,\n            labelSkipSize,\n            enableParentLabel,\n        })\n    })\n}\n\nTreeMapNodes.propTypes = {\n    nodes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    nodeComponent: PropTypes.elementType.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    labelSkipSize: PropTypes.number.isRequired,\n    enableParentLabel: PropTypes.bool.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.elementType,\n}\n\nexport default memo(TreeMapNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { SvgWrapper, withContainer, useDimensions, bindDefs } from '@nivo/core'\nimport { TreeMapDefaultProps, TreeMapPropTypes } from './props'\nimport { useTreeMap } from './hooks'\nimport TreeMapNodes from './TreeMapNodes'\n\nconst TreeMap = ({\n    data,\n    identity,\n    value,\n    tile,\n    nodeComponent,\n    valueFormat,\n    innerPadding,\n    outerPadding,\n    leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    colorBy,\n    nodeOpacity,\n    borderWidth,\n    borderColor,\n    defs,\n    fill,\n    enableLabel,\n    label,\n    labelTextColor,\n    orientLabel,\n    labelSkipSize,\n    enableParentLabel,\n    parentLabel,\n    parentLabelSize,\n    parentLabelPosition,\n    parentLabelPadding,\n    parentLabelTextColor,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel,\n        parentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        parentLabelPadding,\n        parentLabelTextColor,\n    })\n\n    const boundDefs = bindDefs(defs, nodes, fill)\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            <TreeMapNodes\n                nodes={nodes}\n                nodeComponent={nodeComponent}\n                borderWidth={borderWidth}\n                enableLabel={enableLabel}\n                labelSkipSize={labelSkipSize}\n                enableParentLabel={enableParentLabel}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n            />\n        </SvgWrapper>\n    )\n}\n\nTreeMap.propTypes = TreeMapPropTypes\n\nconst WrappedTreeMap = withContainer(TreeMap)\nWrappedTreeMap.defaultProps = TreeMapDefaultProps\n\nexport default WrappedTreeMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport TreeMap from './TreeMap'\n\nconst ResponsiveTreeMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveTreeMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { withContainer, useDimensions } from '@nivo/core'\nimport { TreeMapHtmlPropTypes, TreeMapHtmlDefaultProps } from './props'\nimport { useTreeMap } from './hooks'\nimport TreeMapNodes from './TreeMapNodes'\n\nconst TreeMapHtml = ({\n    data,\n    identity,\n    value,\n    tile,\n    nodeComponent,\n    valueFormat,\n    innerPadding,\n    outerPadding,\n    leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    colorBy,\n    nodeOpacity,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    label,\n    labelTextColor,\n    orientLabel,\n    labelSkipSize,\n    enableParentLabel,\n    parentLabel,\n    parentLabelSize,\n    parentLabelPosition,\n    parentLabelPadding,\n    parentLabelTextColor,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel,\n        parentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        parentLabelPadding,\n        parentLabelTextColor,\n    })\n\n    return (\n        <div\n            style={{\n                position: 'relative',\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        >\n            <div style={{ position: 'absolute', top: margin.top, left: margin.left }}>\n                <TreeMapNodes\n                    nodes={nodes}\n                    nodeComponent={nodeComponent}\n                    borderWidth={borderWidth}\n                    enableLabel={enableLabel}\n                    labelSkipSize={labelSkipSize}\n                    enableParentLabel={enableParentLabel}\n                    isInteractive={isInteractive}\n                    onMouseEnter={onMouseEnter}\n                    onMouseMove={onMouseMove}\n                    onMouseLeave={onMouseLeave}\n                    onClick={onClick}\n                    tooltip={tooltip}\n                />\n            </div>\n        </div>\n    )\n}\n\nTreeMapHtml.propTypes = TreeMapHtmlPropTypes\n\nconst WrappedTreeMapHtml = withContainer(TreeMapHtml)\nWrappedTreeMapHtml.defaultProps = TreeMapHtmlDefaultProps\n\nexport default WrappedTreeMapHtml\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport TreeMapHtml from './TreeMapHtml'\n\nconst ResponsiveTreeMapHtml = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMapHtml width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveTreeMapHtml\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useCallback, useEffect, useRef } from 'react'\nimport {\n    degreesToRadians,\n    getRelativeCursor,\n    isCursorInRect,\n    withContainer,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { TreeMapCanvasPropTypes, TreeMapCanvasDefaultProps } from './props'\nimport { useTreeMap } from './hooks'\nimport TreeMapNodeTooltip from './TreeMapNodeTooltip'\n\nconst findNodeUnderCursor = (nodes, margin, x, y) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst TreeMapCanvas = ({\n    data,\n    identity,\n    value,\n    tile,\n    valueFormat,\n    innerPadding,\n    outerPadding,\n    leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    colorBy,\n    nodeOpacity,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    label,\n    labelTextColor,\n    orientLabel,\n    labelSkipSize,\n    isInteractive,\n    onMouseMove,\n    onClick,\n    tooltip,\n    pixelRatio,\n}) => {\n    const canvasEl = useRef(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel: false,\n    })\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        nodes.forEach(node => {\n            ctx.fillStyle = node.color\n            ctx.fillRect(node.x, node.y, node.width, node.height)\n\n            if (borderWidth > 0) {\n                ctx.strokeStyle = node.borderColor\n                ctx.lineWidth = borderWidth\n                ctx.strokeRect(node.x, node.y, node.width, node.height)\n            }\n        })\n\n        if (enableLabel) {\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            nodes.forEach(node => {\n                const showLabel =\n                    node.isLeaf &&\n                    (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n                if (!showLabel) return\n\n                const rotate = orientLabel && node.height > node.width\n\n                ctx.save()\n                ctx.translate(node.x + node.width / 2, node.y + node.height / 2)\n                ctx.rotate(degreesToRadians(rotate ? -90 : 0))\n\n                ctx.fillStyle = node.labelTextColor\n                ctx.fillText(node.label, 0, 0)\n\n                ctx.restore()\n            })\n        }\n    }, [\n        canvasEl,\n        nodes,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        borderWidth,\n        enableLabel,\n        orientLabel,\n        labelSkipSize,\n        theme,\n        pixelRatio,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const node = findNodeUnderCursor(nodes, margin, x, y)\n\n            if (node !== undefined) {\n                showTooltipFromEvent(\n                    <TreeMapNodeTooltip node={node} tooltip={tooltip} />,\n                    event,\n                    'left'\n                )\n                onMouseMove && onMouseMove(node, event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [canvasEl, nodes, margin, showTooltipFromEvent, hideTooltip, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const node = findNodeUnderCursor(nodes, margin, x, y)\n\n            if (node === undefined) return\n\n            onClick && onClick(node, event)\n        },\n        [canvasEl, nodes, margin, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nTreeMapCanvas.propTypes = TreeMapCanvasPropTypes\n\nconst WrappedTreeMapCanvas = withContainer(TreeMapCanvas)\nWrappedTreeMapCanvas.defaultProps = TreeMapCanvasDefaultProps\n\nexport default WrappedTreeMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport TreeMapCanvas from './TreeMapCanvas'\n\nconst ResponsiveTreeMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveTreeMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ApiPreview = ({ responseStatus, chartUrl }) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n\n    return <div className=\"api-client_preview\">{content}</div>\n}\n\nApiPreview.propTypes = {\n    responseStatus: PropTypes.number,\n    chartUrl: PropTypes.string,\n}\n\nexport default ApiPreview\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport ApiPreview from './ApiPreview'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\nimport CodeBlock from '../../CodeBlock'\n\nconst tabs = ['preview', 'body', 'data']\n\nconst ApiTabs = ({ chartClass, data, body, isLoading, responseStatus, chartUrl }) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState('preview')\n    const [hoverTab, setHoverTab] = useState(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview\n                        isLoading={isLoading}\n                        responseStatus={responseStatus}\n                        chartUrl={chartUrl}\n                    />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nApiTabs.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n}\n\nexport default ApiTabs\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.6);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 60%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst LoaderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n\nclass ApiSubmit extends Component {\n    render() {\n        const { loading, onClick } = this.props\n\n        return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n    }\n}\n\nApiSubmit.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nApiSubmit.defaultProps = {}\n\nexport default ApiSubmit\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n\nclass ApiResponse extends Component {\n    render() {\n        const { responseStatus, response } = this.props\n\n        let responseContent = 'no response available'\n        if (response) {\n            responseContent = JSON.stringify(response, null, '  ')\n        }\n\n        return (\n            <Container>\n                <Header>\n                    Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}\n                </Header>\n                <ResponseJson>{responseContent}</ResponseJson>\n            </Container>\n        )\n    }\n}\n\nApiResponse.propTypes = {}\n\nApiResponse.defaultProps = {}\n\nexport default ApiResponse\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport ComponentPage from '../ComponentPage'\nimport ComponentHeader from '../ComponentHeader'\nimport ComponentFlavorSelector from '../ComponentFlavorSelector'\nimport ComponentDescription from '../ComponentDescription'\nimport ComponentSettings from '../ComponentSettings'\nimport ApiTabs from './ApiTabs'\nimport ApiSubmit from './ApiSubmit'\nimport ApiResponse from './ApiResponse'\nimport config from '../../../data/config'\n\nconst description = component => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\nexport default class ApiClient extends Component {\n    static propTypes = {\n        componentName: PropTypes.string.isRequired,\n        chartClass: PropTypes.string.isRequired,\n        apiPath: PropTypes.string.isRequired,\n        dataProperty: PropTypes.string.isRequired,\n        propsMapper: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        dataProperty: 'data',\n        propsMapper: props => props,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            props: props.defaultProps,\n            loading: false,\n            responseStatus: null,\n            response: null,\n        }\n    }\n\n    handleSettingsUpdate = settings => {\n        this.setState({ props: settings })\n    }\n\n    handleDataUpdate = e => {\n        const { dataProperty } = this.props\n        const { props } = this.state\n\n        this.setState({\n            props: Object.assign({}, props, {\n                [dataProperty]: e.target.value,\n            }),\n        })\n    }\n\n    handleSubmit = () => {\n        const { apiPath, propsMapper } = this.props\n        const { props } = this.state\n\n        this.setState({\n            loading: true,\n        })\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    responseStatus: res.status,\n                })\n\n                return res.json()\n            })\n            .then(res => {\n                this.setState({ response: res })\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    render() {\n        const {\n            componentName,\n            chartClass,\n            apiPath,\n            controlGroups,\n            dataProperty,\n            propsMapper,\n            flavors,\n        } = this.props\n        const { props, loading, responseStatus, response } = this.state\n\n        const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n        return (\n            <Layout>\n                <ComponentPage>\n                    <ComponentHeader\n                        chartClass={`${componentName} HTTP API`}\n                        tags={[`POST ${apiPath}`]}\n                    />\n                    {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                    <ComponentDescription description={description(componentName, apiPath)} />\n                    <ApiTabs\n                        chartClass={chartClass}\n                        data={props[dataProperty]}\n                        body={propsMapper(props)}\n                        isLoading={loading}\n                        responseStatus={responseStatus}\n                        chartUrl={response ? response.url : null}\n                    />\n                    <ControlPanel>\n                        <SubmitWrapper>\n                            <ApiSubmit loading={loading} onClick={this.handleSubmit} />\n                        </SubmitWrapper>\n                        <ApiResponse responseStatus={responseStatus} response={response} />\n                    </ControlPanel>\n                    <ComponentSettings\n                        component={componentName}\n                        settings={props}\n                        flavors={flavorKeys}\n                        currentFlavor=\"api\"\n                        groups={controlGroups}\n                        onChange={this.handleSettingsUpdate}\n                    />\n                </ComponentPage>\n            </Layout>\n        )\n    }\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.6);\n    width: var(--partialWidth);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 60%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n","var baseClone = require('./_baseClone');\n/** Used to compose bitmasks for cloning. */\n\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\n\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;"],"sourceRoot":""}