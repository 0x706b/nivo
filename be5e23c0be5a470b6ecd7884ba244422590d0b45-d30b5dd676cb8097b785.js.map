{"version":3,"file":"be5e23c0be5a470b6ecd7884ba244422590d0b45-d30b5dd676cb8097b785.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/./src/data/components/scatterplot/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/utils.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/AnnotationNote.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../src/AnnotationLink.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://nivo-website/../src/CircleAnnotationOutline.tsx","webpack://nivo-website/../src/DotAnnotationOutline.tsx","webpack://nivo-website/../src/RectAnnotationOutline.tsx","webpack://nivo-website/../src/Annotation.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/./src/data/components/scatterplot/generator.js","webpack://nivo-website/./src/data/components/scatterplot/mapper.js","webpack://nivo-website/../node_modules/lodash/_baseFilter.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/filter.js","webpack://nivo-website/../node_modules/lodash/random.js"],"sourcesContent":["export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import { commonDefaultProps, svgDefaultProps } from '@nivo/scatterplot'\nimport {\n    themeProperty,\n    axesProperties,\n    motionProperties,\n    getLegendsProps,\n    groupProperties,\n} from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:   string | number\n                data: Array<{\n                    x: number | string | Date\n                    y: number | string | Date\n                }>\n            }>\n            \\`\\`\\`\n\n            Please note that you should adjust \\`xScale\\`\n            and \\`yScale\\` according to \\`x\\` and \\`y\\` type,\n            for example if you use dates, you should use\n            a \\`time\\` scale.\n        `,\n        required: true,\n    },\n    {\n        key: 'xScale',\n        type: 'object',\n        help: `X scale configuration.`,\n        group: 'Base',\n        controlType: 'object',\n        controlOptions: {\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type, supports linear, point and time scales.`,\n                    type: 'string',\n                    controlType: 'choices',\n                    controlOptions: {\n                        disabled: true,\n                        choices: ['linear'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Minimum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Maximum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 1200,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'xFormat',\n        group: 'Base',\n        type: 'string | Function',\n        help: 'Optional formatter for x values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'yScale',\n        group: 'Base',\n        type: 'object',\n        help: `Y scale configuration.`,\n        controlType: 'object',\n        controlOptions: {\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type, supports linear, point and time scales.`,\n                    type: 'string',\n                    controlType: 'choices',\n                    controlOptions: {\n                        disabled: true,\n                        choices: ['linear'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Minimum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Maximum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 1200,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'yFormat',\n        group: 'Base',\n        type: 'string | Function',\n        help: 'Optional formatter for y values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'nodeId',\n        group: 'Base',\n        defaultValue: '(d) => `${d.serieId}.${d.index}`',\n        type: 'string | (datum) => string',\n        help: `ID accessor for the node.`,\n        description: `\n            Define how to determine the id of each node on the plot. This value\n            will impact animation. Nodes will transition from a previous state\n            at the same index, thus, it can be  useful to specify this property\n            if we want to establish some continuity between nodes at different\n            index.\n\n            By default nivo will join together the serie.id and datum index.\n        `,\n    },\n    {\n        key: 'nodeSize',\n        group: 'Base',\n        defaultValue: commonDefaultProps.nodeSize,\n        type: 'number | object | Function',\n        help: `How to compute node size, static or dynamic.`,\n        description: `\n            If you provide a **number**, all nodes will have the same\n            **fixed size**.\n\n            You can also use an object to define a varying size,\n            it must conform to the following interface:\n\n            \\`\\`\\`\n            {\n                key:    string\n                values: [min: number, max: number]\n                sizes:  [min: number, max: number]\n            }\n            \\`\\`\\`\n\n            Then the size of each node will **depend on the value\n            of \\`key\\` and \\`sizes\\`**.\n\n            If you use a **custom function**, it will receive the current\n            node and must **return a number**.\n        `,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 24,\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        description: `\n            Not required if using\n            \\`Responsive*\\` component.\n            Also note that width exclude left/right axes,\n            please add margin to make sure they're visible.\n        `,\n        help: 'Chart width.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        description: `\n            Not required if using\n            \\`Responsive*\\` component.\n            Also note that width exclude top/bottom axes,\n            please add margin to make sure they're visible.\n        `,\n        help: 'Chart height.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty(['svg', 'canvas']),\n    {\n        key: 'colors',\n        group: 'Style',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: commonDefaultProps.colors,\n        controlType: 'ordinalColors',\n    },\n    {\n        key: 'blendMode',\n        group: 'Style',\n        flavors: ['svg'],\n        help: 'Defines CSS mix-blend-mode property.',\n        description: `\n            Defines CSS \\`mix-blend-mode\\` property for nodes,\n            see\n            [MDN documentation](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode).\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: commonDefaultProps.blendMode,\n        controlType: 'blendMode',\n    },\n    {\n        key: 'layers',\n        flavors: ['svg', 'canvas'],\n        group: 'Customization',\n        help: 'Defines the order of layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`grid\\`, \\`axes\\`, \\`points\\`, \\`markers\\`,\n            \\`mesh\\`, \\`legends\\`.\n\n            You can also use this to insert extra layers\n            to the chart.\n\n            For \\`ScatterPlot\\`, the extra layer should be a component\n            and will receive current chart context as props.\n\n            If using \\`ScatterPlotCanvas\\`, the extra layer should be\n            a function and will receive canvas context as first argument\n            and current chart context object as second.\n        `,\n        required: false,\n        defaultValue: svgDefaultProps.layers,\n    },\n    {\n        key: 'nodeComponent',\n        flavors: ['svg'],\n        group: 'Customization',\n        help: 'Override default node rendering for SVG implementation.',\n        type: 'FunctionComponent<ScatterPlotNodeProps<RawDatum>>',\n        description: `\n            When you override the default node component, you should use\n            an \\`animated\\` element if you wish to preserve transitions,\n            for example:\n            \n            \\`\\`\\`\n            import { animated } from '@react-spring/web'\n            \n            export const MyCustomNode = (props) => (\n                <animated.circle\n                    cx={props.style.x}\n                    cy={props.style.y}\n                    r={props.style.size.to(size => size / 2)}\n                    fill={style.color}\n                    style={{ mixBlendMode: props.blendMode }}\n                />\n            )\n            \\`\\`\\`\n            \n            The \\`style\\` property contains \\`react-spring\\` values, suitable\n            for \\`animated.*\\` elements.\n            \n            You can have a look at the [default node implementation](https://github.com/plouc/nivo/blob/master/packages/scatterplot/src/Node.tsx)\n            to see how props are used by default.\n        `,\n        required: false,\n    },\n    {\n        key: 'renderNode',\n        flavors: ['canvas'],\n        group: 'Customization',\n        help: 'Override default node rendering for canvas implementation.',\n        type: '(ctx: CanvasRenderingContext2D, props: ScatterPlotLayerProps<RawDatum>) => void',\n        description: `\n            This is how the default rendering is done:\n            \n            \\`\\`\\`\n            const renderNode = (ctx, node) => {\n                ctx.beginPath()\n                ctx.arc(node.x, node.y, node.size / 2, 0, 2 * Math.PI)\n                ctx.fillStyle = node.color\n                ctx.fill()\n            }\n            \\`\\`\\`\n        `,\n        required: false,\n    },\n    {\n        key: 'enableGridX',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: commonDefaultProps.enableGridX,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    {\n        key: 'gridXValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for vertical grid lines.',\n        type: 'Array<number | string | Date>',\n        required: false,\n    },\n    {\n        key: 'enableGridY',\n        group: 'Grid & Axes',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: commonDefaultProps.enableGridY,\n        controlType: 'switch',\n    },\n    {\n        key: 'gridYValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for horizontal grid lines.',\n        type: 'Array<number | string | Date>',\n        required: false,\n    },\n    ...axesProperties(),\n    {\n        key: 'isInteractive',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: commonDefaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'useMesh',\n        group: 'Interactivity',\n        flavors: ['svg'],\n        help: 'Use a mesh to detect mouse interactions.',\n        type: 'boolean',\n        required: false,\n        defaultValue: commonDefaultProps.useMesh,\n        controlType: 'switch',\n    },\n    {\n        key: 'debugMesh',\n        help: 'Display mesh used to detect mouse interactions (voronoi cells).',\n        type: 'boolean',\n        required: false,\n        defaultValue: commonDefaultProps.debugMesh,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will\n            receive the node as a property.\n\n            You can also customize the tooltip style\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        help: 'onMouseEnter handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        help: 'onMouseMove handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        help: 'onMouseLeave handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        help: 'onClick handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'legends',\n        group: 'Legends',\n        flavors: ['svg', 'canvas'],\n        type: 'object[]',\n        help: `Optional chart's legends.`,\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 0,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n    {\n        key: 'annotations',\n        group: 'Annotations',\n        help: 'Extra annotations.',\n        type: 'object[]',\n        required: false,\n    },\n    {\n        key: 'markers',\n        group: 'Annotations',\n        help: 'Extra markers.',\n        type: 'object[]',\n        flavors: ['svg'],\n        required: false,\n    },\n    ...motionProperties(['svg'], svgDefaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationSpec,\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: Required<AnnotationSpec<Datum>>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    AnnotationSpec,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: Required<AnnotationSpec<Datum>>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: Required<AnnotationSpec<Datum>>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\nconst keys = ['group A', 'group B', 'group C', 'group D', 'group E']\nconst ageRange = [0, 100]\nconst weightRange = [0, 120]\n\nconst generateData = size =>\n    keys.map(key => ({\n        id: key,\n        data: range(size).map(i => ({\n            x: random(ageRange[0], ageRange[1]),\n            y: random(weightRange[0], weightRange[1]),\n        })),\n    }))\n\nexport const generateLightDataSet = () => generateData(50)\n\nexport const generateHeavyDataSet = () => generateData(800)\n","import React from 'react'\nimport { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        xFormat: mapFormat,\n        yFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"names":["durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","arguments","length","floor","ceil","round","d0","d1","offset","step","Math","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","d","props","key","group","help","description","required","type","controlType","controlOptions","disabled","choices","map","v","label","value","disabledValue","defaultValue","min","max","commonDefaultProps","unit","enableControlForFlavors","flavors","themeProperty","svgDefaultProps","axesProperties","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","legend","anchor","direction","defaults","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","itemDirection","onClick","data","alert","JSON","stringify","motionProperties","groups","groupProperties","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","source","getOwnPropertyDescriptors","defineProperties","_arrayLikeToArray","arr","len","arr2","Array","_iterableToArray","iter","Symbol","iterator","from","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","_toConsumableArray","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","TypeError","nonIterableSpread","defaultProps","isCircleAnnotation","annotationSpec","isDotAnnotation","isRectAnnotation","computeAnnotation","x","annotation","y","noteX","noteY","noteWidth","noteTextOffset","computedNoteX","computedNoteY","computedX","computedY","angle","targetY","targetX","absoluteAngleDegrees","radiansToDegrees","getLinkAngle","position","positionFromAngle","degreesToRadians","eighth","textX","noteLineX","points","text","useAnnotations","annotations","getPosition","getDimensions","useMemo","datum","dimensions","size","bindAnnotations","useComputedAnnotations","computed","AnnotationNote","note","theme","useTheme","useMotionConfig","animate","springConfig","animatedProps","useSpring","config","immediate","createElement","style","strokeLinejoin","strokeWidth","stroke","outlineColor","_arrayWithHoles","_nonIterableRest","_slicedToArray","arrayWithHoles","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","nonIterableRest","AnnotationLink","isOutline","path","firstPoint","animatedPath","useAnimatedPath","fill","CircleAnnotationOutline","radius","cx","cy","r","outline","DotAnnotationOutline","symbol","RectAnnotationOutline","width","height","Annotation","useComputedAnnotation","noteType","isValidElement","isSvgNote","drawPoints","ctx","renderAnnotationsToCanvas","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","centerScale","line","lineX","lineY","textY","isRTL","document","textAlign","textBaseline","translate","ticks","getFormatter","formatter","timeFormat","d3Format","computeGridLines","_values","lines","x1","x2","y1","y2","AxisTick","_value","textAnchor","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transition","useTransition","tick","initial","textTransform","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","Number","String","renderAxesToCanvas","renderGridLinesToCanvas","ageRange","weightRange","generateData","id","random","generateLightDataSet","generateHeavyDataSet","xFormat","yFormat","axisTop","axisRight","axisBottom","axisLeft","baseEach","module","exports","collection","predicate","result","nativeFloor","nativeRandom","lower","upper","arrayFilter","baseFilter","baseIteratee","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","rand"],"sourceRoot":""}