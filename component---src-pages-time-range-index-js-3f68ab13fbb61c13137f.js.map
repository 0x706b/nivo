{"version":3,"file":"component---src-pages-time-range-index-js-3f68ab13fbb61c13137f.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/../node_modules/d3-time/src/month.js","webpack://nivo-website/../node_modules/d3-time/src/week.js","webpack://nivo-website/../node_modules/d3-time/src/year.js","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/./src/data/components/time-range/mapper.js","webpack://nivo-website/./src/data/components/time-range/props.ts","webpack://nivo-website/./src/pages/time-range/index.js","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseIsDate.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/isDate.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import interval from \"./interval.js\";\nvar month = interval(function (date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function (start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function (date) {\n  return date.getMonth();\n});\nexport default month;\nexport var months = month.range;","import interval from \"./interval.js\";\nimport { durationMinute, durationWeek } from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function (date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;","import interval from \"./interval.js\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    distance: number\n    source: string\n    target: string\n}\n\ntype ExtraNode = {\n    color: string\n    depth: number\n    id: string\n    radius: number\n}\n\nexport const generateNetworkData = ({\n    rootNodeRadius = 12,\n    minMidNodes = 6,\n    maxMidNodes = 16,\n    midNodeRadius = 8,\n    minLeaves = 4,\n    maxLeaves = 16,\n    leafRadius = 4,\n} = {}) => {\n    const rootNode = {\n        id: '0',\n        radius: rootNodeRadius,\n        depth: 0,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `${k + 1}`,\n        radius: midNodeRadius,\n        depth: 1,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: '0',\n            target: source.id,\n            distance: 50,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 70,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                radius: leafRadius,\n                depth: 2,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 30,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit?: number | null, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: Record<string, unknown> = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","import React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    background: #333;\n    padding: 10px;\n    border-radius: 4px;\n    grid-template-columns: 100px 1fr;\n    grid-column-gap: 12px;\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\n\nconst CustomTooltip = day => {\n    return (\n        <TooltipWrapper style={{ color: day.color }}>\n            <TooltipKey>day</TooltipKey>\n            <span>{day.day}</span>\n            <TooltipKey>value</TooltipKey>\n            <span>{day.value}</span>\n            <TooltipKey>coordinates.x</TooltipKey>\n            <span>{day.coordinates.x}</span>\n            <TooltipKey>coordinates.y</TooltipKey>\n            <span>{day.coordinates.y}</span>\n            <TooltipKey>height</TooltipKey>\n            <span>{day.height}</span>\n            <TooltipKey>width</TooltipKey>\n            <span>{day.width}</span>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n    },\n    {\n        exclude: ['custom tooltip example'],\n    }\n)\n","import { boxAlignments } from '@nivo/core'\nimport { timeRangeDefaultProps as defaults } from '@nivo/calendar'\nimport { themeProperty, getLegendsProps, groupProperties } from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                day:   string, // format must be YYYY-MM-DD\n                value: number\n            }>\n            \\`\\`\\`\n            You can also add arbitrary data to this structure\n            to be used in tooltips or event handlers.\n        `,\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'from',\n        group: 'Base',\n        help: 'start date',\n        type: 'string | Date',\n        required: false,\n    },\n    {\n        key: 'to',\n        group: 'Base',\n        help: 'end date',\n        type: 'string | Date',\n        required: false,\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative of\n            the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative of\n            the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'direction',\n        help: 'defines calendar layout direction.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.direction,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'align',\n        help: 'defines how calendar should be aligned inside chart container.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.align,\n        group: 'Base',\n        controlType: 'boxAnchor',\n        controlOptions: {\n            choices: boxAlignments.map((align: string) => ({\n                label: align,\n                value: align,\n            })),\n        },\n    },\n    {\n        key: 'minValue',\n        help: 'Minimum value.',\n        description: `\n            Minimum value. If 'auto', will pick the lowest value\n            in the provided data set.\n            Should be overriden if your data set does not contain\n            desired lower bound value.\n        `,\n        required: false,\n        defaultValue: defaults.minValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 0,\n            min: -300,\n            max: 300,\n        },\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value. If 'auto', will pick the highest value\n            in the provided data set.\n            Should be overriden if your data set does not contain\n            desired higher bound value.\n        `,\n        required: false,\n        defaultValue: defaults.maxValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 100,\n            min: 0,\n            max: 600,\n        },\n    },\n    themeProperty(['svg']),\n    {\n        key: 'colors',\n        group: 'Style',\n        help: 'Cell colors.',\n        description: `\n            An array of colors to be used in conjunction with\n            \\`domain\\` to compute days' color.\n            It applies to days having a value defined, otherwise,\n            \\`emptyColor\\` will be used.\n        `,\n        type: 'string[]',\n        required: false,\n        defaultValue: defaults.colors,\n    },\n    {\n        key: 'emptyColor',\n        help: 'color to use to fill days without available value.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.emptyColor,\n        controlType: 'colorPicker',\n        group: 'Style',\n    },\n    // Months\n    {\n        key: 'monthLegend',\n        help: `can be used to customize months label, returns abbreviated month name (english) by default. This can be used to use a different language`,\n        type: '(year: number, month: number, date: Date) => string | number',\n        required: false,\n        group: 'Months',\n    },\n    {\n        key: 'monthLegendPosition',\n        help: 'defines month legends position.',\n        type: `'before' | 'after'`,\n        required: false,\n        defaultValue: defaults.monthLegendPosition,\n        controlType: 'radio',\n        group: 'Months',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'monthLegendOffset',\n        help: 'define offset from month edge to its label.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.monthLegendOffset,\n        controlType: 'range',\n        group: 'Months',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    // Weekday\n    {\n        key: 'weekdayLegendOffset',\n        help: 'define offset from weekday edge to its label.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.weekdayLegendOffset,\n        controlType: 'range',\n        group: 'Weekday',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 100,\n        },\n    },\n    {\n        key: 'weekdayTicks',\n        help: 'define weekday tickmarks to show',\n        type: 'Array<0 | 1 | 2 | 3 | 4 | 5 | 6>',\n        required: false,\n        defaultValue: [1, 3, 5],\n        group: 'Weekday',\n        description: `\n            Array of weekday tickmarks to display:\\n\n            0 = Sunday\\n\n            1 = Monday\\n\n            2 = Tuesday\\n\n            3 = Wednesday\\n\n            4 = Thursday\\n\n            5 = Friday\\n\n            6 = Saturday\\n\n        `,\n    },\n    // Days\n    {\n        key: 'square',\n        help: 'force day cell into square shape',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.square,\n        controlType: 'switch',\n        group: 'Days',\n    },\n    {\n        key: 'dayRadius',\n        help: 'define border radius of each day cell.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.dayRadius,\n        controlType: 'range',\n        group: 'Days',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'daySpacing',\n        help: 'define spacing between each day cell.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.daySpacing,\n        controlType: 'range',\n        group: 'Days',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'dayBorderWidth',\n        help: 'width of days border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.dayBorderWidth,\n        controlType: 'lineWidth',\n        group: 'Days',\n    },\n    {\n        key: 'dayBorderColor',\n        help: 'color to use for days border.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.dayBorderColor,\n        controlType: 'colorPicker',\n        group: 'Days',\n    },\n    {\n        key: 'isInteractive',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        help: 'onClick handler, it receives clicked day data and mouse event.',\n        type: '(day, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation, it must return a valid HTML\n            element and will receive the following data:\n            \\`\\`\\`\n            {\n                day:     string,\n                date:    {Date},\n                value:   number,\n                color:   string,\n                coordinates: {\n                    x: number,\n                    y: number,\n                },\n                height:  number\n                width:   number\n            }\n            \\`\\`\\`\n            You can also customize the tooltip style\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        help: 'Showcase custom tooltip.',\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'legends',\n        flavors: ['svg'],\n        type: 'LegendProps[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                anchor: 'bottom-right',\n                direction: 'row',\n                justify: false,\n                itemCount: 4,\n                itemWidth: 42,\n                itemHeight: 36,\n                itemsSpacing: 14,\n                itemDirection: 'right-to-left',\n                translateX: -85,\n                translateY: -240,\n                symbolSize: 20,\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n]\n\nexport const groups = groupProperties(props)\n","import React from 'react'\nimport { ResponsiveTimeRange, timeRangeDefaultProps } from '@nivo/calendar'\nimport { generateDayCounts } from '@nivo/generators'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/time-range/meta.yml'\nimport mapper from '../../data/components/time-range/mapper'\nimport { groups } from '../../data/components/time-range/props'\n\nconst Tooltip = data => {\n    /* return custom tooltip */\n}\n\nconst from = new Date(2018, 3, 1)\nconst to = new Date(2018, 7, 12)\nconst generateData = () => generateDayCounts(from, to)\n\nconst initialProperties = {\n    from: '2018-04-01',\n    to: '2018-08-12',\n\n    align: 'center',\n    emptyColor: '#eeeeee',\n    colors: ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560'],\n    minValue: 0,\n    maxValue: 'auto',\n\n    margin: {\n        top: 40,\n        right: 40,\n        bottom: 100,\n        left: 40,\n    },\n    direction: 'horizontal',\n\n    monthLegendPosition: 'before',\n    monthLegendOffset: 10,\n\n    weekdayLegendOffset: 75,\n\n    square: true,\n    dayRadius: 0,\n    daySpacing: 0,\n    dayBorderWidth: 2,\n    dayBorderColor: '#ffffff',\n\n    isInteractive: true,\n    'custom tooltip example': false,\n    tooltip: null,\n\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'row',\n            justify: false,\n            itemCount: 4,\n            itemWidth: 42,\n            itemHeight: 36,\n            itemsSpacing: 14,\n            itemDirection: 'right-to-left',\n            translateX: -60,\n            translateY: -60,\n            symbolSize: 20,\n        },\n    ],\n}\n\nconst TimeRange = () => {\n    return (\n        <ComponentTemplate\n            name=\"TimeRange\"\n            meta={meta.TimeRange}\n            icon=\"time-range\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={timeRangeDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={properties => ({\n                ...properties,\n                tooltip: properties.tooltip ? Tooltip : undefined,\n            })}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveTimeRange\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={day => {\n                            logAction({\n                                type: 'click',\n                                label: `[day] ${day.day}: ${day.value}`,\n                                color: day.color,\n                                data: day,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default TimeRange\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["day","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","days","range","durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","arguments","length","floor","ceil","round","d0","d1","offset","Math","stop","previous","push","filter","test","setTime","every","isFinite","d","month","setMonth","getMonth","getFullYear","months","weekday","i","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","year","setFullYear","k","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","key","omit","mapAxis","type","value","upperFirst","enable","mapFormat","format","enabled","undefined","randColor","random","countryCodes","names","programmingLanguages","generateBulletData","id","max","title","subtitle","rangeCount","measureCount","markerCount","float","ranges","reduce","remaining","acc","measures","markers","map","generateChordData","size","minValue","maxValue","maxSize","min","selectedKeys","slice","matrix","generateNetworkData","rootNodeRadius","minMidNodes","maxMidNodes","midNodeRadius","minLeaves","maxLeaves","leafRadius","rootNode","radius","depth","color","nodes","Array","from","_","links","extraNodes","source","target","distance","concat","generateParallelCoordinatesData","shuffle","availableNodes","n","name","getNodeTargets","currentPath","targets","Error","includes","join","targetId","getNodesTargets","targetsById","link","generateSankeyData","nodeCount","maxIterations","assign","node","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","groups","categoryCount","data","group","groupIndex","price","index","datum","volume","categories","randomizeSwarmPlotData","previousData","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","label","language","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","types","country","x","find","y","generateSeries","ids","xKeys","generateDayCounts","to","timeDays","dayFormat","timeFormat","generateOrderedDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","TooltipWrapper","styled","TooltipKey","CustomTooltip","style","coordinates","height","width","tooltip","values","props","help","description","required","enableControlForFlavors","controlType","controlOptions","unit","defaultValue","defaults","choices","boxAlignments","align","disabledValue","themeProperty","flavors","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","legend","anchor","direction","justify","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","translateX","translateY","symbolSize","onClick","alert","JSON","stringify","groupProperties","Tooltip","generateData","initialProperties","emptyColor","colors","margin","top","right","bottom","left","monthLegendPosition","monthLegendOffset","weekdayLegendOffset","square","dayRadius","daySpacing","dayBorderWidth","dayBorderColor","isInteractive","legends","ComponentTemplate","meta","icon","currentFlavor","properties","defaultProperties","timeRangeDefaultProps","propertiesMapper","mapper","codePropertiesMapper","theme","logAction","copyArray","shuffleSelf","module","exports","array","baseGetTag","isObjectLike","nativeFloor","nativeRandom","lower","upper","collection","arrayMap","object","baseRandom","lastIndex","rand","baseIsDate","baseUnary","nodeUtil","nodeIsDate","isDate","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","isArray","baseValues"],"sourceRoot":""}