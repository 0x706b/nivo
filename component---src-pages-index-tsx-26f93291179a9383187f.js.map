{"version":3,"file":"component---src-pages-index-tsx-26f93291179a9383187f.js","mappings":"iSAIO,IAAMA,EAAYC,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,oGAEJ,qBAAGC,MAAkBC,OAAOC,aAAa,KAMrDC,EAAAA,EAAAA,aARgB,qHAahBA,EAAAA,EAAAA,QAbgB,qHAkBhBA,EAAAA,EAAAA,OAlBgB,0FAuBhBA,EAAAA,EAAAA,OAvBgB,2FA6BTC,EAAgBL,EAAAA,QAAAA,KAAAA,WAAH,iEAAGA,CAAH,iQAcT,qBAAGC,MAAkBC,OAAOI,UAQhCC,GAAWP,EAAAA,EAAAA,SAAOQ,EAAAA,MAAV,uEAAGR,CAAH,0IAOC,qBAAGC,MAAkBC,OAAOC,aAAa,KAErDE,EAMJD,EAAAA,EAAAA,OAfe,8CAmBfA,EAAAA,EAAAA,OAnBe,+CAwBRK,GAAWT,EAAAA,EAAAA,SAAOQ,EAAAA,MAAV,uEAAGR,CAAH,6HAMO,qBAAGC,MAAkBC,OAAOC,aAAa,KAG/DC,EAAAA,EAAAA,OATe,wIAgBfA,EAAAA,EAAAA,OAhBe,+LA0BRM,EAAeV,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,kLAYnBI,EAAAA,EAAAA,OAZmB,mIAmBnBA,EAAAA,EAAAA,OAnBmB,wK,iPCpGzB,IAqBA,EArBkB,SAAC,GAAgB,IAAdF,EAAa,EAAbA,OACjB,OACI,UAACK,EAAD,CAAUI,GAAG,UAAb,WACI,SAAC,KAAD,GACIT,OAAQA,EACRU,SAAU,IACVC,iBAAkB,KACdC,EAAAA,EAAAA,IAAkB,CAAEC,KAAM,IAJlC,CAKIC,aAAa,EACbC,eAAe,EACfC,SAAS,EACTC,eAAgB,EAChBC,kBAAmB,MAEvB,SAACf,EAAD,WACI,wD,UCpBHgB,EAAa,CACtBC,SAAU,CACNC,SAAU,EACVC,YAAa,GAEjBC,WAAY,CACRF,SAAU,EACVC,YAAa,I,gNCDrB,IAwBA,EAxBiB,SAAC,GAAkC,IAAhCtB,EAA+B,EAA/BA,OAAQD,EAAuB,EAAvBA,MAAOyB,EAAgB,EAAhBA,UAC/B,OACI,UAACnB,EAAD,CAAUI,GAAG,SAAb,WACI,SAAC,KAAD,GACIgB,OAAQ,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IAChDC,MAAMC,EAAAA,EAAAA,IAAmB,IACzBC,OAAQ,CAAEC,KAAM,SAAUC,SAAS,GACnCC,MAAM,YACNpC,MAAOyB,EACPxB,OAAQA,EACRgB,SAAS,EACTD,eAAe,GACXI,EATR,CAUIiB,QAAS,EACTC,eAAgB,EAChBC,eAAgBvC,EAAMC,OAAOC,aAAa,OAE9C,SAACE,EAAD,WACI,uD,WCnBHoC,EAAoB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAChC,OACI,UAACnC,EAAD,CAAUI,GAAG,mBAAb,WACI,SAAC,KAAD,CACIqB,MAAMW,EAAAA,EAAAA,MACNC,GAAG,OACHC,MAAM,MACN3C,OAAQwC,EACRI,QAAQ,QACRC,WAAW,YACXC,QAAS,EACTC,cAAc,EACd/B,SAAS,EACTD,eAAe,KAEnB,SAACZ,EAAD,WACI,gE,2NCfhB,IAuCA,EAvCa,SAAC,GAAiD,IAA/CH,EAA8C,EAA9CA,OAAQwB,EAAsC,EAAtCA,UAAsC,IAA3BwB,aAAAA,OAA2B,SACpDlB,EAAOkB,GACPC,EAAAA,EAAAA,IAAsB,CAAC,WAAY,UAAW,WAAY,QAAS,QAAS,SAAU,CAClFpC,KAAM,KAEVoC,EAAAA,EAAAA,IAAsB,CAAC,WAAY,UAAW,YAAa,CACvDpC,KAAM,KAGVqC,EAAOF,EACP,CAAC,WAAY,UAAW,WAAY,QAAS,QAAS,SACtD,CAAC,WAAY,UAAW,YAE9B,OACI,UAAC3C,EAAD,CAAUI,GAAG,QAAb,WACI,SAAC,KAAD,GACIqB,KAAMA,EACNqB,QAAQ,UACRD,KAAMA,EACNE,OAAQJ,EAAe,aAAe,WACtCK,UAAWL,EAAe,UAAY,UACtCvB,OAAQ,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IAChDiB,QAASE,EAAe,GAAM,GAC9BhD,OAAQA,EACRD,MAAOyB,EACP8B,YAAaN,EACbO,aAAcP,EACdlC,aAAa,EACbE,SAAS,EACTD,eAAe,GACXI,KAER,SAAChB,EAAD,WACI,sD,kQChChB,IA8BA,EArBmB,SAAC,GAAmC,IAAjCqC,EAAgC,EAAhCA,eAAgBhB,EAAgB,EAAhBA,UAClC,OACI,UAACnB,EAAD,CAAUI,GAAG,WAAb,WACI,SAAC,KAAD,GACIqB,KAXZ0B,GAAAA,CAAM,IAAIC,KAAI,kBACVD,GAAAA,CAHqB,GAGOE,QAAO,SAACC,EAAKC,GAErC,OADAD,EAAIC,GAAKC,GAAAA,CAAO,GAAI,KACbF,IACR,OAQKT,KAAMM,GAAAA,CAdO,GAeb/B,OAAQ,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IAChD9B,MAAOyB,EACPxB,OAAQwC,EACRsB,YAAa,IACb9C,SAAS,EACTD,eAAe,GACXI,KAER,SAAChB,EAAD,WACI,yD,2NC1BhB,IA+BA,EA/BgB,SAAC,GAA2B,IAAzBH,EAAwB,EAAxBA,OAAQwB,EAAgB,EAAhBA,UACvB,OACI,UAACnB,EAAD,CAAUI,GAAG,QAAb,WACI,SAAC,KAAD,CACIgB,OAAQ,CACJC,IAAK,GACLG,MAAO,GACPF,OAAQ,GACRC,KAAM,IAEVE,MAAMiC,EAAAA,EAAAA,KAAiC,EAAM,IAAIN,KAAI,SAAAO,GAAC,UAClDtB,GAAIsB,EAAEC,OACHD,MAEPE,YAAa,GACbC,iBAAiB,EACjBC,4BAA6B,GAC7BC,4BAA6B,GAC7BrE,OAAQA,EACR4C,QAAQ,KACR5B,SAAS,EACTD,eAAe,EACfhB,MAAOyB,KAEX,SAACrB,EAAD,WACI,sD,WCzBVmE,EAAe,IAAIC,KAAK,KAAM,EAAG,GACjCC,EAAa,IAAID,KAAK,KAAM,EAAG,GAC/BE,GAAeC,EAAAA,EAAAA,IAAkBJ,EAAcE,GA2BrD,EAzBqB,SAAC,GAA2B,IAAzBxE,EAAwB,EAAxBA,OAAQwB,EAAgB,EAAhBA,UAC5B,OACI,UAACnB,EAAD,CAAUI,GAAG,aAAb,WACI,SAAC,KAAD,CACIgB,OAAQ,CAAEC,IAAK,GAAIG,MAAO,EAAGF,OAAQ,EAAGC,KAAM,IAC9C+C,KAAML,EACN7D,GAAI+D,EACJ1C,KAAM2C,EACNG,eAAgB,EAChBC,YAAa,GACbC,kBAAmB,EACnBC,WAAY/E,EAAO,GACnBgF,eAAgBhF,EAAO,GACvBiF,iBAAkBjF,EAAO,GACzBA,OAAQ,CAACA,EAAO,GAAIA,EAAO,IAC3Be,eAAe,EACfhB,MAAOyB,KAEX,SAACrB,EAAD,WACI,2D,0NCvBhB,IAuBA,GAvBkB,SAAC,GAA2B,IAAzBH,EAAwB,EAAxBA,OAAQwB,EAAgB,EAAhBA,UACzB,OACI,UAACnB,EAAD,CAAUI,GAAG,UAAb,WACI,SAAC,KAAD,MACQyE,EAAAA,EAAAA,MADR,CAEI/B,QAAQ,QACR1B,OAAQ,CAAEC,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAChD7B,MAAOyB,EACPxB,OAAQA,EACRmC,MAAM,eACNC,QAAS,EACTC,eAAgB,EAChBC,eAAgBtC,EAAO,GACvBgB,SAAS,EACTD,eAAe,MAEnB,SAACZ,EAAD,WACI,wD,YCjBVgF,GAAU,CACZC,QAAS,CAAC,EAAG,KACbC,QAAS,CAAC,EAAG,MAEjBF,GAAQrD,KAAO0B,GAAAA,CAAM,IAAIC,KAAI,SAAAf,GAAE,MAAK,CAChCA,GAAAA,EACA4C,EAAGC,KAAK1B,SAAWsB,GAAQC,QAAQ,GACnCI,EAAGD,KAAK1B,SAAWsB,GAAQE,QAAQ,OAGvC,IAyBA,GAzBoB,SAAC,GAAgB,IAAdrF,EAAa,EAAbA,OACnB,OACI,UAACK,EAAD,CAAUI,GAAG,YAAb,WACI,SAAC,MAAD,CACIqB,KAAMqD,GAAQrD,KACdsD,QAASD,GAAQC,QACjBC,QAASF,GAAQE,QACjB5D,OAAQ,CAAEC,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAChD6D,aAAa,EACbC,cAAe1F,EAAO,GACtB2F,cAAe3F,EAAO,GACtB4F,cAAe,EACfC,cAAc,EACdC,UAAW,EACXC,WAAY/F,EAAO,GACnBe,eAAe,EACfC,SAAS,KAEb,SAACb,EAAD,WACI,0D,YCFhB,GA3BoB,SAAC,GAA2B,IAAzBH,EAAwB,EAAxBA,OAAQwB,EAAgB,EAAhBA,UAC3B,OACI,UAACnB,EAAD,CAAUI,GAAG,YAAb,WACI,SAAC,MAAD,CACIgB,OAAQ,CAAEC,IAAK,EAAGG,MAAO,EAAGF,OAAQ,EAAGC,KAAM,GAC7CE,MAAMW,EAAAA,EAAAA,MACNuD,SAAS,OACTrD,MAAM,MACNsD,YAAY,OACZjG,OAAQA,EACRkG,YAAY,EACZC,YAAa,EACbC,aAAc,EACdpF,SAAS,EACTD,eAAe,EACfD,aAAa,EACbuF,eAAgBrG,EAAO,GACvBsG,YAAY,OACZvG,MAAOyB,KAEX,SAACrB,EAAD,WACI,0D,YCFhB,GAnBqB,SAAC,GAAgB,IAAdH,EAAa,EAAbA,OACpB,OACI,UAACK,EAAD,CAAUI,GAAG,aAAb,WACI,SAAC,MAAD,CACIqB,MAAMW,EAAAA,EAAAA,MACNuD,SAAS,OACTrD,MAAM,MACN3B,SAAS,EACTD,eAAe,EACff,OAAQA,EACRsG,YAAatG,EAAO,MAExB,SAACG,EAAD,WACI,2D,YCchB,GA3BmB,SAAC,GAA2B,IAAzBH,EAAwB,EAAxBA,OAAQwB,EAAgB,EAAhBA,UAC1B,OACI,UAACnB,EAAD,CAAUI,GAAG,WAAb,WACI,SAAC,MAAD,CACIgB,OAAQ,CAAEC,IAAK,EAAGG,MAAO,EAAGF,OAAQ,EAAGC,KAAM,GAC7CE,MAAMyE,EAAAA,EAAAA,IAAmB,CAAEC,UAAW,GAAIC,cAAe,IACzD1G,MAAOyB,EACPxB,OAAQA,EACRgB,SAAS,EACTD,eAAe,EACf2F,gBAAiB,CAAE/B,KAAM,SACzBgC,YAAa,EACbC,UAAW,EACXC,YAAa,GACbC,gBAAiB,EACjBC,YAAa,GACbC,cAAc,SACdC,aAAc,EACdZ,eAAgB,CAAE1B,KAAM,YAE5B,SAACxE,EAAD,WACI,yD,YCoBhB,GAzCsB,SAAC,GAAmC,IAAjCqC,EAAgC,EAAhCA,eAAgBhB,EAAgB,EAAhBA,UAC/BM,GAAOoF,EAAAA,EAAAA,IAAsB,CAAC,SAAU,CAAEC,IAAK,GAAIC,IAAK,KAE9D,OACI,UAAC/G,EAAD,CAAUI,GAAG,cAAb,WACI,SAAC,MAAD,CACIqB,KAAMA,EAAKA,KACXuF,OAAQvF,EAAKuF,OACbC,QAAQ,QACRtB,SAAS,KACTrD,MAAM,QACNS,OAAO,aACPmE,WAAY,CACRtF,KAAM,SACNkF,IAAK,EACLC,IAAK,KAETvG,KAAM,CACF2G,IAAK,SACLC,OAAQ,CAAC,EAAG,IACZC,MAAO,CAAC,EAAG,KAEfjG,OAAQ,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IAChD9B,MAAOyB,EACPxB,OAAQwC,EACRe,aAAa,EACbX,QAAQ,KACR5B,SAAS,EACTD,eAAe,EACf4G,QAAS,GACTC,UAAW,KACXrG,WAAY,GACZH,SAAU,QAEd,SAACjB,EAAD,WACI,4DCgHhB,GAtIa,WACT,IAAMJ,GAAQ8H,EAAAA,EAAAA,KAER7H,EAASD,EAAMC,OAAOC,aAAa6H,MAAM,GACzCtF,EAAiB,UAAIxC,GAAQ+H,UAE7BvG,EAAY,CACdwG,KAAM,CACFC,MAAO,CACHC,KAAM,CACFC,OAAQpI,EAAMC,OAAOC,aAAa,IAEtCmI,KAAM,CACFC,KAAMtI,EAAMC,OAAOC,aAAa,GAChCqI,SAAU,KAItBC,KAAM,CACFL,KAAM,CACFC,OAAQpI,EAAMC,OAAOC,aAAa,GAClCuI,YAAa,EACbC,gBAAiB,QAGzBC,OAAQ,CACJN,KAAM,CACFC,KAAMtI,EAAMC,OAAOC,aAAa,MAK5C,OACI,UAACJ,EAAD,YACI,SAAC,EAAD,CACIG,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,KAEf,SAAC,EAAD,CACIxB,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,KAEf,SAACe,EAAD,CACIvC,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,KAEf,SAACmH,EAAD,CACI3I,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,EACXwB,cAAc,KAElB,SAAC2F,EAAD,CACI3I,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,EACXwB,cAAc,KAElB,SAACzC,EAAD,CACIE,GAAG,cACHmI,MAAO,CACHC,gBAAgB,8vTAGxB,SAACrI,EAAD,qHAIA,SAAC,EAAD,CACIR,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,KAEf,SAAC,EAAD,CACIxB,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,KAEf,SAAC,EAAD,CACIxB,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,KAEf,SAAC,GAAD,CACIxB,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,KAEf,SAAC,GAAD,CACIxB,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,KAEf,SAAC,GAAD,CACIxB,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,KAEf,SAAC,GAAD,CACIxB,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,KAEf,SAAC,GAAD,CACIxB,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,KAEf,SAAC,GAAD,CACIxB,OAAQA,EACRwC,eAAgBA,EAChBzC,MAAOA,EACPyB,UAAWA,Q,YCvI3B,GAPkB,kBACd,iCACI,SAACsH,GAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,CAAC,SAAD,0BAC5B,SAAC,GAAD,S,gdCPKC,EAAY,wBAAa1D,KAAK2D,MAAsB,IAAhB3D,KAAK1B,UAAAA,eCAzCsF,EAAe,CACxB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MC1PSC,EAAQ,CACjB,OACA,QACA,OACA,SACA,UACA,QACA,MACA,QACA,OACA,YACA,UACA,UACA,UACA,SACA,SACA,OACA,YACA,QACA,OACA,QACA,QACA,YACA,YACA,SACA,MACA,UACA,WACA,QACA,SACA,SACA,OACA,WACA,UACA,WACA,OACA,OACA,WACA,QACA,QCvCSC,EAAuB,CAChC,MACA,OACA,aACA,KACA,SACA,SACA,OACA,UACA,SACA,OACA,OACA,QACA,OACA,OACA,IACA,MACA,OACA,UCNSC,GDMT,8ECN8B,SAC9B5G,EACA0E,EAAAA,GAAAA,IAAAA,OAAAA,IAAAA,EAQa,KANT2B,EAAAA,EAAAA,MACAQ,EAAAA,EAAAA,SAAAA,EAAAA,EACAC,WAAAA,OAAAA,IAAAA,EAAa,QACbC,aAAAA,OAAAA,IAAAA,EAAe,QACfC,YAAAA,OAAAA,IAAAA,EAA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","sources":["webpack://nivo-website/./src/components/home/styled.js","webpack://nivo-website/./src/components/home/HomeChord.js","webpack://nivo-website/./src/components/home/settings.js","webpack://nivo-website/./src/components/home/HomeLine.js","webpack://nivo-website/./src/components/home/HomeCirclePacking.js","webpack://nivo-website/./src/components/home/HomeBar.js","webpack://nivo-website/./src/components/home/HomeStream.js","webpack://nivo-website/./src/components/home/HomePie.js","webpack://nivo-website/./src/components/home/HomeCalendar.js","webpack://nivo-website/./src/components/home/HomeRadar.js","webpack://nivo-website/./src/components/home/HomeVoronoi.js","webpack://nivo-website/./src/components/home/HomeTreeMap.js","webpack://nivo-website/./src/components/home/HomeSunburst.js","webpack://nivo-website/./src/components/home/HomeSankey.js","webpack://nivo-website/./src/components/home/HomeSwarmPlot.js","webpack://nivo-website/./src/components/home/Home.js","webpack://nivo-website/./src/pages/index.tsx","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/../node_modules/d3-shape/src/descending.js","webpack://nivo-website/../node_modules/d3-shape/src/identity.js","webpack://nivo-website/../src/PieLegends.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/PieTooltip.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../node_modules/d3-shape/src/pie.js","webpack://nivo-website/../src/Arcs.tsx","webpack://nivo-website/../src/Pie.tsx","webpack://nivo-website/../src/ResponsivePie.tsx","webpack://nivo-website/../src/PieCanvas.tsx","webpack://nivo-website/../src/ResponsivePieCanvas.tsx","webpack://nivo-website/../node_modules/d3-shape/src/curve/radial.js","webpack://nivo-website/../node_modules/d3-shape/src/lineRadial.js","webpack://nivo-website/../src/RadarLayer.tsx","webpack://nivo-website/../src/RadarGridLabels.tsx","webpack://nivo-website/../src/RadarGridLevels.tsx","webpack://nivo-website/../src/RadarGrid.tsx","webpack://nivo-website/../src/RadarSlice.tsx","webpack://nivo-website/../src/RadarSlices.tsx","webpack://nivo-website/../src/RadarDots.tsx","webpack://nivo-website/../src/RadarGridLabel.tsx","webpack://nivo-website/../src/RadarSliceTooltip.tsx","webpack://nivo-website/../src/Radar.tsx","webpack://nivo-website/../src/ResponsiveRadar.tsx","webpack://nivo-website/../src/StreamLayer.tsx","webpack://nivo-website/../src/StreamLayers.tsx","webpack://nivo-website/../src/StreamDots.tsx","webpack://nivo-website/../src/StreamSlicesItem.tsx","webpack://nivo-website/../src/StreamSlices.tsx","webpack://nivo-website/../src/StreamDotsItem.tsx","webpack://nivo-website/../src/LayerTooltip.tsx","webpack://nivo-website/../src/StackTooltip.tsx","webpack://nivo-website/../src/Stream.tsx","webpack://nivo-website/../src/ResponsiveStream.tsx","webpack://nivo-website/../node_modules/d3-hierarchy/src/partition.js","webpack://nivo-website/../src/SunburstTooltip.tsx","webpack://nivo-website/../src/Sunburst.tsx","webpack://nivo-website/../src/ResponsiveSunburst.tsx","webpack://nivo-website/../node_modules/lodash/_arrayReduce.js","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_asciiToArray.js","webpack://nivo-website/../node_modules/lodash/_asciiWords.js","webpack://nivo-website/../node_modules/lodash/_basePropertyOf.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_castSlice.js","webpack://nivo-website/../node_modules/lodash/_createCaseFirst.js","webpack://nivo-website/../node_modules/lodash/_createCompounder.js","webpack://nivo-website/../node_modules/lodash/_deburrLetter.js","webpack://nivo-website/../node_modules/lodash/_hasUnicode.js","webpack://nivo-website/../node_modules/lodash/_hasUnicodeWord.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/_stringToArray.js","webpack://nivo-website/../node_modules/lodash/_unicodeToArray.js","webpack://nivo-website/../node_modules/lodash/_unicodeWords.js","webpack://nivo-website/../node_modules/lodash/deburr.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/startCase.js","webpack://nivo-website/../node_modules/lodash/upperFirst.js","webpack://nivo-website/../node_modules/lodash/values.js","webpack://nivo-website/../node_modules/lodash/words.js"],"sourcesContent":["import styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport media from '../../theming/mediaQueries'\n\nexport const Container = styled.div`\n    position: fixed;\n    background: ${({ theme }) => theme.colors.coloredRange[2]};\n    width: 100%;\n    height: 100%;\n    padding: 10px;\n    display: grid;\n\n    ${media.desktopLarge`\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr 1fr;\n    `}\n\n    ${media.desktop`\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr 1fr;\n    `}\n\n    ${media.tablet`\n        grid-template-columns: 1fr 1fr;\n        overflow-y: auto;\n    `}\n\n    ${media.mobile`\n        grid-template-columns: 1fr 1fr;\n        overflow-y: auto;\n    `}\n`\n\nexport const HomeItemLabel = styled.span`\n    display: block;\n    position: absolute;\n    text-align: center;\n    width: 100%;\n    top: 50%;\n    left: 0;\n    margin-top: -12px;\n    opacity: 0;\n    transform: translate(0, 15px);\n    transition: all 400ms;\n\n    & span {\n        background: #fff;\n        color: ${({ theme }) => theme.colors.accent};\n        font-size: 14px;\n        line-height: 1em;\n        padding: 5px 9px;\n        border-radius: 2px;\n    }\n`\n\nexport const HomeItem = styled(Link)`\n    overflow: hidden;\n    padding: 15px;\n    position: relative;\n    display: block;\n\n    &:hover {\n        background: ${({ theme }) => theme.colors.coloredRange[1]};\n\n        ${HomeItemLabel} {\n            opacity: 1;\n            transform: translate(0, 0);\n        }\n    }\n\n    ${media.tablet`\n        height: 240px;\n    `}\n\n    ${media.mobile`\n        height: 180px;\n    `}\n`\n\nexport const HomeLogo = styled(Link)`\n    background-position: center center;\n    background-size: 60%;\n    background-repeat: no-repeat;\n\n    &:hover {\n        background-color: ${({ theme }) => theme.colors.coloredRange[1]};\n    }\n\n    ${media.tablet`\n        grid-column-start: 1;\n        grid-row-start: 1;\n        height: 120px;\n        background-size: 40%;\n    `}\n\n    ${media.mobile`\n        grid-column-start: 1;\n        grid-column-end: 3;\n        grid-row-start: 1;\n        height: 90px;\n        padding: 0 50px;\n        background-size: 30%;\n    `}\n`\n\nexport const HomeBaseline = styled.div`\n    display: flex;\n    align-items: center;\n    color: white;\n    font-weight: 300;\n    font-size: 15px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    line-height: 26px;\n    padding: 0 20px;\n\n    ${media.tablet`\n        grid-column-start: 2;\n        grid-row-start: 1;\n        height: 120px;\n        padding: 0 20px;\n    `}\n\n    ${media.mobile`\n        grid-column-start: 1;\n        grid-column-end: 3;\n        grid-row-start: 2;\n        height: auto;\n        padding: 20px 50px 30px;\n    `}\n`\n","import React from 'react'\nimport { generateChordData } from '@nivo/generators'\nimport { ResponsiveChordCanvas } from '@nivo/chord'\nimport { HomeItem, HomeItemLabel } from './styled'\n\nconst HomeChord = ({ colors }) => {\n    return (\n        <HomeItem to=\"/chord/\">\n            <ResponsiveChordCanvas\n                colors={colors}\n                padAngle={0.04}\n                innerRadiusRatio={0.9}\n                {...generateChordData({ size: 7 })}\n                enableLabel={false}\n                isInteractive={false}\n                animate={false}\n                arcBorderWidth={0}\n                ribbonBorderWidth={0}\n            />\n            <HomeItemLabel>\n                <span>Chord documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default HomeChord\n","export const commonAxes = {\n    axisLeft: {\n        tickSize: 4,\n        tickPadding: 2,\n    },\n    axisBottom: {\n        tickSize: 4,\n        tickPadding: 2,\n    },\n}\n","import React from 'react'\nimport { generateDrinkStats } from '@nivo/generators'\nimport { ResponsiveLine } from '@nivo/line'\nimport { HomeItem, HomeItemLabel } from './styled'\nimport { commonAxes } from './settings'\n\nconst HomeLine = ({ colors, theme, nivoTheme }) => {\n    return (\n        <HomeItem to=\"/line/\">\n            <ResponsiveLine\n                margin={{ top: 10, bottom: 15, left: 24, right: 10 }}\n                data={generateDrinkStats(12)}\n                yScale={{ type: 'linear', stacked: true }}\n                curve=\"monotoneX\"\n                theme={nivoTheme}\n                colors={colors}\n                animate={false}\n                isInteractive={false}\n                {...commonAxes}\n                dotSize={7}\n                dotBorderWidth={1}\n                dotBorderColor={theme.colors.coloredRange[2]}\n            />\n            <HomeItemLabel>\n                <span>Line documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default HomeLine\n","import React from 'react'\nimport { generateLibTree } from '@nivo/generators'\nimport { ResponsiveCirclePackingCanvas } from '@nivo/circle-packing'\nimport { HomeItem, HomeItemLabel } from './styled'\n\nexport const HomeCirclePacking = ({ reversedColors }) => {\n    return (\n        <HomeItem to=\"/circle-packing/\">\n            <ResponsiveCirclePackingCanvas\n                data={generateLibTree()}\n                id=\"name\"\n                value=\"loc\"\n                colors={reversedColors}\n                colorBy=\"depth\"\n                childColor=\"noinherit\"\n                padding={1}\n                enableLabels={false}\n                animate={false}\n                isInteractive={false}\n            />\n            <HomeItemLabel>\n                <span>CirclePacking documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n","import React from 'react'\nimport { generateCountriesData } from '@nivo/generators'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { HomeItem, HomeItemLabel } from './styled'\nimport { commonAxes } from './settings'\n\nconst Home = ({ colors, nivoTheme, isHorizontal = false }) => {\n    const data = isHorizontal\n        ? generateCountriesData(['hot dogs', 'burgers', 'sandwich', 'kebab', 'fries', 'donut'], {\n              size: 9,\n          })\n        : generateCountriesData(['hot dogs', 'burgers', 'sandwich'], {\n              size: 11,\n          })\n\n    const keys = isHorizontal\n        ? ['hot dogs', 'burgers', 'sandwich', 'kebab', 'fries', 'donut']\n        : ['hot dogs', 'burgers', 'sandwich']\n\n    return (\n        <HomeItem to=\"/bar/\">\n            <ResponsiveBar\n                data={data}\n                indexBy=\"country\"\n                keys={keys}\n                layout={isHorizontal ? 'horizontal' : 'vertical'}\n                groupMode={isHorizontal ? 'stacked' : 'grouped'}\n                margin={{ top: 10, bottom: 15, left: 24, right: 10 }}\n                padding={isHorizontal ? 0.4 : 0.2}\n                colors={colors}\n                theme={nivoTheme}\n                enableGridX={isHorizontal}\n                enableGridY={!isHorizontal}\n                enableLabel={false}\n                animate={false}\n                isInteractive={false}\n                {...commonAxes}\n            />\n            <HomeItemLabel>\n                <span>Bar documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport range from 'lodash/range'\nimport random from 'lodash/random'\nimport { ResponsiveStream } from '@nivo/stream'\nimport { HomeItem, HomeItemLabel } from './styled'\nimport { commonAxes } from './settings'\n\nconst streamDataLayerCount = 5\nconst generateStreamData = () =>\n    range(16).map(() =>\n        range(streamDataLayerCount).reduce((acc, i) => {\n            acc[i] = random(10, 200)\n            return acc\n        }, {})\n    )\n\nconst HomeStream = ({ reversedColors, nivoTheme }) => {\n    return (\n        <HomeItem to=\"/stream/\">\n            <ResponsiveStream\n                data={generateStreamData()}\n                keys={range(streamDataLayerCount)}\n                margin={{ top: 10, bottom: 15, left: 24, right: 10 }}\n                theme={nivoTheme}\n                colors={reversedColors}\n                fillOpacity={0.75}\n                animate={false}\n                isInteractive={false}\n                {...commonAxes}\n            />\n            <HomeItemLabel>\n                <span>Stream documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default HomeStream\n","import React from 'react'\nimport { generateProgrammingLanguageStats } from '@nivo/generators'\nimport { ResponsivePie } from '@nivo/pie'\nimport { HomeItem, HomeItemLabel } from './styled'\n\nconst HomePie = ({ colors, nivoTheme }) => {\n    return (\n        <HomeItem to=\"/pie/\">\n            <ResponsivePie\n                margin={{\n                    top: 26,\n                    right: 60,\n                    bottom: 26,\n                    left: 60,\n                }}\n                data={generateProgrammingLanguageStats(true, 12).map(d => ({\n                    id: d.label,\n                    ...d,\n                }))}\n                innerRadius={0.6}\n                enableArcLabels={false}\n                arcLinkLabelsDiagonalLength={10}\n                arcLinkLabelsStraightLength={16}\n                colors={colors}\n                colorBy=\"id\"\n                animate={false}\n                isInteractive={false}\n                theme={nivoTheme}\n            />\n            <HomeItemLabel>\n                <span>Pie documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default HomePie\n","import React from 'react'\nimport { generateDayCounts } from '@nivo/generators'\nimport { ResponsiveCalendarCanvas } from '@nivo/calendar'\nimport { HomeItem, HomeItemLabel } from './styled'\n\nconst calendarFrom = new Date(2015, 3, 1)\nconst calendarTo = new Date(2016, 5, 1)\nconst calendarData = generateDayCounts(calendarFrom, calendarTo)\n\nconst HomeCalendar = ({ colors, nivoTheme }) => {\n    return (\n        <HomeItem to=\"/calendar/\">\n            <ResponsiveCalendarCanvas\n                margin={{ top: 20, right: 2, bottom: 2, left: 20 }}\n                from={calendarFrom}\n                to={calendarTo}\n                data={calendarData}\n                dayBorderWidth={1}\n                yearSpacing={50}\n                yearLegendSpacing={6}\n                emptyColor={colors[1]}\n                dayBorderColor={colors[3]}\n                monthBorderColor={colors[3]}\n                colors={[colors[0], colors[2]]}\n                isInteractive={false}\n                theme={nivoTheme}\n            />\n            <HomeItemLabel>\n                <span>Calendar documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default HomeCalendar\n","import React from 'react'\nimport { generateWinesTastes } from '@nivo/generators'\nimport { ResponsiveRadar } from '@nivo/radar'\nimport { HomeItem, HomeItemLabel } from './styled'\n\nconst HomeRadar = ({ colors, nivoTheme }) => {\n    return (\n        <HomeItem to=\"/radar/\">\n            <ResponsiveRadar\n                {...generateWinesTastes()}\n                indexBy=\"taste\"\n                margin={{ top: 20, right: 40, bottom: 10, left: 40 }}\n                theme={nivoTheme}\n                colors={colors}\n                curve=\"linearClosed\"\n                dotSize={7}\n                dotBorderWidth={1}\n                dotBorderColor={colors[1]}\n                animate={false}\n                isInteractive={false}\n            />\n            <HomeItemLabel>\n                <span>Radar documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default HomeRadar\n","import React from 'react'\nimport range from 'lodash/range'\nimport { ResponsiveVoronoi } from '@nivo/voronoi'\nimport { HomeItem, HomeItemLabel } from './styled'\n\nconst voronoi = {\n    xDomain: [0, 400],\n    yDomain: [0, 300],\n}\nvoronoi.data = range(80).map(id => ({\n    id,\n    x: Math.random() * voronoi.xDomain[1],\n    y: Math.random() * voronoi.yDomain[1],\n}))\n\nconst HomeVoronoi = ({ colors }) => {\n    return (\n        <HomeItem to=\"/voronoi/\">\n            <ResponsiveVoronoi\n                data={voronoi.data}\n                xDomain={voronoi.xDomain}\n                yDomain={voronoi.yDomain}\n                margin={{ top: 10, right: 10, bottom: 10, left: 10 }}\n                enableLinks={true}\n                linkLineColor={colors[2]}\n                cellLineColor={colors[3]}\n                cellLineWidth={1}\n                enablePoints={true}\n                pointSize={6}\n                pointColor={colors[3]}\n                isInteractive={false}\n                animate={false}\n            />\n            <HomeItemLabel>\n                <span>Voronoi documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default HomeVoronoi\n","import React from 'react'\nimport { generateLibTree } from '@nivo/generators'\nimport { ResponsiveTreeMapCanvas } from '@nivo/treemap'\nimport { HomeItem, HomeItemLabel } from './styled'\n\nconst HomeTreeMap = ({ colors, nivoTheme }) => {\n    return (\n        <HomeItem to=\"/treemap/\">\n            <ResponsiveTreeMapCanvas\n                margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n                data={generateLibTree()}\n                identity=\"name\"\n                value=\"loc\"\n                valueFormat=\".02s\"\n                colors={colors}\n                leavesOnly={true}\n                borderWidth={0}\n                innerPadding={1}\n                animate={false}\n                isInteractive={false}\n                enableLabel={true}\n                labelTextColor={colors[1]}\n                borderColor=\"none\"\n                theme={nivoTheme}\n            />\n            <HomeItemLabel>\n                <span>TreeMap documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default HomeTreeMap\n","import React from 'react'\nimport { generateLibTree } from '@nivo/generators'\nimport { ResponsiveSunburst } from '@nivo/sunburst'\nimport { HomeItem, HomeItemLabel } from './styled'\n\nconst HomeSunburst = ({ colors }) => {\n    return (\n        <HomeItem to=\"/sunburst/\">\n            <ResponsiveSunburst\n                data={generateLibTree()}\n                identity=\"name\"\n                value=\"loc\"\n                animate={false}\n                isInteractive={false}\n                colors={colors}\n                borderColor={colors[1]}\n            />\n            <HomeItemLabel>\n                <span>Sunburst documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default HomeSunburst\n","import React from 'react'\nimport { generateSankeyData } from '@nivo/generators'\nimport { ResponsiveSankey } from '@nivo/sankey'\nimport { HomeItem, HomeItemLabel } from './styled'\n\nconst HomeSankey = ({ colors, nivoTheme }) => {\n    return (\n        <HomeItem to=\"/sankey/\">\n            <ResponsiveSankey\n                margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n                data={generateSankeyData({ nodeCount: 11, maxIterations: 2 })}\n                theme={nivoTheme}\n                colors={colors}\n                animate={false}\n                isInteractive={false}\n                nodeBorderColor={{ from: 'color' }}\n                nodeOpacity={1}\n                nodeWidth={4}\n                nodePadding={12}\n                nodeBorderWidth={0}\n                linkOpacity={0.2}\n                linkBlendMode=\"normal\"\n                linkContract={1}\n                labelTextColor={{ from: 'color' }}\n            />\n            <HomeItemLabel>\n                <span>Sankey documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default HomeSankey\n","import React from 'react'\nimport { generateSwarmPlotData } from '@nivo/generators'\nimport { ResponsiveSwarmPlotCanvas } from '@nivo/swarmplot'\nimport { HomeItem, HomeItemLabel } from './styled'\n\nconst HomeSwarmPlot = ({ reversedColors, nivoTheme }) => {\n    const data = generateSwarmPlotData(['thing'], { min: 50, max: 50 })\n\n    return (\n        <HomeItem to=\"/swarmplot/\">\n            <ResponsiveSwarmPlotCanvas\n                data={data.data}\n                groups={data.groups}\n                groupBy=\"group\"\n                identity=\"id\"\n                value=\"price\"\n                layout=\"horizontal\"\n                valueScale={{\n                    type: 'linear',\n                    min: 0,\n                    max: 500,\n                }}\n                size={{\n                    key: 'volume',\n                    values: [4, 20],\n                    sizes: [6, 20],\n                }}\n                margin={{ top: 30, bottom: 30, left: 10, right: 10 }}\n                theme={nivoTheme}\n                colors={reversedColors}\n                enableGridY={false}\n                colorBy=\"id\"\n                animate={false}\n                isInteractive={false}\n                axisTop={{}}\n                axisRight={null}\n                axisBottom={{}}\n                axisLeft={null}\n            />\n            <HomeItemLabel>\n                <span>SwarmPlot documentation</span>\n            </HomeItemLabel>\n        </HomeItem>\n    )\n}\n\nexport default HomeSwarmPlot\n","import React from 'react'\nimport { useTheme } from '../../theming/context'\nimport { Container, HomeBaseline, HomeLogo } from './styled'\nimport HomeChord from './HomeChord'\nimport HomeLine from './HomeLine'\nimport { HomeCirclePacking } from './HomeCirclePacking'\nimport HomeBar from './HomeBar'\nimport HomeStream from './HomeStream'\nimport HomePie from './HomePie'\nimport HomeCalendar from './HomeCalendar'\nimport HomeRadar from './HomeRadar'\nimport HomeVoronoi from './HomeVoronoi'\nimport HomeTreeMap from './HomeTreeMap'\nimport HomeSunburst from './HomeSunburst'\nimport HomeSankey from './HomeSankey'\nimport HomeSwarmPlot from './HomeSwarmPlot'\nimport logoImg from '../../assets/nivo-logo.png'\n\nconst Home = () => {\n    const theme = useTheme()\n\n    const colors = theme.colors.coloredRange.slice(1)\n    const reversedColors = [...colors].reverse()\n\n    const nivoTheme = {\n        axis: {\n            ticks: {\n                line: {\n                    stroke: theme.colors.coloredRange[4],\n                },\n                text: {\n                    fill: theme.colors.coloredRange[4],\n                    fontSize: 9,\n                },\n            },\n        },\n        grid: {\n            line: {\n                stroke: theme.colors.coloredRange[4],\n                strokeWidth: 1,\n                strokeDasharray: '1,3',\n            },\n        },\n        labels: {\n            text: {\n                fill: theme.colors.coloredRange[4],\n            },\n        },\n    }\n\n    return (\n        <Container>\n            <HomeChord\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n            <HomeLine\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n            <HomeCirclePacking\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n            <HomeBar\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n                isHorizontal={false}\n            />\n            <HomeBar\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n                isHorizontal={true}\n            />\n            <HomeLogo\n                to=\"/components\"\n                style={{\n                    backgroundImage: `url(${logoImg})`,\n                }}\n            />\n            <HomeBaseline>\n                nivo provides a rich set of dataviz components, built on top of the awesome d3 and\n                Reactjs libraries.\n            </HomeBaseline>\n            <HomeStream\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n            <HomePie\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n            <HomeCalendar\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n            <HomeRadar\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n            <HomeVoronoi\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n            <HomeTreeMap\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n            <HomeSunburst\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n            <HomeSankey\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n            <HomeSwarmPlot\n                colors={colors}\n                reversedColors={reversedColors}\n                theme={theme}\n                nivoTheme={nivoTheme}\n            />\n        </Container>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport Home from '../components/home/Home'\nimport { Seo } from '../components/Seo'\n\nconst IndexPage = () => (\n    <>\n        <Seo title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n        <Home />\n    </>\n)\n\nexport default IndexPage\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    source: string\n    target: string\n    distance: number\n}\n\ntype ExtraNode = {\n    id: string\n    height: number\n    color: string\n    size: number\n}\n\nexport const generateNetworkData = ({\n    rootSize = 32,\n    midSize = 24,\n    leafSize = 12,\n    minMidNodes = 5,\n    maxMidNodes = 11,\n    minLeaves = 3,\n    maxLeaves = 9,\n}: {\n    rootSize?: number\n    midSize?: number\n    leafSize?: number\n    minMidNodes?: number\n    maxMidNodes?: number\n    minLeaves?: number\n    maxLeaves?: number\n} = {}) => {\n    const rootNode = {\n        id: 'Node 0',\n        height: 2,\n        size: rootSize,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `Node ${k + 1}`,\n        height: 1,\n        size: midSize,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: 'Node 0',\n            target: source.id,\n            distance: 80,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 80,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                height: 0,\n                size: leafSize,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 50,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit?: number | null, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: Record<string, unknown> = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}","export default function (d) {\n  return d;\n}","import { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum, DatumId } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    toggleSerie: (id: DatumId) => void\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcLinkLabels', 'arcs', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { useCallback, useMemo, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport { CompletePieSvgProps, ComputedDatum, DatumId, PieArc, PieCustomLayerProps } from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    hidden: false,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n    hiddenIds,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n    hiddenIds: DatumId[]\n}): {\n    dataWithArc: Omit<ComputedDatum<RawDatum>, 'fill'>[]\n    legendData: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n} => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(() => {\n        const hiddenData = data.filter(item => !hiddenIds.includes(item.id))\n        const dataWithArc = pie(hiddenData).map(\n            (\n                arc: Omit<\n                    PieArc,\n                    'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                > & {\n                    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                }\n            ) => {\n                const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                return {\n                    ...arc.data,\n                    arc: {\n                        index: arc.index,\n                        startAngle: arc.startAngle,\n                        endAngle: arc.endAngle,\n                        innerRadius:\n                            activeId === arc.data.id\n                                ? innerRadius - activeInnerRadiusOffset\n                                : innerRadius,\n                        outerRadius:\n                            activeId === arc.data.id\n                                ? outerRadius + activeOuterRadiusOffset\n                                : outerRadius,\n                        thickness: outerRadius - innerRadius,\n                        padAngle: arc.padAngle,\n                        angle,\n                        angleDeg: radiansToDegrees(angle),\n                    },\n                }\n            }\n        )\n        const legendData = data.map(item => ({ ...item, hidden: hiddenIds.includes(item.id) }))\n\n        return { dataWithArc, legendData }\n    }, [\n        pie,\n        data,\n        hiddenIds,\n        activeId,\n        innerRadius,\n        activeInnerRadiusOffset,\n        outerRadius,\n        activeOuterRadiusOffset,\n    ])\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    Partial<CompletePieSvgProps<RawDatum>>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const [activeId, setActiveId] = useState<DatumId | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { ...pieArcs, arcGenerator, setActiveId, toggleSerie }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const [activeId, setActiveId] = useState<string | number | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        arcGenerator,\n        setActiveId,\n        toggleSerie,\n        ...pieArcs,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: PieCustomLayerProps<RawDatum>): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport { tau } from \"./math.js\";\nexport default function () {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    } // Optionally sort the arcs by previously-computed values or by data.\n\n\n    if (sortValues != null) index.sort(function (i, j) {\n      return sortValues(arcs[i], arcs[j]);\n    });else if (sort != null) index.sort(function (i, j) {\n      return sort(data[i], data[j]);\n    }); // Compute the arcs! They are stored in the original data's order.\n\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function (_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function (_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        legendData,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n        toggleSerie,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcLinkLabels: null,\n        arcs: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={legendData}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { createElement, useEffect, useMemo, useRef } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor, useDimensions, useTheme, Container } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = 1,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius, setActiveId } =\n        usePieFromBox<RawDatum>({\n            data: normalizedData,\n            width: innerWidth,\n            height: innerHeight,\n            fit,\n            innerRadius: innerRadiusRatio,\n            startAngle,\n            endAngle,\n            padAngle,\n            sortByValue,\n            cornerRadius,\n            activeInnerRadiusOffset,\n            activeOuterRadiusOffset,\n        })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const PieCanvas = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieCanvasProps<RawDatum>) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerPieCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum,>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import curveLinear from \"./linear.js\";\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function areaStart() {\n    this._curve.areaStart();\n  },\n  areaEnd: function areaEnd() {\n    this._curve.areaEnd();\n  },\n  lineStart: function lineStart() {\n    this._curve.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this._curve.lineEnd();\n  },\n  point: function point(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\nexport default function curveRadial(curve) {\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n  return radial;\n}","import curveRadial, { curveRadialLinear } from \"./curve/radial.js\";\nimport line from \"./line.js\";\nexport function lineRadial(l) {\n  var c = l.curve;\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function (_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\nexport default function () {\n  return lineRadial(line().curve(curveRadialLinear));\n}","import { useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { lineRadial, CurveFactory } from 'd3-shape'\nimport { ScaleLinear } from 'd3-scale'\nimport { useMotionConfig, useTheme, useAnimatedPath } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { RadarCommonProps } from './types'\n\ninterface RadarLayerProps<D extends Record<string, unknown>> {\n    data: D[]\n    item: string\n    colorByKey: Record<string | number, string>\n    fillByKey: Record<string, string | null>\n    radiusScale: ScaleLinear<number, number>\n    angleStep: number\n    curveFactory: CurveFactory\n    borderWidth: RadarCommonProps<D>['borderWidth']\n    borderColor: RadarCommonProps<D>['borderColor']\n    fillOpacity: RadarCommonProps<D>['fillOpacity']\n    blendMode: RadarCommonProps<D>['blendMode']\n}\n\nexport const RadarLayer = <D extends Record<string, unknown>>({\n    data,\n    item: key,\n    colorByKey,\n    fillByKey,\n    radiusScale,\n    angleStep,\n    curveFactory,\n    borderWidth,\n    borderColor,\n    fillOpacity,\n    blendMode,\n}: RadarLayerProps<D>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const lineGenerator = useMemo(() => {\n        return lineRadial<number>()\n            .radius(d => radiusScale(d))\n            .angle((_, i) => i * angleStep)\n            .curve(curveFactory)\n    }, [radiusScale, angleStep, curveFactory])\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(lineGenerator(data.map(d => d[key] as number)) as string)\n    const animatedProps = useSpring<{ fill: string; stroke: string }>({\n        fill: colorByKey[key],\n        stroke: getBorderColor({ key, color: colorByKey[key] }),\n        config: springConfig,\n        immediate: !animate,\n    })\n    const fill = fillByKey[key] ?? animatedProps.fill\n\n    return (\n        <animated.path\n            key={key}\n            d={animatedPath}\n            fill={fill}\n            fillOpacity={fillOpacity}\n            stroke={animatedProps.stroke}\n            strokeWidth={borderWidth}\n            style={{ mixBlendMode: blendMode }}\n        />\n    )\n}\n","import { createElement } from 'react'\nimport { useSprings } from '@react-spring/web'\nimport { useMotionConfig, positionFromAngle, radiansToDegrees } from '@nivo/core'\nimport { GridLabelComponent } from './types'\n\nconst textAnchorFromAngle = (_angle: number) => {\n    const angle = radiansToDegrees(_angle) + 90\n\n    if (angle <= 10 || angle >= 350 || (angle >= 170 && angle <= 190)) return 'middle' as const\n    if (angle > 180) return 'end' as const\n    return 'start' as const\n}\n\ninterface RadarGridLabelsProps {\n    radius: number\n    angles: number[]\n    indices: string[]\n    label: GridLabelComponent\n    labelOffset: number\n}\n\nexport const RadarGridLabels = ({\n    radius,\n    angles,\n    indices,\n    label: labelComponent,\n    labelOffset,\n}: RadarGridLabelsProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = indices.map((index, i) => {\n        const position = positionFromAngle(angles[i], radius + labelOffset)\n        const textAnchor = textAnchorFromAngle(angles[i])\n\n        return {\n            id: index,\n            angle: radiansToDegrees(angles[i]),\n            anchor: textAnchor,\n            ...position,\n        }\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y})`,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return (\n        <>\n            {springs.map((animatedProps, index) => {\n                const label = labels[index]\n\n                return createElement(labelComponent, {\n                    key: label.id,\n                    id: label.id,\n                    anchor: label.anchor,\n                    angle: label.angle,\n                    x: label.x,\n                    y: label.y,\n                    animated: animatedProps,\n                })\n            })}\n        </>\n    )\n}\n","import { memo, SVGProps, useMemo } from 'react'\nimport { lineRadial, curveLinearClosed } from 'd3-shape'\nimport { animated, useSpring, to } from '@react-spring/web'\nimport { useTheme, useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { RadarCommonProps } from './types'\n\ninterface RadarGridLevelCircularProps {\n    radius: number\n}\n\nconst RadarGridLevelCircular = memo(({ radius }: RadarGridLevelCircularProps) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        radius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            fill=\"none\"\n            r={to(animatedProps.radius, value => Math.max(value, 0))}\n            {...(theme.grid.line as Omit<SVGProps<SVGCircleElement>, 'ref'>)}\n        />\n    )\n})\n\ninterface RadarGridLevelLinearProps {\n    radius: number\n    angleStep: number\n    dataLength: number\n}\n\nconst RadarGridLevelLinear = ({ radius, angleStep, dataLength }: RadarGridLevelLinearProps) => {\n    const theme = useTheme()\n\n    const radarLineGenerator = useMemo(\n        () =>\n            lineRadial<number>()\n                .angle(i => i * angleStep)\n                .radius(radius)\n                .curve(curveLinearClosed),\n        [angleStep, radius]\n    )\n\n    const points = Array.from({ length: dataLength }, (_, i) => i)\n    const animatedPath = useAnimatedPath(radarLineGenerator(points) as string)\n\n    return (\n        <animated.path\n            fill=\"none\"\n            d={animatedPath}\n            {...(theme.grid.line as Omit<SVGProps<SVGPathElement>, 'ref'>)}\n        />\n    )\n}\n\ninterface RadarGridLevelsProps<D extends Record<string, unknown>> {\n    shape: RadarCommonProps<D>['gridShape']\n    radius: number\n    angleStep: number\n    dataLength: number\n}\n\nexport const RadarGridLevels = <D extends Record<string, unknown>>({\n    shape,\n    ...props\n}: RadarGridLevelsProps<D>) => {\n    return shape === 'circular' ? (\n        <RadarGridLevelCircular radius={props.radius} />\n    ) : (\n        <RadarGridLevelLinear {...props} />\n    )\n}\n","import { SVGProps, useMemo } from 'react'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport { RadarGridLabels } from './RadarGridLabels'\nimport { RadarGridLevels } from './RadarGridLevels'\nimport { GridLabelComponent, RadarCommonProps } from './types'\n\ninterface RadarGridProps<D extends Record<string, unknown>> {\n    indices: string[]\n    shape: RadarCommonProps<D>['gridShape']\n    radius: number\n    levels: number\n    angleStep: number\n    label: GridLabelComponent\n    labelOffset: number\n}\n\nexport const RadarGrid = <D extends Record<string, unknown>>({\n    indices,\n    levels,\n    shape,\n    radius,\n    angleStep,\n    label,\n    labelOffset,\n}: RadarGridProps<D>) => {\n    const theme = useTheme()\n    const { radii, angles } = useMemo(() => {\n        return {\n            radii: Array.from({ length: levels })\n                .map((_, i) => (radius / levels) * (i + 1))\n                .reverse(),\n            angles: Array.from({ length: indices.length }, (_, i) => i * angleStep - Math.PI / 2),\n        }\n    }, [indices, levels, radius, angleStep])\n\n    return (\n        <>\n            {angles.map((angle, i) => {\n                const position = positionFromAngle(angle, radius)\n                return (\n                    <line\n                        key={`axis.${i}`}\n                        x1={0}\n                        y1={0}\n                        x2={position.x}\n                        y2={position.y}\n                        {...(theme.grid.line as SVGProps<SVGLineElement>)}\n                    />\n                )\n            })}\n            {radii.map((radius, i) => (\n                <RadarGridLevels<D>\n                    key={`level.${i}`}\n                    shape={shape}\n                    radius={radius}\n                    angleStep={angleStep}\n                    dataLength={indices.length}\n                />\n            ))}\n            <RadarGridLabels\n                radius={radius}\n                angles={angles}\n                indices={indices}\n                labelOffset={labelOffset}\n                label={label}\n            />\n        </>\n    )\n}\n","import { useMemo, useState, useCallback, createElement } from 'react'\nimport { Arc } from 'd3-shape'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { RadarCommonProps, RadarDataProps, RadarSliceTooltipDatum } from './types'\n\ninterface RadarSliceProps<D extends Record<string, unknown>> {\n    datum: D\n    keys: RadarDataProps<D>['keys']\n    index: string | number\n    formatValue: (value: number, context: string) => string\n    colorByKey: Record<string, string>\n    startAngle: number\n    endAngle: number\n    radius: number\n    arcGenerator: Arc<void, { startAngle: number; endAngle: number }>\n    tooltip: RadarCommonProps<D>['sliceTooltip']\n}\n\nexport const RadarSlice = <D extends Record<string, unknown>>({\n    datum,\n    keys,\n    index,\n    formatValue,\n    colorByKey,\n    radius,\n    startAngle,\n    endAngle,\n    arcGenerator,\n    tooltip,\n}: RadarSliceProps<D>) => {\n    const [isHover, setIsHover] = useState(false)\n    const theme = useTheme()\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipData = useMemo(() => {\n        const data: RadarSliceTooltipDatum[] = keys.map(key => ({\n            color: colorByKey[key],\n            id: key,\n            value: datum[key] as number,\n            formattedValue: formatValue(datum[key] as number, key),\n        }))\n        data.sort((a, b) => a.value - b.value)\n        data.reverse()\n\n        return data\n    }, [datum, keys, formatValue, colorByKey])\n\n    const showItemTooltip = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(\n                createElement(tooltip, {\n                    index,\n                    data: tooltipData,\n                }),\n                event\n            )\n        },\n        [showTooltipFromEvent, tooltip, index, tooltipData]\n    )\n\n    const hideItemTooltip = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [hideTooltip, setIsHover])\n\n    const { path, tipX, tipY } = useMemo(() => {\n        const position = positionFromAngle(\n            startAngle + (endAngle - startAngle) * 0.5 - Math.PI / 2,\n            radius\n        )\n\n        return {\n            path: arcGenerator({ startAngle, endAngle }) as string,\n            tipX: position.x,\n            tipY: position.y,\n        }\n    }, [startAngle, endAngle, radius, arcGenerator])\n\n    return (\n        <>\n            {isHover && <line x1={0} y1={0} x2={tipX} y2={tipY} style={theme.crosshair.line} />}\n            <path\n                d={path}\n                fill=\"#F00\"\n                fillOpacity={0}\n                onMouseEnter={showItemTooltip}\n                onMouseMove={showItemTooltip}\n                onMouseLeave={hideItemTooltip}\n            />\n        </>\n    )\n}\n","import { arc as d3Arc } from 'd3-shape'\nimport { RadarSlice } from './RadarSlice'\nimport { RadarColorMapping, RadarCommonProps, RadarDataProps } from './types'\n\ninterface RadarSlicesProps<D extends Record<string, unknown>> {\n    data: RadarDataProps<D>['data']\n    keys: RadarDataProps<D>['keys']\n    getIndex: (d: D) => string | number\n    formatValue: (value: number, context: string) => string\n    colorByKey: RadarColorMapping\n    radius: number\n    angleStep: number\n    tooltip: RadarCommonProps<D>['sliceTooltip']\n}\n\nexport const RadarSlices = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    getIndex,\n    formatValue,\n    colorByKey,\n    radius,\n    angleStep,\n    tooltip,\n}: RadarSlicesProps<D>) => {\n    const arc = d3Arc<{ startAngle: number; endAngle: number }>().outerRadius(radius).innerRadius(0)\n\n    const halfAngleStep = angleStep * 0.5\n    let rootStartAngle = -halfAngleStep\n\n    return (\n        <>\n            {data.map(d => {\n                const index = getIndex(d)\n                const startAngle = rootStartAngle\n                const endAngle = startAngle + angleStep\n\n                rootStartAngle += angleStep\n\n                return (\n                    <RadarSlice\n                        key={index}\n                        datum={d}\n                        keys={keys}\n                        index={index}\n                        formatValue={formatValue}\n                        colorByKey={colorByKey}\n                        startAngle={startAngle}\n                        endAngle={endAngle}\n                        radius={radius}\n                        arcGenerator={arc}\n                        tooltip={tooltip}\n                    />\n                )\n            })}\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { ScaleLinear } from 'd3-scale'\nimport { useTheme, positionFromAngle, DotsItem, usePropertyAccessor } from '@nivo/core'\nimport { getInheritedColorGenerator } from '@nivo/colors'\nimport { RadarCommonProps, RadarDataProps, PointProps, PointData, RadarColorMapping } from './types'\n\ninterface RadarDotsProps<D extends Record<string, unknown>> {\n    data: RadarDataProps<D>['data']\n    keys: RadarDataProps<D>['keys']\n    radiusScale: ScaleLinear<number, number>\n    getIndex: (d: D) => string\n    colorByKey: RadarColorMapping\n    angleStep: number\n    symbol?: RadarCommonProps<D>['dotSymbol']\n    size: number\n    color: RadarCommonProps<D>['dotColor']\n    borderWidth: number\n    borderColor: RadarCommonProps<D>['dotBorderColor']\n    enableLabel: boolean\n    label: RadarCommonProps<D>['dotLabel']\n    formatValue: (value: number, context: string) => string\n    labelYOffset: number\n}\n\nexport const RadarDots = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    getIndex,\n    colorByKey,\n    radiusScale,\n    angleStep,\n    symbol,\n    size = 6,\n    color = { from: 'color' },\n    borderWidth = 0,\n    borderColor = { from: 'color' },\n    enableLabel = false,\n    label = 'value',\n    formatValue,\n    labelYOffset,\n}: RadarDotsProps<D>) => {\n    const theme = useTheme()\n    const fillColor = getInheritedColorGenerator(color, theme)\n    const strokeColor = getInheritedColorGenerator(borderColor, theme)\n    const getLabel = usePropertyAccessor<PointData, string | number>(label)\n\n    const points: PointProps[] = useMemo(\n        () =>\n            data.reduce((acc, datum, i) => {\n                const index = getIndex(datum)\n                keys.forEach(key => {\n                    const value = datum[key] as number\n\n                    const pointData: PointData = {\n                        index,\n                        key,\n                        value,\n                        formattedValue: formatValue(value, key),\n                        color: colorByKey[key],\n                    }\n\n                    acc.push({\n                        key: `${key}.${index}`,\n                        label: enableLabel ? getLabel(pointData) : undefined,\n                        style: {\n                            fill: fillColor(pointData),\n                            stroke: strokeColor(pointData),\n                            ...positionFromAngle(\n                                angleStep * i - Math.PI / 2,\n                                radiusScale(datum[key] as number)\n                            ),\n                        },\n                        data: pointData,\n                    })\n                })\n\n                return acc\n            }, [] as PointProps[]),\n        [\n            data,\n            keys,\n            getIndex,\n            colorByKey,\n            enableLabel,\n            getLabel,\n            formatValue,\n            fillColor,\n            strokeColor,\n            angleStep,\n            radiusScale,\n        ]\n    )\n\n    return (\n        <>\n            {points.map(point => (\n                <DotsItem\n                    key={point.key}\n                    x={point.style.x}\n                    y={point.style.y}\n                    symbol={symbol}\n                    size={size}\n                    color={point.style.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.style.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    datum={point.data}\n                />\n            ))}\n        </>\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { GridLabelProps } from './types'\n\nexport const RadarGridLabel = ({ id, anchor, animated: animatedProps }: GridLabelProps) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <text style={theme.axis.ticks.text} dominantBaseline=\"central\" textAnchor={anchor}>\n                {id}\n            </text>\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { RadarSliceTooltipProps } from './types'\n\nexport const RadarSliceTooltip = ({ index, data }: RadarSliceTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            data.map(datum => [\n                <Chip key={datum.id} color={datum.color} />,\n                datum.id,\n                datum.formattedValue,\n            ]),\n        [data]\n    )\n\n    return <TableTooltip title={<strong>{index}</strong>} rows={rows} />\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport { Container, useDimensions, SvgWrapper } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { RadarLayer } from './RadarLayer'\nimport { RadarGrid } from './RadarGrid'\nimport { RadarSlices } from './RadarSlices'\nimport { RadarDots } from './RadarDots'\nimport { svgDefaultProps } from './props'\nimport { RadarLayerId, RadarSvgProps } from './types'\nimport { useRadar } from './hooks'\n\ntype InnerRadarProps<D extends Record<string, unknown>> = Omit<\n    RadarSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerRadar = <D extends Record<string, unknown>>({\n    data,\n    keys,\n    indexBy,\n    layers = svgDefaultProps.layers,\n    maxValue = svgDefaultProps.maxValue,\n    valueFormat,\n    curve = svgDefaultProps.curve,\n    margin: partialMargin,\n    width,\n    height,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n    gridLevels = svgDefaultProps.gridLevels,\n    gridShape = svgDefaultProps.gridShape,\n    gridLabel = svgDefaultProps.gridLabel,\n    gridLabelOffset = svgDefaultProps.gridLabelOffset,\n    enableDots = svgDefaultProps.enableDots,\n    dotSymbol,\n    dotSize = svgDefaultProps.dotSize,\n    dotColor = svgDefaultProps.dotColor,\n    dotBorderWidth = svgDefaultProps.dotBorderWidth,\n    dotBorderColor = svgDefaultProps.dotBorderColor,\n    enableDotLabel = svgDefaultProps.enableDotLabel,\n    dotLabel = svgDefaultProps.dotLabel,\n    dotLabelYOffset = svgDefaultProps.dotLabelYOffset,\n    colors = svgDefaultProps.colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    blendMode = svgDefaultProps.blendMode,\n    isInteractive = svgDefaultProps.isInteractive,\n    sliceTooltip = svgDefaultProps.sliceTooltip,\n    legends = svgDefaultProps.legends,\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n}: InnerRadarProps<D>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        getIndex,\n        indices,\n        formatValue,\n        colorByKey,\n        fillByKey,\n        boundDefs,\n        radius,\n        radiusScale,\n        centerX,\n        centerY,\n        angleStep,\n        curveFactory,\n        boundLegends,\n        customLayerProps,\n    } = useRadar<D>({\n        data,\n        keys,\n        indexBy,\n        maxValue,\n        valueFormat,\n        curve,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        legends,\n        defs,\n        fill,\n    })\n\n    const layerById: Record<RadarLayerId, ReactNode> = {\n        grid: null,\n        layers: null,\n        slices: null,\n        dots: null,\n        legends: null,\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <g key=\"grid\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarGrid<D>\n                    levels={gridLevels}\n                    shape={gridShape}\n                    radius={radius}\n                    angleStep={angleStep}\n                    indices={indices}\n                    label={gridLabel}\n                    labelOffset={gridLabelOffset}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('layers')) {\n        layerById.layers = (\n            <g key=\"layers\" transform={`translate(${centerX}, ${centerY})`}>\n                {keys.map(key => (\n                    <RadarLayer<D>\n                        key={key}\n                        data={data}\n                        item={key}\n                        colorByKey={colorByKey}\n                        fillByKey={fillByKey}\n                        radiusScale={radiusScale}\n                        angleStep={angleStep}\n                        curveFactory={curveFactory}\n                        borderWidth={borderWidth}\n                        borderColor={borderColor}\n                        fillOpacity={fillOpacity}\n                        blendMode={blendMode}\n                    />\n                ))}\n            </g>\n        )\n    }\n\n    if (layers.includes('slices') && isInteractive) {\n        layerById.slices = (\n            <g key=\"slices\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarSlices<D>\n                    data={data}\n                    keys={keys}\n                    getIndex={getIndex}\n                    formatValue={formatValue}\n                    colorByKey={colorByKey}\n                    radius={radius}\n                    angleStep={angleStep}\n                    tooltip={sliceTooltip}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <g key=\"dots\" transform={`translate(${centerX}, ${centerY})`}>\n                <RadarDots<D>\n                    data={data}\n                    keys={keys}\n                    getIndex={getIndex}\n                    radiusScale={radiusScale}\n                    angleStep={angleStep}\n                    symbol={dotSymbol}\n                    size={dotSize}\n                    colorByKey={colorByKey}\n                    color={dotColor}\n                    borderWidth={dotBorderWidth}\n                    borderColor={dotBorderColor}\n                    enableLabel={enableDotLabel}\n                    label={dotLabel}\n                    formatValue={formatValue}\n                    labelYOffset={dotLabelYOffset}\n                />\n            </g>\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {boundLegends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Radar = <D extends Record<string, unknown>>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: RadarSvgProps<D>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerRadar<D> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { RadarSvgProps } from './types'\nimport { Radar } from './Radar'\n\nexport const ResponsiveRadar = <D extends Record<string, unknown>>(\n    props: Omit<RadarSvgProps<D>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Radar<D> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { useCallback, createElement } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamLayerData } from './types'\n\ninterface StreamLayerProps<RawDatum extends StreamDatum> {\n    layer: StreamLayerData\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayer = <RawDatum extends StreamDatum>({\n    layer,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayerProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { layer }), event, 'left')\n        },\n        [showTooltipFromEvent, layer]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(layer.path)\n    const animatedProps = useSpring({\n        color: layer.color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={layer.fill ? layer.fill : animatedProps.color}\n            fillOpacity={fillOpacity}\n            stroke={getBorderColor(layer)}\n            strokeWidth={borderWidth}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? hideTooltip : undefined}\n        />\n    )\n}\n","import { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { StreamLayer } from './StreamLayer'\nimport { StreamCommonProps, StreamLayerData, StreamDatum } from './types'\n\ninterface StreamLayersProps<RawDatum extends StreamDatum> {\n    layers: StreamLayerData[]\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayers = <RawDatum extends StreamDatum>({\n    layers,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayersProps<RawDatum>) => (\n    <g>\n        {layers.map((layer, i) => (\n            <StreamLayer<RawDatum>\n                key={i}\n                layer={layer}\n                getBorderColor={getBorderColor}\n                borderWidth={borderWidth}\n                fillOpacity={fillOpacity}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { createElement } from 'react'\nimport { StreamSvgProps, StreamLayerDatum, StreamDatum } from './types'\n\ninterface StreamDotsProps<RawDatum extends StreamDatum> {\n    id: string | number\n    color: string\n    data: StreamLayerDatum[]\n    dotComponent: Exclude<StreamSvgProps<RawDatum>['dotComponent'], undefined>\n    position: 'start' | 'center' | 'end'\n    getSize: (datum: StreamLayerDatum) => number\n    getColor: (datum: StreamLayerDatum) => string\n    getBorderWidth: (datum: StreamLayerDatum) => number\n    getBorderColor: (datum: StreamLayerDatum) => string\n}\n\nconst getDotY = <RawDatum extends StreamDatum>(\n    datum: StreamLayerDatum,\n    position: StreamDotsProps<RawDatum>['position']\n) => {\n    let y = datum.y2\n    if (position === 'center') {\n        y = datum.y1 + (datum.y2 - datum.y1) / 2\n    } else if (position === 'start') {\n        y = datum.y1\n    }\n\n    return y\n}\n\nexport const StreamDots = <RawDatum extends StreamDatum>({\n    data,\n    dotComponent,\n    position,\n    getSize,\n    getColor,\n    getBorderWidth,\n    getBorderColor,\n}: StreamDotsProps<RawDatum>) => (\n    <>\n        {data.map((datum, i) => {\n            return createElement(dotComponent, {\n                key: i,\n                datum,\n                x: datum.x,\n                y: getDotY<RawDatum>(datum, position),\n                size: getSize(datum),\n                color: getColor(datum),\n                borderWidth: getBorderWidth(datum),\n                borderColor: getBorderColor(datum),\n            })\n        })}\n    </>\n)\n","import { createElement, useCallback, useState } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamSliceData } from './types'\n\ninterface StreamSlicesItemProps<RawDatum extends StreamDatum> {\n    slice: StreamSliceData\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlicesItem = <RawDatum extends StreamDatum>({\n    slice,\n    height,\n    tooltip,\n}: StreamSlicesItemProps<RawDatum>) => {\n    const [isHover, setIsHover] = useState(false)\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(createElement(tooltip, { slice }), event, 'left')\n        },\n        [setIsHover, showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [setIsHover, hideTooltip])\n\n    return (\n        <g transform={`translate(${slice.x}, 0)`}>\n            {isHover && (\n                <line\n                    x1={0}\n                    x2={0}\n                    y1={0}\n                    y2={height}\n                    stroke=\"#000\"\n                    strokeOpacity={0.35}\n                    strokeWidth={1}\n                />\n            )}\n            <rect\n                x={-20}\n                width={40}\n                height={height}\n                fill=\"#000\"\n                fillOpacity={0}\n                onMouseEnter={handleMouseHover}\n                onMouseMove={handleMouseHover}\n                onMouseLeave={handleMouseLeave}\n            />\n        </g>\n    )\n}\n","import { StreamSliceData, StreamDatum, StreamCommonProps } from './types'\nimport { StreamSlicesItem } from './StreamSlicesItem'\n\ninterface StreamSlicesProps<RawDatum extends StreamDatum> {\n    slices: StreamSliceData[]\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlices = <RawDatum extends StreamDatum>({\n    slices,\n    height,\n    tooltip,\n}: StreamSlicesProps<RawDatum>) => (\n    <g>\n        {slices.map(slice => (\n            <StreamSlicesItem<RawDatum>\n                key={slice.index}\n                slice={slice}\n                height={height}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\n\nexport interface StreamDotsItemProps {\n    x: number\n    y: number\n    size: number\n    color: string\n    borderWidth: number\n    borderColor: string\n}\n\nexport const StreamDotsItem = ({\n    x,\n    y,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n}: StreamDotsItemProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size * 0.5,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius}\n            fill={animatedProps.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nexport const LayerTooltip = ({ layer }: TooltipProps) => (\n    <BasicTooltip id={layer.label} enableChip={true} color={layer.color} />\n)\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { StackTooltipProps } from './types'\n\nexport const StackTooltip = ({ slice }: StackTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            slice.stack.map(p => [\n                <Chip key={p.layerId} color={p.color} />,\n                p.layerLabel,\n                p.formattedValue,\n            ]),\n        [slice]\n    )\n\n    return <TableTooltip rows={rows} />\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    Container,\n    SvgWrapper,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { StreamLayers } from './StreamLayers'\nimport { StreamDots } from './StreamDots'\nimport { StreamSlices } from './StreamSlices'\nimport { useStream } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { StreamDatum, StreamLayerId, StreamSvgProps } from './types'\n\ntype InnerStreamProps<RawDatum extends StreamDatum> = Omit<\n    StreamSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerStream = <RawDatum extends StreamDatum>({\n    data,\n    keys,\n    label,\n    valueFormat,\n\n    offsetType,\n    order,\n    curve,\n\n    layers: chartLayers = svgDefaultProps.layers,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n\n    colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n\n    enableDots = svgDefaultProps.enableDots,\n    dotPosition = svgDefaultProps.dotPosition,\n    dotComponent = svgDefaultProps.dotComponent,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    enableStackTooltip = svgDefaultProps.enableStackTooltip,\n    stackTooltip = svgDefaultProps.stackTooltip,\n\n    legends = svgDefaultProps.legends,\n\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerStreamProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        xScale,\n        yScale,\n        layers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    } = useStream<RawDatum>({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        keys,\n        label,\n        valueFormat,\n        offsetType,\n        order,\n        curve,\n        colors,\n        borderColor,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n    })\n\n    const boundDefs = bindDefs(defs, layers, fill)\n\n    const layerById: Record<StreamLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        layers: null,\n        dots: null,\n        slices: null,\n        legends: null,\n    }\n\n    if (chartLayers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n            />\n        )\n    }\n\n    if (chartLayers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (chartLayers.includes('layers')) {\n        layerById.layers = (\n            <StreamLayers<RawDatum>\n                key=\"layers\"\n                layers={layers}\n                fillOpacity={fillOpacity}\n                borderWidth={borderWidth}\n                getBorderColor={getBorderColor}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <Fragment key=\"dots\">\n                {layers.map(layer => (\n                    <StreamDots\n                        key={layer.id}\n                        id={layer.id}\n                        color={layer.color}\n                        data={layer.data}\n                        dotComponent={dotComponent}\n                        position={dotPosition}\n                        getSize={getDotSize}\n                        getColor={getDotColor}\n                        getBorderWidth={getDotBorderWidth}\n                        getBorderColor={getDotBorderColor}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (chartLayers.includes('slices') && isInteractive && enableStackTooltip) {\n        layerById.slices = (\n            <StreamSlices<RawDatum>\n                key=\"slices\"\n                slices={slices}\n                height={innerHeight}\n                tooltip={stackTooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => {\n                    const legendData = layers\n                        .map(layer => ({\n                            id: layer.id,\n                            label: layer.label,\n                            color: layer.color,\n                            fill: layer.fill,\n                        }))\n                        .reverse()\n\n                    return (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legend}\n                            containerWidth={innerWidth}\n                            containerHeight={innerHeight}\n                            data={legendData}\n                        />\n                    )\n                })}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {chartLayers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Stream = <RawDatum extends StreamDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: StreamSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerStream<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { StreamDatum, StreamSvgProps } from './types'\nimport { Stream } from './Stream'\n\nexport const ResponsiveStream = <RawDatum extends StreamDatum>(\n    props: Omit<StreamSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Stream<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\nexport default function () {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 = root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function (node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function (x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function (x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const SunburstTooltip = <RawDatum,>({\n    id,\n    formattedValue,\n    color,\n}: ComputedDatum<RawDatum>) => (\n    <BasicTooltip id={id} value={formattedValue} enableChip={true} color={color} />\n)\n","import { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    Container,\n    SvgWrapper,\n    useDimensions,\n} from '@nivo/core'\nimport { ArcLabelsLayer } from '@nivo/arcs'\nimport { defaultProps } from './props'\nimport { useSunburst, useSunburstLayerContext } from './hooks'\nimport { SunburstSvgProps, SunburstLayerId, SunburstLayer, ComputedDatum } from './types'\nimport { Arcs } from './Arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\n\ntype InnerSunburstProps<RawDatum> = Partial<\n    Omit<\n        SunburstSvgProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nconst InnerSunburst = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    cornerRadius = defaultProps.cornerRadius,\n    layers = defaultProps.layers as SunburstLayer<RawDatum>[],\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor,\n    margin: partialMargin,\n    width,\n    height,\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsComponent,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    transitionMode = defaultProps.transitionMode,\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n    role = defaultProps.role,\n}: InnerSunburstProps<RawDatum>) => {\n    const { innerHeight, innerWidth, margin, outerHeight, outerWidth } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { centerX, centerY, radius } = useMemo(() => {\n        const radius = Math.min(innerWidth, innerHeight) / 2\n\n        return { radius, centerX: innerWidth / 2, centerY: innerHeight / 2 }\n    }, [innerHeight, innerWidth])\n\n    const { arcGenerator, nodes } = useSunburst({\n        data,\n        id,\n        value,\n        valueFormat,\n        radius,\n        cornerRadius,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const boundDefs = bindDefs(defs, nodes, fill, {\n        dataKey: '.',\n        colorKey: 'color',\n        targetKey: 'fill',\n    })\n\n    const layerById: Record<SunburstLayerId, ReactNode> = {\n        arcs: null,\n        arcLabels: null,\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={nodes}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                transitionMode={transitionMode}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseMove={onMouseMove}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={nodes}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    const layerContext = useSunburstLayerContext<RawDatum>({\n        nodes,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            defs={boundDefs}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as SunburstLayerId] !== undefined) {\n                    return layerById[layer as SunburstLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Sunburst = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: Partial<Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme, renderWrapper }}>\n        <InnerSunburst<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Sunburst } from './Sunburst'\nimport { SunburstSvgProps } from './types'\n\ntype ResponsiveSunburstProps<RawDatum> = Partial<\n    Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data'>\n\nexport const ResponsiveSunburst = <RawDatum,>(props: ResponsiveSunburstProps<RawDatum>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Sunburst<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n"],"names":["Container","styled","theme","colors","coloredRange","media","HomeItemLabel","accent","HomeItem","Link","HomeLogo","HomeBaseline","to","padAngle","innerRadiusRatio","generateChordData","size","enableLabel","isInteractive","animate","arcBorderWidth","ribbonBorderWidth","commonAxes","axisLeft","tickSize","tickPadding","axisBottom","nivoTheme","margin","top","bottom","left","right","data","generateDrinkStats","yScale","type","stacked","curve","dotSize","dotBorderWidth","dotBorderColor","HomeCirclePacking","reversedColors","generateLibTree","id","value","colorBy","childColor","padding","enableLabels","isHorizontal","generateCountriesData","keys","indexBy","layout","groupMode","enableGridX","enableGridY","range","map","reduce","acc","i","random","fillOpacity","generateProgrammingLanguageStats","d","label","innerRadius","enableArcLabels","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","calendarFrom","Date","calendarTo","calendarData","generateDayCounts","from","dayBorderWidth","yearSpacing","yearLegendSpacing","emptyColor","dayBorderColor","monthBorderColor","generateWinesTastes","voronoi","xDomain","yDomain","x","Math","y","enableLinks","linkLineColor","cellLineColor","cellLineWidth","enablePoints","pointSize","pointColor","identity","valueFormat","leavesOnly","borderWidth","innerPadding","labelTextColor","borderColor","generateSankeyData","nodeCount","maxIterations","nodeBorderColor","nodeOpacity","nodeWidth","nodePadding","nodeBorderWidth","linkOpacity","linkBlendMode","linkContract","generateSwarmPlotData","min","max","groups","groupBy","valueScale","key","values","sizes","axisTop","axisRight","useTheme","slice","reverse","axis","ticks","line","stroke","text","fill","fontSize","grid","strokeWidth","strokeDasharray","labels","HomeBar","style","backgroundImage","Seo","title","keywords","randColor","round","countryCodes","names","programmingLanguages","generateBulletData","subtitle","rangeCount","measureCount","markerCount","float","ranges","remaining","measures","length","markers","minValue","maxValue","maxSize","selectedKeys","matrix","generateNetworkData","rootSize","midSize","leafSize","minMidNodes","maxMidNodes","minLeaves","maxLeaves","rootNode","height","color","nodes","Array","_","k","links","extraNodes","forEach","push","source","target","distance","concat","generateParallelCoordinatesData","shuffle","availableNodes","n","name","getNodeTargets","currentPath","targets","filter","Error","includes","join","targetId","getNodesTargets","targetsById","link","Object","assign","node","nodeColor","randId","randomPrice","randomVolume","randomCategory","categoryCount","group","groupIndex","price","index","datum","volume","categories","randomizeSwarmPlotData","previousData","shouldShuffle","limit","langs","sets","language","uniqRand","generator","used","randCountryCode","xSize","types","country","find","generateSeries","ids","xKeys","days","timeDays","dayFormat","timeFormat","day","generateOrderedDayCounts","withColors","libTreeItems","children","tree","leaf","loc","wines","wineTastes","randMin","randMax","taste","wine","a","b","NaN","PieLegends","width","legends","toggleSerie","_jsx","legend","BoxLegendSvg","containerWidth","containerHeight","defaultProps","sortByValue","cornerRadius","layers","startAngle","endAngle","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","modifiers","arcLabel","arcLabelsSkipAngle","arcLabelsRadiusOffset","arcLabelsTextColor","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","scheme","defs","motionConfig","transitionMode","tooltip","BasicTooltip","formattedValue","enableChip","role","pixelRatio","window","devicePixelRatio","useNormalizedData","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","useMemo","datumId","datumValue","normalizedDatum","hidden","usePieArcs","outerRadius","activeId","hiddenIds","pie","innerPie","sortValues","descending","sort","constant","j","a1","v","sum","arcs","a0","apply","this","arguments","da","p","abs","pa","d3Pie","degreesToRadians","hiddenData","item","dataWithArc","arc","angle","thickness","angleDeg","radiansToDegrees","legendData","usePieFromBox","useState","setActiveId","setHiddenIds","computedProps","boundingBox","radius","centerX","centerY","computeArcBoundingBox","points","box","ratio","adjustedBox","debug","pieArcs","useCallback","state","indexOf","arcGenerator","useArcGenerator","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","event","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","ArcsLayer","InnerPie","partialMargin","arcLabelsComponent","arcLinkLabelComponent","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","normalizedData","boundDefs","bindDefs","layerById","arcLinkLabels","arcLabels","ArcLinkLabelsLayer","skipAngle","offset","diagonalLength","straightLength","textOffset","textColor","linkColor","component","ArcLabelsLayer","radiusOffset","layerContext","usePieLayerContext","SvgWrapper","layer","Fragment","Pie","renderWrapper","otherProps","ResponsivePie","props","ResponsiveWrapper","InnerPieCanvas","canvasEl","useRef","getBorderColor","useInheritedColor","useArcLabels","useArcLinkLabels","useEffect","current","ctx","getContext","scale","fillStyle","background","fillRect","save","translate","context","beginPath","strokeStyle","lineWidth","drawCanvasArcLinkLabels","drawCanvasArcLabels","restore","renderLegendToCanvas","getArcFromMouse","getRelativeCursor","hoveredArc","findArcUnderCursor","handleMouseHover","ref","cursor","PieCanvas","ResponsivePieCanvas","curveRadialLinear","curveRadial","Radial","_curve","radial","prototype","areaStart","areaEnd","lineStart","lineEnd","point","r","sin","cos","l","c","RadarLayer","colorByKey","fillByKey","radiusScale","angleStep","curveFactory","blendMode","lineGenerator","lineRadial","useMotionConfig","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","animated","path","mixBlendMode","RadarGridLabels","angles","indices","labelComponent","labelOffset","_angle","position","positionFromAngle","textAnchor","anchor","springs","useSprings","transform","RadarGridLevelCircular","memo","circle","RadarGridLevelLinear","dataLength","radarLineGenerator","curveLinearClosed","RadarGridLevels","shape","RadarGrid","levels","radii","PI","_jsxs","x1","y1","x2","y2","RadarSlice","isHover","setIsHover","tooltipData","showItemTooltip","e","hideItemTooltip","tipX","tipY","crosshair","RadarSlices","getIndex","d3Arc","rootStartAngle","RadarDots","symbol","labelYOffset","fillColor","getInheritedColorGenerator","strokeColor","getLabel","pointData","DotsItem","svgDefaultProps","gridLevels","gridShape","gridLabelOffset","gridLabel","g","dominantBaseline","enableDots","dotColor","enableDotLabel","dotLabel","dotLabelYOffset","sliceTooltip","rows","Chip","TableTooltip","InnerRadar","dotSymbol","ariaLabel","ariaLabelledBy","ariaDescribedBy","mapping","keyData","keyDatum","keyName","allValues","computedMaxValue","scaleLinear","domain","useCurveInterpolation","customLayerProps","boundLegends","customData","boundData","ld","cd","slices","dots","Radar","ResponsiveRadar","StreamLayer","StreamLayers","getDotY","StreamDots","dotComponent","getSize","getBorderWidth","StreamSlicesItem","strokeOpacity","StreamSlices","order","offsetType","dotPosition","cx","cy","enableStackTooltip","stackTooltip","stack","layerId","layerLabel","legendLabel","isFocusable","InnerStream","chartLayers","areaCurveFactory","areaGenerator","area","y0","d3Stack","stackOffsetFromProp","stackOrderFromProp","allMin","allMax","scalePoint","xScale","getDotSize","getDotColor","getDotBorderWidth","getDotBorderColor","enhancedLayers","layerIndex","computedPoints","layerWithComputedProperties","sliceStack","axes","Grid","Axes","Stream","ResponsiveStream","dx","dy","partition","root","x0","eachBefore","depth","positionNode","inheritColorFromParent","InnerSunburst","getChildColor","clonedData","cloneDeep","hierarchy","d3Hierarchy","descendants","d3Partition","total","sortBy","descendant","parent","percentage","ancestors","ancestor","sqrt","normalizedNode","toFixed","useSunburst","dataKey","colorKey","targetKey","useSunburstLayerContext","Sunburst","ResponsiveSunburst","module","exports","array","iteratee","accumulator","initAccum","copyArray","shuffleSelf","string","split","reAsciiWord","match","object","undefined","nativeFloor","floor","nativeRandom","lower","upper","collection","arrayMap","baseSlice","start","end","castSlice","hasUnicode","stringToArray","toString","methodName","strSymbols","chr","charAt","trailing","arrayReduce","deburr","words","reApos","RegExp","callback","replace","deburrLetter","basePropertyOf","reHasUnicode","test","reHasUnicodeWord","baseRandom","lastIndex","rand","asciiToArray","unicodeToArray","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","rsModifier","rsEmoji","reUnicodeWord","reLatin","reComboMark","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","isArray","createCompounder","upperFirst","startCase","result","word","createCaseFirst","baseValues","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard"],"sourceRoot":""}