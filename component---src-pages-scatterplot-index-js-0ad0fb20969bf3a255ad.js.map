{"version":3,"file":"component---src-pages-scatterplot-index-js-0ad0fb20969bf3a255ad.js","mappings":"8aASA,IAAMA,EAAoB,CACtBC,OAAQ,CACJC,IAAK,GACLC,MAAO,IACPC,OAAQ,GACRC,KAAM,IAGVC,OAAQ,CACJC,KAAM,SACNC,IAAK,EACLC,IAAK,QAETC,QAAS,CAAEC,OAAQ,QAASC,SAAS,GACrCC,OAAQ,CACJN,KAAM,SACNC,IAAK,EACLC,IAAK,QAETK,QAAS,CAAEH,OAAQ,QAASC,SAAS,GAErCG,OAAQC,EAAAA,GAAAA,OACRC,UAAW,WAEXC,SAAUF,EAAAA,GAAAA,SAEVG,YAAaH,EAAAA,GAAAA,YACbI,YAAaJ,EAAAA,GAAAA,YACbK,QAAS,CACLC,QAAQ,EACRC,OAAQ,MACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,GACRC,aAAc,IAElBC,UAAW,CACPP,QAAQ,EACRC,OAAQ,QACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,GACRC,aAAc,GAElBE,WAAY,CACRR,QAAQ,EACRC,OAAQ,SACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,SACRI,eAAgB,SAChBH,aAAc,GACdjB,OAAQ,SAAAqB,GAAC,OAAOA,EAAP,QAEbC,SAAU,CACNX,QAAQ,EACRC,OAAQ,OACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,OACRI,eAAgB,SAChBH,cAAe,GACfjB,OAAQ,SAAAqB,GAAC,OAAOA,EAAP,QAGbE,QAASlB,EAAAA,GAAAA,QACTmB,aAAcnB,EAAAA,GAAAA,aAEdoB,cAAepB,EAAAA,GAAAA,cACfqB,QAASrB,EAAAA,GAAAA,QACTsB,UAAWtB,EAAAA,GAAAA,UAEXuB,QAAS,CACL,CACIC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,UAAW,IACXC,WAAY,GACZC,aAAc,EACdC,cAAe,gBACfC,WAAY,GACZC,YAAa,SACbC,QAAS,SAAAnB,GACLoB,MAAMC,KAAKC,UAAUtB,EAAG,KAAM,UAElCuB,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHC,YAAa,QAwDrC,UAhDoB,WAChB,IAE4CC,GAExCC,EAAAA,EAAAA,gBAAe,cAHfD,MACIE,gBAAmBC,gBAY3B,OACI,SAAC,IAAD,CACIC,KAAK,cACLC,KAAMA,EAAAA,GACNC,KAAK,cACLC,QAASF,EAAAA,GACTG,cAAc,MACdC,WAAYC,EAAAA,EACZrE,kBAAmBA,EACnBsE,kBAAmBtD,EAAAA,GACnBuD,iBAAkBC,EAAAA,EAClBC,aAAcC,EAAAA,EACdf,MAAOA,EAXX,SAaK,SAACS,EAAYO,EAAMC,EAAOC,GAA1B,OACG,SAAC,KAAD,GACIF,KAAMA,GACFP,EAFR,CAGIQ,MAAOA,EACPzB,QAAS,SAAA2B,GACLD,EAAU,CACNtE,KAAM,QACNwE,MAAM,cAAeD,EAAKE,GAArB,QAA+BF,EAAKG,EAApC,QAA6CH,EAAKI,EACvDC,MAAOL,EAAKK,MACZR,KAAMG","sources":["webpack://nivo-website/./src/pages/scatterplot/index.js"],"sourcesContent":["import React from 'react'\nimport { ResponsiveScatterPlot, svgDefaultProps } from '@nivo/scatterplot'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/scatterplot/meta.yml'\nimport mapper from '../../data/components/scatterplot/mapper'\nimport { groups } from '../../data/components/scatterplot/props'\nimport { generateLightDataSet } from '../../data/components/scatterplot/generator'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst initialProperties = {\n    margin: {\n        top: 60,\n        right: 140,\n        bottom: 70,\n        left: 90,\n    },\n\n    xScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n    xFormat: { format: '>-.2f', enabled: true },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n    yFormat: { format: '>-.2f', enabled: true },\n\n    colors: svgDefaultProps.colors,\n    blendMode: 'multiply',\n\n    nodeSize: svgDefaultProps.nodeSize,\n\n    enableGridX: svgDefaultProps.enableGridX,\n    enableGridY: svgDefaultProps.enableGridY,\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: false,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'weight',\n        legendPosition: 'middle',\n        legendOffset: 46,\n        format: d => `${d} kg`,\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'size',\n        legendPosition: 'middle',\n        legendOffset: -60,\n        format: d => `${d} cm`,\n    },\n\n    animate: svgDefaultProps.animate,\n    motionConfig: svgDefaultProps.motionConfig,\n\n    isInteractive: svgDefaultProps.isInteractive,\n    useMesh: svgDefaultProps.useMesh,\n    debugMesh: svgDefaultProps.debugMesh,\n\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 130,\n            translateY: 0,\n            itemWidth: 100,\n            itemHeight: 12,\n            itemsSpacing: 5,\n            itemDirection: 'left-to-right',\n            symbolSize: 12,\n            symbolShape: 'circle',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemOpacity: 1,\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst ScatterPlot = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/scatterplot.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <ComponentTemplate\n            name=\"ScatterPlot\"\n            meta={meta.ScatterPlot}\n            icon=\"scatterplot\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={svgDefaultProps}\n            propertiesMapper={mapper}\n            generateData={generateLightDataSet}\n            image={image}\n        >\n            {(properties, data, theme, logAction) => (\n                <ResponsiveScatterPlot\n                    data={data}\n                    {...properties}\n                    theme={theme}\n                    onClick={node => {\n                        logAction({\n                            type: 'click',\n                            label: `[node] id: ${node.id}, x: ${node.x}, y: ${node.y}`,\n                            color: node.color,\n                            data: node,\n                        })\n                    }}\n                />\n            )}\n        </ComponentTemplate>\n    )\n}\n\nexport default ScatterPlot\n"],"names":["initialProperties","margin","top","right","bottom","left","xScale","type","min","max","xFormat","format","enabled","yScale","yFormat","colors","svgDefaultProps","blendMode","nodeSize","enableGridX","enableGridY","axisTop","enable","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","axisRight","axisBottom","legendPosition","d","axisLeft","animate","motionConfig","isInteractive","useMesh","debugMesh","legends","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","itemDirection","symbolSize","symbolShape","onClick","alert","JSON","stringify","effects","on","style","itemOpacity","image","useStaticQuery","childImageSharp","gatsbyImageData","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","generateData","generateLightDataSet","data","theme","logAction","node","label","id","x","y","color"],"sourceRoot":""}