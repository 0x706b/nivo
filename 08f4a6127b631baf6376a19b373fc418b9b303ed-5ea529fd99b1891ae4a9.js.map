{"version":3,"file":"08f4a6127b631baf6376a19b373fc418b9b303ed-5ea529fd99b1891ae4a9.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-interpolate/src/piecewise.js","webpack://nivo-website/../node_modules/d3-scale/src/diverging.js","webpack://nivo-website/../src/schemes/categorical.ts","webpack://nivo-website/../src/schemes/diverging.ts","webpack://nivo-website/../src/schemes/sequential.ts","webpack://nivo-website/../node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js","webpack://nivo-website/../node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js","webpack://nivo-website/../src/schemes/all.ts","webpack://nivo-website/../src/schemes/cyclical.ts","webpack://nivo-website/../src/schemes/interpolators.ts","webpack://nivo-website/../src/inheritedColor.ts","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/scales/sequentialColorScale.ts","webpack://nivo-website/../src/scales/divergingColorScale.ts","webpack://nivo-website/../src/scales/quantizeColorScale.ts","webpack://nivo-website/../src/scales/continuousColorScale.ts","webpack://nivo-website/../src/scales/ordinalColorScale.ts","webpack://nivo-website/../node_modules/lodash/_arrayEach.js","webpack://nivo-website/../node_modules/lodash/_baseAssign.js","webpack://nivo-website/../node_modules/lodash/_baseAssignIn.js","webpack://nivo-website/../node_modules/lodash/_baseClone.js","webpack://nivo-website/../node_modules/lodash/_baseIsMap.js","webpack://nivo-website/../node_modules/lodash/_baseIsSet.js","webpack://nivo-website/../node_modules/lodash/_baseSlice.js","webpack://nivo-website/../node_modules/lodash/_baseUnset.js","webpack://nivo-website/../node_modules/lodash/_cloneDataView.js","webpack://nivo-website/../node_modules/lodash/_cloneRegExp.js","webpack://nivo-website/../node_modules/lodash/_cloneSymbol.js","webpack://nivo-website/../node_modules/lodash/_copySymbols.js","webpack://nivo-website/../node_modules/lodash/_copySymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_customOmitClone.js","webpack://nivo-website/../node_modules/lodash/_getAllKeysIn.js","webpack://nivo-website/../node_modules/lodash/_getSymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_initCloneArray.js","webpack://nivo-website/../node_modules/lodash/_initCloneByTag.js","webpack://nivo-website/../node_modules/lodash/_parent.js","webpack://nivo-website/../node_modules/lodash/isMap.js","webpack://nivo-website/../node_modules/lodash/isSet.js","webpack://nivo-website/../node_modules/lodash/omit.js"],"sourcesContent":["import { default as value } from \"./value.js\";\nexport default function piecewise(interpolate, values) {\n  if (values === undefined) values = interpolate, interpolate = value;\n  var i = 0,\n      n = values.length - 1,\n      v = values[0],\n      I = new Array(n < 0 ? 0 : n);\n\n  while (i < n) {\n    I[i] = interpolate(v, v = values[++i]);\n  }\n\n  return function (t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}","import _slicedToArray from \"/Users/raph/projects/plouc/nivo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { interpolate, interpolateRound, piecewise } from \"d3-interpolate\";\nimport { identity } from \"./continuous.js\";\nimport { initInterpolator } from \"./init.js\";\nimport { linearish } from \"./linear.js\";\nimport { loggish } from \"./log.js\";\nimport { copy } from \"./sequential.js\";\nimport { symlogish } from \"./symlog.js\";\nimport { powish } from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      s = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function (_) {\n    var _ref, _ref2;\n\n    return arguments.length ? ((_ref = _, _ref2 = _slicedToArray(_ref, 3), x0 = _ref2[0], x1 = _ref2[1], x2 = _ref2[2], _ref), t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function (_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function (_) {\n      var _ref3, _ref4;\n\n      var r0, r1, r2;\n      return arguments.length ? ((_ref3 = _, _ref4 = _slicedToArray(_ref3, 3), r0 = _ref4[0], r1 = _ref4[1], r2 = _ref4[2], _ref3), interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function (t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function () {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function () {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function () {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function () {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}","import {\n    schemeCategory10,\n    schemeAccent,\n    schemeDark2,\n    schemePaired,\n    schemePastel1,\n    schemePastel2,\n    schemeSet1,\n    schemeSet2,\n    schemeSet3,\n} from 'd3-scale-chromatic'\n\nexport const categoricalColorSchemes = {\n    nivo: ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'],\n    category10: schemeCategory10,\n    accent: schemeAccent,\n    dark2: schemeDark2,\n    paired: schemePaired,\n    pastel1: schemePastel1,\n    pastel2: schemePastel2,\n    set1: schemeSet1,\n    set2: schemeSet2,\n    set3: schemeSet3,\n}\n\nexport type CategoricalColorSchemeId = keyof typeof categoricalColorSchemes\n\nexport const categoricalColorSchemeIds = Object.keys(\n    categoricalColorSchemes\n) as CategoricalColorSchemeId[]\n","import {\n    schemeBrBG,\n    interpolateBrBG,\n    schemePRGn,\n    interpolatePRGn,\n    schemePiYG,\n    interpolatePiYG,\n    schemePuOr,\n    interpolatePuOr,\n    schemeRdBu,\n    interpolateRdBu,\n    schemeRdGy,\n    interpolateRdGy,\n    schemeRdYlBu,\n    interpolateRdYlBu,\n    schemeRdYlGn,\n    interpolateRdYlGn,\n    schemeSpectral,\n    interpolateSpectral,\n} from 'd3-scale-chromatic'\n\n// Diverging color schemes support a size k ranging from 3 to 11\nexport const divergingColorSchemes = {\n    brown_blueGreen: schemeBrBG,\n    purpleRed_green: schemePRGn,\n    pink_yellowGreen: schemePiYG,\n    purple_orange: schemePuOr,\n    red_blue: schemeRdBu,\n    red_grey: schemeRdGy,\n    red_yellow_blue: schemeRdYlBu,\n    red_yellow_green: schemeRdYlGn,\n    spectral: schemeSpectral,\n}\n\nexport type DivergingColorSchemeId = keyof typeof divergingColorSchemes\n\nexport const divergingColorSchemeIds = Object.keys(\n    divergingColorSchemes\n) as DivergingColorSchemeId[]\n\nexport const divergingColorInterpolators = {\n    brown_blueGreen: interpolateBrBG,\n    purpleRed_green: interpolatePRGn,\n    pink_yellowGreen: interpolatePiYG,\n    purple_orange: interpolatePuOr,\n    red_blue: interpolateRdBu,\n    red_grey: interpolateRdGy,\n    red_yellow_blue: interpolateRdYlBu,\n    red_yellow_green: interpolateRdYlGn,\n    spectral: interpolateSpectral,\n}\n\nexport type DivergingColorInterpolatorId = keyof typeof divergingColorInterpolators\n","import {\n    // single hue\n    schemeBlues,\n    interpolateBlues,\n    schemeGreens,\n    interpolateGreens,\n    schemeGreys,\n    interpolateGreys,\n    schemeOranges,\n    interpolateOranges,\n    schemePurples,\n    interpolatePurples,\n    schemeReds,\n    interpolateReds,\n    // multi hue\n    schemeBuGn,\n    interpolateBuGn,\n    schemeBuPu,\n    interpolateBuPu,\n    schemeGnBu,\n    interpolateGnBu,\n    schemeOrRd,\n    interpolateOrRd,\n    schemePuBuGn,\n    interpolatePuBuGn,\n    schemePuBu,\n    interpolatePuBu,\n    schemePuRd,\n    interpolatePuRd,\n    schemeRdPu,\n    interpolateRdPu,\n    schemeYlGnBu,\n    interpolateYlGnBu,\n    schemeYlGn,\n    interpolateYlGn,\n    schemeYlOrBr,\n    interpolateYlOrBr,\n    schemeYlOrRd,\n    interpolateYlOrRd,\n    interpolateTurbo,\n    interpolateViridis,\n    interpolateInferno,\n    interpolateMagma,\n    interpolatePlasma,\n    interpolateCividis,\n    interpolateWarm,\n    interpolateCool,\n    interpolateCubehelixDefault,\n} from 'd3-scale-chromatic'\n\n// Sequential, single-hue color schemes support a size k ranging from 3 to 9\n// Sequential, multi-hue color schemes support a size k ranging from 3 to 9\nexport const sequentialColorSchemes = {\n    // single hue\n    blues: schemeBlues,\n    greens: schemeGreens,\n    greys: schemeGreys,\n    oranges: schemeOranges,\n    purples: schemePurples,\n    reds: schemeReds,\n    // multi hue\n    blue_green: schemeBuGn,\n    blue_purple: schemeBuPu,\n    green_blue: schemeGnBu,\n    orange_red: schemeOrRd,\n    purple_blue_green: schemePuBuGn,\n    purple_blue: schemePuBu,\n    purple_red: schemePuRd,\n    red_purple: schemeRdPu,\n    yellow_green_blue: schemeYlGnBu,\n    yellow_green: schemeYlGn,\n    yellow_orange_brown: schemeYlOrBr,\n    yellow_orange_red: schemeYlOrRd,\n}\n\nexport type SequentialColorSchemeId = keyof typeof sequentialColorSchemes\n\nexport const sequentialColorSchemeIds = Object.keys(\n    sequentialColorSchemes\n) as SequentialColorSchemeId[]\n\nexport const sequentialColorInterpolators = {\n    // single hue\n    blues: interpolateBlues,\n    greens: interpolateGreens,\n    greys: interpolateGreys,\n    oranges: interpolateOranges,\n    purples: interpolatePurples,\n    reds: interpolateReds,\n    // multi hue\n    turbo: interpolateTurbo,\n    viridis: interpolateViridis,\n    inferno: interpolateInferno,\n    magma: interpolateMagma,\n    plasma: interpolatePlasma,\n    cividis: interpolateCividis,\n    warm: interpolateWarm,\n    cool: interpolateCool,\n    cubehelixDefault: interpolateCubehelixDefault,\n    blue_green: interpolateBuGn,\n    blue_purple: interpolateBuPu,\n    green_blue: interpolateGnBu,\n    orange_red: interpolateOrRd,\n    purple_blue_green: interpolatePuBuGn,\n    purple_blue: interpolatePuBu,\n    purple_red: interpolatePuRd,\n    red_purple: interpolateRdPu,\n    yellow_green_blue: interpolateYlGnBu,\n    yellow_green: interpolateYlGn,\n    yellow_orange_brown: interpolateYlOrBr,\n    yellow_orange_red: interpolateYlOrRd,\n}\n\nexport type SequentialColorInterpolatorId = keyof typeof sequentialColorInterpolators\n","export default function (t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\" + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \" + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \" + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66))))))) + \")\";\n}","export default function (t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\" + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \" + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \" + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67))))))) + \")\";\n}","import {\n    categoricalColorSchemes,\n    categoricalColorSchemeIds,\n    CategoricalColorSchemeId,\n} from './categorical'\nimport { divergingColorSchemes, divergingColorSchemeIds, DivergingColorSchemeId } from './diverging'\nimport {\n    sequentialColorSchemes,\n    sequentialColorSchemeIds,\n    SequentialColorSchemeId,\n} from './sequential'\n\nexport const colorSchemes = {\n    ...categoricalColorSchemes,\n    ...divergingColorSchemes,\n    ...sequentialColorSchemes,\n}\n\nexport type ColorSchemeId =\n    | CategoricalColorSchemeId\n    | DivergingColorSchemeId\n    | SequentialColorSchemeId\n\nexport const colorSchemeIds = Object.keys(colorSchemes) as ColorSchemeId[]\n\nexport const isCategoricalColorScheme = (\n    scheme: ColorSchemeId\n): scheme is CategoricalColorSchemeId =>\n    categoricalColorSchemeIds.includes(scheme as CategoricalColorSchemeId)\n\nexport const isDivergingColorScheme = (scheme: ColorSchemeId): scheme is DivergingColorSchemeId =>\n    divergingColorSchemeIds.includes(scheme as DivergingColorSchemeId)\n\nexport const isSequentialColorScheme = (scheme: ColorSchemeId): scheme is SequentialColorSchemeId =>\n    sequentialColorSchemeIds.includes(scheme as SequentialColorSchemeId)\n","import { interpolateRainbow, interpolateSinebow } from 'd3-scale-chromatic'\n\nexport const cyclicalColorInterpolators = {\n    rainbow: interpolateRainbow,\n    sinebow: interpolateSinebow,\n}\n\nexport type CyclicalColorInterpolatorId = keyof typeof cyclicalColorInterpolators\n","import { divergingColorInterpolators, DivergingColorInterpolatorId } from './diverging'\nimport { sequentialColorInterpolators, SequentialColorInterpolatorId } from './sequential'\nimport { cyclicalColorInterpolators, CyclicalColorInterpolatorId } from './cyclical'\n\nexport const colorInterpolators = {\n    ...divergingColorInterpolators,\n    ...sequentialColorInterpolators,\n    ...cyclicalColorInterpolators,\n}\n\nexport type ColorInterpolatorId =\n    | DivergingColorInterpolatorId\n    | SequentialColorInterpolatorId\n    | CyclicalColorInterpolatorId\n\nexport const colorInterpolatorIds = Object.keys(colorInterpolators) as ColorInterpolatorId[]\n","import { useMemo } from 'react'\nimport { get, isPlainObject } from 'lodash'\nimport { rgb, RGBColor } from 'd3-color'\nimport { Theme } from '@nivo/core'\n\nexport type ColorModifierBrightness = ['brighter', number]\n\nexport type ColorModifierDarkness = ['darker', number]\n\nexport type ColorModifierOpacity = ['opacity', number]\n\nexport type ColorModifier = ColorModifierBrightness | ColorModifierDarkness | ColorModifierOpacity\n\nexport type ColorModifierFunction = (color: RGBColor) => RGBColor\n\nexport type InheritedColorConfigStaticColor = string\n\nexport type InheritedColorConfigCustomFunction<Datum> = (d: Datum, ...drest: Datum[]) => string\n\nexport interface InheritedColorConfigFromTheme {\n    theme: string\n}\n\nexport interface InheritedColorConfigFromContext {\n    from: string\n    modifiers?: ColorModifier[]\n}\n\nexport type InheritedColorConfig<Datum> =\n    | InheritedColorConfigStaticColor\n    | InheritedColorConfigCustomFunction<Datum>\n    | InheritedColorConfigFromTheme\n    | InheritedColorConfigFromContext\n\nconst isInheritedColorConfigFromTheme = <Datum>(\n    config: InheritedColorConfig<Datum>\n): config is InheritedColorConfigFromTheme => {\n    return (config as InheritedColorConfigFromTheme).theme !== undefined\n}\n\nconst isInheritedColorConfigFromContext = <Datum>(\n    config: InheritedColorConfig<Datum>\n): config is InheritedColorConfigFromContext => {\n    return (config as InheritedColorConfigFromContext).from !== undefined\n}\n\n/**\n * Create a color generator for items which\n * might inherit from parent context,\n * for example labels, outlines…\n *\n * Support the following strategies:\n * - custom function\n * - color from theme\n * - color from parent, with optional color modifiers\n * - static color\n */\nexport const getInheritedColorGenerator = <Datum = any>(\n    config: InheritedColorConfig<Datum>,\n    theme?: Theme\n) => {\n    // user provided function\n    if (typeof config === 'function') {\n        return config\n    }\n\n    if (isPlainObject(config)) {\n        // use color from theme\n        if (isInheritedColorConfigFromTheme(config)) {\n            if (theme === undefined) {\n                throw new Error(`Unable to use color from theme as no theme was provided`)\n            }\n\n            const themeColor = get(theme, config.theme)\n            if (themeColor === undefined) {\n                throw new Error(`Color from theme is undefined at path: '${config.theme}'`)\n            }\n\n            return () => themeColor\n        }\n\n        // use color from parent with optional color modifiers\n        if (isInheritedColorConfigFromContext(config)) {\n            const getColor = (d: Datum) => get(d, config.from)\n\n            if (Array.isArray(config.modifiers)) {\n                const modifiers: ColorModifierFunction[] = []\n                for (const modifier of config.modifiers) {\n                    const [modifierType, amount] = modifier\n                    if (modifierType === 'brighter') {\n                        modifiers.push(color => color.brighter(amount))\n                    } else if (modifierType === 'darker') {\n                        modifiers.push(color => color.darker(amount))\n                    } else if (modifierType === 'opacity') {\n                        modifiers.push(color => {\n                            color.opacity = amount\n\n                            return color\n                        })\n                    } else {\n                        throw new Error(\n                            `Invalid color modifier: '${modifierType}', must be one of: 'brighter', 'darker', 'opacity'`\n                        )\n                    }\n                }\n\n                if (modifiers.length === 0) return getColor\n\n                return (datum: Datum) =>\n                    modifiers\n                        .reduce((color, modify) => modify(color), rgb(getColor(datum)))\n                        .toString()\n            }\n\n            // no modifier\n            return getColor\n        }\n\n        throw new Error(\n            `Invalid color spec, you should either specify 'theme' or 'from' when using a config object`\n        )\n    }\n\n    // use provided color statically\n    return () => config as string\n}\n\nexport const useInheritedColor = <Datum = any>(\n    config: InheritedColorConfig<Datum>,\n    theme?: Theme\n) => useMemo(() => getInheritedColorGenerator<Datum>(config, theme), [config, theme])\n","import PropTypes from 'prop-types'\nimport { colorSchemeIds } from './schemes'\n\nexport const ordinalColorsPropType = PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.shape({\n        scheme: PropTypes.oneOf(colorSchemeIds).isRequired,\n        size: PropTypes.number,\n    }),\n    PropTypes.shape({\n        datum: PropTypes.string.isRequired,\n    }),\n    PropTypes.string,\n])\n\nexport const inheritedColorPropType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({\n        theme: PropTypes.string.isRequired,\n    }),\n    PropTypes.shape({\n        from: PropTypes.string.isRequired,\n        modifiers: PropTypes.arrayOf(PropTypes.array),\n    }),\n])\n","import { useMemo } from 'react'\nimport { scaleSequential } from 'd3-scale'\nimport { colorInterpolators, ColorInterpolatorId } from '../schemes'\n\nexport interface SequentialColorScaleBaseConfig {\n    type: 'sequential'\n    minValue?: number\n    maxValue?: number\n}\n\nexport interface SequentialColorScaleSchemeConfig extends SequentialColorScaleBaseConfig {\n    scheme?: ColorInterpolatorId\n}\n\nexport interface SequentialColorScaleColorsConfig extends SequentialColorScaleBaseConfig {\n    colors: [string, string]\n}\n\nexport interface SequentialColorScaleInterpolatorConfig extends SequentialColorScaleBaseConfig {\n    interpolator: (t: number) => string\n}\n\nexport type SequentialColorScaleConfig =\n    | SequentialColorScaleSchemeConfig\n    | SequentialColorScaleColorsConfig\n    | SequentialColorScaleInterpolatorConfig\n\nexport interface SequentialColorScaleValues {\n    min: number\n    max: number\n}\n\nexport const sequentialColorScaleDefaults: {\n    scheme: ColorInterpolatorId\n} = {\n    scheme: 'turbo',\n}\n\nexport const getSequentialColorScale = (\n    config: SequentialColorScaleConfig,\n    values: SequentialColorScaleValues\n) => {\n    const { minValue, maxValue } = config\n    const min = minValue !== undefined ? minValue : values.min\n    const max = maxValue !== undefined ? maxValue : values.max\n\n    const colorScale = scaleSequential<string>().domain([min, max]).clamp(true)\n    if ('colors' in config) {\n        colorScale.range(config.colors)\n    } else if ('interpolator' in config) {\n        colorScale.interpolator(config.interpolator)\n    } else {\n        const scheme = config.scheme ?? sequentialColorScaleDefaults.scheme\n        colorScale.interpolator(colorInterpolators[scheme])\n    }\n\n    return colorScale\n}\n\nexport const useSequentialColorScale = (\n    config: SequentialColorScaleConfig,\n    values: SequentialColorScaleValues\n) => useMemo(() => getSequentialColorScale(config, values), [config, values])\n","import { useMemo } from 'react'\nimport { scaleDiverging } from 'd3-scale'\nimport { colorInterpolators, ColorInterpolatorId } from '../schemes'\n\ninterface DivergingColorScaleBaseConfig {\n    type: 'diverging'\n    minValue?: number\n    maxValue?: number\n    divergeAt?: number\n}\n\nexport interface DivergingColorScaleSchemeConfig extends DivergingColorScaleBaseConfig {\n    scheme?: ColorInterpolatorId\n}\n\nexport interface DivergingColorScaleColorsConfig extends DivergingColorScaleBaseConfig {\n    colors: [string, string, string]\n}\n\nexport interface DivergingColorScaleInterpolatorConfig extends DivergingColorScaleBaseConfig {\n    interpolator: (t: number) => string\n}\n\nexport type DivergingColorScaleConfig =\n    | DivergingColorScaleSchemeConfig\n    | DivergingColorScaleColorsConfig\n    | DivergingColorScaleInterpolatorConfig\n\nexport interface DivergingColorScaleValues {\n    min: number\n    max: number\n}\n\nexport const divergingColorScaleDefaults: {\n    scheme: ColorInterpolatorId\n    divergeAt: number\n} = {\n    scheme: 'red_yellow_blue',\n    divergeAt: 0.5,\n}\n\nexport const getDivergingColorScale = (\n    config: DivergingColorScaleConfig,\n    values: DivergingColorScaleValues\n) => {\n    const { minValue, maxValue } = config\n    const min = minValue !== undefined ? minValue : values.min\n    const max = maxValue !== undefined ? maxValue : values.max\n    const domain = [min, min + (max - min) / 2, max]\n\n    const divergeAt = config.divergeAt ?? divergingColorScaleDefaults.divergeAt\n    const offset = 0.5 - divergeAt\n\n    const colorScale = scaleDiverging<string>().domain(domain).clamp(true)\n    let interpolator = (t: number) => String(t) as string\n    if ('colors' in config) {\n        interpolator = scaleDiverging<string>()\n            .domain(domain.map(x => x - offset * (max - min)))\n            .range(config.colors)\n            .interpolator()\n    } else if ('interpolator' in config) {\n        interpolator = config.interpolator\n    } else {\n        const scheme = config.scheme ?? divergingColorScaleDefaults.scheme\n        interpolator = colorInterpolators[scheme]\n    }\n    const offsetInterpolator = (t: number) => interpolator(t + offset)\n    return colorScale.interpolator(offsetInterpolator)\n}\n\nexport const useDivergingColorScale = (\n    config: DivergingColorScaleConfig,\n    values: DivergingColorScaleValues\n) => useMemo(() => getDivergingColorScale(config, values), [config, values])\n","import { useMemo } from 'react'\nimport { scaleQuantize } from 'd3-scale'\nimport { colorInterpolators, ColorInterpolatorId } from '../schemes'\n\n// colors from a scheme\nexport interface QuantizeColorScaleSchemeConfig {\n    type: 'quantize'\n    domain?: [number, number]\n    scheme?: ColorInterpolatorId\n    steps?: number\n}\n\n// explicit colors\nexport interface QuantizeColorScaleColorsConfig {\n    type: 'quantize'\n    domain?: [number, number]\n    colors: string[]\n}\n\nexport type QuantizeColorScaleConfig =\n    | QuantizeColorScaleSchemeConfig\n    | QuantizeColorScaleColorsConfig\n\nexport interface QuantizeColorScaleValues {\n    min: number\n    max: number\n}\n\nexport const quantizeColorScaleDefaults: {\n    scheme: ColorInterpolatorId\n    steps: NonNullable<QuantizeColorScaleSchemeConfig['steps']>\n} = {\n    scheme: 'turbo',\n    steps: 7,\n}\n\nexport const getQuantizeColorScale = (\n    config: QuantizeColorScaleConfig,\n    values: QuantizeColorScaleValues\n) => {\n    const colorScale = scaleQuantize<string>()\n        .domain(config.domain || [values.min, values.max])\n        .nice()\n\n    if ('colors' in config) {\n        colorScale.range(config.colors)\n    } else {\n        const scheme = config.scheme || quantizeColorScaleDefaults.scheme\n        const steps = config.steps === undefined ? quantizeColorScaleDefaults.steps : config.steps\n        const interpolator = colorInterpolators[scheme]\n        const colors = Array.from({ length: steps }).map((_, step) =>\n            interpolator(step * (1 / (steps - 1)))\n        )\n\n        colorScale.range(colors)\n    }\n\n    return colorScale\n}\n\nexport const useQuantizeColorScale = (\n    config: QuantizeColorScaleConfig,\n    values: QuantizeColorScaleValues\n) => useMemo(() => getQuantizeColorScale(config, values), [config, values])\n","import { useMemo } from 'react'\nimport { ScaleDiverging, ScaleQuantize, ScaleSequential, scaleLinear } from 'd3-scale'\nimport {\n    SequentialColorScaleConfig,\n    SequentialColorScaleValues,\n    getSequentialColorScale,\n} from './sequentialColorScale'\nimport {\n    DivergingColorScaleConfig,\n    DivergingColorScaleValues,\n    getDivergingColorScale,\n} from './divergingColorScale'\nimport {\n    QuantizeColorScaleConfig,\n    QuantizeColorScaleValues,\n    getQuantizeColorScale,\n} from './quantizeColorScale'\n\nexport type ContinuousColorScaleConfig =\n    | SequentialColorScaleConfig\n    | DivergingColorScaleConfig\n    | QuantizeColorScaleConfig\n\nexport type ContinuousColorScaleValues =\n    | SequentialColorScaleValues\n    | DivergingColorScaleValues\n    | QuantizeColorScaleValues\n\nconst isSequentialColorScaleConfig = (\n    config: ContinuousColorScaleConfig\n): config is SequentialColorScaleConfig => config.type === 'sequential'\n\nconst isDivergingColorScaleConfig = (\n    config: ContinuousColorScaleConfig\n): config is DivergingColorScaleConfig => config.type === 'diverging'\n\nconst isQuantizeColorScaleConfig = (\n    config: ContinuousColorScaleConfig\n): config is QuantizeColorScaleConfig => config.type === 'quantize'\n\nexport const getContinuousColorScale = <Config extends ContinuousColorScaleConfig>(\n    config: Config,\n    values: ContinuousColorScaleValues\n) => {\n    if (isSequentialColorScaleConfig(config)) {\n        return getSequentialColorScale(config, values)\n    }\n\n    if (isDivergingColorScaleConfig(config)) {\n        return getDivergingColorScale(config, values)\n    }\n\n    if (isQuantizeColorScaleConfig(config)) {\n        return getQuantizeColorScale(config, values)\n    }\n\n    throw new Error('Invalid continuous color scale config')\n}\n\nexport const useContinuousColorScale = (\n    config: ContinuousColorScaleConfig,\n    values: ContinuousColorScaleValues\n) => useMemo(() => getContinuousColorScale(config, values), [config, values])\n\nexport const computeContinuousColorScaleColorStops = (\n    scale: ScaleSequential<string> | ScaleDiverging<string> | ScaleQuantize<string>,\n    steps = 16\n) => {\n    const domain = scale.domain()\n\n    // quantize\n    if ('thresholds' in scale) {\n        const stops: {\n            key: string\n            offset: number\n            stopColor: string\n        }[] = []\n\n        const normalizedScale = scaleLinear().domain(domain).range([0, 1])\n        scale.range().forEach((color, index) => {\n            const [start, end] = scale.invertExtent(color)\n\n            stops.push({\n                key: `${index}.0`,\n                offset: normalizedScale(start),\n                stopColor: color,\n            })\n            stops.push({\n                key: `${index}.1`,\n                offset: normalizedScale(end),\n                stopColor: color,\n            })\n        })\n\n        return stops\n    }\n\n    const colorStopsScale = scale.copy()\n    if (domain.length === 2) {\n        // sequential\n        colorStopsScale.domain([0, 1])\n    } else if (domain.length === 3) {\n        // diverging\n        colorStopsScale.domain([0, 0.5, 1])\n    }\n\n    return ((colorStopsScale as any).ticks(steps) as number[]).map((value: number) => ({\n        key: `${value}`,\n        offset: value,\n        stopColor: `${colorStopsScale(value)}`,\n    }))\n}\n","import { useMemo } from 'react'\nimport { get, isPlainObject } from 'lodash'\nimport { scaleOrdinal } from 'd3-scale'\nimport {\n    ColorSchemeId,\n    colorSchemes,\n    isCategoricalColorScheme,\n    isSequentialColorScheme,\n    isDivergingColorScheme,\n} from '../schemes'\n\n/**\n * Static color.\n */\nexport type OrdinalColorScaleConfigStaticColor = string\n\n/**\n * User defined function, receiving the current datum.\n */\nexport type OrdinalColorScaleConfigCustomFunction<Datum> = (d: Datum) => string\n\n/**\n * Pre-defined color scheme.\n */\nexport interface OrdinalColorScaleConfigScheme {\n    scheme: ColorSchemeId\n    // size is useful for diverging & sequential colors,\n    // as they are array of array, whereas categorical colors\n    // are simple arrays, if the size isn't specified,\n    // the bigger array will be selected, this means the 11th\n    // for diverging colors and 9th for sequential ones.\n    size?: number\n}\n\n/**\n * User defined colors.\n */\nexport type OrdinalColorScaleConfigCustomColors = string[]\n\n/**\n * Get color from datum.\n */\nexport interface OrdinalColorScaleConfigDatumProperty {\n    // path to the color property\n    datum: string\n}\n\nexport type OrdinalColorScaleConfig<Datum = any> =\n    | OrdinalColorScaleConfigStaticColor\n    | OrdinalColorScaleConfigCustomFunction<Datum>\n    | OrdinalColorScaleConfigScheme\n    | OrdinalColorScaleConfigCustomColors\n    | OrdinalColorScaleConfigDatumProperty\n\nconst isOrdinalColorScaleConfigScheme = <Datum>(\n    config: OrdinalColorScaleConfig<Datum>\n): config is OrdinalColorScaleConfigScheme => {\n    return (config as OrdinalColorScaleConfigScheme).scheme !== undefined\n}\n\nconst isOrdinalColorScaleConfigDatumProperty = <Datum>(\n    config: OrdinalColorScaleConfig<Datum>\n): config is OrdinalColorScaleConfigDatumProperty => {\n    return (config as OrdinalColorScaleConfigDatumProperty).datum !== undefined\n}\n\nexport type DatumIdentityAccessor<Datum> = (datum: Datum) => string | number\n\nexport type OrdinalColorScale<Datum> = (d: Datum) => string\n\n/**\n * Compute an ordinal color scale\n */\nexport const getOrdinalColorScale = <Datum = any>(\n    config: OrdinalColorScaleConfig<Datum>,\n    identity?: string | DatumIdentityAccessor<Datum>\n): OrdinalColorScale<Datum> => {\n    // user defined function\n    if (typeof config === 'function') {\n        return config\n    }\n\n    // compute accessor to the datum identity\n    const getIdentity =\n        typeof identity === 'function' ? identity : (datum: Datum) => get(datum, identity as string)\n\n    // user defined color array\n    if (Array.isArray(config)) {\n        const scale = scaleOrdinal(config)\n        const generator = (datum: Datum) => scale(getIdentity(datum))\n        generator.scale = scale\n\n        return generator as OrdinalColorScale<Datum>\n    }\n\n    if (isPlainObject(config)) {\n        // use color from current datum\n        if (isOrdinalColorScaleConfigDatumProperty(config)) {\n            return (datum: Datum) => get(datum, config.datum)\n        }\n\n        // ordinal scale from predefined scheme\n        if (isOrdinalColorScaleConfigScheme(config)) {\n            // categorical color scheme\n            if (isCategoricalColorScheme(config.scheme)) {\n                const scale = scaleOrdinal(colorSchemes[config.scheme])\n                const generator = (datum: Datum) => scale(getIdentity(datum))\n                generator.scale = scale\n\n                return generator as OrdinalColorScale<Datum>\n            }\n\n            // Diverging color schemes support a size k ranging from 3 to 11\n            if (isDivergingColorScheme(config.scheme)) {\n                if (config.size !== undefined && (config.size < 3 || config.size > 11)) {\n                    throw new Error(\n                        `Invalid size '${config.size}' for diverging color scheme '${config.scheme}', must be between 3~11`\n                    )\n                }\n\n                const scale = scaleOrdinal(colorSchemes[config.scheme][config.size || 11])\n                const generator = (d: Datum) => scale(getIdentity(d))\n                generator.scale = scale\n\n                return generator as OrdinalColorScale<Datum>\n            }\n\n            // Sequential, single-hue color schemes support a size k ranging from 3 to 9.\n            // Sequential, multi-hue color schemes support a size k ranging from 3 to 9.\n            if (isSequentialColorScheme(config.scheme)) {\n                if (config.size !== undefined && (config.size < 3 || config.size > 9)) {\n                    throw new Error(\n                        `Invalid size '${config.size}' for sequential color scheme '${config.scheme}', must be between 3~9`\n                    )\n                }\n\n                const scale = scaleOrdinal(colorSchemes[config.scheme][config.size || 9])\n                const generator = (d: Datum) => scale(getIdentity(d))\n                generator.scale = scale\n\n                return generator as OrdinalColorScale<Datum>\n            }\n        }\n\n        throw new Error(\n            `Invalid colors, when using an object, you should either pass a 'datum' or a 'scheme' property`\n        )\n    }\n\n    // static color\n    return () => config as string\n}\n\nexport const useOrdinalColorScale = <Datum = any>(\n    config: OrdinalColorScaleConfig<Datum>,\n    identity: string | DatumIdentityAccessor<Datum>\n) => useMemo(() => getOrdinalColorScale<Datum>(config, identity), [config, identity])\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n"],"names":["piecewise","interpolate","values","undefined","value","i","n","length","v","I","Array","t","Math","max","min","floor","transformer","t0","t1","t2","k10","k21","transform","unknown","x0","x1","x2","s","interpolator","clamp","scale","x","isNaN","range","_","_ref3","_ref4","r0","r1","r2","arguments","domain","_ref","_ref2","rangeRound","diverging","linear","copy","init","categoricalColorSchemes","nivo","category10","schemeCategory10","accent","schemeAccent","dark2","schemeDark2","paired","schemePaired","pastel1","schemePastel1","pastel2","schemePastel2","set1","schemeSet1","set2","schemeSet2","set3","schemeSet3","categoricalColorSchemeIds","Object","keys","divergingColorSchemes","brown_blueGreen","schemeBrBG","purpleRed_green","schemePRGn","pink_yellowGreen","schemePiYG","purple_orange","schemePuOr","red_blue","schemeRdBu","red_grey","schemeRdGy","red_yellow_blue","schemeRdYlBu","red_yellow_green","schemeRdYlGn","spectral","schemeSpectral","divergingColorSchemeIds","divergingColorInterpolators","interpolateBrBG","interpolatePRGn","interpolatePiYG","interpolatePuOr","interpolateRdBu","interpolateRdGy","interpolateRdYlBu","interpolateRdYlGn","interpolateSpectral","sequentialColorSchemes","blues","schemeBlues","greens","schemeGreens","greys","schemeGreys","oranges","schemeOranges","purples","schemePurples","reds","schemeReds","blue_green","schemeBuGn","blue_purple","schemeBuPu","green_blue","schemeGnBu","orange_red","schemeOrRd","purple_blue_green","schemePuBuGn","purple_blue","schemePuBu","purple_red","schemePuRd","red_purple","schemeRdPu","yellow_green_blue","schemeYlGnBu","yellow_green","schemeYlGn","yellow_orange_brown","schemeYlOrBr","yellow_orange_red","schemeYlOrRd","sequentialColorSchemeIds","sequentialColorInterpolators","interpolateBlues","interpolateGreens","interpolateGreys","interpolateOranges","interpolatePurples","interpolateReds","turbo","round","viridis","interpolateViridis","inferno","interpolateInferno","magma","interpolateMagma","plasma","interpolatePlasma","cividis","warm","interpolateWarm","cool","interpolateCool","cubehelixDefault","interpolateCubehelixDefault","interpolateBuGn","interpolateBuPu","interpolateGnBu","interpolateOrRd","interpolatePuBuGn","interpolatePuBu","interpolatePuRd","interpolateRdPu","interpolateYlGnBu","interpolateYlGn","interpolateYlOrBr","interpolateYlOrRd","colorSchemes","colorSchemeIds","isCategoricalColorScheme","scheme","includes","isDivergingColorScheme","isSequentialColorScheme","interpolateSinebow","rainbow","interpolateRainbow","sinebow","colorInterpolatorIds","colorInterpolators","getInheritedColorGenerator","config","theme","_isPlainObject","Error","themeColor","_get","from","getColor","d","isArray","modifiers","modifier","modifierType","amount","push","color","brighter","darker","opacity","datum","reduce","modify","rgb","toString","useInheritedColor","useMemo","ordinalColorsPropType","PropTypes","isRequired","size","inheritedColorPropType","sequentialColorScaleDefaults","getSequentialColorScale","minValue","maxValue","colorScale","scaleSequential","colors","divergingColorScaleDefaults","divergeAt","getDivergingColorScale","offset","scaleDiverging","String","map","quantizeColorScaleDefaults","steps","getQuantizeColorScale","scaleQuantize","nice","step","getContinuousColorScale","type","computeContinuousColorScaleColorStops","stops","normalizedScale","scaleLinear","forEach","index","invertExtent","start","end","key","stopColor","colorStopsScale","ticks","getOrdinalColorScale","identity","getIdentity","scaleOrdinal","generator","useOrdinalColorScale","module","exports","array","iteratee","copyObject","object","source","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","stack","result","isDeep","isFlat","isFull","isArr","tag","isFunc","stacked","get","set","subValue","add","props","isObjectLike","castPath","last","parent","toKey","path","cloneArrayBuffer","dataView","buffer","constructor","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","prototype","symbolValueOf","valueOf","symbol","call","getSymbols","getSymbolsIn","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","getOwnPropertySymbols","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseGet","baseSlice","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","arrayMap","baseUnset","customOmitClone","flatRest","omit","paths","CLONE_DEEP_FLAG"],"sourceRoot":""}