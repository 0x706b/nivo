{"version":3,"file":"1987197395c0221146cd76acfbb1340d93bd11e3-9a819c2ad46e1d9053b7.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-force/src/center.js","webpack://nivo-website/../node_modules/d3-quadtree/src/add.js","webpack://nivo-website/../node_modules/d3-quadtree/src/quad.js","webpack://nivo-website/../node_modules/d3-quadtree/src/x.js","webpack://nivo-website/../node_modules/d3-quadtree/src/y.js","webpack://nivo-website/../node_modules/d3-quadtree/src/quadtree.js","webpack://nivo-website/../node_modules/d3-force/src/constant.js","webpack://nivo-website/../node_modules/d3-force/src/jiggle.js","webpack://nivo-website/../node_modules/d3-force/src/collide.js","webpack://nivo-website/../node_modules/d3-force/src/link.js","webpack://nivo-website/../node_modules/d3-quadtree/src/cover.js","webpack://nivo-website/../node_modules/d3-quadtree/src/data.js","webpack://nivo-website/../node_modules/d3-quadtree/src/extent.js","webpack://nivo-website/../node_modules/d3-quadtree/src/find.js","webpack://nivo-website/../node_modules/d3-quadtree/src/remove.js","webpack://nivo-website/../node_modules/d3-quadtree/src/root.js","webpack://nivo-website/../node_modules/d3-quadtree/src/size.js","webpack://nivo-website/../node_modules/d3-quadtree/src/visit.js","webpack://nivo-website/../node_modules/d3-quadtree/src/visitAfter.js","webpack://nivo-website/../node_modules/d3-dispatch/src/dispatch.js","webpack://nivo-website/../node_modules/d3-timer/src/timer.js","webpack://nivo-website/../node_modules/d3-force/src/simulation.js","webpack://nivo-website/../node_modules/d3-force/src/manyBody.js","webpack://nivo-website/../node_modules/d3-force/src/x.js","webpack://nivo-website/../node_modules/d3-force/src/y.js"],"sourcesContent":["export default function (x, y) {\n  var nodes;\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}","export default function (d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {\n    data: d\n  },\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  } // Is the new point is exactly coincident with the existing point?\n\n\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d,\n      i,\n      n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity; // Compute the points and their extent.\n\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  } // If there were no (valid) points, abort.\n\n\n  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.\n\n  this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}","export default function (node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}","export function defaultX(d) {\n  return d[0];\n}\nexport default function (_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}","export function defaultY(d) {\n  return d[1];\n}\nexport default function (_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}","import tree_add, { addAll as tree_addAll } from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, { removeAll as tree_removeAll } from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, { defaultX } from \"./x\";\nimport tree_y, { defaultY } from \"./y\";\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {\n    data: leaf.data\n  },\n      next = copy;\n\n  while (leaf = leaf.next) {\n    next = next.next = {\n      data: leaf.data\n    };\n  }\n\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function () {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n  if (!node) return copy;\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n  nodes = [{\n    source: node,\n    target: copy._root = new Array(4)\n  }];\n\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({\n          source: child,\n          target: node.target[i] = new Array(4)\n        });else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function () {\n  return (Math.random() - 0.5) * 1e-6;\n}","import { quadtree } from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function (radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i,\n        n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data,\n          rj = quad.r,\n          r = ri + rj;\n\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n\n        return;\n      }\n\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    radii = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function (links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map(function (d, i) {\n      return [id(d, i, nodes), d];\n    })),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function (_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function (_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function (_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}","export default function (x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1; // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  } // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | x < x0;\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n\n      switch (i) {\n        case 0:\n          x1 = x0 + z, y1 = y0 + z;\n          break;\n\n        case 1:\n          x0 = x1 - z, y1 = y0 + z;\n          break;\n\n        case 2:\n          x1 = x0 + z, y0 = y1 - z;\n          break;\n\n        case 3:\n          x0 = x1 - z, y0 = y1 - z;\n          break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}","export default function () {\n  var data = [];\n  this.visit(function (node) {\n    if (!node.length) do {\n      data.push(node.data);\n    } while (node = node.next);\n  });\n  return data;\n}","export default function (_) {\n  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}","import Quad from \"./quad\";\nexport default function (x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n      quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n      if (i = (y >= ym) << 1 | x >= xm) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    } // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}","export default function (d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return this; // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n  } // Find the point to remove.\n\n  while (node.data !== d) {\n    if (!(previous = node, node = node.next)) return this;\n  }\n\n  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n  if (!parent) return this._root = next, this; // Remove this leaf.\n\n  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n    if (retainer) retainer[j] = node;else this._root = node;\n  }\n\n  return this;\n}\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) {\n    this.remove(data[i]);\n  }\n\n  return this;\n}","export default function () {\n  return this._root;\n}","export default function () {\n  var size = 0;\n  this.visit(function (node) {\n    if (!node.length) do {\n      ++size;\n    } while (node = node.next);\n  });\n  return size;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      q,\n      node = this._root,\n      child,\n      x0,\n      y0,\n      x1,\n      y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n\n  return this;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      next = [],\n      q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    var node = q.node;\n\n    if (node.length) {\n      var child,\n          x0 = q.x0,\n          y0 = q.y0,\n          x1 = q.x1,\n          y1 = q.y1,\n          xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n\n    next.push(q);\n  }\n\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n\n  return this;\n}","var noop = {\n  value: function value() {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\nexport default dispatch;","var frame = 0,\n    // is an animation frame pending?\ntimeout = 0,\n    // is a timeout pending?\ninterval = 0,\n    // are any timers active?\npokeDelay = 1000,\n    // how frequently we check for clock skew\ntaskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n  setTimeout(f, 17);\n};\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call = this._time = this._next = null;\n}\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function restart(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function stop() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\nexport function timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n  var t = taskHead,\n      e;\n\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(),\n      delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0,\n      t1 = taskHead,\n      t2,\n      time = Infinity;\n\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}","import { dispatch } from \"d3-dispatch\";\nimport { timer } from \"d3-timer\";\nexport function x(d) {\n  return d.x;\n}\nexport function y(d) {\n  return d.y;\n}\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\nexport default function (_nodes) {\n  var simulation,\n      _alpha = 1,\n      _alphaMin = 0.001,\n      _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),\n      _alphaTarget = 0,\n      _velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (_nodes == null) _nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n\n    if (_alpha < _alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i,\n        n = _nodes.length,\n        node;\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      _alpha += (_alphaTarget - _alpha) * _alphaDecay;\n      forces.forEach(function (force) {\n        force(_alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = _nodes.length, node; i < n; ++i) {\n      node = _nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i),\n            angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(_nodes);\n    return force;\n  }\n\n  initializeNodes();\n  return simulation = {\n    tick: tick,\n    restart: function restart() {\n      return stepper.restart(step), simulation;\n    },\n    stop: function stop() {\n      return stepper.stop(), simulation;\n    },\n    nodes: function nodes(_) {\n      return arguments.length ? (_nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : _nodes;\n    },\n    alpha: function alpha(_) {\n      return arguments.length ? (_alpha = +_, simulation) : _alpha;\n    },\n    alphaMin: function alphaMin(_) {\n      return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;\n    },\n    alphaDecay: function alphaDecay(_) {\n      return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;\n    },\n    alphaTarget: function alphaTarget(_) {\n      return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;\n    },\n    velocityDecay: function velocityDecay(_) {\n      return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;\n    },\n    force: function force(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.delete(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n    find: function find(x, y, radius) {\n      var i = 0,\n          n = _nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n      if (radius == null) radius = Infinity;else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n    on: function on(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}","import { quadtree } from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport { x, y } from \"./simulation.js\";\nexport default function () {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i,\n        n = nodes.length,\n        tree = quadtree(nodes, x, y).visitAfter(accumulate);\n\n    for (alpha = _, i = 0; i < n; ++i) {\n      node = nodes[i], tree.visit(apply);\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    strengths = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n    }\n  }\n\n  function accumulate(quad) {\n    var strength = 0,\n        q,\n        c,\n        weight = 0,\n        x,\n        y,\n        i; // For internal nodes, accumulate forces from child quadrants.\n\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n\n      quad.x = x / weight;\n      quad.y = y / weight;\n    } // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n\n      do {\n        strength += strengths[q.data.index];\n      } while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n\n      return true;\n    } // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.\n\n\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do {\n      if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      }\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function (_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function (_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function (_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}","import constant from \"./constant.js\";\nexport default function (x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}","import constant from \"./constant.js\";\nexport default function (y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}"],"names":["x","y","nodes","force","i","node","n","length","sx","sy","initialize","_","arguments","tree","d","isNaN","parent","xm","ym","xp","yp","right","bottom","j","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","call","_y","next","Array","this","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","undefined","leaf_copy","copy","treeProto","prototype","Math","random","vx","vy","radius","radii","strength","iterations","xi","yi","ri","ri2","k","visitAfter","prepare","index","visit","apply","quad","rj","r","l","jiggle","sqrt","constant","nodeById","nodeId","get","Error","links","strengths","distances","count","bias","id","link","min","source","target","distance","alpha","b","m","Map","map","initializeStrength","initializeDistance","child","pop","push","add","cover","xz","yz","Infinity","floor","z","extent","find","x2","y2","q","x3","y3","quads","dx","dy","d2","remove","retainer","previous","removeAll","root","size","callback","noop","value","dispatch","t","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","slice","hasOwnProperty","type","c","set","concat","constructor","on","typename","T","that","args","taskHead","taskTail","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","_call","_time","_next","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","initialAngle","PI","_nodes","simulation","_alpha","_alphaMin","_alphaDecay","pow","_alphaTarget","_velocityDecay","forces","stepper","step","event","tick","forEach","fx","fy","initializeNodes","angle","cos","sin","initializeForce","alphaMin","alphaDecay","alphaTarget","velocityDecay","delete","closest","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta"],"sourceRoot":""}