{"version":3,"sources":["webpack:///../node_modules/lodash/_copySymbols.js","webpack:///../node_modules/lodash/_baseClone.js","webpack:///../node_modules/lodash/_initCloneArray.js","webpack:///../node_modules/lodash/_cloneDataView.js","webpack:///../node_modules/lodash/_cloneRegExp.js","webpack:///../node_modules/lodash/_parent.js","webpack:///../node_modules/lodash/_baseAssignIn.js","webpack:///../node_modules/lodash/_getSymbolsIn.js","webpack:///../node_modules/lodash/isMap.js","webpack:///../node_modules/lodash/_copySymbolsIn.js","webpack:///../node_modules/lodash/_baseIsMap.js","webpack:///../node_modules/lodash/isSet.js","webpack:///../node_modules/lodash/_cloneSymbol.js","webpack:///../node_modules/lodash/_baseUnset.js","webpack:///./src/components/styled.js","webpack:///../node_modules/lodash/omit.js","webpack:///../node_modules/lodash/_baseSlice.js","webpack:///../node_modules/lodash/_arrayEach.js","webpack:///../node_modules/lodash/_customOmitClone.js","webpack:///../node_modules/lodash/_initCloneByTag.js","webpack:///./src/components/guides/legends/LegendPosition.js","webpack:///./src/components/guides/legends/LegendDirection.js","webpack:///./src/components/guides/legends/LegendItemDirection.js","webpack:///./src/components/guides/legends/SymbolShape.js","webpack:///./src/pages/guides/legends.js","webpack:///./src/components/PageContent.js","webpack:///../node_modules/lodash/_baseAssign.js","webpack:///../node_modules/lodash/_getAllKeysIn.js","webpack:///../node_modules/lodash/_baseIsSet.js"],"names":["copyObject","getSymbols","module","exports","source","object","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","keys","keysIn","cloneableTags","baseClone","value","bitmask","customizer","key","stack","result","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","forEach","subValue","add","props","hasOwnProperty","Object","prototype","array","length","constructor","call","index","input","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","baseGet","baseSlice","path","arrayPush","getPrototype","stubArray","getSymbolsIn","getOwnPropertySymbols","baseIsMap","baseUnary","nodeUtil","nodeIsMap","isObjectLike","baseIsSet","nodeIsSet","Symbol","symbolProto","symbolValueOf","valueOf","symbol","castPath","last","parent","toKey","FullWidthBanner","styled","div","theme","colors","cardBackground","DescriptionBlock","media","tablet","mobile","Card","cardShadow","arrayMap","baseUnset","customOmitClone","flatRest","omit","paths","CLONE_DEEP_FLAG","start","end","Array","iteratee","isPlainObject","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","anchors","translateExamples","anchor","translateX","translateY","legendProps","containerWidth","containerHeight","itemWidth","itemHeight","itemsSpacing","direction","LegendPosition","useTheme","width","margin","height","style","background","x","y","textAnchor","alignmentBaseline","fill","textLight","fontSize","transform","map","itemTextColor","text","data","id","label","color","accent","example","i","LegendDirection","itemDirections","LegendItemDirection","itemsProps","display","justifyContent","dir","padding","borderRadius","boxShadow","textColor","justify","shapes","code","trim","SymbolShape","shape","symbolShape","Highlight","language","Legends","Layout","Provider","nivo","title","PageContent","className","baseGetAllKeys"],"mappings":"iFAAA,IAAIA,EAAa,EAAQ,QACrBC,EAAa,EAAQ,QAczBC,EAAOC,QAJP,SAAqBC,EAAQC,GAC3B,OAAOL,EAAWI,EAAQH,EAAWG,GAASC,K,uBCZhD,IAAIC,EAAQ,EAAQ,QAChBC,EAAY,EAAQ,QACpBC,EAAc,EAAQ,QACtBC,EAAa,EAAQ,QACrBC,EAAe,EAAQ,QACvBC,EAAc,EAAQ,QACtBC,EAAY,EAAQ,QACpBC,EAAc,EAAQ,QACtBC,EAAgB,EAAQ,QACxBC,EAAa,EAAQ,QACrBC,EAAe,EAAQ,QACvBC,EAAS,EAAQ,QACjBC,EAAiB,EAAQ,QACzBC,EAAiB,EAAQ,QACzBC,EAAkB,EAAQ,QAC1BC,EAAU,EAAQ,QAClBC,EAAW,EAAQ,QACnBC,EAAQ,EAAQ,QAChBC,EAAW,EAAQ,QACnBC,EAAQ,EAAQ,QAChBC,EAAO,EAAQ,QACfC,EAAS,EAAQ,QAqCjBC,EAAgB,GACpBA,EA9Bc,sBA8BWA,EA7BV,kBA8BfA,EAfqB,wBAeWA,EAdd,qBAelBA,EA9Bc,oBA8BWA,EA7BX,iBA8BdA,EAfiB,yBAeWA,EAdX,yBAejBA,EAdc,sBAcWA,EAbV,uBAcfA,EAbe,uBAaWA,EA5Bb,gBA6BbA,EA5BgB,mBA4BWA,EA3BX,mBA4BhBA,EA3BgB,mBA2BWA,EA1Bd,gBA2BbA,EA1BgB,mBA0BWA,EAzBX,mBA0BhBA,EAhBe,uBAgBWA,EAfJ,8BAgBtBA,EAfgB,wBAeWA,EAdX,yBAcsC,EACtDA,EArCe,kBAqCWA,EApCZ,qBAqCdA,EA5BiB,qBA4BW,EA8F5B1B,EAAOC,QA5EP,SAAS0B,EAAUC,EAAOC,EAASC,EAAYC,EAAK5B,EAAQ6B,GAC1D,IAAIC,EACAC,EAnEgB,EAmEPL,EACTM,EAnEgB,EAmEPN,EACTO,EAnEmB,EAmEVP,EAKb,GAHIC,IACFG,EAAS9B,EAAS2B,EAAWF,EAAOG,EAAK5B,EAAQ6B,GAASF,EAAWF,SAExDS,IAAXJ,EACF,OAAOA,EAET,IAAKX,EAASM,GACZ,OAAOA,EAET,IAAIU,EAAQnB,EAAQS,GACpB,GAAIU,GAEF,GADAL,EAASjB,EAAeY,IACnBM,EACH,OAAOxB,EAAUkB,EAAOK,OAErB,CACL,IAAIM,EAAMxB,EAAOa,GACbY,EA9EM,qBA8EGD,GA7EJ,8BA6EsBA,EAE/B,GAAInB,EAASQ,GACX,OAAOnB,EAAYmB,EAAOM,GAE5B,GA/EY,mBA+ERK,GAxFM,sBAwFcA,GAAmBC,IAAWrC,GAEpD,GADA8B,EAAUE,GAAUK,EAAU,GAAKtB,EAAgBU,IAC9CM,EACH,OAAOC,EACHvB,EAAcgB,EAAOpB,EAAayB,EAAQL,IAC1CjB,EAAYiB,EAAOrB,EAAW0B,EAAQL,QAEvC,CACL,IAAKF,EAAca,GACjB,OAAOpC,EAASyB,EAAQ,GAE1BK,EAAShB,EAAeW,EAAOW,EAAKL,IAIxCF,IAAUA,EAAQ,IAAI5B,GACtB,IAAIqC,EAAUT,EAAMU,IAAId,GACxB,GAAIa,EACF,OAAOA,EAETT,EAAMW,IAAIf,EAAOK,GAEbV,EAAMK,GACRA,EAAMgB,SAAQ,SAASC,GACrBZ,EAAOa,IAAInB,EAAUkB,EAAUhB,EAASC,EAAYe,EAAUjB,EAAOI,OAE9DX,EAAMO,IACfA,EAAMgB,SAAQ,SAASC,EAAUd,GAC/BE,EAAOU,IAAIZ,EAAKJ,EAAUkB,EAAUhB,EAASC,EAAYC,EAAKH,EAAOI,OAIzE,IAIIe,EAAQT,OAAQD,GAJLD,EACVD,EAASrB,EAAeD,EACxBsB,EAASV,EAASD,GAEkBI,GASzC,OARAvB,EAAU0C,GAASnB,GAAO,SAASiB,EAAUd,GACvCgB,IAEFF,EAAWjB,EADXG,EAAMc,IAIRvC,EAAY2B,EAAQF,EAAKJ,EAAUkB,EAAUhB,EAASC,EAAYC,EAAKH,EAAOI,OAEzEC,I,qBCjKT,IAGIe,EAHcC,OAAOC,UAGQF,eAqBjChD,EAAOC,QAZP,SAAwBkD,GACtB,IAAIC,EAASD,EAAMC,OACfnB,EAAS,IAAIkB,EAAME,YAAYD,GAOnC,OAJIA,GAA6B,iBAAZD,EAAM,IAAkBH,EAAeM,KAAKH,EAAO,WACtElB,EAAOsB,MAAQJ,EAAMI,MACrBtB,EAAOuB,MAAQL,EAAMK,OAEhBvB,I,uBCtBT,IAAIwB,EAAmB,EAAQ,QAe/BzD,EAAOC,QALP,SAAuByD,EAAUxB,GAC/B,IAAIyB,EAASzB,EAASuB,EAAiBC,EAASC,QAAUD,EAASC,OACnE,OAAO,IAAID,EAASL,YAAYM,EAAQD,EAASE,WAAYF,EAASG,c,qBCXxE,IAAIC,EAAU,OAed9D,EAAOC,QANP,SAAqB8D,GACnB,IAAI9B,EAAS,IAAI8B,EAAOV,YAAYU,EAAO7D,OAAQ4D,EAAQE,KAAKD,IAEhE,OADA9B,EAAOgC,UAAYF,EAAOE,UACnBhC,I,qBCbT,IAAIiC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QAcxBnE,EAAOC,QAJP,SAAgBE,EAAQiE,GACtB,OAAOA,EAAKhB,OAAS,EAAIjD,EAAS+D,EAAQ/D,EAAQgE,EAAUC,EAAM,GAAI,M,qBCZxE,IAAItE,EAAa,EAAQ,QACrB2B,EAAS,EAAQ,QAerBzB,EAAOC,QAJP,SAAsBE,EAAQD,GAC5B,OAAOC,GAAUL,EAAWI,EAAQuB,EAAOvB,GAASC,K,uBCbtD,IAAIkE,EAAY,EAAQ,QACpBC,EAAe,EAAQ,QACvBvE,EAAa,EAAQ,QACrBwE,EAAY,EAAQ,QAYpBC,EATmBvB,OAAOwB,sBASqB,SAAStE,GAE1D,IADA,IAAI8B,EAAS,GACN9B,GACLkE,EAAUpC,EAAQlC,EAAWI,IAC7BA,EAASmE,EAAanE,GAExB,OAAO8B,GAN8BsC,EASvCvE,EAAOC,QAAUuE,G,qBCxBjB,IAAIE,EAAY,EAAQ,QACpBC,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QAGnBC,EAAYD,GAAYA,EAASvD,MAmBjCA,EAAQwD,EAAYF,EAAUE,GAAaH,EAE/C1E,EAAOC,QAAUoB,G,qBC1BjB,IAAIvB,EAAa,EAAQ,QACrB0E,EAAe,EAAQ,QAc3BxE,EAAOC,QAJP,SAAuBC,EAAQC,GAC7B,OAAOL,EAAWI,EAAQsE,EAAatE,GAASC,K,qBCZlD,IAAIY,EAAS,EAAQ,QACjB+D,EAAe,EAAQ,QAgB3B9E,EAAOC,QAJP,SAAmB2B,GACjB,OAAOkD,EAAalD,IAVT,gBAUmBb,EAAOa,K,qBCdvC,IAAImD,EAAY,EAAQ,QACpBJ,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QAGnBI,EAAYJ,GAAYA,EAASrD,MAmBjCA,EAAQyD,EAAYL,EAAUK,GAAaD,EAE/C/E,EAAOC,QAAUsB,G,qBC1BjB,IAAI0D,EAAS,EAAQ,QAGjBC,EAAcD,EAASA,EAAO/B,eAAYb,EAC1C8C,EAAgBD,EAAcA,EAAYE,aAAU/C,EAaxDrC,EAAOC,QAJP,SAAqBoF,GACnB,OAAOF,EAAgBlC,OAAOkC,EAAc7B,KAAK+B,IAAW,K,qBCd9D,IAAIC,EAAW,EAAQ,QACnBC,EAAO,EAAQ,QACfC,EAAS,EAAQ,QACjBC,EAAQ,EAAQ,QAgBpBzF,EAAOC,QANP,SAAmBE,EAAQiE,GAGzB,OAFAA,EAAOkB,EAASlB,EAAMjE,GAEL,OADjBA,EAASqF,EAAOrF,EAAQiE,YACQjE,EAAOsF,EAAMF,EAAKnB,O,0bCL7C,IAAMsB,EAAkBC,IAAOC,IAAV,8EAAGD,CAAH,qDACV,qBAAGE,MAAkBC,OAAOC,kBAKjCC,EAAmBL,IAAOC,IAAV,+EAAGD,CAAH,+CAIvBM,IAAMC,OAJiB,KAUvBD,IAAME,OAViB,MAiBhBC,EAAOT,IAAOC,IAAV,mEAAGD,CAAH,oCACC,qBAAGE,MAAkBC,OAAOC,kBAC5B,qBAAGF,MAAkBQ,e,qBCpCvC,IAAIC,EAAW,EAAQ,QACnB3E,EAAY,EAAQ,QACpB4E,EAAY,EAAQ,QACpBjB,EAAW,EAAQ,QACnBxF,EAAa,EAAQ,QACrB0G,EAAkB,EAAQ,QAC1BC,EAAW,EAAQ,QACnB3F,EAAe,EAAQ,QA2BvB4F,EAAOD,GAAS,SAAStG,EAAQwG,GACnC,IAAI1E,EAAS,GACb,GAAc,MAAV9B,EACF,OAAO8B,EAET,IAAIC,GAAS,EACbyE,EAAQL,EAASK,GAAO,SAASvC,GAG/B,OAFAA,EAAOkB,EAASlB,EAAMjE,GACtB+B,IAAWA,EAASkC,EAAKhB,OAAS,GAC3BgB,KAETtE,EAAWK,EAAQW,EAAaX,GAAS8B,GACrCC,IACFD,EAASN,EAAUM,EAAQ2E,EAAwDJ,IAGrF,IADA,IAAIpD,EAASuD,EAAMvD,OACZA,KACLmD,EAAUtE,EAAQ0E,EAAMvD,IAE1B,OAAOnB,KAGTjC,EAAOC,QAAUyG,G,mBC1BjB1G,EAAOC,QArBP,SAAmBkD,EAAO0D,EAAOC,GAC/B,IAAIvD,GAAS,EACTH,EAASD,EAAMC,OAEfyD,EAAQ,IACVA,GAASA,EAAQzD,EAAS,EAAKA,EAASyD,IAE1CC,EAAMA,EAAM1D,EAASA,EAAS0D,GACpB,IACRA,GAAO1D,GAETA,EAASyD,EAAQC,EAAM,EAAMA,EAAMD,IAAW,EAC9CA,KAAW,EAGX,IADA,IAAI5E,EAAS8E,MAAM3D,KACVG,EAAQH,GACfnB,EAAOsB,GAASJ,EAAMI,EAAQsD,GAEhC,OAAO5E,I,qBCNTjC,EAAOC,QAZP,SAAmBkD,EAAO6D,GAIxB,IAHA,IAAIzD,GAAS,EACTH,EAAkB,MAATD,EAAgB,EAAIA,EAAMC,SAE9BG,EAAQH,IAC8B,IAAzC4D,EAAS7D,EAAMI,GAAQA,EAAOJ,KAIpC,OAAOA,I,qBClBT,IAAI8D,EAAgB,EAAQ,QAe5BjH,EAAOC,QAJP,SAAyB2B,GACvB,OAAOqF,EAAcrF,QAASS,EAAYT,I,qBCZ5C,IAAI6B,EAAmB,EAAQ,QAC3ByD,EAAgB,EAAQ,QACxBC,EAAc,EAAQ,QACtBC,EAAc,EAAQ,QACtBC,EAAkB,EAAQ,QAwE9BrH,EAAOC,QApCP,SAAwBE,EAAQoC,EAAKL,GACnC,IAAIoF,EAAOnH,EAAOkD,YAClB,OAAQd,GACN,IA3BiB,uBA4Bf,OAAOkB,EAAiBtD,GAE1B,IAvCU,mBAwCV,IAvCU,gBAwCR,OAAO,IAAImH,GAAMnH,GAEnB,IAjCc,oBAkCZ,OAAO+G,EAAc/G,EAAQ+B,GAE/B,IAnCa,wBAmCI,IAlCJ,wBAmCb,IAlCU,qBAkCI,IAjCH,sBAiCkB,IAhClB,sBAiCX,IAhCW,sBAgCI,IA/BG,6BA+BmB,IA9BzB,uBA8ByC,IA7BzC,uBA8BV,OAAOmF,EAAgBlH,EAAQ+B,GAEjC,IAjDS,eAkDP,OAAO,IAAIoF,EAEb,IAnDY,kBAoDZ,IAjDY,kBAkDV,OAAO,IAAIA,EAAKnH,GAElB,IAtDY,kBAuDV,OAAOgH,EAAYhH,GAErB,IAxDS,eAyDP,OAAO,IAAImH,EAEb,IAzDY,kBA0DV,OAAOF,EAAYjH,M,+JC3DnBoH,EAAU,CACZ,WACA,MACA,YACA,QACA,eACA,SACA,cACA,OACA,UAGEC,EAAoB,CACtB,CACIC,OAAQ,MACRC,YAAa,IACbC,YAAa,IAEjB,CACIF,OAAQ,OACRC,YAAa,GACbC,WAAY,IAEhB,CACIF,OAAQ,QACRC,YAAa,GACbC,YAAa,IAEjB,CACIF,OAAQ,SACRC,WAAY,IACZC,WAAY,KAKdC,EAAc,CAChBC,eAAgB,IAChBC,gBAAiB,IACjBC,UAAW,IACXC,WAAY,GACZC,aAAc,EACdC,UAAW,UAqIAC,EAlIQ,WACnB,IAAMtC,EAAQuC,cAEd,OACI,6BACI,+CACA,wFAC8D,wCAAoB,IADlF,YAGI,6BAHJ,oCAMA,yBACIC,MAAOT,EAAYC,eAAiBS,GACpCC,OAAQX,EAAYE,gBAAkBQ,GACtCE,MAAO,CACHC,WAAY5C,EAAMC,OAAOC,iBAG7B,0BACI2C,EAAGd,EAAYC,eAAiB,EA9BrC,GA+BKc,EAAGL,GACHM,WAAW,SACXJ,MAAO,CACHK,kBAAmB,SACnBC,KAAMjD,EAAMC,OAAOiD,UACnBC,SAAU,SAPlB,UAYA,uBAAGC,UAAS,oBACR,0BACIH,KAAMjD,EAAMC,OAAO2C,WACnBJ,MAAOT,EAAYC,eACnBU,OAAQX,EAAYE,kBAEvBP,EAAQ2B,KAAI,SAAAzB,GAAM,OACf,kBAAC,IAAD,iBACQG,EADR,CAEIuB,cAAetD,EAAMC,OAAOsD,KAC5BrH,IAAK0F,EACLA,OAAQA,EACR4B,KAAM,CACF,CAAEC,GAAI,IAAKC,MAAO9B,EAAQ+B,MAAO3D,EAAMC,OAAO2D,QAC9C,CAAEH,GAAI,IAAKC,MAAO,MAAOC,MAAO3D,EAAMC,OAAO2D,QAC7C,CAAEH,GAAI,IAAKC,MAAO,MAAOC,MAAO3D,EAAMC,OAAO2D,iBAMjE,mMAGI,6BAHJ,gBAIiB,4CAJjB,MAI2C,4CAJ3C,qFAOA,yBACIpB,MAAOT,EAAYC,eAAiBS,GACpCC,OAAQX,EAAYE,gBAAkBQ,GACtCE,MAAO,CACHC,WAAY5C,EAAMC,OAAOC,iBAG7B,0BACI2C,EAAGd,EAAYC,eAAiB,EA7ErC,GA8EKc,EAAGL,GACHM,WAAW,SACXJ,MAAO,CACHK,kBAAmB,SACnBC,KAAMjD,EAAMC,OAAOiD,UACnBC,SAAU,SAPlB,UAYA,uBAAGC,UAAS,oBACR,0BACIH,KAAMjD,EAAMC,OAAO2C,WACnBJ,MAAOT,EAAYC,eACnBU,OAAQX,EAAYE,kBAEvBN,EAAkB0B,KAAI,SAACQ,EAASC,GAAV,OACnB,kBAAC,IAAD,eACI5H,IAAK4H,GACD/B,EACAlB,IAAKgD,EAAS,CAAC,aAAc,eAHrC,CAIIP,cAAetD,EAAMC,OAAOsD,KAC5BC,KAAM,CACF,CACIC,GAAII,EAAQjC,OACZ8B,MAAUG,EAAQjC,OAAb,aACL+B,MAAO3D,EAAMC,OAAOsD,aAKnC5B,EAAkB0B,KAAI,SAACQ,EAASC,GAAV,OACnB,kBAAC,IAAD,eACI5H,IAAK4H,GACD/B,EACA8B,EAHR,CAIIP,cAAetD,EAAMC,OAAOsD,KAC5BC,KAAM,CACF,CACIC,GAAI,IACJC,MAAUG,EAAQjC,OAAb,gBACL+B,MAAO3D,EAAMC,OAAO2D,QAExB,CACIH,GAAI,IACJC,MAAM,eAAgBG,EAAQhC,WAC9B8B,MAAO3D,EAAMC,OAAO2D,QAExB,CACIH,GAAI,IACJC,MAAM,eAAgBG,EAAQ/B,WAC9B6B,MAAO3D,EAAMC,OAAO2D,mBCrKlD7B,EAAc,CAChBC,eAAgB,IAChBC,gBAAiB,GACjBC,UAAW,GACXC,WAAY,IA0CD4B,EAvCS,WACpB,IAAM/D,EAAQuC,cAEd,OACI,6BACI,gDACA,wEAC8C,2CAD9C,aAC+E,IAC3E,wCAFJ,OAE2B,qCAF3B,KAIA,yBAAKC,MAAOT,EAAYC,eAAgBU,OAAQX,EAAYE,iBACxD,kBAAC,IAAD,iBACQF,EADR,CAEIuB,cAAetD,EAAMC,OAAOsD,KAC5B3B,OAAO,OACPS,UAAU,SACVmB,KAAM,CACF,CAAEC,GAAI,IAAKC,MAAM,SAAWC,MAAO3D,EAAMC,OAAO2D,QAChD,CAAEH,GAAI,IAAKC,MAAM,SAAWC,MAAO3D,EAAMC,OAAO2D,QAChD,CAAEH,GAAI,IAAKC,MAAM,SAAWC,MAAO3D,EAAMC,OAAO2D,YAGxD,kBAAC,IAAD,iBACQ7B,EADR,CAEIuB,cAAetD,EAAMC,OAAOsD,KAC5B3B,OAAO,OACPC,WAAY,IACZQ,UAAU,MACVmB,KAAM,CACF,CAAEC,GAAI,IAAKC,MAAM,MAAQC,MAAO3D,EAAMC,OAAO2D,QAC7C,CAAEH,GAAI,IAAKC,MAAM,MAAQC,MAAO3D,EAAMC,OAAO2D,QAC7C,CAAEH,GAAI,IAAKC,MAAM,MAAQC,MAAO3D,EAAMC,OAAO2D,eCtC/DI,EAAiB,CAAC,gBAAiB,gBAAiB,gBAAiB,iBA+F5DC,EA7Fa,WACxB,IAAMjE,EAAQuC,cAER2B,EAAa,CACfrB,EAAG,EACHC,EAAG,EACHN,MAAO,IACPE,OAAQ,GACRc,KAAM,CACFC,GAAI,OACJE,MAAO3D,EAAMC,OAAO2D,SAI5B,OACI,6BACI,qDACA,kCACQ,+CADR,yDAEI,6BAFJ,oCAKA,yBACIjB,MAAO,CACHwB,QAAS,OACTC,eAAgB,kBAGnBJ,EAAeX,KAAI,SAAAgB,GAAG,OACnB,yBACInI,IAAKmI,EACL1B,MAAO,CACHC,WAAY5C,EAAMC,OAAOC,eACzBoE,QAAS,YACTC,aAAc,EACdJ,QAAS,OACTK,UAAW,iCAGf,yBAAKhC,MAAO0B,EAAW1B,MAAOE,OAAQwB,EAAWxB,QAC7C,kBAAC,IAAD,iBACQwB,EADR,CAEIO,UAAWzE,EAAMC,OAAOsD,KACxBC,KAAI,iBACGU,EAAWV,KADd,CAEAE,MAAOW,IAEXhC,UAAWgC,WAM/B,4EACkD,yCADlD,MAC0E,IACtE,sCAFJ,2HAKA,yBACI1B,MAAO,CACHwB,QAAS,OACTC,eAAgB,kBAGnBJ,EAAeX,KAAI,SAAAgB,GAAG,OACnB,yBACInI,IAAKmI,EACL1B,MAAO,CACHC,WAAY5C,EAAMC,OAAOC,eACzBoE,QAAS,WACTH,QAAS,OACTK,UAAW,iCAGf,yBAAKtI,IAAKmI,EAAK7B,MAAO0B,EAAW1B,MAAOE,OAAQwB,EAAWxB,QACvD,kBAAC,IAAD,iBACQwB,EADR,CAEIO,UAAWzE,EAAMC,OAAOsD,KACxBC,KAAI,iBACGU,EAAWV,KADd,CAEAE,MAAOW,IAEXhC,UAAWgC,EACXK,SAAS,a,YCpFnCC,EAAS,CAAC,SAAU,SAAU,WAAY,WAE1CC,EAAO,oXAgBXC,OA8DaC,EA5DK,WAChB,IAAM9E,EAAQuC,cAER2B,EAAa,CACfrB,EAAG,EACHC,EAAG,EACHN,MAAO,IACPE,OAAQ,GACRc,KAAM,CACFC,GAAI,OACJE,MAAO3D,EAAMC,OAAO2D,SAI5B,OACI,6BACI,4CACA,8DACoC,6CADpC,cAGA,yBACIjB,MAAO,CACHwB,QAAS,OACTC,eAAgB,kBAGnBO,EAAOtB,KAAI,SAAA0B,GAAK,OACb,yBACI7I,IAAK6I,EACLpC,MAAO,CACHC,WAAY5C,EAAMC,OAAOC,eACzBoE,QAAS,YACTC,aAAc,EACdJ,QAAS,OACTK,UAAW,iCAGf,yBAAKhC,MAAO0B,EAAW1B,MAAOE,OAAQwB,EAAWxB,QAC7C,kBAAC,IAAD,iBACQwB,EADR,CAEIO,UAAWzE,EAAMC,OAAOsD,KACxBC,KAAI,iBACGU,EAAWV,KADd,CAEAE,MAAOqB,IAEX1C,UAAU,gBACV2C,YAAaD,WAMjC,qFAC2D,6CAD3D,KAGA,kBAACE,EAAA,EAAD,CAAWL,KAAMA,EAAMM,SAAS,U,YCvC7BC,UA7BC,WACZ,IAAMnF,EAAQuC,cAEd,OACI,kBAAC6C,EAAA,EAAD,KACI,kBAAC,KAAaC,SAAd,CAAuBtJ,MAAOiE,EAAMsF,MAChC,kBAAC,IAAD,CAAKC,MAAM,kBACX,kBAACC,EAAA,EAAD,KACI,yBAAKC,UAAU,iBACX,yCAGR,kBAAC,IAAD,KACI,2EACA,sEAC4C,+CAD5C,wJAKA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,0UC/BL3F,QAAOC,IAAtB,8DAAeD,CAAf,4CAIMM,IAAMC,OAJZ,KAUMD,IAAME,OAVZ,O,qBCXA,IAAIrG,EAAa,EAAQ,QACrB0B,EAAO,EAAQ,QAenBxB,EAAOC,QAJP,SAAoBE,EAAQD,GAC1B,OAAOC,GAAUL,EAAWI,EAAQsB,EAAKtB,GAASC,K,qBCbpD,IAAIoL,EAAiB,EAAQ,QACzB/G,EAAe,EAAQ,QACvB/C,EAAS,EAAQ,QAcrBzB,EAAOC,QAJP,SAAsBE,GACpB,OAAOoL,EAAepL,EAAQsB,EAAQ+C,K,qBCbxC,IAAIzD,EAAS,EAAQ,QACjB+D,EAAe,EAAQ,QAgB3B9E,EAAOC,QAJP,SAAmB2B,GACjB,OAAOkD,EAAalD,IAVT,gBAUmBb,EAAOa","file":"component---src-pages-guides-legends-js-061e2a9ae46c51ccdc29.js","sourcesContent":["var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport const FullWidthBanner = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    margin-bottom: 40px;\n    padding: 20px;\n`\n\nexport const DescriptionBlock = styled.div`\n    max-width: 800px;\n    margin: 0 auto 50px;\n\n    ${media.tablet`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n`\n\nexport const Card = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    box-shadow: ${({ theme }) => theme.cardShadow};\n`\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport omit from 'lodash/omit'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTheme } from '../../../theming/context'\n\nconst anchors = [\n    'top-left',\n    'top',\n    'top-right',\n    'right',\n    'bottom-right',\n    'bottom',\n    'bottom-left',\n    'left',\n    'center',\n]\n\nconst translateExamples = [\n    {\n        anchor: 'top',\n        translateX: -160,\n        translateY: -30,\n    },\n    {\n        anchor: 'left',\n        translateX: -30,\n        translateY: 50,\n    },\n    {\n        anchor: 'right',\n        translateX: -30,\n        translateY: -60,\n    },\n    {\n        anchor: 'bottom',\n        translateX: 160,\n        translateY: 30,\n    },\n]\n\nconst margin = 30\nconst legendProps = {\n    containerWidth: 800 - margin * 2,\n    containerHeight: 300 - margin * 2,\n    itemWidth: 120,\n    itemHeight: 16,\n    itemsSpacing: 4,\n    direction: 'column',\n}\n\nconst LegendPosition = () => {\n    const theme = useTheme()\n\n    return (\n        <div>\n            <h2>Legend position</h2>\n            <p>\n                The legend can be positioned in your chart area using the <code>anchor</code>{' '}\n                property.\n                <br />\n                You have 9 available directives:\n            </p>\n            <svg\n                width={legendProps.containerWidth + margin * 2}\n                height={legendProps.containerHeight + margin * 2}\n                style={{\n                    background: theme.colors.cardBackground,\n                }}\n            >\n                <text\n                    x={legendProps.containerWidth / 2 + margin}\n                    y={margin / 2}\n                    textAnchor=\"middle\"\n                    style={{\n                        alignmentBaseline: 'middle',\n                        fill: theme.colors.textLight,\n                        fontSize: '14px',\n                    }}\n                >\n                    margin\n                </text>\n                <g transform={`translate(${margin},${margin})`}>\n                    <rect\n                        fill={theme.colors.background}\n                        width={legendProps.containerWidth}\n                        height={legendProps.containerHeight}\n                    />\n                    {anchors.map(anchor => (\n                        <BoxLegendSvg\n                            {...legendProps}\n                            itemTextColor={theme.colors.text}\n                            key={anchor}\n                            anchor={anchor}\n                            data={[\n                                { id: 'a', label: anchor, color: theme.colors.accent },\n                                { id: 'b', label: '...', color: theme.colors.accent },\n                                { id: 'c', label: '...', color: theme.colors.accent },\n                            ]}\n                        />\n                    ))}\n                </g>\n            </svg>\n            <p>\n                The legend's anchor is relative to the inner chart area (with margin applied), but\n                depending on the chart type, you'll probably want to move it outside of this area.\n                <br />\n                That's where <code>translateX</code> & <code>translateY</code> come into play,\n                allowing to adjust the legend position from its original anchor.\n            </p>\n            <svg\n                width={legendProps.containerWidth + margin * 2}\n                height={legendProps.containerHeight + margin * 2}\n                style={{\n                    background: theme.colors.cardBackground,\n                }}\n            >\n                <text\n                    x={legendProps.containerWidth / 2 + margin}\n                    y={margin / 2}\n                    textAnchor=\"middle\"\n                    style={{\n                        alignmentBaseline: 'middle',\n                        fill: theme.colors.textLight,\n                        fontSize: '14px',\n                    }}\n                >\n                    margin\n                </text>\n                <g transform={`translate(${margin},${margin})`}>\n                    <rect\n                        fill={theme.colors.background}\n                        width={legendProps.containerWidth}\n                        height={legendProps.containerHeight}\n                    />\n                    {translateExamples.map((example, i) => (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legendProps}\n                            {...omit(example, ['translateX', 'translateY'])}\n                            itemTextColor={theme.colors.text}\n                            data={[\n                                {\n                                    id: example.anchor,\n                                    label: `${example.anchor} (regular)`,\n                                    color: theme.colors.text,\n                                },\n                            ]}\n                        />\n                    ))}\n                    {translateExamples.map((example, i) => (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legendProps}\n                            {...example}\n                            itemTextColor={theme.colors.text}\n                            data={[\n                                {\n                                    id: 'a',\n                                    label: `${example.anchor} (translated)`,\n                                    color: theme.colors.accent,\n                                },\n                                {\n                                    id: 'b',\n                                    label: `translateX: ${example.translateX}`,\n                                    color: theme.colors.accent,\n                                },\n                                {\n                                    id: 'c',\n                                    label: `translateY: ${example.translateY}`,\n                                    color: theme.colors.accent,\n                                },\n                            ]}\n                        />\n                    ))}\n                </g>\n            </svg>\n        </div>\n    )\n}\n\nexport default LegendPosition\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTheme } from '../../../theming/context'\n\nconst legendProps = {\n    containerWidth: 800,\n    containerHeight: 90,\n    itemWidth: 70,\n    itemHeight: 24,\n}\n\nconst LegendDirection = () => {\n    const theme = useTheme()\n\n    return (\n        <div>\n            <h2>Legend direction</h2>\n            <p>\n                Legends support two directions, using the <code>direction</code> property,{' '}\n                <code>column</code> or <code>row</code>.\n            </p>\n            <svg width={legendProps.containerWidth} height={legendProps.containerHeight}>\n                <BoxLegendSvg\n                    {...legendProps}\n                    itemTextColor={theme.colors.text}\n                    anchor=\"left\"\n                    direction=\"column\"\n                    data={[\n                        { id: 'a', label: `column`, color: theme.colors.accent },\n                        { id: 'b', label: `column`, color: theme.colors.accent },\n                        { id: 'c', label: `column`, color: theme.colors.accent },\n                    ]}\n                />\n                <BoxLegendSvg\n                    {...legendProps}\n                    itemTextColor={theme.colors.text}\n                    anchor=\"left\"\n                    translateX={260}\n                    direction=\"row\"\n                    data={[\n                        { id: 'a', label: `row`, color: theme.colors.accent },\n                        { id: 'b', label: `row`, color: theme.colors.accent },\n                        { id: 'c', label: `row`, color: theme.colors.accent },\n                    ]}\n                />\n            </svg>\n        </div>\n    )\n}\n\nexport default LegendDirection\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { LegendSvgItem } from '@nivo/legends'\nimport { useTheme } from '../../../theming/context'\n\nconst itemDirections = ['left-to-right', 'right-to-left', 'top-to-bottom', 'bottom-to-top']\n\nconst LegendItemDirection = () => {\n    const theme = useTheme()\n\n    const itemsProps = {\n        x: 0,\n        y: 0,\n        width: 160,\n        height: 40,\n        data: {\n            id: 'demo',\n            color: theme.colors.accent,\n        },\n    }\n\n    return (\n        <div>\n            <h2>Legend item direction</h2>\n            <p>\n                The <code>itemDirection</code> property defines how symbol and label are positioned.\n                <br />\n                You have 4 available directives:\n            </p>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                }}\n            >\n                {itemDirections.map(dir => (\n                    <div\n                        key={dir}\n                        style={{\n                            background: theme.colors.cardBackground,\n                            padding: '10px 15px',\n                            borderRadius: 2,\n                            display: 'flex',\n                            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n                        }}\n                    >\n                        <svg width={itemsProps.width} height={itemsProps.height}>\n                            <LegendSvgItem\n                                {...itemsProps}\n                                textColor={theme.colors.text}\n                                data={{\n                                    ...itemsProps.data,\n                                    label: dir,\n                                }}\n                                direction={dir}\n                            />\n                        </svg>\n                    </div>\n                ))}\n            </div>\n            <p>\n                The behavior is slightly different if you set <code>justify</code> to{' '}\n                <code>true</code> as the label will be positioned at the opposite of the symbol,\n                filling up the whole width/height of the legend's item.\n            </p>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                }}\n            >\n                {itemDirections.map(dir => (\n                    <div\n                        key={dir}\n                        style={{\n                            background: theme.colors.cardBackground,\n                            padding: '9px 12px',\n                            display: 'flex',\n                            boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)',\n                        }}\n                    >\n                        <svg key={dir} width={itemsProps.width} height={itemsProps.height}>\n                            <LegendSvgItem\n                                {...itemsProps}\n                                textColor={theme.colors.text}\n                                data={{\n                                    ...itemsProps.data,\n                                    label: dir,\n                                }}\n                                direction={dir}\n                                justify={true}\n                            />\n                        </svg>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default LegendItemDirection\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { LegendSvgItem } from '@nivo/legends'\nimport Highlight from '../../Highlight'\nimport { useTheme } from '../../../theming/context'\n\nconst shapes = ['square', 'circle', 'triangle', 'diamond']\n\nconst code = `\nconst CustomSymbolShape = ({\n    x, y, size, fill, borderWidth, borderColor\n}) => (\n    <rect\n        x={x}\n        y={y}\n        transform={\\`rotate(45 \\${size/2} \\${size/2})\\`}\n        fill={fill}\n        strokeWidth={borderWidth}\n        stroke={borderColor}\n        width={size}\n        height={size}\n        style={{ pointerEvents: 'none' }}\n    />\n)\n`.trim()\n\nconst SymbolShape = () => {\n    const theme = useTheme()\n\n    const itemsProps = {\n        x: 0,\n        y: 0,\n        width: 160,\n        height: 40,\n        data: {\n            id: 'demo',\n            color: theme.colors.accent,\n        },\n    }\n\n    return (\n        <div>\n            <h2>Symbol shape</h2>\n            <p>\n                You can customize symbols using <code>symbolShape</code> property.\n            </p>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                }}\n            >\n                {shapes.map(shape => (\n                    <div\n                        key={shape}\n                        style={{\n                            background: theme.colors.cardBackground,\n                            padding: '10px 15px',\n                            borderRadius: 2,\n                            display: 'flex',\n                            boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n                        }}\n                    >\n                        <svg width={itemsProps.width} height={itemsProps.height}>\n                            <LegendSvgItem\n                                {...itemsProps}\n                                textColor={theme.colors.text}\n                                data={{\n                                    ...itemsProps.data,\n                                    label: shape,\n                                }}\n                                direction=\"left-to-right\"\n                                symbolShape={shape}\n                            />\n                        </svg>\n                    </div>\n                ))}\n            </div>\n            <p>\n                You can also use a custom shape passing a component to <code>symbolShape</code>:\n            </p>\n            <Highlight code={code} language=\"jsx\" />\n        </div>\n    )\n}\n\nexport default SymbolShape\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { themeContext } from '@nivo/core'\nimport { useTheme } from '../../theming/context'\nimport Layout from '../../components/Layout'\nimport SEO from '../../components/seo'\nimport PageContent from '../../components/PageContent'\nimport LegendPosition from '../../components/guides/legends/LegendPosition'\nimport LegendDirection from '../../components/guides/legends/LegendDirection'\nimport LegendItemDirection from '../../components/guides/legends/LegendItemDirection'\nimport SymbolShape from '../../components/guides/legends/SymbolShape'\nimport { DescriptionBlock } from '../../components/styled'\n\nconst Legends = () => {\n    const theme = useTheme()\n\n    return (\n        <Layout>\n            <themeContext.Provider value={theme.nivo}>\n                <SEO title=\"Legends Guide\" />\n                <PageContent>\n                    <div className=\"guide__header\">\n                        <h1>Legends</h1>\n                    </div>\n                </PageContent>\n                <DescriptionBlock>\n                    <p>Let's see how to add legends to your charts.</p>\n                    <p>\n                        Legend components are available via the <code>@nivo/legends</code> package,\n                        however it's added as a dependency for most chart packages supporting them,\n                        in most cases you won't have to add it as a direct dependency.\n                    </p>\n                    <LegendPosition />\n                    <LegendDirection />\n                    <LegendItemDirection />\n                    <SymbolShape />\n                </DescriptionBlock>\n            </themeContext.Provider>\n        </Layout>\n    )\n}\n\nexport default Legends\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport default styled.div`\n    margin: 0 50px;\n    position: relative;\n\n    ${media.tablet`\n        & {\n            margin: 0 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px;\n        }\n    `}\n`\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n"],"sourceRoot":""}