{"version":3,"file":"232a304f82295f88428cbb5d9c92703203bbb8ee-a76e934522ee91b3b8bf.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/treemap/round.js","webpack://nivo-website/./src/data/components/sunburst/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../node_modules/d3-hierarchy/src/partition.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nivo-website/../src/SunburstTooltip.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://nivo-website/../src/Arcs.tsx","webpack://nivo-website/../src/Sunburst.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveSunburst.tsx","webpack://nivo-website/./src/data/components/sunburst/mapper.js","webpack://nivo-website/../node_modules/lodash/_arrayEach.js","webpack://nivo-website/../node_modules/lodash/_baseAssign.js","webpack://nivo-website/../node_modules/lodash/_baseAssignIn.js","webpack://nivo-website/../node_modules/lodash/_baseClone.js","webpack://nivo-website/../node_modules/lodash/_baseIsMap.js","webpack://nivo-website/../node_modules/lodash/_baseIsSet.js","webpack://nivo-website/../node_modules/lodash/_baseUnset.js","webpack://nivo-website/../node_modules/lodash/_cloneDataView.js","webpack://nivo-website/../node_modules/lodash/_cloneRegExp.js","webpack://nivo-website/../node_modules/lodash/_cloneSymbol.js","webpack://nivo-website/../node_modules/lodash/_copySymbols.js","webpack://nivo-website/../node_modules/lodash/_copySymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_customOmitClone.js","webpack://nivo-website/../node_modules/lodash/_getAllKeysIn.js","webpack://nivo-website/../node_modules/lodash/_getSymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_initCloneArray.js","webpack://nivo-website/../node_modules/lodash/_initCloneByTag.js","webpack://nivo-website/../node_modules/lodash/_parent.js","webpack://nivo-website/../node_modules/lodash/cloneDeep.js","webpack://nivo-website/../node_modules/lodash/isMap.js","webpack://nivo-website/../node_modules/lodash/isSet.js","webpack://nivo-website/../node_modules/lodash/omit.js"],"sourcesContent":["function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;else while (--i >= 0) {\n    sum += children[i].value;\n  }\n  node.value = sum;\n}\n\nexport default function () {\n  return this.eachAfter(count);\n}","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n\n  do {\n    node.height = height;\n  } while ((node = node.parent) && node.height < ++height);\n}\nexport function Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};","export default function (callback) {\n  var node = this,\n      current,\n      next = [node],\n      children,\n      i,\n      n;\n\n  do {\n    current = next.reverse(), next = [];\n\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      next = [],\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  while (node = next.pop()) {\n    callback(node);\n  }\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      children,\n      i;\n\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  return this;\n}","export default function (value) {\n  return this.eachAfter(function (node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n\n    while (--i >= 0) {\n      sum += children[i].value;\n    }\n\n    node.value = sum;\n  });\n}","export default function (compare) {\n  return this.eachBefore(function (node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}","export default function (end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n\n  var k = nodes.length;\n\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n\n  return c;\n}","export default function () {\n  var node = this,\n      nodes = [node];\n\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n\n  return nodes;\n}","export default function () {\n  var nodes = [];\n  this.each(function (node) {\n    nodes.push(node);\n  });\n  return nodes;\n}","export default function () {\n  var leaves = [];\n  this.eachBefore(function (node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}","export default function () {\n  var root = this,\n      links = [];\n  root.each(function (node) {\n    if (node !== root) {\n      // Don’t include the root’s parent, if any.\n      links.push({\n        source: node.parent,\n        target: node\n      });\n    }\n  });\n  return links;\n}","export default function (node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}","import { defaultProps } from '@nivo/sunburst'\nimport { arcTransitionModes } from '@nivo/arcs'\nimport {\n    groupProperties,\n    defsProperties,\n    motionProperties,\n    themeProperty,\n} from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data, which should be immutable.',\n        description: `\n            Chart data, which must conform to this structure\n            if using the default \\`id\\` and \\`value\\` accessors:\n\n            \\`\\`\\`\n            {\n                // must be unique for the whole dataset\n                id: string | number\n                value: number\n                children: {\n                    id: string | number\n                    value: number\n                    children: ...\n                }[]\n            }\n            \\`\\`\\`\n\n            If using a different data structure, you must make sure\n            to adjust both \\`id\\` and \\`value\\`. Meaning you can provide\n            a completely different data structure as long as \\`id\\` and \\`value\\`\n            return the appropriate values.\n\n            Immutability of the data is important as re-computations\n            depends on it.\n        `,\n        type: 'object',\n        required: true,\n    },\n    {\n        key: 'id',\n        group: 'Base',\n        help: 'Id accessor.',\n        description: `\n            define id accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            id (string | number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.id,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        help: 'Value accessor',\n        description: `\n            define value accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            value (number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.value,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'string | (value: number) => string | number',\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'cornerRadius',\n        help: 'Round node shape.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.cornerRadius,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveSunburst/>\\`.\n        `,\n        help: 'Chart width.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveSunburst/>\\`.\n        `,\n        help: 'Chart height.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty(['svg', 'api']),\n    {\n        key: 'colors',\n        help: 'Defines how to compute node color.',\n        required: false,\n        defaultValue: defaultProps.colors,\n        controlType: 'ordinalColors',\n        type: 'string | Function | string[]',\n        group: 'Style',\n    },\n    {\n        key: 'colorBy',\n        help: `Define the property to use to assign a color to arcs.`,\n        description: `\n            When using \\`id\\`, each node will get a new color,\n            and when using \\`depth\\` the nodes' color will depend on their depth.\n        `,\n        type: `'id' | 'depth'`,\n        required: false,\n        defaultValue: defaultProps.colorBy,\n        controlType: 'radio',\n        group: 'Style',\n        controlOptions: {\n            choices: [\n                { label: 'id', value: 'id' },\n                { label: 'depth', value: 'depth' },\n            ],\n        },\n    },\n    {\n        key: 'inheritColorFromParent',\n        help: 'Inherit color from parent node starting from 2nd level.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.inheritColorFromParent,\n        controlType: 'switch',\n        group: 'Style',\n    },\n    {\n        key: 'childColor',\n        help: 'Defines how to compute child nodes color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.childColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Node border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Defines how to compute arcs color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg', 'api']),\n    {\n        key: 'showcase pattern usage',\n        flavors: ['svg'],\n        help: 'Patterns.',\n        description: `\n            You can use \\`defs\\` and \\`fill\\` properties\n            to use patterns, see\n            [dedicated guide](self:/guides/patterns)\n            for further information.\n        `,\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Style',\n    },\n    {\n        key: 'enableArcLabels',\n        help: 'Enable/disable arc labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.enableArcLabels,\n        controlType: 'switch',\n        group: 'Arc labels',\n    },\n    {\n        key: 'arcLabel',\n        help: 'Defines how to get label text, can be a string (used to access current node data property) or a function which will receive the actual node data.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.arcLabel,\n        controlType: 'choices',\n        group: 'Arc labels',\n        controlOptions: {\n            choices: ['id', 'value', 'formattedValue', `d => \\`\\${d.id} (\\${d.value})\\``].map(\n                choice => ({\n                    label: choice,\n                    value: choice,\n                })\n            ),\n        },\n    },\n    {\n        key: 'arcLabelsRadiusOffset',\n        help: `\n            Define the radius to use to determine the label position, starting from inner radius,\n            this is expressed as a ratio.\n        `,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.arcLabelsRadiusOffset,\n        controlType: 'range',\n        group: 'Arc labels',\n        controlOptions: {\n            min: 0,\n            max: 2,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'arcLabelsSkipAngle',\n        help: `Skip label if corresponding arc's angle is lower than provided value.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.arcLabelsSkipAngle,\n        controlType: 'range',\n        group: 'Arc labels',\n        controlOptions: {\n            unit: '°',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'arcLabelsTextColor',\n        help: 'Defines how to compute arc label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.arcLabelsTextColor,\n        controlType: 'inheritedColor',\n        group: 'Arc labels',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n\n            The layer component which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`Sunburst\\` component.\n\n            The context passed to layers has the following structure:\n\n            \\`\\`\\`\n            {\n                nodes:  ComputedDatum<RawDatum>[],\n                arcGenerator: Function\n                centerX:      number\n                centerY:      number\n                radius:       number\n            }\n            \\`\\`\\`\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaultProps.layers,\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        help: 'Enable/disable interactivity.',\n        type: '{boolean}',\n        required: false,\n        defaultValue: defaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n    {\n        key: 'transitionMode',\n        flavors: ['svg'],\n        help: 'Define how transitions behave.',\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.transitionMode,\n        controlType: 'choices',\n        group: 'Motion',\n        controlOptions: {\n            choices: arcTransitionModes.map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Tooltip custom component',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the following data:\n            \\`\\`\\`\n            {\n                id:         string | number,\n                value:      number,\n                depth:      number,\n                color:      string,\n                name:       string\n                loc:        number\n                percentage: number\n                // the parent datum\n                ancestor:   object\n            }\n            \\`\\`\\`\n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'Showcase custom tooltip component.',\n        type: 'boolean',\n        controlType: 'switch',\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'onClick handler',\n        description: `\n            onClick handler, will receive node data as first argument\n            & event as second one. The node data has the following shape:\n\n            \\`\\`\\`\n            {\n                id:         string | number,\n                value:      number,\n                depth:      number,\n                color:      string,\n                name:       string\n                loc:        number\n                percentage: number\n                // the parent datum\n                ancestor:   object\n            }\n            \\`\\`\\`\n        `,\n    },\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\nexport default function () {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 = root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function (node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function (x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function (x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const SunburstTooltip = <RawDatum,>({\n    id,\n    formattedValue,\n    color,\n}: ComputedDatum<RawDatum>) => (\n    <BasicTooltip id={id} value={formattedValue} enableChip={true} color={color} />\n)\n","import { ArcTransitionMode } from '@nivo/arcs'\nimport { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { SunburstTooltip } from './SunburstTooltip'\nimport { SunburstLayerId } from './types'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    cornerRadius: 0,\n    layers: ['arcs', 'arcLabels'] as SunburstLayerId[],\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    colorBy: 'id' as const,\n    inheritColorFromParent: true,\n    childColor: { from: 'color' },\n    borderWidth: 1,\n    borderColor: 'white',\n    enableArcLabels: false,\n    arcLabel: 'formattedValue',\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsSkipAngle: 0,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n    isInteractive: true,\n    defs: [],\n    fill: [],\n    tooltip: SunburstTooltip,\n    role: 'img',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { ComputedDatum, SunburstCommonProps, MouseHandlers } from './types'\nimport { useTooltip } from '@nivo/tooltip'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: SunburstCommonProps<RawDatum>['borderWidth']\n    borderColor: SunburstCommonProps<RawDatum>['borderColor']\n    isInteractive: SunburstCommonProps<RawDatum>['isInteractive']\n    onClick?: MouseHandlers<RawDatum>['onClick']\n    onMouseEnter?: MouseHandlers<RawDatum>['onMouseEnter']\n    onMouseMove?: MouseHandlers<RawDatum>['onMouseMove']\n    onMouseLeave?: MouseHandlers<RawDatum>['onMouseLeave']\n    tooltip: SunburstCommonProps<RawDatum>['tooltip']\n    transitionMode: SunburstCommonProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    Container,\n    SvgWrapper,\n    useDimensions,\n} from '@nivo/core'\nimport { ArcLabelsLayer } from '@nivo/arcs'\nimport { defaultProps } from './props'\nimport { useSunburst, useSunburstLayerContext } from './hooks'\nimport { SunburstSvgProps, SunburstLayerId, SunburstLayer, ComputedDatum } from './types'\nimport { Arcs } from './Arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\n\ntype InnerSunburstProps<RawDatum> = Partial<\n    Omit<\n        SunburstSvgProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nconst InnerSunburst = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    cornerRadius = defaultProps.cornerRadius,\n    layers = defaultProps.layers as SunburstLayer<RawDatum>[],\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor,\n    margin: partialMargin,\n    width,\n    height,\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsComponent,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    transitionMode = defaultProps.transitionMode,\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n    role = defaultProps.role,\n}: InnerSunburstProps<RawDatum>) => {\n    const { innerHeight, innerWidth, margin, outerHeight, outerWidth } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { centerX, centerY, radius } = useMemo(() => {\n        const radius = Math.min(innerWidth, innerHeight) / 2\n\n        return { radius, centerX: innerWidth / 2, centerY: innerHeight / 2 }\n    }, [innerHeight, innerWidth])\n\n    const { arcGenerator, nodes } = useSunburst({\n        data,\n        id,\n        value,\n        valueFormat,\n        radius,\n        cornerRadius,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const boundDefs = bindDefs(defs, nodes, fill, {\n        dataKey: '.',\n        colorKey: 'color',\n        targetKey: 'fill',\n    })\n\n    const layerById: Record<SunburstLayerId, ReactNode> = {\n        arcs: null,\n        arcLabels: null,\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={nodes}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                transitionMode={transitionMode}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseMove={onMouseMove}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={nodes}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    const layerContext = useSunburstLayerContext<RawDatum>({\n        nodes,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            defs={boundDefs}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as SunburstLayerId] !== undefined) {\n                    return layerById[layer as SunburstLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Sunburst = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: Partial<Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme, renderWrapper }}>\n        <InnerSunburst<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport { partition as d3Partition, hierarchy as d3Hierarchy } from 'd3-hierarchy'\nimport cloneDeep from 'lodash/cloneDeep'\nimport sortBy from 'lodash/sortBy'\nimport { usePropertyAccessor, useTheme, useValueFormatter } from '@nivo/core'\nimport { Arc, useArcGenerator } from '@nivo/arcs'\nimport { useOrdinalColorScale, useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport {\n    SunburstCommonProps,\n    ComputedDatum,\n    DataProps,\n    DatumId,\n    SunburstCustomLayerProps,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useSunburst = <RawDatum>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    radius,\n    cornerRadius = defaultProps.cornerRadius,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n}: {\n    data: DataProps<RawDatum>['data']\n    id?: DataProps<RawDatum>['id']\n    value?: DataProps<RawDatum>['value']\n    valueFormat?: DataProps<RawDatum>['valueFormat']\n    radius: number\n    cornerRadius?: SunburstCommonProps<RawDatum>['cornerRadius']\n    colors?: SunburstCommonProps<RawDatum>['colors']\n    colorBy?: SunburstCommonProps<RawDatum>['colorBy']\n    inheritColorFromParent?: SunburstCommonProps<RawDatum>['inheritColorFromParent']\n    childColor?: SunburstCommonProps<RawDatum>['childColor']\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>>(\n        colors,\n        colorBy\n    )\n    const getChildColor = useInheritedColor<ComputedDatum<RawDatum>>(childColor, theme)\n\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const nodes: ComputedDatum<RawDatum>[] = useMemo(() => {\n        // d3 mutates the data for performance reasons,\n        // however it does not work well with reactive programming,\n        // this ensures that we don't mutate the input data\n        const clonedData = cloneDeep(data)\n\n        const hierarchy = d3Hierarchy(clonedData).sum(getValue)\n\n        const partition = d3Partition<RawDatum>().size([2 * Math.PI, radius * radius])\n        // exclude root node\n        const descendants = partition(hierarchy).descendants().slice(1)\n\n        const total = hierarchy.value ?? 0\n\n        // It's important to sort node by depth,\n        // it ensures that we assign a parent node\n        // which has already been computed, because parent nodes\n        // are going to be computed first\n        const sortedNodes = sortBy(descendants, 'depth')\n\n        return sortedNodes.reduce<ComputedDatum<RawDatum>[]>((acc, descendant) => {\n            const id = getId(descendant.data)\n            // d3 hierarchy node value is optional by default as it depends on\n            // a call to `count()` or `sum()`, and we previously called `sum()`,\n            // d3 typings could be improved and make it non optional when calling\n            // one of those.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const value = descendant.value!\n            const percentage = (100 * value) / total\n            const path = descendant.ancestors().map(ancestor => getId(ancestor.data))\n\n            const arc: Arc = {\n                startAngle: descendant.x0,\n                endAngle: descendant.x1,\n                innerRadius: Math.sqrt(descendant.y0),\n                outerRadius: Math.sqrt(descendant.y1),\n            }\n\n            let parent: ComputedDatum<RawDatum> | undefined\n            if (descendant.parent) {\n                // as the parent is defined by the input data, and we sorted the data\n                // by `depth`, we can safely assume it's defined.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                parent = acc.find(node => node.id === getId(descendant.parent!.data))\n            }\n\n            const normalizedNode: ComputedDatum<RawDatum> = {\n                id,\n                path,\n                value,\n                percentage,\n                formattedValue: valueFormat ? formatValue(value) : `${percentage.toFixed(2)}%`,\n                color: '',\n                arc,\n                data: descendant.data,\n                depth: descendant.depth,\n                height: descendant.height,\n            }\n\n            if (inheritColorFromParent && parent && normalizedNode.depth > 1) {\n                normalizedNode.color = getChildColor(parent, normalizedNode)\n            } else {\n                normalizedNode.color = getColor(normalizedNode)\n            }\n\n            return [...acc, normalizedNode]\n        }, [])\n    }, [\n        data,\n        radius,\n        getValue,\n        getId,\n        valueFormat,\n        formatValue,\n        getColor,\n        inheritColorFromParent,\n        getChildColor,\n    ])\n\n    const arcGenerator = useArcGenerator({ cornerRadius })\n\n    return { arcGenerator, nodes }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useSunburstLayerContext = <RawDatum>({\n    nodes,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n}: SunburstCustomLayerProps<RawDatum>): SunburstCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            nodes,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n        }),\n        [nodes, arcGenerator, centerX, centerY, radius]\n    )\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Sunburst } from './Sunburst'\nimport { SunburstSvgProps } from './types'\n\ntype ResponsiveSunburstProps<RawDatum> = Partial<\n    Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data'>\n\nexport const ResponsiveSunburst = <RawDatum,>(props: ResponsiveSunburstProps<RawDatum>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Sunburst<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { patternLinesDef } from '@nivo/core'\nimport { mapFormat, settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    background: #fff;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    font-size: 12px;\n    border-radius: 2px;\n    box-shadow: 1px 1px 0 rgba(0, 0, 0, 0.15);\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\nconst TooltipValue = styled.span``\n\nconst CustomTooltip = node => {\n    return (\n        <TooltipWrapper style={{ color: node.color }}>\n            <TooltipKey>id</TooltipKey>\n            <TooltipValue>{node.id}</TooltipValue>\n            <TooltipKey>value</TooltipKey>\n            <TooltipValue>{node.value}</TooltipValue>\n            <TooltipKey>percentage</TooltipKey>\n            <TooltipValue>{Math.round(node.percentage * 100) / 100}%</TooltipValue>\n            <TooltipKey>color</TooltipKey>\n            <TooltipValue>{node.color}</TooltipValue>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        arcLabel: value => {\n            if (value === `d => \\`\\${d.id} (\\${d.value})\\``) return d => `${d.id} (${d.value})`\n            return value\n        },\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n        defs: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                patternLinesDef('lines', {\n                    background: 'rgba(0, 0, 0, 0)',\n                    color: 'inherit',\n                    rotation: -45,\n                    lineWidth: 4,\n                    spacing: 8,\n                }),\n            ]\n        },\n        fill: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                { match: { id: 'set' }, id: 'lines' },\n                { match: { id: 'misc' }, id: 'lines' },\n            ]\n        },\n    },\n    {\n        exclude: ['custom tooltip example', 'showcase pattern usage'],\n    }\n)\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n"],"names":["count","node","sum","children","i","length","value","hierarchy","data","child","childs","n","root","Node","valued","nodes","defaultChildren","pop","Array","push","parent","depth","eachBefore","computeHeight","d","copyData","height","this","prototype","constructor","eachAfter","each","callback","current","next","reverse","sort","compare","path","end","start","ancestor","a","b","aNodes","ancestors","bNodes","c","leastCommonAncestor","k","splice","descendants","leaves","links","source","target","copy","x0","Math","round","y0","x1","y1","props","key","group","help","description","type","required","defaultValue","defaultProps","controlType","controlOptions","unit","min","max","step","enableControlForFlavors","themeProperty","choices","label","defsProperties","flavors","map","choice","motionProperties","arcTransitionModes","groups","groupProperties","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","dx","dy","padding","partition","positionNode","x","arguments","size","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","call","id","cornerRadius","layers","colors","scheme","colorBy","inheritColorFromParent","childColor","from","borderWidth","borderColor","enableArcLabels","arcLabel","arcLabelsRadiusOffset","arcLabelsSkipAngle","arcLabelsTextColor","theme","animate","motionConfig","transitionMode","isInteractive","defs","fill","tooltip","formattedValue","color","enableChip","role","_arrayLikeToArray","arr","len","arr2","_toConsumableArray","isArray","arrayLikeToArray","arrayWithoutHoles","iter","Symbol","iterator","iterableToArray","o","minLen","toString","slice","name","test","unsupportedIterableToArray","TypeError","nonIterableSpread","Arcs","center","arcGenerator","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useMemo","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","InnerSunburst","valueFormat","partialMargin","margin","width","arcLabelsComponent","useDimensions","innerHeight","innerWidth","outerHeight","outerWidth","radius","centerX","centerY","useTheme","getColor","useOrdinalColorScale","getChildColor","useInheritedColor","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","clonedData","cloneDeep","d3Hierarchy","d3Partition","total","sortBy","descendant","percentage","arc","startAngle","endAngle","innerRadius","outerRadius","acc","normalizedNode","useArcGenerator","useSunburst","boundDefs","bindDefs","dataKey","colorKey","targetKey","layerById","arcs","arcLabels","radiusOffset","skipAngle","textColor","component","layerContext","useSunburstLayerContext","layer","Sunburst","renderWrapper","otherProps","ResponsiveSunburst","TooltipWrapper","styled","TooltipKey","TooltipValue","CustomTooltip","style","values","patternLinesDef","background","rotation","lineWidth","spacing","match","module","exports","array","iteratee","index","copyObject","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","stack","result","isDeep","isFlat","isFull","isArr","tag","isFunc","stacked","get","set","subValue","add","isObjectLike","castPath","last","toKey","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","symbolProto","symbolValueOf","valueOf","symbol","getSymbols","getSymbolsIn","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseGet","baseSlice","CLONE_DEEP_FLAG","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","arrayMap","baseUnset","customOmitClone","flatRest","paths"],"sourceRoot":""}