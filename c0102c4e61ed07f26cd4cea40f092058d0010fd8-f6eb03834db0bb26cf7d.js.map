{"version":3,"file":"c0102c4e61ed07f26cd4cea40f092058d0010fd8-f6eb03834db0bb26cf7d.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-shape/src/array.js","webpack://nivo-website/../node_modules/d3-shape/src/stack.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/utils.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/AnnotationNote.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../src/AnnotationLink.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://nivo-website/../src/CircleAnnotationOutline.tsx","webpack://nivo-website/../src/DotAnnotationOutline.tsx","webpack://nivo-website/../src/RectAnnotationOutline.tsx","webpack://nivo-website/../src/Annotation.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/BarAnnotations.tsx","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../src/BarTooltip.tsx","webpack://nivo-website/../src/BarLegends.tsx","webpack://nivo-website/../src/BarItem.tsx","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://nivo-website/../../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://nivo-website/../src/compute/common.ts","webpack://nivo-website/../src/compute/grouped.ts","webpack://nivo-website/../src/compute/stacked.ts","webpack://nivo-website/../src/compute/legends.ts","webpack://nivo-website/../src/Bar.tsx","webpack://nivo-website/../src/BarCanvas.tsx","webpack://nivo-website/../src/ResponsiveBar.tsx","webpack://nivo-website/../src/ResponsiveBarCanvas.tsx","webpack://nivo-website/../node_modules/lodash/_baseFilter.js","webpack://nivo-website/../node_modules/lodash/filter.js"],"sourcesContent":["export var slice = Array.prototype.slice;","import { slice } from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function () {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function (_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function (_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function (_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationSpec,\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: Required<AnnotationSpec<Datum>>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    AnnotationSpec,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: Required<AnnotationSpec<Datum>>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: Required<AnnotationSpec<Datum>>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: RawDatum[], keys: string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport { uniqBy } from 'lodash'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport { BarDatum, BarLayer, BarLayerId, BarSvgProps, ComputedBarDatumWithValue } from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { svgDefaultProps } from './props'\nimport { useTransition } from '@react-spring/web'\nimport { useBar } from './hooks'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel,\n    label,\n    labelSkipWidth,\n    labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            bars,\n            xScale,\n            yScale,\n        }),\n        [commonProps, margin, innerWidth, innerHeight, width, height, bars, xScale, yScale]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { BarCanvasLayer, BarCanvasProps, BarDatum, ComputedBarDatum } from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\n\ndeclare module 'react' {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => React.ReactElement | null\n    ): (props: P & React.RefAttributes<T>) => React.ReactElement | null\n}\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel,\n    label,\n    labelSkipWidth,\n    labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            bars,\n            xScale,\n            yScale,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            height,\n            innerHeight,\n            innerWidth,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            margin,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            bars,\n            xScale,\n            yScale,\n            tooltip,\n            width,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: xScale as any,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: yScale as any,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale as any,\n                    yScale: yScale as any,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: Omit<BarSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: Omit<BarCanvasProps<RawDatum>, 'height' | 'width'>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n"],"names":["slice","Array","prototype","stackValue","d","key","keys","order","offset","value","stack","data","i","oz","kz","apply","this","arguments","m","length","n","sz","sij","ki","si","j","index","_","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","target","source","forEach","getOwnPropertyDescriptors","defineProperties","_arrayLikeToArray","arr","len","arr2","_iterableToArray","iter","Symbol","iterator","from","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","toString","call","constructor","name","test","_toConsumableArray","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","TypeError","nonIterableSpread","defaultProps","isCircleAnnotation","annotationSpec","isDotAnnotation","isRectAnnotation","computeAnnotation","x","annotation","y","noteX","noteY","noteWidth","noteTextOffset","computedNoteX","computedNoteY","computedX","computedY","angle","Math","targetY","targetX","absoluteAngleDegrees","radiansToDegrees","getLinkAngle","position","positionFromAngle","degreesToRadians","eighth","textX","noteLineX","points","text","useAnnotations","annotations","getPosition","getDimensions","useMemo","datum","dimensions","size","bindAnnotations","useComputedAnnotations","computed","AnnotationNote","note","theme","useTheme","useMotionConfig","animate","springConfig","animatedProps","useSpring","config","immediate","createElement","style","strokeLinejoin","strokeWidth","stroke","outlineColor","omit","_arrayWithHoles","_nonIterableRest","_slicedToArray","arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","nonIterableRest","AnnotationLink","isOutline","path","firstPoint","animatedPath","useAnimatedPath","fill","CircleAnnotationOutline","radius","cx","cy","r","outline","DotAnnotationOutline","symbol","RectAnnotationOutline","width","height","Annotation","useComputedAnnotation","noteType","isValidElement","isSvgNote","drawPoints","ctx","renderAnnotationsToCanvas","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","centerScale","line","lineX","lineY","textY","isRTL","document","textAlign","textBaseline","translate","ticks","getFormatter","formatter","timeFormat","d3Format","computeGridLines","_values","lines","x1","x2","y1","y2","AxisTick","_value","format","onClick","textAnchor","props","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transition","useTransition","tick","initial","textTransform","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","Number","String","renderAxesToCanvas","renderGridLinesToCanvas","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","BarAnnotations","bars","boundAnnotations","bar","BarLegends","legends","toggleSerie","containerWidth","containerHeight","indexBy","groupMode","layout","reverse","minValue","maxValue","valueScale","type","indexScale","round","padding","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","label","labelSkipWidth","labelSkipHeight","labelTextColor","colorBy","colors","scheme","borderRadius","borderWidth","borderColor","isInteractive","tooltip","color","id","enableChip","tooltipLabel","initialHiddenIds","markers","svgDefaultProps","layers","barComponent","labelColor","labelOpacity","labelX","labelY","shouldRenderLabel","onMouseEnter","onMouseLeave","isFocusable","ariaLabel","ariaLabelledBy","ariaDescribedBy","useTooltip","showTooltipFromEvent","showTooltipAt","hideTooltip","renderTooltip","handleClick","useCallback","handleTooltip","handleMouseEnter","handleMouseLeave","handleFocus","handleBlur","to","rx","ry","focusable","tabIndex","onMouseMove","onFocus","onBlur","fillOpacity","pointerEvents","defs","motionConfig","role","canvasDefaultProps","pixelRatio","window","getIndexScale","computeScale","all","min","max","normalizeData","item","acc","filterNullValues","coerceValue","gt","lt","range","start","repeat","end","clampToZero","generateVerticalGroupedBars","getColor","getIndex","getTooltipLabel","margin","compare","cleanedData","rawValue","indexValue","barWidth","barHeight","yRef","getHeight","barData","formattedValue","hidden","absX","absY","generateHorizontalGroupedBars","xRef","getWidth","generateGroupedBars","indexScaleConfig","hiddenIds","otherAxis","scaleSpec","clampMin","k","entry","isFinite","bandwidth","params","flattenDeep","generateVerticalStackedBars","stackedData","stackedDataItem","getY","generateHorizontalStackedBars","getX","generateStackedBars","array","num","getLegendData","direction","legendLabel","getLegendLabel","getPropertyAccessor","getLegendDataForIndexes","getLegendDataForKeys","useBar","valueFormat","useState","setHiddenIds","usePropertyAccessor","getLabel","useValueFormatter","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelColor","barsWithValue","shouldRenderBarLabel","legendData","legendsWithData","InnerBar","partialMargin","axisTop","axisRight","gridXValues","gridYValues","barAriaLabel","barAriaLabelledBy","barAriaDescribedBy","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","commonProps","boundDefs","bindDefs","dataKey","targetKey","layerById","grid","layerContext","layer","Bar","renderWrapper","otherProps","findBarUnderCursor","nodes","node","isCursorInRect","InnerBarCanvas","renderBar","canvasRef","canvasEl","useRef","useEffect","isNumber","renderLegendToCanvas","handleMouseHover","getRelativeCursor","ref","canvas","BarCanvas","forwardRef","ResponsiveBar","ResponsiveBarCanvas","baseEach","module","exports","collection","predicate","result","arrayFilter","baseFilter","baseIteratee"],"sourceRoot":""}