{"version":3,"file":"67486ca1a39a1ec1564d29c245f0ad4c9cc20ba7-9c016c6fd5aa58d681bf.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-force/src/link.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../src/props.js","webpack://nivo-website/../src/hooks.js","webpack://nivo-website/../node_modules/d3-force/src/manyBody.js","webpack://nivo-website/../node_modules/d3-force/src/center.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nivo-website/../src/Node.js","webpack://nivo-website/../src/AnimatedNodes.js","webpack://nivo-website/../src/StaticNodes.js","webpack://nivo-website/../src/Link.js","webpack://nivo-website/../src/AnimatedLinks.js","webpack://nivo-website/../src/StaticLinks.js","webpack://nivo-website/../src/NetworkNodeTooltip.js","webpack://nivo-website/../src/Network.js","webpack://nivo-website/../src/ResponsiveNetwork.js","webpack://nivo-website/../src/NetworkCanvas.js","webpack://nivo-website/../src/ResponsiveNetworkCanvas.js"],"sourcesContent":["import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function (links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map(function (d, i) {\n      return [id(d, i, nodes), d];\n    })),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function (_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function (_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function (_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function (_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\n\nconst commonPropTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.string.isRequired,\n            target: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['links', 'nodes']), PropTypes.func])\n    ).isRequired,\n\n    linkDistance: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.number])\n        .isRequired,\n    repulsivity: PropTypes.number.isRequired,\n    distanceMin: PropTypes.number.isRequired,\n    distanceMax: PropTypes.number.isRequired,\n    iterations: PropTypes.number.isRequired,\n\n    nodeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    nodeBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    nodeBorderColor: inheritedColorPropType.isRequired,\n\n    linkThickness: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    linkColor: inheritedColorPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n}\n\nexport const NetworkPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n    ...motionPropTypes,\n}\n\nexport const NetworkCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    layers: ['links', 'nodes'],\n\n    linkDistance: 30,\n    repulsivity: 10,\n    distanceMin: 1,\n    distanceMax: Infinity,\n    iterations: 90,\n\n    nodeBorderWidth: 0,\n    nodeBorderColor: { from: 'color' },\n\n    linkThickness: 1,\n    linkColor: { from: 'source.color' },\n\n    isInteractive: true,\n}\n\nexport const NetworkDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const NetworkCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useState, useEffect, useMemo } from 'react'\nimport get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport { forceSimulation, forceManyBody, forceCenter, forceLink } from 'd3-force'\n\nconst computeForces = ({ linkDistance, repulsivity, distanceMin, distanceMax, center }) => {\n    let computedLinkDistance\n    if (typeof linkDistance === 'function') {\n        computedLinkDistance = linkDistance\n    } else if (isNumber(linkDistance)) {\n        computedLinkDistance = linkDistance\n    } else if (isString(linkDistance)) {\n        computedLinkDistance = link => get(link, linkDistance)\n    }\n\n    const linkForce = forceLink()\n        .id(d => d.id)\n        .distance(computedLinkDistance)\n\n    const chargeForce = forceManyBody()\n        .strength(-repulsivity)\n        .distanceMin(distanceMin)\n        .distanceMax(distanceMax)\n\n    const centerForce = forceCenter(center[0], center[1])\n\n    return { link: linkForce, charge: chargeForce, center: centerForce }\n}\n\nexport const useNetwork = ({\n    nodes,\n    links,\n    linkDistance,\n    repulsivity,\n    distanceMin,\n    distanceMax,\n    center,\n    iterations,\n}) => {\n    const [currentNodes, setCurrentNodes] = useState([])\n    const [currentLinks, setCurrentLinks] = useState([])\n\n    useEffect(() => {\n        const forces = computeForces({\n            linkDistance,\n            repulsivity,\n            distanceMin,\n            distanceMax,\n            center,\n        })\n\n        const nodesCopy = nodes.map(node => ({ ...node }))\n        const linksCopy = links.map(link => ({\n            id: `${link.source}.${link.target}`,\n            ...link,\n        }))\n\n        const simulation = forceSimulation(nodesCopy)\n            .force('link', forces.link.links(linksCopy))\n            .force('charge', forces.charge)\n            .force('center', forces.center)\n            .stop()\n\n        simulation.tick(iterations)\n\n        setCurrentNodes(nodesCopy)\n        setCurrentLinks(\n            linksCopy.map(link => {\n                link.previousSource = currentNodes.find(n => n.id === link.source.id)\n                link.previousTarget = currentNodes.find(n => n.id === link.target.id)\n\n                return link\n            })\n        )\n\n        return () => {\n            simulation.stop()\n        }\n    }, [\n        nodes,\n        links,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center[0],\n        center[1],\n    ])\n\n    return [currentNodes, currentLinks]\n}\n\nexport const useNodeColor = color =>\n    useMemo(() => {\n        if (typeof color === 'function') return color\n        return () => color\n    }, [color])\n\nexport const useLinkThickness = thickness =>\n    useMemo(() => {\n        if (typeof thickness === 'function') return thickness\n        return () => thickness\n    }, [thickness])\n","import { quadtree } from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport { x, y } from \"./simulation.js\";\nexport default function () {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i,\n        n = nodes.length,\n        tree = quadtree(nodes, x, y).visitAfter(accumulate);\n\n    for (alpha = _, i = 0; i < n; ++i) {\n      node = nodes[i], tree.visit(apply);\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    strengths = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n    }\n  }\n\n  function accumulate(quad) {\n    var strength = 0,\n        q,\n        c,\n        weight = 0,\n        x,\n        y,\n        i; // For internal nodes, accumulate forces from child quadrants.\n\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n\n      quad.x = x / weight;\n      quad.y = y / weight;\n    } // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n\n      do {\n        strength += strengths[q.data.index];\n      } while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n\n      return true;\n    } // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.\n\n\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do {\n      if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      }\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function (_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function (_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function (_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function (_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}","export default function (x, y) {\n  var nodes,\n      strength = 1;\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Node = ({\n    node,\n    x,\n    y,\n    radius,\n    color,\n    borderWidth,\n    borderColor,\n    scale = 1,\n    handleNodeClick,\n    handleNodeHover,\n    handleNodeLeave,\n}) => {\n    return (\n        <circle\n            transform={`translate(${x},${y}) scale(${scale})`}\n            r={radius}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onClick={event => handleNodeClick(node, event)}\n            onMouseEnter={event => handleNodeHover(node, event)}\n            onMouseMove={event => handleNodeHover(node, event)}\n            onMouseLeave={handleNodeLeave}\n        />\n    )\n}\n\nNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    scale: PropTypes.number,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(Node)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\nimport Node from './Node'\n\nconst willEnter = ({ style }) => ({\n    x: style.x.val,\n    y: style.y.val,\n    radius: style.radius.val,\n    scale: 0,\n})\n\nconst willLeave =\n    springConfig =>\n    ({ style }) => ({\n        x: style.x,\n        y: style.y,\n        radius: style.radius,\n        scale: spring(0, springConfig),\n    })\n\nconst AnimatedNodes = ({ nodes, color, borderColor, ...props }) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            willLeave={willLeave(springConfig)}\n            styles={nodes.map(node => ({\n                key: node.id,\n                data: node,\n                style: {\n                    x: spring(node.x, springConfig),\n                    y: spring(node.y, springConfig),\n                    radius: spring(node.radius, springConfig),\n                    scale: spring(1, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: node }) => {\n                        return (\n                            <Node\n                                key={key}\n                                node={node}\n                                x={style.x}\n                                y={style.y}\n                                radius={Math.max(style.radius, 0)}\n                                color={color(node)}\n                                borderColor={borderColor(node)}\n                                scale={Math.max(style.scale, 0)}\n                                {...props}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Node from './Node'\n\nconst StaticNodes = ({ nodes, color, borderColor, ...props }) => {\n    return nodes.map(node => {\n        return (\n            <Node\n                key={node.id}\n                node={node}\n                x={node.x}\n                y={node.y}\n                radius={node.radius}\n                color={color(node)}\n                borderColor={borderColor(node)}\n                {...props}\n            />\n        )\n    })\n}\n\nStaticNodes.propTypes = {\n    nodes: PropTypes.array.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    handleNodeHover: PropTypes.func.isRequired,\n    handleNodeLeave: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ sourceX, sourceY, targetX, targetY, thickness, color }) => {\n    return (\n        <line\n            stroke={color}\n            strokeWidth={thickness}\n            strokeLinecap=\"round\"\n            x1={sourceX}\n            y1={sourceY}\n            x2={targetX}\n            y2={targetY}\n        />\n    )\n}\n\nLink.propTypes = {\n    link: PropTypes.object.isRequired,\n    sourceX: PropTypes.number.isRequired,\n    sourceY: PropTypes.number.isRequired,\n    targetX: PropTypes.number.isRequired,\n    targetY: PropTypes.number.isRequired,\n    thickness: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n}\n\nexport default memo(Link)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig } from '@nivo/core'\nimport Link from './Link'\n\nconst willEnter = ({ style, data }) => {\n    const sourceX = data.previousSource ? data.previousSource.x : style.sourceX.val\n    const sourceY = data.previousSource ? data.previousSource.y : style.sourceY.val\n\n    return {\n        sourceX,\n        sourceY,\n        targetX: sourceX,\n        targetY: sourceY,\n    }\n}\n\nconst AnimatedLinks = ({ links, linkThickness, linkColor }) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            willEnter={willEnter}\n            styles={links.map(link => ({\n                key: link.id,\n                data: link,\n                style: {\n                    sourceX: spring(link.source.x, springConfig),\n                    sourceY: spring(link.source.y, springConfig),\n                    targetX: spring(link.target.x, springConfig),\n                    targetY: spring(link.target.y, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: link }) => {\n                        return (\n                            <Link\n                                key={key}\n                                link={link}\n                                color={linkColor(link)}\n                                thickness={linkThickness(link)}\n                                sourceX={style.sourceX}\n                                sourceY={style.sourceY}\n                                targetX={style.targetX}\n                                targetY={style.targetY}\n                            />\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(AnimatedLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Link from './Link'\n\nconst StaticLinks = ({ links, linkThickness, linkColor }) => {\n    return links.map(link => {\n        return (\n            <Link\n                key={link.id}\n                link={link}\n                color={linkColor(link)}\n                thickness={linkThickness(link)}\n                sourceX={link.source.x}\n                sourceY={link.source.y}\n                targetX={link.target.x}\n                targetY={link.target.y}\n            />\n        )\n    })\n}\n\nStaticLinks.propTypes = {\n    links: PropTypes.array.isRequired,\n    linkThickness: PropTypes.func.isRequired,\n    linkColor: PropTypes.func.isRequired,\n}\n\nexport default memo(StaticLinks)\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst NetworkNodeTooltip = ({ node, format, tooltip }) => (\n    <BasicTooltip\n        id={node.id}\n        enableChip={true}\n        color={node.color}\n        format={format}\n        renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { ...node }) : null}\n    />\n)\n\nNetworkNodeTooltip.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(NetworkNodeTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, Fragment, useCallback } from 'react'\nimport { withContainer, useDimensions, SvgWrapper, useTheme, useMotionConfig } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { NetworkPropTypes, NetworkDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness } from './hooks'\nimport AnimatedNodes from './AnimatedNodes'\nimport StaticNodes from './StaticNodes'\nimport AnimatedLinks from './AnimatedLinks'\nimport StaticLinks from './StaticLinks'\nimport NetworkNodeTooltip from './NetworkNodeTooltip'\n\nconst Network = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n\n        linkThickness,\n        linkColor,\n\n        tooltip,\n        isInteractive,\n        onClick,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { animate } = useMotionConfig()\n    const theme = useTheme()\n    const getColor = useNodeColor(nodeColor)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleNodeHover = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(<NetworkNodeTooltip node={node} tooltip={tooltip} />, event)\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleNodeLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const layerById = {\n        links: createElement(animate === true ? AnimatedLinks : StaticLinks, {\n            key: 'links',\n            links,\n            linkThickness: getLinkThickness,\n            linkColor: getLinkColor,\n        }),\n        nodes: createElement(animate === true ? AnimatedNodes : StaticNodes, {\n            key: 'nodes',\n            nodes,\n            color: getColor,\n            borderWidth: nodeBorderWidth,\n            borderColor: getBorderColor,\n            handleNodeClick: isInteractive ? onClick : undefined,\n            handleNodeHover: isInteractive ? handleNodeHover : undefined,\n            handleNodeLeave: isInteractive ? handleNodeLeave : undefined,\n        }),\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                nodes,\n                                links,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nNetwork.propTypes = NetworkPropTypes\nNetwork.defaultProps = NetworkDefaultProps\n\nexport default withContainer(Network)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Network from './Network'\n\nconst ResponsiveNetwork = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Network width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetwork\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useRef, useEffect } from 'react'\n\nimport * as React from 'react'\nimport { getDistance, getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { NetworkCanvasPropTypes, NetworkCanvasDefaultProps } from './props'\nimport { useNetwork, useNodeColor, useLinkThickness } from './hooks'\nimport NetworkNodeTooltip from './NetworkNodeTooltip'\n\nconst NetworkCanvas = props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n\n        nodes: rawNodes,\n        links: rawLinks,\n\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n\n        layers,\n\n        nodeColor,\n        nodeBorderWidth,\n        nodeBorderColor,\n\n        linkThickness,\n        linkColor,\n\n        isInteractive,\n        tooltip,\n        onClick,\n    } = props\n\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [nodes, links] = useNetwork({\n        nodes: rawNodes,\n        links: rawLinks,\n        linkDistance,\n        repulsivity,\n        distanceMin,\n        distanceMax,\n        iterations,\n        center: [innerWidth / 2, innerHeight / 2],\n    })\n\n    const theme = useTheme()\n    const getNodeColor = useNodeColor(nodeColor)\n    const getBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkThickness = useLinkThickness(linkThickness)\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'links') {\n                links.forEach(link => {\n                    ctx.strokeStyle = getLinkColor(link)\n                    ctx.lineWidth = getLinkThickness(link)\n                    ctx.beginPath()\n                    ctx.moveTo(link.source.x, link.source.y)\n                    ctx.lineTo(link.target.x, link.target.y)\n                    ctx.stroke()\n                })\n            } else if (layer === 'nodes') {\n                nodes.forEach(node => {\n                    ctx.fillStyle = getNodeColor(node)\n                    ctx.beginPath()\n                    ctx.arc(node.x, node.y, node.radius, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (nodeBorderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(node)\n                        ctx.lineWidth = nodeBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, {\n                    ...props,\n                    nodes,\n                    links,\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        nodes,\n        links,\n        getNodeColor,\n        nodeBorderWidth,\n        getBorderColor,\n        getLinkThickness,\n        getLinkColor,\n    ])\n\n    const getNodeFromMouseEvent = useCallback(\n        (event: MouseEvent) => {\n            if (!canvasEl.current) return null\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n            return nodes.find(node => {\n                const distanceFromNode = getDistance(\n                    node.x,\n                    node.y,\n                    x - margin.left,\n                    y - margin.top\n                )\n                return distanceFromNode <= node.radius\n            })\n        },\n        [canvasEl, margin, nodes]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            const node = getNodeFromMouseEvent(event)\n            if (node) {\n                showTooltipFromEvent(<NetworkNodeTooltip node={node} tooltip={tooltip} />, event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getNodeFromMouseEvent, showTooltipFromEvent, tooltip, hideTooltip]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!onClick) return\n\n            const node = getNodeFromMouseEvent(event)\n            if (node) {\n                onClick(node, event)\n            }\n        },\n        [getNodeFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onClick={isInteractive ? handleClick : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n        />\n    )\n}\n\nNetworkCanvas.propTypes = NetworkCanvasPropTypes\nNetworkCanvas.defaultProps = NetworkCanvasDefaultProps\n\nexport default withContainer(NetworkCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport NetworkCanvas from './NetworkCanvas'\n\nconst ResponsiveNetworkCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <NetworkCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveNetworkCanvas\n"],"names":["index","d","find","nodeById","nodeId","node","get","Error","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","unsupportedIterableToArray","TypeError","nonIterableRest","commonPropTypes","nodes","id","PropTypes","links","layers","linkDistance","repulsivity","distanceMin","distanceMax","iterations","nodeColor","nodeBorderWidth","nodeBorderColor","inheritedColorPropType","linkThickness","linkColor","isInteractive","onClick","commonDefaultProps","role","pixelRatio","NetworkDefaultProps","animate","motionStiffness","motionDamping","NetworkCanvasDefaultProps","window","computeForces","center","isNumber","computedLinkDistance","isString","link","linkForce","strengths","distances","count","bias","random","strength","Math","min","distance","constant","force","alpha","k","x","y","l","b","vx","jiggle","vy","sqrt","initialize","m","Map","map","initializeStrength","initializeDistance","_nodes","_random","_","chargeForce","distanceMin2","distanceMax2","Infinity","theta2","tree","quadtree","visitAfter","accumulate","visit","quad","q","c","weight","abs","data","x1","x2","w","theta","forceManyBody","centerForce","sx","sy","forceCenter","charge","useNetwork","useState","currentNodes","setCurrentNodes","currentLinks","setCurrentLinks","useEffect","forces","nodesCopy","linksCopy","simulation","forceSimulation","useNodeColor","color","useMemo","useLinkThickness","thickness","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","Node","radius","borderWidth","borderColor","scale","handleNodeClick","handleNodeHover","handleNodeLeave","transform","r","fill","strokeWidth","stroke","event","onMouseEnter","onMouseMove","onMouseLeave","memo","willEnter","style","willLeave","springConfig","spring","AnimatedNodes","props","useMotionConfig","styles","interpolatedStyles","StaticNodes","Link","sourceX","sourceY","targetX","targetY","strokeLinecap","y1","y2","AnimatedLinks","StaticLinks","NetworkNodeTooltip","format","tooltip","enableChip","renderContent","Network","width","height","partialMargin","rawNodes","rawLinks","useDimensions","margin","innerWidth","innerHeight","outerWidth","outerHeight","theme","useTheme","getColor","getBorderColor","useInheritedColor","getLinkThickness","getLinkColor","useTooltip","showTooltipFromEvent","hideTooltip","useCallback","layerById","createElement","layer","withContainer","ResponsiveNetwork","NetworkCanvas","canvasEl","useRef","getNodeColor","ctx","getNodeFromMouseEvent","getRelativeCursor","getDistance","handleMouseHover","handleMouseLeave","handleClick","ref","cursor","ResponsiveNetworkCanvas"],"sourceRoot":""}