{"version":3,"file":"component---src-pages-waffle-index-js-b4ba7c8ce8035cf2ea86.js","mappings":"kaAQA,IAAMA,EAAe,iBAAM,CACvB,CACIC,GAAI,MACJC,MAAO,MACPC,MAAuB,GAAhBC,KAAKC,SACZC,MAAO,WAEX,CACIL,GAAI,QACJC,MAAO,QACPC,MAAuB,GAAhBC,KAAKC,SACZC,MAAO,WAEX,CACIL,GAAI,WACJC,MAAO,WACPC,MAAuB,GAAhBC,KAAKC,SACZC,MAAO,aAITC,EAAoB,CACtBC,MAAO,IAEPC,KAAM,GACNC,QAAS,GACTC,cAAe,SACfC,QAAS,EAETC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAGVC,cAAe,UACfC,WAAY,UACZC,aAAc,EACdC,OAAQ,CAAEC,OAAQ,QAClBC,YAAa,EACbC,YAAa,CACTC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3BC,SAAS,EACTC,gBAAiB,GACjBC,cAAe,GAEfC,eAAe,EACf,0BAA0B,EAC1BC,QAAS,KAETC,QAAS,CACL,CACIC,OAAQ,WACRC,UAAW,SACXC,SAAS,EACTC,YAAa,IACbC,WAAY,EACZC,aAAc,EACdC,UAAW,IACXC,WAAY,GACZC,cAAe,gBACfC,YAAa,EACbC,cAAe,OACfC,WAAY,GACZC,QAAS,SAAAC,GACLC,MAAMC,KAAKC,UAAUH,EAAM,KAAM,UAErCI,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHT,cAAe,OACfU,eAAgB,gBAqExC,UA7De,WACX,IAE4CC,GAExCC,EAAAA,EAAAA,gBAAe,cAHfD,MACIE,gBAAmBC,gBAY3B,OACI,SAAC,IAAD,CACIC,KAAK,SACLC,KAAMA,EAAAA,GACNC,KAAK,SACLC,QAASF,EAAAA,GACTG,cAAc,MACdC,WAAYC,EAAAA,EACZC,iBAAkBC,EAAAA,EAClB3D,kBAAmBA,EACnB4D,kBAAmBC,EAAAA,GACnBC,qBAAsB,SAAAN,GAAU,YACzBA,EADyB,CAE5B7C,cAAe6C,EAAW7C,cAAgB,gCAA6BoD,EACvEvC,QAASgC,EAAWhC,QAAU,mCAAgCuC,KAElEtE,aAAcA,EACdsD,MAAOA,EAhBX,SAkBK,SAACS,EAAYjB,EAAMyB,EAAOC,GACvB,OACI,SAAC,KAAD,GACI1B,KAAMA,GACFiB,EAFR,CAGIQ,MAAOA,EACP1B,QAAS,SAAA4B,GACL,IAAIvE,EAEAA,OADoBoE,IAApBG,EAAK3B,KAAK3C,MACCsE,EAAK3B,KAAK5C,MAAhB,KAA0BuE,EAAK3B,KAAK3C,MAApC,eAAwDsE,EAAKC,SAA7D,IAEA,sBAAyBD,EAAKC,SAEvCF,EAAU,CACNG,KAAM,QACNzE,MAAM,UAAWA,EACjBI,MAAOmE,EAAKnE,MACZwC,KAAM2B","sources":["webpack://nivo-website/./src/pages/waffle/index.js"],"sourcesContent":["import React from 'react'\nimport { ResponsiveWaffle, WaffleDefaultProps } from '@nivo/waffle'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/waffle/meta.yml'\nimport { groups } from '../../data/components/waffle/props'\nimport mapper from '../../data/components/waffle/mapper'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst generateData = () => [\n    {\n        id: 'men',\n        label: 'men',\n        value: Math.random() * 33,\n        color: '#468df3',\n    },\n    {\n        id: 'women',\n        label: 'women',\n        value: Math.random() * 33,\n        color: '#ba72ff',\n    },\n    {\n        id: 'children',\n        label: 'children',\n        value: Math.random() * 33,\n        color: '#a1cfff',\n    },\n]\n\nconst initialProperties = {\n    total: 100,\n\n    rows: 18,\n    columns: 14,\n    fillDirection: 'bottom',\n    padding: 1,\n\n    margin: {\n        top: 10,\n        right: 10,\n        bottom: 10,\n        left: 120,\n    },\n\n    cellComponent: 'default',\n    emptyColor: '#cccccc',\n    emptyOpacity: 1,\n    colors: { scheme: 'nivo' },\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.3]],\n    },\n\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 11,\n\n    isInteractive: true,\n    'custom tooltip example': false,\n    tooltip: null,\n\n    legends: [\n        {\n            anchor: 'top-left',\n            direction: 'column',\n            justify: false,\n            translateX: -100,\n            translateY: 0,\n            itemsSpacing: 4,\n            itemWidth: 100,\n            itemHeight: 20,\n            itemDirection: 'left-to-right',\n            itemOpacity: 1,\n            itemTextColor: '#777',\n            symbolSize: 20,\n            onClick: data => {\n                alert(JSON.stringify(data, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000',\n                        itemBackground: '#f7fafb',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Waffle = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/waffle.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <ComponentTemplate\n            name=\"Waffle\"\n            meta={meta.Waffle}\n            icon=\"waffle\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            propertiesMapper={mapper}\n            initialProperties={initialProperties}\n            defaultProperties={WaffleDefaultProps}\n            codePropertiesMapper={properties => ({\n                ...properties,\n                cellComponent: properties.cellComponent ? 'CustomCell(props) => (…)' : undefined,\n                tooltip: properties.tooltip ? 'CustomTooltip(props) => (…)' : undefined,\n            })}\n            generateData={generateData}\n            image={image}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveWaffle\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={node => {\n                            let label\n                            if (node.data.value !== undefined) {\n                                label = `${node.data.label}: ${node.data.value} (position: ${node.position})`\n                            } else {\n                                label = `empty at position: ${node.position}`\n                            }\n                            logAction({\n                                type: 'click',\n                                label: `[cell] ${label}`,\n                                color: node.color,\n                                data: node,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Waffle\n"],"names":["generateData","id","label","value","Math","random","color","initialProperties","total","rows","columns","fillDirection","padding","margin","top","right","bottom","left","cellComponent","emptyColor","emptyOpacity","colors","scheme","borderWidth","borderColor","from","modifiers","animate","motionStiffness","motionDamping","isInteractive","tooltip","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","itemTextColor","symbolSize","onClick","data","alert","JSON","stringify","effects","on","style","itemBackground","image","useStaticQuery","childImageSharp","gatsbyImageData","name","meta","icon","flavors","currentFlavor","properties","groups","propertiesMapper","mapper","defaultProperties","WaffleDefaultProps","codePropertiesMapper","undefined","theme","logAction","node","position","type"],"sourceRoot":""}