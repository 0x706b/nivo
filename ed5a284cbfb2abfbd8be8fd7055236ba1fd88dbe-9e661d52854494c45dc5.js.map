{"version":3,"file":"ed5a284cbfb2abfbd8be8fd7055236ba1fd88dbe-9e661d52854494c45dc5.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-hierarchy/src/array.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/pack/enclose.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/pack/siblings.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/pack/index.js","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/CirclePackingTooltip.tsx","webpack://nivo-website/../src/Circles.tsx","webpack://nivo-website/../src/CircleSvg.tsx","webpack://nivo-website/../src/Labels.tsx","webpack://nivo-website/../src/LabelSvg.tsx","webpack://nivo-website/../src/CirclePacking.tsx","webpack://nivo-website/../src/ResponsiveCirclePacking.tsx","webpack://nivo-website/../src/CircleHtml.tsx","webpack://nivo-website/../src/LabelHtml.tsx","webpack://nivo-website/../src/CirclePackingHtml.tsx","webpack://nivo-website/../src/ResponsiveCirclePackingHtml.tsx","webpack://nivo-website/../src/CirclePackingCanvas.tsx","webpack://nivo-website/../src/ResponsiveCirclePackingCanvas.tsx"],"sourcesContent":["export var slice = Array.prototype.slice;\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}","import { shuffle, slice } from \"../array.js\";\nexport default function (circles) {\n  var i = 0,\n      n = (circles = shuffle(slice.call(circles))).length,\n      B = [],\n      p,\n      e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n  if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.\n\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  } // If we get here then B must have at least two elements.\n\n\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  } // If we get here then something is very wrong.\n\n\n  throw new Error();\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r,\n      dx = b.x - a.x,\n      dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6,\n      dx = b.x - a.x,\n      dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1:\n      return encloseBasis1(B[0]);\n\n    case 2:\n      return encloseBasis2(B[0], B[1]);\n\n    case 3:\n      return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x,\n      y1 = a.y,\n      r1 = a.r,\n      x2 = b.x,\n      y2 = b.y,\n      r2 = b.r,\n      x21 = x2 - x1,\n      y21 = y2 - y1,\n      r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x,\n      y1 = a.y,\n      r1 = a.r,\n      x2 = b.x,\n      y2 = b.y,\n      r2 = b.r,\n      x3 = c.x,\n      y3 = c.y,\n      r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}","import enclose from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x,\n      x,\n      a2,\n      dy = b.y - a.y,\n      y,\n      b2,\n      d2 = dx * dx + dy * dy;\n\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6,\n      dx = b.x - a.x,\n      dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.\n\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r; // Place the second circle.\n\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r; // Place the third circle.\n\n  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.\n\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a; // Attempt to place each remaining circle…\n\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next); // Success! Insert the new circle c between a and b.\n\n\n    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.\n\n    aa = score(a);\n\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n\n    b = a.next;\n  } // Compute the enclosing circle of the front chain.\n\n\n  a = [b._], c = b;\n\n  while ((c = c.next) !== b) {\n    a.push(c._);\n  }\n\n  c = enclose(a); // Translate the circles to put the enclosing circle around the origin.\n\n  for (i = 0; i < n; ++i) {\n    a = circles[i], a.x -= c.x, a.y -= c.y;\n  }\n\n  return c.r;\n}\nexport default function (circles) {\n  packEnclose(circles);\n  return circles;\n}","import { packEnclose } from \"./siblings.js\";\nimport { optional } from \"../accessors.js\";\nimport constant, { constantZero } from \"../constant.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function () {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n\n    return root;\n  }\n\n  pack.radius = function (x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function (x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function (node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function (node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n      if (r) for (i = 0; i < n; ++i) {\n        children[i].r += r;\n      }\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) {\n        children[i].r -= r;\n      }\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function (node) {\n    var parent = node.parent;\n    node.r *= k;\n\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}","import { useMemo, MouseEvent, MutableRefObject, useCallback } from 'react'\nimport { pack as d3Pack, hierarchy as d3Hierarchy } from 'd3-hierarchy'\nimport cloneDeep from 'lodash/cloneDeep'\nimport sortBy from 'lodash/sortBy'\nimport {\n    usePropertyAccessor,\n    useValueFormatter,\n    useTheme,\n    getRelativeCursor,\n    getDistance,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    CirclePackingCommonProps,\n    CirclePackingCustomLayerProps,\n    ComputedDatum,\n    MouseHandlers,\n} from './types'\n\nexport const useCirclePacking = <RawDatum>({\n    data,\n    id,\n    value,\n    valueFormat,\n    width,\n    height,\n    padding,\n    leavesOnly,\n    colors,\n    colorBy,\n    inheritColorFromParent,\n    childColor,\n}: {\n    data: CirclePackingCommonProps<RawDatum>['data']\n    id: CirclePackingCommonProps<RawDatum>['id']\n    value: CirclePackingCommonProps<RawDatum>['value']\n    valueFormat?: CirclePackingCommonProps<RawDatum>['valueFormat']\n    width: number\n    height: number\n    padding: CirclePackingCommonProps<RawDatum>['padding']\n    leavesOnly: CirclePackingCommonProps<RawDatum>['leavesOnly']\n    colors: CirclePackingCommonProps<RawDatum>['colors']\n    colorBy: CirclePackingCommonProps<RawDatum>['colorBy']\n    inheritColorFromParent: CirclePackingCommonProps<RawDatum>['inheritColorFromParent']\n    childColor: CirclePackingCommonProps<RawDatum>['childColor']\n}): ComputedDatum<RawDatum>[] => {\n    const getId = usePropertyAccessor<RawDatum, string>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>>(\n        colors,\n        colorBy\n    )\n    const theme = useTheme()\n    const getChildColor = useInheritedColor<ComputedDatum<RawDatum>>(childColor, theme)\n\n    // d3 mutates the data for performance reasons,\n    // however it does not work well with reactive programming,\n    // this ensures that we don't mutate the input data\n    const clonedData = cloneDeep(data)\n\n    const hierarchy = d3Hierarchy<RawDatum>(clonedData).sum(getValue)\n\n    const pack = d3Pack<RawDatum>().size([width, height]).padding(padding)\n    const packedData = pack(hierarchy)\n\n    const nodes = leavesOnly ? packedData.leaves() : packedData.descendants()\n\n    // It's important to sort node by depth,\n    // it ensures that we assign a parent node\n    // which has already been computed, because parent nodes\n    // are gonna be computed first\n    const sortedNodes = sortBy(nodes, 'depth')\n\n    const total = hierarchy.value ?? 0\n\n    const computedNodes = sortedNodes.reduce<ComputedDatum<RawDatum>[]>((acc, descendant) => {\n        const id = getId(descendant.data)\n        const value = descendant.value!\n        const percentage = (100 * value) / total\n        const path = descendant.ancestors().map(ancestor => getId(ancestor.data))\n\n        let parent: ComputedDatum<RawDatum> | undefined\n        if (descendant.parent) {\n            parent = acc.find(node => node.id === getId(descendant.parent!.data))\n        }\n\n        const normalizedNode: ComputedDatum<RawDatum> = {\n            id,\n            path,\n            value,\n            percentage,\n            formattedValue: valueFormat ? formatValue(value) : `${percentage.toFixed(2)}%`,\n            x: descendant.x,\n            y: descendant.y,\n            radius: descendant.r,\n            color: '',\n            data: descendant.data,\n            depth: descendant.depth,\n            height: descendant.height,\n        }\n\n        if (inheritColorFromParent && parent && normalizedNode.depth > 1) {\n            normalizedNode.color = getChildColor(parent)\n        } else {\n            normalizedNode.color = getColor(normalizedNode)\n        }\n\n        return [...acc, normalizedNode]\n    }, [])\n\n    return computedNodes\n}\n\nexport const useCirclePackingZoom = <RawDatum>(\n    nodes: ComputedDatum<RawDatum>[],\n    zoomedId: CirclePackingCommonProps<RawDatum>['zoomedId'],\n    width: number,\n    height: number\n) =>\n    useMemo(() => {\n        if (!zoomedId) return nodes\n\n        const zoomedNode = nodes.find(({ id }) => id === zoomedId)\n        if (!zoomedNode) return nodes\n\n        const ratio = Math.min(width, height) / (zoomedNode.radius * 2)\n        const offsetX = width / 2 - zoomedNode.x * ratio\n        const offsetY = height / 2 - zoomedNode.y * ratio\n\n        return nodes.map(node => ({\n            ...node,\n            x: node.x * ratio + offsetX,\n            y: node.y * ratio + offsetY,\n            radius: node.radius * ratio,\n        }))\n    }, [nodes, zoomedId, width, height])\n\nexport const useCirclePackingLabels = <RawDatum>({\n    nodes,\n    label,\n    filter,\n    skipRadius,\n    textColor,\n}: {\n    nodes: ComputedDatum<RawDatum>[]\n    label: CirclePackingCommonProps<RawDatum>['label']\n    filter: CirclePackingCommonProps<RawDatum>['labelsFilter']\n    skipRadius: CirclePackingCommonProps<RawDatum>['labelsSkipRadius']\n    textColor: CirclePackingCommonProps<RawDatum>['labelTextColor']\n}) => {\n    const getLabel = usePropertyAccessor<ComputedDatum<RawDatum>, string | number>(label)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<ComputedDatum<RawDatum>>(textColor, theme)\n\n    // computing the labels\n    const labels = useMemo(\n        () =>\n            nodes\n                .filter(node => node.radius >= skipRadius)\n                .map(node => ({\n                    label: getLabel(node),\n                    textColor: getTextColor(node),\n                    node,\n                })),\n        [nodes, skipRadius, getLabel, getTextColor]\n    )\n\n    // apply extra filtering if provided\n    return useMemo(() => {\n        if (!filter) return labels\n\n        return labels.filter(filter)\n    }, [labels, filter])\n}\n\nexport const useNodeMouseHandlers = <RawDatum>(\n    node: ComputedDatum<RawDatum>,\n    { onMouseEnter, onMouseMove, onMouseLeave, onClick }: MouseHandlers<RawDatum>\n): Partial<\n    Record<'onMouseEnter' | 'onMouseMove' | 'onMouseLeave' | 'onClick', (event: MouseEvent) => void>\n> =>\n    useMemo(\n        () => ({\n            onMouseEnter: onMouseEnter\n                ? (event: MouseEvent) => {\n                      onMouseEnter(node, event)\n                  }\n                : undefined,\n            onMouseMove: onMouseMove\n                ? (event: MouseEvent) => {\n                      onMouseMove(node, event)\n                  }\n                : undefined,\n            onMouseLeave: onMouseLeave\n                ? (event: MouseEvent) => {\n                      onMouseLeave(node, event)\n                  }\n                : undefined,\n            onClick: onClick\n                ? (event: MouseEvent) => {\n                      onClick(node, event)\n                  }\n                : undefined,\n        }),\n        [node, onMouseEnter, onMouseMove, onMouseLeave, onClick]\n    )\n\nexport const useMouseCircleDetection = <RawDatum>({\n    nodes,\n    canvasEl,\n    margin,\n}: {\n    nodes: ComputedDatum<RawDatum>[]\n    canvasEl: MutableRefObject<HTMLCanvasElement | null>\n    margin: {\n        top: number\n        left: number\n    }\n}) => {\n    // we need to sort in order to detect higher nodes first\n    const sortedNodes = useMemo(() => sortBy(nodes, 'height'), [nodes])\n\n    return useCallback(\n        (event: MouseEvent) => {\n            if (!canvasEl.current) return null\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n            return sortedNodes.find(node => {\n                const distanceFromNode = getDistance(\n                    node.x,\n                    node.y,\n                    x - margin.left,\n                    y - margin.top\n                )\n                return distanceFromNode <= node.radius\n            })\n        },\n        [canvasEl, margin, sortedNodes]\n    )\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useCirclePackingLayerContext = <RawDatum>({\n    nodes,\n}: {\n    nodes: ComputedDatum<RawDatum>[]\n}): CirclePackingCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            nodes,\n        }),\n        [nodes]\n    )\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { CirclePackingLayerId } from './types'\nimport { CirclePackingTooltip } from './CirclePackingTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    padding: 0,\n    leavesOnly: false,\n    layers: ['circles', 'labels'] as CirclePackingLayerId[],\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n    colorBy: 'depth' as const,\n    inheritColorFromParent: false,\n    childColor: {\n        from: 'color',\n        modifiers: [['darker', 0.3]],\n    },\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.3]],\n    },\n    defs: [],\n    fill: [],\n    enableLabels: false,\n    label: 'id',\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1.6]],\n    },\n    labelsSkipRadius: 8,\n    isInteractive: true,\n    tooltip: CirclePackingTooltip,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const CirclePackingTooltip = <RawDatum,>({\n    id,\n    formattedValue,\n    color,\n}: ComputedDatum<RawDatum>) => (\n    <BasicTooltip id={id} value={formattedValue} enableChip={true} color={color} />\n)\n","import { createElement, useMemo, MouseEvent } from 'react'\nimport * as React from 'react'\nimport { useTransition, to, SpringValue } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CircleComponent, MouseHandlers, CirclePackingCommonProps } from './types'\n\n/**\n * A negative radius value is invalid for an SVG circle,\n * this custom interpolation makes sure it's either\n * positive or zero.\n */\nexport const interpolateRadius = (radiusValue: SpringValue<number>) =>\n    to([radiusValue], radius => Math.max(0, radius))\n\ntype CirclesProps<RawDatum> = {\n    nodes: ComputedDatum<RawDatum>[]\n    borderWidth: CirclePackingCommonProps<RawDatum>['borderWidth']\n    borderColor: CirclePackingCommonProps<RawDatum>['borderColor']\n    component: CircleComponent<RawDatum>\n    isInteractive: CirclePackingCommonProps<RawDatum>['isInteractive']\n    tooltip: CirclePackingCommonProps<RawDatum>['tooltip']\n} & MouseHandlers<RawDatum>\n\nconst getTransitionPhases = <RawDatum,>(\n    getBorderColor: (node: ComputedDatum<RawDatum>) => string\n) => ({\n    enter: (node: ComputedDatum<RawDatum>) => ({\n        x: node.x,\n        y: node.y,\n        radius: 0,\n        color: node.color,\n        borderColor: getBorderColor(node),\n        opacity: 0,\n    }),\n    update: (node: ComputedDatum<RawDatum>) => ({\n        x: node.x,\n        y: node.y,\n        radius: node.radius,\n        color: node.color,\n        borderColor: getBorderColor(node),\n        opacity: 1,\n    }),\n    leave: (node: ComputedDatum<RawDatum>) => ({\n        x: node.x,\n        y: node.y,\n        radius: 0,\n        color: node.color,\n        borderColor: getBorderColor(node),\n        opacity: 0,\n    }),\n})\n\nexport const Circles = <RawDatum,>({\n    nodes,\n    borderWidth,\n    borderColor,\n    component,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: CirclesProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, node), event)\n            onMouseEnter?.(node, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, node), event)\n            onMouseMove?.(node, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            hideTooltip()\n            onMouseLeave?.(node, event)\n        }\n    }, [isInteractive, hideTooltip, onMouseLeave])\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            onClick?.(node, event)\n        }\n    }, [isInteractive, onClick])\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const transitionPhases = useMemo(\n        () => getTransitionPhases<RawDatum>(getBorderColor),\n        [getBorderColor]\n    )\n\n    const transition = useTransition<\n        ComputedDatum<RawDatum>,\n        {\n            x: number\n            y: number\n            radius: number\n            color: string\n            borderColor: string\n            opacity: number\n        }\n    >(nodes, {\n        keys: node => node.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((transitionProps, node) => {\n                return React.createElement(component, {\n                    key: node.id,\n                    node,\n                    style: {\n                        ...transitionProps,\n                        radius: interpolateRadius(transitionProps.radius),\n                        borderWidth,\n                    },\n                    onMouseEnter: handleMouseEnter,\n                    onMouseMove: handleMouseMove,\n                    onMouseLeave: handleMouseLeave,\n                    onClick: handleClick,\n                })\n            })}\n        </>\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { CircleProps } from './types'\nimport { useNodeMouseHandlers } from './hooks'\n\nexport const CircleSvg = <RawDatum,>({\n    node,\n    style,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: CircleProps<RawDatum>) => {\n    const handlers = useNodeMouseHandlers<RawDatum>(node, {\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    })\n\n    return (\n        <animated.circle\n            key={node.id}\n            cx={style.x}\n            cy={style.y}\n            r={style.radius}\n            fill={node.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            opacity={style.opacity}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n","import { createElement, useMemo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { CirclePackingCommonProps, ComputedDatum, LabelComponent, ComputedLabel } from './types'\nimport { useCirclePackingLabels } from './hooks'\nimport { interpolateRadius } from './Circles'\n\ninterface CirclesProps<RawDatum> {\n    nodes: ComputedDatum<RawDatum>[]\n    label: CirclePackingCommonProps<RawDatum>['label']\n    filter?: CirclePackingCommonProps<RawDatum>['labelsFilter']\n    skipRadius: CirclePackingCommonProps<RawDatum>['labelsSkipRadius']\n    textColor: CirclePackingCommonProps<RawDatum>['labelTextColor']\n    component: LabelComponent<RawDatum>\n}\n\nconst getTransitionPhases = <RawDatum,>() => ({\n    enter: (label: ComputedLabel<RawDatum>) => ({\n        x: label.node.x,\n        y: label.node.y,\n        radius: label.node.radius,\n        textColor: label.textColor,\n        opacity: 0,\n    }),\n    update: (label: ComputedLabel<RawDatum>) => ({\n        x: label.node.x,\n        y: label.node.y,\n        radius: label.node.radius,\n        textColor: label.textColor,\n        opacity: 1,\n    }),\n    leave: (label: ComputedLabel<RawDatum>) => ({\n        x: label.node.x,\n        y: label.node.y,\n        radius: label.node.radius,\n        textColor: label.textColor,\n        opacity: 0,\n    }),\n})\n\nexport const Labels = <RawDatum,>({\n    nodes,\n    label,\n    filter,\n    skipRadius,\n    textColor,\n    component,\n}: CirclesProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useCirclePackingLabels({\n        nodes,\n        label,\n        filter,\n        skipRadius,\n        textColor,\n    })\n\n    const transitionPhases = useMemo(() => getTransitionPhases<RawDatum>(), [])\n\n    const transition = useTransition<\n        ComputedLabel<RawDatum>,\n        {\n            x: number\n            y: number\n            radius: number\n            textColor: string\n            opacity: number\n        }\n    >(labels, {\n        keys: label => label.node.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((transitionProps, label) => {\n                return createElement(component, {\n                    key: label.node.id,\n                    label: label.label,\n                    style: {\n                        ...transitionProps,\n                        radius: interpolateRadius(transitionProps.radius),\n                    },\n                    node: label.node,\n                })\n            })}\n        </>\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { LabelProps } from './types'\n\nexport const LabelSvg = <RawDatum,>({ node, label, style }: LabelProps<RawDatum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.text\n            key={node.id}\n            x={style.x}\n            y={style.y}\n            textAnchor=\"middle\"\n            dominantBaseline=\"central\"\n            style={{\n                ...theme.labels.text,\n                fill: style.textColor,\n                opacity: style.opacity,\n                pointerEvents: 'none',\n            }}\n        >\n            {label}\n        </animated.text>\n    )\n}\n","import { createElement, Fragment, ReactNode, useMemo } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { CirclePackingLayerId, CirclePackingSvgProps, ComputedDatum } from './types'\nimport { useCirclePacking, useCirclePackingZoom, useCirclePackingLayerContext } from './hooks'\nimport { defaultProps } from './props'\nimport { Circles } from './Circles'\nimport { CircleSvg } from './CircleSvg'\nimport { Labels } from './Labels'\nimport { LabelSvg } from './LabelSvg'\n\ntype InnerCirclePackingProps<RawDatum> = Partial<\n    Omit<\n        CirclePackingSvgProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nconst InnerCirclePacking = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    width,\n    height,\n    margin: partialMargin,\n    padding = defaultProps.padding,\n    leavesOnly = defaultProps.leavesOnly,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>\n    >,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    circleComponent = CircleSvg,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    enableLabels = defaultProps.enableLabels,\n    label = defaultProps.label,\n    labelsFilter,\n    labelsSkipRadius = defaultProps.labelsSkipRadius,\n    labelTextColor = defaultProps.labelTextColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    labelComponent = LabelSvg,\n    layers = defaultProps.layers,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = defaultProps.tooltip,\n    zoomedId,\n    role = defaultProps.role,\n}: InnerCirclePackingProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const nodes = useCirclePacking<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        leavesOnly,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const zoomedNodes = useCirclePackingZoom<RawDatum>(nodes, zoomedId, innerWidth, innerHeight)\n\n    const boundDefs = useMemo(\n        () => bindDefs(defs, zoomedNodes, fill, { targetKey: 'fill' }),\n        [defs, zoomedNodes, fill]\n    )\n\n    const layerById: Record<CirclePackingLayerId, ReactNode> = {\n        circles: null,\n        labels: null,\n    }\n\n    if (layers.includes('circles')) {\n        layerById.circles = (\n            <Circles<RawDatum>\n                key=\"circles\"\n                nodes={zoomedNodes}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                component={circleComponent}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (enableLabels && layers.includes('labels')) {\n        layerById.labels = (\n            <Labels<RawDatum>\n                key=\"labels\"\n                nodes={zoomedNodes}\n                label={label}\n                filter={labelsFilter}\n                skipRadius={labelsSkipRadius}\n                textColor={labelTextColor}\n                component={labelComponent}\n            />\n        )\n    }\n\n    const layerContext = useCirclePackingLayerContext<RawDatum>({\n        nodes,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as CirclePackingLayerId] !== undefined) {\n                    return layerById[layer as CirclePackingLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const CirclePacking = <RawDatum,>({\n    theme,\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    renderWrapper,\n    ...otherProps\n}: Partial<Omit<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container\n        isInteractive={isInteractive}\n        animate={animate}\n        motionConfig={motionConfig}\n        renderWrapper={renderWrapper}\n        theme={theme}\n    >\n        <InnerCirclePacking<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CirclePackingSvgProps } from './types'\nimport { CirclePacking } from './CirclePacking'\n\ntype ResponsiveCirclePackingProps<RawDatum> = Partial<\n    Omit<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<CirclePackingSvgProps<RawDatum>, 'data'>\n\nexport const ResponsiveCirclePacking = <RawDatum,>(\n    props: ResponsiveCirclePackingProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <CirclePacking<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { animated, to, SpringValue, Interpolation } from '@react-spring/web'\nimport { CircleProps } from './types'\nimport { useNodeMouseHandlers } from './hooks'\n\nexport const interpolatePosition = (\n    positionValue: SpringValue<number>,\n    radiusValue: Interpolation<number>\n) => to([positionValue, radiusValue], (position, radius) => position - radius)\n\nexport const interpolateSize = (radiusValue: Interpolation<number>) =>\n    to([radiusValue], radius => radius * 2)\n\nexport const interpolateBorderWidth = (borderWidth: number, radiusValue: Interpolation<number>) =>\n    to([radiusValue], radius => Math.min(borderWidth, radius))\n\nexport const CircleHtml = <RawDatum,>({\n    node,\n    style,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: CircleProps<RawDatum>) => {\n    const size = interpolateSize(style.radius)\n\n    const handlers = useNodeMouseHandlers<RawDatum>(node, {\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    })\n\n    return (\n        <animated.div\n            style={{\n                position: 'absolute',\n                top: interpolatePosition(style.y, style.radius),\n                left: interpolatePosition(style.x, style.radius),\n                height: size,\n                width: size,\n                borderRadius: style.radius,\n                backgroundColor: style.color,\n                borderWidth: interpolateBorderWidth(style.borderWidth, style.radius),\n                borderStyle: 'solid',\n                borderColor: style.borderColor,\n                boxSizing: 'border-box',\n            }}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { LabelProps } from './types'\nimport { interpolatePosition, interpolateSize } from './CircleHtml'\n\nexport const LabelHtml = <RawDatum,>({ node, label, style }: LabelProps<RawDatum>) => {\n    const theme = useTheme()\n    const size = interpolateSize(style.radius)\n\n    return (\n        <animated.div\n            key={node.id}\n            style={{\n                ...theme.labels.text,\n                position: 'absolute',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                top: interpolatePosition(style.y, style.radius),\n                left: interpolatePosition(style.x, style.radius),\n                width: size,\n                height: size,\n                color: style.textColor,\n                opacity: style.opacity,\n                pointerEvents: 'none',\n            }}\n        >\n            {label}\n        </animated.div>\n    )\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, useDimensions } from '@nivo/core'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { CirclePackingHtmlProps, CirclePackingLayerId, ComputedDatum } from './types'\nimport { useCirclePacking, useCirclePackingLayerContext, useCirclePackingZoom } from './hooks'\nimport { Circles } from './Circles'\nimport { CircleHtml } from './CircleHtml'\nimport { defaultProps } from './props'\nimport { Labels } from './Labels'\nimport { LabelHtml } from './LabelHtml'\n\ntype InnerCirclePackingHtmlProps<RawDatum> = Partial<\n    Omit<\n        CirclePackingHtmlProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nexport const InnerCirclePackingHtml = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    width,\n    height,\n    margin: partialMargin,\n    padding = defaultProps.padding,\n    leavesOnly = defaultProps.leavesOnly,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>\n    >,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    circleComponent = CircleHtml,\n    enableLabels = defaultProps.enableLabels,\n    label = defaultProps.label,\n    labelsFilter,\n    labelsSkipRadius = defaultProps.labelsSkipRadius,\n    labelTextColor = defaultProps.labelTextColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    labelComponent = LabelHtml,\n    layers = defaultProps.layers,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = defaultProps.tooltip,\n    zoomedId,\n    role = defaultProps.role,\n}: InnerCirclePackingHtmlProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const nodes = useCirclePacking<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        leavesOnly,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const zoomedNodes = useCirclePackingZoom<RawDatum>(nodes, zoomedId, innerWidth, innerHeight)\n\n    const layerById: Record<CirclePackingLayerId, ReactNode> = {\n        circles: null,\n        labels: null,\n    }\n\n    if (layers.includes('circles')) {\n        layerById.circles = (\n            <Circles<RawDatum>\n                key=\"circles\"\n                nodes={zoomedNodes}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                component={circleComponent}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (enableLabels && layers.includes('labels')) {\n        layerById.labels = (\n            <Labels<RawDatum>\n                key=\"labels\"\n                nodes={zoomedNodes}\n                label={label}\n                filter={labelsFilter}\n                skipRadius={labelsSkipRadius}\n                textColor={labelTextColor}\n                component={labelComponent}\n            />\n        )\n    }\n\n    const layerContext = useCirclePackingLayerContext<RawDatum>({\n        nodes,\n    })\n\n    return (\n        <div\n            role={role}\n            style={{\n                position: 'relative',\n                overflow: 'hidden',\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        >\n            <div\n                style={{\n                    position: 'absolute',\n                    top: margin.top,\n                    left: margin.left,\n                }}\n            >\n                {layers.map((layer, i) => {\n                    if (layerById[layer as CirclePackingLayerId] !== undefined) {\n                        return layerById[layer as CirclePackingLayerId]\n                    }\n\n                    if (typeof layer === 'function') {\n                        return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                    }\n\n                    return null\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport const CirclePackingHtml = <RawDatum,>({\n    theme,\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    ...otherProps\n}: Partial<Omit<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container\n        isInteractive={isInteractive}\n        animate={animate}\n        motionConfig={motionConfig}\n        theme={theme}\n    >\n        <InnerCirclePackingHtml<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CirclePackingHtmlProps } from './types'\nimport { CirclePackingHtml } from './CirclePackingHtml'\n\ntype ResponsiveCirclePackingHtmlProps<RawDatum> = Partial<\n    Omit<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<CirclePackingHtmlProps<RawDatum>, 'data'>\n\nexport const ResponsiveCirclePackingHtml = <RawDatum,>(\n    props: ResponsiveCirclePackingHtmlProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <CirclePackingHtml<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { useCallback, useEffect, useRef, createElement } from 'react'\nimport * as React from 'react'\nimport { useDimensions, useTheme, Container } from '@nivo/core'\nimport { InheritedColorConfig, OrdinalColorScaleConfig, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { CirclePackingCanvasProps, ComputedDatum } from './types'\nimport { defaultProps } from './props'\nimport {\n    useCirclePacking,\n    useCirclePackingZoom,\n    useCirclePackingLabels,\n    useMouseCircleDetection,\n} from './hooks'\n\ntype InnerCirclePackingCanvasProps<RawDatum> = Partial<\n    Omit<\n        CirclePackingCanvasProps<RawDatum>,\n        'data' | 'width' | 'height' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>\n\nconst InnerCirclePackingCanvas = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    width,\n    height,\n    margin: partialMargin,\n    padding = defaultProps.padding,\n    leavesOnly = defaultProps.leavesOnly,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>\n    >,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    enableLabels = defaultProps.enableLabels,\n    label = defaultProps.label,\n    labelsFilter,\n    labelsSkipRadius = defaultProps.labelsSkipRadius,\n    labelTextColor = defaultProps.labelTextColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    isInteractive,\n    onMouseMove,\n    onClick,\n    tooltip = defaultProps.tooltip,\n    zoomedId,\n    role = defaultProps.role,\n    pixelRatio = defaultProps.pixelRatio,\n}: InnerCirclePackingCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const nodes = useCirclePacking<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        leavesOnly,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const zoomedNodes = useCirclePackingZoom<RawDatum>(nodes, zoomedId, innerWidth, innerHeight)\n\n    const labels = useCirclePackingLabels({\n        nodes: zoomedNodes,\n        label,\n        filter: labelsFilter,\n        skipRadius: labelsSkipRadius,\n        textColor: labelTextColor,\n    })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n\n        zoomedNodes.forEach(node => {\n            if (borderWidth > 0) {\n                ctx.strokeStyle = getBorderColor(node)\n                ctx.lineWidth = borderWidth\n            }\n\n            ctx.beginPath()\n            ctx.arc(node.x, node.y, node.radius, 0, 2 * Math.PI)\n            ctx.fillStyle = node.color\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableLabels) {\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            labels.forEach(label => {\n                ctx.fillStyle = label.textColor\n                ctx.fillText(`${label.label}`, label.node.x, label.node.y)\n            })\n        }\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        theme,\n        pixelRatio,\n        zoomedNodes,\n        enableLabels,\n        labels,\n        borderWidth,\n        getBorderColor,\n    ])\n\n    const getNodeFromMouseEvent = useMouseCircleDetection<RawDatum>({\n        nodes: zoomedNodes,\n        canvasEl,\n        margin,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            const node = getNodeFromMouseEvent(event)\n            if (node) {\n                onMouseMove?.(node, event)\n                showTooltipFromEvent(createElement(tooltip, node), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getNodeFromMouseEvent, showTooltipFromEvent, tooltip, hideTooltip]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!onClick) return\n\n            const node = getNodeFromMouseEvent(event)\n            if (node) {\n                onClick(node, event)\n            }\n        },\n        [getNodeFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            role={role}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const CirclePackingCanvas = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    ...otherProps\n}: Partial<Omit<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container isInteractive={isInteractive} theme={theme}>\n        <InnerCirclePackingCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CirclePackingCanvasProps } from './types'\nimport { CirclePackingCanvas } from './CirclePackingCanvas'\n\ntype ResponsiveCirclePackingCanvasProps<RawDatum> = Partial<\n    Omit<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<CirclePackingCanvasProps<RawDatum>, 'data'>\n\nexport const ResponsiveCirclePackingCanvas = <RawDatum,>(\n    props: ResponsiveCirclePackingCanvasProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <CirclePackingCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"names":["slice","Array","prototype","circles","p","e","i","n","array","t","m","length","Math","random","shuffle","call","B","enclosesWeak","encloseBasis","extendBasis","j","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","Error","a","b","dr","r","dx","x","dy","y","x1","y1","r1","x2","y2","r2","x21","y21","r21","l","sqrt","c","x3","y3","r3","a2","a3","b2","b3","c2","c3","d1","d2","d3","ab","xa","xb","ya","yb","A","C","place","max","intersects","score","node","_","next","Node","circle","this","previous","packEnclose","aa","ca","k","sj","sk","pack","push","enclose","defaultRadius","d","value","radiusLeaf","radius","children","packChildren","padding","translateChild","parent","useCirclePacking","data","id","valueFormat","width","height","leavesOnly","colors","colorBy","inheritColorFromParent","childColor","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","theme","useTheme","getChildColor","useInheritedColor","clonedData","cloneDeep","hierarchy","d3Hierarchy","sum","packedData","constant","root","eachBefore","eachAfter","min","arguments","size","d3Pack","nodes","leaves","descendants","sortedNodes","sortBy","total","computedNodes","reduce","acc","descendant","percentage","path","ancestors","map","ancestor","find","normalizedNode","formattedValue","toFixed","color","depth","useCirclePackingZoom","zoomedId","useMemo","zoomedNode","ratio","offsetX","offsetY","useCirclePackingLabels","label","filter","skipRadius","textColor","getLabel","getTextColor","labels","useNodeMouseHandlers","onMouseEnter","onMouseMove","onMouseLeave","onClick","event","useCirclePackingLayerContext","defaultProps","layers","scheme","from","modifiers","borderWidth","borderColor","defs","fill","enableLabels","labelTextColor","labelsSkipRadius","isInteractive","tooltip","_jsx","BasicTooltip","enableChip","animate","motionConfig","role","pixelRatio","window","devicePixelRatio","interpolateRadius","radiusValue","to","Circles","component","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","handleClick","useMotionConfig","springConfig","config","getBorderColor","transitionPhases","enter","opacity","update","leave","transition","useTransition","keys","initial","immediate","transitionProps","React","key","style","CircleSvg","handlers","animated","cx","cy","stroke","strokeWidth","Labels","LabelSvg","text","textAnchor","dominantBaseline","pointerEvents","InnerCirclePacking","partialMargin","margin","circleComponent","labelsFilter","labelComponent","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","zoomedNodes","boundDefs","bindDefs","targetKey","layerById","includes","layerContext","SvgWrapper","layer","Fragment","CirclePacking","renderWrapper","otherProps","Container","ResponsiveCirclePacking","props","ResponsiveWrapper","interpolatePosition","positionValue","position","interpolateSize","CircleHtml","div","top","left","borderRadius","backgroundColor","borderStyle","boxSizing","LabelHtml","display","justifyContent","alignItems","InnerCirclePackingHtml","overflow","CirclePackingHtml","ResponsiveCirclePackingHtml","InnerCirclePackingCanvas","canvasEl","useRef","useEffect","current","ctx","getContext","scale","fillStyle","background","fillRect","save","translate","forEach","strokeStyle","lineWidth","beginPath","arc","PI","textAlign","textBaseline","font","fontSize","fontFamily","fillText","getNodeFromMouseEvent","useCallback","getRelativeCursor","getDistance","useMouseCircleDetection","handleMouseHover","ref","cursor","CirclePackingCanvas","ResponsiveCirclePackingCanvas"],"sourceRoot":""}