{"version":3,"file":"component---src-pages-stream-index-js-81cc49b25326ccd66c7e.js","mappings":"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","sources":["webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nivo-website/../src/StreamLayer.tsx","webpack://nivo-website/../src/StreamLayers.tsx","webpack://nivo-website/../src/StreamDots.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../src/StreamSlicesItem.tsx","webpack://nivo-website/../src/StreamSlices.tsx","webpack://nivo-website/../src/StreamDotsItem.tsx","webpack://nivo-website/../src/LayerTooltip.tsx","webpack://nivo-website/../src/StackTooltip.tsx","webpack://nivo-website/../src/Stream.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveStream.tsx","webpack://nivo-website/./src/data/components/stream/mapper.js","webpack://nivo-website/./src/data/components/stream/props.ts","webpack://nivo-website/./src/data/components/stream/generator.js","webpack://nivo-website/./src/data/components/stream/defaults.js","webpack://nivo-website/./src/pages/stream/index.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/../node_modules/d3-time/src/millisecond.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/second.js","webpack://nivo-website/../node_modules/d3-time/src/minute.js","webpack://nivo-website/../node_modules/d3-time/src/hour.js","webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/../node_modules/d3-time/src/week.js","webpack://nivo-website/../node_modules/d3-time/src/month.js","webpack://nivo-website/../node_modules/d3-time/src/year.js","webpack://nivo-website/../node_modules/d3-time/src/utcMinute.js","webpack://nivo-website/../node_modules/d3-time/src/utcHour.js","webpack://nivo-website/../node_modules/d3-time/src/utcDay.js","webpack://nivo-website/../node_modules/d3-time/src/utcWeek.js","webpack://nivo-website/../node_modules/d3-time/src/utcMonth.js","webpack://nivo-website/../node_modules/d3-time/src/utcYear.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/random.js"],"sourcesContent":["import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping: any, { exclude = [] } = {}) => (\n    settings: any,\n    options: any = {}\n) => {\n    const overrides: any = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return (d3Format(format) as unknown) as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useCallback, createElement } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamLayerData } from './types'\n\ninterface StreamLayerProps<RawDatum extends StreamDatum> {\n    layer: StreamLayerData\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayer = <RawDatum extends StreamDatum>({\n    layer,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayerProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { layer }), event, 'left')\n        },\n        [showTooltipFromEvent, layer]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(layer.path)\n    const animatedProps = useSpring({\n        color: layer.color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={layer.fill ? layer.fill : animatedProps.color}\n            fillOpacity={fillOpacity}\n            stroke={getBorderColor(layer)}\n            strokeWidth={borderWidth}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? hideTooltip : undefined}\n        />\n    )\n}\n","import { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { StreamLayer } from './StreamLayer'\nimport { StreamCommonProps, StreamLayerData, StreamDatum } from './types'\n\ninterface StreamLayersProps<RawDatum extends StreamDatum> {\n    layers: StreamLayerData[]\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayers = <RawDatum extends StreamDatum>({\n    layers,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayersProps<RawDatum>) => (\n    <g>\n        {layers.map((layer, i) => (\n            <StreamLayer<RawDatum>\n                key={i}\n                layer={layer}\n                getBorderColor={getBorderColor}\n                borderWidth={borderWidth}\n                fillOpacity={fillOpacity}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { createElement } from 'react'\nimport { StreamSvgProps, StreamLayerDatum, StreamDatum } from './types'\n\ninterface StreamDotsProps<RawDatum extends StreamDatum> {\n    id: string | number\n    color: string\n    data: StreamLayerDatum[]\n    dotComponent: Exclude<StreamSvgProps<RawDatum>['dotComponent'], undefined>\n    position: 'start' | 'center' | 'end'\n    getSize: (datum: StreamLayerDatum) => number\n    getColor: (datum: StreamLayerDatum) => string\n    getBorderWidth: (datum: StreamLayerDatum) => number\n    getBorderColor: (datum: StreamLayerDatum) => string\n}\n\nconst getDotY = <RawDatum extends StreamDatum>(\n    datum: StreamLayerDatum,\n    position: StreamDotsProps<RawDatum>['position']\n) => {\n    let y = datum.y2\n    if (position === 'center') {\n        y = datum.y1 + (datum.y2 - datum.y1) / 2\n    } else if (position === 'start') {\n        y = datum.y1\n    }\n\n    return y\n}\n\nexport const StreamDots = <RawDatum extends StreamDatum>({\n    data,\n    dotComponent,\n    position,\n    getSize,\n    getColor,\n    getBorderWidth,\n    getBorderColor,\n}: StreamDotsProps<RawDatum>) => (\n    <>\n        {data.map((datum, i) => {\n            return createElement(dotComponent, {\n                key: i,\n                datum,\n                x: datum.x,\n                y: getDotY<RawDatum>(datum, position),\n                size: getSize(datum),\n                color: getColor(datum),\n                borderWidth: getBorderWidth(datum),\n                borderColor: getBorderColor(datum),\n            })\n        })}\n    </>\n)\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createElement, useCallback, useState } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamSliceData } from './types'\n\ninterface StreamSlicesItemProps<RawDatum extends StreamDatum> {\n    slice: StreamSliceData\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlicesItem = <RawDatum extends StreamDatum>({\n    slice,\n    height,\n    tooltip,\n}: StreamSlicesItemProps<RawDatum>) => {\n    const [isHover, setIsHover] = useState(false)\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(createElement(tooltip, { slice }), event, 'left')\n        },\n        [setIsHover, showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [setIsHover, hideTooltip])\n\n    return (\n        <g transform={`translate(${slice.x}, 0)`}>\n            {isHover && (\n                <line\n                    x1={0}\n                    x2={0}\n                    y1={0}\n                    y2={height}\n                    stroke=\"#000\"\n                    strokeOpacity={0.35}\n                    strokeWidth={1}\n                />\n            )}\n            <rect\n                x={-20}\n                width={40}\n                height={height}\n                fill=\"#000\"\n                fillOpacity={0}\n                onMouseEnter={handleMouseHover}\n                onMouseMove={handleMouseHover}\n                onMouseLeave={handleMouseLeave}\n            />\n        </g>\n    )\n}\n","import { StreamSliceData, StreamDatum, StreamCommonProps } from './types'\nimport { StreamSlicesItem } from './StreamSlicesItem'\n\ninterface StreamSlicesProps<RawDatum extends StreamDatum> {\n    slices: StreamSliceData[]\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlices = <RawDatum extends StreamDatum>({\n    slices,\n    height,\n    tooltip,\n}: StreamSlicesProps<RawDatum>) => (\n    <g>\n        {slices.map(slice => (\n            <StreamSlicesItem<RawDatum>\n                key={slice.index}\n                slice={slice}\n                height={height}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\n\nexport interface StreamDotsItemProps {\n    x: number\n    y: number\n    size: number\n    color: string\n    borderWidth: number\n    borderColor: string\n}\n\nexport const StreamDotsItem = ({\n    x,\n    y,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n}: StreamDotsItemProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size * 0.5,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius}\n            fill={animatedProps.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nexport const LayerTooltip = ({ layer }: TooltipProps) => (\n    <BasicTooltip id={layer.label} enableChip={true} color={layer.color} />\n)\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { StackTooltipProps } from './types'\n\nexport const StackTooltip = ({ slice }: StackTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            slice.stack.map(p => [\n                <Chip key={p.layerId} color={p.color} />,\n                p.layerLabel,\n                p.formattedValue,\n            ]),\n        [slice]\n    )\n\n    return <TableTooltip rows={rows} />\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    Container,\n    SvgWrapper,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { StreamLayers } from './StreamLayers'\nimport { StreamDots } from './StreamDots'\nimport { StreamSlices } from './StreamSlices'\nimport { useStream } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { StreamDatum, StreamLayerId, StreamSvgProps } from './types'\n\ntype InnerStreamProps<RawDatum extends StreamDatum> = Omit<\n    StreamSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerStream = <RawDatum extends StreamDatum>({\n    data,\n    keys,\n    label,\n    valueFormat,\n\n    offsetType,\n    order,\n    curve,\n\n    layers: chartLayers = svgDefaultProps.layers,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n\n    colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n\n    enableDots = svgDefaultProps.enableDots,\n    dotPosition = svgDefaultProps.dotPosition,\n    dotComponent = svgDefaultProps.dotComponent,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    enableStackTooltip = svgDefaultProps.enableStackTooltip,\n    stackTooltip = svgDefaultProps.stackTooltip,\n\n    legends = svgDefaultProps.legends,\n\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerStreamProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        xScale,\n        yScale,\n        layers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    } = useStream<RawDatum>({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        keys,\n        label,\n        valueFormat,\n        offsetType,\n        order,\n        curve,\n        colors,\n        borderColor,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n    })\n\n    const boundDefs = bindDefs(defs, layers, fill)\n\n    const layerById: Record<StreamLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        layers: null,\n        dots: null,\n        slices: null,\n        legends: null,\n    }\n\n    if (chartLayers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n            />\n        )\n    }\n\n    if (chartLayers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (chartLayers.includes('layers')) {\n        layerById.layers = (\n            <StreamLayers<RawDatum>\n                key=\"layers\"\n                layers={layers}\n                fillOpacity={fillOpacity}\n                borderWidth={borderWidth}\n                getBorderColor={getBorderColor}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <Fragment key=\"dots\">\n                {layers.map(layer => (\n                    <StreamDots\n                        key={layer.id}\n                        id={layer.id}\n                        color={layer.color}\n                        data={layer.data}\n                        dotComponent={dotComponent}\n                        position={dotPosition}\n                        getSize={getDotSize}\n                        getColor={getDotColor}\n                        getBorderWidth={getDotBorderWidth}\n                        getBorderColor={getDotBorderColor}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (chartLayers.includes('slices') && isInteractive && enableStackTooltip) {\n        layerById.slices = (\n            <StreamSlices<RawDatum>\n                key=\"slices\"\n                slices={slices}\n                height={innerHeight}\n                tooltip={stackTooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => {\n                    const legendData = layers\n                        .map(layer => ({\n                            id: layer.id,\n                            label: layer.label,\n                            color: layer.color,\n                            fill: layer.fill,\n                        }))\n                        .reverse()\n\n                    return (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legend}\n                            containerWidth={innerWidth}\n                            containerHeight={innerHeight}\n                            data={legendData}\n                        />\n                    )\n                })}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {chartLayers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Stream = <RawDatum extends StreamDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: StreamSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerStream<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport { area, stack as d3Stack } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport {\n    useTheme,\n    usePropertyAccessor,\n    useValueFormatter,\n    useCurveInterpolation,\n    // @ts-ignore\n    stackOrderFromProp,\n    // @ts-ignore\n    stackOffsetFromProp,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    StreamCommonProps,\n    StreamCustomLayerProps,\n    StreamDataProps,\n    StreamDatum,\n    StreamLayerData,\n    StreamLayerDatum,\n    StreamSliceData,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useStream = <RawDatum extends StreamDatum>({\n    width,\n    height,\n    data,\n    keys,\n    label = defaultProps.label,\n    valueFormat,\n    offsetType = defaultProps.offsetType,\n    order = defaultProps.order,\n    curve = defaultProps.curve,\n    colors = defaultProps.colors,\n    borderColor = defaultProps.borderColor,\n    dotSize = defaultProps.dotSize,\n    dotColor = defaultProps.dotColor,\n    dotBorderWidth = defaultProps.dotBorderWidth,\n    dotBorderColor = defaultProps.dotBorderColor,\n}: {\n    width: number\n    height: number\n    data: StreamDataProps<RawDatum>['data']\n    keys: StreamDataProps<RawDatum>['keys']\n    label?: StreamCommonProps<RawDatum>['label']\n    valueFormat?: StreamCommonProps<RawDatum>['valueFormat']\n    offsetType?: StreamCommonProps<RawDatum>['offsetType']\n    order?: StreamCommonProps<RawDatum>['order']\n    curve?: StreamCommonProps<RawDatum>['curve']\n    colors?: StreamCommonProps<RawDatum>['colors']\n    dotSize?: StreamCommonProps<RawDatum>['dotSize']\n    dotColor?: StreamCommonProps<RawDatum>['dotColor']\n    dotBorderWidth?: StreamCommonProps<RawDatum>['dotBorderWidth']\n    dotBorderColor?: StreamCommonProps<RawDatum>['dotBorderColor']\n    borderColor?: StreamCommonProps<RawDatum>['borderColor']\n}) => {\n    const areaCurveFactory = useCurveInterpolation(curve)\n    const areaGenerator = useMemo(\n        () =>\n            area<StreamLayerDatum>()\n                .x(({ x }) => x)\n                .y0(({ y1 }) => y1)\n                .y1(({ y2 }) => y2)\n                .curve(areaCurveFactory),\n        [areaCurveFactory]\n    )\n\n    const stack = useMemo(\n        () =>\n            d3Stack<RawDatum, string | number>()\n                .keys(keys)\n                .offset(stackOffsetFromProp(offsetType))\n                .order(stackOrderFromProp(order)),\n        [keys, offsetType, order]\n    )\n\n    const [layers, xScale, yScale] = useMemo(() => {\n        const allMin: number[] = []\n        const allMax: number[] = []\n\n        const layers = stack(data).map(layer => {\n            return layer.map(point => {\n                allMin.push(point[0])\n                allMax.push(point[1])\n\n                return {\n                    ...point,\n                    value: point.data[layer.key] as number,\n                }\n            })\n        })\n\n        const minValue = Math.min(...allMin)\n        const maxValue = Math.max(...allMax)\n\n        return [\n            layers,\n            scalePoint<number>()\n                .domain(Array.from({ length: data.length }, (_, i) => i))\n                .range([0, width]),\n            scaleLinear().domain([minValue, maxValue]).range([height, 0]),\n        ]\n    }, [stack, data, width, height])\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<StreamLayerData, 'label' | 'color' | 'data'>>(\n        colors,\n        'id'\n    )\n    const getBorderColor = useInheritedColor<StreamLayerData>(borderColor, theme)\n\n    const getDotSize = useMemo(() => (typeof dotSize === 'function' ? dotSize : () => dotSize), [\n        dotSize,\n    ])\n    const getDotColor = useInheritedColor(dotColor, theme)\n    const getDotBorderWidth = useMemo(\n        () => (typeof dotBorderWidth === 'function' ? dotBorderWidth : () => dotBorderWidth),\n        [dotBorderWidth]\n    )\n    const getDotBorderColor = useInheritedColor(dotBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<\n        Omit<StreamLayerData, 'label' | 'color' | 'data'>,\n        string | number\n    >(label)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const enhancedLayers: StreamLayerData[] = useMemo(\n        () =>\n            layers.map((points, layerIndex) => {\n                const computedPoints: StreamLayerDatum[] = points.map((point, i) => ({\n                    layerId: keys[layerIndex],\n                    layerLabel: '',\n                    index: i,\n                    color: '',\n                    x: xScale(i) as number,\n                    value: point.value,\n                    formattedValue: formatValue(point.value),\n                    y1: yScale(point[0]),\n                    y2: yScale(point[1]),\n                }))\n\n                const layer: Omit<StreamLayerData, 'label' | 'color' | 'data'> = {\n                    id: keys[layerIndex] as string,\n                    path: areaGenerator(computedPoints) as string,\n                }\n\n                const layerWithComputedProperties: Omit<StreamLayerData, 'data'> = {\n                    ...layer,\n                    label: getLabel(layer),\n                    color: getColor(layer),\n                }\n\n                return {\n                    ...layerWithComputedProperties,\n                    data: computedPoints.map(point => {\n                        point.layerLabel = layerWithComputedProperties.label\n                        point.color = layerWithComputedProperties.color\n\n                        return point\n                    }),\n                }\n            }),\n        [layers, keys, getLabel, areaGenerator, getColor, xScale, yScale, formatValue]\n    )\n\n    const slices: StreamSliceData[] = useMemo(\n        () =>\n            Array.from({ length: data.length }, (_, i) => {\n                const sliceStack = enhancedLayers\n                    .map(layer => layer.data[i])\n                    .sort((a, b) => a.y2 - b.y2)\n\n                return {\n                    index: i,\n                    x: enhancedLayers[0].data[i].x,\n                    stack: sliceStack,\n                }\n            }),\n        [data.length, enhancedLayers]\n    )\n\n    const layerContext: StreamCustomLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            layers: enhancedLayers,\n            slices,\n        }),\n        [xScale, yScale, enhancedLayers, slices]\n    )\n\n    return {\n        xScale,\n        yScale,\n        layers: enhancedLayers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    }\n}\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { StreamDatum, StreamSvgProps } from './types'\nimport { Stream } from './Stream'\n\nexport const ResponsiveStream = <RawDatum extends StreamDatum>(\n    props: Omit<StreamSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Stream<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","// @ts-ignore: the core package should be migrated to TS\nimport { areaCurvePropKeys, stackOrderPropKeys, stackOffsetPropKeys } from '@nivo/core'\nimport { defaultProps, svgDefaultProps } from '@nivo/stream'\nimport {\n    themeProperty,\n    axesProperties,\n    motionProperties,\n    defsProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: 'object[]',\n        required: true,\n        help: 'Chart data.',\n        flavors: ['svg'],\n    },\n    {\n        key: 'keys',\n        group: 'Base',\n        type: 'string | number',\n        required: true,\n        help: 'Keys to use to build each layer.',\n        description: `\n            Keys to use to index the data,\n            those keys must exist in each data item.\n            \n            For example let's say you have this data:\n            \n            \\`\\`\\`\n            [{ A: 10, B: 20},\n             { A: 20, B: 10},\n             { A: 15, B: 15}]\n            \\`\\`\\`\n              \n            Then the keys should be: \\`['A', 'B']\\`.\n            \n            Also note that those keys are used by default to generate\n            the label of each layer, displayed in the legends and\n            the stack tooltip, this behaviour can be customized\n            via the \\`label\\` property, in case you want to display\n            something else.\n        `,\n        flavors: ['svg'],\n    },\n    {\n        key: 'label',\n        group: 'Base',\n        type: 'string | (layer) => string | number',\n        required: false,\n        help: 'Label accessor, used for legends.',\n        description: `\n            Define how to access the label of each layer,\n            by default, nivo will use the corresponding key defined\n            in \\`keys\\`, it is available under the \\`id\\` property\n            of the layer.\n        `,\n        defaultValue: defaultProps.label,\n        flavors: ['svg'],\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | (value: number) => string',\n        required: false,\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        flavors: ['svg'],\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'offsetType',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Offset type.',\n        flavors: ['svg'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: stackOffsetPropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'order',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Layers order.',\n        flavors: ['svg'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: stackOrderPropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'curve',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use\n            for the area generator.\n        `,\n        defaultValue: defaultProps.curve,\n        flavors: ['svg'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: areaCurvePropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        type: '{number}',\n        required: true,\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveStream/>\\`.\n        `,\n        flavors: ['svg'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        type: '{number}',\n        required: true,\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveStream/>\\`.\n        `,\n        flavors: ['svg'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        group: 'Base',\n        type: 'object',\n        required: false,\n        help: 'Chart margin.',\n        flavors: ['svg'],\n        controlType: 'margin',\n    },\n    themeProperty(['svg']),\n    {\n        key: 'colors',\n        group: 'Style',\n        type: 'string | Function',\n        required: false,\n        help: 'Defines how to compute line color.',\n        flavors: ['svg'],\n        defaultValue: defaultProps.colors,\n        controlType: 'ordinalColors',\n    },\n    {\n        key: 'fillOpacity',\n        group: 'Style',\n        type: 'number',\n        required: false,\n        help: 'Layers fill opacity.',\n        flavors: ['svg'],\n        defaultValue: defaultProps.fillOpacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'borderWidth',\n        group: 'Style',\n        help: 'Width of layer border.',\n        type: 'number',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.borderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'borderColor',\n        group: 'Style',\n        type: 'string | object | Function',\n        required: false,\n        help: 'Method to compute layer border color.',\n        description: `\n            How to compute border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        flavors: ['svg'],\n        defaultValue: defaultProps.borderColor,\n        controlType: 'inheritedColor',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'layers',\n        group: 'Customization',\n        type: 'Array<string | Function>',\n        required: false,\n        help: 'Defines the order of layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`grid\\`, \\`axes\\`, \\`layers\\`, \\`dots\\`, \\`slices\\`, \\`legends\\`.\n\n            You can also use this to insert extra layers to the chart,\n            this extra layer must be a function which will receive\n            the chart computed data and must return a valid SVG element.\n        `,\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.layers,\n    },\n    {\n        key: 'enableGridX',\n        group: 'Grid & Axes',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.enableGridX,\n        controlType: 'switch',\n    },\n    {\n        key: 'enableGridY',\n        group: 'Grid & Axes',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.enableGridY,\n        controlType: 'switch',\n    },\n    ...axesProperties(),\n    {\n        key: 'enableDots',\n        group: 'Dots',\n        help: 'Enable/disable dots.',\n        type: 'boolean',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.enableDots,\n        controlType: 'switch',\n    },\n    {\n        key: 'renderDot',\n        group: 'Dots',\n        flavors: ['svg'],\n        help: 'Custom rendering function for dots.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'dotSize',\n        group: 'Dots',\n        help: 'Size of the dots',\n        description:\n            'Size of the dots, it also accepts a function which can be used to make it vary according to the associated datum.',\n        type: 'number | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotSize,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 20,\n        },\n    },\n    {\n        key: 'dotColor',\n        group: 'Dots',\n        help: 'Method to compute dots color.',\n        type: 'string | object | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotColor,\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'dotBorderWidth',\n        group: 'Dots',\n        help: 'Width of the dots border.',\n        description:\n            'Width of the dots border, it also accepts a function which can be used to make it vary according to the associated datum.',\n        type: 'number | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotBorderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'dotBorderColor',\n        group: 'Dots',\n        help: 'Method to compute dots border color.',\n        type: 'string | object | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotBorderColor,\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg'],\n        help: `Tooltip custom component.`,\n        type: 'FunctionComponent',\n        required: false,\n        group: 'Interactivity',\n        description: `\n            Allows complete tooltip customisation, it must return\n            a valid HTML element and will receive the following data:\n            \n            \\`\\`\\`\n            {\n                layer: {\n                    id: string | number\n                    label: string | number\n                    color: string\n                    // populated when using patterns/gradients\n                    fill?: string\n                    path: string\n                    // computed data for each data point for this\n                    // specific layer\n                    data: StreamLayerDatum[]\n                }\n            }\n            \\`\\`\\`\n            \n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'enableStackTooltip',\n        flavors: ['svg'],\n        help: `Enable/disable stack tooltip ('isInteractive' must also be 'true').`,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.enableStackTooltip,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'stackTooltip',\n        flavors: ['svg'],\n        help: `Stack tooltip custom component.`,\n        type: 'FunctionComponent',\n        required: false,\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n    {\n        key: 'ariaLabel',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-label](https://www.w3.org/TR/wai-aria/#aria-label).',\n        type: 'string',\n        required: false,\n    },\n    {\n        key: 'ariaLabelledBy',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-labelledby](https://www.w3.org/TR/wai-aria/#aria-labelledby).',\n        type: 'string',\n        required: false,\n    },\n    {\n        key: 'ariaDescribedBy',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-describedby](https://www.w3.org/TR/wai-aria/#aria-describedby).',\n        type: 'string',\n        required: false,\n    },\n]\n\nexport const groups = groupProperties(props)\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\nconst names = [\n    'Raoul',\n    'Josiane',\n    'Marcel',\n    'René',\n    'Paul',\n    'Jacques',\n    'Jane',\n    'André',\n    'Guillaume',\n    'Lyu',\n    'Maki',\n    'Junko',\n    'Emi',\n    'Kae',\n    'Tomoko',\n    'Camille',\n    'Jared',\n    'Ibrahim',\n    'Mohamed',\n    'Claude',\n    'Jean',\n    'Leonard',\n    'David',\n]\n\nexport const generateLightDataSet = () => ({\n    data: range(9).map(() =>\n        names.slice(0, 6).reduce((layer, key) => {\n            layer[key] = random(10, 200)\n            return layer\n        }, {})\n    ),\n    keys: names.slice(0, 6),\n})\n\nexport const generateHeavyDataSet = () => ({\n    data: range(360).map(() =>\n        names.reduce((layer, key) => {\n            layer[key] = random(10, 200)\n            return layer\n        }, {})\n    ),\n    keys: names,\n})\n","import { patternDotsDef, patternSquaresDef } from '@nivo/core'\nimport { defaultProps, svgDefaultProps } from '@nivo/stream'\n\nexport default {\n    label: defaultProps.label,\n    valueFormat: { format: '', enabled: false },\n\n    margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60,\n    },\n\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: false,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: -40,\n    },\n    enableGridX: true,\n    enableGridY: false,\n\n    curve: 'catmullRom',\n    offsetType: 'silhouette',\n    order: 'none',\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.85,\n    borderWidth: 0,\n    borderColor: {\n        theme: 'background',\n    },\n\n    defs: [\n        patternDotsDef('dots', {\n            background: 'inherit',\n            color: '#2c998f',\n            size: 4,\n            padding: 2,\n            stagger: true,\n        }),\n        patternSquaresDef('squares', {\n            background: 'inherit',\n            color: '#e4c912',\n            size: 6,\n            padding: 2,\n            stagger: true,\n        }),\n    ],\n    fill: [\n        { match: { id: 'Paul' }, id: 'dots' },\n        { match: { id: 'Marcel' }, id: 'squares' },\n    ],\n\n    enableDots: defaultProps.enableDots,\n    dotSize: 8,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 2,\n    dotBorderColor: { from: 'color', modifiers: [['darker', 0.7]] },\n\n    animate: svgDefaultProps.animate,\n    motionConfig: svgDefaultProps.motionConfig,\n\n    isInteractive: defaultProps.isInteractive,\n    enableStackTooltip: true,\n}\n","import React from 'react'\nimport { ResponsiveStream, svgDefaultProps } from '@nivo/stream'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/stream/meta.yml'\nimport mapper from '../../data/components/stream/mapper'\nimport { groups } from '../../data/components/stream/props'\nimport { generateLightDataSet } from '../../data/components/stream/generator'\nimport defaultSettings from '../../data/components/stream/defaults'\n\nconst initialProperties = {\n    ...defaultSettings,\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            translateX: 100,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemTextColor: '#999999',\n            symbolSize: 12,\n            symbolShape: 'circle',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Stream = () => {\n    return (\n        <ComponentTemplate\n            name=\"Stream\"\n            meta={meta.Stream}\n            icon=\"stream\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={svgDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={(properties, data) => ({\n                keys: data.keys,\n                ...properties,\n            })}\n            generateData={generateLightDataSet}\n            getTabData={data => data.data}\n        >\n            {(properties, data, theme) => {\n                return (\n                    <ResponsiveStream\n                        data={data.data}\n                        keys={data.keys}\n                        {...properties}\n                        theme={theme}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Stream\n","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import interval from \"./interval\";\nvar millisecond = interval(function () {// noop\n}, function (date, step) {\n  date.setTime(+date + step);\n}, function (start, end) {\n  return end - start;\n}); // An optimized implementation for this simple case.\n\nmillisecond.every = function (k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function (date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function (date, step) {\n    date.setTime(+date + step * k);\n  }, function (start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","import interval from \"./interval\";\nimport { durationSecond } from \"./duration\";\nvar second = interval(function (date) {\n  date.setTime(date - date.getMilliseconds());\n}, function (date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function (start, end) {\n  return (end - start) / durationSecond;\n}, function (date) {\n  return date.getUTCSeconds();\n});\nexport default second;\nexport var seconds = second.range;","import interval from \"./interval\";\nimport { durationMinute, durationSecond } from \"./duration\";\nvar minute = interval(function (date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getMinutes();\n});\nexport default minute;\nexport var minutes = minute.range;","import interval from \"./interval\";\nimport { durationHour, durationMinute, durationSecond } from \"./duration\";\nvar hour = interval(function (date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getHours();\n});\nexport default hour;\nexport var hours = hour.range;","import interval from \"./interval\";\nimport { durationDay, durationMinute } from \"./duration\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import interval from \"./interval\";\nimport { durationMinute, durationWeek } from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function (date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;","import interval from \"./interval\";\nvar month = interval(function (date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function (start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function (date) {\n  return date.getMonth();\n});\nexport default month;\nexport var months = month.range;","import interval from \"./interval\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","import interval from \"./interval\";\nimport { durationMinute } from \"./duration\";\nvar utcMinute = interval(function (date) {\n  date.setUTCSeconds(0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getUTCMinutes();\n});\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;","import interval from \"./interval\";\nimport { durationHour } from \"./duration\";\nvar utcHour = interval(function (date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getUTCHours();\n});\nexport default utcHour;\nexport var utcHours = utcHour.range;","import interval from \"./interval\";\nimport { durationDay } from \"./duration\";\nvar utcDay = interval(function (date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function (start, end) {\n  return (end - start) / durationDay;\n}, function (date) {\n  return date.getUTCDate() - 1;\n});\nexport default utcDay;\nexport var utcDays = utcDay.range;","import interval from \"./interval\";\nimport { durationWeek } from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function (date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function (start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;","import interval from \"./interval\";\nvar utcMonth = interval(function (date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function (start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function (date) {\n  return date.getUTCMonth();\n});\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;","import interval from \"./interval\";\nvar utcYear = interval(function (date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function (start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function (date) {\n  return date.getUTCFullYear();\n}); // An optimized implementation for this simple case.\n\nutcYear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"names":["settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","key","omit","mapAxis","type","value","upperFirst","enable","mapFormat","format","enabled","undefined","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","getOwnPropertyDescriptors","defineProperties","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","d","x","y","ticks","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","isArray","Array","x1","x2","y1","y2","AxisTick","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","tick","initial","textTransform","from","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","lines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","ctx","Number","degreesToRadians","String","renderAxesToCanvas","renderGridLinesToCanvas","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","StreamLayer","layer","fillOpacity","borderWidth","getBorderColor","isInteractive","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","createElement","animatedPath","useAnimatedPath","color","fill","stroke","strokeWidth","onMouseMove","onMouseEnter","onMouseLeave","StreamLayers","layers","getDotY","datum","StreamDots","data","dotComponent","getSize","getColor","getBorderWidth","size","borderColor","_arrayLikeToArray","arr","len","arr2","_slicedToArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","toString","slice","constructor","name","test","unsupportedIterableToArray","TypeError","nonIterableRest","StreamSlicesItem","useState","isHover","setIsHover","handleMouseLeave","strokeOpacity","StreamSlices","slices","defaultProps","label","order","offsetType","curve","axisBottom","axisLeft","enableGridX","enableGridY","colors","scheme","modifiers","enableDots","dotPosition","radius","cx","cy","r","dotSize","dotColor","dotBorderWidth","dotBorderColor","id","enableChip","enableStackTooltip","stackTooltip","rows","p","legends","legendLabel","role","svgDefaultProps","defs","motionConfig","isFocusable","InnerStream","valueFormat","chartLayers","partialMargin","margin","axisTop","axisRight","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","areaCurveFactory","useCurveInterpolation","areaGenerator","stack","d3Stack","stackOffsetFromProp","stackOrderFromProp","allMin","allMax","point","minValue","Math","maxValue","scaleLinear","useOrdinalColorScale","useInheritedColor","getDotSize","getDotColor","getDotBorderWidth","getDotBorderColor","getLabel","usePropertyAccessor","useValueFormatter","enhancedLayers","computedPoints","points","layerId","layerLabel","index","formattedValue","path","layerWithComputedProperties","sliceStack","a","b","layerContext","useStream","boundDefs","bindDefs","layerById","grid","dots","legendData","containerWidth","containerHeight","Stream","renderWrapper","otherProps","ResponsiveStream","group","required","help","flavors","description","defaultValue","controlType","controlOptions","choices","stackOffsetPropKeys","stackOrderPropKeys","areaCurvePropKeys","enableControlForFlavors","unit","min","max","step","themeProperty","defsProperties","axesProperties","motionProperties","groups","groupProperties","names","generateLightDataSet","range","map","reduce","random","orient","patternDotsDef","background","padding","stagger","patternSquaresDef","match","initialProperties","defaultSettings","anchor","direction","translateX","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","alert","JSON","stringify","effects","on","ComponentTemplate","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","codePropertiesMapper","generateData","getTabData","t0","t1","newInterval","floori","offseti","count","field","interval","date","floor","ceil","round","d0","d1","offset","start","stop","previous","setTime","end","every","isFinite","millisecond","k","durationSecond","durationMinute","durationHour","durationDay","durationWeek","second","getMilliseconds","getUTCSeconds","minute","getSeconds","getMinutes","hour","getHours","day","setHours","setDate","getDate","getTimezoneOffset","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","month","setMonth","getMonth","getFullYear","months","year","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","nativeFloor","nativeRandom","module","exports","lower","upper","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","rand"],"sourceRoot":""}