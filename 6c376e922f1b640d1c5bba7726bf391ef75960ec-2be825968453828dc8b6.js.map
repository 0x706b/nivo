{"version":3,"file":"6c376e922f1b640d1c5bba7726bf391ef75960ec-2be825968453828dc8b6.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-hierarchy/src/accessors.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/constant.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/treemap/round.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/TreeMapNode.js","webpack://nivo-website/../src/TreeMapHtmlNode.js","webpack://nivo-website/../src/props.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../src/TreeMapNodeTooltip.js","webpack://nivo-website/../src/hooks.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/treemap/index.js","webpack://nivo-website/../src/TreeMapNodes.js","webpack://nivo-website/../src/TreeMap.js","webpack://nivo-website/../src/ResponsiveTreeMap.js","webpack://nivo-website/../src/TreeMapHtml.js","webpack://nivo-website/../src/ResponsiveTreeMapHtml.js","webpack://nivo-website/../src/TreeMapCanvas.js","webpack://nivo-website/../src/ResponsiveTreeMapCanvas.js","webpack://nivo-website/../node_modules/lodash/cloneDeep.js","webpack://nivo-website/../node_modules/lodash/startCase.js"],"sourcesContent":["export function optional(f) {\n  return f == null ? null : required(f);\n}\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error();\n  return f;\n}","export function constantZero() {\n  return 0;\n}\nexport default function (x) {\n  return function () {\n    return x;\n  };\n}","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;else while (--i >= 0) {\n    sum += children[i].value;\n  }\n  node.value = sum;\n}\n\nexport default function () {\n  return this.eachAfter(count);\n}","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n\n  do {\n    node.height = height;\n  } while ((node = node.parent) && node.height < ++height);\n}\nexport function Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};","export default function (callback) {\n  var node = this,\n      current,\n      next = [node],\n      children,\n      i,\n      n;\n\n  do {\n    current = next.reverse(), next = [];\n\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      next = [],\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  while (node = next.pop()) {\n    callback(node);\n  }\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      children,\n      i;\n\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  return this;\n}","export default function (value) {\n  return this.eachAfter(function (node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n\n    while (--i >= 0) {\n      sum += children[i].value;\n    }\n\n    node.value = sum;\n  });\n}","export default function (compare) {\n  return this.eachBefore(function (node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}","export default function (end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n\n  var k = nodes.length;\n\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n\n  return c;\n}","export default function () {\n  var node = this,\n      nodes = [node];\n\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n\n  return nodes;\n}","export default function () {\n  var nodes = [];\n  this.each(function (node) {\n    nodes.push(node);\n  });\n  return nodes;\n}","export default function () {\n  var leaves = [];\n  this.eachBefore(function (node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}","export default function () {\n  var root = this,\n      links = [];\n  root.each(function (node) {\n    if (node !== root) {\n      // Don’t include the root’s parent, if any.\n      links.push({\n        source: node.parent,\n        target: node\n      });\n    }\n  });\n  return links;\n}","export default function (node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nconst TreeMapNode = ({\n    node,\n    animatedProps,\n    borderWidth,\n    enableLabel,\n    enableParentLabel,\n    labelSkipSize,\n}) => {\n    const theme = useTheme()\n\n    const showLabel =\n        enableLabel &&\n        node.isLeaf &&\n        (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n    const showParentLabel = enableParentLabel && node.isParent\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <animated.rect\n                width={to(animatedProps.width, v => Math.max(v, 0))}\n                height={to(animatedProps.height, v => Math.max(v, 0))}\n                fill={node.fill ? node.fill : animatedProps.color}\n                strokeWidth={borderWidth}\n                stroke={node.borderColor}\n                fillOpacity={node.opacity}\n                onMouseEnter={node.onMouseEnter}\n                onMouseMove={node.onMouseMove}\n                onMouseLeave={node.onMouseLeave}\n                onClick={node.onClick}\n            />\n            {showLabel && (\n                <animated.text\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: node.labelTextColor,\n                        pointerEvents: 'none',\n                    }}\n                    fillOpacity={animatedProps.labelOpacity}\n                    transform={animatedProps.labelTransform}\n                >\n                    {node.label}\n                </animated.text>\n            )}\n            {showParentLabel && (\n                <animated.text\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: node.parentLabelTextColor,\n                        pointerEvents: 'none',\n                    }}\n                    fillOpacity={animatedProps.parentLabelOpacity}\n                    transform={animatedProps.parentLabelTransform}\n                >\n                    {node.parentLabel}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n\nTreeMapNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    enableParentLabel: PropTypes.bool.isRequired,\n    labelSkipSize: PropTypes.number.isRequired,\n}\n\nexport default memo(TreeMapNode)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nconst TreeMapHtmlNode = ({\n    node,\n    animatedProps,\n    borderWidth,\n    enableLabel,\n    enableParentLabel,\n    labelSkipSize,\n}) => {\n    const theme = useTheme()\n\n    const showLabel =\n        enableLabel &&\n        node.isLeaf &&\n        (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n    const showParentLabel = enableParentLabel && node.isParent\n\n    return (\n        <animated.div\n            id={node.path.replace(/[^\\w]/gi, '-')}\n            style={{\n                boxSizing: 'border-box',\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                transform: animatedProps.htmlTransform,\n                width: animatedProps.width,\n                height: animatedProps.height,\n                borderWidth,\n                borderStyle: 'solid',\n                borderColor: node.borderColor,\n                overflow: 'hidden',\n            }}\n        >\n            <animated.div\n                style={{\n                    boxSizing: 'border-box',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    opacity: node.opacity,\n                    width: animatedProps.width,\n                    height: animatedProps.height,\n                    background: animatedProps.color,\n                }}\n                onMouseEnter={node.onMouseEnter}\n                onMouseMove={node.onMouseMove}\n                onMouseLeave={node.onMouseLeave}\n                onClick={node.onClick}\n            />\n            {showLabel && (\n                <animated.span\n                    style={{\n                        ...theme.labels.text,\n                        position: 'absolute',\n                        display: 'flex',\n                        top: -5,\n                        left: -5,\n                        width: 10,\n                        height: 10,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        whiteSpace: 'nowrap',\n                        color: node.labelTextColor,\n                        transformOrigin: 'center center',\n                        transform: animatedProps.labelHtmlTransform,\n                        opacity: animatedProps.labelOpacity,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {node.label}\n                </animated.span>\n            )}\n            {showParentLabel && (\n                <animated.span\n                    style={{\n                        ...theme.labels.text,\n                        position: 'absolute',\n                        display: 'flex',\n                        justifyContent: 'flex-start',\n                        alignItems: 'center',\n                        whiteSpace: 'nowrap',\n                        width: 10,\n                        height: 10,\n                        color: node.parentLabelTextColor,\n                        transformOrigin: 'top left',\n                        transform: animatedProps.parentLabelHtmlTransform,\n                        opacity: animatedProps.parentLabelOpacity,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {node.parentLabel}\n                </animated.span>\n            )}\n        </animated.div>\n    )\n}\n\nTreeMapHtmlNode.propTypes = {\n    node: PropTypes.object.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    enableParentLabel: PropTypes.bool.isRequired,\n    labelSkipSize: PropTypes.number.isRequired,\n}\n\nexport default memo(TreeMapHtmlNode)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { treeMapTilePropType, defsPropTypes } from '@nivo/core'\nimport {\n    ordinalColorsPropType,\n    colorPropertyAccessorPropType,\n    inheritedColorPropType,\n} from '@nivo/colors'\nimport TreeMapNode from './TreeMapNode'\nimport TreeMapHtmlNode from './TreeMapHtmlNode'\n\nconst commonPropTypes = {\n    identity: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n    colors: ordinalColorsPropType.isRequired,\n    colorBy: colorPropertyAccessorPropType.isRequired,\n    nodeOpacity: PropTypes.number.isRequired,\n\n    leavesOnly: PropTypes.bool.isRequired,\n    tile: treeMapTilePropType.isRequired,\n    innerPadding: PropTypes.number.isRequired,\n    outerPadding: PropTypes.number.isRequired,\n\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.string,\n    labelSkipSize: PropTypes.number.isRequired,\n    labelTextColor: inheritedColorPropType.isRequired,\n    orientLabel: PropTypes.bool.isRequired,\n\n    enableParentLabel: PropTypes.bool.isRequired,\n    parentLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    parentLabelSize: PropTypes.number.isRequired,\n    parentLabelPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']).isRequired,\n    parentLabelPadding: PropTypes.number.isRequired,\n    parentLabelTextColor: inheritedColorPropType.isRequired,\n\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport const TreeMapPropTypes = {\n    ...commonPropTypes,\n    nodeComponent: PropTypes.elementType.isRequired,\n    role: PropTypes.string.isRequired,\n    ...defsPropTypes,\n}\n\nexport const TreeMapHtmlPropTypes = {\n    ...commonPropTypes,\n    nodeComponent: PropTypes.elementType.isRequired,\n}\n\nexport const TreeMapCanvasPropTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nconst commonDefaultProps = {\n    identity: 'id',\n    value: 'value',\n\n    tile: 'squarify',\n    leavesOnly: false,\n    innerPadding: 0,\n    outerPadding: 0,\n\n    colors: { scheme: 'nivo' },\n    colorBy: 'pathComponents.1',\n    nodeOpacity: 0.33,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipSize: 0,\n    labelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    orientLabel: true,\n\n    enableParentLabel: true,\n    parentLabel: 'id',\n    parentLabelSize: 20,\n    parentLabelPosition: 'top',\n    parentLabelPadding: 6,\n    parentLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    borderWidth: 1,\n    borderColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const TreeMapDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapNode,\n    role: 'img',\n    defs: [],\n    fill: [],\n}\n\nexport const TreeMapHtmlDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapHtmlNode,\n}\n\nexport const TreeMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst TreeMapNodeTooltip = ({ node, tooltip }) => {\n    return (\n        <BasicTooltip\n            id={node.id}\n            value={node.formattedValue}\n            enableChip={true}\n            color={node.color}\n            renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { node }) : null}\n        />\n    )\n}\n\nTreeMapNodeTooltip.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        formattedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    tooltip: PropTypes.elementType,\n}\n\nexport default memo(TreeMapNodeTooltip)\n","import { useCallback, useMemo } from 'react'\nimport get from 'lodash/get'\nimport omit from 'lodash/omit'\nimport cloneDeep from 'lodash/cloneDeep'\nimport startCase from 'lodash/startCase'\nimport { treemap as d3Treemap, hierarchy } from 'd3-hierarchy'\nimport { treeMapTileFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { TreeMapDefaultProps } from './props'\nimport TreeMapNodeTooltip from './TreeMapNodeTooltip'\n\nexport const useTreeMapLayout = ({\n    width,\n    height,\n    tile,\n    innerPadding,\n    outerPadding,\n    enableParentLabel,\n    parentLabelSize,\n    parentLabelPosition,\n    leavesOnly,\n}) =>\n    useMemo(() => {\n        const treemap = d3Treemap()\n            .size([width, height])\n            .tile(treeMapTileFromProp(tile))\n            .round(true)\n            .paddingInner(innerPadding)\n            .paddingOuter(outerPadding)\n\n        if (enableParentLabel && !leavesOnly) {\n            const parentLabelPadding = parentLabelSize + outerPadding * 2\n            treemap[`padding${startCase(parentLabelPosition)}`](parentLabelPadding)\n        }\n\n        return treemap\n    }, [\n        width,\n        height,\n        tile,\n        innerPadding,\n        outerPadding,\n        enableParentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        leavesOnly,\n    ])\n\nexport const useHierarchy = ({ root, getValue }) =>\n    useMemo(() => hierarchy(root).sum(getValue), [root, getValue])\n\nexport const useAccessor = accessor =>\n    useMemo(() => {\n        if (typeof accessor === 'function') return accessor\n        return d => get(d, accessor)\n    }, [accessor])\n\nconst computeNodeIdAndPath = (node, getIdentity) => {\n    const path = node\n        .ancestors()\n        .map(ancestor => getIdentity(ancestor.data))\n        .reverse()\n\n    return [path.join('.'), path]\n}\n\nexport const useTreeMap = ({\n    data,\n    identity = TreeMapDefaultProps.identity,\n    value = TreeMapDefaultProps.value,\n    valueFormat,\n    leavesOnly = TreeMapDefaultProps.leavesOnly,\n    width,\n    height,\n    tile = TreeMapDefaultProps.tile,\n    innerPadding = TreeMapDefaultProps.innerPadding,\n    outerPadding = TreeMapDefaultProps.outerPadding,\n    label = TreeMapDefaultProps.label,\n    orientLabel = TreeMapDefaultProps.orientLabel,\n    enableParentLabel = TreeMapDefaultProps.enableParentLabel,\n    parentLabel = TreeMapDefaultProps.parentLabel,\n    parentLabelSize = TreeMapDefaultProps.parentLabelSize,\n    parentLabelPosition = TreeMapDefaultProps.parentLabelPosition,\n    parentLabelPadding = TreeMapDefaultProps.parentLabelPadding,\n    colors = TreeMapDefaultProps.colors,\n    colorBy = TreeMapDefaultProps.colorBy,\n    nodeOpacity = TreeMapDefaultProps.nodeOpacity,\n    borderColor = TreeMapDefaultProps.borderColor,\n    labelTextColor = TreeMapDefaultProps.labelTextColor,\n    parentLabelTextColor = TreeMapDefaultProps.parentLabelTextColor,\n}) => {\n    const getIdentity = useAccessor(identity)\n    const getValue = useAccessor(value)\n    const formatValue = useValueFormatter(valueFormat)\n    const getLabel = useAccessor(label)\n    const getParentLabel = useAccessor(parentLabel)\n\n    const layout = useTreeMapLayout({\n        width,\n        height,\n        tile,\n        innerPadding,\n        outerPadding,\n        enableParentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        leavesOnly,\n    })\n\n    const hierarchy = useHierarchy({ root: data, getValue })\n\n    const rawNodes = useMemo(() => {\n        // d3 treemap mutates the data, so we need to copy it\n        // to have proper behavior for subsequents useMemo()\n        const root = cloneDeep(hierarchy)\n        layout(root)\n\n        return leavesOnly ? root.leaves() : root.descendants()\n    }, [hierarchy, layout, leavesOnly])\n\n    const nodes = useMemo(\n        () =>\n            rawNodes.map(rawNode => {\n                const [path, pathComponents] = computeNodeIdAndPath(rawNode, getIdentity)\n\n                const node = {\n                    id: getIdentity(rawNode.data),\n                    path,\n                    pathComponents,\n                    data: omit(rawNode.data, 'children'),\n                    x: rawNode.x0,\n                    y: rawNode.y0,\n                    width: rawNode.x1 - rawNode.x0,\n                    height: rawNode.y1 - rawNode.y0,\n                    value: rawNode.value,\n                    formattedValue: formatValue(rawNode.value),\n                    treeDepth: rawNode.depth,\n                    treeHeight: rawNode.height,\n                    isParent: rawNode.height > 0,\n                    isLeaf: rawNode.height === 0,\n                }\n\n                node.label = getLabel(node)\n                node.parentLabel = getParentLabel(node)\n                node.parentLabelRotation = 0\n\n                if (parentLabelPosition === 'top') {\n                    node.parentLabelX = outerPadding + parentLabelPadding\n                    node.parentLabelY = outerPadding + parentLabelSize / 2\n                }\n                if (parentLabelPosition === 'right') {\n                    node.parentLabelX = node.width - outerPadding - parentLabelSize / 2\n                    node.parentLabelY = node.height - outerPadding - parentLabelPadding\n                    node.parentLabelRotation = -90\n                }\n                if (parentLabelPosition === 'bottom') {\n                    node.parentLabelX = outerPadding + parentLabelPadding\n                    node.parentLabelY = node.height - outerPadding - parentLabelSize / 2\n                }\n                if (parentLabelPosition === 'left') {\n                    node.parentLabelX = outerPadding + parentLabelSize / 2\n                    node.parentLabelY = node.height - outerPadding - parentLabelPadding\n                    node.parentLabelRotation = -90\n                }\n\n                return node\n            }),\n        [\n            rawNodes,\n            leavesOnly,\n            getIdentity,\n            formatValue,\n            getLabel,\n            getParentLabel,\n            parentLabelSize,\n            parentLabelPosition,\n            parentLabelPadding,\n            outerPadding,\n        ]\n    )\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const getParentLabelTextColor = useInheritedColor(parentLabelTextColor, theme)\n\n    const enhancedNodes = useMemo(\n        () =>\n            nodes.map(node => {\n                node.opacity = nodeOpacity\n                node.labelRotation = orientLabel && node.height > node.width ? -90 : 0\n                node.color = getColor(node)\n                node.borderColor = getBorderColor(node)\n                node.labelTextColor = getLabelTextColor(node)\n                node.parentLabelTextColor = getParentLabelTextColor(node)\n\n                return node\n            }),\n        [\n            nodes,\n            getColor,\n            nodeOpacity,\n            getBorderColor,\n            getLabelTextColor,\n            getParentLabelTextColor,\n            orientLabel,\n        ]\n    )\n\n    return {\n        hierarchy,\n        nodes: enhancedNodes,\n        layout,\n    }\n}\n\nexport const useInteractiveTreeMapNodes = (\n    nodes,\n    { isInteractive, onMouseEnter, onMouseMove, onMouseLeave, onClick, tooltip }\n) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(\n                <TreeMapNodeTooltip node={node} tooltip={tooltip} />,\n                event,\n                'left'\n            )\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseEnter = useCallback(\n        (node, event) => {\n            showTooltip(node, event)\n            onMouseEnter && onMouseEnter(node, event)\n        },\n        [onMouseEnter, showTooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        (node, event) => {\n            showTooltip(node, event)\n            onMouseMove && onMouseMove(node, event)\n        },\n        [onMouseMove, showTooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (node, event) => {\n            hideTooltip()\n            onMouseLeave && onMouseLeave(node, event)\n        },\n        [onMouseLeave, hideTooltip]\n    )\n\n    const handleClick = useCallback(\n        (node, event) => {\n            onClick && onClick(node, event)\n        },\n        [onClick]\n    )\n\n    return useMemo(() => {\n        return nodes.map(node => {\n            if (!isInteractive) return node\n\n            return {\n                ...node,\n                onMouseEnter: event => handleMouseEnter(node, event),\n                onMouseMove: event => handleMouseMove(node, event),\n                onMouseLeave: event => handleMouseLeave(node, event),\n                onClick: event => handleClick(node, event),\n            }\n        })\n    }, [nodes, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick])\n}\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport { required } from \"../accessors.js\";\nimport constant, { constantZero } from \"../constant.js\";\nexport default function () {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 = root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function (x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function (x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function (x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function (x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function (x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function (x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function (x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function (x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function (x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useInteractiveTreeMapNodes } from './hooks'\n\nconst getAnimatedNodeProps = node => {\n    return {\n        transform: `translate(${node.x},${node.y})`,\n        htmlTransform: `translate(${node.x}px,${node.y}px)`,\n        labelOpacity: 1,\n        labelTransform: `translate(${node.width / 2},${node.height / 2}) rotate(${\n            node.labelRotation\n        })`,\n        labelHtmlTransform: `translate(${node.width / 2}px,${node.height / 2}px) rotate(${\n            node.labelRotation\n        }deg)`,\n        parentLabelOpacity: 1,\n        parentLabelTransform: `translate(${node.parentLabelX},${node.parentLabelY}) rotate(${node.parentLabelRotation})`,\n        parentLabelHtmlTransform: `translate(${\n            node.parentLabelX - (node.parentLabelRotation === 0 ? 0 : 5)\n        }px,${node.parentLabelY - (node.parentLabelRotation === 0 ? 5 : 0)}px) rotate(${\n            node.parentLabelRotation\n        }deg)`,\n        width: node.width,\n        height: node.height,\n        color: node.color,\n    }\n}\n\nconst getEndingAnimatedNodeProps = node => {\n    const x = node.x + node.width / 2\n    const y = node.y + node.height / 2\n\n    return {\n        transform: `translate(${x},${y})`,\n        transformPixels: `translate(${x}px,${y}px)`,\n        labelOpacity: 0,\n        labelTransform: `translate(0,0) rotate(${node.labelRotation})`,\n        parentLabelOpacity: 0,\n        parentLabelTransform: `translate(0,0) rotate(${node.parentLabelRotation})`,\n        parentLabelHtmlTransform: `translate(0px,0px) rotate(${node.parentLabelRotation}deg)`,\n        width: 0,\n        height: 0,\n        color: node.color,\n    }\n}\n\nconst TreeMapNodes = ({\n    nodes,\n    nodeComponent,\n    borderWidth,\n    enableLabel,\n    labelSkipSize,\n    enableParentLabel,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}) => {\n    const interactiveNodes = useInteractiveTreeMapNodes(nodes, {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition(interactiveNodes, {\n        key: node => node.path,\n        initial: node => getAnimatedNodeProps(node),\n        from: node => getEndingAnimatedNodeProps(node),\n        enter: node => getAnimatedNodeProps(node),\n        update: node => getAnimatedNodeProps(node),\n        leave: node => getEndingAnimatedNodeProps(node),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return transition((animatedProps, node) => {\n        return createElement(nodeComponent, {\n            key: node.path,\n            node,\n            animatedProps,\n            borderWidth,\n            enableLabel,\n            labelSkipSize,\n            enableParentLabel,\n        })\n    })\n}\n\nTreeMapNodes.propTypes = {\n    nodes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    nodeComponent: PropTypes.elementType.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    labelSkipSize: PropTypes.number.isRequired,\n    enableParentLabel: PropTypes.bool.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.elementType,\n}\n\nexport default memo(TreeMapNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { SvgWrapper, withContainer, useDimensions, bindDefs } from '@nivo/core'\nimport { TreeMapDefaultProps, TreeMapPropTypes } from './props'\nimport { useTreeMap } from './hooks'\nimport TreeMapNodes from './TreeMapNodes'\n\nconst TreeMap = ({\n    data,\n    identity,\n    value,\n    tile,\n    nodeComponent,\n    valueFormat,\n    innerPadding,\n    outerPadding,\n    leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    colorBy,\n    nodeOpacity,\n    borderWidth,\n    borderColor,\n    defs,\n    fill,\n    enableLabel,\n    label,\n    labelTextColor,\n    orientLabel,\n    labelSkipSize,\n    enableParentLabel,\n    parentLabel,\n    parentLabelSize,\n    parentLabelPosition,\n    parentLabelPadding,\n    parentLabelTextColor,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel,\n        parentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        parentLabelPadding,\n        parentLabelTextColor,\n    })\n\n    const boundDefs = bindDefs(defs, nodes, fill)\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            <TreeMapNodes\n                nodes={nodes}\n                nodeComponent={nodeComponent}\n                borderWidth={borderWidth}\n                enableLabel={enableLabel}\n                labelSkipSize={labelSkipSize}\n                enableParentLabel={enableParentLabel}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n            />\n        </SvgWrapper>\n    )\n}\n\nTreeMap.propTypes = TreeMapPropTypes\n\nconst WrappedTreeMap = withContainer(TreeMap)\nWrappedTreeMap.defaultProps = TreeMapDefaultProps\n\nexport default WrappedTreeMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport TreeMap from './TreeMap'\n\nconst ResponsiveTreeMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveTreeMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { withContainer, useDimensions } from '@nivo/core'\nimport { TreeMapHtmlPropTypes, TreeMapHtmlDefaultProps } from './props'\nimport { useTreeMap } from './hooks'\nimport TreeMapNodes from './TreeMapNodes'\n\nconst TreeMapHtml = ({\n    data,\n    identity,\n    value,\n    tile,\n    nodeComponent,\n    valueFormat,\n    innerPadding,\n    outerPadding,\n    leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    colorBy,\n    nodeOpacity,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    label,\n    labelTextColor,\n    orientLabel,\n    labelSkipSize,\n    enableParentLabel,\n    parentLabel,\n    parentLabelSize,\n    parentLabelPosition,\n    parentLabelPadding,\n    parentLabelTextColor,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel,\n        parentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        parentLabelPadding,\n        parentLabelTextColor,\n    })\n\n    return (\n        <div\n            style={{\n                position: 'relative',\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        >\n            <div style={{ position: 'absolute', top: margin.top, left: margin.left }}>\n                <TreeMapNodes\n                    nodes={nodes}\n                    nodeComponent={nodeComponent}\n                    borderWidth={borderWidth}\n                    enableLabel={enableLabel}\n                    labelSkipSize={labelSkipSize}\n                    enableParentLabel={enableParentLabel}\n                    isInteractive={isInteractive}\n                    onMouseEnter={onMouseEnter}\n                    onMouseMove={onMouseMove}\n                    onMouseLeave={onMouseLeave}\n                    onClick={onClick}\n                    tooltip={tooltip}\n                />\n            </div>\n        </div>\n    )\n}\n\nTreeMapHtml.propTypes = TreeMapHtmlPropTypes\n\nconst WrappedTreeMapHtml = withContainer(TreeMapHtml)\nWrappedTreeMapHtml.defaultProps = TreeMapHtmlDefaultProps\n\nexport default WrappedTreeMapHtml\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport TreeMapHtml from './TreeMapHtml'\n\nconst ResponsiveTreeMapHtml = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMapHtml width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveTreeMapHtml\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useEffect, useRef } from 'react'\nimport {\n    degreesToRadians,\n    getRelativeCursor,\n    isCursorInRect,\n    withContainer,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { TreeMapCanvasPropTypes, TreeMapCanvasDefaultProps } from './props'\nimport { useTreeMap } from './hooks'\nimport TreeMapNodeTooltip from './TreeMapNodeTooltip'\n\nconst findNodeUnderCursor = (nodes, margin, x, y) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst TreeMapCanvas = ({\n    data,\n    identity,\n    value,\n    tile,\n    valueFormat,\n    innerPadding,\n    outerPadding,\n    leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    colorBy,\n    nodeOpacity,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    label,\n    labelTextColor,\n    orientLabel,\n    labelSkipSize,\n    isInteractive,\n    onMouseMove,\n    onClick,\n    tooltip,\n    pixelRatio,\n}) => {\n    const canvasEl = useRef(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel: false,\n    })\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        nodes.forEach(node => {\n            ctx.fillStyle = node.color\n            ctx.fillRect(node.x, node.y, node.width, node.height)\n\n            if (borderWidth > 0) {\n                ctx.strokeStyle = node.borderColor\n                ctx.lineWidth = borderWidth\n                ctx.strokeRect(node.x, node.y, node.width, node.height)\n            }\n        })\n\n        if (enableLabel) {\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            nodes.forEach(node => {\n                const showLabel =\n                    node.isLeaf &&\n                    (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n                if (!showLabel) return\n\n                const rotate = orientLabel && node.height > node.width\n\n                ctx.save()\n                ctx.translate(node.x + node.width / 2, node.y + node.height / 2)\n                ctx.rotate(degreesToRadians(rotate ? -90 : 0))\n\n                ctx.fillStyle = node.labelTextColor\n                ctx.fillText(node.label, 0, 0)\n\n                ctx.restore()\n            })\n        }\n    }, [\n        canvasEl,\n        nodes,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        borderWidth,\n        enableLabel,\n        orientLabel,\n        labelSkipSize,\n        theme,\n        pixelRatio,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const node = findNodeUnderCursor(nodes, margin, x, y)\n\n            if (node !== undefined) {\n                showTooltipFromEvent(\n                    <TreeMapNodeTooltip node={node} tooltip={tooltip} />,\n                    event,\n                    'left'\n                )\n                onMouseMove && onMouseMove(node, event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [canvasEl, nodes, margin, showTooltipFromEvent, hideTooltip, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const node = findNodeUnderCursor(nodes, margin, x, y)\n\n            if (node === undefined) return\n\n            onClick && onClick(node, event)\n        },\n        [canvasEl, nodes, margin, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nTreeMapCanvas.propTypes = TreeMapCanvasPropTypes\n\nconst WrappedTreeMapCanvas = withContainer(TreeMapCanvas)\nWrappedTreeMapCanvas.defaultProps = TreeMapCanvasDefaultProps\n\nexport default WrappedTreeMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport TreeMapCanvas from './TreeMapCanvas'\n\nconst ResponsiveTreeMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveTreeMapCanvas\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n"],"names":["optional","f","required","Error","constantZero","x","count","node","sum","children","i","length","value","hierarchy","data","child","childs","n","root","Node","valued","nodes","defaultChildren","pop","Array","push","parent","depth","eachBefore","computeHeight","d","copyData","height","this","prototype","constructor","eachAfter","each","callback","current","next","reverse","sort","compare","path","end","start","ancestor","a","b","aNodes","ancestors","bNodes","c","leastCommonAncestor","k","splice","descendants","leaves","links","source","target","copy","x0","Math","round","y0","x1","y1","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties","TreeMapNode","animatedProps","borderWidth","enableLabel","enableParentLabel","labelSkipSize","theme","useTheme","showLabel","showParentLabel","transform","width","to","v","fill","strokeWidth","stroke","fillOpacity","onMouseEnter","onMouseMove","onMouseLeave","onClick","textAnchor","dominantBaseline","style","pointerEvents","label","parentLabel","memo","TreeMapHtmlNode","id","boxSizing","position","top","left","borderStyle","borderColor","overflow","opacity","background","color","display","justifyContent","alignItems","whiteSpace","transformOrigin","commonPropTypes","identity","PropTypes","valueFormat","colors","ordinalColorsPropType","colorBy","colorPropertyAccessorPropType","nodeOpacity","leavesOnly","tile","treeMapTilePropType","innerPadding","outerPadding","labelFormat","labelTextColor","inheritedColorPropType","orientLabel","parentLabelSize","parentLabelPosition","parentLabelPadding","parentLabelTextColor","isInteractive","tooltip","commonDefaultProps","nodeComponent","role","pixelRatio","scheme","from","modifiers","animate","motionConfig","TreeMapDefaultProps","defs","TreeMapHtmlDefaultProps","TreeMapCanvasDefaultProps","window","_arrayLikeToArray","arr","len","arr2","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","done","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","toString","call","slice","name","test","unsupportedIterableToArray","TypeError","nonIterableRest","TreeMapNodeTooltip","enableChip","renderContent","useTreeMapLayout","useMemo","treemap","squarify","dx","dy","paddingStack","paddingInner","constant","paddingTop","paddingRight","paddingBottom","paddingLeft","positionNode","p","size","padding","paddingOuter","d3Treemap","treeMapTileFromProp","startCase","useHierarchy","getValue","useAccessor","accessor","get","useTreeMap","getIdentity","formatValue","useValueFormatter","getLabel","getParentLabel","layout","rawNodes","cloneDeep","rawNode","computeNodeIdAndPath","pathComponents","omit","y","formattedValue","treeDepth","treeHeight","isParent","isLeaf","getColor","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelTextColor","getParentLabelTextColor","enhancedNodes","getAnimatedNodeProps","htmlTransform","labelOpacity","labelTransform","labelHtmlTransform","parentLabelOpacity","parentLabelTransform","parentLabelHtmlTransform","getEndingAnimatedNodeProps","transformPixels","TreeMapNodes","interactiveNodes","useTooltip","showTooltipFromEvent","hideTooltip","showTooltip","useCallback","handleMouseEnter","handleMouseMove","handleMouseLeave","handleClick","event","useInteractiveTreeMapNodes","useMotionConfig","springConfig","useTransition","initial","enter","update","leave","config","immediate","transition","createElement","WrappedTreeMap","withContainer","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","boundDefs","bindDefs","ResponsiveTreeMap","props","WrappedTreeMapHtml","ResponsiveTreeMapHtml","findNodeUnderCursor","isCursorInRect","WrappedTreeMapCanvas","canvasEl","useRef","useEffect","ctx","rotate","degreesToRadians","handleMouseHover","getRelativeCursor","ref","ResponsiveTreeMapCanvas","baseClone","module","exports","CLONE_DEEP_FLAG","createCompounder","upperFirst","result","word","index"],"sourceRoot":""}