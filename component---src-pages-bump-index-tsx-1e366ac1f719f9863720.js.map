{"version":3,"file":"component---src-pages-bump-index-tsx-1e366ac1f719f9863720.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/area.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/./src/data/components/bump/props.ts","webpack://nivo-website/./src/data/components/bump/mapper.ts","webpack://nivo-website/./src/pages/bump/index.tsx","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\nimport { AxisProps, CanvasAxisProps } from '@nivo/axes'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] }: { exclude?: string[] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport type AxisWithToggle<Axis extends AxisProps | CanvasAxisProps> = NonNullable<Axis> & {\n    enable: boolean\n}\n\nexport const mapAxis = (type: 'top' | 'right' | 'bottom' | 'left') => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: string; enabled: boolean }) =>\n    enabled ? format : undefined\n","import { bumpSvgDefaultProps as defaults } from '@nivo/bump'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    ordinalColors,\n    chartGrid,\n    axes,\n    isInteractive,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: 'BumpSerie<Datum, ExtraProps>[]',\n        help: 'Chart data.',\n        flavors: allFlavors,\n        description: `\n            Chart data, which must conform to this structure:\n\n            \\`\\`\\`\n            {\n                id:   string\n                data: {\n                    x: number | string\n                    y: number | null\n                }[]\n            }[]\n            \\`\\`\\`\n\n            This component assumes that every serie contains all\n            x values sorted the same way they should appear on the chart.\n            \n            As this component is a TypeScript generic, it is possible to customize\n            the datum using the \\`Datum\\` arg, and it's also possible to add\n            some extra properties to the series by passing \\`ExtraProps\\`.\n        `,\n        required: true,\n    },\n    ...chartDimensions(allFlavors),\n    {\n        key: 'interpolation',\n        group: 'Base',\n        type: 'string',\n        help: `Line interpolation.`,\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaults.interpolation,\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'smooth', value: 'smooth' },\n                { label: 'linear', value: 'linear' },\n            ],\n        },\n    },\n    {\n        key: 'xPadding',\n        group: 'Base',\n        type: 'number',\n        help: 'X padding.',\n        defaultValue: defaults.xPadding,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'xOuterPadding',\n        group: 'Base',\n        type: 'number',\n        help: 'X outer padding.',\n        defaultValue: defaults.xOuterPadding,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'yOuterPadding',\n        group: 'Base',\n        type: 'number',\n        help: 'Y outer padding.',\n        defaultValue: defaults.yOuterPadding,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    themeProperty(['svg']),\n    ordinalColors({\n        flavors: allFlavors,\n        defaultValue: defaults.colors,\n    }),\n    {\n        key: 'lineWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Line width.',\n        flavors: ['svg'],\n        required: false,\n        defaultValue: defaults.lineWidth,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'activeLineWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Line width for active series.',\n        flavors: ['svg'],\n        required: false,\n        defaultValue: defaults.activeLineWidth,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'inactiveLineWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Line width for inactive series.',\n        defaultValue: defaults.inactiveLineWidth,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'opacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Opacity.',\n        defaultValue: defaults.opacity,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'activeOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Opacity for active series.',\n        defaultValue: defaults.activeOpacity,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'inactiveOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Opacity for inactive series.',\n        defaultValue: defaults.inactiveOpacity,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'startLabel',\n        help: 'Start label, use a boolean to enable/disable, or a function to customize its text.',\n        group: 'Labels',\n        type: 'boolean | (serie: BumpSerie) => string',\n        defaultValue: defaults.startLabel,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'startLabelPadding',\n        help: 'Start label padding.',\n        group: 'Labels',\n        type: 'number',\n        defaultValue: defaults.startLabelPadding,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'startLabelTextColor',\n        help: 'Method to compute start label text color, or a function to customize its text.',\n        type: 'InheritedColorConfig<BumpComputedSerie>',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaults.startLabelTextColor,\n        control: { type: 'inheritedColor' },\n        group: 'Labels',\n    },\n    {\n        key: 'endLabel',\n        help: 'End label, use a boolean to enable/disable, or a function to customize its text.',\n        group: 'Labels',\n        type: 'boolean | (serie: BumpSerie) => string',\n        defaultValue: defaults.endLabel,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'endLabelPadding',\n        help: 'End label padding.',\n        group: 'Labels',\n        type: 'number',\n        defaultValue: defaults.endLabelPadding,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'endLabelTextColor',\n        help: 'Method to compute end label text color.',\n        type: 'InheritedColorConfig<BumpComputedSerie>',\n        required: false,\n        defaultValue: defaults.endLabelTextColor,\n        flavors: ['svg'],\n        control: { type: 'inheritedColor' },\n        group: 'Labels',\n    },\n    {\n        key: 'pointSize',\n        group: 'Points',\n        help: 'Point size.',\n        type: 'number | Function',\n        defaultValue: defaults.pointSize,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 24,\n        },\n    },\n    {\n        key: 'activePointSize',\n        group: 'Points',\n        help: 'Point size for active series.',\n        type: 'number | Function',\n        defaultValue: defaults.activePointSize,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 24,\n        },\n    },\n    {\n        key: 'inactivePointSize',\n        group: 'Points',\n        help: 'Point size for inactive series.',\n        type: 'number | Function',\n        defaultValue: defaults.inactivePointSize,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 24,\n        },\n    },\n    {\n        key: 'pointColor',\n        group: 'Points',\n        type: 'string | object | Function',\n        help: 'Method to compute point fill color.',\n        defaultValue: defaults.pointColor,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'inheritedColor',\n            inheritableProperties: ['serie.color'],\n            defaultFrom: 'serie.color',\n        },\n    },\n    {\n        key: 'pointBorderWidth',\n        group: 'Points',\n        help: 'Point border width.',\n        type: 'number | Function',\n        defaultValue: defaults.pointBorderWidth,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'activePointBorderWidth',\n        group: 'Points',\n        help: 'Point border width for active series.',\n        type: 'number | Function',\n        defaultValue: defaults.activePointBorderWidth,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'inactivePointBorderWidth',\n        group: 'Points',\n        help: 'Point border width for inactive series.',\n        type: 'number | Function',\n        defaultValue: defaults.inactivePointBorderWidth,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'pointBorderColor',\n        group: 'Points',\n        type: 'string | object | Function',\n        help: 'Method to compute point border color.',\n        defaultValue: defaults.pointBorderColor,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'inheritedColor',\n            inheritableProperties: ['color', 'serie.color'],\n            defaultFrom: 'color',\n        },\n    },\n    ...chartGrid({\n        flavors: allFlavors,\n        xDefault: defaults.enableGridX,\n        yDefault: defaults.enableGridY,\n    }),\n    ...axes({ flavors: allFlavors }),\n    isInteractive({\n        flavors: ['svg'],\n        defaultValue: defaults.isInteractive,\n    }),\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        type: '(serie: BumpComputedSerie, event: MouseEvent) => void',\n        help: 'onMouseEnter handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        type: '(serie: BumpComputedSerie, event: MouseEvent) => void',\n        help: 'onMouseMove handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        type: '(serie: BumpComputedSerie, event: MouseEvent) => void',\n        help: 'onMouseLeave handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        type: '(serie: BumpComputedSerie, event: MouseEvent) => void',\n        help: 'onClick handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the series's data.\n        `,\n        flavors: ['svg'],\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import { settingsMapper, mapAxis } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","import React from 'react'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { ResponsiveBump, bumpSvgDefaultProps as defaults, BumpCommonProps } from '@nivo/bump'\nimport { ModernMotionProps } from '@nivo/core'\nimport { AxisProps } from '@nivo/axes'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/bump/meta.yml'\nimport { groups } from '../../data/components/bump/props'\nimport mapper from '../../data/components/bump/mapper'\n\ninterface Datum {\n    x: number\n    y: number\n}\n\nconst generateData = () => {\n    const years = range(2000, 2005)\n    const ranks = range(1, 13)\n\n    const series: {\n        id: string\n        data: Datum[]\n    }[] = ranks.map(rank => {\n        return {\n            id: `Serie ${rank}`,\n            data: [],\n        }\n    })\n\n    years.forEach(year => {\n        shuffle(ranks).forEach((rank, i) => {\n            series[i].data.push({\n                x: year,\n                y: rank,\n            })\n        })\n    })\n\n    return series\n}\n\ntype Props = Omit<\n    BumpCommonProps<Datum, {}>,\n    'theme' | 'onMouseEnter' | 'onMouseMove' | 'onMouseLeave' | 'onClick' | 'renderWrapper'\n> &\n    ModernMotionProps\n\ntype UnmappedProps = Omit<Props, 'axisTop' | 'axisRight' | 'axisBottom' | 'axisLeft'> & {\n    axisTop: AxisProps & { enable: boolean }\n    axisRight: AxisProps & { enable: boolean }\n    axisBottom: AxisProps & { enable: boolean }\n    axisLeft: AxisProps & { enable: boolean }\n}\n\nconst initialProperties: UnmappedProps = {\n    ...defaults,\n    margin: {\n        top: 40,\n        right: 100,\n        bottom: 40,\n        left: 60,\n    },\n\n    colors: { scheme: 'spectral' },\n    lineWidth: 3,\n    activeLineWidth: 6,\n    inactiveLineWidth: 3,\n    inactiveOpacity: 0.15,\n\n    pointSize: 10,\n    activePointSize: 16,\n    inactivePointSize: 0,\n    pointColor: { theme: 'background' },\n    pointBorderWidth: 3,\n    activePointBorderWidth: 3,\n    inactivePointBorderWidth: 0,\n    pointBorderColor: { from: 'serie.color' },\n\n    axisTop: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: -36,\n    },\n    axisRight: {\n        enable: false,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        format: (value: number) => `#${value}`,\n        legend: 'ranking',\n        legendPosition: 'middle',\n        legendOffset: 40,\n    },\n    axisBottom: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: 32,\n    },\n    axisLeft: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        format: (value: number) => `#${value}`,\n        legend: 'ranking',\n        legendPosition: 'middle',\n        legendOffset: -40,\n    },\n}\n\nconst Bump = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/bump.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <ComponentTemplate<UnmappedProps, Props>\n            name=\"Bump\"\n            meta={meta.Bump}\n            icon=\"chord\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            defaultProperties={defaults}\n            initialProperties={initialProperties}\n            propertiesMapper={mapper}\n            generateData={generateData}\n            image={image}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveBump<Datum>\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={serie =>\n                            logAction({\n                                type: 'click',\n                                label: `[serie] ${serie.id}`,\n                                color: serie.color,\n                                data: serie,\n                            })\n                        }\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Bump\n","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","area","data","i","j","k","d","buffer","n","length","defined0","x0z","Array","y0z","areaStart","lineStart","lineEnd","point","areaEnd","arealine","arguments","lineX0","lineY0","lineY1","lineX1","line","p","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","key","omit","mapAxis","type","value","upperFirst","enable","mapFormat","format","enabled","undefined","allFlavors","props","group","help","flavors","description","required","chartDimensions","defaultValue","defaults","control","choices","label","min","max","step","themeProperty","ordinalColors","inheritableProperties","defaultFrom","chartGrid","xDefault","yDefault","axes","isInteractive","motionProperties","groups","groupProperties","axisTop","axisRight","axisBottom","axisLeft","generateData","years","range","ranks","series","map","rank","id","year","shuffle","push","initialProperties","margin","top","right","bottom","left","colors","scheme","lineWidth","activeLineWidth","inactiveLineWidth","inactiveOpacity","pointSize","activePointSize","inactivePointSize","pointColor","theme","pointBorderWidth","activePointBorderWidth","inactivePointBorderWidth","pointBorderColor","from","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","image","useStaticQuery","childImageSharp","gatsbyImageData","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","logAction","onClick","serie","color","computeCartesianTicks","axis","scale","ticksPosition","tickValues","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","ticks","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","isArray","lines","AxisTick","_value","textAnchor","animatedProps","useTheme","useMemo","style","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","tick","initial","textTransform","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","isXAxis","GridLine","_jsx","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","ctx","Number","degreesToRadians","String","renderAxesToCanvas","renderGridLinesToCanvas","copyArray","shuffleSelf","module","exports","array","nativeFloor","floor","nativeRandom","random","lower","upper","collection","arrayMap","object","baseRandom","size","index","lastIndex","rand","arrayShuffle","baseShuffle","baseValues"],"sourceRoot":""}