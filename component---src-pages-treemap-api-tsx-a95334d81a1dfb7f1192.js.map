{"version":3,"file":"component---src-pages-treemap-api-tsx-a95334d81a1dfb7f1192.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/./src/data/components/treemap/generator.ts","webpack://nivo-website/./src/data/components/treemap/mapper.ts","webpack://nivo-website/./src/data/components/treemap/props.ts","webpack://nivo-website/./src/pages/treemap/api.tsx","webpack://nivo-website/../node_modules/lodash/startCase.js"],"sourcesContent":["export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import { generateLibTree } from '@nivo/generators'\nimport range from 'lodash/range'\nimport random from 'lodash/random'\n\nexport const generateLightDataSet = () => generateLibTree()\n\nconst HEAVY_NODE_COUNT = 600\n\nexport const generateHeavyDataSet = () => {\n    const children = range(HEAVY_NODE_COUNT).map(i => ({\n        id: `node.${i}`,\n        value: random(10, 100000),\n    }))\n\n    return {\n        root: {\n            id: 'root',\n            children,\n        },\n        nodeCount: HEAVY_NODE_COUNT,\n    }\n}\n","import { settingsMapper, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper({\n    label: value => {\n        if (value === `node => \\`\\${node.id} (\\${node.formattedValue})\\``)\n            return node => `${node.id} (${node.formattedValue})`\n        return value\n    },\n    parentLabel: value => {\n        if (value === `node => node.pathComponents.join(' / ')`)\n            return node => node.pathComponents.join(' / ')\n        return value\n    },\n    valueFormat: mapFormat,\n})\n","import { commonDefaultProps as defaults, tileByType } from '@nivo/treemap'\nimport {\n    motionProperties,\n    defsProperties,\n    groupProperties,\n    themeProperty,\n} from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    ordinalColors,\n    isInteractive,\n    commonAccessibilityProps,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg', 'html', 'canvas', 'api']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'The hierarchical data object.',\n        type: 'object',\n        required: true,\n    },\n    {\n        key: 'identity',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'The key or function to use to retrieve nodes identity.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.identity,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'The key or function to use to retrieve nodes value.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: 'value',\n    },\n    {\n        key: 'valueFormat',\n        help: `\n            Value format supporting d3-format notation, this formatted value\n            will then be used for labels and tooltips.\n        `,\n        flavors: allFlavors,\n        type: 'string | Function',\n        required: false,\n        control: { type: 'valueFormat' },\n        group: 'Base',\n    },\n    {\n        key: 'tile',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Strategy used to compute nodes.',\n        description: `\n            Strategy used to compute nodes, see\n            [official d3 documentation](https://github.com/mbostock/d3/wiki/Treemap-Layout#mode).\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: 'squarify',\n        control: {\n            type: 'choices',\n            choices: Object.keys(tileByType).map(tile => ({\n                label: tile,\n                value: tile,\n            })),\n        },\n    },\n    {\n        key: 'leavesOnly',\n        help: 'Only render leaf nodes (no parent).',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.leavesOnly,\n        control: { type: 'switch' },\n        group: 'Base',\n    },\n    {\n        key: 'innerPadding',\n        help: 'Padding between parent and child node.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.innerPadding,\n        group: 'Base',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'outerPadding',\n        help: 'Padding between parent and child node.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.outerPadding,\n        group: 'Base',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    ...chartDimensions(allFlavors),\n    themeProperty(allFlavors),\n    ordinalColors({\n        flavors: allFlavors,\n        defaultValue: defaults.colors,\n    }),\n    {\n        key: 'nodeOpacity',\n        help: 'Node opacity (0~1).',\n        flavors: allFlavors,\n        required: false,\n        defaultValue: defaults.nodeOpacity,\n        type: 'number',\n        control: { type: 'opacity' },\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Control node border width.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        control: { type: 'lineWidth' },\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        flavors: allFlavors,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        control: { type: 'inheritedColor' },\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'enableLabel',\n        help: 'Enable/disable labels.',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableLabel,\n        control: { type: 'switch' },\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        help: 'Label accessor.',\n        flavors: allFlavors,\n        description:\n            'Defines how to get label text, can be a string (used to access current node property) or a function which will receive the actual node and must return the desired label.',\n        type: 'string | Function',\n        required: false,\n        group: 'Labels',\n        control: {\n            type: 'choices',\n            choices: [\n                'formattedValue',\n                'id',\n                `node => \\`\\${node.id} (\\${node.formattedValue})\\``,\n            ].map(prop => ({\n                label: prop,\n                value: prop,\n            })),\n        },\n    },\n    {\n        key: 'labelSkipSize',\n        help: 'Skip label rendering if node minimal side length is lower than given value, 0 to disable.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        group: 'Labels',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 100,\n        },\n    },\n    {\n        key: 'orientLabel',\n        help: 'Orient labels according to max node width/height.',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.orientLabel,\n        control: { type: 'switch' },\n        group: 'Labels',\n    },\n    {\n        key: 'labelTextColor',\n        help: 'Method to compute label text color.',\n        flavors: allFlavors,\n        type: 'string | object | Function',\n        required: false,\n        control: { type: 'inheritedColor' },\n        group: 'Labels',\n    },\n    {\n        key: 'enableParentLabel',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableParentLabel,\n        control: { type: 'switch' },\n        group: 'Labels',\n    },\n    {\n        key: 'parentLabel',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Parent label accessor.',\n        description:\n            'Defines how to get parent label text, can be a string (used to access current node property) or a function which will receive the actual node and must return the desired label.',\n        type: 'string | Function',\n        required: false,\n        group: 'Labels',\n        control: {\n            type: 'choices',\n            choices: ['id', 'formattedValue', `node => node.pathComponents.join(' / ')`].map(\n                prop => ({\n                    label: prop,\n                    value: prop,\n                })\n            ),\n        },\n    },\n    {\n        key: 'parentLabelSize',\n        flavors: ['svg', 'html', 'api'],\n        help: `Parent label size.`,\n        required: false,\n        defaultValue: defaults.parentLabelSize,\n        type: `number`,\n        group: 'Labels',\n        control: {\n            type: 'range',\n            min: 10,\n            max: 40,\n        },\n    },\n    {\n        key: 'parentLabelPosition',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Parent label position.',\n        type: `'top' | 'right' | 'bottom' | 'left'`,\n        required: false,\n        group: 'Labels',\n        defaultValue: defaults.parentLabelPosition,\n        control: {\n            type: 'choices',\n            choices: ['top', 'right', 'bottom', 'left'].map(prop => ({\n                label: prop,\n                value: prop,\n            })),\n        },\n    },\n    {\n        key: 'parentLabelPadding',\n        flavors: ['svg', 'html', 'api'],\n        help: `Parent label padding.`,\n        required: false,\n        defaultValue: defaults.parentLabelPadding,\n        type: `number`,\n        group: 'Labels',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'parentLabelTextColor',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Method to compute parent label text color.',\n        type: 'string | object | Function',\n        required: false,\n        control: { type: 'inheritedColor' },\n        group: 'Labels',\n    },\n    isInteractive({\n        flavors: ['svg', 'html', 'canvas'],\n        defaultValue: defaults.isInteractive,\n    }),\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseEnter handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseMove handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseLeave handler.',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onClick handler.',\n        required: false,\n    },\n    {\n        key: 'nodeComponent',\n        type: 'NodeComponent',\n        group: 'Customization',\n        help: 'Override the default node component.',\n        flavors: ['svg', 'html'],\n    },\n    {\n        key: 'layers',\n        type: `('nodes' | CustomSvgLayer | CustomHtmlLayer | CustomCanvasLayer)[]`,\n        group: 'Customization',\n        help: 'Define layers, please use the appropriate variant for custom layers.',\n        defaultValue: defaults.layers,\n        flavors: ['svg', 'html', 'canvas'],\n    },\n    ...commonAccessibilityProps(allFlavors),\n    ...motionProperties(['svg', 'html', 'canvas'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import React, { useMemo } from 'react'\nimport { svgDefaultProps as defaults } from '@nivo/treemap'\nimport { Seo } from '../../components/Seo'\nimport { ApiClient } from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/treemap/props'\nimport mapper from '../../data/components/treemap/mapper'\nimport { generateLightDataSet } from '../../data/components/treemap/generator'\nimport meta from '../../data/components/treemap/meta.yml'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst TreeMapApi = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/treemap.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    const data = useMemo(() => generateLightDataSet(), [])\n\n    return (\n        <>\n            <Seo\n                title=\"TreeMap HTTP API\"\n                image={image}\n                keywords={[...meta.TreeMap.tags, 'HTTP API']}\n            />\n            <ApiClient\n                componentName=\"TreeMap\"\n                chartClass=\"treemap\"\n                apiPath=\"/charts/treemap\"\n                flavors={meta.flavors}\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    data: JSON.stringify(data, null, '  '),\n                    identity: 'name',\n                    value: 'loc',\n                    valueFormat: { format: '.02s', enabled: true },\n                    tile: defaults.tile,\n                    leavesOnly: defaults.leavesOnly,\n                    innerPadding: defaults.innerPadding,\n                    outerPadding: defaults.outerPadding,\n\n                    width: 800,\n                    height: 560,\n                    margin: {\n                        top: 10,\n                        right: 10,\n                        bottom: 10,\n                        left: 10,\n                    },\n\n                    enableLabel: defaults.enableLabel,\n                    label: defaults.label,\n                    labelSkipSize: 12,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1.2]],\n                    },\n                    orientLabel: defaults.orientLabel,\n                    enableParentLabel: defaults.enableParentLabel,\n                    parentLabel: defaults.parentLabel,\n                    parentLabelSize: defaults.parentLabelSize,\n                    parentLabelPosition: defaults.parentLabelPosition,\n                    parentLabelPadding: defaults.parentLabelPadding,\n                    parentLabelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 2]],\n                    },\n\n                    colors: defaults.colors,\n                    colorBy: defaults.colorBy,\n                    nodeOpacity: defaults.nodeOpacity,\n                    borderWidth: defaults.borderWidth,\n                    borderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.1]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default TreeMapApi\n","var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n"],"names":["durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","arguments","length","floor","ceil","round","d0","d1","offset","step","Math","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","d","generateLightDataSet","generateLibTree","generateHeavyDataSet","root","id","children","map","i","value","random","nodeCount","settingsMapper","label","node","formattedValue","parentLabel","pathComponents","join","valueFormat","mapFormat","allFlavors","props","key","group","flavors","help","type","required","defaultValue","defaults","control","description","choices","Object","keys","tileByType","tile","unit","min","max","chartDimensions","themeProperty","ordinalColors","defsProperties","prop","isInteractive","commonAccessibilityProps","motionProperties","groups","groupProperties","image","useStaticQuery","childImageSharp","gatsbyImageData","data","useMemo","title","keywords","meta","componentName","chartClass","apiPath","dataProperty","controlGroups","propsMapper","mapper","defaultProps","JSON","stringify","identity","format","enabled","leavesOnly","innerPadding","outerPadding","width","height","margin","top","right","bottom","left","enableLabel","labelSkipSize","labelTextColor","from","modifiers","orientLabel","enableParentLabel","parentLabelSize","parentLabelPosition","parentLabelPadding","parentLabelTextColor","colors","colorBy","nodeOpacity","borderWidth","borderColor","createCompounder","upperFirst","startCase","result","word","index","module","exports"],"sourceRoot":""}