{"version":3,"file":"86c1ecb303d3f1ab902de8e46b03483eaf8b80bf-eaf3a1e75596decc9265.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-hierarchy/src/array.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/pack/enclose.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/pack/siblings.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/pack/index.js","webpack://nivo-website/../src/CirclePackingTooltip.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/Circles.tsx","webpack://nivo-website/../src/CircleSvg.tsx","webpack://nivo-website/../src/Labels.tsx","webpack://nivo-website/../src/LabelSvg.tsx","webpack://nivo-website/../src/CirclePacking.tsx","webpack://nivo-website/../src/ResponsiveCirclePacking.tsx","webpack://nivo-website/../src/CircleHtml.tsx","webpack://nivo-website/../src/LabelHtml.tsx","webpack://nivo-website/../src/CirclePackingHtml.tsx","webpack://nivo-website/../src/ResponsiveCirclePackingHtml.tsx","webpack://nivo-website/../src/CirclePackingCanvas.tsx","webpack://nivo-website/../src/ResponsiveCirclePackingCanvas.tsx"],"sourcesContent":["export var slice = Array.prototype.slice;\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}","import { shuffle, slice } from \"../array.js\";\nexport default function (circles) {\n  var i = 0,\n      n = (circles = shuffle(slice.call(circles))).length,\n      B = [],\n      p,\n      e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n  if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.\n\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  } // If we get here then B must have at least two elements.\n\n\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  } // If we get here then something is very wrong.\n\n\n  throw new Error();\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r,\n      dx = b.x - a.x,\n      dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6,\n      dx = b.x - a.x,\n      dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1:\n      return encloseBasis1(B[0]);\n\n    case 2:\n      return encloseBasis2(B[0], B[1]);\n\n    case 3:\n      return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x,\n      y1 = a.y,\n      r1 = a.r,\n      x2 = b.x,\n      y2 = b.y,\n      r2 = b.r,\n      x21 = x2 - x1,\n      y21 = y2 - y1,\n      r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x,\n      y1 = a.y,\n      r1 = a.r,\n      x2 = b.x,\n      y2 = b.y,\n      r2 = b.r,\n      x3 = c.x,\n      y3 = c.y,\n      r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}","import enclose from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x,\n      x,\n      a2,\n      dy = b.y - a.y,\n      y,\n      b2,\n      d2 = dx * dx + dy * dy;\n\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6,\n      dx = b.x - a.x,\n      dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.\n\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r; // Place the second circle.\n\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r; // Place the third circle.\n\n  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.\n\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a; // Attempt to place each remaining circle…\n\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next); // Success! Insert the new circle c between a and b.\n\n\n    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.\n\n    aa = score(a);\n\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n\n    b = a.next;\n  } // Compute the enclosing circle of the front chain.\n\n\n  a = [b._], c = b;\n\n  while ((c = c.next) !== b) {\n    a.push(c._);\n  }\n\n  c = enclose(a); // Translate the circles to put the enclosing circle around the origin.\n\n  for (i = 0; i < n; ++i) {\n    a = circles[i], a.x -= c.x, a.y -= c.y;\n  }\n\n  return c.r;\n}\nexport default function (circles) {\n  packEnclose(circles);\n  return circles;\n}","import { packEnclose } from \"./siblings.js\";\nimport { optional } from \"../accessors.js\";\nimport constant, { constantZero } from \"../constant.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function () {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n\n    return root;\n  }\n\n  pack.radius = function (x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function (x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function (node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function (node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n      if (r) for (i = 0; i < n; ++i) {\n        children[i].r += r;\n      }\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) {\n        children[i].r -= r;\n      }\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function (node) {\n    var parent = node.parent;\n    node.r *= k;\n\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const CirclePackingTooltip = <RawDatum,>({\n    id,\n    formattedValue,\n    color,\n}: ComputedDatum<RawDatum>) => (\n    <BasicTooltip id={id} value={formattedValue} enableChip={true} color={color} />\n)\n","import { useMemo, MouseEvent, MutableRefObject, useCallback } from 'react'\nimport { pack as d3Pack, hierarchy as d3Hierarchy } from 'd3-hierarchy'\nimport cloneDeep from 'lodash/cloneDeep'\nimport sortBy from 'lodash/sortBy'\nimport {\n    usePropertyAccessor,\n    useValueFormatter,\n    useTheme,\n    getRelativeCursor,\n    getDistance,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    CirclePackingCommonProps,\n    CirclePackingCustomLayerProps,\n    ComputedDatum,\n    MouseHandlers,\n} from './types'\n\nexport const useCirclePacking = <RawDatum>({\n    data,\n    id,\n    value,\n    valueFormat,\n    width,\n    height,\n    padding,\n    leavesOnly,\n    colors,\n    colorBy,\n    inheritColorFromParent,\n    childColor,\n}: {\n    data: CirclePackingCommonProps<RawDatum>['data']\n    id: CirclePackingCommonProps<RawDatum>['id']\n    value: CirclePackingCommonProps<RawDatum>['value']\n    valueFormat?: CirclePackingCommonProps<RawDatum>['valueFormat']\n    width: number\n    height: number\n    padding: CirclePackingCommonProps<RawDatum>['padding']\n    leavesOnly: CirclePackingCommonProps<RawDatum>['leavesOnly']\n    colors: CirclePackingCommonProps<RawDatum>['colors']\n    colorBy: CirclePackingCommonProps<RawDatum>['colorBy']\n    inheritColorFromParent: CirclePackingCommonProps<RawDatum>['inheritColorFromParent']\n    childColor: CirclePackingCommonProps<RawDatum>['childColor']\n}): ComputedDatum<RawDatum>[] => {\n    const getId = usePropertyAccessor<RawDatum, string>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>>(\n        colors,\n        colorBy\n    )\n    const theme = useTheme()\n    const getChildColor = useInheritedColor<ComputedDatum<RawDatum>>(childColor, theme)\n\n    // d3 mutates the data for performance reasons,\n    // however it does not work well with reactive programming,\n    // this ensures that we don't mutate the input data\n    const clonedData = cloneDeep(data)\n\n    const hierarchy = d3Hierarchy<RawDatum>(clonedData).sum(getValue)\n\n    const pack = d3Pack<RawDatum>().size([width, height]).padding(padding)\n    const packedData = pack(hierarchy)\n\n    const nodes = leavesOnly ? packedData.leaves() : packedData.descendants()\n\n    // It's important to sort node by depth,\n    // it ensures that we assign a parent node\n    // which has already been computed, because parent nodes\n    // are gonna be computed first\n    const sortedNodes = sortBy(nodes, 'depth')\n\n    const total = hierarchy.value ?? 0\n\n    const computedNodes = sortedNodes.reduce<ComputedDatum<RawDatum>[]>((acc, descendant) => {\n        const id = getId(descendant.data)\n        const value = descendant.value!\n        const percentage = (100 * value) / total\n        const path = descendant.ancestors().map(ancestor => getId(ancestor.data))\n\n        let parent: ComputedDatum<RawDatum> | undefined\n        if (descendant.parent) {\n            parent = acc.find(node => node.id === getId(descendant.parent!.data))\n        }\n\n        const normalizedNode: ComputedDatum<RawDatum> = {\n            id,\n            path,\n            value,\n            percentage,\n            formattedValue: valueFormat ? formatValue(value) : `${percentage.toFixed(2)}%`,\n            x: descendant.x,\n            y: descendant.y,\n            radius: descendant.r,\n            color: '',\n            data: descendant.data,\n            depth: descendant.depth,\n            height: descendant.height,\n        }\n\n        if (inheritColorFromParent && parent && normalizedNode.depth > 1) {\n            normalizedNode.color = getChildColor(parent)\n        } else {\n            normalizedNode.color = getColor(normalizedNode)\n        }\n\n        return [...acc, normalizedNode]\n    }, [])\n\n    return computedNodes\n}\n\nexport const useCirclePackingZoom = <RawDatum>(\n    nodes: ComputedDatum<RawDatum>[],\n    zoomedId: CirclePackingCommonProps<RawDatum>['zoomedId'],\n    width: number,\n    height: number\n) =>\n    useMemo(() => {\n        if (!zoomedId) return nodes\n\n        const zoomedNode = nodes.find(({ id }) => id === zoomedId)\n        if (!zoomedNode) return nodes\n\n        const ratio = Math.min(width, height) / (zoomedNode.radius * 2)\n        const offsetX = width / 2 - zoomedNode.x * ratio\n        const offsetY = height / 2 - zoomedNode.y * ratio\n\n        return nodes.map(node => ({\n            ...node,\n            x: node.x * ratio + offsetX,\n            y: node.y * ratio + offsetY,\n            radius: node.radius * ratio,\n        }))\n    }, [nodes, zoomedId, width, height])\n\nexport const useCirclePackingLabels = <RawDatum>({\n    nodes,\n    label,\n    filter,\n    skipRadius,\n    textColor,\n}: {\n    nodes: ComputedDatum<RawDatum>[]\n    label: CirclePackingCommonProps<RawDatum>['label']\n    filter: CirclePackingCommonProps<RawDatum>['labelsFilter']\n    skipRadius: CirclePackingCommonProps<RawDatum>['labelsSkipRadius']\n    textColor: CirclePackingCommonProps<RawDatum>['labelTextColor']\n}) => {\n    const getLabel = usePropertyAccessor<ComputedDatum<RawDatum>, string | number>(label)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<ComputedDatum<RawDatum>>(textColor, theme)\n\n    // computing the labels\n    const labels = useMemo(\n        () =>\n            nodes\n                .filter(node => node.radius >= skipRadius)\n                .map(node => ({\n                    label: getLabel(node),\n                    textColor: getTextColor(node),\n                    node,\n                })),\n        [nodes, skipRadius, getLabel, getTextColor]\n    )\n\n    // apply extra filtering if provided\n    return useMemo(() => {\n        if (!filter) return labels\n\n        return labels.filter(filter)\n    }, [labels, filter])\n}\n\nexport const useNodeMouseHandlers = <RawDatum>(\n    node: ComputedDatum<RawDatum>,\n    { onMouseEnter, onMouseMove, onMouseLeave, onClick }: MouseHandlers<RawDatum>\n): Partial<\n    Record<'onMouseEnter' | 'onMouseMove' | 'onMouseLeave' | 'onClick', (event: MouseEvent) => void>\n> =>\n    useMemo(\n        () => ({\n            onMouseEnter: onMouseEnter\n                ? (event: MouseEvent) => {\n                      onMouseEnter(node, event)\n                  }\n                : undefined,\n            onMouseMove: onMouseMove\n                ? (event: MouseEvent) => {\n                      onMouseMove(node, event)\n                  }\n                : undefined,\n            onMouseLeave: onMouseLeave\n                ? (event: MouseEvent) => {\n                      onMouseLeave(node, event)\n                  }\n                : undefined,\n            onClick: onClick\n                ? (event: MouseEvent) => {\n                      onClick(node, event)\n                  }\n                : undefined,\n        }),\n        [node, onMouseEnter, onMouseMove, onMouseLeave, onClick]\n    )\n\nexport const useMouseCircleDetection = <RawDatum>({\n    nodes,\n    canvasEl,\n    margin,\n}: {\n    nodes: ComputedDatum<RawDatum>[]\n    canvasEl: MutableRefObject<HTMLCanvasElement | null>\n    margin: {\n        top: number\n        left: number\n    }\n}) => {\n    // we need to sort in order to detect higher nodes first\n    const sortedNodes = useMemo(() => sortBy(nodes, 'height'), [nodes])\n\n    return useCallback(\n        (event: MouseEvent) => {\n            if (!canvasEl.current) return null\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n            return sortedNodes.find(node => {\n                const distanceFromNode = getDistance(\n                    node.x,\n                    node.y,\n                    x - margin.left,\n                    y - margin.top\n                )\n                return distanceFromNode <= node.radius\n            })\n        },\n        [canvasEl, margin, sortedNodes]\n    )\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useCirclePackingLayerContext = <RawDatum>({\n    nodes,\n}: {\n    nodes: ComputedDatum<RawDatum>[]\n}): CirclePackingCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            nodes,\n        }),\n        [nodes]\n    )\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { CirclePackingLayerId } from './types'\nimport { CirclePackingTooltip } from './CirclePackingTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    padding: 0,\n    leavesOnly: false,\n    layers: ['circles', 'labels'] as CirclePackingLayerId[],\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n    colorBy: 'depth' as const,\n    inheritColorFromParent: false,\n    childColor: {\n        from: 'color',\n        modifiers: [['darker', 0.3]],\n    },\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.3]],\n    },\n    defs: [],\n    fill: [],\n    enableLabels: false,\n    label: 'id',\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1.6]],\n    },\n    labelsSkipRadius: 8,\n    isInteractive: true,\n    tooltip: CirclePackingTooltip,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { createElement, useMemo, MouseEvent } from 'react'\nimport * as React from 'react'\nimport { useTransition, to, SpringValue } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CircleComponent, MouseHandlers, CirclePackingCommonProps } from './types'\n\n/**\n * A negative radius value is invalid for an SVG circle,\n * this custom interpolation makes sure it's either\n * positive or zero.\n */\nexport const interpolateRadius = (radiusValue: SpringValue<number>) =>\n    to([radiusValue], radius => Math.max(0, radius))\n\ntype CirclesProps<RawDatum> = {\n    nodes: ComputedDatum<RawDatum>[]\n    borderWidth: CirclePackingCommonProps<RawDatum>['borderWidth']\n    borderColor: CirclePackingCommonProps<RawDatum>['borderColor']\n    component: CircleComponent<RawDatum>\n    isInteractive: CirclePackingCommonProps<RawDatum>['isInteractive']\n    tooltip: CirclePackingCommonProps<RawDatum>['tooltip']\n} & MouseHandlers<RawDatum>\n\nconst getTransitionPhases = <RawDatum,>(\n    getBorderColor: (node: ComputedDatum<RawDatum>) => string\n) => ({\n    enter: (node: ComputedDatum<RawDatum>) => ({\n        x: node.x,\n        y: node.y,\n        radius: 0,\n        color: node.color,\n        borderColor: getBorderColor(node),\n        opacity: 0,\n    }),\n    update: (node: ComputedDatum<RawDatum>) => ({\n        x: node.x,\n        y: node.y,\n        radius: node.radius,\n        color: node.color,\n        borderColor: getBorderColor(node),\n        opacity: 1,\n    }),\n    leave: (node: ComputedDatum<RawDatum>) => ({\n        x: node.x,\n        y: node.y,\n        radius: 0,\n        color: node.color,\n        borderColor: getBorderColor(node),\n        opacity: 0,\n    }),\n})\n\nexport const Circles = <RawDatum,>({\n    nodes,\n    borderWidth,\n    borderColor,\n    component,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: CirclesProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, node), event)\n            onMouseEnter?.(node, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, node), event)\n            onMouseMove?.(node, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            hideTooltip()\n            onMouseLeave?.(node, event)\n        }\n    }, [isInteractive, hideTooltip, onMouseLeave])\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (node: ComputedDatum<RawDatum>, event: MouseEvent) => {\n            onClick?.(node, event)\n        }\n    }, [isInteractive, onClick])\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const transitionPhases = useMemo(\n        () => getTransitionPhases<RawDatum>(getBorderColor),\n        [getBorderColor]\n    )\n\n    const transition = useTransition<\n        ComputedDatum<RawDatum>,\n        {\n            x: number\n            y: number\n            radius: number\n            color: string\n            borderColor: string\n            opacity: number\n        }\n    >(nodes, {\n        keys: node => node.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((transitionProps, node) => {\n                return React.createElement(component, {\n                    key: node.id,\n                    node,\n                    style: {\n                        ...transitionProps,\n                        radius: interpolateRadius(transitionProps.radius),\n                        borderWidth,\n                    },\n                    onMouseEnter: handleMouseEnter,\n                    onMouseMove: handleMouseMove,\n                    onMouseLeave: handleMouseLeave,\n                    onClick: handleClick,\n                })\n            })}\n        </>\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { CircleProps } from './types'\nimport { useNodeMouseHandlers } from './hooks'\n\nexport const CircleSvg = <RawDatum,>({\n    node,\n    style,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: CircleProps<RawDatum>) => {\n    const handlers = useNodeMouseHandlers<RawDatum>(node, {\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    })\n\n    return (\n        <animated.circle\n            key={node.id}\n            cx={style.x}\n            cy={style.y}\n            r={style.radius}\n            fill={node.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            opacity={style.opacity}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n","import { createElement, useMemo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { CirclePackingCommonProps, ComputedDatum, LabelComponent, ComputedLabel } from './types'\nimport { useCirclePackingLabels } from './hooks'\nimport { interpolateRadius } from './Circles'\n\ninterface CirclesProps<RawDatum> {\n    nodes: ComputedDatum<RawDatum>[]\n    label: CirclePackingCommonProps<RawDatum>['label']\n    filter?: CirclePackingCommonProps<RawDatum>['labelsFilter']\n    skipRadius: CirclePackingCommonProps<RawDatum>['labelsSkipRadius']\n    textColor: CirclePackingCommonProps<RawDatum>['labelTextColor']\n    component: LabelComponent<RawDatum>\n}\n\nconst getTransitionPhases = <RawDatum,>() => ({\n    enter: (label: ComputedLabel<RawDatum>) => ({\n        x: label.node.x,\n        y: label.node.y,\n        radius: label.node.radius,\n        textColor: label.textColor,\n        opacity: 0,\n    }),\n    update: (label: ComputedLabel<RawDatum>) => ({\n        x: label.node.x,\n        y: label.node.y,\n        radius: label.node.radius,\n        textColor: label.textColor,\n        opacity: 1,\n    }),\n    leave: (label: ComputedLabel<RawDatum>) => ({\n        x: label.node.x,\n        y: label.node.y,\n        radius: label.node.radius,\n        textColor: label.textColor,\n        opacity: 0,\n    }),\n})\n\nexport const Labels = <RawDatum,>({\n    nodes,\n    label,\n    filter,\n    skipRadius,\n    textColor,\n    component,\n}: CirclesProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useCirclePackingLabels({\n        nodes,\n        label,\n        filter,\n        skipRadius,\n        textColor,\n    })\n\n    const transitionPhases = useMemo(() => getTransitionPhases<RawDatum>(), [])\n\n    const transition = useTransition<\n        ComputedLabel<RawDatum>,\n        {\n            x: number\n            y: number\n            radius: number\n            textColor: string\n            opacity: number\n        }\n    >(labels, {\n        keys: label => label.node.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((transitionProps, label) => {\n                return createElement(component, {\n                    key: label.node.id,\n                    label: label.label,\n                    style: {\n                        ...transitionProps,\n                        radius: interpolateRadius(transitionProps.radius),\n                    },\n                    node: label.node,\n                })\n            })}\n        </>\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { LabelProps } from './types'\n\nexport const LabelSvg = <RawDatum,>({ node, label, style }: LabelProps<RawDatum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.text\n            key={node.id}\n            x={style.x}\n            y={style.y}\n            textAnchor=\"middle\"\n            dominantBaseline=\"central\"\n            style={{\n                ...theme.labels.text,\n                fill: style.textColor,\n                opacity: style.opacity,\n                pointerEvents: 'none',\n            }}\n        >\n            {label}\n        </animated.text>\n    )\n}\n","import { createElement, Fragment, ReactNode, useMemo } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { CirclePackingLayerId, CirclePackingSvgProps, ComputedDatum } from './types'\nimport { useCirclePacking, useCirclePackingZoom, useCirclePackingLayerContext } from './hooks'\nimport { defaultProps } from './props'\nimport { Circles } from './Circles'\nimport { CircleSvg } from './CircleSvg'\nimport { Labels } from './Labels'\nimport { LabelSvg } from './LabelSvg'\n\ntype InnerCirclePackingProps<RawDatum> = Partial<\n    Omit<\n        CirclePackingSvgProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nconst InnerCirclePacking = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    width,\n    height,\n    margin: partialMargin,\n    padding = defaultProps.padding,\n    leavesOnly = defaultProps.leavesOnly,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>\n    >,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    circleComponent = CircleSvg,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    enableLabels = defaultProps.enableLabels,\n    label = defaultProps.label,\n    labelsFilter,\n    labelsSkipRadius = defaultProps.labelsSkipRadius,\n    labelTextColor = defaultProps.labelTextColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    labelComponent = LabelSvg,\n    layers = defaultProps.layers,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = defaultProps.tooltip,\n    zoomedId,\n    role = defaultProps.role,\n}: InnerCirclePackingProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const nodes = useCirclePacking<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        leavesOnly,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const zoomedNodes = useCirclePackingZoom<RawDatum>(nodes, zoomedId, innerWidth, innerHeight)\n\n    const boundDefs = useMemo(\n        () => bindDefs(defs, zoomedNodes, fill, { targetKey: 'fill' }),\n        [defs, zoomedNodes, fill]\n    )\n\n    const layerById: Record<CirclePackingLayerId, ReactNode> = {\n        circles: null,\n        labels: null,\n    }\n\n    if (layers.includes('circles')) {\n        layerById.circles = (\n            <Circles<RawDatum>\n                key=\"circles\"\n                nodes={zoomedNodes}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                component={circleComponent}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (enableLabels && layers.includes('labels')) {\n        layerById.labels = (\n            <Labels<RawDatum>\n                key=\"labels\"\n                nodes={zoomedNodes}\n                label={label}\n                filter={labelsFilter}\n                skipRadius={labelsSkipRadius}\n                textColor={labelTextColor}\n                component={labelComponent}\n            />\n        )\n    }\n\n    const layerContext = useCirclePackingLayerContext<RawDatum>({\n        nodes,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as CirclePackingLayerId] !== undefined) {\n                    return layerById[layer as CirclePackingLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const CirclePacking = <RawDatum,>({\n    theme,\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    renderWrapper,\n    ...otherProps\n}: Partial<Omit<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container\n        isInteractive={isInteractive}\n        animate={animate}\n        motionConfig={motionConfig}\n        renderWrapper={renderWrapper}\n        theme={theme}\n    >\n        <InnerCirclePacking<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CirclePackingSvgProps } from './types'\nimport { CirclePacking } from './CirclePacking'\n\ntype ResponsiveCirclePackingProps<RawDatum> = Partial<\n    Omit<CirclePackingSvgProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<CirclePackingSvgProps<RawDatum>, 'data'>\n\nexport const ResponsiveCirclePacking = <RawDatum,>(\n    props: ResponsiveCirclePackingProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <CirclePacking<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { animated, to, SpringValue, Interpolation } from '@react-spring/web'\nimport { CircleProps } from './types'\nimport { useNodeMouseHandlers } from './hooks'\n\nexport const interpolatePosition = (\n    positionValue: SpringValue<number>,\n    radiusValue: Interpolation<number>\n) => to([positionValue, radiusValue], (position, radius) => position - radius)\n\nexport const interpolateSize = (radiusValue: Interpolation<number>) =>\n    to([radiusValue], radius => radius * 2)\n\nexport const interpolateBorderWidth = (borderWidth: number, radiusValue: Interpolation<number>) =>\n    to([radiusValue], radius => Math.min(borderWidth, radius))\n\nexport const CircleHtml = <RawDatum,>({\n    node,\n    style,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: CircleProps<RawDatum>) => {\n    const size = interpolateSize(style.radius)\n\n    const handlers = useNodeMouseHandlers<RawDatum>(node, {\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    })\n\n    return (\n        <animated.div\n            style={{\n                position: 'absolute',\n                top: interpolatePosition(style.y, style.radius),\n                left: interpolatePosition(style.x, style.radius),\n                height: size,\n                width: size,\n                borderRadius: style.radius,\n                backgroundColor: style.color,\n                borderWidth: interpolateBorderWidth(style.borderWidth, style.radius),\n                borderStyle: 'solid',\n                borderColor: style.borderColor,\n                boxSizing: 'border-box',\n            }}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n","import { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { LabelProps } from './types'\nimport { interpolatePosition, interpolateSize } from './CircleHtml'\n\nexport const LabelHtml = <RawDatum,>({ node, label, style }: LabelProps<RawDatum>) => {\n    const theme = useTheme()\n    const size = interpolateSize(style.radius)\n\n    return (\n        <animated.div\n            key={node.id}\n            style={{\n                ...theme.labels.text,\n                position: 'absolute',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                top: interpolatePosition(style.y, style.radius),\n                left: interpolatePosition(style.x, style.radius),\n                width: size,\n                height: size,\n                color: style.textColor,\n                opacity: style.opacity,\n                pointerEvents: 'none',\n            }}\n        >\n            {label}\n        </animated.div>\n    )\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, useDimensions } from '@nivo/core'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { CirclePackingHtmlProps, CirclePackingLayerId, ComputedDatum } from './types'\nimport { useCirclePacking, useCirclePackingLayerContext, useCirclePackingZoom } from './hooks'\nimport { Circles } from './Circles'\nimport { CircleHtml } from './CircleHtml'\nimport { defaultProps } from './props'\nimport { Labels } from './Labels'\nimport { LabelHtml } from './LabelHtml'\n\ntype InnerCirclePackingHtmlProps<RawDatum> = Partial<\n    Omit<\n        CirclePackingHtmlProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nexport const InnerCirclePackingHtml = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    width,\n    height,\n    margin: partialMargin,\n    padding = defaultProps.padding,\n    leavesOnly = defaultProps.leavesOnly,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>\n    >,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    circleComponent = CircleHtml,\n    enableLabels = defaultProps.enableLabels,\n    label = defaultProps.label,\n    labelsFilter,\n    labelsSkipRadius = defaultProps.labelsSkipRadius,\n    labelTextColor = defaultProps.labelTextColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    labelComponent = LabelHtml,\n    layers = defaultProps.layers,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = defaultProps.tooltip,\n    zoomedId,\n    role = defaultProps.role,\n}: InnerCirclePackingHtmlProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const nodes = useCirclePacking<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        leavesOnly,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const zoomedNodes = useCirclePackingZoom<RawDatum>(nodes, zoomedId, innerWidth, innerHeight)\n\n    const layerById: Record<CirclePackingLayerId, ReactNode> = {\n        circles: null,\n        labels: null,\n    }\n\n    if (layers.includes('circles')) {\n        layerById.circles = (\n            <Circles<RawDatum>\n                key=\"circles\"\n                nodes={zoomedNodes}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                component={circleComponent}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (enableLabels && layers.includes('labels')) {\n        layerById.labels = (\n            <Labels<RawDatum>\n                key=\"labels\"\n                nodes={zoomedNodes}\n                label={label}\n                filter={labelsFilter}\n                skipRadius={labelsSkipRadius}\n                textColor={labelTextColor}\n                component={labelComponent}\n            />\n        )\n    }\n\n    const layerContext = useCirclePackingLayerContext<RawDatum>({\n        nodes,\n    })\n\n    return (\n        <div\n            role={role}\n            style={{\n                position: 'relative',\n                overflow: 'hidden',\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        >\n            <div\n                style={{\n                    position: 'absolute',\n                    top: margin.top,\n                    left: margin.left,\n                }}\n            >\n                {layers.map((layer, i) => {\n                    if (layerById[layer as CirclePackingLayerId] !== undefined) {\n                        return layerById[layer as CirclePackingLayerId]\n                    }\n\n                    if (typeof layer === 'function') {\n                        return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                    }\n\n                    return null\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport const CirclePackingHtml = <RawDatum,>({\n    theme,\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    ...otherProps\n}: Partial<Omit<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container\n        isInteractive={isInteractive}\n        animate={animate}\n        motionConfig={motionConfig}\n        theme={theme}\n    >\n        <InnerCirclePackingHtml<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CirclePackingHtmlProps } from './types'\nimport { CirclePackingHtml } from './CirclePackingHtml'\n\ntype ResponsiveCirclePackingHtmlProps<RawDatum> = Partial<\n    Omit<CirclePackingHtmlProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<CirclePackingHtmlProps<RawDatum>, 'data'>\n\nexport const ResponsiveCirclePackingHtml = <RawDatum,>(\n    props: ResponsiveCirclePackingHtmlProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <CirclePackingHtml<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { useCallback, useEffect, useRef, createElement } from 'react'\nimport * as React from 'react'\nimport { useDimensions, useTheme, Container } from '@nivo/core'\nimport { InheritedColorConfig, OrdinalColorScaleConfig, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { CirclePackingCanvasProps, ComputedDatum } from './types'\nimport { defaultProps } from './props'\nimport {\n    useCirclePacking,\n    useCirclePackingZoom,\n    useCirclePackingLabels,\n    useMouseCircleDetection,\n} from './hooks'\n\ntype InnerCirclePackingCanvasProps<RawDatum> = Partial<\n    Omit<\n        CirclePackingCanvasProps<RawDatum>,\n        'data' | 'width' | 'height' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>\n\nconst InnerCirclePackingCanvas = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    width,\n    height,\n    margin: partialMargin,\n    padding = defaultProps.padding,\n    leavesOnly = defaultProps.leavesOnly,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>\n    >,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    enableLabels = defaultProps.enableLabels,\n    label = defaultProps.label,\n    labelsFilter,\n    labelsSkipRadius = defaultProps.labelsSkipRadius,\n    labelTextColor = defaultProps.labelTextColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    isInteractive,\n    onMouseMove,\n    onClick,\n    tooltip = defaultProps.tooltip,\n    zoomedId,\n    role = defaultProps.role,\n    pixelRatio = defaultProps.pixelRatio,\n}: InnerCirclePackingCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const nodes = useCirclePacking<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        leavesOnly,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const zoomedNodes = useCirclePackingZoom<RawDatum>(nodes, zoomedId, innerWidth, innerHeight)\n\n    const labels = useCirclePackingLabels({\n        nodes: zoomedNodes,\n        label,\n        filter: labelsFilter,\n        skipRadius: labelsSkipRadius,\n        textColor: labelTextColor,\n    })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n\n        zoomedNodes.forEach(node => {\n            if (borderWidth > 0) {\n                ctx.strokeStyle = getBorderColor(node)\n                ctx.lineWidth = borderWidth\n            }\n\n            ctx.beginPath()\n            ctx.arc(node.x, node.y, node.radius, 0, 2 * Math.PI)\n            ctx.fillStyle = node.color\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableLabels) {\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            labels.forEach(label => {\n                ctx.fillStyle = label.textColor\n                ctx.fillText(`${label.label}`, label.node.x, label.node.y)\n            })\n        }\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        theme,\n        pixelRatio,\n        zoomedNodes,\n        enableLabels,\n        labels,\n        borderWidth,\n        getBorderColor,\n    ])\n\n    const getNodeFromMouseEvent = useMouseCircleDetection<RawDatum>({\n        nodes: zoomedNodes,\n        canvasEl,\n        margin,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            const node = getNodeFromMouseEvent(event)\n            if (node) {\n                onMouseMove?.(node, event)\n                showTooltipFromEvent(createElement(tooltip, node), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getNodeFromMouseEvent, showTooltipFromEvent, tooltip, hideTooltip]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!onClick) return\n\n            const node = getNodeFromMouseEvent(event)\n            if (node) {\n                onClick(node, event)\n            }\n        },\n        [getNodeFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            role={role}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const CirclePackingCanvas = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    ...otherProps\n}: Partial<Omit<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container isInteractive={isInteractive} theme={theme}>\n        <InnerCirclePackingCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CirclePackingCanvasProps } from './types'\nimport { CirclePackingCanvas } from './CirclePackingCanvas'\n\ntype ResponsiveCirclePackingCanvasProps<RawDatum> = Partial<\n    Omit<CirclePackingCanvasProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<CirclePackingCanvasProps<RawDatum>, 'data'>\n\nexport const ResponsiveCirclePackingCanvas = <RawDatum,>(\n    props: ResponsiveCirclePackingCanvasProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <CirclePackingCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"names":["slice","Array","prototype","circles","p","e","i","n","array","t","m","length","Math","random","shuffle","call","B","enclosesWeak","encloseBasis","extendBasis","j","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","Error","a","b","dr","r","dx","x","dy","y","x1","y1","r1","x2","y2","r2","x21","y21","r21","l","sqrt","c","x3","y3","r3","a2","a3","b2","b3","c2","c3","d1","d2","d3","ab","xa","xb","ya","yb","A","C","place","max","intersects","score","node","_","next","Node","circle","this","previous","packEnclose","aa","ca","k","sj","sk","pack","push","enclose","defaultRadius","d","value","radiusLeaf","radius","children","packChildren","padding","translateChild","parent","useCirclePacking","data","id","valueFormat","width","height","leavesOnly","colors","colorBy","inheritColorFromParent","childColor","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","theme","useTheme","getChildColor","useInheritedColor","clonedData","cloneDeep","hierarchy","d3Hierarchy","constant","root","eachBefore","eachAfter","min","arguments","size","d3Pack","packedData","nodes","sortedNodes","sortBy","total","computedNodes","descendant","percentage","path","ancestor","acc","normalizedNode","formattedValue","color","depth","useCirclePackingZoom","useMemo","zoomedNode","ratio","offsetX","offsetY","useCirclePackingLabels","label","filter","skipRadius","textColor","getLabel","getTextColor","labels","useNodeMouseHandlers","onMouseEnter","onMouseMove","onMouseLeave","onClick","undefined","useCirclePackingLayerContext","defaultProps","layers","scheme","from","modifiers","borderWidth","borderColor","defs","fill","enableLabels","labelTextColor","labelsSkipRadius","isInteractive","tooltip","enableChip","animate","motionConfig","role","pixelRatio","window","interpolateRadius","radiusValue","to","Circles","component","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","handleClick","useMotionConfig","springConfig","getBorderColor","transitionPhases","enter","opacity","update","leave","getTransitionPhases","transition","useTransition","keys","initial","config","immediate","key","style","transitionProps","CircleSvg","handlers","cx","cy","stroke","strokeWidth","Labels","LabelSvg","textAnchor","dominantBaseline","pointerEvents","InnerCirclePacking","partialMargin","margin","circleComponent","labelsFilter","labelComponent","zoomedId","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","zoomedNodes","boundDefs","bindDefs","targetKey","layerById","layerContext","layer","CirclePacking","renderWrapper","otherProps","ResponsiveCirclePacking","interpolatePosition","positionValue","position","interpolateSize","CircleHtml","top","left","borderRadius","backgroundColor","borderStyle","boxSizing","LabelHtml","display","justifyContent","alignItems","InnerCirclePackingHtml","overflow","CirclePackingHtml","ResponsiveCirclePackingHtml","InnerCirclePackingCanvas","canvasEl","useRef","useEffect","ctx","getNodeFromMouseEvent","useCallback","getRelativeCursor","getDistance","useMouseCircleDetection","handleMouseHover","ref","cursor","CirclePackingCanvas","ResponsiveCirclePackingCanvas"],"sourceRoot":""}