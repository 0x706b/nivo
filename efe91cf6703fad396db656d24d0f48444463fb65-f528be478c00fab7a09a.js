(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{"J/8h":function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return a}));var o=n("6zZa"),i=["group A","group B","group C","group D","group E","group F","group G"],r=function(e){return void 0!==e?Object(o.o)(e):Object(o.m)(i.slice(0,3),{min:50,max:80})},a=function(e){return void 0!==e?Object(o.o)(e):Object(o.m)(i,{min:60,max:100})}},QRkI:function(e,t,n){"use strict";n.d(t,"a",(function(){return M})),n.d(t,"b",(function(){return B})),n.d(t,"c",(function(){return E}));n("UKgA");var o=n("mXGw"),i=n.n(o),r=n("PWxN"),a=n.n(r),l=n("XQLF"),s=n.n(l),u=n("eeCi"),c=n.n(u),d=n("5QYd"),h=n("g4kd");function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function y(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?y(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):y(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function f(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}function g(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function b(e,t){if(e){if("string"==typeof e)return f(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?f(e,t):void 0}}function v(e){return function(e){if(Array.isArray(e))return f(e)}(e)||g(e)||b(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var x=4,w=120,k=8,O=function(e){return"circle"===e.type},j=function(e){return"dot"===e.type},W=function(e){return"rect"===e.type},q=function(e){var t,n,o=e.x,i=e.y,r=e.noteX,a=e.noteY,l=e.noteWidth,u=void 0===l?w:l,c=e.noteTextOffset,h=void 0===c?k:c;if(s()(r))t=o+r;else{if(void 0===r.abs)throw new Error("noteX should be either a number or an object containing an 'abs' property");t=r.abs}if(s()(a))n=i+a;else{if(void 0===a.abs)throw new Error("noteY should be either a number or an object containing an 'abs' property");n=a.abs}var p=o,y=i,m=function(e,t,n,o){var i=Math.atan2(o-t,n-e);return Object(d.n)(Object(d.bb)(i))}(o,i,t,n);if(O(e)){var f=Object(d.Y)(Object(d.E)(m),e.size/2);p+=f.x,y+=f.y}if(W(e)){var g=Math.round((m+90)/45)%8;0===g&&(y-=e.height/2),1===g&&(p+=e.width/2,y-=e.height/2),2===g&&(p+=e.width/2),3===g&&(p+=e.width/2,y+=e.height/2),4===g&&(y+=e.height/2),5===g&&(p-=e.width/2,y+=e.height/2),6===g&&(p-=e.width/2),7===g&&(p-=e.width/2,y-=e.height/2)}var b=t,v=t;return(m+90)%360>180?(b-=u,v-=u):v+=u,{points:[[p,y],[t,n],[v,n]],text:[b,n-h],angle:m+90}},E=function(e){var t=e.data,n=e.annotations,i=e.getPosition,r=e.getDimensions;return Object(o.useMemo)((function(){return function(e){var t=e.data,n=e.annotations,o=e.getPosition,i=e.getDimensions;return n.reduce((function(e,n){var r=n.offset||0;return[].concat(v(e),v(c()(t,n.match).map((function(e){var t=o(e),l=i(e);return(O(n)||W(n))&&(l.size=l.size+2*r,l.width=l.width+2*r,l.height=l.height+2*r),m(m(m(m({},a()(n,["match","offset"])),t),l),{},{size:n.size||l.size,datum:e})}))))}),[])}({data:t,annotations:n,getPosition:i,getDimensions:r})}),[t,n,i,r])},S=function(e){var t=e.datum,n=e.x,r=e.y,l=e.note,s=Object(d.sb)(),u=Object(d.qb)(),c=u.animate,p=u.config,y=Object(h.useSpring)({x:n,y:r,config:p,immediate:!c});return"function"==typeof l?Object(o.createElement)(l,{x:n,y:r,datum:t}):i.a.createElement(i.a.Fragment,null,s.annotations.text.outlineWidth>0&&i.a.createElement(h.animated.text,{x:y.x,y:y.y,style:m(m({},s.annotations.text),{},{strokeLinejoin:"round",strokeWidth:2*s.annotations.text.outlineWidth,stroke:s.annotations.text.outlineColor})},l),i.a.createElement(h.animated.text,{x:y.x,y:y.y,style:a()(s.annotations.text,["outlineWidth","outlineColor"])},l))};function C(e){if(Array.isArray(e))return e}function T(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function P(e,t){return C(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],o=!0,i=!1,r=void 0;try{for(var a,l=e[Symbol.iterator]();!(o=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);o=!0);}catch(s){i=!0,r=s}finally{try{o||null==l.return||l.return()}finally{if(i)throw r}}return n}}(e,t)||b(e,t)||T()}var z=function(e){var t=e.points,n=e.isOutline,r=void 0!==n&&n,a=Object(d.sb)(),l=Object(o.useMemo)((function(){var e,n=C(e=t)||g(e)||b(e)||T(),o=n[0];return n.slice(1).reduce((function(e,t){var n=P(t,2),o=n[0],i=n[1];return"".concat(e," L").concat(o,",").concat(i)}),"M".concat(o[0],",").concat(o[1]))}),[t]),s=Object(d.mb)(l);if(r&&a.annotations.link.outlineWidth<=0)return null;var u=m({},a.annotations.link);return r&&(u.strokeLinecap="square",u.strokeWidth=a.annotations.link.strokeWidth+2*a.annotations.link.outlineWidth,u.stroke=a.annotations.link.outlineColor),i.a.createElement(h.animated.path,{fill:"none",d:s,style:u})},I=function(e){var t=e.x,n=e.y,o=e.size,r=Object(d.sb)(),a=Object(d.qb)(),l=a.animate,s=a.config,u=Object(h.useSpring)({x:t,y:n,radius:o/2,config:s,immediate:!l});return i.a.createElement(i.a.Fragment,null,r.annotations.outline.outlineWidth>0&&i.a.createElement(h.animated.circle,{cx:u.x,cy:u.y,r:u.radius,style:m(m({},r.annotations.outline),{},{fill:"none",strokeWidth:r.annotations.outline.strokeWidth+2*r.annotations.outline.outlineWidth,stroke:r.annotations.outline.outlineColor})}),i.a.createElement(h.animated.circle,{cx:u.x,cy:u.y,r:u.radius,style:r.annotations.outline}))},F=function(e){var t=e.x,n=e.y,o=e.size,r=void 0===o?x:o,a=Object(d.sb)(),l=Object(d.qb)(),s=l.animate,u=l.config,c=Object(h.useSpring)({x:t,y:n,radius:r/2,config:u,immediate:!s});return i.a.createElement(i.a.Fragment,null,a.annotations.outline.outlineWidth>0&&i.a.createElement(h.animated.circle,{cx:c.x,cy:c.y,r:c.radius,style:m(m({},a.annotations.outline),{},{fill:"none",strokeWidth:2*a.annotations.outline.outlineWidth,stroke:a.annotations.outline.outlineColor})}),i.a.createElement(h.animated.circle,{cx:c.x,cy:c.y,r:c.radius,style:a.annotations.symbol}))},V=function(e){var t=e.x,n=e.y,o=e.width,r=e.height,a=Object(d.sb)(),l=Object(d.qb)(),s=l.animate,u=l.config,c=Object(h.useSpring)({x:t-o/2,y:n-r/2,width:o,height:r,config:u,immediate:!s});return i.a.createElement(i.a.Fragment,null,a.annotations.outline.outlineWidth>0&&i.a.createElement(h.animated.rect,{x:c.x,y:c.y,width:c.width,height:c.height,style:m(m({},a.annotations.outline),{},{fill:"none",strokeWidth:a.annotations.outline.strokeWidth+2*a.annotations.outline.outlineWidth,stroke:a.annotations.outline.outlineColor})}),i.a.createElement(h.animated.rect,{x:c.x,y:c.y,width:c.width,height:c.height,style:a.annotations.outline}))},M=function(e){var t=e.datum,n=e.x,r=e.y,a=e.note,l=function(e){return Object(o.useMemo)((function(){return q(e)}),[e])}(e);if(!function(e){var t=typeof e;return Object(o.isValidElement)(e)||"string"===t||"function"===t||"object"===t}(a))throw new Error("note should be a valid react element");return i.a.createElement(i.a.Fragment,null,i.a.createElement(z,{points:l.points,isOutline:!0}),O(e)&&i.a.createElement(I,{x:n,y:r,size:e.size}),j(e)&&i.a.createElement(F,{x:n,y:r,size:e.size}),W(e)&&i.a.createElement(V,{x:n,y:r,width:e.width,height:e.height}),i.a.createElement(z,{points:l.points}),i.a.createElement(S,{datum:t,x:l.text[0],y:l.text[1],note:a}))},A=function(e,t){t.forEach((function(t,n){var o=P(t,2),i=o[0],r=o[1];0===n?e.moveTo(i,r):e.lineTo(i,r)}))},B=function(e,t){var n=t.annotations,o=t.theme;0!==n.length&&(e.save(),n.forEach((function(t){if(n=t.note,"string"!==(i=typeof n)&&"function"!==i)throw new Error("note is invalid for canvas implementation");var n,i;o.annotations.link.outlineWidth>0&&(e.lineCap="square",e.strokeStyle=o.annotations.link.outlineColor,e.lineWidth=o.annotations.link.strokeWidth+2*o.annotations.link.outlineWidth,e.beginPath(),A(e,t.computed.points),e.stroke(),e.lineCap="butt"),O(t)&&o.annotations.outline.outlineWidth>0&&(e.strokeStyle=o.annotations.outline.outlineColor,e.lineWidth=o.annotations.outline.strokeWidth+2*o.annotations.outline.outlineWidth,e.beginPath(),e.arc(t.x,t.y,t.size/2,0,2*Math.PI),e.stroke()),j(t)&&o.annotations.symbol.outlineWidth>0&&(e.strokeStyle=o.annotations.symbol.outlineColor,e.lineWidth=2*o.annotations.symbol.outlineWidth,e.beginPath(),e.arc(t.x,t.y,t.size/2,0,2*Math.PI),e.stroke()),W(t)&&o.annotations.outline.outlineWidth>0&&(e.strokeStyle=o.annotations.outline.outlineColor,e.lineWidth=o.annotations.outline.strokeWidth+2*o.annotations.outline.outlineWidth,e.beginPath(),e.rect(t.x-t.width/2,t.y-t.height/2,t.width,t.height),e.stroke()),e.strokeStyle=o.annotations.link.stroke,e.lineWidth=o.annotations.link.strokeWidth,e.beginPath(),A(e,t.computed.points),e.stroke(),O(t)&&(e.strokeStyle=o.annotations.outline.stroke,e.lineWidth=o.annotations.outline.strokeWidth,e.beginPath(),e.arc(t.x,t.y,t.size/2,0,2*Math.PI),e.stroke()),j(t)&&(e.fillStyle=o.annotations.symbol.fill,e.beginPath(),e.arc(t.x,t.y,t.size/2,0,2*Math.PI),e.fill()),W(t)&&(e.strokeStyle=o.annotations.outline.stroke,e.lineWidth=o.annotations.outline.strokeWidth,e.beginPath(),e.rect(t.x-t.width/2,t.y-t.height/2,t.width,t.height),e.stroke()),"function"==typeof t.note?t.note(e,{datum:t.datum,x:t.computed.text[0],y:t.computed.text[1],theme:o}):(e.font="".concat(o.annotations.text.fontSize,"px ").concat(o.annotations.text.fontFamily),e.fillStyle=o.annotations.text.fill,e.strokeStyle=o.annotations.text.outlineColor,e.lineWidth=2*o.annotations.text.outlineWidth,o.annotations.text.outlineWidth>0&&(e.lineJoin="round",e.strokeText(t.note,t.computed.text[0],t.computed.text[1]),e.lineJoin="miter"),e.fillText(t.note,t.computed.text[0],t.computed.text[1]))})),e.restore())}},eeCi:function(e,t,n){var o=n("07F0"),i=n("lJjI"),r=n("tDyL"),a=n("PqlX");e.exports=function(e,t){return(a(e)?o:i)(e,r(t,3))}},lJjI:function(e,t,n){var o=n("T0uz");e.exports=function(e,t){var n=[];return o(e,(function(e,o,i){t(e,o,i)&&n.push(e)})),n}},q6JH:function(e,t,n){"use strict";var o=n("nLLr");t.a=Object(o.c)({valueFormat:o.b,axisTop:Object(o.a)("top"),axisRight:Object(o.a)("right"),axisBottom:Object(o.a)("bottom"),axisLeft:Object(o.a)("left")})},wuXj:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var o=n("Eo5u"),i=n("1JOb"),r=n("RQLE"),a=[{key:"data",help:"Chart data.",description:"\n            This Chart's doesn't have a predefined structure,\n            you must use a schema which match `groupBy`,\n            `identity` and `value` properties.\n        ",type:"object[]",group:"Base",required:!0},{key:"id",group:"Base",type:"string | Function",required:!1,help:"Property used to retrieve the node's unique identifier.",description:"\n            This property will determine the identifier of a datum\n            amongst the whole data set, thus, it's really important\n            that it's unique.\n\n            It is especially important to have proper identifier\n            when enabling animations, as it will be used to determine\n            if a node is a new one or should transition from previous\n            to next state.\n        ",defaultValue:i.d.id},{key:"value",group:"Base",type:"string | Function",required:!1,help:"Property used to retrieve the node's value.",defaultValue:i.d.value},{key:"valueFormat",group:"Base",help:"Optional formatter for values.",description:"\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        ",required:!1,type:"string | (value: number) => string | number",controlType:"valueFormat"},{key:"groups",group:"Base",type:"string[]",required:!0,help:"Available groups."},{key:"groupBy",group:"Base",type:"string | Function",required:!1,help:"Propety used to group nodes, must return a group which is available in the groups property.",defaultValue:i.d.groupBy},{key:"size",group:"Base",type:"number | object | Function",required:!1,help:"How to compute node size, static or dynamic.",description:"\n            If you provide a **number**, all nodes will have the same\n            **fixed size**.\n\n            You can also use an object to define a varying size,\n            it must conform to the following interface:\n\n            ```\n            {\n                key:    string\n                values: [min: number, max: number]\n                sizes:  [min: number, max: number]\n            }\n            ```\n\n            Then the size of each node will **depend on the value\n            of `key` and `sizes`**.\n\n            If you use a **custom function**, it will receive the current\n            node and must **return a number**.\n        ",defaultValue:i.d.size},{key:"spacing",help:"Spacing between nodes.",type:"number",required:!1,defaultValue:i.d.spacing,controlType:"range",group:"Base",controlOptions:{unit:"px",min:0,max:20}},{key:"width",enableControlForFlavors:["api"],group:"Base",help:"Chart width.",description:"\n            not required if using responsive alternative\n            of the component `<Responsive*/>`.\n        ",type:"number",required:!0},{key:"height",enableControlForFlavors:["api"],group:"Base",help:"Chart height.",description:"\n            not required if using responsive alternative\n            of the component `<Responsive*/>`.\n        ",type:"number",required:!0},{key:"margin",help:"Chart margin.",type:"object",required:!1,controlType:"margin",group:"Base"},{key:"pixelRatio",flavors:["canvas"],help:"Adjust pixel ratio, useful for HiDPI screens.",required:!1,defaultValue:"Depends on device",type:"number",controlType:"range",group:"Base",controlOptions:{min:1,max:2}},{key:"forceStrength",help:"Force strength.",description:"\n            This value determine the strength applied on the value\n            axis, using lower value will result in a **more linear\n            arrangement**, however nodes won't be placed accurately\n            according to their values.\n\n            On the other hand, if you increase this value, the\n            simulation will try to **align the nodes with their\n            corresponding values** on the value axis, resulting\n            in a narrower chart.\n\n            Please note that increasing this value will sometimes\n            require to **increase the quality of the simulation**\n            via the `simulationIterations` property.\n        ",type:"number",required:!1,defaultValue:i.d.forceStrength,controlType:"range",group:"Simulation",controlOptions:{step:.2,min:.2,max:9}},{key:"simulationIterations",help:"Adjust the simulation quality.",description:"\n            Increasing this number will result in a **more accurate simulation**,\n            however it will also involve more computing.\n        ",type:"number",required:!1,defaultValue:i.d.simulationIterations,controlType:"range",group:"Simulation",controlOptions:{min:60,max:260}},{key:"layout",help:"Chart layout.",type:"string",required:!1,defaultValue:i.d.layout,controlType:"radio",group:"Layout",controlOptions:{choices:[{label:"horizontal",value:"horizontal"},{label:"vertical",value:"vertical"}]}},{key:"gap",help:"Gap between each serie.",type:"number",required:!1,defaultValue:i.d.gap,controlType:"range",group:"Layout",controlOptions:{unit:"px",min:0,max:100}},r.f,{key:"colors",help:"Defines how to compute node color.",description:"\n            The colors property is used to determine the **ordinal color scale**\n            to use to compute nodes' color, it use the serie id as a discriminator.\n\n            You can use a **predefined color scheme**, using the following form:\n\n            ```\n            colors={{ scheme: 'category10' }}\n            ```\n\n            Where `category10` is the identifier of the color scheme.\n            Please have a look at [the dedicated guide](self:/guides/colors)\n            for available schemes.\n\n            If you wish to use **color already defined on the data**\n            you passed to the chart, you can also use this form:\n\n            ```\n            colors={{ datum: 'color' }}\n            ```\n\n            Where `color` is the path to the property containing the color\n            to apply in the current datum.\n\n            You can also use a **custom function** which will receive the current\n            datum and must **return a valid color code**.\n\n            If you pass a string, it will be **used as a color for each and every nodes**.\n        ",type:"Function | object | string",required:!1,defaultValue:i.d.colors,controlType:"ordinalColors",group:"Style"},{key:"colorBy",group:"Style",help:"Property or accessor function to be used with colors.",description:"\n            When using a color scheme or an array of colors,\n            you'll generate a color scale, this scale will\n            receive a value which will be translated to a color.\n\n            This property define the way we get this value,\n            it can be either a `string` or a custom function.\n\n            Please have a look at [the colors guide](self:/guides/colors)\n            for further information.\n        ",type:"Function | string",required:!1,defaultValue:i.d.colorBy,controlType:"choices",controlOptions:{choices:["group","id"].map((function(e){return{label:e,value:e}}))}},{key:"borderWidth",help:"Control node border width.",type:"number | Function",required:!1,defaultValue:i.d.borderWidth,controlType:"lineWidth",group:"Style"},{key:"borderColor",help:"Control node border color.",type:"string | object | Function",required:!1,defaultValue:i.d.borderColor,controlType:"inheritedColor",group:"Style"},{key:"layers",group:"Customization",help:"Defines the order of layers and add custom layers.",description:"\n            Defines the order of layers, available layers are:\n            `grid`, `axes`, `nodes`, `mesh`.\n\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n\n            The layer function which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the `SwarmPlot` component.\n\n            When using the canvas implementation, the function\n            will receive the canvas 2d context as first argument\n            and the chart's context and computed data as second.\n\n            Please make sure to use `context.save()` and\n            `context.restore()` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n\n            You can see a live example of custom layers\n            [here](storybook:/swarmplot--extra-layers).\n        ",required:!1,type:"Array<string | Function>",defaultValue:i.d.layers},{key:"circleComponent",group:"Customization",flavors:["svg"],help:"Override default circle component for the SVG implementation.",description:"\n            This property can be used to completely\n            customize the way nodes are rendered.\n\n            You should return a valid SVG node.\n\n            You can see a live example of custom circle component\n            [here](storybook:/swarmplot--custom-circle-component).\n        ",required:!1,type:"Component"},{key:"renderCircle",group:"Customization",flavors:["canvas"],help:"Override default circle rendering for the canvas implementation.",description:"\n            This property can be used to completely\n            customize the way nodes are rendered.\n\n            The rendering function will receive the canvas 2d\n            context as first argument.\n\n            Please make sure to use `context.save()` and\n            `context.restore()` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n        ",required:!1,type:"Function"},{key:"enableGridX",group:"Grid & Axes",help:"Enable/disable x grid.",type:"boolean",required:!1,defaultValue:i.d.enableGridX,controlType:"switch"},{key:"gridXValues",group:"Grid & Axes",help:"Specify values to use for vertical grid lines.",type:"Array<number | string>",required:!1},{key:"enableGridY",group:"Grid & Axes",help:"Enable/disable y grid.",type:"boolean",required:!1,defaultValue:i.d.enableGridY,controlType:"switch"},{key:"gridYValues",group:"Grid & Axes",help:"Specify values to use for horizontal grid lines.",type:"Array<number | string>",required:!1}].concat(Object(o.a)(Object(r.a)()),[{key:"isInteractive",help:"Enable/disable interactivity.",type:"boolean",required:!1,defaultValue:i.d.isInteractive,controlType:"switch",group:"Interactivity"},{key:"useMesh",help:"Use a mesh to detect mouse interactions, always true for canvas.",flavors:["svg"],type:"boolean",required:!1,defaultValue:i.d.useMesh,controlType:"switch",group:"Interactivity"},{key:"debugMesh",help:"Display the mesh used to detect mouse interactions (voronoi cells), depends on useMesh.",type:"boolean",required:!1,defaultValue:i.d.debugMesh,controlType:"switch",group:"Interactivity"},{key:"onMouseEnter",group:"Interactivity",help:"onMouseEnter handler.",type:"(node, event) => void",required:!1},{key:"onMouseMove",group:"Interactivity",help:"onMouseMove handler.",type:"(node, event) => void",required:!1},{key:"onMouseLeave",group:"Interactivity",help:"onMouseLeave handler.",type:"(node, event) => void",required:!1},{key:"onClick",group:"Interactivity",help:"onClick handler.",type:"(node, event) => void",required:!1},{key:"tooltip",group:"Interactivity",type:"Function",required:!1,help:"Custom tooltip component.",description:"\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the node's data.\n        "}],Object(o.a)(Object(r.e)(["svg"],i.d,"react-spring"))),l=Object(r.d)(a)}}]);
//# sourceMappingURL=efe91cf6703fad396db656d24d0f48444463fb65-f528be478c00fab7a09a.js.map