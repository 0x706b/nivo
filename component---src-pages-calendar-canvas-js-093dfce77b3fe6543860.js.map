{"version":3,"file":"component---src-pages-calendar-canvas-js-093dfce77b3fe6543860.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/month.js","webpack://nivo-website/../node_modules/d3-time/src/week.js","webpack://nivo-website/../node_modules/d3-time/src/year.js","webpack://nivo-website/./src/data/components/calendar/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/./src/data/components/calendar/mapper.js","webpack://nivo-website/./src/pages/calendar/canvas.js","webpack://nivo-website/../node_modules/lodash/_baseIsDate.js","webpack://nivo-website/../node_modules/lodash/isDate.js"],"sourcesContent":["import interval from \"./interval.js\";\nvar month = interval(function (date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function (start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function (date) {\n  return date.getMonth();\n});\nexport default month;\nexport var months = month.range;","import interval from \"./interval.js\";\nimport { durationMinute, durationWeek } from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function (date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;","import interval from \"./interval.js\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","import { boxAlignments } from '@nivo/core'\nimport { calendarDefaultProps as defaults } from '@nivo/calendar'\nimport { themeProperty, groupProperties } from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                day:   string, // format must be YYYY-MM-DD\n                value: number\n            }>\n            \\`\\`\\`\n            You can also add arbitrary data to this structure\n            to be used in tooltips or event handlers.\n        `,\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'from',\n        group: 'Base',\n        help: 'start date',\n        type: 'string | Date',\n        required: true,\n    },\n    {\n        key: 'to',\n        group: 'Base',\n        help: 'end date',\n        type: 'string | Date',\n        required: true,\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative of\n            the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative of\n            the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'direction',\n        help: 'defines calendar layout direction.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.direction,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'align',\n        help: 'defines how calendar should be aligned inside chart container.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.align,\n        controlType: 'boxAnchor',\n        group: 'Base',\n        controlOptions: {\n            choices: boxAlignments.map(align => ({\n                label: align,\n                value: align,\n            })),\n        },\n    },\n    {\n        key: 'minValue',\n        help: 'Minimum value.',\n        description: `\n            Minimum value. If 'auto', will pick the lowest value\n            in the provided data set.\n            Should be overriden if your data set does not contain\n            desired lower bound value.\n        `,\n        required: false,\n        defaultValue: defaults.minValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 0,\n            min: -300,\n            max: 300,\n        },\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value. If 'auto', will pick the highest value\n            in the provided data set.\n            Should be overriden if your data set does not contain\n            desired higher bound value.\n        `,\n        required: false,\n        defaultValue: defaults.maxValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 100,\n            min: 0,\n            max: 600,\n        },\n    },\n    themeProperty(['svg', 'canvas', 'api']),\n    {\n        key: 'colors',\n        group: 'Style',\n        help: 'Cell colors.',\n        description: `\n            An array of colors to be used in conjunction with\n            \\`domain\\` to compute days' color.\n            It applies to days having a value defined, otherwise,\n            \\`emptyColor\\` will be used.\n        `,\n        type: 'string[]',\n        required: false,\n        defaultValue: defaults.colors,\n    },\n    {\n        key: 'emptyColor',\n        help: 'color to use to fill days without available value.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.emptyColor,\n        controlType: 'colorPicker',\n        group: 'Style',\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    // Years\n    {\n        key: 'yearSpacing',\n        help: 'define spacing between each year row/column depending on the direction.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.yearSpacing,\n        controlType: 'range',\n        group: 'Years',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 160,\n            step: 5,\n        },\n    },\n    {\n        key: 'yearLegend',\n        group: 'Years',\n        help: `can be used to customize years label, returns 'YYYY' by default.`,\n        type: '(year: number) => string | number',\n        required: false,\n    },\n    {\n        key: 'yearLegendPosition',\n        help: 'defines year legends position.',\n        type: `'before' | 'after'`,\n        required: false,\n        defaultValue: defaults.yearLegendPosition,\n        controlType: 'radio',\n        group: 'Years',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'yearLegendOffset',\n        help: 'define offset from year edge to its label.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.yearLegendOffset,\n        controlType: 'range',\n        group: 'Years',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    // Months\n    {\n        key: 'monthSpacing',\n        help: 'define spacing between each month row/column depending on the direction.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.monthSpacing,\n        controlType: 'range',\n        group: 'Months',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 160,\n            step: 5,\n        },\n    },\n    {\n        key: 'monthBorderWidth',\n        flavors: ['svg', 'api'],\n        help: 'width of month borders.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.monthBorderWidth,\n        controlType: 'lineWidth',\n        group: 'Months',\n    },\n    {\n        key: 'monthBorderColor',\n        flavors: ['svg', 'api'],\n        help: 'color to use for months border.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.monthBorderColor,\n        controlType: 'colorPicker',\n        group: 'Months',\n    },\n    {\n        key: 'monthLegend',\n        help: `can be used to customize months label, returns abbreviated month name (english) by default. This can be used to use a different language`,\n        type: '(year: number, month: number, date: Date) => string | number',\n        required: false,\n        group: 'Months',\n    },\n    {\n        key: 'monthLegendPosition',\n        help: 'defines month legends position.',\n        type: `'before' | 'after'`,\n        required: false,\n        defaultValue: defaults.monthLegendPosition,\n        controlType: 'radio',\n        group: 'Months',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'monthLegendOffset',\n        help: 'define offset from month edge to its label.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.monthLegendOffset,\n        controlType: 'range',\n        group: 'Months',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    // Days\n    {\n        key: 'daySpacing',\n        help: 'define spacing between each day cell.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.daySpacing,\n        controlType: 'range',\n        group: 'Days',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'dayBorderWidth',\n        help: 'width of days border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.dayBorderWidth,\n        controlType: 'lineWidth',\n        group: 'Days',\n    },\n    {\n        key: 'dayBorderColor',\n        help: 'color to use for days border.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.dayBorderColor,\n        controlType: 'colorPicker',\n        group: 'Days',\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onClick handler, it receives clicked day data and mouse event.',\n        type: '(day, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation, it must return a valid HTML\n            element and will receive the following data:\n            \\`\\`\\`\n            {\n                day:   string,\n                date:  {Date},\n                value: number,\n                color: string,\n                x:     number,\n                y:     number,\n                size:  number\n            }\n            \\`\\`\\`\n            You can also customize the tooltip style\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        flavors: ['svg', 'canvas'],\n        help: 'Showcase custom tooltip.',\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","import React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    background: #333;\n    padding: 10px;\n    border-radius: 4px;\n    grid-template-columns: 40px 1fr;\n    grid-column-gap: 12px;\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\n\nconst CustomTooltip = day => {\n    return (\n        <TooltipWrapper style={{ color: day.color }}>\n            <TooltipKey>day</TooltipKey>\n            <span>{day.day}</span>\n            <TooltipKey>value</TooltipKey>\n            <span>{day.value}</span>\n            <TooltipKey>x</TooltipKey>\n            <span>{day.x}</span>\n            <TooltipKey>y</TooltipKey>\n            <span>{day.y}</span>\n            <TooltipKey>size</TooltipKey>\n            <span>{day.size}</span>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n    },\n    {\n        exclude: ['custom tooltip example'],\n    }\n)\n","import React from 'react'\nimport { ResponsiveCalendarCanvas, calendarCanvasDefaultProps } from '@nivo/calendar'\nimport { generateDayCounts } from '@nivo/generators'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/calendar/meta.yml'\nimport mapper from '../../data/components/calendar/mapper'\nimport { groups } from '../../data/components/calendar/props'\n\nconst from = new Date(2013, 3, 1)\nconst to = new Date(2019, 7, 12)\nconst generateData = () => generateDayCounts(from, to)\n\nconst Tooltip = data => {\n    /* return custom tooltip */\n}\n\nconst initialProperties = {\n    pixelRatio:\n        typeof window !== 'undefined' && window.devicePixelRatio ? window.devicePixelRatio : 1,\n\n    from: '2013-03-01',\n    to: '2019-07-12',\n\n    align: 'center',\n    emptyColor: '#aa7942',\n    colors: ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560'],\n    minValue: 0,\n    maxValue: 'auto',\n\n    margin: {\n        top: 40,\n        right: 40,\n        bottom: 50,\n        left: 40,\n    },\n    direction: 'vertical',\n\n    yearSpacing: 30,\n    yearLegendPosition: 'before',\n    yearLegendOffset: 10,\n\n    monthSpacing: 0,\n    monthBorderWidth: 2,\n    monthBorderColor: '#ffffff',\n    monthLegendPosition: 'before',\n    monthLegendOffset: 10,\n\n    daySpacing: 0,\n    dayBorderWidth: 0,\n    dayBorderColor: '#ffffff',\n\n    isInteractive: true,\n    'custom tooltip example': false,\n\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'row',\n            translateY: 36,\n            itemCount: 4,\n            itemWidth: 42,\n            itemHeight: 36,\n            itemsSpacing: 14,\n            itemDirection: 'right-to-left',\n        },\n    ],\n}\n\nconst CalendarCanvas = () => {\n    return (\n        <ComponentTemplate\n            name=\"CalendarCanvas\"\n            meta={meta.CalendarCanvas}\n            icon=\"calendar\"\n            flavors={meta.flavors}\n            currentFlavor=\"canvas\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={calendarCanvasDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={properties => ({\n                ...properties,\n                tooltip: properties.tooltip ? Tooltip : undefined,\n            })}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveCalendarCanvas\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={day => {\n                            logAction({\n                                type: 'click',\n                                label: `[day] ${day.day}: ${day.value}`,\n                                color: day.color,\n                                data: day,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default CalendarCanvas\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n","var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n"],"names":["month","date","setDate","setHours","step","setMonth","getMonth","start","end","getFullYear","months","range","weekday","i","getDate","getDay","getTimezoneOffset","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","year","setFullYear","every","k","isFinite","Math","floor","props","key","group","help","description","type","required","enableControlForFlavors","controlType","controlOptions","unit","min","max","defaultValue","defaults","choices","label","value","boxAlignments","align","disabledValue","themeProperty","flavors","groups","groupProperties","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","TooltipWrapper","styled","TooltipKey","CustomTooltip","day","style","color","x","y","size","tooltip","values","from","Date","to","generateData","generateDayCounts","Tooltip","data","initialProperties","pixelRatio","window","devicePixelRatio","emptyColor","colors","minValue","maxValue","margin","top","right","bottom","left","direction","yearSpacing","yearLegendPosition","yearLegendOffset","monthSpacing","monthBorderWidth","monthBorderColor","monthLegendPosition","monthLegendOffset","daySpacing","dayBorderWidth","dayBorderColor","isInteractive","legends","anchor","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","name","meta","icon","currentFlavor","properties","defaultProperties","calendarCanvasDefaultProps","propertiesMapper","mapper","codePropertiesMapper","theme","logAction","onClick","baseGetTag","isObjectLike","module","exports","baseIsDate","baseUnary","nodeUtil","nodeIsDate","isDate"],"sourceRoot":""}