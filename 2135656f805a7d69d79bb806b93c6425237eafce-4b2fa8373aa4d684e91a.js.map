{"version":3,"file":"2135656f805a7d69d79bb806b93c6425237eafce-4b2fa8373aa4d684e91a.js","mappings":"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","sources":["webpack://nivo-website/./src/lib/generateChartCode.ts","webpack://nivo-website/./src/components/components/ComponentTabs.tsx","webpack://nivo-website/./src/components/components/ActionsLoggerLog.tsx","webpack://nivo-website/./src/components/components/ActionsLogger.tsx","webpack://nivo-website/./src/components/components/Stories.tsx","webpack://nivo-website/./src/components/components/ComponentTemplate.tsx","webpack://nivo-website/../node_modules/lodash/_castFunction.js","webpack://nivo-website/../node_modules/lodash/forOwn.js","webpack://nivo-website/../node_modules/lodash/startCase.js"],"sourcesContent":["import forOwn from 'lodash/forOwn'\nimport isPlainObject from 'lodash/isPlainObject'\nimport isArray from 'lodash/isArray'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport isBoolean from 'lodash/isBoolean'\nimport dedent from 'dedent-js'\n\nconst indent = (content: string, spaces: number = 8) =>\n    content\n        .split('\\n')\n        .map((line, i) => {\n            if (i === 0) return line\n            return `${' '.repeat(spaces)}${line}`\n        })\n        .join('\\n')\n\nconst toJson = (value: any) => {\n    const jsonString = JSON.stringify(value, null, 4)\n    const normalized = jsonString\n        .replace(/^(\\s+)\"([a-z]{1}[a-z]*)\"\\: /gim, (_match, space, key) => {\n            return `${space}${key}: `\n        })\n        .replace(/\"/gm, `'`)\n\n    if (normalized.length < 120) {\n        return normalized.replace(/\\n/gm, ' ').replace(/\\s{2,}/g, ' ')\n    }\n\n    return indent(normalized)\n}\n\nexport const generateChartCode = (\n    name: string,\n    props: any,\n    {\n        dataKey = 'data',\n        children = [],\n        defaults = {},\n        pkg = 'nivo',\n    }: {\n        dataKey?: string\n        children?: any[]\n        defaults?: any\n        pkg?: string\n    } = {}\n) => {\n    const properties = []\n    let args = ''\n\n    if (dataKey !== null) {\n        properties.push(`${dataKey}={${dataKey}}`)\n        args = `{ ${dataKey} /* see ${dataKey} tab */ }`\n    }\n\n    forOwn(props, (_value, key) => {\n        if (_value === undefined) return\n        if (defaults && defaults[key] === _value) return\n        if (key === 'theme') return\n\n        let value\n        if (isPlainObject(_value)) {\n            value = `{${toJson(_value)}}`\n        } else if (isArray(_value)) {\n            value = `{${toJson(_value)}}`\n        } else if (isString(_value)) {\n            value = `\"${_value}\"`\n        } else if (isBoolean(_value)) {\n            value = `{${_value ? 'true' : 'false'}}`\n        } else if (isNumber(_value)) {\n            value = `{${_value}}`\n        } else if (typeof _value === 'function') {\n            value = `{${indent(dedent(_value.toString()), 8)}}`\n        } else if (_value === null) {\n            value = `{null}`\n        } else {\n            value = _value\n        }\n\n        properties.push(`${key}=${value}`)\n    })\n\n    const install = `// yarn add @nivo/core ${pkg}`\n\n    const imports = [name, ...children.map(([c]) => c)].map(i => `import { ${i} } from '${pkg}'`)\n\n    let responsiveWarning = ''\n    if (name.indexOf('Responsive') === 0) {\n        responsiveWarning = [\n            ``,\n            `// make sure parent container have a defined height when using`,\n            `// responsive component, otherwise height will be 0 and`,\n            `// no chart will be rendered.`,\n            `// website examples showcase many properties,`,\n            `// you'll often use just a few of them.`,\n        ].join('\\n')\n    }\n\n    return `// install (please make sure versions match peerDependencies)\n${install}\n${imports.join('\\n')}\n${responsiveWarning}\nconst My${name} = (${args}) => (\n    <${name}\n        ${properties.join('\\n        ')}\n    />\n)`\n}\n","import React, { PropsWithChildren, useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport media from '../../theming/mediaQueries'\nimport { Highlight } from '../Highlight'\nimport { CodeBlock } from '../CodeBlock'\n\ntype TabType = 'chart' | 'code' | 'data'\nconst tabs: TabType[] = ['chart', 'code', 'data']\n\ninterface ComponentTabsProps<D = any> {\n    chartClass: string\n    data?: D\n    dataKey?: string\n    code: string\n    nodeCount?: number\n    nodeCountWording?: string\n    diceRoll?: () => void\n}\n\nexport const ComponentTabs = <D extends any = any>({\n    chartClass,\n    data,\n    dataKey = 'data',\n    code,\n    children,\n    diceRoll,\n    nodeCount,\n    nodeCountWording = 'nodes',\n}: PropsWithChildren<ComponentTabsProps<D>>) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState<TabType>('chart')\n    const [hoverTab, setHoverTab] = useState<TabType | null>(null)\n\n    let availableTabs = tabs\n    if (data === undefined) {\n        availableTabs = availableTabs.filter(t => t !== 'data')\n    }\n\n    let content\n    if (currentTab === 'chart') {\n        content = (\n            <Content id=\"chart\" role=\"tabpanel\">\n                {children}\n            </Content>\n        )\n    } else if (currentTab === 'code') {\n        content = (\n            <Code role=\"tabpanel\">\n                <Highlight code={code} language=\"jsx\" />\n            </Code>\n        )\n    } else if (availableTabs.includes('data') && currentTab === 'data') {\n        content = (\n            <Code>\n                <CodeBlock>{JSON.stringify(data, null, '  ')}</CodeBlock>\n            </Code>\n        )\n    }\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav role=\"tablist\">\n                {availableTabs.map((tab, index) => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'chart' ? chartClass : tab\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            role=\"tab\"\n                            tabIndex={0}\n                            aria-setsize={availableTabs.length}\n                            aria-posinset={index + 1}\n                            aria-selected={isCurrent}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab === 'data' ? dataKey : tab}\n                        </NavItem>\n                    )\n                })}\n                {diceRoll && (\n                    <DiceRollButton\n                        className=\"no-select\"\n                        onClick={diceRoll}\n                        role=\"button\"\n                        tabIndex={0}\n                    >\n                        roll the dice\n                    </DiceRollButton>\n                )}\n            </Nav>\n            {content}\n            {currentTab === 'chart' && nodeCount !== undefined && (\n                <NodeCount>\n                    <strong>{nodeCount}</strong>\n                    &nbsp;\n                    {nodeCountWording}\n                </NodeCount>\n            )}\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.55);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.6);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 55%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.6);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n    display: flex;\n\n    ${media.mobile`\n        & {\n            display: grid;\n            grid-template-columns: repeat(4, 1fr);\n        }\n    `}\n`\n\nconst NavItem = styled.span<{\n    isCurrent: boolean\n}>`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n`\n\nconst DiceRollButton = styled.span`\n    position: absolute;\n    top: 7px;\n    right: 16px;\n    display: block;\n    padding: 8px 10px;\n    height: 32px;\n    line-height: 1em;\n    border-radius: 2px;\n    background: ${({ theme }) => theme.colors.background};\n    color: ${({ theme }) => theme.colors.accent};\n    border: 1px solid ${({ theme }) => theme.colors.accent};\n    cursor: pointer;\n    font-weight: 500;\n    font-size: 0.9rem;\n    white-space: pre;\n\n    &:hover {\n        background: ${({ theme }) => theme.colors.accent};\n        color: ${({ theme }) => theme.colors.background};\n    }\n\n    ${media.mobile`\n        & {\n            grid-column-start: 4;\n            justify-self: end;\n            right: 8px;\n            padding: 8px 8px;\n        }\n    `}\n`\n\nconst NodeCount = styled.span`\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    display: block;\n    background-color: ${({ theme }) => theme.colors.cardAltBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    border-right: 1px solid ${({ theme }) => theme.colors.border};\n    font-size: 13px;\n    padding: 5px 11px;\n\n    .isCapturing & {\n        display: none;\n    }\n`\n\nconst Code = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow: auto;\n`\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\n\nexport const ActionsLoggerLog = ({ action }: { action: any }) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const toggle = useCallback(() => setIsOpen(flag => !flag), [setIsOpen])\n\n    return (\n        <ActionContainer>\n            <ActionHeader onClick={toggle}>\n                <ActionType>{action.type}</ActionType>\n                <Color>\n                    {action.color && (\n                        <ColorChip style={{ background: action.color || 'transparent' }} />\n                    )}\n                </Color>\n                <ActionLabel>{action.label}</ActionLabel>\n                <Toggle>{isOpen ? '-' : '{ … }'}</Toggle>\n            </ActionHeader>\n            {isOpen && <ActionData>{JSON.stringify(action.data, null, '  ')}</ActionData>}\n        </ActionContainer>\n    )\n}\n\nconst ActionContainer = styled.div`\n    font-size: 13px;\n`\n\nconst ActionHeader = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n    display: grid;\n    grid-template-columns: 60px 8px auto 60px;\n    align-items: center;\n    cursor: pointer;\n\n    &:hover {\n        background: ${({ theme }) => theme.colors.cardAltBackground};\n    }\n`\n\nconst ActionType = styled.span`\n    padding: 7px 12px;\n    opacity: 0.5;\n`\n\nconst Color = styled.span`\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst ColorChip = styled.span`\n    width: 8px;\n    height: 8px;\n    display: block;\n    border-radius: 6px;\n`\n\nconst ActionLabel = styled.span`\n    font-weight: 600;\n    padding: 7px 12px;\n`\n\nconst ActionData = styled.pre`\n    font-size: 12px;\n    padding: 7px 12px;\n    line-height: 18px;\n    font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n    margin: 0;\n`\n\nconst Toggle = styled.span`\n    padding: 7px 12px;\n    text-align: right;\n`\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { FaRegHandPointer } from 'react-icons/fa'\nimport { ActionsLoggerLog } from './ActionsLoggerLog'\nimport media from '../../theming/mediaQueries'\n\nexport const useActionsLogger = (): [any[], (action: any) => void] => {\n    const [actions, setActions] = useState<any[]>([])\n    const logAction = useCallback(\n        action => {\n            setActions(actions => [action, ...actions])\n        },\n        [setActions]\n    )\n\n    return [actions, logAction]\n}\n\ninterface ActionsLoggerProps {\n    actions: any[]\n    isFullWidth?: boolean\n}\n\nexport const ActionsLogger = ({ actions, isFullWidth = false }: ActionsLoggerProps) => {\n    return (\n        <Wrapper isFullWidth={isFullWidth}>\n            <Header>Actions Logs</Header>\n            {actions.length === 0 && (\n                <EmptyContainer>\n                    <EmptyIcon size={28} />\n                    <EmptyMessage>Start interacting with the chart to log actions</EmptyMessage>\n                </EmptyContainer>\n            )}\n            {actions.map((action, i) => {\n                return (\n                    <ActionsLoggerLog key={`${i}.${action.type}.${action.label}`} action={action} />\n                )\n            })}\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div<{\n    isFullWidth: boolean\n}>`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.55);\n    ${({ isFullWidth, theme }) => {\n        if (isFullWidth) {\n            return `\n                width: var(--partialWidth);\n            `\n        }\n\n        return `\n            border-left: 1px solid ${theme.colors.border};\n            width: calc(var(--partialWidth) / 2);\n        `\n    }}\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.4);\n    z-index: 10;\n    overflow-x: hidden;\n    overflow-y: auto;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.4);\n            ${({ isFullWidth, theme }) => {\n                if (isFullWidth) {\n                    return `width: 55%;`\n                }\n\n                return `\n                    border-left: 1px solid ${theme.colors.border};\n                    width: calc(55% * 0.5);\n                `\n            }}\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst Header = styled.div`\n    top: 0;\n    left: 0;\n    padding: 7px 12px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n    font-size: 12px;\n    text-transform: uppercase;\n    font-weight: 600;\n`\n\nconst EmptyContainer = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    opacity: 0.4;\n    padding: 20px;\n`\n\nconst EmptyMessage = styled.div`\n    text-align: center;\n    margin-top: 16px;\n`\n\nconst EmptyIcon = styled(FaRegHandPointer)``\n","import React from 'react'\nimport styled from 'styled-components'\nimport { MdKeyboardArrowRight } from 'react-icons/md'\nimport media from '../../theming/mediaQueries'\nimport config from '../../data/config'\n\nconst buildStoryLink = (link: string) =>\n    `${config.storybookUrl}?path=/story/${encodeURIComponent(link.toLowerCase())}`\n\ninterface StoriesProps {\n    isFullWidth?: boolean\n    stories: {\n        label: string\n        link: string\n    }[]\n}\n\nexport const Stories = ({ isFullWidth = false, stories }: StoriesProps) => {\n    return (\n        <Wrapper isFullWidth={isFullWidth}>\n            <Header>Recipes</Header>\n            {stories.map((story, i) => (\n                <StoriesItem\n                    key={i}\n                    href={buildStoryLink(story.link)}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    {story.label}\n                    <MdKeyboardArrowRight size={20} color=\"#bbbbbb\" />\n                </StoriesItem>\n            ))}\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div<{\n    isFullWidth: boolean\n}>`\n    position: fixed;\n    bottom: 0;\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.4);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    ${({ isFullWidth, theme }) => {\n        if (isFullWidth) {\n            return `\n                --innerWidth: calc(100% - ${theme.dimensions.miniNavWidth}px);\n                width: calc(var(--innerWidth) * 0.55);\n                right: 0;\n            `\n        }\n\n        return `\n            --innerWidth: calc(100% - ${theme.dimensions.miniNavWidth}px);\n            --partialWidth: calc(var(--innerWidth) * 0.55);\n            width: calc(var(--partialWidth) / 2);\n            right: calc(var(--partialWidth) / 2);\n        `\n    }}\n    z-index: 10;\n    overflow-x: hidden;\n    overflow-y: auto;\n\n    ${media.tablet`\n        & {\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.4);\n            left: 45%;\n            bottom: 0;\n            ${({ isFullWidth }) => {\n                if (isFullWidth) {\n                    return `\n                        width: calc(100% * 0.55);\n                    `\n                }\n\n                return `\n                    --halfWidth: calc(100% * 0.55);\n                    --computedWidth: calc(var(--halfWidth) / 2);\n                    width: var(--computedWidth);\n                `\n            }}\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            bottom: auto;\n            right: auto;\n            width: auto;\n            height: auto;\n            border-left: none;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Header = styled.div`\n    top: 0;\n    left: 0;\n    padding: 7px 12px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n    font-size: 12px;\n    text-transform: uppercase;\n    font-weight: 600;\n`\n\nconst StoriesItem = styled.a`\n    color: inherit;\n    padding: 9px 24px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n    font-size: 14px;\n    line-height: 1.6em;\n    cursor: pointer;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-weight: 500;\n\n    &:hover {\n        background: ${({ theme }) => theme.colors.cardAltBackground};\n    }\n`\n","import React, { useState, useCallback, useMemo } from 'react'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport { useTheme } from 'styled-components'\nimport { Theme as NivoTheme } from '@nivo/core'\nimport { startCase } from 'lodash'\nimport { Seo } from '../Seo'\nimport Layout from '../Layout'\nimport { generateChartCode } from '../../lib/generateChartCode'\nimport { ComponentPage } from './ComponentPage'\nimport { ComponentHeader } from './ComponentHeader'\nimport { ComponentFlavorSelector } from './ComponentFlavorSelector'\nimport { ComponentDescription } from './ComponentDescription'\nimport { ComponentTabs } from './ComponentTabs'\nimport { ActionsLogger, useActionsLogger } from './ActionsLogger'\nimport { ComponentSettings } from './ComponentSettings'\nimport { Stories } from './Stories'\nimport { ChartMeta, ChartProperty, Flavor } from '../../types'\n\ninterface ComponentTemplateProps<UnmappedProps extends object, Props extends object, Data> {\n    name: string\n    meta: ChartMeta\n    icon: string\n    flavors: {\n        flavor: Flavor\n        path: string\n    }[]\n    currentFlavor: Flavor\n    properties: {\n        name: string\n        properties: ChartProperty[]\n    }[]\n    // initial props of the demo, unmapped\n    initialProperties: UnmappedProps\n    // default props as defined in the package component\n    defaultProperties?: Partial<Props>\n    propertiesMapper?: (unmappedProps: UnmappedProps) => Props\n    codePropertiesMapper?: Function\n    hasData?: boolean\n    generateData?: (previousData?: Data | null) => Data | undefined\n    dataKey?: string\n    getDataSize?: (data: Data) => number\n    getTabData?: (data: Data) => Data\n    children: (properties: Props, data: Data, theme: NivoTheme, logAction: any) => JSX.Element\n    image?: IGatsbyImageData\n}\n\nexport const ComponentTemplate = <\n    UnmappedProps extends object = any,\n    Props extends object = any,\n    Data = any\n>({\n    name,\n    meta,\n    icon,\n    flavors,\n    currentFlavor,\n    properties,\n    initialProperties,\n    defaultProperties = {},\n    propertiesMapper,\n    codePropertiesMapper,\n    hasData = true,\n    generateData = () => undefined,\n    dataKey,\n    getDataSize,\n    getTabData = data => data,\n    image,\n    children,\n}: ComponentTemplateProps<UnmappedProps, Props, Data>) => {\n    const theme = useTheme()\n\n    const [settings, setSettings] = useState(initialProperties)\n\n    const initialData = useMemo(() => (hasData ? generateData() : null), [])\n    const [data, setData] = useState(initialData)\n    const diceRoll = useCallback(() => {\n        setData(currentData => generateData(currentData))\n    }, [setData])\n\n    const [actions, logAction] = useActionsLogger()\n\n    let mappedProperties = settings as unknown as Props\n    if (propertiesMapper !== undefined) {\n        mappedProperties = propertiesMapper(settings, data)\n    }\n\n    let codeProperties = mappedProperties\n    if (codePropertiesMapper !== undefined) {\n        codeProperties = codePropertiesMapper(mappedProperties, data)\n    }\n\n    const code = generateChartCode(`Responsive${name}`, codeProperties, {\n        pkg: meta.package,\n        defaults: defaultProperties,\n        dataKey: hasData ? dataKey : undefined,\n    })\n\n    const hasStories = meta.stories !== undefined && meta.stories.length > 0\n\n    const title = `${startCase(name)} chart`\n    const description = `${meta.package} package ${startCase(name)} chart.`\n    const tags = useMemo(() => [meta.package, ...meta.tags], [meta])\n\n    const flavorKeys = useMemo(() => flavors.map(flavor => flavor.flavor), [flavors])\n\n    return (\n        <Layout>\n            <ComponentPage>\n                <Seo title={title} description={description} image={image} keywords={tags} />\n                <ComponentHeader chartClass={name} tags={tags} />\n                <ComponentFlavorSelector flavors={flavors} current={currentFlavor} />\n                <ComponentDescription description={meta.description} />\n                <ComponentTabs<Data>\n                    chartClass={icon}\n                    code={code}\n                    data={hasData ? getTabData(data!) : undefined}\n                    dataKey={dataKey}\n                    nodeCount={\n                        hasData && getDataSize !== undefined ? getDataSize(data!) : undefined\n                    }\n                    diceRoll={hasData ? diceRoll : undefined}\n                >\n                    {children(mappedProperties, data, theme.nivo, logAction)}\n                </ComponentTabs>\n                <ActionsLogger actions={actions} isFullWidth={!hasStories} />\n                <ComponentSettings\n                    settings={settings}\n                    onChange={setSettings}\n                    groups={properties}\n                    flavors={flavorKeys}\n                    currentFlavor={currentFlavor}\n                />\n                {hasStories && <Stories stories={meta.stories} />}\n            </ComponentPage>\n        </Layout>\n    )\n}\n","var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n","var baseForOwn = require('./_baseForOwn'),\n    castFunction = require('./_castFunction');\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nmodule.exports = forOwn;\n","var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n"],"names":["indent","content","spaces","split","map","line","i","repeat","join","toJson","value","normalized","JSON","stringify","replace","_match","space","key","length","tabs","ComponentTabs","chartClass","data","dataKey","code","children","diceRoll","nodeCount","nodeCountWording","theme","useTheme","useState","currentTab","setCurrentTab","hoverTab","setHoverTab","availableTabs","undefined","filter","t","Content","id","role","Code","Highlight","language","includes","CodeBlock","Wrapper","className","Nav","tab","index","isCurrent","icon","iconColors","NavItem","tabIndex","onClick","onMouseEnter","onMouseLeave","Icon","DiceRollButton","NodeCount","styled","dimensions","headerHeight","miniNavWidth","colors","cardBackground","border","media","background","text","accent","cardAltBackground","ActionsLoggerLog","action","isOpen","setIsOpen","toggle","useCallback","flag","ActionContainer","ActionHeader","ActionType","type","Color","color","ColorChip","style","ActionLabel","label","Toggle","ActionData","borderLight","ActionsLogger","actions","isFullWidth","Header","EmptyContainer","EmptyIcon","size","EmptyMessage","FaRegHandPointer","Stories","stories","story","StoriesItem","href","link","config","encodeURIComponent","toLowerCase","target","rel","ComponentTemplate","name","meta","flavors","currentFlavor","properties","initialProperties","defaultProperties","propertiesMapper","codePropertiesMapper","hasData","generateData","getDataSize","getTabData","image","settings","setSettings","initialData","useMemo","setData","currentData","setActions","logAction","useActionsLogger","mappedProperties","codeProperties","props","defaults","pkg","args","push","forOwn","_value","isPlainObject","isArray","isString","isBoolean","isNumber","dedent","toString","install","imports","responsiveWarning","indexOf","generateChartCode","hasStories","title","description","tags","flavorKeys","flavor","Layout","ComponentPage","Seo","keywords","ComponentHeader","ComponentFlavorSelector","current","ComponentDescription","nivo","ComponentSettings","onChange","groups","identity","module","exports","baseForOwn","castFunction","object","iteratee","createCompounder","upperFirst","startCase","result","word"],"sourceRoot":""}