{"version":3,"sources":["webpack:///./src/pages/sunburst/api.js","webpack:///./src/components/components/api-client/ApiPreview.js","webpack:///./src/components/components/api-client/ApiTabs.js","webpack:///./src/components/components/api-client/ApiSubmit.js","webpack:///./src/components/components/api-client/ApiResponse.js","webpack:///./src/components/components/api-client/ApiClient.js"],"names":["data","generateLibTree","SunburstApi","title","keywords","meta","Sunburst","tags","componentName","chartClass","apiPath","flavors","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","width","height","JSON","stringify","margin","top","right","bottom","left","identity","value","cornerRadius","borderWidth","borderColor","colors","scheme","childColor","from","Link","styled","a","Image","img","EmptyContainer","div","theme","textLight","ApiPreview","responseStatus","chartUrl","href","target","rel","src","alt","tabs","ApiTabs","body","isLoading","useTheme","useState","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","map","tab","isCurrent","icon","iconColors","NavItem","key","onClick","onMouseEnter","onMouseLeave","Icon","id","Content","CodeBlock","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","tablet","mobile","nav","background","span","text","LoaderContainer","loaderBarAnimation","keyframes","LoaderBar","accent","index","Loader","Button","ApiSubmit","render","this","props","loading","Component","Container","Header","borderLight","ResponseJson","pre","ApiResponse","response","responseContent","ApiClient","handleSettingsUpdate","settings","setState","handleDataUpdate","e","state","Object","assign","handleSubmit","fetch","config","nivoApiUrl","method","headers","Accept","then","res","status","json","catch","err","console","error","component","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","ComponentFlavorSelector","current","ComponentDescription","description","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","onChange","cardAltBackground"],"mappings":"0NAgBMA,EAAOC,cA4CEC,UA1CK,WAChB,OACI,oCACI,kBAAC,IAAD,CAAKC,MAAM,oBAAoBC,SAAQ,sBAAMC,IAAKC,SAASC,MAApB,CAA0B,eACjE,kBAAC,IAAD,CACIC,cAAc,WACdC,WAAW,WACXC,QAAQ,mBACRC,QAASN,IAAKM,QACdC,aAAa,OACbC,cAAeC,IACfC,YAAaC,IACbC,aAAc,CACVC,MAAO,IACPC,OAAQ,IACRnB,KAAMoB,KAAKC,UAAUrB,EAAM,KAAM,MAEjCsB,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAGVC,SAAU,OACVC,MAAO,MAEPC,aAAc,EAEdC,YAAa,EACbC,YAAa,QAEbC,OAAQ,CAAEC,OAAQ,QAClBC,WAAY,CACRC,KAAM,e,qNCxCxBC,EAAOC,IAAOC,EAAV,uEAAGD,CAAH,sHAUJE,EAAQF,IAAOG,IAAV,wEAAGH,CAAH,qCAKLI,EAAiBJ,IAAOK,IAAV,iFAAGL,CAAH,+HAGP,qBAAGM,MAAkBX,OAAOY,aAiC1BC,EAzBI,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,SAClC,OAAuB,MAAnBD,GAA0BC,EAEtB,kBAACX,EAAD,CAAMY,KAAMD,EAAUE,OAAO,SAASC,IAAI,uBACtC,kBAACX,EAAD,CAAOY,IAAKJ,EAAUK,IAAI,gBAMlC,kBAACX,EAAD,iEAEI,6BAFJ,4D,ulBChCR,IAAMY,EAAO,CAAC,UAAW,OAAQ,QAoDlBC,EAlDC,SAAC,GAAqE,IAAnE7C,EAAkE,EAAlEA,WAAYT,EAAsD,EAAtDA,KAAMuD,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,UAAWV,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,SAC5DJ,EAAQc,cADmE,EAG7CC,mBAAS,WAAtCC,EAH0E,KAG9DC,EAH8D,OAIjDF,mBAAS,MAAlCG,EAJ0E,KAIhEC,EAJgE,KAMjF,OACI,kBAACC,EAAD,CAASC,UAAS,eAAiBL,GAC/B,kBAACM,EAAD,KACKZ,EAAKa,KAAI,SAAAC,GACN,IAAMC,EAAYD,IAAQR,EACpBU,EAAe,YAARF,EAAoB1D,EAAa,OACxC6D,EAAaF,GAAaP,IAAaM,EAAM,UAAY,UAE/D,OACI,kBAACI,EAAD,CACIC,IAAKL,EACLH,UAAU,YACVI,UAAWA,EACXK,QAAS,kBAAMb,EAAcO,IAC7BO,aAAc,kBAAMZ,EAAYK,IAChCQ,aAAc,kBAAMb,EAAY,QAEhC,kBAACc,EAAD,CAAMZ,UAAS,gBAAkBK,EAAlB,IAA0B1B,EAAMkC,GAAhC,IAAsCP,IACpDH,OAKjB,kBAACW,EAAD,KACoB,YAAfnB,GACG,kBAAC,EAAD,CACIH,UAAWA,EACXV,eAAgBA,EAChBC,SAAUA,IAGF,SAAfY,GAAyB,kBAACoB,EAAA,EAAD,KAAY3D,KAAKC,UAAUkC,EAAM,KAAM,OACjD,SAAfI,GAAyB,kBAACoB,EAAA,EAAD,KAAY/E,GACtC,kBAAC,EAAD,CAAQwD,UAAWA,OAa7BO,EAAU1B,IAAOK,IAAV,mEAAGL,CAAH,0QAEF,qBAAGM,MAAkBqC,WAAWC,gBAGX,qBAAGtC,MAAkBqC,WAAWE,gBAE/B,qBAAGvC,MAAkBqC,WAAWC,gBAI/C,qBAAGtC,MAAkBX,OAAOmD,kBACf,qBAAGxC,MAAkBX,OAAOoD,SAErDC,IAAMC,OAdC,KAgBM,qBAAG3C,MAAkBqC,WAAWC,gBAGV,qBAAGtC,MAAkBqC,WAAWC,gBAKnEI,IAAME,OAxBC,KAgCuB,qBAAG5C,MAAkBX,OAAOoD,WAK1DnB,EAAM5B,IAAOmD,IAAV,+DAAGnD,CAAH,0FAES,qBAAGM,MAAkBX,OAAOyD,cAOxClB,EAAUlC,IAAOqD,KAAV,mEAAGrD,CAAH,yJAQK,gBAAG+B,EAAH,EAAGA,UAAWzB,EAAd,EAAcA,MAAd,OACVyB,EAAYzB,EAAMX,OAAOmD,eAAiB,iBAGjC,qBAAGxC,MAAkBX,OAAO2D,QAIvCf,EAAOvC,IAAOqD,KAAV,gEAAGrD,CAAH,wHAUJyC,EAAUzC,IAAOK,IAAV,mEAAGL,CAAH,uFASPuD,EAAkBvD,IAAOK,IAAV,2EAAGL,CAAH,qXAQH,qBAAGM,MAAkBX,OAAOmD,kBAQ/B,qBAAG3B,UAA6B,EAAI,KACnB,qBAAGA,UAA6B,EAAI,UAI9DqC,EAAqBC,YAAH,sEASlBC,EAAY1D,IAAOqD,KAAV,qEAAGrD,CAAH,mNAEG,qBAAGM,MAAkBX,OAAOgE,SAKxBH,GAGC,mBAA6B,IAA7B,EAAGI,MAAqB,MAGzCC,EAAS,SAAC,GAAmB,IAAjB1C,EAAgB,EAAhBA,UACd,OACI,kBAACoC,EAAD,CAAiBpC,UAAWA,GACxB,8BACI,kBAACuC,EAAD,CAAWE,MAAO,KAEtB,8BACI,kBAACF,EAAD,CAAWE,MAAO,KAEtB,8BACI,kBAACF,EAAD,CAAWE,MAAO,KAEtB,8BACI,kBAACF,EAAD,CAAWE,MAAO,KAEtB,8BACI,kBAACF,EAAD,CAAWE,MAAO,OCtM5BE,EAAS9D,IAAOqD,KAAV,oEAAGrD,CAAH,8IAEY,qBAAGM,MAAkBX,OAAOgE,UAS9CI,E,kGACFC,OAAA,WAAU,IAAD,EACwBC,KAAKC,MAA1BC,EADH,EACGA,QAAS/B,EADZ,EACYA,QAEjB,OAAO,kBAAC0B,EAAD,CAAQ1B,QAASA,GAAU+B,EAAU,UAAY,a,GAJxCC,aAaxBL,EAAUnF,aAAe,GAEVmF,QC3BTM,EAAYrE,IAAOK,IAAV,yEAAGL,CAAH,gFACG,qBAAGM,MAAkBX,OAAOmD,kBAClB,qBAAGxC,MAAkBX,OAAOoD,UAKlDuB,EAAStE,IAAOK,IAAV,sEAAGL,CAAH,oDAEmB,qBAAGM,MAAkBX,OAAO4E,eAGrDC,EAAexE,IAAOyE,IAAV,4EAAGzE,CAAH,6FASZ0E,E,kGACFV,OAAA,WAAU,IAAD,EACgCC,KAAKC,MAAlCzD,EADH,EACGA,eAAgBkE,EADnB,EACmBA,SAEpBC,EAAkB,wBAKtB,OAJID,IACAC,EAAkB7F,KAAKC,UAAU2F,EAAU,KAAM,OAIjD,kBAACN,EAAD,KACI,kBAACC,EAAD,iBACc7D,EAAiB,gCAASA,GAA2B,OAEnE,kBAAC+D,EAAD,KAAeI,K,GAdLR,aAsB1BM,EAAY9F,aAAe,GAEZ8F,Q,ukBCjCf,IAcqBG,E,YAcjB,WAAYX,GAAQ,IAAD,SACf,cAAMA,IAAN,MAUJY,qBAAuB,SAAAC,GACnB,EAAKC,SAAS,CAAEd,MAAOa,KAZR,EAenBE,iBAAmB,SAAAC,GAAM,IAAD,EACZ3G,EAAiB,EAAK2F,MAAtB3F,aACA2F,EAAU,EAAKiB,MAAfjB,MAER,EAAKc,SAAS,CACVd,MAAOkB,OAAOC,OAAO,GAAInB,GAAlB,OACF3F,GAAe2G,EAAEtE,OAAOrB,MADtB,OApBI,EA0BnB+F,aAAe,WAAO,IAAD,EACgB,EAAKpB,MAA9B7F,EADS,EACTA,QAASK,EADA,EACAA,YACTwF,EAAU,EAAKiB,MAAfjB,MAER,EAAKc,SAAS,CACVb,SAAS,IAGboB,MAAM,GAAGC,IAAOC,WAAapH,EAAW,CACpCqH,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpB1E,KAAMnC,KAAKC,UAAUN,EAAYwF,MAEhC2B,MAAK,SAAAC,GAMF,OALA,EAAKd,SAAS,CACVb,SAAS,EACT1D,eAAgBqF,EAAIC,SAGjBD,EAAIE,UAEdH,MAAK,SAAAC,GACF,EAAKd,SAAS,CAAEL,SAAUmB,OAE7BG,OAAM,SAAAC,GACHC,QAAQC,MAAMF,OAnDtB,EAAKf,MAAQ,CACTjB,MAAOA,EAAMtF,aACbuF,SAAS,EACT1D,eAAgB,KAChBkE,SAAU,MAPC,E,oCA0DnBX,OAAA,WAAU,IAtFMqC,EAsFP,EASDpC,KAAKC,MAPL/F,EAFC,EAEDA,cACAC,EAHC,EAGDA,WACAC,EAJC,EAIDA,QACAG,EALC,EAKDA,cACAD,EANC,EAMDA,aACAG,EAPC,EAODA,YACAJ,EARC,EAQDA,QARC,EAUgD2F,KAAKkB,MAAlDjB,EAVH,EAUGA,MAAOC,EAVV,EAUUA,QAAS1D,EAVnB,EAUmBA,eAAgBkE,EAVnC,EAUmCA,SAElC2B,EAAahI,EAAQuD,KAAI,SAAA0E,GAAM,OAAIA,EAAOA,UAEhD,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACItI,WAAeD,EAAL,YACVD,KAAM,CAAC,QAAQG,KAElBC,GAAW,kBAACqI,EAAA,EAAD,CAAyBrI,QAASA,EAASsI,QAAQ,QAC/D,kBAACC,EAAA,EAAD,CAAsBC,aA5GtBT,EA4G+ClI,EA5GtC,UACrBkI,EADqB,icA6GT,kBAAC,EAAD,CACIjI,WAAYA,EACZT,KAAMuG,EAAM3F,GACZ2C,KAAMxC,EAAYwF,GAClB/C,UAAWgD,EACX1D,eAAgBA,EAChBC,SAAUiE,EAAWA,EAASoC,IAAM,OAExC,kBAACC,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,EAAD,CAAW9C,QAASA,EAAS/B,QAAS6B,KAAKqB,gBAE/C,kBAAC,EAAD,CAAa7E,eAAgBA,EAAgBkE,SAAUA,KAE3D,kBAACuC,EAAA,EAAD,CACIb,UAAWlI,EACX4G,SAAUb,EACV5F,QAASgI,EACTa,cAAc,MACd1I,OAAQD,EACR4I,SAAUnD,KAAKa,0B,GAnHAV,aAAlBS,EASVjG,aAAe,CAClBL,aAAc,OACdG,YAAa,SAAAwF,GAAK,OAAIA,IAgH9B,IAAM8C,EAAehH,IAAOK,IAAV,6EAAGL,CAAH,8SAIc,qBAAGM,MAAkBqC,WAAWE,gBAG9C,qBAAGvC,MAAkBX,OAAO0H,qBACb,qBAAG/G,MAAkBqC,WAAWC,eAO3DI,IAAMC,OAfM,KAmBuB,qBAAG3C,MAAkBqC,WAAWC,gBAMnEI,IAAME,OAzBM,MAsCZ+D,EAAgBjH,IAAOK,IAAV,8EAAGL,CAAH","file":"component---src-pages-sunburst-api-js-be5925f972d352aff370.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { generateLibTree } from '@nivo/generators'\nimport SEO from '../../components/seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/sunburst/props'\nimport mapper from '../../data/components/sunburst/mapper'\nimport meta from '../../data/components/sunburst/meta.yml'\n\nconst data = generateLibTree()\n\nconst SunburstApi = () => {\n    return (\n        <>\n            <SEO title=\"Sunburst HTTP API\" keywords={[...meta.Sunburst.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"Sunburst\"\n                chartClass=\"sunburst\"\n                apiPath=\"/charts/sunburst\"\n                flavors={meta.flavors}\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 600,\n                    height: 600,\n                    data: JSON.stringify(data, null, '  '),\n\n                    margin: {\n                        top: 20,\n                        right: 20,\n                        bottom: 20,\n                        left: 20,\n                    },\n\n                    identity: 'name',\n                    value: 'loc',\n\n                    cornerRadius: 2,\n\n                    borderWidth: 1,\n                    borderColor: 'white',\n\n                    colors: { scheme: 'nivo' },\n                    childColor: {\n                        from: 'color',\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default SunburstApi\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ApiPreview = ({ responseStatus, chartUrl }) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n\n    return <div className=\"api-client_preview\">{content}</div>\n}\n\nApiPreview.propTypes = {\n    responseStatus: PropTypes.number,\n    chartUrl: PropTypes.string,\n}\n\nexport default ApiPreview\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport ApiPreview from './ApiPreview'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\nimport CodeBlock from '../../CodeBlock'\n\nconst tabs = ['preview', 'body', 'data']\n\nconst ApiTabs = ({ chartClass, data, body, isLoading, responseStatus, chartUrl }) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState('preview')\n    const [hoverTab, setHoverTab] = useState(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview\n                        isLoading={isLoading}\n                        responseStatus={responseStatus}\n                        chartUrl={chartUrl}\n                    />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nApiTabs.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n}\n\nexport default ApiTabs\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.6);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 60%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst LoaderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n\nclass ApiSubmit extends Component {\n    render() {\n        const { loading, onClick } = this.props\n\n        return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n    }\n}\n\nApiSubmit.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nApiSubmit.defaultProps = {}\n\nexport default ApiSubmit\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n\nclass ApiResponse extends Component {\n    render() {\n        const { responseStatus, response } = this.props\n\n        let responseContent = 'no response available'\n        if (response) {\n            responseContent = JSON.stringify(response, null, '  ')\n        }\n\n        return (\n            <Container>\n                <Header>\n                    Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}\n                </Header>\n                <ResponseJson>{responseContent}</ResponseJson>\n            </Container>\n        )\n    }\n}\n\nApiResponse.propTypes = {}\n\nApiResponse.defaultProps = {}\n\nexport default ApiResponse\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport ComponentPage from '../ComponentPage'\nimport ComponentHeader from '../ComponentHeader'\nimport ComponentFlavorSelector from '../ComponentFlavorSelector'\nimport ComponentDescription from '../ComponentDescription'\nimport ComponentSettings from '../ComponentSettings'\nimport ApiTabs from './ApiTabs'\nimport ApiSubmit from './ApiSubmit'\nimport ApiResponse from './ApiResponse'\nimport config from '../../../data/config'\n\nconst description = component => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\nexport default class ApiClient extends Component {\n    static propTypes = {\n        componentName: PropTypes.string.isRequired,\n        chartClass: PropTypes.string.isRequired,\n        apiPath: PropTypes.string.isRequired,\n        dataProperty: PropTypes.string.isRequired,\n        propsMapper: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        dataProperty: 'data',\n        propsMapper: props => props,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            props: props.defaultProps,\n            loading: false,\n            responseStatus: null,\n            response: null,\n        }\n    }\n\n    handleSettingsUpdate = settings => {\n        this.setState({ props: settings })\n    }\n\n    handleDataUpdate = e => {\n        const { dataProperty } = this.props\n        const { props } = this.state\n\n        this.setState({\n            props: Object.assign({}, props, {\n                [dataProperty]: e.target.value,\n            }),\n        })\n    }\n\n    handleSubmit = () => {\n        const { apiPath, propsMapper } = this.props\n        const { props } = this.state\n\n        this.setState({\n            loading: true,\n        })\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    responseStatus: res.status,\n                })\n\n                return res.json()\n            })\n            .then(res => {\n                this.setState({ response: res })\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    render() {\n        const {\n            componentName,\n            chartClass,\n            apiPath,\n            controlGroups,\n            dataProperty,\n            propsMapper,\n            flavors,\n        } = this.props\n        const { props, loading, responseStatus, response } = this.state\n\n        const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n        return (\n            <Layout>\n                <ComponentPage>\n                    <ComponentHeader\n                        chartClass={`${componentName} HTTP API`}\n                        tags={[`POST ${apiPath}`]}\n                    />\n                    {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                    <ComponentDescription description={description(componentName, apiPath)} />\n                    <ApiTabs\n                        chartClass={chartClass}\n                        data={props[dataProperty]}\n                        body={propsMapper(props)}\n                        isLoading={loading}\n                        responseStatus={responseStatus}\n                        chartUrl={response ? response.url : null}\n                    />\n                    <ControlPanel>\n                        <SubmitWrapper>\n                            <ApiSubmit loading={loading} onClick={this.handleSubmit} />\n                        </SubmitWrapper>\n                        <ApiResponse responseStatus={responseStatus} response={response} />\n                    </ControlPanel>\n                    <ComponentSettings\n                        component={componentName}\n                        settings={props}\n                        flavors={flavorKeys}\n                        currentFlavor=\"api\"\n                        groups={controlGroups}\n                        onChange={this.handleSettingsUpdate}\n                    />\n                </ComponentPage>\n            </Layout>\n        )\n    }\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.6);\n    width: var(--partialWidth);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 60%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n"],"sourceRoot":""}