{"version":3,"sources":["webpack:///../node_modules/lodash/_copySymbols.js","webpack:///../node_modules/lodash/_baseClone.js","webpack:///../node_modules/lodash/_initCloneArray.js","webpack:///../node_modules/lodash/_cloneDataView.js","webpack:///../node_modules/lodash/_cloneRegExp.js","webpack:///../node_modules/lodash/_parent.js","webpack:///../node_modules/lodash/_baseAssignIn.js","webpack:///../node_modules/lodash/_getSymbolsIn.js","webpack:///../node_modules/lodash/isMap.js","webpack:///../node_modules/lodash/_copySymbolsIn.js","webpack:///../node_modules/lodash/_baseIsMap.js","webpack:///../node_modules/lodash/isSet.js","webpack:///../node_modules/lodash/_cloneSymbol.js","webpack:///../node_modules/lodash/_baseUnset.js","webpack:///../node_modules/lodash/omit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/props.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../src/hooks.js","webpack:///../src/ParallelCoordinatesLineTooltip.js","webpack:///../src/ParallelCoordinatesLine.js","webpack:///../src/ParallelCoordinates.js","webpack:///../src/ResponsiveParallelCoordinates.js","webpack:///../src/ParallelCoordinatesCanvas.js","webpack:///../src/ResponsiveParallelCoordinatesCanvas.js","webpack:///./src/data/components/parallel-coordinates/props.js","webpack:///../node_modules/lodash/_arrayEach.js","webpack:///./src/data/components/parallel-coordinates/mapper.js","webpack:///./src/data/components/parallel-coordinates/variables.js","webpack:///../node_modules/lodash/_customOmitClone.js","webpack:///../node_modules/lodash/_initCloneByTag.js","webpack:///./src/lib/settings.js","webpack:///../node_modules/lodash/_baseAssign.js","webpack:///../node_modules/lodash/_getAllKeysIn.js","webpack:///../node_modules/lodash/_baseIsSet.js"],"names":["copyObject","getSymbols","module","exports","source","object","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","keys","cloneableTags","baseClone","value","bitmask","customizer","key","stack","result","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","forEach","subValue","add","keysFunc","keysIn","props","hasOwnProperty","Object","prototype","array","length","constructor","call","index","input","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","baseGet","baseSlice","path","arrayPush","getPrototype","stubArray","getSymbolsIn","getOwnPropertySymbols","baseIsMap","baseUnary","nodeUtil","nodeIsMap","isObjectLike","baseIsSet","nodeIsSet","Symbol","symbolProto","symbolValueOf","valueOf","symbol","castPath","last","parent","toKey","arrayMap","baseUnset","customOmitClone","flatRest","omit","paths","CLONE_DEEP_FLAG","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","getOwnPropertyDescriptors","defineProperties","commonVariablePropTypes","PropTypes","ticksPosition","tickSize","tickPadding","tickRotation","format","legend","legendPosition","legendOffset","number","commonPropTypes","data","variables","type","padding","values","tickValues","min","max","layout","curve","lineCurvePropType","strokeWidth","lineOpacity","axesPlan","axesTicksPosition","colors","ordinalColorsPropType","isRequired","commonDefaultProps","role","scheme","animate","motionConfig","svgDefaultProps","_arrayLikeToArray","arr","len","arr2","Array","_toConsumableArray","arrayLikeToArray","arrayWithoutHoles","iter","iterator","from","iterableToArray","o","minLen","n","toString","slice","name","test","unsupportedIterableToArray","TypeError","nonIterableSpread","useParallelCoordinates","width","height","getLineColor","useOrdinalColorScale","lineGenerator","useMemo","d","curveFromProp","variablesScale","range","variablesWithScale","variable","allValues","Math","scale","scaleLinear","scalePoint","dataWithPoints","points","x","datum","y","computeParallelCoordinatesLayout","ParallelCoordinatesLineTooltip","rows","memo","ParallelCoordinatesLine","color","opacity","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","event","useMotionConfig","springConfig","animatedPath","useAnimatedPath","animatedProps","useSpring","config","immediate","stroke","strokeLinecap","fill","onMouseEnter","onMouseMove","onMouseLeave","WrappedParallelCoordinates","withContainer","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","axes","axis","ResponsiveParallelCoordinates","WrappedParallelCoordinatesCanvas","pixelRatio","canvasEl","useRef","theme","useTheme","useEffect","ctx","renderAxisToCanvas","ref","style","window","ResponsiveParallelCoordinatesCanvas","group","help","required","description","controlType","controlOptions","shouldCreate","shouldRemove","getItemTitle","disabled","when","disabledValue","defaultValue","defaults","choices","label","lineCurvePropKeys","map","enableControlForFlavors","unit","step","flavors","themeProperty","motionProperties","groups","groupProperties","iteratee","settingsMapper","isPlainObject","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","mapping","exclude","settings","options","overrides","mapAxis","upperFirst","enable","mapFormat","enabled","baseGetAllKeys"],"mappings":"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","file":"8a08e82b418a1d26bd365445dd4625425eed4154-8b3d20fd3b2050b0d080.js","sourcesContent":["var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\n\nconst commonVariablePropTypes = {\n    key: PropTypes.string.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n}\n\nexport const commonPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.shape({\n                ...commonVariablePropTypes,\n                key: PropTypes.string.isRequired,\n                type: PropTypes.oneOf(['point']).isRequired,\n                padding: PropTypes.number,\n                values: PropTypes.arrayOf(\n                    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                ),\n                tickValues: PropTypes.arrayOf(\n                    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                ),\n            }),\n            PropTypes.shape({\n                ...commonVariablePropTypes,\n                type: PropTypes.oneOf(['linear']).isRequired,\n                min: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n                max: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n                tickValues: PropTypes.oneOfType([\n                    PropTypes.number,\n                    PropTypes.arrayOf(PropTypes.number),\n                ]),\n            }),\n        ])\n    ).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    curve: lineCurvePropType.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    lineOpacity: PropTypes.number.isRequired,\n    axesPlan: PropTypes.oneOf(['foreground', 'background']).isRequired,\n    axesTicksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    colors: ordinalColorsPropType.isRequired,\n}\n\nexport const svgPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const commonDefaultProps = {\n    layout: 'horizontal',\n    curve: 'linear',\n    colors: { scheme: 'yellow_orange_red' },\n    strokeWidth: 2,\n    lineOpacity: 0.35,\n    axesPlan: 'foreground',\n    axesTicksPosition: 'after',\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useMemo } from 'react'\nimport { line } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport { curveFromProp } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\n\nexport const computeParallelCoordinatesLayout = ({ width, height, data, variables, layout }) => {\n    const variablesScale = scalePoint()\n        .range(layout === 'horizontal' ? [0, width] : [height, 0])\n        .domain(variables.map(({ key }) => key))\n\n    const range = layout === 'horizontal' ? [height, 0] : [0, width]\n    const variablesWithScale = variables.map(variable => {\n        const allValues = new Set()\n        data.forEach(d => allValues.add(d[variable.key]))\n\n        let scale\n        if (variable.type === 'linear') {\n            const min =\n                variable.min !== undefined && variable.min !== 'auto'\n                    ? variable.min\n                    : Math.min(...Array.from(allValues))\n            const max =\n                variable.max !== undefined && variable.max !== 'auto'\n                    ? variable.max\n                    : Math.max(...Array.from(allValues))\n\n            scale = scaleLinear().rangeRound(range).domain([min, max])\n        }\n\n        if (variable.type === 'point') {\n            scale = scalePoint()\n                .range(range)\n                .domain(variable.values || allValues)\n\n            if (variable.padding !== undefined) {\n                scale.padding(variable.padding)\n            }\n        }\n\n        return {\n            ...variable,\n            scale,\n            values: Array.from(allValues),\n        }\n    })\n\n    const dataWithPoints = data.map((datum, index) => {\n        const points = variablesWithScale.map(variable => ({\n            x:\n                layout === 'horizontal'\n                    ? variablesScale(variable.key)\n                    : variable.scale(datum[variable.key]),\n            y:\n                layout === 'horizontal'\n                    ? variable.scale(datum[variable.key])\n                    : variablesScale(variable.key),\n        }))\n\n        return { index, ...datum, points }\n    })\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n    }\n}\n\nexport const computeAxisDensity = (variable, data) => {\n    let kernels\n    if (variable.type === 'point') {\n        kernels = data.reduce((acc, datum) => {\n            const value = datum[variable.key]\n            let kernel = acc.find(k => k.id === value)\n            if (kernel === undefined) {\n                kernel = { id: value, count: 0 }\n                acc.push(kernel)\n            }\n            kernel.count++\n\n            return acc\n        }, [])\n        kernels = variable.scale\n            .domain()\n            .map(d => kernels.find(k => k.id === d))\n            .filter(k => k !== undefined)\n    } else if (variable.type === 'linear') {\n        kernels = variable.scale.ticks(5).map((id, index, ticks) => {\n            if (index === 0) {\n                return {\n                    id,\n                    count: variable.values.filter(v => v <= id).length,\n                }\n            }\n\n            return {\n                id,\n                count: variable.values.filter(v => v > ticks[index - 1] && v <= id).length,\n            }\n        })\n    }\n\n    if (kernels !== undefined) {\n        const scale = scaleLinear()\n            .rangeRound([0, 60])\n            .domain([0, Math.max(...kernels.map(k => k.count))])\n\n        return kernels.map(k => ({\n            id: k.id,\n            position: variable.scale(k.id),\n            size: scale(k.count),\n        }))\n    }\n\n    return []\n}\n\nexport const useParallelCoordinates = ({\n    width,\n    height,\n    data,\n    variables,\n    layout,\n    colors,\n    curve,\n}) => {\n    const getLineColor = useOrdinalColorScale(colors, 'index')\n\n    const lineGenerator = useMemo(\n        () =>\n            line()\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n\n    const { variablesScale, variablesWithScale, dataWithPoints } = useMemo(\n        () =>\n            computeParallelCoordinatesLayout({\n                width,\n                height,\n                data,\n                variables,\n                layout,\n            }),\n        [width, height, data, variables, layout]\n    )\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        getLineColor,\n        lineGenerator,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TableTooltip } from '@nivo/tooltip'\n\nconst ParallelCoordinatesLineTooltip = ({ data, variables }) => {\n    return (\n        <TableTooltip\n            rows={variables.map(variable => [\n                variable.key,\n                <strong>{data[variable.key]}</strong>, // eslint-disable-line react/jsx-key\n            ])}\n        />\n    )\n}\n\nParallelCoordinatesLineTooltip.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(ParallelCoordinatesLineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport ParallelCoordinatesLineTooltip from './ParallelCoordinatesLineTooltip'\n\nconst ParallelCoordinatesLine = ({\n    data,\n    variables,\n    lineGenerator,\n    points,\n    strokeWidth,\n    color,\n    opacity,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(\n                <ParallelCoordinatesLineTooltip data={data} variables={variables} />,\n                event\n            )\n        },\n        [data, variables]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(lineGenerator(points))\n    const animatedProps = useSpring({\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            stroke={animatedProps.color}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            opacity={animatedProps.opacity}\n            fill=\"none\"\n            onMouseEnter={handleMouseHover}\n            onMouseMove={handleMouseHover}\n            onMouseLeave={hideTooltip}\n        />\n    )\n}\n\nParallelCoordinatesLine.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n}\n\nexport default memo(ParallelCoordinatesLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { SvgWrapper, useDimensions, withContainer } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { svgPropTypes, svgDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\nimport ParallelCoordinatesLine from './ParallelCoordinatesLine'\n\nconst ParallelCoordinates = ({\n    data,\n    variables,\n    layout,\n    width,\n    height,\n    margin: partialMargin,\n    axesPlan,\n    axesTicksPosition,\n    strokeWidth,\n    lineOpacity,\n    curve,\n    colors,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        lineGenerator,\n        getLineColor,\n    } = useParallelCoordinates({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        variables,\n        layout,\n        colors,\n        curve,\n    })\n\n    const axes = variablesWithScale.map(variable => (\n        <Axis\n            key={variable.key}\n            axis={layout === 'horizontal' ? 'y' : 'x'}\n            length={layout === 'horizontal' ? innerHeight : innerWidth}\n            x={layout === 'horizontal' ? variablesScale(variable.key) : 0}\n            y={layout === 'horizontal' ? 0 : variablesScale(variable.key)}\n            scale={variable.scale}\n            ticksPosition={variable.ticksPosition || axesTicksPosition}\n            tickValues={variable.tickValues}\n            tickSize={variable.tickSize}\n            tickPadding={variable.tickPadding}\n            tickRotation={variable.tickRotation}\n            format={variable.tickFormat}\n            legend={variable.legend}\n            legendPosition={variable.legendPosition}\n            legendOffset={variable.legendOffset}\n        />\n    ))\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {axesPlan === 'background' && axes}\n            {dataWithPoints.map(datum => (\n                <ParallelCoordinatesLine\n                    key={datum.index}\n                    data={datum}\n                    variables={variables}\n                    lineGenerator={lineGenerator}\n                    points={datum.points}\n                    strokeWidth={strokeWidth}\n                    opacity={lineOpacity}\n                    color={getLineColor(datum)}\n                />\n            ))}\n            {axesPlan === 'foreground' && axes}\n        </SvgWrapper>\n    )\n}\n\nParallelCoordinates.propTypes = svgPropTypes\n\nconst WrappedParallelCoordinates = withContainer(ParallelCoordinates)\nWrappedParallelCoordinates.defaultProps = svgDefaultProps\n\nexport default WrappedParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinates from './ParallelCoordinates'\n\nconst ResponsiveParallelCoordinates = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ParallelCoordinates width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDimensions, useTheme, withContainer } from '@nivo/core'\nimport { renderAxisToCanvas } from '@nivo/axes'\nimport { commonPropTypes, commonDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\n\nconst ParallelCoordinatesCanvas = ({\n    data,\n    layout,\n    variables,\n    width,\n    height,\n    margin: partialMargin,\n    curve,\n    colors,\n    lineOpacity,\n    strokeWidth,\n    axesTicksPosition,\n    pixelRatio,\n}) => {\n    const canvasEl = useRef(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        lineGenerator,\n        getLineColor,\n    } = useParallelCoordinates({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        variables,\n        layout,\n        colors,\n        curve,\n    })\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        lineGenerator.context(ctx)\n        dataWithPoints.forEach(datum => {\n            ctx.save()\n            ctx.globalAlpha = lineOpacity\n\n            ctx.beginPath()\n            lineGenerator(datum.points)\n            ctx.strokeStyle = getLineColor(datum)\n            ctx.lineWidth = strokeWidth\n            ctx.stroke()\n\n            ctx.restore()\n        })\n\n        variablesWithScale.map(variable => {\n            renderAxisToCanvas(ctx, {\n                axis: layout === 'horizontal' ? 'y' : 'x',\n                scale: variable.scale,\n                x: layout === 'horizontal' ? variablesScale(variable.key) : 0,\n                y: layout === 'horizontal' ? 0 : variablesScale(variable.key),\n                length: layout === 'horizontal' ? innerHeight : innerWidth,\n                ticksPosition: axesTicksPosition,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        lineGenerator,\n        getLineColor,\n        lineOpacity,\n        strokeWidth,\n        dataWithPoints,\n        variablesWithScale,\n        layout,\n        axesTicksPosition,\n        theme,\n        pixelRatio,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        />\n    )\n}\n\nParallelCoordinatesCanvas.propTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nconst WrappedParallelCoordinatesCanvas = withContainer(ParallelCoordinatesCanvas)\nWrappedParallelCoordinatesCanvas.defaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nexport default WrappedParallelCoordinatesCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinatesCanvas from './ParallelCoordinatesCanvas'\n\nconst ResponsiveParallelCoordinatesCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => (\n            <ParallelCoordinatesCanvas width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinatesCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { lineCurvePropKeys } from '@nivo/core'\nimport { commonDefaultProps as defaults } from '@nivo/parallel-coordinates'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        type: 'Array<object | Array>',\n        required: true,\n    },\n    {\n        key: 'variables',\n        type: 'object[]',\n        help: 'Variables configuration.',\n        description: `\n            Variables configuration, define accessor (\\`key\\`)\n            and variable type. Type must be one of\n            \\`linear\\` or \\`point\\`, \\`linear\\`\n            variables are suitable for continuous numerical\n            data such as age or cost while\n            \\`point\\` variables are suitable for\n            discrete values such as gender.\n        `,\n        group: 'Variables',\n        controlType: 'array',\n        controlOptions: {\n            shouldCreate: false,\n            shouldRemove: false,\n            getItemTitle: (index, values) => `${values.key} (${values.type})`,\n            props: [\n                {\n                    key: 'key',\n                    help: 'Variable key, used to access to corresponding datum value.',\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'type',\n                    help: `Variable type, must be one of: 'linear', 'point'.`,\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Min value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Max value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 1000,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                // {\n                //     key: 'padding',\n                //     help: 'Outer padding (0~1).',\n                //     type: `number`,\n                //     controlType: 'range',\n                //     controlOptions: {\n                //         when: ({ type }) => type === 'point',\n                //         min: 0,\n                //         max: 1,\n                //         step: 0.01,\n                //     },\n                // },\n            ],\n        },\n    },\n    {\n        key: 'layout',\n        help: `Chart layout.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.layout,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: lineCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'axesPlan',\n        help: `Axes plan.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesPlan,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'foreground', value: 'foreground' },\n                { label: 'background', value: 'background' },\n            ],\n        },\n    },\n    {\n        key: 'axesTicksPosition',\n        help: `Axes ticks position.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesTicksPosition,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'strokeWidth',\n        help: 'Lines stroke width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.strokeWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'lineOpacity',\n        help: 'Lines opacity.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.lineOpacity,\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport default [\n    {\n        key: 'temp',\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'temperature',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'cost',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'cost',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'color',\n        type: 'point',\n        padding: 1,\n        values: ['red', 'yellow', 'green'],\n        legend: 'color',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'target',\n        type: 'point',\n        padding: 0,\n        values: ['A', 'B', 'C', 'D', 'E'],\n        legend: 'target',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'volume',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        legend: 'volume',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n]\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping, { exclude = [] } = {}) => (settings, options = {}) => {\n    const overrides = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = type => (value, settings) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }) => (enabled === true ? format : undefined)\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n"],"sourceRoot":""}