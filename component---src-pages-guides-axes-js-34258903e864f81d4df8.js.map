{"version":3,"file":"component---src-pages-guides-axes-js-34258903e864f81d4df8.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/./src/components/PageContent.ts","webpack://nivo-website/./src/components/styled.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/./src/components/guides/axes/scales.js","webpack://nivo-website/./src/components/guides/axes/theme.js","webpack://nivo-website/./src/components/guides/axes/AxesPosition.js","webpack://nivo-website/./src/components/guides/axes/AxesTicks.js","webpack://nivo-website/./src/components/guides/axes/AxesLegend.js","webpack://nivo-website/./src/pages/guides/axes.js","webpack://nivo-website/../node_modules/lodash/_baseUniq.js","webpack://nivo-website/../node_modules/lodash/_createSet.js","webpack://nivo-website/../node_modules/lodash/noop.js","webpack://nivo-website/../node_modules/lodash/uniq.js"],"sourcesContent":["export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport default styled.div`\n    margin: 0 50px;\n    position: relative;\n\n    ${media.tablet`\n        & {\n            margin: 0 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px;\n        }\n    `}\n`\n","import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport const FullWidthBanner = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    margin-bottom: 40px;\n    padding: 20px;\n`\n\nexport const DescriptionBlock = styled.div`\n    max-width: 800px;\n    margin: 0 auto 50px;\n\n    ${media.tablet`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n`\n\nexport const Card = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    box-shadow: ${({ theme }) => theme.cardShadow};\n`\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","import { scaleLinear, scalePoint, scaleTime } from 'd3-scale'\n\nexport const linearXScale = scaleLinear().range([0, 280]).domain([0, 80])\nlinearXScale.type = 'linear'\n\nexport const linearYScale = scaleLinear().range([160, 0]).domain([0, 35])\nlinearYScale.type = 'linear'\n\nexport const pointXScale = scalePoint()\n    .range([0, 280])\n    .domain(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'])\npointXScale.type = 'point'\n\nexport const timeXScale = scaleTime()\n    .range([0, 280])\n    .domain([new Date(2019, 0, 1, 0, 0, 0, 0), new Date(2020, 0, 1, 0, 0, 0, 0)])\ntimeXScale.type = 'time'\n\nexport const timeXScaleHours = scaleTime()\n    .range([0, 280])\n    .domain([\n        new Date(Date.UTC(2020, 0, 1, 9, 0, 0, 0)),\n        new Date(Date.UTC(2020, 0, 1, 10, 0, 0, 0)),\n    ])\ntimeXScaleHours.type = 'time'\n","import { useMemo } from 'react'\nimport { useTheme } from '../../../theming/context'\n\nexport const useAxisTheme = () => {\n    const theme = useTheme()\n    const nivoTheme = useMemo(() => {\n        return {\n            ...theme.nivo,\n            axis: {\n                ...theme.nivo.axis,\n                domain: {\n                    ...theme.nivo.axis.domain,\n                    line: {\n                        ...theme.nivo.axis.domain.line,\n                        strokeWidth: 1,\n                    },\n                },\n                legend: {\n                    ...theme.nivo.axis.legend,\n                    text: {\n                        ...theme.nivo.axis.legend.text,\n                        fill: theme.colors.accent,\n                    },\n                },\n            },\n        }\n    }, [theme])\n\n    return nivoTheme\n}\n","import React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axes } from '@nivo/axes'\nimport { linearXScale, linearYScale } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst AxesPosition = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"position\">Axis position</h2>\n                <p>\n                    Axis position is determined by the property you use{' '}\n                    <strong>(top|right|bottom|left)Axis</strong>.\n                </p>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <div className=\"guide__illustrations\">\n                    <svg role=\"img\" width={380} height={260}>\n                        <g transform=\"translate(50,50)\">\n                            <ThemeProvider theme={theme}>\n                                <MotionConfigProvider animate={false}>\n                                    <Axes\n                                        xScale={linearXScale}\n                                        yScale={linearYScale}\n                                        width={280}\n                                        height={160}\n                                        animate={false}\n                                        motionStiffness={0}\n                                        motionDamping={0}\n                                        top={{\n                                            legend: 'axisTop',\n                                            legendPosition: 'middle',\n                                            legendOffset: -32,\n                                        }}\n                                        right={{\n                                            legend: 'axisRight',\n                                            legendPosition: 'middle',\n                                            legendOffset: 42,\n                                        }}\n                                        bottom={{\n                                            legend: 'axisBottom',\n                                            legendPosition: 'middle',\n                                            legendOffset: 38,\n                                        }}\n                                        left={{\n                                            legend: 'axisLeft',\n                                            legendPosition: 'middle',\n                                            legendOffset: -36,\n                                        }}\n                                    />\n                                </MotionConfigProvider>\n                            </ThemeProvider>\n                        </g>\n                    </svg>\n                </div>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesPosition\n","import React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { linearXScale, pointXScale, timeXScale, timeXScaleHours } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst AxesTicks = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"ticks\">Axis ticks</h2>\n                <p>\n                    Axes are composed of <strong>ticks</strong>, you can control the way they are\n                    computed and their aspect. By default, computing which ticks are displayed is\n                    managed by the corresponding{' '}\n                    <a\n                        href=\"https://github.com/d3/d3-scale\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        d3 scale\n                    </a>\n                    .\n                </p>\n                <h3 id=\"ticks-values\">Ticks values</h3>\n                <p>\n                    You can use the <code>tickValues</code> property in order to customize the\n                    displayed ticks, it accepts several forms:\n                </p>\n                <ul>\n                    <li>\n                        an array of values, which should be numbers for a linear scale, values being\n                        part of the dataset for point scales, or dates for time scales.\n                    </li>\n                    <li>\n                        a number which define the number of ticks to display,{' '}\n                        <strong>doesn't work with point scale</strong>, also note that when using\n                        this form{' '}\n                        <strong>\n                            it's not guaranteed that you'll have exactly the number of ticks you\n                            asked for\n                        </strong>{' '}\n                        as d3 will make an educated guess to define them.\n                    </li>\n                    <li>\n                        a time interval, for example <code>every day</code> or{' '}\n                        <code>every 15 minutes</code>,{' '}\n                        <strong>only works when using time scales</strong>.\n                    </li>\n                </ul>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <ThemeProvider theme={theme}>\n                    <MotionConfigProvider animate={false}>\n                        <div\n                            className=\"guide__illustrations\"\n                            style={{ justifyContent: 'center', alignItems: 'center' }}\n                        >\n                            <svg role=\"img\" width={380} height={191}>\n                                <g transform={`translate(50,50)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={pointXScale}\n                                        tickValues={['A', 'C', 'E', 'G', 'I']}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"point scale ['A', 'C', 'E', 'G', 'I']\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,120)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={linearXScale}\n                                        tickValues={[0, 20, 40, 60, 80]}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"linear scale [0, 20, 40, 60, 80]\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,190)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScale}\n                                        tickValues={[\n                                            new Date(2019, 0, 1, 0, 0, 0, 0),\n                                            new Date(2019, 6, 1, 0, 0, 0, 0),\n                                            new Date(2020, 0, 1, 0, 0, 0, 0),\n                                        ]}\n                                        length={280}\n                                        theme={theme}\n                                        format=\"%Y/%m\"\n                                        animate={false}\n                                        legend=\"time scale with three dates\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                            </svg>\n                            <svg role=\"img\" width={380} height={191}>\n                                <g transform={`translate(50,50)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScaleHours}\n                                        tickValues=\"every 15 minutes\"\n                                        format=\"%H:%M\"\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"time scale, every 15 minutes\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,120)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={linearXScale}\n                                        tickValues={5}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"linear scale, tickValues: 5\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,190)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScale}\n                                        tickValues={5}\n                                        length={280}\n                                        theme={theme}\n                                        format=\"%Y/%m\"\n                                        animate={false}\n                                        legend=\"time scale, tickValues: 5\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                            </svg>\n                        </div>\n                    </MotionConfigProvider>\n                </ThemeProvider>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesTicks\n","import React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { linearXScale, linearYScale } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst axisPositions = ['start', 'middle', 'end']\n\nconst AxesLegend = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"legend\">Axis legend</h2>\n                <p>\n                    You can optionally add a legend to an axis by setting the value of the{' '}\n                    <code>legend</code> property.\n                </p>\n                <h3 id=\"legend-position\">Legend position</h3>\n                <p>\n                    Legend position is controlled by two properties, <code>legendPosition</code> and{' '}\n                    <code>legendOffset</code>.<code>legendPosition</code> must be one of:{' '}\n                    <code>start</code>, <code>middle</code> or <code>end</code>,{' '}\n                    <code>legendOffset</code> will affect y position for <strong>top</strong> and{' '}\n                    <strong>bottom</strong> axes and x position for <strong>left</strong> and{' '}\n                    <strong>right</strong> axes.\n                </p>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <ThemeProvider theme={theme}>\n                    <MotionConfigProvider animate={false}>\n                        <div\n                            className=\"guide__illustrations\"\n                            style={{ justifyContent: 'center', alignItems: 'center' }}\n                        >\n                            <svg role=\"img\" width={380} height={180}>\n                                {axisPositions.map((position, i) => (\n                                    <g key={position} transform={`translate(50,${i * 70 + 40})`}>\n                                        <Axis\n                                            axis=\"x\"\n                                            scale={linearXScale}\n                                            length={280}\n                                            animate={false}\n                                            motionStiffness={0}\n                                            motionDamping={0}\n                                            legend={position}\n                                            legendPosition={position}\n                                            legendOffset={-32}\n                                            ticksPosition=\"before\"\n                                        />\n                                    </g>\n                                ))}\n                            </svg>\n                            <svg role=\"img\" width={260} height={260}>\n                                {axisPositions.map((position, i) => (\n                                    <g key={position} transform={`translate(${i * 90 + 50},50)`}>\n                                        <Axis\n                                            axis=\"y\"\n                                            scale={linearYScale}\n                                            length={160}\n                                            animate={false}\n                                            motionStiffness={0}\n                                            motionDamping={0}\n                                            legend={position}\n                                            legendPosition={position}\n                                            legendOffset={-32}\n                                            ticksPosition=\"before\"\n                                        />\n                                    </g>\n                                ))}\n                            </svg>\n                        </div>\n                    </MotionConfigProvider>\n                </ThemeProvider>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesLegend\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport { Seo } from '../../components/Seo'\nimport PageContent from '../../components/PageContent'\nimport AxesPosition from '../../components/guides/axes/AxesPosition'\nimport AxesTicks from '../../components/guides/axes/AxesTicks'\nimport AxesLegend from '../../components/guides/axes/AxesLegend'\nimport { DescriptionBlock } from '../../components/styled'\n\nexport default class Axes extends Component {\n    render() {\n        return (\n            <Layout>\n                <Seo title=\"Axes Guide\" />\n                <PageContent>\n                    <div className=\"guide__header\">\n                        <h1>Axes</h1>\n                    </div>\n                </PageContent>\n                <DescriptionBlock>\n                    <h2>Using axes in nivo components</h2>\n                    <p>\n                        Axes are built on top of{' '}\n                        <a\n                            href=\"https://github.com/d3/d3-scale\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            d3 scales\n                        </a>\n                        . A lot of nivo components make use of it (<Link to=\"/bar\">Bar</Link>,{' '}\n                        <Link to=\"/line\">Line</Link>, <Link to=\"/scatterplot\">ScatterPlot</Link>\n                        …).\n                    </p>\n                </DescriptionBlock>\n                <AxesPosition />\n                <AxesTicks />\n                <AxesLegend />\n            </Layout>\n        )\n    }\n}\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n"],"names":["durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","arguments","length","floor","ceil","round","d0","d1","offset","step","Math","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","d","styled","media","FullWidthBanner","theme","colors","cardBackground","DescriptionBlock","Card","cardShadow","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","source","forEach","getOwnPropertyDescriptors","defineProperties","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","x","y","ticks","getFormatter","formatter","timeFormat","d3Format","computeGridLines","width","height","_values","isArray","Array","lines","x1","x2","y1","y2","AxisTick","_value","format","onClick","textAnchor","animatedProps","useTheme","props","useMemo","style","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","tick","initial","textTransform","from","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","ctx","Number","degreesToRadians","String","renderAxesToCanvas","renderGridLinesToCanvas","linearXScale","scaleLinear","domain","type","linearYScale","pointXScale","scalePoint","timeXScale","scaleTime","timeXScaleHours","UTC","useAxisTheme","nivo","strokeWidth","fill","accent","id","className","role","motionStiffness","motionDamping","href","rel","justifyContent","alignItems","axisPositions","map","render","Layout","Seo","title","PageContent","Link","to","Component","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","module","exports","array","iteratee","comparator","index","includes","isCommon","result","seen","set","outer","computed","seenIndex","Set","noop","baseUniq"],"sourceRoot":""}