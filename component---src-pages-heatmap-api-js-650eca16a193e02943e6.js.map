{"version":3,"sources":["webpack:///./src/pages/heatmap/api.js","webpack:///./src/data/components/heatmap/generator.js","webpack:///./src/data/components/heatmap/mapper.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/props.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/hooks.js","webpack:///../src/HeatMapCells.js","webpack:///../src/HeatMapCellRect.js","webpack:///../src/HeatMapCellCircle.js","webpack:///../src/HeatMapCellTooltip.js","webpack:///../src/HeatMap.js","webpack:///../src/canvas.js","webpack:///../src/HeatMapCanvas.js","webpack:///../src/ResponsiveHeatMap.js","webpack:///../src/ResponsiveHeatMapCanvas.js","webpack:///./src/data/components/heatmap/props.js","webpack:///./src/components/components/api-client/ApiPreview.js","webpack:///./src/components/components/api-client/ApiTabs.js","webpack:///./src/components/components/api-client/ApiSubmit.js","webpack:///./src/components/components/api-client/ApiResponse.js","webpack:///./src/components/components/api-client/ApiClient.js","webpack:///../src/compute.js","webpack:///../src/components/AxisTick.js","webpack:///../src/components/Axis.js","webpack:///../src/components/Axes.js","webpack:///../src/components/GridLine.js","webpack:///../src/components/GridLines.js","webpack:///../src/components/Grid.js","webpack:///../src/utils.js"],"names":["data","generateLightDataSet","HeatMapApi","title","keywords","meta","HeatMap","tags","componentName","chartClass","apiPath","flavors","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","width","height","JSON","stringify","keys","indexBy","margin","top","right","bottom","left","minValue","maxValue","forceSquare","sizeVariation","padding","colors","axisTop","enable","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","axisRight","legendPosition","axisBottom","axisLeft","enableGridX","enableGridY","cellShape","cellOpacity","cellBorderWidth","cellBorderColor","from","modifiers","enableLabels","labelTextColor","dishes","generateCountriesData","slice","size","min","max","generateHeavyDataSet","CustomCell","value","x","y","color","opacity","borderWidth","borderColor","textColor","transform","fill","fillOpacity","strokeWidth","stroke","d","Math","round","alignmentBaseline","textAnchor","style","dy","settingsMapper","mapAxis","exclude","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","PropTypes","inheritedColorPropType","quantizeColorScalePropType","nanColor","isInteractive","onClick","hoverTarget","cellHoverOpacity","cellHoverOthersOpacity","tooltipFormat","tooltip","pixelRatio","isRequired","role","HeatMapDefaultProps","global","HeatMapSvgDefaultProps","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","prototype","toString","call","constructor","name","test","_toConsumableArray","isArray","arrayWithoutHoles","iter","Symbol","iterator","iterableToArray","unsupportedIterableToArray","TypeError","nonIterableSpread","_slicedToArray","arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","nonIterableRest","isHoverTargetByType","cell","current","row","column","rowColumn","useHeatMap","_minValue","_maxValue","useState","currentCellId","setCurrentCellId","getIndex","useMemo","getAccessorFor","indices","layoutConfig","columns","rows","cellWidth","cellHeight","offsetX","offsetY","cellSize","scales","scaleOrdinal","computeX","computeY","values","allValues","acc","sizeScale","scaleLinear","colorScale","guessQuantizeColorScale","theme","useTheme","getCellBorderColor","useInheritedColor","getLabelTextColor","cells","xScale","yScale","datum","index","sizeMultiplier","id","xKey","yKey","isNaN","computeCells","cellsWithCurrent","isHoverTarget","currentCell","HeatMapCells","cellComponent","handleCellHover","handleCellLeave","enableLabel","onHover","event","onLeave","memo","useMotionConfig","animate","springConfig","animatedProps","useSpring","xOffset","yOffset","config","immediate","cursor","onMouseEnter","onMouseMove","onMouseLeave","strokeOpacity","dominantBaseline","radius","r","format","enableChip","renderContent","WrappedHeatMap","withContainer","partialMargin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","useTooltip","showTooltipFromEvent","hideTooltip","useCallback","renderRect","ctx","renderCircle","WrappedHeatMapCanvas","canvasEl","useRef","useEffect","renderAxesToCanvas","renderCell","handleMouseHover","getRelativeCursor","c","isCursorInRect","handleMouseLeave","handleClick","ref","ResponsiveHeatMap","props","ResponsiveHeatMapCanvas","group","help","type","required","description","defaultValue","defaults","controlType","controlOptions","disabledValue","step","unit","enableControlForFlavors","themeProperty","choices","map","label","axesProperties","motionProperties","groupProperties","Link","styled","a","Image","img","EmptyContainer","div","textLight","ApiPreview","responseStatus","chartUrl","href","rel","src","alt","tabs","ApiTabs","body","isLoading","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","tab","isCurrent","icon","iconColors","NavItem","Icon","Content","CodeBlock","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","tablet","mobile","nav","background","span","text","LoaderContainer","loaderBarAnimation","keyframes","LoaderBar","accent","Loader","Button","ApiSubmit","render","this","loading","Component","Container","Header","borderLight","ResponseJson","pre","ApiResponse","response","responseContent","ApiClient","handleSettingsUpdate","settings","setState","handleDataUpdate","e","state","assign","handleSubmit","fetch","nivoApiUrl","method","headers","Accept","then","res","status","json","catch","console","error","component","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","ComponentFlavorSelector","ComponentDescription","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","onChange","cardAltBackground","centerScale","scale","bandwidth","offset","timeByType","millisecond","second","minute","hour","day","week","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month","year","timeTypes","timeIntervalRegexp","RegExp","isInteger","isFinite","getScaleTicks","spec","matches","timeType","Number","computeCartesianTicks","axis","ticksPosition","tickValues","engine","textProps","textPropsByEngine","position","line","lineX","lineY","textX","textY","textAlign","textBaseline","translate","ticks","getFormatter","f","timeFormat","Date","d3Format","computeGridLines","_values","lineValues","lineCount","lines","v","x1","x2","y1","y2","axisPropTypes","renderTick","ariaHidden","bool","axisPropType","AxisTick","_value","gStyle","rotate","Axis","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transitions","useTransition","tick","initial","textTransform","enter","update","leave","aria-hidden","item","transitionProps","tickIndex","positions","axes","isXAxis","GridLine","xValues","yValues","xLines","yLines","degreesToRadians","degrees","renderAxisToCanvas","renderGridLinesToCanvas"],"mappings":"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","file":"component---src-pages-heatmap-api-js-650eca16a193e02943e6.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport SEO from '../../components/seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/heatmap/props'\nimport mapper from '../../data/components/heatmap/mapper'\nimport { generateLightDataSet } from '../../data/components/heatmap/generator'\nimport meta from '../../data/components/heatmap/meta.yml'\n\nconst data = generateLightDataSet()\n\nconst HeatMapApi = () => {\n    return (\n        <>\n            <SEO title=\"HeatMap HTTP API\" keywords={[...meta.HeatMap.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"HeatMap\"\n                chartClass=\"heatmap\"\n                apiPath=\"/charts/heatmap\"\n                flavors={meta.flavors}\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 800,\n                    height: 600,\n                    data: JSON.stringify(data.data, null, '  '),\n                    keys: data.keys,\n                    indexBy: 'country',\n\n                    margin: {\n                        top: 100,\n                        right: 60,\n                        bottom: 30,\n                        left: 60,\n                    },\n\n                    minValue: 'auto',\n                    maxValue: 'auto',\n                    forceSquare: true,\n                    sizeVariation: 0.4,\n                    padding: 2,\n                    colors: 'nivo',\n\n                    axisTop: {\n                        enable: true,\n                        orient: 'top',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: -55,\n                        legend: '',\n                        legendOffset: 36,\n                    },\n                    axisRight: {\n                        enable: false,\n                        orient: 'right',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: 0,\n                    },\n                    axisBottom: {\n                        enable: false,\n                        orient: 'bottom',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: 36,\n                    },\n                    axisLeft: {\n                        enable: true,\n                        orient: 'left',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: -40,\n                    },\n\n                    enableGridX: false,\n                    enableGridY: true,\n\n                    cellShape: 'circle',\n                    cellOpacity: 1,\n                    cellBorderWidth: 0,\n                    cellBorderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.4]],\n                    },\n\n                    enableLabels: true,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1.4]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default HeatMapApi\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { generateCountriesData } from '@nivo/generators'\n\nconst dishes = [\n    'hot dog',\n    'burger',\n    'sandwich',\n    'kebab',\n    'fries',\n    'donut',\n    'junk',\n    'sushi',\n    'ramen',\n    'curry',\n    'udon',\n    'bagel',\n    'yakitori',\n    'takoyaki',\n    'tacos',\n    'miso soup',\n    'tortilla',\n    'tapas',\n    'chipirones',\n    'gazpacho',\n    'soba',\n    'bavette',\n    'steak',\n    'pizza',\n    'spaghetti',\n    'ravioli',\n    'salad',\n    'pad thai',\n    'bun',\n    'waffle',\n    'crepe',\n    'churros',\n    'paella',\n    'empanadas',\n    'bruschetta',\n    'onion soup',\n    'cassoulet',\n    'bouillabaisse',\n    'unagi',\n    'tempura',\n    'tonkatsu',\n    'shabu-shabu',\n    'twinkies',\n    'jerky',\n    'fajitas',\n    'jambalaya',\n    'meatloaf',\n    `mac n' cheese`,\n    'baked beans',\n    'popcorn',\n    'buffalo wings',\n    'BBQ ribs',\n    'apple pie',\n    'nachos',\n    'risotto',\n    'tiramisu',\n]\n\nexport const generateLightDataSet = () => ({\n    data: generateCountriesData(dishes.slice(0, 11), { size: 9, min: 0, max: 100 }),\n    keys: dishes.slice(0, 11),\n})\n\nexport const generateHeavyDataSet = () => ({\n    data: generateCountriesData(dishes, { size: 22, min: 0, max: 100 }),\n    keys: dishes,\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { settingsMapper, mapAxis } from '../../../lib/settings'\n\nconst CustomCell = ({\n    value,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    textColor,\n}) => (\n    <g transform={`translate(${x}, ${y})`}>\n        <path\n            transform={`rotate(${value < 50 ? 180 : 0})`}\n            fill={color}\n            fillOpacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            d={`\n                M0 -${Math.round(height / 2)}\n                L${Math.round(width / 2)} ${Math.round(height / 2)}\n                L-${Math.round(width / 2)} ${Math.round(height / 2)}\n                L0 -${Math.round(height / 2)}\n            `}\n        />\n        <text\n            alignmentBaseline=\"central\"\n            textAnchor=\"middle\"\n            style={{ fill: textColor }}\n            dy={value < 50 ? -6 : 6}\n        >\n            {value}\n        </text>\n    </g>\n)\n\nexport default settingsMapper(\n    {\n        cellShape: value => {\n            if (value === `Custom(props) => (…)`) return CustomCell\n            return value\n        },\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useMemo } from 'react'\nimport { scaleOrdinal, scaleLinear } from 'd3-scale'\nimport { useTheme, getAccessorFor, guessQuantizeColorScale } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\n\nconst computeX = (column, cellWidth, padding) => {\n    return column * cellWidth + cellWidth * 0.5 + padding * column + padding\n}\nconst computeY = (row, cellHeight, padding) => {\n    return row * cellHeight + cellHeight * 0.5 + padding * row + padding\n}\n\nconst isHoverTargetByType = {\n    cell: (cell, current) => cell.xKey === current.xKey && cell.yKey === current.yKey,\n    row: (cell, current) => cell.yKey === current.yKey,\n    column: (cell, current) => cell.xKey === current.xKey,\n    rowColumn: (cell, current) => cell.xKey === current.xKey || cell.yKey === current.yKey,\n}\n\nconst computeCells = ({\n    data,\n    keys,\n    getIndex,\n    xScale,\n    yScale,\n    sizeScale,\n    cellOpacity,\n    cellWidth,\n    cellHeight,\n    colorScale,\n    nanColor,\n    getLabelTextColor,\n}) => {\n    const cells = []\n    data.forEach(datum => {\n        keys.forEach(key => {\n            const value = datum[key]\n            const index = getIndex(datum)\n            const sizeMultiplier = sizeScale ? sizeScale(value) : 1\n            const width = sizeMultiplier * cellWidth\n            const height = sizeMultiplier * cellHeight\n\n            const cell = {\n                id: `${key}.${index}`,\n                xKey: key,\n                yKey: index,\n                x: xScale(key),\n                y: yScale(index),\n                width,\n                height,\n                value,\n                color: isNaN(value) ? nanColor : colorScale(value),\n                opacity: cellOpacity,\n            }\n            cell.labelTextColor = getLabelTextColor(cell)\n\n            cells.push(cell)\n        })\n    })\n\n    return cells\n}\n\nexport const useHeatMap = ({\n    data,\n    keys,\n    indexBy,\n    minValue: _minValue = 'auto',\n    maxValue: _maxValue = 'auto',\n    width,\n    height,\n    padding,\n    forceSquare,\n    sizeVariation,\n    colors,\n    nanColor,\n    cellOpacity,\n    cellBorderColor,\n    labelTextColor,\n    hoverTarget,\n    cellHoverOpacity,\n    cellHoverOthersOpacity,\n}) => {\n    const [currentCellId, setCurrentCellId] = useState(null)\n\n    const getIndex = useMemo(() => getAccessorFor(indexBy), [indexBy])\n    const indices = useMemo(() => data.map(getIndex), [data, getIndex])\n\n    const layoutConfig = useMemo(() => {\n        const columns = keys.length\n        const rows = data.length\n\n        let cellWidth = Math.max((width - padding * (columns + 1)) / columns, 0)\n        let cellHeight = Math.max((height - padding * (rows + 1)) / rows, 0)\n\n        let offsetX = 0\n        let offsetY = 0\n        if (forceSquare === true) {\n            const cellSize = Math.min(cellWidth, cellHeight)\n            cellWidth = cellSize\n            cellHeight = cellSize\n\n            offsetX = (width - ((cellWidth + padding) * columns + padding)) / 2\n            offsetY = (height - ((cellHeight + padding) * rows + padding)) / 2\n        }\n\n        return {\n            cellWidth,\n            cellHeight,\n            offsetX,\n            offsetY,\n        }\n    }, [data, keys, width, height, padding, forceSquare])\n\n    const scales = useMemo(() => {\n        return {\n            x: scaleOrdinal(\n                keys.map((key, i) => computeX(i, layoutConfig.cellWidth, padding))\n            ).domain(keys),\n            y: scaleOrdinal(\n                indices.map((d, i) => computeY(i, layoutConfig.cellHeight, padding))\n            ).domain(indices),\n        }\n    }, [indices, keys, layoutConfig, padding])\n\n    const values = useMemo(() => {\n        let minValue = _minValue\n        let maxValue = _maxValue\n        if (minValue === 'auto' || maxValue === 'auto') {\n            const allValues = data.reduce((acc, row) => acc.concat(keys.map(key => row[key])), [])\n\n            if (minValue === 'auto') minValue = Math.min(...allValues)\n            if (maxValue === 'auto') maxValue = Math.max(...allValues)\n        }\n\n        return {\n            min: Math.min(minValue, maxValue),\n            max: Math.max(maxValue, minValue),\n        }\n    }, [data, keys, _minValue, _maxValue])\n\n    const sizeScale = useMemo(() => {\n        if (sizeVariation > 0) {\n            return scaleLinear()\n                .range([1 - sizeVariation, 1])\n                .domain([values.min, values.max])\n        }\n    }, [sizeVariation, values])\n\n    const colorScale = useMemo(\n        () => guessQuantizeColorScale(colors).domain([values.min, values.max]),\n        [colors, values]\n    )\n    const theme = useTheme()\n    const getCellBorderColor = useInheritedColor(cellBorderColor, theme)\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n\n    const cells = useMemo(\n        () =>\n            computeCells({\n                data,\n                keys,\n                getIndex,\n                xScale: scales.x,\n                yScale: scales.y,\n                sizeScale,\n                cellOpacity,\n                cellWidth: layoutConfig.cellWidth,\n                cellHeight: layoutConfig.cellHeight,\n                colorScale,\n                nanColor,\n                getLabelTextColor,\n            }),\n        [\n            data,\n            keys,\n            getIndex,\n            scales,\n            sizeScale,\n            cellOpacity,\n            layoutConfig,\n            colorScale,\n            nanColor,\n            getLabelTextColor,\n        ]\n    )\n\n    const cellsWithCurrent = useMemo(() => {\n        if (currentCellId === null) return cells\n\n        const isHoverTarget = isHoverTargetByType[hoverTarget]\n        const currentCell = cells.find(cell => cell.id === currentCellId)\n\n        return cells.map(cell => {\n            const opacity = isHoverTarget(cell, currentCell)\n                ? cellHoverOpacity\n                : cellHoverOthersOpacity\n\n            if (opacity === cell.opacity) return cell\n\n            return {\n                ...cell,\n                opacity,\n            }\n        })\n    }, [cells, currentCellId, hoverTarget, cellHoverOpacity, cellHoverOthersOpacity])\n\n    return {\n        cells: cellsWithCurrent,\n        getIndex,\n        xScale: scales.x,\n        yScale: scales.y,\n        ...layoutConfig,\n        sizeScale,\n        setCurrentCellId,\n        colorScale,\n        getCellBorderColor,\n        getLabelTextColor,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\n\nconst HeatMapCells = ({\n    cells,\n    cellComponent,\n    cellBorderWidth,\n    getCellBorderColor,\n    enableLabels,\n    getLabelTextColor,\n    handleCellHover,\n    handleCellLeave,\n    onClick,\n}) => {\n    return cells.map(cell =>\n        React.createElement(cellComponent, {\n            key: cell.id,\n            data: cell,\n            value: cell.value,\n            x: cell.x,\n            y: cell.y,\n            width: cell.width,\n            height: cell.height,\n            color: cell.color,\n            opacity: cell.opacity,\n            borderWidth: cellBorderWidth,\n            borderColor: getCellBorderColor(cell),\n            enableLabel: enableLabels,\n            textColor: getLabelTextColor(cell),\n            onHover: handleCellHover ? event => handleCellHover(cell, event) : undefined,\n            onLeave: handleCellLeave,\n            onClick,\n        })\n    )\n}\n\nHeatMapCells.propTypes = {}\n\nexport default HeatMapCells\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nconst HeatMapCellRect = ({\n    data,\n    value,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    textColor,\n    onHover,\n    onLeave,\n    onClick,\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x}, ${y})`,\n        width,\n        height,\n        xOffset: width * -0.5,\n        yOffset: height * -0.5,\n        color,\n        opacity,\n        textColor,\n        borderWidth,\n        borderColor,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            style={{ cursor: 'pointer' }}\n            onMouseEnter={onHover}\n            onMouseMove={onHover}\n            onMouseLeave={onLeave}\n            onClick={onClick ? event => onClick(data, event) : undefined}\n        >\n            <animated.rect\n                x={animatedProps.xOffset}\n                y={animatedProps.yOffset}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                fill={animatedProps.color}\n                fillOpacity={animatedProps.opacity}\n                strokeWidth={animatedProps.borderWidth}\n                stroke={animatedProps.borderColor}\n                strokeOpacity={animatedProps.opacity}\n            />\n            {enableLabel && (\n                <animated.text\n                    dominantBaseline=\"central\"\n                    textAnchor=\"middle\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: animatedProps.textColor,\n                    }}\n                    fillOpacity={animatedProps.opacity}\n                >\n                    {value}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n\nHeatMapCellRect.propTypes = {\n    data: PropTypes.object.isRequired,\n    value: PropTypes.number.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    textColor: PropTypes.string.isRequired,\n    onHover: PropTypes.func,\n    onLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default memo(HeatMapCellRect)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\n\nconst HeatMapCellCircle = ({\n    data,\n    value,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    textColor,\n    onHover,\n    onLeave,\n    onClick,\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x}, ${y})`,\n        radius: Math.min(width, height) / 2,\n        color,\n        opacity,\n        textColor,\n        borderWidth,\n        borderColor,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            style={{ cursor: 'pointer' }}\n            onMouseEnter={onHover}\n            onMouseMove={onHover}\n            onMouseLeave={onLeave}\n            onClick={onClick ? event => onClick(data, event) : undefined}\n        >\n            <animated.circle\n                r={animatedProps.radius}\n                fill={animatedProps.color}\n                fillOpacity={animatedProps.opacity}\n                strokeWidth={animatedProps.borderWidth}\n                stroke={animatedProps.borderColor}\n                strokeOpacity={animatedProps.opacity}\n            />\n            {enableLabel && (\n                <animated.text\n                    dominantBaseline=\"central\"\n                    textAnchor=\"middle\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: animatedProps.textColor,\n                    }}\n                    fillOpacity={animatedProps.opacity}\n                >\n                    {value}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n\nHeatMapCellCircle.propTypes = {\n    data: PropTypes.object.isRequired,\n    value: PropTypes.number.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    textColor: PropTypes.string.isRequired,\n    onHover: PropTypes.func,\n    onLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default memo(HeatMapCellCircle)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst HeatMapCellTooltip = ({ cell, format, tooltip }) => (\n    <BasicTooltip\n        id={`${cell.yKey} - ${cell.xKey}`}\n        value={cell.value}\n        enableChip={true}\n        color={cell.color}\n        format={format}\n        renderContent={typeof tooltip === 'function' ? tooltip.bind(null, { ...cell }) : null}\n    />\n)\n\nHeatMapCellTooltip.propTypes = {\n    cell: PropTypes.shape({\n        xKey: PropTypes.string.isRequired,\n        yKey: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(HeatMapCellTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions } from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { useTooltip } from '@nivo/tooltip'\nimport { HeatMapSvgPropTypes, HeatMapSvgDefaultProps } from './props'\nimport { useHeatMap } from './hooks'\nimport HeatMapCells from './HeatMapCells'\nimport HeatMapCellRect from './HeatMapCellRect'\nimport HeatMapCellCircle from './HeatMapCellCircle'\nimport HeatMapCellTooltip from './HeatMapCellTooltip'\n\nconst HeatMap = ({\n    data,\n    keys,\n    indexBy,\n    minValue,\n    maxValue,\n    width,\n    height,\n    margin: partialMargin,\n    forceSquare,\n    padding,\n    sizeVariation,\n    cellShape,\n    cellOpacity,\n    cellBorderWidth,\n    cellBorderColor,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n    enableGridX,\n    enableGridY,\n    enableLabels,\n    labelTextColor,\n    colors,\n    nanColor,\n    isInteractive,\n    onClick,\n    hoverTarget,\n    cellHoverOpacity,\n    cellHoverOthersOpacity,\n    tooltipFormat,\n    tooltip,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        cells,\n        xScale,\n        yScale,\n        offsetX,\n        offsetY,\n        setCurrentCellId,\n        getCellBorderColor,\n        getLabelTextColor,\n    } = useHeatMap({\n        data,\n        keys,\n        indexBy,\n        minValue,\n        maxValue,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        forceSquare,\n        sizeVariation,\n        colors,\n        nanColor,\n        cellOpacity,\n        cellBorderColor,\n        labelTextColor,\n        hoverTarget,\n        cellHoverOpacity,\n        cellHoverOthersOpacity,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleCellHover = useCallback(\n        (cell, event) => {\n            setCurrentCellId(cell.id)\n            showTooltipFromEvent(\n                <HeatMapCellTooltip cell={cell} format={tooltipFormat} tooltip={tooltip} />,\n                event\n            )\n        },\n        [setCurrentCellId, showTooltipFromEvent, tooltipFormat, tooltip]\n    )\n\n    const handleCellLeave = useCallback(() => {\n        setCurrentCellId(null)\n        hideTooltip()\n    }, [setCurrentCellId, hideTooltip])\n\n    let cellComponent\n    if (cellShape === 'rect') {\n        cellComponent = HeatMapCellRect\n    } else if (cellShape === 'circle') {\n        cellComponent = HeatMapCellCircle\n    } else {\n        cellComponent = cellShape\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={Object.assign({}, margin, {\n                top: margin.top + offsetY,\n                left: margin.left + offsetX,\n            })}\n            role={role}\n        >\n            <Grid\n                width={innerWidth - offsetX * 2}\n                height={innerHeight - offsetY * 2}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n            />\n            <Axes\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth - offsetX * 2}\n                height={innerHeight - offsetY * 2}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n            <HeatMapCells\n                cells={cells}\n                cellComponent={cellComponent}\n                cellBorderWidth={cellBorderWidth}\n                getCellBorderColor={getCellBorderColor}\n                enableLabels={enableLabels}\n                getLabelTextColor={getLabelTextColor}\n                handleCellHover={isInteractive ? handleCellHover : undefined}\n                handleCellLeave={isInteractive ? handleCellLeave : undefined}\n                onClick={isInteractive ? onClick : undefined}\n            />\n        </SvgWrapper>\n    )\n}\n\nHeatMap.propTypes = HeatMapSvgPropTypes\n\nconst WrappedHeatMap = withContainer(HeatMap)\nWrappedHeatMap.defaultProps = HeatMapSvgDefaultProps\n\nexport default WrappedHeatMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { degreesToRadians } from './utils'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\n\nexport const renderAxisToCanvas = (\n    ctx,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontSize}px ${theme.axis.ticks.text.fontFamily}`\n\n    if (theme.axis.domain.line.strokeWidth > 0) {\n        ctx.lineWidth = theme.axis.domain.line.strokeWidth\n        ctx.lineCap = 'square'\n        ctx.strokeStyle = theme.axis.domain.line.stroke\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    ticks.forEach(tick => {\n        if (theme.axis.ticks.line.strokeWidth > 0) {\n            ctx.lineWidth = theme.axis.ticks.line.strokeWidth\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.axis.ticks.line.stroke\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format !== undefined ? format(tick.value) : tick.value\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n        ctx.fillStyle = theme.axis.ticks.text.fill\n        ctx.fillText(value, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n        ctx.fillStyle = theme.axis.legend.text.fill\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nexport const renderAxesToCanvas = (\n    ctx,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = (ctx, { width, height, scale, axis, values }) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useEffect, useRef, useCallback } from 'react'\nimport {\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n    withContainer,\n} from '@nivo/core'\nimport { renderAxesToCanvas } from '@nivo/axes'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useHeatMap } from './hooks'\nimport { HeatMapDefaultProps, HeatMapPropTypes } from './props'\nimport { renderRect, renderCircle } from './canvas'\nimport HeatMapCellTooltip from './HeatMapCellTooltip'\n\nconst HeatMapCanvas = ({\n    data,\n    keys,\n    indexBy,\n    minValue,\n    maxValue,\n    width,\n    height,\n    margin: partialMargin,\n    forceSquare,\n    padding,\n    sizeVariation,\n    cellShape,\n    cellOpacity,\n    cellBorderColor,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n    enableLabels,\n    labelTextColor,\n    colors,\n    nanColor,\n    isInteractive,\n    onClick,\n    hoverTarget,\n    cellHoverOpacity,\n    cellHoverOthersOpacity,\n    tooltipFormat,\n    tooltip,\n    pixelRatio,\n}) => {\n    const canvasEl = useRef(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { cells, xScale, yScale, offsetX, offsetY, currentCellId, setCurrentCellId } = useHeatMap(\n        {\n            data,\n            keys,\n            indexBy,\n            minValue,\n            maxValue,\n            width: innerWidth,\n            height: innerHeight,\n            padding,\n            forceSquare,\n            sizeVariation,\n            colors,\n            nanColor,\n            cellOpacity,\n            cellBorderColor,\n            labelTextColor,\n            hoverTarget,\n            cellHoverOpacity,\n            cellHoverOthersOpacity,\n        }\n    )\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left + offsetX, margin.top + offsetY)\n\n        renderAxesToCanvas(ctx, {\n            xScale,\n            yScale,\n            width: innerWidth - offsetX * 2,\n            height: innerHeight - offsetY * 2,\n            top: axisTop,\n            right: axisRight,\n            bottom: axisBottom,\n            left: axisLeft,\n            theme,\n        })\n\n        ctx.textAlign = 'center'\n        ctx.textBaseline = 'middle'\n\n        let renderCell\n        if (cellShape === 'rect') {\n            renderCell = renderRect\n        } else {\n            renderCell = renderCircle\n        }\n        cells.forEach(cell => {\n            renderCell(ctx, { enableLabels, theme }, cell)\n        })\n    }, [\n        canvasEl,\n        cells,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        offsetX,\n        offsetY,\n        cellShape,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        theme,\n        enableLabels,\n        pixelRatio,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n            const cell = cells.find(c =>\n                isCursorInRect(\n                    c.x + margin.left + offsetX - c.width / 2,\n                    c.y + margin.top + offsetY - c.height / 2,\n                    c.width,\n                    c.height,\n                    x,\n                    y\n                )\n            )\n            if (cell !== undefined) {\n                setCurrentCellId(cell.id)\n                showTooltipFromEvent(\n                    <HeatMapCellTooltip cell={cell} tooltip={tooltip} format={tooltipFormat} />,\n                    event\n                )\n            } else {\n                setCurrentCellId(null)\n                hideTooltip()\n            }\n        },\n        [\n            canvasEl,\n            cells,\n            margin,\n            offsetX,\n            offsetY,\n            setCurrentCellId,\n            showTooltipFromEvent,\n            hideTooltip,\n            tooltip,\n        ]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrentCellId(null)\n        hideTooltip()\n    }, [setCurrentCellId, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            if (currentCellId === null) return\n\n            const currentCell = cells.find(cell => cell.id === currentCellId)\n            currentCell && onClick(currentCell, event)\n        },\n        [cells, currentCellId, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nHeatMapCanvas.propTypes = HeatMapPropTypes\n\nconst WrappedHeatMapCanvas = withContainer(HeatMapCanvas)\nWrappedHeatMapCanvas.defaultProps = HeatMapDefaultProps\n\nexport default WrappedHeatMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport HeatMap from './HeatMap'\n\nconst ResponsiveHeatMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <HeatMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveHeatMap\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport HeatMapCanvas from './HeatMapCanvas'\n\nconst ResponsiveHeatMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <HeatMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveHeatMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { HeatMapDefaultProps as defaults } from '@nivo/heatmap'\nimport {\n    themeProperty,\n    axesProperties,\n    motionProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'indexBy',\n        group: 'Base',\n        help: 'Key to use to index the data.',\n        description: `\n            Key to use to index the data,\n            this key must exist in each data item.\n            You can also provide a function which will\n            receive the data item and must return\n            the desired index\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.indexBy,\n    },\n    {\n        key: 'keys',\n        group: 'Base',\n        help: 'Keys to use to determine each serie.',\n        type: 'string[]',\n        required: false,\n        defaultValue: defaults.keys,\n    },\n    {\n        key: 'minValue',\n        help: 'Minimum value.',\n        description: `\n            Minimum value.\n            If 'auto', will pick the lowest value\n            in the provided data set. Should be overriden\n            if your data set does not contain desired\n            lower bound value.\n        `,\n        required: false,\n        defaultValue: defaults.minValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 0,\n            min: -100,\n            max: 100,\n        },\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value. If 'auto', will pick the highest value\n            in the provided data set. Should be overriden\n            if your data set does not contain desired\n            higher bound value.\n        `,\n        required: false,\n        defaultValue: defaults.maxValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 100,\n            min: -100,\n            max: 100,\n        },\n    },\n    {\n        key: 'forceSquare',\n        help: 'Force square cells (width = height).',\n        required: false,\n        defaultValue: defaults.forceSquare,\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Base',\n    },\n    {\n        key: 'sizeVariation',\n        help: 'Cell size variation.',\n        description: `Size variation (0~1), if value is 0 size won't be affected. If you use for example the value 0.3, cell width/height will vary between 0.7~1 according to its corresponding value.`,\n        required: false,\n        defaultValue: defaults.sizeVariation,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.02,\n        },\n    },\n    {\n        key: 'padding',\n        help: 'Padding.',\n        required: false,\n        defaultValue: defaults.padding,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 36,\n            unit: 'px',\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveHeatMap/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1200,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveHeatMap/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1200,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'cellShape',\n        help: `Cell shape/component.`,\n        description: `\n            Cell shape, can be one of: \\`'rect'\\`, \\`'circle'\\`,\n            if a function is provided, it must return\n            a valid SVG element and will receive\n            the following props:\n            \\`\\`\\`\n            {\n                value:       number,\n                x:           number,\n                y:           number,\n                width:       number,\n                height:      number,\n                color:       string,\n                opacity:     number,\n                borderWidth: number,\n                borderColor: string,\n                textColor:   string,\n            }\n            \\`\\`\\`\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.cellShape,\n        controlType: 'choices',\n        group: 'Style',\n        controlOptions: {\n            choices: ['rect', 'circle', 'Custom(props) => (…)'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: 'nivo',\n        controlType: 'quantizeColors',\n        group: 'Style',\n    },\n    {\n        key: 'cellOpacity',\n        help: 'Cell opacity (0~1).',\n        required: false,\n        defaultValue: defaults.cellOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'cellBorderWidth',\n        help: 'Cell border width.',\n        required: false,\n        defaultValue: defaults.cellBorderWidth,\n        type: 'number',\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'cellBorderColor',\n        help: 'Method to compute cell border color.',\n        description: `\n            how to compute cell border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.cellBorderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'enableLabels',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableLabels,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'labelTextColor',\n        help: 'Method to compute label text color.',\n        description: `\n            how to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.labelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'enableGridX',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    {\n        key: 'enableGridY',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridY,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    ...axesProperties(),\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: '(cell, event) => void',\n        required: false,\n        help: 'onClick handler.',\n        description: `\n            onClick handler, will receive node data\n            as first argument & event as second one.\n            The node data has the following shape:\n            \\`\\`\\`\n            {\n                key:        string,\n                value:      number,\n                x:          number,\n                xKey:       {string|number},\n                y:          number,\n                yKey:       {string|number},\n                width:      number,\n                height:     number,\n                opacity:    number\n            }\n            \\`\\`\\`\n        `,\n    },\n    {\n        key: 'hoverTarget',\n        flavors: ['svg', 'canvas'],\n        help: 'Defines hover behavior.',\n        description: `\n            Defines hover behavior:\n\n            - **cell**: highlight the current cell\n            - **row**: highlight the current cell's row\n            - **column**: highlight the current cell's column\n            - **rowColumn**: highlight the current cell's row & column\n        `,\n        required: false,\n        defaultValue: defaults.hoverTarget,\n        type: 'string',\n        controlType: 'choices',\n        group: 'Interactivity',\n        controlOptions: {\n            choices: ['cell', 'row', 'column', 'rowColumn'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'cellHoverOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Cell opacity on hover.',\n        required: false,\n        defaultValue: defaults.cellHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'cellHoverOthersOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Cell opacity when not hovered.',\n        required: false,\n        defaultValue: defaults.cellHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ApiPreview = ({ responseStatus, chartUrl }) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n\n    return <div className=\"api-client_preview\">{content}</div>\n}\n\nApiPreview.propTypes = {\n    responseStatus: PropTypes.number,\n    chartUrl: PropTypes.string,\n}\n\nexport default ApiPreview\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport ApiPreview from './ApiPreview'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\nimport CodeBlock from '../../CodeBlock'\n\nconst tabs = ['preview', 'body', 'data']\n\nconst ApiTabs = ({ chartClass, data, body, isLoading, responseStatus, chartUrl }) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState('preview')\n    const [hoverTab, setHoverTab] = useState(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview\n                        isLoading={isLoading}\n                        responseStatus={responseStatus}\n                        chartUrl={chartUrl}\n                    />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nApiTabs.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n}\n\nexport default ApiTabs\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.6);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 60%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst LoaderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n\nclass ApiSubmit extends Component {\n    render() {\n        const { loading, onClick } = this.props\n\n        return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n    }\n}\n\nApiSubmit.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nApiSubmit.defaultProps = {}\n\nexport default ApiSubmit\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n\nclass ApiResponse extends Component {\n    render() {\n        const { responseStatus, response } = this.props\n\n        let responseContent = 'no response available'\n        if (response) {\n            responseContent = JSON.stringify(response, null, '  ')\n        }\n\n        return (\n            <Container>\n                <Header>\n                    Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}\n                </Header>\n                <ResponseJson>{responseContent}</ResponseJson>\n            </Container>\n        )\n    }\n}\n\nApiResponse.propTypes = {}\n\nApiResponse.defaultProps = {}\n\nexport default ApiResponse\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport ComponentPage from '../ComponentPage'\nimport ComponentHeader from '../ComponentHeader'\nimport ComponentFlavorSelector from '../ComponentFlavorSelector'\nimport ComponentDescription from '../ComponentDescription'\nimport ComponentSettings from '../ComponentSettings'\nimport ApiTabs from './ApiTabs'\nimport ApiSubmit from './ApiSubmit'\nimport ApiResponse from './ApiResponse'\nimport config from '../../../data/config'\n\nconst description = component => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\nexport default class ApiClient extends Component {\n    static propTypes = {\n        componentName: PropTypes.string.isRequired,\n        chartClass: PropTypes.string.isRequired,\n        apiPath: PropTypes.string.isRequired,\n        dataProperty: PropTypes.string.isRequired,\n        propsMapper: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        dataProperty: 'data',\n        propsMapper: props => props,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            props: props.defaultProps,\n            loading: false,\n            responseStatus: null,\n            response: null,\n        }\n    }\n\n    handleSettingsUpdate = settings => {\n        this.setState({ props: settings })\n    }\n\n    handleDataUpdate = e => {\n        const { dataProperty } = this.props\n        const { props } = this.state\n\n        this.setState({\n            props: Object.assign({}, props, {\n                [dataProperty]: e.target.value,\n            }),\n        })\n    }\n\n    handleSubmit = () => {\n        const { apiPath, propsMapper } = this.props\n        const { props } = this.state\n\n        this.setState({\n            loading: true,\n        })\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    responseStatus: res.status,\n                })\n\n                return res.json()\n            })\n            .then(res => {\n                this.setState({ response: res })\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    render() {\n        const {\n            componentName,\n            chartClass,\n            apiPath,\n            controlGroups,\n            dataProperty,\n            propsMapper,\n            flavors,\n        } = this.props\n        const { props, loading, responseStatus, response } = this.state\n\n        const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n        return (\n            <Layout>\n                <ComponentPage>\n                    <ComponentHeader\n                        chartClass={`${componentName} HTTP API`}\n                        tags={[`POST ${apiPath}`]}\n                    />\n                    {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                    <ComponentDescription description={description(componentName, apiPath)} />\n                    <ApiTabs\n                        chartClass={chartClass}\n                        data={props[dataProperty]}\n                        body={propsMapper(props)}\n                        isLoading={loading}\n                        responseStatus={responseStatus}\n                        chartUrl={response ? response.url : null}\n                    />\n                    <ControlPanel>\n                        <SubmitWrapper>\n                            <ApiSubmit loading={loading} onClick={this.handleSubmit} />\n                        </SubmitWrapper>\n                        <ApiResponse responseStatus={responseStatus} response={response} />\n                    </ControlPanel>\n                    <ComponentSettings\n                        component={componentName}\n                        settings={props}\n                        flavors={flavorKeys}\n                        currentFlavor=\"api\"\n                        groups={controlGroups}\n                        onChange={this.handleSettingsUpdate}\n                    />\n                </ComponentPage>\n            </Layout>\n        )\n    }\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.6);\n    width: var(--partialWidth);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 60%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\nimport { textPropsByEngine } from '@nivo/core'\n\nexport const centerScale = scale => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return d => scale(d) + offset\n}\n\nconst timeByType = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = value =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = (scale, spec) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    // continuous scales\n    if (scale.ticks) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n\n        if (typeof spec === 'string') {\n            // time interval\n            const matches = spec.match(timeIntervalRegexp)\n            if (matches) {\n                // UTC is used as it's more predictible\n                // however local time could be used too\n                // let's see how it fits users' requirements\n                const timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0]\n                if (matches[1] === undefined) {\n                    return scale.ticks(timeType)\n                }\n\n                return scale.ticks(timeType.every(Number(matches[1])))\n            }\n\n            throw new Error(`Invalid tickValues: ${spec}`)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n\nexport const computeCartesianTicks = ({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}) => {\n    const values = getScaleTicks(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    let translate\n    let textAlign = textProps.align.center\n    let textBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d), y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align.right\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align.left\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: value,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = (format, scale) => {\n    if (!format || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const f = timeFormat(format)\n        return d => f(new Date(d))\n    }\n\n    return d3Format(format)\n}\n\nexport const computeGridLines = ({ width, height, scale, axis, values: _values }) => {\n    const lineValues = Array.isArray(_values) ? _values : undefined\n    const lineCount = isInteger(_values) ? _values : undefined\n\n    const values = lineValues || getScaleTicks(scale, lineCount)\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n\n    let lines\n    if (axis === 'x') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: position(v),\n            x2: position(v),\n            y1: 0,\n            y2: height,\n        }))\n    } else if (axis === 'y') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: 0,\n            x2: width,\n            y1: position(v),\n            y2: position(v),\n        }))\n    }\n\n    return lines\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport { animated } from 'react-spring'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\n\nconst AxisTick = ({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}) => {\n    const theme = useTheme()\n\n    let value = _value\n    if (format !== undefined) {\n        value = format(value)\n    }\n\n    let gStyle = { opacity: animatedProps.opacity }\n    if (onClick) {\n        gStyle['cursor'] = 'pointer'\n    }\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            {...(onClick ? { onClick: e => onClick(e, value) } : {})}\n            style={gStyle}\n        >\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nAxisTick.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        .isRequired,\n    format: PropTypes.func,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    lineX: PropTypes.number.isRequired,\n    lineY: PropTypes.number.isRequired,\n    textX: PropTypes.number.isRequired,\n    textY: PropTypes.number.isRequired,\n    textBaseline: PropTypes.string.isRequired,\n    textAnchor: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    rotate: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    animatedProps: PropTypes.object.isRequired,\n}\nAxisTick.defaultProps = {\n    opacity: 1,\n    rotate: 0,\n}\n\nexport default memo(AxisTick)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, useTransition, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { axisPropTypes } from '../props'\nimport AxisTick from './AxisTick'\n\nconst defaultTickRenderer = props => <AxisTick {...props} />\n\nconst Axis = ({\n    axis,\n    scale,\n    x,\n    y,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    format,\n    renderTick,\n    legend,\n    legendPosition,\n    legendOffset,\n    onClick,\n    ariaHidden,\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transitions = useTransition(ticks, tick => tick.key, {\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transitions.map(({ item: tick, props: transitionProps, key }, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                    key,\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nAxis.propTypes = {\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    scale: PropTypes.func.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    length: PropTypes.number.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    tickValues: axisPropTypes.tickValues,\n    tickSize: PropTypes.number.isRequired,\n    tickPadding: PropTypes.number.isRequired,\n    tickRotation: PropTypes.number.isRequired,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func.isRequired,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n    legendOffset: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    ariaHidden: PropTypes.bool,\n}\nAxis.defaultProps = {\n    x: 0,\n    y: 0,\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    renderTick: defaultTickRenderer,\n    legendPosition: 'end',\n    legendOffset: 0,\n}\n\nexport default memo(Axis)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Axis from './Axis'\nimport { axisPropType } from '../props'\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nconst Axes = ({ xScale, yScale, width, height, top, right, bottom, left }) => {\n    const axes = { top, right, bottom, left }\n\n    return positions.map(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n\n        return (\n            <Axis\n                key={position}\n                {...axis}\n                axis={isXAxis ? 'x' : 'y'}\n                x={position === 'right' ? width : 0}\n                y={position === 'bottom' ? height : 0}\n                scale={isXAxis ? xScale : yScale}\n                length={isXAxis ? width : height}\n                ticksPosition={ticksPosition}\n            />\n        )\n    })\n}\n\nAxes.propTypes = {\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    top: axisPropType,\n    right: axisPropType,\n    bottom: axisPropType,\n    left: axisPropType,\n}\n\nexport default memo(Axes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nconst GridLine = ({ animatedProps }) => {\n    const theme = useTheme()\n\n    return <animated.line {...animatedProps} {...theme.grid.line} />\n}\n\nGridLine.propTypes = {\n    x1: PropTypes.number.isRequired,\n    x2: PropTypes.number.isRequired,\n    y1: PropTypes.number.isRequired,\n    y2: PropTypes.number.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n}\nGridLine.defaultProps = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n}\n\nexport default memo(GridLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport GridLine from './GridLine'\n\nconst GridLines = ({ lines }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transitions = useTransition(lines, line => line.key, {\n        initial: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        from: line => ({\n            opacity: 0,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        enter: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        update: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <g>\n            {transitions.map(({ item: line, props: animatedProps, key }) => (\n                <GridLine {...line} key={key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n}\n\nGridLines.propTypes = {\n    type: PropTypes.oneOf(['x', 'y']).isRequired,\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            x1: PropTypes.number,\n            x2: PropTypes.number,\n            y1: PropTypes.number,\n            y2: PropTypes.number,\n        })\n    ).isRequired,\n}\n\nexport default memo(GridLines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport GridLines from './GridLines'\nimport { computeGridLines } from '../compute'\n\nconst Grid = ({ width, height, xScale, yScale, xValues, yValues }) => {\n    const xLines = useMemo(() => {\n        if (!xScale) return false\n\n        return computeGridLines({\n            width,\n            height,\n            scale: xScale,\n            axis: 'x',\n            values: xValues,\n        })\n    }, [xScale, xValues])\n\n    const yLines = yScale\n        ? computeGridLines({\n              width,\n              height,\n              scale: yScale,\n              axis: 'y',\n              values: yValues,\n          })\n        : false\n\n    return (\n        <>\n            {xLines && <GridLines type=\"x\" lines={xLines} />}\n            {yLines && <GridLines type=\"y\" lines={yLines} />}\n        </>\n    )\n}\n\nGrid.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    xValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    yValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n}\n\nexport default memo(Grid)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const degreesToRadians = degrees => (degrees * Math.PI) / 180\n"],"sourceRoot":""}