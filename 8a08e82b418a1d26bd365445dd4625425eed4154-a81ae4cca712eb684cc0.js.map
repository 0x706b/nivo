{"version":3,"file":"8a08e82b418a1d26bd365445dd4625425eed4154-a81ae4cca712eb684cc0.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/./src/data/components/parallel-coordinates/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/props.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://nivo-website/../src/hooks.js","webpack://nivo-website/../src/ParallelCoordinatesLineTooltip.js","webpack://nivo-website/../src/ParallelCoordinatesLine.js","webpack://nivo-website/../src/ParallelCoordinates.js","webpack://nivo-website/../src/ResponsiveParallelCoordinates.js","webpack://nivo-website/../src/ParallelCoordinatesCanvas.js","webpack://nivo-website/../src/ResponsiveParallelCoordinatesCanvas.js","webpack://nivo-website/./src/data/components/parallel-coordinates/mapper.js","webpack://nivo-website/./src/data/components/parallel-coordinates/variables.js","webpack://nivo-website/../node_modules/lodash/_arrayEach.js","webpack://nivo-website/../node_modules/lodash/_baseAssign.js","webpack://nivo-website/../node_modules/lodash/_baseAssignIn.js","webpack://nivo-website/../node_modules/lodash/_baseClone.js","webpack://nivo-website/../node_modules/lodash/_baseIsMap.js","webpack://nivo-website/../node_modules/lodash/_baseIsSet.js","webpack://nivo-website/../node_modules/lodash/_baseUnset.js","webpack://nivo-website/../node_modules/lodash/_cloneDataView.js","webpack://nivo-website/../node_modules/lodash/_cloneRegExp.js","webpack://nivo-website/../node_modules/lodash/_cloneSymbol.js","webpack://nivo-website/../node_modules/lodash/_copySymbols.js","webpack://nivo-website/../node_modules/lodash/_copySymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_customOmitClone.js","webpack://nivo-website/../node_modules/lodash/_getAllKeysIn.js","webpack://nivo-website/../node_modules/lodash/_getSymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_initCloneArray.js","webpack://nivo-website/../node_modules/lodash/_initCloneByTag.js","webpack://nivo-website/../node_modules/lodash/_parent.js","webpack://nivo-website/../node_modules/lodash/isMap.js","webpack://nivo-website/../node_modules/lodash/isSet.js","webpack://nivo-website/../node_modules/lodash/omit.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import { lineCurvePropKeys } from '@nivo/core'\nimport { commonDefaultProps as defaults } from '@nivo/parallel-coordinates'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        type: 'Array<object | Array>',\n        required: true,\n    },\n    {\n        key: 'variables',\n        type: 'object[]',\n        help: 'Variables configuration.',\n        description: `\n            Variables configuration, define accessor (\\`key\\`)\n            and variable type. Type must be one of\n            \\`linear\\` or \\`point\\`, \\`linear\\`\n            variables are suitable for continuous numerical\n            data such as age or cost while\n            \\`point\\` variables are suitable for\n            discrete values such as gender.\n        `,\n        group: 'Variables',\n        controlType: 'array',\n        controlOptions: {\n            shouldCreate: false,\n            shouldRemove: false,\n            getItemTitle: (index, values) => `${values.key} (${values.type})`,\n            props: [\n                {\n                    key: 'key',\n                    help: 'Variable key, used to access to corresponding datum value.',\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'type',\n                    help: `Variable type, must be one of: 'linear', 'point'.`,\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Min value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Max value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 1000,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                // {\n                //     key: 'padding',\n                //     help: 'Outer padding (0~1).',\n                //     type: `number`,\n                //     controlType: 'range',\n                //     controlOptions: {\n                //         when: ({ type }) => type === 'point',\n                //         min: 0,\n                //         max: 1,\n                //         step: 0.01,\n                //     },\n                // },\n            ],\n        },\n    },\n    {\n        key: 'layout',\n        help: `Chart layout.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.layout,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: lineCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'axesPlan',\n        help: `Axes plan.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesPlan,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'foreground', value: 'foreground' },\n                { label: 'background', value: 'background' },\n            ],\n        },\n    },\n    {\n        key: 'axesTicksPosition',\n        help: `Axes ticks position.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesTicksPosition,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty(['svg', 'canvas']),\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'strokeWidth',\n        help: 'Lines stroke width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.strokeWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'lineOpacity',\n        help: 'Lines opacity.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.lineOpacity,\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\n\nconst commonVariablePropTypes = {\n    key: PropTypes.string.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n}\n\nexport const commonPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.shape({\n                ...commonVariablePropTypes,\n                key: PropTypes.string.isRequired,\n                type: PropTypes.oneOf(['point']).isRequired,\n                padding: PropTypes.number,\n                values: PropTypes.arrayOf(\n                    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                ),\n                tickValues: PropTypes.arrayOf(\n                    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                ),\n            }),\n            PropTypes.shape({\n                ...commonVariablePropTypes,\n                type: PropTypes.oneOf(['linear']).isRequired,\n                min: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n                max: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n                tickValues: PropTypes.oneOfType([\n                    PropTypes.number,\n                    PropTypes.arrayOf(PropTypes.number),\n                ]),\n            }),\n        ])\n    ).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    curve: lineCurvePropType.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    lineOpacity: PropTypes.number.isRequired,\n    axesPlan: PropTypes.oneOf(['foreground', 'background']).isRequired,\n    axesTicksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    colors: ordinalColorsPropType.isRequired,\n}\n\nexport const svgPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const commonDefaultProps = {\n    layout: 'horizontal',\n    curve: 'linear',\n    colors: { scheme: 'yellow_orange_red' },\n    strokeWidth: 2,\n    lineOpacity: 0.35,\n    axesPlan: 'foreground',\n    axesTicksPosition: 'after',\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useMemo } from 'react'\nimport { line } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport { curveFromProp } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\n\nexport const computeParallelCoordinatesLayout = ({ width, height, data, variables, layout }) => {\n    const variablesScale = scalePoint()\n        .range(layout === 'horizontal' ? [0, width] : [height, 0])\n        .domain(variables.map(({ key }) => key))\n\n    const range = layout === 'horizontal' ? [height, 0] : [0, width]\n    const variablesWithScale = variables.map(variable => {\n        const allValues = new Set()\n        data.forEach(d => allValues.add(d[variable.key]))\n\n        let scale\n        if (variable.type === 'linear') {\n            const min =\n                variable.min !== undefined && variable.min !== 'auto'\n                    ? variable.min\n                    : Math.min(...Array.from(allValues))\n            const max =\n                variable.max !== undefined && variable.max !== 'auto'\n                    ? variable.max\n                    : Math.max(...Array.from(allValues))\n\n            scale = scaleLinear().rangeRound(range).domain([min, max])\n        }\n\n        if (variable.type === 'point') {\n            scale = scalePoint()\n                .range(range)\n                .domain(variable.values || allValues)\n\n            if (variable.padding !== undefined) {\n                scale.padding(variable.padding)\n            }\n        }\n\n        return {\n            ...variable,\n            scale,\n            values: Array.from(allValues),\n        }\n    })\n\n    const dataWithPoints = data.map((datum, index) => {\n        const points = variablesWithScale.map(variable => ({\n            x:\n                layout === 'horizontal'\n                    ? variablesScale(variable.key)\n                    : variable.scale(datum[variable.key]),\n            y:\n                layout === 'horizontal'\n                    ? variable.scale(datum[variable.key])\n                    : variablesScale(variable.key),\n        }))\n\n        return { index, ...datum, points }\n    })\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n    }\n}\n\nexport const computeAxisDensity = (variable, data) => {\n    let kernels\n    if (variable.type === 'point') {\n        kernels = data.reduce((acc, datum) => {\n            const value = datum[variable.key]\n            let kernel = acc.find(k => k.id === value)\n            if (kernel === undefined) {\n                kernel = { id: value, count: 0 }\n                acc.push(kernel)\n            }\n            kernel.count++\n\n            return acc\n        }, [])\n        kernels = variable.scale\n            .domain()\n            .map(d => kernels.find(k => k.id === d))\n            .filter(k => k !== undefined)\n    } else if (variable.type === 'linear') {\n        kernels = variable.scale.ticks(5).map((id, index, ticks) => {\n            if (index === 0) {\n                return {\n                    id,\n                    count: variable.values.filter(v => v <= id).length,\n                }\n            }\n\n            return {\n                id,\n                count: variable.values.filter(v => v > ticks[index - 1] && v <= id).length,\n            }\n        })\n    }\n\n    if (kernels !== undefined) {\n        const scale = scaleLinear()\n            .rangeRound([0, 60])\n            .domain([0, Math.max(...kernels.map(k => k.count))])\n\n        return kernels.map(k => ({\n            id: k.id,\n            position: variable.scale(k.id),\n            size: scale(k.count),\n        }))\n    }\n\n    return []\n}\n\nexport const useParallelCoordinates = ({\n    width,\n    height,\n    data,\n    variables,\n    layout,\n    colors,\n    curve,\n}) => {\n    const getLineColor = useOrdinalColorScale(colors, 'index')\n\n    const lineGenerator = useMemo(\n        () =>\n            line()\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n\n    const { variablesScale, variablesWithScale, dataWithPoints } = useMemo(\n        () =>\n            computeParallelCoordinatesLayout({\n                width,\n                height,\n                data,\n                variables,\n                layout,\n            }),\n        [width, height, data, variables, layout]\n    )\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        getLineColor,\n        lineGenerator,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TableTooltip } from '@nivo/tooltip'\n\nconst ParallelCoordinatesLineTooltip = ({ data, variables }) => {\n    return (\n        <TableTooltip\n            rows={variables.map(variable => [\n                variable.key,\n                <strong>{data[variable.key]}</strong>, // eslint-disable-line react/jsx-key\n            ])}\n        />\n    )\n}\n\nParallelCoordinatesLineTooltip.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(ParallelCoordinatesLineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport ParallelCoordinatesLineTooltip from './ParallelCoordinatesLineTooltip'\n\nconst ParallelCoordinatesLine = ({\n    data,\n    variables,\n    lineGenerator,\n    points,\n    strokeWidth,\n    color,\n    opacity,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(\n                <ParallelCoordinatesLineTooltip data={data} variables={variables} />,\n                event\n            )\n        },\n        [data, variables]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(lineGenerator(points))\n    const animatedProps = useSpring({\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            stroke={animatedProps.color}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            opacity={animatedProps.opacity}\n            fill=\"none\"\n            onMouseEnter={handleMouseHover}\n            onMouseMove={handleMouseHover}\n            onMouseLeave={hideTooltip}\n        />\n    )\n}\n\nParallelCoordinatesLine.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n}\n\nexport default memo(ParallelCoordinatesLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { SvgWrapper, useDimensions, withContainer } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { svgPropTypes, svgDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\nimport ParallelCoordinatesLine from './ParallelCoordinatesLine'\n\nconst ParallelCoordinates = ({\n    data,\n    variables,\n    layout,\n    width,\n    height,\n    margin: partialMargin,\n    axesPlan,\n    axesTicksPosition,\n    strokeWidth,\n    lineOpacity,\n    curve,\n    colors,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { variablesScale, variablesWithScale, dataWithPoints, lineGenerator, getLineColor } =\n        useParallelCoordinates({\n            width: innerWidth,\n            height: innerHeight,\n            data,\n            variables,\n            layout,\n            colors,\n            curve,\n        })\n\n    const axes = variablesWithScale.map(variable => (\n        <Axis\n            key={variable.key}\n            axis={layout === 'horizontal' ? 'y' : 'x'}\n            length={layout === 'horizontal' ? innerHeight : innerWidth}\n            x={layout === 'horizontal' ? variablesScale(variable.key) : 0}\n            y={layout === 'horizontal' ? 0 : variablesScale(variable.key)}\n            scale={variable.scale}\n            ticksPosition={variable.ticksPosition || axesTicksPosition}\n            tickValues={variable.tickValues}\n            tickSize={variable.tickSize}\n            tickPadding={variable.tickPadding}\n            tickRotation={variable.tickRotation}\n            format={variable.tickFormat}\n            legend={variable.legend}\n            legendPosition={variable.legendPosition}\n            legendOffset={variable.legendOffset}\n        />\n    ))\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {axesPlan === 'background' && axes}\n            {dataWithPoints.map(datum => (\n                <ParallelCoordinatesLine\n                    key={datum.index}\n                    data={datum}\n                    variables={variables}\n                    lineGenerator={lineGenerator}\n                    points={datum.points}\n                    strokeWidth={strokeWidth}\n                    opacity={lineOpacity}\n                    color={getLineColor(datum)}\n                />\n            ))}\n            {axesPlan === 'foreground' && axes}\n        </SvgWrapper>\n    )\n}\n\nParallelCoordinates.propTypes = svgPropTypes\n\nconst WrappedParallelCoordinates = withContainer(ParallelCoordinates)\nWrappedParallelCoordinates.defaultProps = svgDefaultProps\n\nexport default WrappedParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinates from './ParallelCoordinates'\n\nconst ResponsiveParallelCoordinates = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ParallelCoordinates width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDimensions, useTheme, withContainer } from '@nivo/core'\nimport { renderAxisToCanvas } from '@nivo/axes'\nimport { commonPropTypes, commonDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\n\nconst ParallelCoordinatesCanvas = ({\n    data,\n    layout,\n    variables,\n    width,\n    height,\n    margin: partialMargin,\n    curve,\n    colors,\n    lineOpacity,\n    strokeWidth,\n    axesTicksPosition,\n    pixelRatio,\n}) => {\n    const canvasEl = useRef(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { variablesScale, variablesWithScale, dataWithPoints, lineGenerator, getLineColor } =\n        useParallelCoordinates({\n            width: innerWidth,\n            height: innerHeight,\n            data,\n            variables,\n            layout,\n            colors,\n            curve,\n        })\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        lineGenerator.context(ctx)\n        dataWithPoints.forEach(datum => {\n            ctx.save()\n            ctx.globalAlpha = lineOpacity\n\n            ctx.beginPath()\n            lineGenerator(datum.points)\n            ctx.strokeStyle = getLineColor(datum)\n            ctx.lineWidth = strokeWidth\n            ctx.stroke()\n\n            ctx.restore()\n        })\n\n        variablesWithScale.map(variable => {\n            renderAxisToCanvas(ctx, {\n                axis: layout === 'horizontal' ? 'y' : 'x',\n                scale: variable.scale,\n                x: layout === 'horizontal' ? variablesScale(variable.key) : 0,\n                y: layout === 'horizontal' ? 0 : variablesScale(variable.key),\n                length: layout === 'horizontal' ? innerHeight : innerWidth,\n                ticksPosition: axesTicksPosition,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        lineGenerator,\n        getLineColor,\n        lineOpacity,\n        strokeWidth,\n        dataWithPoints,\n        variablesWithScale,\n        layout,\n        axesTicksPosition,\n        theme,\n        pixelRatio,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        />\n    )\n}\n\nParallelCoordinatesCanvas.propTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nconst WrappedParallelCoordinatesCanvas = withContainer(ParallelCoordinatesCanvas)\nWrappedParallelCoordinatesCanvas.defaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nexport default WrappedParallelCoordinatesCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinatesCanvas from './ParallelCoordinatesCanvas'\n\nconst ResponsiveParallelCoordinatesCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => (\n            <ParallelCoordinatesCanvas width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinatesCanvas\n","import { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({})\n","export default [\n    {\n        key: 'temp',\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'temperature',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'cost',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'cost',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'color',\n        type: 'point',\n        padding: 1,\n        values: ['red', 'yellow', 'green'],\n        legend: 'color',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'target',\n        type: 'point',\n        padding: 0,\n        values: ['A', 'B', 'C', 'D', 'E'],\n        legend: 'target',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'volume',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        legend: 'volume',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n]\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","line","data","i","d","buffer","n","length","defined0","lineStart","lineEnd","point","arguments","p","props","key","group","help","type","required","description","controlType","controlOptions","shouldCreate","shouldRemove","getItemTitle","index","values","disabled","when","disabledValue","defaultValue","min","max","defaults","choices","label","value","lineCurvePropKeys","enableControlForFlavors","unit","step","flavors","themeProperty","motionProperties","groups","groupProperties","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","getScaleTicks","textProps","textPropsByEngine","position","centerScale","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","ticks","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","isArray","Array","lines","AxisTick","_value","onClick","textAnchor","animatedProps","theme","useTheme","useMemo","style","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","tick","initial","textTransform","from","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","ctx","Number","degreesToRadians","String","renderAxesToCanvas","renderGridLinesToCanvas","commonVariablePropTypes","commonPropTypes","variables","padding","layout","lineCurvePropType","strokeWidth","lineOpacity","axesPlan","axesTicksPosition","colors","ordinalColorsPropType","commonDefaultProps","role","scheme","motionConfig","svgDefaultProps","_arrayLikeToArray","arr","len","arr2","_toConsumableArray","arrayLikeToArray","arrayWithoutHoles","iter","Symbol","iterator","iterableToArray","o","minLen","call","slice","name","test","unsupportedIterableToArray","TypeError","nonIterableSpread","useParallelCoordinates","getLineColor","useOrdinalColorScale","lineGenerator","curveFromProp","variablesScale","range","variablesWithScale","variable","allValues","scaleLinear","scalePoint","dataWithPoints","points","datum","computeParallelCoordinatesLayout","ParallelCoordinatesLineTooltip","rows","ParallelCoordinatesLine","color","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","animatedPath","useAnimatedPath","stroke","strokeLinecap","fill","onMouseEnter","onMouseMove","onMouseLeave","WrappedParallelCoordinates","withContainer","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","ResponsiveParallelCoordinates","WrappedParallelCoordinatesCanvas","pixelRatio","canvasEl","useRef","useEffect","ref","window","ResponsiveParallelCoordinatesCanvas","module","exports","array","iteratee","copyObject","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","stack","result","isDeep","isFlat","isFull","isArr","tag","isFunc","stacked","get","set","subValue","add","isObjectLike","castPath","last","parent","toKey","cloneArrayBuffer","dataView","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","symbolProto","symbolValueOf","valueOf","symbol","getSymbols","getSymbolsIn","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseGet","baseSlice","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","arrayMap","baseUnset","customOmitClone","flatRest","paths","CLONE_DEEP_FLAG"],"sourceRoot":""}