{"version":3,"sources":["webpack:///../src/props.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/compute.js","webpack:///../src/hooks.js","webpack:///../src/AnnotationNote.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../src/AnnotationLink.js","webpack:///../src/CircleAnnotationOutline.js","webpack:///../src/DotAnnotationOutline.js","webpack:///../src/RectAnnotationOutline.js","webpack:///../src/Annotation.js","webpack:///../src/canvas.js","webpack:///../node_modules/lodash/filter.js","webpack:///../node_modules/lodash/_baseFilter.js"],"names":["annotationSpecPropType","match","PropTypes","type","noteX","abs","isRequired","noteY","noteWidth","noteTextOffset","note","offset","number","defaultProps","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","defaultPositionAccessor","item","x","y","computeAnnotation","size","width","height","isPlainObject","computedNoteX","computedNoteY","computedX","computedY","angle","sourceX","Math","targetY","targetX","absoluteAngleDegrees","radiansToDegrees","getLinkAngle","position","positionFromAngle","degreesToRadians","eighth","textX","noteLineX","points","text","useAnnotations","items","annotations","getPosition","getDimensions","useMemo","annotation","dimensions","acc","omit","datum","bindAnnotations","useComputedAnnotations","containerWidth","containerHeight","computed","AnnotationNote","memo","theme","useTheme","useMotionConfig","animate","springConfiig","animatedProps","useSpring","config","immediate","style","strokeLinejoin","strokeWidth","stroke","outlineColor","_arrayWithHoles","arr","Array","isArray","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_toArray","iter","iterableToArray","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","AnnotationLink","isOutline","props","point","path","animatedPath","useAnimatedPath","fill","d","CircleAnnotationOutline","springConfig","radius","cx","cy","r","outline","DotAnnotationOutline","symbol","RectAnnotationOutline","Annotation","useComputedAnnotation","drawPoints","ctx","index","renderAnnotationsToCanvas","arrayFilter","baseFilter","baseIteratee","module","exports","collection","predicate","baseEach","result"],"mappings":"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","file":"d2ffb4d23e1440b61513dfdac607d8879915bf83-8707f88cae6e12eead09.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const annotationSpecPropType = PropTypes.shape({\n    match: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    type: PropTypes.oneOf(['circle', 'rect', 'dot']).isRequired,\n\n    noteX: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            abs: PropTypes.number.isRequired,\n        }),\n    ]).isRequired,\n    noteY: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            abs: PropTypes.number.isRequired,\n        }),\n    ]).isRequired,\n    noteWidth: PropTypes.number,\n    noteTextOffset: PropTypes.number,\n    note: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n    offset: PropTypes.number,\n})\n\nexport const defaultProps = {\n    noteWidth: 120,\n    noteTextOffset: 8,\n\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport isPlainObject from 'lodash/isPlainObject'\nimport filter from 'lodash/filter'\nimport omit from 'lodash/omit'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\n\nconst defaultPositionAccessor = item => ({ x: item.x, y: item.y })\n\nexport const bindAnnotations = ({\n    items,\n    annotations,\n    getPosition = defaultPositionAccessor,\n    getDimensions,\n}) =>\n    annotations.reduce((acc, annotation) => {\n        filter(items, annotation.match).forEach(item => {\n            const position = getPosition(item)\n            const dimensions = getDimensions(item, annotation.offset || 0)\n\n            acc.push({\n                ...omit(annotation, ['match', 'offset']),\n                ...position,\n                ...dimensions,\n                datum: item,\n                size: annotation.size || dimensions.size,\n            })\n        })\n\n        return acc\n    }, [])\n\nexport const getLinkAngle = (sourceX, sourceY, targetX, targetY) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = ({\n    type,\n    // containerWidth,\n    // containerHeight,\n    x,\n    y,\n    size,\n    width,\n    height,\n    noteX,\n    noteY,\n    noteWidth = defaultProps.noteWidth,\n    noteTextOffset = defaultProps.noteTextOffset,\n}) => {\n    let computedNoteX\n    let computedNoteY\n\n    if (isPlainObject(noteX)) {\n        if (noteX.abs !== undefined) {\n            computedNoteX = noteX.abs\n        }\n    } else {\n        computedNoteX = x + noteX\n    }\n\n    if (isPlainObject(noteY)) {\n        if (noteY.abs !== undefined) {\n            computedNoteY = noteY.abs\n        }\n    } else {\n        computedNoteY = y + noteY\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (type === 'circle') {\n        const position = positionFromAngle(degreesToRadians(angle), size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (type === 'rect') {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= height / 2\n        }\n        if (eighth === 1) {\n            computedX += width / 2\n            computedY -= height / 2\n        }\n        if (eighth === 2) {\n            computedX += width / 2\n        }\n        if (eighth === 3) {\n            computedX += width / 2\n            computedY += height / 2\n        }\n        if (eighth === 4) {\n            computedY += height / 2\n        }\n        if (eighth === 5) {\n            computedX -= width / 2\n            computedY += height / 2\n        }\n        if (eighth === 6) {\n            computedX -= width / 2\n        }\n        if (eighth === 7) {\n            computedX -= width / 2\n            computedY -= height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    let textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    let noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\n\nexport const useAnnotations = ({ items, annotations, getPosition, getDimensions }) =>\n    useMemo(\n        () =>\n            bindAnnotations({\n                items,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [items, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = ({ annotations, containerWidth, containerHeight }) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation({\n                    containerWidth,\n                    containerHeight,\n                    ...annotation,\n                }),\n            })),\n        [annotations, containerWidth, containerHeight]\n    )\n\nexport const useComputedAnnotation = ({\n    type,\n    containerWidth,\n    containerHeight,\n    x,\n    y,\n    size,\n    width,\n    height,\n    noteX,\n    noteY,\n    noteWidth,\n    noteTextOffset,\n}) =>\n    useMemo(\n        () =>\n            computeAnnotation({\n                type,\n                containerWidth,\n                containerHeight,\n                x,\n                y,\n                size,\n                width,\n                height,\n                noteX,\n                noteY,\n                noteWidth,\n                noteTextOffset,\n            }),\n        [\n            type,\n            containerWidth,\n            containerHeight,\n            x,\n            y,\n            size,\n            width,\n            height,\n            noteX,\n            noteY,\n            noteWidth,\n            noteTextOffset,\n        ]\n    )\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport omit from 'lodash/omit'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\n\nconst AnnotationNote = memo(({ datum, x, y, note }) => {\n    const theme = useTheme()\n    const { animate, config: springConfiig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfiig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return note({ x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n})\n\nAnnotationNote.displayName = 'AnnotationNote'\nAnnotationNote.propTypes = {\n    datum: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    note: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n}\nAnnotationNote.defaultProps = {}\n\nexport default AnnotationNote\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nconst AnnotationLink = memo(({ isOutline, ...props }) => {\n    const theme = useTheme()\n    const [point, ...points] = props.points\n\n    const path = points.reduce((acc, [x, y]) => `${acc} L${x},${y}`, `M${point[0]},${point[1]}`)\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n})\n\nAnnotationLink.displayName = 'AnnotationLink'\nAnnotationLink.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.array).isRequired,\n    isOutline: PropTypes.bool.isRequired,\n}\nAnnotationLink.defaultProps = {\n    isOutline: false,\n}\n\nexport default AnnotationLink\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nconst CircleAnnotationOutline = memo(({ x, y, size }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n})\n\nCircleAnnotationOutline.displayName = 'CircleAnnotationOutline'\nCircleAnnotationOutline.propTypes = {\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n}\n\nexport default CircleAnnotationOutline\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nconst DotAnnotationOutline = memo(({ x, y, size }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n})\n\nDotAnnotationOutline.displayName = 'DotAnnotationOutline'\nDotAnnotationOutline.propTypes = {\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n}\nDotAnnotationOutline.defaultProps = {\n    size: 4,\n}\n\nexport default DotAnnotationOutline\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nconst RectAnnotationOutline = memo(({ x, y, width, height }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n})\n\nRectAnnotationOutline.displayName = 'RectAnnotationOutline'\nRectAnnotationOutline.propTypes = {\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n}\n\nexport default RectAnnotationOutline\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { defaultProps } from './props'\nimport { useComputedAnnotation } from './hooks'\nimport AnnotationNote from './AnnotationNote'\nimport AnnotationLink from './AnnotationLink'\nimport CircleAnnotationOutline from './CircleAnnotationOutline'\nimport DotAnnotationOutline from './DotAnnotationOutline'\nimport RectAnnotationOutline from './RectAnnotationOutline'\n\nconst Annotation = memo(\n    ({\n        datum,\n        type,\n        containerWidth,\n        containerHeight,\n        x,\n        y,\n        size,\n        width,\n        height,\n        noteX,\n        noteY,\n        noteWidth,\n        noteTextOffset,\n        note,\n    }) => {\n        const computed = useComputedAnnotation({\n            type,\n            containerWidth,\n            containerHeight,\n            x,\n            y,\n            size,\n            width,\n            height,\n            noteX,\n            noteY,\n            noteWidth,\n            noteTextOffset,\n        })\n\n        return (\n            <>\n                <AnnotationLink points={computed.points} isOutline={true} />\n                {type === 'circle' && <CircleAnnotationOutline x={x} y={y} size={size} />}\n                {type === 'dot' && <DotAnnotationOutline x={x} y={y} size={size} />}\n                {type === 'rect' && (\n                    <RectAnnotationOutline x={x} y={y} width={width} height={height} />\n                )}\n                <AnnotationLink points={computed.points} />\n                <AnnotationNote\n                    datum={datum}\n                    x={computed.text[0]}\n                    y={computed.text[1]}\n                    note={note}\n                />\n            </>\n        )\n    }\n)\n\nAnnotation.displayName = 'Annotation'\nAnnotation.propTypes = {\n    datum: PropTypes.object.isRequired,\n\n    type: PropTypes.oneOf(['circle', 'rect', 'dot']).isRequired,\n\n    containerWidth: PropTypes.number.isRequired,\n    containerHeight: PropTypes.number.isRequired,\n\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n\n    noteX: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            abs: PropTypes.number.isRequired,\n        }),\n    ]).isRequired,\n    noteY: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            abs: PropTypes.number.isRequired,\n        }),\n    ]).isRequired,\n    noteWidth: PropTypes.number.isRequired,\n    noteTextOffset: PropTypes.number.isRequired,\n    note: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n}\nAnnotation.defaultProps = {\n    noteWidth: defaultProps.noteWidth,\n    noteTextOffset: defaultProps.noteTextOffset,\n}\n\nexport default Annotation\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst drawPoints = (ctx, points) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = (ctx, { annotations, theme }) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (annotation.type === 'circle' && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n        if (annotation.type === 'dot' && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n        if (annotation.type === 'rect' && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (annotation.type === 'circle') {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n        if (annotation.type === 'dot') {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n        if (annotation.type === 'rect') {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n"],"sourceRoot":""}