{"version":3,"file":"component---src-pages-scatterplot-canvas-js-fcf0ff8c4a2d181b03e3.js","mappings":"maAQA,IAAMA,EAAoB,CACtBC,OAAQ,CACJC,IAAK,GACLC,MAAO,IACPC,OAAQ,GACRC,KAAM,IAGVC,OAAQ,CACJC,KAAM,SACNC,IAAK,EACLC,IAAK,QAETC,QAAS,CAAEC,OAAQ,QAASC,SAAS,GACrCC,OAAQ,CACJN,KAAM,SACNC,IAAK,EACLC,IAAK,QAETK,QAAS,CAAEH,OAAQ,QAASC,SAAS,GAErCG,WACsB,oBAAXC,QAA0BA,OAAOC,iBAAmBD,OAAOC,iBAAmB,EAEzFC,OAAQC,EAAAA,GAAAA,OAERC,SAAU,EAEVC,QAAS,CACLC,QAAQ,EACRC,OAAQ,MACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,GACRC,aAAc,IAElBC,UAAW,CACPP,QAAQ,EACRC,OAAQ,QACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,GACRC,aAAc,GAElBE,WAAY,CACRR,QAAQ,EACRC,OAAQ,SACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,SACRI,eAAgB,SAChBH,aAAc,GACdjB,OAAQ,SAAAqB,GAAC,OAAOA,EAAP,QAEbC,SAAU,CACNX,QAAQ,EACRC,OAAQ,OACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,OACRI,eAAgB,SAChBH,cAAe,GACfjB,OAAQ,SAAAqB,GAAC,OAAOA,EAAP,QAGbE,YAAaf,EAAAA,GAAAA,YACbgB,YAAahB,EAAAA,GAAAA,YAEbiB,cAAejB,EAAAA,GAAAA,cACfkB,QAASlB,EAAAA,GAAAA,QACTmB,UAAWnB,EAAAA,GAAAA,UAEXoB,QAAS,CACL,CACIC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,UAAW,IACXC,WAAY,GACZC,aAAc,EACdC,cAAe,gBACfC,WAAY,GACZC,YAAa,OACbC,QAAS,SAAAnB,GACLoB,MAAMC,KAAKC,UAAUtB,EAAG,KAAM,UAElCuB,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHC,YAAa,QAyCrC,UAjC0B,WACtB,OACI,SAAC,IAAD,CACIC,KAAK,oBACLC,KAAMA,EAAAA,GACNC,KAAK,cACLC,QAASF,EAAAA,GACTG,cAAc,SACdC,WAAYC,EAAAA,EACZjE,kBAAmBA,EACnBkE,kBAAmB/C,EAAAA,GACnBgD,iBAAkBC,EAAAA,EAClBC,aAAcC,EAAAA,EAVlB,SAYK,SAACN,EAAYO,EAAMC,EAAOC,GAA1B,OACG,SAAC,KAAD,GACIF,KAAMA,GACFP,EAFR,CAGIQ,MAAOA,EACPrB,QAAS,SAAAuB,GACLD,EAAU,CACNlE,KAAM,QACNoE,MAAM,cAAeD,EAAKE,GAArB,QAA+BF,EAAKG,EAApC,QAA6CH,EAAKI,EACvDC,MAAOL,EAAKK,MACZR,KAAMG","sources":["webpack://nivo-website/./src/pages/scatterplot/canvas.js"],"sourcesContent":["import React from 'react'\nimport { ResponsiveScatterPlotCanvas, canvasDefaultProps } from '@nivo/scatterplot'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/scatterplot/meta.yml'\nimport mapper from '../../data/components/scatterplot/mapper'\nimport { groups } from '../../data/components/scatterplot/props'\nimport { generateHeavyDataSet } from '../../data/components/scatterplot/generator'\n\nconst initialProperties = {\n    margin: {\n        top: 60,\n        right: 140,\n        bottom: 70,\n        left: 90,\n    },\n\n    xScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n    xFormat: { format: '>-.2f', enabled: true },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n    yFormat: { format: '>-.2f', enabled: true },\n\n    pixelRatio:\n        typeof window !== 'undefined' && window.devicePixelRatio ? window.devicePixelRatio : 1,\n\n    colors: canvasDefaultProps.colors,\n\n    nodeSize: 5,\n\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: false,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'weight',\n        legendPosition: 'middle',\n        legendOffset: 46,\n        format: d => `${d} kg`,\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'size',\n        legendPosition: 'middle',\n        legendOffset: -60,\n        format: d => `${d} cm`,\n    },\n\n    enableGridX: canvasDefaultProps.enableGridX,\n    enableGridY: canvasDefaultProps.enableGridY,\n\n    isInteractive: canvasDefaultProps.isInteractive,\n    useMesh: canvasDefaultProps.useMesh,\n    debugMesh: canvasDefaultProps.debugMesh,\n\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 130,\n            translateY: 0,\n            itemWidth: 100,\n            itemHeight: 12,\n            itemsSpacing: 5,\n            itemDirection: 'left-to-right',\n            symbolSize: 12,\n            symbolShape: 'rect',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemOpacity: 1,\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst ScatterPlotCanvas = () => {\n    return (\n        <ComponentTemplate\n            name=\"ScatterPlotCanvas\"\n            meta={meta.ScatterPlotCanvas}\n            icon=\"scatterplot\"\n            flavors={meta.flavors}\n            currentFlavor=\"canvas\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={canvasDefaultProps}\n            propertiesMapper={mapper}\n            generateData={generateHeavyDataSet}\n        >\n            {(properties, data, theme, logAction) => (\n                <ResponsiveScatterPlotCanvas\n                    data={data}\n                    {...properties}\n                    theme={theme}\n                    onClick={node => {\n                        logAction({\n                            type: 'click',\n                            label: `[node] id: ${node.id}, x: ${node.x}, y: ${node.y}`,\n                            color: node.color,\n                            data: node,\n                        })\n                    }}\n                />\n            )}\n        </ComponentTemplate>\n    )\n}\n\nexport default ScatterPlotCanvas\n"],"names":["initialProperties","margin","top","right","bottom","left","xScale","type","min","max","xFormat","format","enabled","yScale","yFormat","pixelRatio","window","devicePixelRatio","colors","canvasDefaultProps","nodeSize","axisTop","enable","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","axisRight","axisBottom","legendPosition","d","axisLeft","enableGridX","enableGridY","isInteractive","useMesh","debugMesh","legends","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","itemDirection","symbolSize","symbolShape","onClick","alert","JSON","stringify","effects","on","style","itemOpacity","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","generateData","generateHeavyDataSet","data","theme","logAction","node","label","id","x","y","color"],"sourceRoot":""}