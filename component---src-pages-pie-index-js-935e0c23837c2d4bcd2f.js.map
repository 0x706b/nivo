{"version":3,"sources":["webpack:///./src/pages/pie/index.js","webpack:///./src/data/components/pie/props.js","webpack:///./src/lib/settings.js","webpack:///./src/data/components/pie/mapper.js"],"names":["generateData","generateProgrammingLanguageStats","map","d","id","label","initialProperties","margin","top","right","bottom","left","valueFormat","format","enabled","startAngle","endAngle","sortByValue","innerRadius","padAngle","cornerRadius","fit","colors","scheme","borderWidth","borderColor","from","modifiers","enableRadialLabels","radialLabel","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","enableSliceLabels","sliceLabel","sliceLabelsRadiusOffset","sliceLabelsSkipAngle","sliceLabelsTextColor","isInteractive","tooltip","defs","fill","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","style","Pie","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","defaultProps","propertiesMapper","mapper","data","theme","logAction","handleLegendClick","legendItem","type","formattedValue","color","onClick","slice","legend","props","key","group","help","description","required","defaultValue","defaults","value","controlType","enableControlForFlavors","controlOptions","unit","min","max","step","themeProperty","defsProperties","choices","choice","layers","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","alert","JSON","stringify","groupProperties","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","undefined","TooltipWrapper","styled","div","TooltipKey","span","TooltipValue","CustomTooltip","datum","values","container","background","patternDotsDef","size","padding","stagger","patternLinesDef","rotation","lineWidth","spacing","match"],"mappings":"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","file":"component---src-pages-pie-index-js-935e0c23837c2d4bcd2f.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsivePie, defaultProps } from '@nivo/pie'\nimport { generateProgrammingLanguageStats } from '@nivo/generators'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/pie/meta.yml'\nimport mapper from '../../data/components/pie/mapper'\nimport { groups } from '../../data/components/pie/props'\n\nconst DATASET_SIZE = 5\nconst generateData = () =>\n    generateProgrammingLanguageStats(true, DATASET_SIZE).map(d => ({\n        id: d.label,\n        ...d,\n    }))\n\nconst initialProperties = {\n    margin: {\n        top: 40,\n        right: 80,\n        bottom: 80,\n        left: 80,\n    },\n\n    valueFormat: { format: '', enabled: false },\n\n    startAngle: 0,\n    endAngle: 360,\n    sortByValue: false,\n    innerRadius: 0.5,\n    padAngle: 0.7,\n    cornerRadius: 3,\n    fit: true,\n\n    colors: { scheme: 'nivo' },\n\n    borderWidth: 1,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.2]],\n    },\n\n    enableRadialLabels: true,\n    radialLabel: 'id',\n    radialLabelsSkipAngle: 10,\n    radialLabelsTextXOffset: 6,\n    radialLabelsTextColor: '#333333',\n    radialLabelsLinkOffset: 0,\n    radialLabelsLinkDiagonalLength: 16,\n    radialLabelsLinkHorizontalLength: 24,\n    radialLabelsLinkStrokeWidth: 1,\n    radialLabelsLinkColor: { from: 'color' },\n\n    enableSliceLabels: true,\n    sliceLabel: 'formattedValue',\n    sliceLabelsRadiusOffset: 0.5,\n    sliceLabelsSkipAngle: 10,\n    sliceLabelsTextColor: '#333333',\n\n    isInteractive: true,\n    'custom tooltip example': false,\n    tooltip: null,\n    'showcase pattern usage': true,\n\n    defs: [],\n    fill: [],\n\n    legends: [\n        {\n            anchor: 'bottom',\n            direction: 'row',\n            justify: false,\n            translateX: 0,\n            translateY: 56,\n            itemsSpacing: 0,\n            itemWidth: 100,\n            itemHeight: 18,\n            itemTextColor: '#999',\n            itemDirection: 'left-to-right',\n            itemOpacity: 1,\n            symbolSize: 18,\n            symbolShape: 'circle',\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Pie = () => {\n    return (\n        <ComponentTemplate\n            name=\"Pie\"\n            meta={meta.Pie}\n            icon=\"pie\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={defaultProps}\n            propertiesMapper={mapper}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                const handleArcClick = slice => {\n                    logAction({\n                        type: 'click',\n                        label: `[arc] ${slice.id}: ${slice.formattedValue}`,\n                        color: slice.color,\n                        data: slice,\n                    })\n                }\n\n                const handleLegendClick = legendItem => {\n                    logAction({\n                        type: 'click',\n                        label: `[legend] ${legendItem.label}: ${legendItem.formattedValue}`,\n                        color: legendItem.color,\n                        data: legendItem,\n                    })\n                }\n\n                return (\n                    <ResponsivePie\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={handleArcClick}\n                        legends={properties.legends.map(legend => ({\n                            ...legend,\n                            onClick: handleLegendClick,\n                        }))}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Pie\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { defaultProps as defaults } from '@nivo/pie'\nimport {\n    themeProperty,\n    defsProperties,\n    groupProperties,\n    getLegendsProps,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data, which should be immutable.',\n        description: `\n            Chart data, which must conform to this structure\n            if using the default \\`id\\` and \\`value\\` accessors:\n\n            \\`\\`\\`\n            Array<{\n                id:    string | number,\n                value: number\n            }>\n            \\`\\`\\`\n\n            If using a different data structure, you must make sure\n            to adjust both \\`id\\` and \\`value\\`. Meaning you can provide\n            a completely different data structure as long as \\`id\\` and \\`value\\`\n            return the appropriate values.\n\n            Immutability of the data is important as re-computations\n            depends on it.\n        `,\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'id',\n        group: 'Base',\n        help: 'ID accessor.',\n        description: `\n            Define how to access the ID of each datum,\n            by default, nivo will look for the \\`id\\` property.\n        `,\n        type: 'string | (datum: RawDatum): string | number',\n        required: false,\n        defaultValue: defaults.id,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        help: 'Value accessor.',\n        description: `\n            Define how to access the value of each datum,\n            by default, nivo will look for the \\`value\\` property.\n        `,\n        type: 'string | (datum: RawDatum): number',\n        required: false,\n        defaultValue: defaults.value,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'string | (value: number) => string | number',\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsivePie/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsivePie/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'startAngle',\n        help: 'Start angle (in degrees), useful to make gauges for example.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.startAngle,\n        controlType: 'angle',\n        group: 'Base',\n        controlOptions: {\n            unit: '°',\n            min: -180,\n            max: 360,\n            step: 5,\n        },\n    },\n    {\n        key: 'endAngle',\n        help: 'End angle (in degrees), useful to make gauges for example.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.endAngle,\n        controlType: 'angle',\n        group: 'Base',\n        controlOptions: {\n            unit: '°',\n            min: -360,\n            max: 360,\n            step: 5,\n        },\n    },\n    {\n        key: 'fit',\n        help: `If 'true', pie will be omptimized to occupy more space when using partial pie.`,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.fit,\n        controlType: 'switch',\n        group: 'Base',\n    },\n    {\n        key: 'innerRadius',\n        help: `Donut chart if greater than 0. Value should be between 0~1 as it's a ratio from original radius.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.innerRadius,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 0.95,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'padAngle',\n        help: 'Padding between each pie slice.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.padAngle,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: '°',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'cornerRadius',\n        help: 'Rounded slices.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.cornerRadius,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'sortByValue',\n        help: `If 'true', arcs will be ordered according to their associated value.`,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.sortByValue,\n        controlType: 'switch',\n        group: 'Base',\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg', 'api']),\n    {\n        key: 'showcase pattern usage',\n        flavors: ['svg'],\n        help: 'Patterns.',\n        description: `\n            You can use \\`defs\\` and \\`fill\\` properties\n            to use patterns, see\n            [dedicated guide](self:/guides/patterns)\n            for further information.\n        `,\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Slices border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'enableRadialLabels',\n        help: 'Enable/disable radial labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableRadialLabels,\n        controlType: 'switch',\n        group: 'Radial labels',\n    },\n    {\n        key: 'radialLabel',\n        help: 'Radial label',\n        description: `\n            Defines how to get label text,\n            can be a string (used to access current node data property)\n            or a function which will receive the actual node data.\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.radialLabel,\n        controlType: 'choices',\n        group: 'Radial labels',\n        controlOptions: {\n            choices: ['id', 'value', `d => \\`\\${d.id} (\\${d.value})\\``].map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'radialLabelsSkipAngle',\n        help: `Skip label if corresponding slice's angle is lower than provided value.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsSkipAngle,\n        controlType: 'range',\n        group: 'Radial labels',\n        controlOptions: {\n            unit: '°',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'radialLabelsLinkOffset',\n        help: `Link offset from pie outer radius, useful to have links overlapping pie slices.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsLinkOffset,\n        controlType: 'range',\n        group: 'Radial labels',\n        controlOptions: {\n            unit: 'px',\n            min: -24,\n            max: 24,\n            step: 1,\n        },\n    },\n    {\n        key: 'radialLabelsLinkDiagonalLength',\n        help: `Link diagonal length.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsLinkDiagonalLength,\n        controlType: 'range',\n        group: 'Radial labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n            step: 1,\n        },\n    },\n    {\n        key: 'radialLabelsLinkHorizontalLength',\n        help: `Links horizontal length.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsLinkHorizontalLength,\n        controlType: 'range',\n        group: 'Radial labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n            step: 1,\n        },\n    },\n    {\n        key: 'radialLabelsTextXOffset',\n        help: `X offset from links' end.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsTextXOffset,\n        controlType: 'range',\n        group: 'Radial labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n            step: 1,\n        },\n    },\n    {\n        key: 'radialLabelsLinkStrokeWidth',\n        help: 'Links stroke width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.radialLabelsLinkStrokeWidth,\n        controlType: 'lineWidth',\n        group: 'Radial labels',\n    },\n    {\n        key: 'radialLabelsTextColor',\n        help: 'Defines how to compute radial label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.radialLabelsTextColor,\n        controlType: 'inheritedColor',\n        group: 'Radial labels',\n    },\n    {\n        key: 'radialLabelsLinkColor',\n        help: 'Defines how to compute radial label link color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.radialLabelsLinkColor,\n        controlType: 'inheritedColor',\n        group: 'Radial labels',\n    },\n    {\n        key: 'enableSliceLabels',\n        help: 'Enable/disable slices labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableSliceLabels,\n        controlType: 'switch',\n        group: 'Slice labels',\n    },\n    {\n        key: 'sliceLabel',\n        help:\n            'Defines how to get label text, can be a string (used to access current node data property) or a function which will receive the actual node data.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.sliceLabel,\n        controlType: 'choices',\n        group: 'Slice labels',\n        controlOptions: {\n            choices: ['id', 'value', 'formattedValue', `d => \\`\\${d.id} (\\${d.value})\\``].map(\n                choice => ({\n                    label: choice,\n                    value: choice,\n                })\n            ),\n        },\n    },\n    {\n        key: 'sliceLabelsRadiusOffset',\n        help: `\n            Define the radius to use to determine the label position, starting from inner radius,\n            this is expressed as a ratio.\n        `,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.sliceLabelsRadiusOffset,\n        controlType: 'range',\n        group: 'Slice labels',\n        controlOptions: {\n            min: 0,\n            max: 2,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'sliceLabelsSkipAngle',\n        help: `Skip label if corresponding slice's angle is lower than provided value.`,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.sliceLabelsSkipAngle,\n        controlType: 'range',\n        group: 'Slice labels',\n        controlOptions: {\n            unit: '°',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'sliceLabelsTextColor',\n        help: 'Defines how to compute slice label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.sliceLabelsTextColor,\n        controlType: 'inheritedColor',\n        group: 'Slice labels',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n\n            The layer component which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`Pie\\` component.\n\n            When using the canvas implementation, the function\n            will receive the canvas 2d context as first argument\n            and the chart's context and computed data as second.\n\n            Please make sure to use \\`context.save()\\` and\n            \\`context.restore()\\` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n\n            The context passed to layers has the following structure:\n\n            \\`\\`\\`\n            {\n                dataWithArc:  DatumWithArc[],\n                arcGenerator: Function\n                centerX:      number\n                centerY:      number\n                radius:       number\n                innerRadius:  number\n            }\n            \\`\\`\\`\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaults.layers,\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseEnter handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseMove handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseLeave handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onClick handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: 'Component',\n        required: false,\n        help: 'Custom tooltip component',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the following props:\n\n            \\`\\`\\`\n            {\n                datum: PieComputedDatum\n            }\n            \\`\\`\\`\n\n            You can also customize the style of the tooltip using\n            the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        flavors: ['svg', 'canvas'],\n        help: 'Showcase custom tooltip.',\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'legends',\n        flavors: ['svg', 'canvas'],\n        type: 'Legend[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 0,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping, { exclude = [] } = {}) => (settings, options = {}) => {\n    const overrides = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = type => (value, settings) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }) => (enabled === true ? format : undefined)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { patternDotsDef, patternLinesDef } from '@nivo/core'\nimport { mapFormat, settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    background: #333;\n    padding: 12px 16px;\n    font-size: 12px;\n    border-radius: 2px;\n`\nconst TooltipKey = styled.span``\nconst TooltipValue = styled.span`\n    font-weight: 600;\n`\n\nconst CustomTooltip = ({ datum }) => (\n    <TooltipWrapper style={{ color: datum.color }}>\n        <TooltipKey>id</TooltipKey>\n        <TooltipValue>{datum.id}</TooltipValue>\n        <TooltipKey>value</TooltipKey>\n        <TooltipValue>{datum.value}</TooltipValue>\n        <TooltipKey>formattedValue</TooltipKey>\n        <TooltipValue>{datum.formattedValue}</TooltipValue>\n        <TooltipKey>color</TooltipKey>\n        <TooltipValue>{datum.color}</TooltipValue>\n    </TooltipWrapper>\n)\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        radialLabel: value => {\n            if (value === `d => \\`\\${d.id} (\\${d.value})\\``) return d => `${d.id} (${d.value})`\n            return value\n        },\n        sliceLabel: value => {\n            if (value === `d => \\`\\${d.id} (\\${d.value})\\``) return d => `${d.id} (${d.value})`\n            return value\n        },\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n        theme: (value, values) => {\n            if (!values['custom tooltip example']) return value\n\n            return {\n                ...values.theme,\n                tooltip: {\n                    container: {\n                        ...values.theme.tooltip.container,\n                        background: '#333',\n                    },\n                },\n            }\n        },\n        defs: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                patternDotsDef('dots', {\n                    background: 'inherit',\n                    color: 'rgba(255, 255, 255, 0.3)',\n                    size: 4,\n                    padding: 1,\n                    stagger: true,\n                }),\n                patternLinesDef('lines', {\n                    background: 'inherit',\n                    color: 'rgba(255, 255, 255, 0.3)',\n                    rotation: -45,\n                    lineWidth: 6,\n                    spacing: 10,\n                }),\n            ]\n        },\n        fill: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                { match: { id: 'ruby' }, id: 'dots' },\n                { match: { id: 'c' }, id: 'dots' },\n                { match: { id: 'go' }, id: 'dots' },\n                { match: { id: 'python' }, id: 'dots' },\n                { match: { id: 'scala' }, id: 'lines' },\n                { match: { id: 'lisp' }, id: 'lines' },\n                { match: { id: 'elixir' }, id: 'lines' },\n                { match: { id: 'javascript' }, id: 'lines' },\n            ]\n        },\n    },\n    {\n        exclude: ['custom tooltip example', 'showcase pattern usage'],\n    }\n)\n"],"sourceRoot":""}