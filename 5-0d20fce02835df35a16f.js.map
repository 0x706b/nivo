{"version":3,"sources":["webpack:///../node_modules/core-js/modules/es6.object.freeze.js","webpack:///../node_modules/core-js/modules/es6.string.anchor.js","webpack:///../node_modules/recompose/withState.js","webpack:///../node_modules/recompose/utils/mapValues.js","webpack:///../node_modules/core-js/modules/es6.array.sort.js","webpack:///../node_modules/recompose/withHandlers.js","webpack:///../node_modules/core-js/modules/_strict-method.js","webpack:///../node_modules/d3-sankey/node_modules/d3-array/src/ascending.js","webpack:///../node_modules/d3-sankey/node_modules/d3-array/src/bisect.js","webpack:///../node_modules/d3-sankey/node_modules/d3-array/src/bisector.js","webpack:///../node_modules/d3-sankey/node_modules/d3-array/src/array.js","webpack:///../node_modules/d3-sankey/node_modules/d3-array/src/ticks.js","webpack:///../node_modules/d3-sankey/node_modules/d3-array/src/min.js","webpack:///../node_modules/d3-sankey/node_modules/d3-array/src/sum.js","webpack:///../node_modules/d3-sankey/src/align.js","webpack:///../node_modules/d3-sankey/src/constant.js","webpack:///../node_modules/d3-sankey/src/sankey.js","webpack:///../node_modules/d3-sankey/node_modules/d3-array/src/max.js","webpack:///../node_modules/d3-sankey/src/sankeyLinkHorizontal.js","webpack:///../node_modules/d3-sankey/src/index.js"],"names":["isObject","__webpack_require__","meta","onFreeze","$freeze","it","createHTML","name","this","_interopRequireDefault","exports","__esModule","default","_extends3","_inheritsLoose2","_react","_default","stateName","stateUpdaterName","initialState","BaseComponent","factory","createFactory","_Component","WithState","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","stateValue","props","updateStateValue","updateFn","callback","setState","_ref","prototype","render","_extends2","Component","obj","func","result","key","hasOwnProperty","$export","aFunction","toObject","fails","$sort","sort","test","P","F","undefined","comparefn","_mapValues","handlers","WithHandlers","_args","createHandler","module","method","arg","ascending","a","b","NaN","compare","f","d","x","array_array","slice","map","Math","sqrt","min_min","values","valueof","min","value","index","sum","targetDepth","target","depth","align_left","node","align_right","n","height","justify","sourceLinks","center","targetLinks","constant_constant","ascendingSourceBreadth","ascendingBreadth","source","ascendingTargetBreadth","y0","sankey_value","defaultId","defaultNodes","graph","nodes","defaultLinks","links","find","nodeById","id","get","Error","computeLinkBreadths","y1","link","width","Sankey","linkSort","x0","x1","dx","py","align","iterations","sankey","i","entries","Map","push","computeNodeLinks","max","computeNodeValues","current","Set","next","size","add","computeNodeDepths","computeNodeHeights","columns","max_max","kx","floor","layer","column","computeNodeLayers","ky","c","y","reorderLinks","initializeNodeBreadths","alpha","pow","beta","relaxRightToLeft","relaxLeftToRight","computeNodeBreadths","w","v","targetTop","dy","reorderNodeLinks","resolveCollisions","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","update","nodeId","_","nodeAlign","nodeSort","nodeWidth","nodePadding","extent","horizontalSource","horizontalTarget","sankeyLinkHorizontal","Object","src","__webpack_exports__"],"mappings":"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","file":"5-0d20fce02835df35a16f.js","sourcesContent":["// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends3 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = require(\"react\");\n\nvar _setDisplayName = _interopRequireDefault(require(\"./setDisplayName\"));\n\nvar _wrapDisplayName = _interopRequireDefault(require(\"./wrapDisplayName\"));\n\nvar withState = function withState(stateName, stateUpdaterName, initialState) {\n  return function (BaseComponent) {\n    var factory = (0, _react.createFactory)(BaseComponent);\n\n    var WithState =\n    /*#__PURE__*/\n    function (_Component) {\n      (0, _inheritsLoose2.default)(WithState, _Component);\n\n      function WithState() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n        _this.state = {\n          stateValue: typeof initialState === 'function' ? initialState(_this.props) : initialState\n        };\n\n        _this.updateStateValue = function (updateFn, callback) {\n          return _this.setState(function (_ref) {\n            var stateValue = _ref.stateValue;\n            return {\n              stateValue: typeof updateFn === 'function' ? updateFn(stateValue) : updateFn\n            };\n          }, callback);\n        };\n\n        return _this;\n      }\n\n      var _proto = WithState.prototype;\n\n      _proto.render = function render() {\n        var _extends2;\n\n        return factory((0, _extends3.default)({}, this.props, (_extends2 = {}, _extends2[stateName] = this.state.stateValue, _extends2[stateUpdaterName] = this.updateStateValue, _extends2)));\n      };\n\n      return WithState;\n    }(_react.Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'withState'))(WithState);\n    }\n\n    return WithState;\n  };\n};\n\nvar _default = withState;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar mapValues = function mapValues(obj, func) {\n  var result = {};\n  /* eslint-disable no-restricted-syntax */\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      result[key] = func(obj[key], key);\n    }\n  }\n  /* eslint-enable no-restricted-syntax */\n\n\n  return result;\n};\n\nvar _default = mapValues;\nexports.default = _default;","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = require(\"react\");\n\nvar _setDisplayName = _interopRequireDefault(require(\"./setDisplayName\"));\n\nvar _wrapDisplayName = _interopRequireDefault(require(\"./wrapDisplayName\"));\n\nvar _mapValues = _interopRequireDefault(require(\"./utils/mapValues\"));\n\n/* eslint-disable no-console */\nvar withHandlers = function withHandlers(handlers) {\n  return function (BaseComponent) {\n    var factory = (0, _react.createFactory)(BaseComponent);\n\n    var WithHandlers =\n    /*#__PURE__*/\n    function (_Component) {\n      (0, _inheritsLoose2.default)(WithHandlers, _Component);\n\n      function WithHandlers() {\n        var _this;\n\n        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n          _args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(_args)) || this;\n        _this.handlers = (0, _mapValues.default)(typeof handlers === 'function' ? handlers(_this.props) : handlers, function (createHandler) {\n          return function () {\n            var handler = createHandler(_this.props);\n\n            if (process.env.NODE_ENV !== 'production' && typeof handler !== 'function') {\n              console.error( // eslint-disable-line no-console\n              'withHandlers(): Expected a map of higher-order functions. ' + 'Refer to the docs for more info.');\n            }\n\n            return handler.apply(void 0, arguments);\n          };\n        });\n        return _this;\n      }\n\n      var _proto = WithHandlers.prototype;\n\n      _proto.render = function render() {\n        return factory((0, _extends2.default)({}, this.props, this.handlers));\n      };\n\n      return WithHandlers;\n    }(_react.Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      return (0, _setDisplayName.default)((0, _wrapDisplayName.default)(BaseComponent, 'withHandlers'))(WithHandlers);\n    }\n\n    return WithHandlers;\n  };\n};\n\nvar _default = withHandlers;\nexports.default = _default;","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null\n          && value >= value\n          && (min === undefined || min > value)) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && value >= value\n          && (min === undefined || min > value)) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let py = 8; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (py = +_, sankey) : py;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = Math.max(\n        sum(node.sourceLinks, value),\n        sum(node.targetLinks, value)\n      );\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null\n          && value >= value\n          && (max === undefined || max < value)) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && value >= value\n          && (max === undefined || max < value)) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","import {linkHorizontal} from \"d3-shape\";\n\nfunction horizontalSource(d) {\n  return [d.source.x1, d.y0];\n}\n\nfunction horizontalTarget(d) {\n  return [d.target.x0, d.y1];\n}\n\nexport default function() {\n  return linkHorizontal()\n      .source(horizontalSource)\n      .target(horizontalTarget);\n}\n","export {default as sankey} from \"./sankey.js\";\nexport {center as sankeyCenter, left as sankeyLeft, right as sankeyRight, justify as sankeyJustify} from \"./align.js\";\nexport {default as sankeyLinkHorizontal} from \"./sankeyLinkHorizontal.js\";\n"],"sourceRoot":""}