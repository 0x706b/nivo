{"version":3,"file":"component---src-pages-heatmap-api-js-28d6fdbdeee40161cb2c.js","mappings":"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","sources":["webpack://nivo-website/./src/components/components/api-client/ApiPreview.js","webpack://nivo-website/./src/components/components/api-client/ApiTabs.js","webpack://nivo-website/./src/components/components/api-client/ApiSubmit.js","webpack://nivo-website/./src/components/components/api-client/ApiResponse.js","webpack://nivo-website/./src/components/components/api-client/ApiClient.js","webpack://nivo-website/./src/pages/heatmap/api.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ApiPreview = ({ responseStatus, chartUrl }) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n\n    return <div className=\"api-client_preview\">{content}</div>\n}\n\nApiPreview.propTypes = {\n    responseStatus: PropTypes.number,\n    chartUrl: PropTypes.string,\n}\n\nexport default ApiPreview\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport ApiPreview from './ApiPreview'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\nimport { CodeBlock } from '../../CodeBlock'\n\nconst tabs = ['preview', 'body', 'data']\n\nconst ApiTabs = ({ chartClass, data, body, isLoading, responseStatus, chartUrl }) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState('preview')\n    const [hoverTab, setHoverTab] = useState(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview\n                        isLoading={isLoading}\n                        responseStatus={responseStatus}\n                        chartUrl={chartUrl}\n                    />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nApiTabs.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n}\n\nexport default ApiTabs\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.6);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 60%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst LoaderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n\nclass ApiSubmit extends Component {\n    render() {\n        const { loading, onClick } = this.props\n\n        return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n    }\n}\n\nApiSubmit.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nApiSubmit.defaultProps = {}\n\nexport default ApiSubmit\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n\nclass ApiResponse extends Component {\n    render() {\n        const { responseStatus, response } = this.props\n\n        let responseContent = 'no response available'\n        if (response) {\n            responseContent = JSON.stringify(response, null, '  ')\n        }\n\n        return (\n            <Container>\n                <Header>\n                    Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}\n                </Header>\n                <ResponseJson>{responseContent}</ResponseJson>\n            </Container>\n        )\n    }\n}\n\nApiResponse.propTypes = {}\n\nApiResponse.defaultProps = {}\n\nexport default ApiResponse\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport { ComponentPage } from '../ComponentPage'\nimport { ComponentHeader } from '../ComponentHeader'\nimport ComponentFlavorSelector from '../ComponentFlavorSelector'\nimport { ComponentDescription } from '../ComponentDescription'\nimport ComponentSettings from '../ComponentSettings'\nimport ApiTabs from './ApiTabs'\nimport ApiSubmit from './ApiSubmit'\nimport ApiResponse from './ApiResponse'\nimport config from '../../../data/config'\n\nconst description = component => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\nexport default class ApiClient extends Component {\n    static propTypes = {\n        componentName: PropTypes.string.isRequired,\n        chartClass: PropTypes.string.isRequired,\n        apiPath: PropTypes.string.isRequired,\n        dataProperty: PropTypes.string.isRequired,\n        propsMapper: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        dataProperty: 'data',\n        propsMapper: props => props,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            props: props.defaultProps,\n            loading: false,\n            responseStatus: null,\n            response: null,\n        }\n    }\n\n    handleSettingsUpdate = settings => {\n        this.setState({ props: settings })\n    }\n\n    handleDataUpdate = e => {\n        const { dataProperty } = this.props\n        const { props } = this.state\n\n        this.setState({\n            props: Object.assign({}, props, {\n                [dataProperty]: e.target.value,\n            }),\n        })\n    }\n\n    handleSubmit = () => {\n        const { apiPath, propsMapper } = this.props\n        const { props } = this.state\n\n        this.setState({\n            loading: true,\n        })\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    responseStatus: res.status,\n                })\n\n                return res.json()\n            })\n            .then(res => {\n                this.setState({ response: res })\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    render() {\n        const {\n            componentName,\n            chartClass,\n            apiPath,\n            controlGroups,\n            dataProperty,\n            propsMapper,\n            flavors,\n        } = this.props\n        const { props, loading, responseStatus, response } = this.state\n\n        const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n        return (\n            <Layout>\n                <ComponentPage>\n                    <ComponentHeader\n                        chartClass={`${componentName} HTTP API`}\n                        tags={[`POST ${apiPath}`]}\n                    />\n                    {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                    <ComponentDescription description={description(componentName, apiPath)} />\n                    <ApiTabs\n                        chartClass={chartClass}\n                        data={props[dataProperty]}\n                        body={propsMapper(props)}\n                        isLoading={loading}\n                        responseStatus={responseStatus}\n                        chartUrl={response ? response.url : null}\n                    />\n                    <ControlPanel>\n                        <SubmitWrapper>\n                            <ApiSubmit loading={loading} onClick={this.handleSubmit} />\n                        </SubmitWrapper>\n                        <ApiResponse responseStatus={responseStatus} response={response} />\n                    </ControlPanel>\n                    <ComponentSettings\n                        component={componentName}\n                        settings={props}\n                        flavors={flavorKeys}\n                        currentFlavor=\"api\"\n                        groups={controlGroups}\n                        onChange={this.handleSettingsUpdate}\n                    />\n                </ComponentPage>\n            </Layout>\n        )\n    }\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.6);\n    width: var(--partialWidth);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 60%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n","import React from 'react'\nimport { Seo } from '../../components/Seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/heatmap/props'\nimport mapper from '../../data/components/heatmap/mapper'\nimport { generateLightDataSet } from '../../data/components/heatmap/generator'\nimport meta from '../../data/components/heatmap/meta.yml'\n\nconst data = generateLightDataSet()\n\nconst HeatMapApi = () => {\n    return (\n        <>\n            <Seo title=\"HeatMap HTTP API\" keywords={[...meta.HeatMap.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"HeatMap\"\n                chartClass=\"heatmap\"\n                apiPath=\"/charts/heatmap\"\n                flavors={meta.flavors}\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 800,\n                    height: 600,\n                    data: JSON.stringify(data.data, null, '  '),\n                    keys: data.keys,\n                    indexBy: 'country',\n\n                    margin: {\n                        top: 100,\n                        right: 60,\n                        bottom: 30,\n                        left: 60,\n                    },\n\n                    minValue: 'auto',\n                    maxValue: 'auto',\n                    forceSquare: true,\n                    sizeVariation: 0.4,\n                    padding: 2,\n                    colors: 'nivo',\n\n                    axisTop: {\n                        enable: true,\n                        orient: 'top',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: -55,\n                        legend: '',\n                        legendOffset: 36,\n                    },\n                    axisRight: {\n                        enable: false,\n                        orient: 'right',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: 0,\n                    },\n                    axisBottom: {\n                        enable: false,\n                        orient: 'bottom',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: 36,\n                    },\n                    axisLeft: {\n                        enable: true,\n                        orient: 'left',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: -40,\n                    },\n\n                    enableGridX: false,\n                    enableGridY: true,\n\n                    cellShape: 'circle',\n                    cellOpacity: 1,\n                    cellBorderWidth: 0,\n                    cellBorderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.4]],\n                    },\n\n                    enableLabels: true,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1.4]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default HeatMapApi\n"],"names":["Link","styled","Image","EmptyContainer","theme","colors","textLight","responseStatus","chartUrl","href","target","rel","src","alt","tabs","chartClass","data","body","isLoading","useTheme","useState","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","map","tab","isCurrent","icon","iconColors","NavItem","key","onClick","onMouseEnter","onMouseLeave","Icon","id","Content","CodeBlock","JSON","stringify","Loader","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","background","text","LoaderContainer","loaderBarAnimation","keyframes","LoaderBar","accent","index","Button","ApiSubmit","render","this","props","loading","Component","defaultProps","Container","Header","borderLight","ResponseJson","ApiResponse","response","responseContent","ApiClient","handleSettingsUpdate","settings","setState","handleDataUpdate","e","dataProperty","state","Object","assign","value","handleSubmit","apiPath","propsMapper","fetch","config","method","headers","Accept","then","res","status","json","catch","err","console","error","component","componentName","controlGroups","flavors","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","tags","ComponentFlavorSelector","current","ComponentDescription","description","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","groups","onChange","cardAltBackground","generateLightDataSet","title","keywords","meta","mapper","width","height","keys","indexBy","margin","top","right","bottom","left","minValue","maxValue","forceSquare","sizeVariation","padding","axisTop","enable","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","axisRight","legendPosition","axisBottom","axisLeft","enableGridX","enableGridY","cellShape","cellOpacity","cellBorderWidth","cellBorderColor","from","modifiers","enableLabels","labelTextColor"],"sourceRoot":""}