{"version":3,"sources":["webpack:///../node_modules/d3-array/src/ascending.js","webpack:///../node_modules/d3-array/src/bisect.js","webpack:///../node_modules/d3-array/src/bisector.js","webpack:///../node_modules/d3-array/src/cross.js","webpack:///../node_modules/d3-array/src/array.js","webpack:///../node_modules/d3-array/src/range.js","webpack:///../node_modules/d3-array/src/ticks.js","webpack:///../node_modules/d3-array/src/threshold/sturges.js","webpack:///../node_modules/d3-array/src/merge.js","webpack:///../node_modules/d3-array/src/index.js","webpack:///../node_modules/d3-geo/src/adder.js","webpack:///../node_modules/d3-geo/src/math.js","webpack:///../node_modules/d3-geo/src/noop.js","webpack:///../node_modules/d3-geo/src/stream.js","webpack:///../node_modules/d3-geo/src/area.js","webpack:///../node_modules/d3-geo/src/cartesian.js","webpack:///../node_modules/d3-geo/src/bounds.js","webpack:///../node_modules/d3-geo/src/centroid.js","webpack:///../node_modules/d3-geo/src/compose.js","webpack:///../node_modules/d3-geo/src/rotation.js","webpack:///../node_modules/d3-geo/src/circle.js","webpack:///../node_modules/d3-geo/src/clip/buffer.js","webpack:///../node_modules/d3-geo/src/pointEqual.js","webpack:///../node_modules/d3-geo/src/clip/rejoin.js","webpack:///../node_modules/d3-geo/src/polygonContains.js","webpack:///../node_modules/d3-geo/src/clip/index.js","webpack:///../node_modules/d3-geo/src/clip/antimeridian.js","webpack:///../node_modules/d3-geo/src/clip/circle.js","webpack:///../node_modules/d3-geo/src/clip/line.js","webpack:///../node_modules/d3-geo/src/clip/rectangle.js","webpack:///../node_modules/d3-geo/src/clip/extent.js","webpack:///../node_modules/d3-geo/src/length.js","webpack:///../node_modules/d3-geo/src/distance.js","webpack:///../node_modules/d3-geo/src/contains.js","webpack:///../node_modules/d3-geo/src/graticule.js","webpack:///../node_modules/d3-geo/src/interpolate.js","webpack:///../node_modules/d3-geo/src/path/area.js","webpack:///../node_modules/d3-geo/src/identity.js","webpack:///../node_modules/d3-geo/src/path/bounds.js","webpack:///../node_modules/d3-geo/src/path/centroid.js","webpack:///../node_modules/d3-geo/src/path/context.js","webpack:///../node_modules/d3-geo/src/path/measure.js","webpack:///../node_modules/d3-geo/src/path/string.js","webpack:///../node_modules/d3-geo/src/path/index.js","webpack:///../node_modules/d3-geo/src/transform.js","webpack:///../node_modules/d3-geo/src/projection/fit.js","webpack:///../node_modules/d3-geo/src/projection/resample.js","webpack:///../node_modules/d3-geo/src/projection/index.js","webpack:///../node_modules/d3-geo/src/projection/azimuthal.js","webpack:///../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///../node_modules/d3-geo/src/projection/mercator.js","webpack:///../node_modules/d3-geo/src/projection/equirectangular.js","webpack:///../node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///../node_modules/d3-geo/src/projection/equalEarth.js","webpack:///../node_modules/d3-geo/src/projection/gnomonic.js","webpack:///../node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///../node_modules/d3-geo/src/projection/orthographic.js","webpack:///../node_modules/d3-geo/src/projection/stereographic.js","webpack:///../node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///../node_modules/d3-geo/src/index.js","webpack:///./src/data/components/geo/props.js","webpack:///./src/data/components/geo/mapper.js","webpack:///./src/data/components/geo/generator.js","webpack:///./src/data/components/choropleth/props.js","webpack:///./src/pages/choropleth/index.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/hooks.js","webpack:///../src/ChoroplethTooltip.js","webpack:///../src/props.js","webpack:///../src/GeoGraticule.js","webpack:///../src/GeoMapFeature.js","webpack:///../src/GeoMap.js","webpack:///../src/ResponsiveGeoMap.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/GeoMapCanvas.js","webpack:///../src/ResponsiveGeoMapCanvas.js","webpack:///../src/Choropleth.js","webpack:///../src/ResponsiveChoropleth.js","webpack:///../src/ChoroplethCanvas.js","webpack:///../src/ResponsiveChoroplethCanvas.js"],"names":["a","b","NaN","f","ascending","length","compare","d","x","Array","prototype","slice","map","start","stop","step","n","arguments","i","Math","max","ceil","range","sqrt","m","merged","array","arrays","j","Adder","this","reset","constructor","s","t","add","y","_add","temp","valueOf","adder","bv","av","epsilon","pi","PI","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","exp","log","floor","sin","pow","sign","tan","acos","asin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","cartesian","spherical","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","k","cartesianNormalizeInPlace","l","compose","invert","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","forward","rotate","circleStream","radius","delta","direction","t0","t1","cosRadius","sinRadius","circleRadius","line","lines","push","rejoin","pop","concat","shift","result","Intersection","points","other","entry","o","e","v","p","subject","clip","segments","forEach","segment","p0","p1","pointEqual","sort","compareIntersection","startInside","current","isSubject","interpolate","sum","sinPhi","normal","angle","winding","polygon","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","arc","intersection","phiArc","sink","clipLine","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","polygonContains","pointVisible","pointLine","clean","ringSegments","filter","validSegment","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","w","uu","t2","q","polar","q1","code","r","c0","v0","v00","point2","c","ax","ay","dx","dy","x0","x1","y0","y1","clipMax","clipMin","clipRectangle","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","min","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","distance","ab","ringRadians","pointRadians","graticuleX","graticuleY","X1","X0","Y1","Y0","X","Y","DX","DY","precision","graticule","outline","reverse","extent","_","extentMajor","extentMinor","stepMajor","stepMinor","area","Infinity","bounds","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","PathString","_string","_circle","join","projectionStream","contextStream","path","apply","measure","projection","identity","transformer","methods","TransformStream","key","fit","fitBounds","clipExtent","scale","translate","h","size","width","height","maxDepth","cosMinDistance","delta2","project","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslate","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","recenter","center","resample","transformRotate","undefined","clipAngle","fitExtent","fitSize","fitWidth","fitHeight","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","equirectangularRaw","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","props","group","enableControlForFlavors","help","description","required","flavors","defaultValue","controlType","controlOptions","GeoMapDefaultProps","projectionType","choices","label","value","projectionScale","projectionTranslation","unit","items","projectionRotation","themeProperty","borderWidth","borderColor","enableGraticule","graticuleLineWidth","graticuleLineColor","defsProperties","isInteractive","TooltipWrapper","styled","div","theme","colors","cardBackground","color","TooltipKey","span","TooltipValue","CustomTooltip","feature","id","settingsMapper","values","tooltip","container","background","exclude","generateChoroplethData","countries","includes","random","geoProps","ChoroplethDefaultProps","layers","excludeFromDoc","getLegendsProps","shouldCreate","addLabel","shouldRemove","defaults","anchor","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","itemDirection","itemTextColor","onClick","data","alert","JSON","stringify","effects","on","style","itemBackground","groups","groupProperties","Tooltip","initialProperties","margin","top","right","bottom","left","domain","unknownColor","valueFormat","legends","itemOpacity","Choropleth","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","codePropertiesMapper","generateData","logAction","formattedValue","omit","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","projectionById","azimuthalEqualArea","azimuthalEquidistant","gnomonic","orthographic","stereographic","equalEarth","equirectangular","mercator","transverseMercator","naturalEarth1","geoNaturalEarth1","useGeoMap","fillColor","useMemo","geoPath","geoGraticule","useTheme","getBorderWidth","getBorderColor","useInheritedColor","getFillColor","useChoropleth","match","findMatchingDatum","isFunction","featureKey","get","datumKey","datum","getLabel","getValue","valueFormatter","format","colorScale","guessQuantizeColorScale","boundFeatures","datumValue","featureWithData","legendData","useQuantizeColorScaleLegendData","ChoroplethTooltip","memo","enableChip","commonPropTypes","PropTypes","isRequired","inheritedColorPropType","onMouseEnter","onMouseMove","onMouseLeave","GeoMapPropTypes","role","GeoMapCanvasPropTypes","pixelRatio","commonChoroplethPropTypes","quantizeColorScalePropType","commonDefaultProps","GeoMapCanvasDefaultProps","global","commonChoroplethDefaultProps","ChoroplethCanvasDefaultProps","GeoGraticule","lineWidth","lineColor","fill","strokeWidth","stroke","GeoMapFeature","strokeLinejoin","event","GeoMap","partialMargin","useDimensions","outerWidth","outerHeight","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","handleMouseEnter","handleMouseMove","handleMouseLeave","layer","withContainer","ResponsiveGeoMap","_arrayLikeToArray","arr","len","arr2","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","minLen","arrayLikeToArray","toString","call","test","unsupportedIterableToArray","TypeError","nonIterableRest","getFeatureFromMouseEvent","getRelativeCursor","el","geoContains","GeoMapCanvas","canvasEl","useRef","useEffect","ctx","ref","cursor","ResponsiveGeoMapCanvas","containerWidth","containerHeight","ResponsiveChoropleth","ChoroplethCanvas","legend","renderLegendToCanvas","ResponsiveChoroplethCanvas"],"mappings":"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","file":"component---src-pages-choropleth-index-js-60378a66ef7e5a4dd7da.js","sourcesContent":["export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","import \"core-js/modules/es6.array.map\";\nvar array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","export { default as bisect, bisectRight, bisectLeft } from \"./bisect\";\nexport { default as ascending } from \"./ascending\";\nexport { default as bisector } from \"./bisector\";\nexport { default as cross } from \"./cross\";\nexport { default as descending } from \"./descending\";\nexport { default as deviation } from \"./deviation\";\nexport { default as extent } from \"./extent\";\nexport { default as histogram } from \"./histogram\";\nexport { default as thresholdFreedmanDiaconis } from \"./threshold/freedmanDiaconis\";\nexport { default as thresholdScott } from \"./threshold/scott\";\nexport { default as thresholdSturges } from \"./threshold/sturges\";\nexport { default as max } from \"./max\";\nexport { default as mean } from \"./mean\";\nexport { default as median } from \"./median\";\nexport { default as merge } from \"./merge\";\nexport { default as min } from \"./min\";\nexport { default as pairs } from \"./pairs\";\nexport { default as permute } from \"./permute\";\nexport { default as quantile } from \"./quantile\";\nexport { default as range } from \"./range\";\nexport { default as scan } from \"./scan\";\nexport { default as shuffle } from \"./shuffle\";\nexport { default as sum } from \"./sum\";\nexport { default as ticks, tickIncrement, tickStep } from \"./ticks\";\nexport { default as transpose } from \"./transpose\";\nexport { default as variance } from \"./variance\";\nexport { default as zip } from \"./zip\";","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","import \"core-js/modules/es6.math.sign\";\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import \"core-js/modules/es6.array.sort\";\nimport adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.array.for-each\";\nimport pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import \"core-js/modules/es6.array.filter\";\nimport clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","import clipRectangle from \"./rectangle\";\nexport default function () {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n  return clip = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = _stream);\n    },\n    extent: function extent(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import length from \"./length\";\nvar coordinates = [null, null],\n    object = {\n  type: \"LineString\",\n  coordinates: coordinates\n};\nexport default function (a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}","import \"core-js/modules/es6.array.map\";\nimport { default as polygonContains } from \"./polygonContains\";\nimport { default as distance } from \"./distance\";\nimport { epsilon, radians } from \"./math\";\nvar containsObjectType = {\n  Feature: function Feature(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function FeatureCollection(object, point) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      if (containsGeometry(features[i].geometry, point)) return true;\n    }\n\n    return false;\n  }\n};\nvar containsGeometryType = {\n  Sphere: function Sphere() {\n    return true;\n  },\n  Point: function Point(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function MultiPoint(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPoint(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  LineString: function LineString(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function MultiLineString(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsLine(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  Polygon: function Polygon(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function MultiPolygon(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPolygon(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  GeometryCollection: function GeometryCollection(object, point) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      if (containsGeometry(geometries[i], point)) return true;\n    }\n\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function (object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n}","import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.map\";\nimport { range } from \"d3-array\";\nimport { abs, ceil, epsilon } from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function (x) {\n    return y.map(function (y) {\n      return [x, y];\n    });\n  };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function (y) {\n    return x.map(function (x) {\n      return [x, y];\n    });\n  };\n}\n\nexport default function graticule() {\n  var x1,\n      x0,\n      X1,\n      X0,\n      y1,\n      y0,\n      Y1,\n      Y0,\n      dx = 10,\n      dy = dx,\n      DX = 90,\n      DY = 360,\n      x,\n      y,\n      X,\n      Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {\n      type: \"MultiLineString\",\n      coordinates: lines()\n    };\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n      return abs(x % DX) > epsilon;\n    }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n      return abs(y % DY) > epsilon;\n    }).map(y));\n  }\n\n  graticule.lines = function () {\n    return lines().map(function (coordinates) {\n      return {\n        type: \"LineString\",\n        coordinates: coordinates\n      };\n    });\n  };\n\n  graticule.outline = function () {\n    return {\n      type: \"Polygon\",\n      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n    };\n  };\n\n  graticule.extent = function (_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function (_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function (_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function (_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function (_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function (_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function (_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\nexport function graticule10() {\n  return graticule()();\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","export default function (x) {\n  return x;\n}","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { sqrt } from \"../math\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import projection from \"./index.js\";\nimport { abs, asin, cos, epsilon2, sin, sqrt } from \"../math.js\";\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  return [lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\n\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l), asin(sin(l) / M)];\n};\n\nexport default function () {\n  return projection(equalEarthRaw).scale(177.158);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import projection from \"./index\";\nimport { abs, epsilon } from \"../math\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","export { default as geoArea } from \"./area\";\nexport { default as geoBounds } from \"./bounds\";\nexport { default as geoCentroid } from \"./centroid\";\nexport { default as geoCircle } from \"./circle\";\nexport { default as geoClipAntimeridian } from \"./clip/antimeridian\";\nexport { default as geoClipCircle } from \"./clip/circle\";\nexport { default as geoClipExtent } from \"./clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\n\nexport { default as geoClipRectangle } from \"./clip/rectangle\";\nexport { default as geoContains } from \"./contains\";\nexport { default as geoDistance } from \"./distance\";\nexport { default as geoGraticule, graticule10 as geoGraticule10 } from \"./graticule\";\nexport { default as geoInterpolate } from \"./interpolate\";\nexport { default as geoLength } from \"./length\";\nexport { default as geoPath } from \"./path/index\";\nexport { default as geoAlbers } from \"./projection/albers\";\nexport { default as geoAlbersUsa } from \"./projection/albersUsa\";\nexport { default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw } from \"./projection/azimuthalEqualArea\";\nexport { default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw } from \"./projection/azimuthalEquidistant\";\nexport { default as geoConicConformal, conicConformalRaw as geoConicConformalRaw } from \"./projection/conicConformal\";\nexport { default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw } from \"./projection/conicEqualArea\";\nexport { default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw } from \"./projection/conicEquidistant\";\nexport { default as geoEqualEarth, equalEarthRaw as geoEqualEarthRaw } from \"./projection/equalEarth\";\nexport { default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw } from \"./projection/equirectangular\";\nexport { default as geoGnomonic, gnomonicRaw as geoGnomonicRaw } from \"./projection/gnomonic\";\nexport { default as geoIdentity } from \"./projection/identity\";\nexport { default as geoProjection, projectionMutator as geoProjectionMutator } from \"./projection/index\";\nexport { default as geoMercator, mercatorRaw as geoMercatorRaw } from \"./projection/mercator\";\nexport { default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw } from \"./projection/naturalEarth1\";\nexport { default as geoOrthographic, orthographicRaw as geoOrthographicRaw } from \"./projection/orthographic\";\nexport { default as geoStereographic, stereographicRaw as geoStereographicRaw } from \"./projection/stereographic\";\nexport { default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw } from \"./projection/transverseMercator\";\nexport { default as geoRotation } from \"./rotation\";\nexport { default as geoStream } from \"./stream\";\nexport { default as geoTransform } from \"./transform\";","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { GeoMapDefaultProps } from '@nivo/geo'\nimport { themeProperty, defsProperties } from '../../../lib/componentProperties'\n\nexport const props = [\n    {\n        key: 'width',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'projectionType',\n        help: 'Defines the projection to use.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionType,\n        controlType: 'choices',\n        group: 'Projection',\n        controlOptions: {\n            choices: [\n                { label: 'azimuthalEqualArea', value: 'azimuthalEqualArea' },\n                { label: 'azimuthalEquidistant', value: 'azimuthalEquidistant' },\n                { label: 'gnomonic', value: 'gnomonic' },\n                { label: 'orthographic', value: 'orthographic' },\n                { label: 'stereographic', value: 'stereographic' },\n                { label: 'equalEarth', value: 'equalEarth' },\n                { label: 'equirectangular', value: 'equirectangular' },\n                { label: 'mercator', value: 'mercator' },\n                { label: 'transverseMercator', value: 'transverseMercator' },\n                { label: 'naturalEarth1', value: 'naturalEarth1' },\n            ],\n        },\n    },\n    {\n        key: 'projectionScale',\n        help: 'Projection scale.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionScale,\n        type: 'number',\n        controlType: 'range',\n        group: 'Projection',\n        controlOptions: {\n            min: 0,\n            max: 400,\n        },\n    },\n    {\n        key: 'projectionTranslation',\n        type: '[number, number]',\n        help: 'Projection x/y translation.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionTranslation,\n        controlType: 'numberArray',\n        group: 'Projection',\n        controlOptions: {\n            unit: 'px',\n            items: [\n                {\n                    label: 'x',\n                    min: -1,\n                    max: 1,\n                    step: 0.05,\n                },\n                {\n                    label: 'y',\n                    min: -1,\n                    max: 1,\n                    step: 0.05,\n                },\n            ],\n        },\n    },\n    {\n        key: 'projectionRotation',\n        type: '[number, number, number]',\n        help: 'Projection rotation.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionRotation,\n        controlType: 'numberArray',\n        group: 'Projection',\n        controlOptions: {\n            items: [\n                {\n                    label: 'lambda (λ)',\n                    min: -360,\n                    max: 360,\n                },\n                {\n                    label: 'phi (φ)',\n                    min: -360,\n                    max: 360,\n                },\n                {\n                    label: 'gamma (γ)',\n                    min: -360,\n                    max: 360,\n                },\n            ],\n        },\n    },\n    themeProperty,\n    {\n        key: 'borderWidth',\n        help: 'Control border width.',\n        type: 'number',\n        required: false,\n        defaultValue: GeoMapDefaultProps.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n        controlOptions: {\n            step: 0.5,\n        },\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: GeoMapDefaultProps.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'enableGraticule',\n        help: 'Enable meridians and parallels, useful for showing projection distortion.',\n        type: 'boolean',\n        required: false,\n        defaultValue: GeoMapDefaultProps.enableGraticule,\n        controlType: 'switch',\n        group: 'Graticule',\n    },\n    {\n        key: 'graticuleLineWidth',\n        help: 'Control meridians and parallel lines width.',\n        type: 'number',\n        required: false,\n        defaultValue: GeoMapDefaultProps.graticuleLineWidth,\n        controlType: 'lineWidth',\n        group: 'Graticule',\n        controlOptions: {\n            step: 0.5,\n        },\n    },\n    {\n        key: 'graticuleLineColor',\n        help: 'Control meridians and parallel lines color.',\n        type: 'string',\n        required: false,\n        defaultValue: GeoMapDefaultProps.graticuleLineColor,\n        controlType: 'colorPicker',\n        group: 'Graticule',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'isInteractive',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: GeoMapDefaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onClick',\n        help: 'onClick handler, it receives clicked node data and style plus mouse event.',\n        type: 'Function',\n        required: false,\n        group: 'Interactivity',\n    },\n]\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    font-size: 13px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    padding: 10px 20px;\n    color: ${({ color }) => color};\n    border: 2px solid ${({ color }) => color};\n    box-shadow: 9px 16px 0 rgba(0, 0, 0, 0.15);\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\nconst TooltipValue = styled.span``\n\nconst CustomTooltip = ({ feature }) => {\n    return (\n        <TooltipWrapper color={feature.color}>\n            <TooltipKey>Custom tooltip</TooltipKey>\n            <span />\n            <TooltipKey>id</TooltipKey>\n            <TooltipValue>{feature.id}</TooltipValue>\n            <TooltipKey>value</TooltipKey>\n            <TooltipValue>{feature.value}</TooltipValue>\n            <TooltipKey>color</TooltipKey>\n            <TooltipValue>{feature.color}</TooltipValue>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        theme: (value, values) => {\n            if (!values['custom tooltip example']) return value\n\n            return {\n                ...values.theme,\n                tooltip: {\n                    container: {\n                        ...values.theme.tooltip.container,\n                        background: '#333',\n                    },\n                },\n            }\n        },\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n    },\n    {\n        exclude: ['custom tooltip example'],\n    }\n)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport countries from './world_countries'\n\nconst exclude = ['BRA', 'AUS', 'SWE', 'GRL', 'COD']\n\nexport const generateChoroplethData = () =>\n    countries.features\n        .filter(feature => !exclude.includes(feature.id))\n        .map(feature => ({\n            id: feature.id,\n            value: Math.round(Math.random() * 1000000),\n        }))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { GeoMapDefaultProps, ChoroplethDefaultProps } from '@nivo/geo'\nimport { themeProperty, getLegendsProps, groupProperties } from '../../../lib/componentProperties'\nimport { props as geoProps } from '../geo/props'\n\nconst props = [\n    ...geoProps,\n    {\n        key: 'label',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: 'Label accessor.',\n        description: `\n            Accessor to label, if a string is provided,\n            the value will be retrieved using it as\n            a key, if it's a function, it's its responsibility\n            to return the label.\n        `,\n        defaultValue: ChoroplethDefaultProps.label,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: 'Value accessor.',\n        description: `\n            Accessor to data value, if a string is provided,\n            the value will be retrieved using\n            it as a key, if it's a function, it's its responsibility\n            to return the value.\n        `,\n        defaultValue: ChoroplethDefaultProps.value,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: 'Value formatter.',\n        description: `\n            Optional formatting of values, if provided, it will\n            be used for labels/tooltips. You can either pass\n            a function which will receive the node's data\n            and must return the formatted value, or a string\n            which will be used as a directive for\n            [d3-format](https://github.com/d3/d3-format).\n        `,\n        defaultValue: ChoroplethDefaultProps.value,\n    },\n    {\n        key: 'domain',\n        help: 'Defines uppper and lower bounds of color shading',\n        description: `\n            The Domain prop is a required two element array that\n            defines the minimum and maximum values for the color shading\n            of the Choropleth. The minimum and maximum provided should\n            roughly match, or be slightly outside of the minimum and\n            maximum values in your data.\n        `,\n        type: 'number[]',\n        required: true,\n        group: 'Base',\n    },\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: 'nivo',\n        controlType: 'quantizeColors',\n        group: 'Style',\n    },\n    {\n        key: 'unknownColor',\n        help: 'Defines the color to use for features without value.',\n        type: 'string',\n        required: false,\n        defaultValue: 'nivo',\n        controlType: 'colorPicker',\n        group: 'Style',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        type: `Array<'graticule' | 'features' | Function>`,\n        required: false,\n        help: 'Defines the order of layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`graticule\\`, \\`features\\`.\n\n            You can also use this to insert extra layers\n            to the chart, this extra layer must be\n            a function which will receive the chart\n            computed data and must return a valid SVG\n            element for the SVG implementation or receive\n            a Canvas 2d context for the canvas\n            one. Custom layers will also receive the\n            computed data/projection.\n        `,\n        defaultValue: GeoMapDefaultProps.layers,\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the node's data.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        excludeFromDoc: true,\n        help: 'Showcase custom tooltip.',\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'legends',\n        type: '{Array<object>}',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            defaults: {\n                anchor: 'center',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 4,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                itemTextColor: '#777',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemTextColor: '#000',\n                            itemBackground: '#f7fafb',\n                        },\n                    },\n                ],\n            },\n        },\n    },\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport omit from 'lodash/omit'\nimport { ResponsiveChoropleth, ChoroplethDefaultProps } from '@nivo/geo'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/choropleth/meta.yml'\nimport mapper from '../../data/components/geo/mapper'\nimport { groups } from '../../data/components/choropleth/props'\nimport { generateChoroplethData } from '../../data/components/geo/generator'\nimport countries from '../../data/components/geo/world_countries'\n\nconst Tooltip = data => {\n    /* return custom tooltip */\n}\n\nconst initialProperties = {\n    margin: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n\n    colors: 'nivo',\n    domain: [0, 1000000],\n    unknownColor: '#666666',\n\n    label: 'properties.name',\n    value: 'value',\n    valueFormat: '.2s',\n\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: true,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#dddddd',\n\n    borderWidth: 0.5,\n    borderColor: '#152538',\n\n    isInteractive: true,\n    'custom tooltip example': false,\n    tooltip: null,\n\n    legends: [\n        {\n            anchor: 'bottom-left',\n            direction: 'column',\n            justify: true,\n            translateX: 20,\n            translateY: -100,\n            itemsSpacing: 0,\n            itemWidth: 94,\n            itemHeight: 18,\n            itemDirection: 'left-to-right',\n            itemTextColor: '#444444',\n            itemOpacity: 0.85,\n            symbolSize: 18,\n            onClick: data => {\n                alert(JSON.stringify(data, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000000',\n                        itemOpacity: 1,\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Choropleth = () => {\n    return (\n        <ComponentTemplate\n            name=\"Choropleth\"\n            meta={meta.Choropleth}\n            icon=\"choropleth\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={ChoroplethDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={properties => ({\n                features: '/* please have a look at the description for usage */',\n                ...properties,\n                tooltip: properties.tooltip ? Tooltip : undefined,\n            })}\n            generateData={generateChoroplethData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveChoropleth\n                        features={countries.features}\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={feature => {\n                            logAction({\n                                type: 'click',\n                                label: `${feature.label}: ${feature.formattedValue} (${feature.id})`,\n                                color: feature.color,\n                                data: omit(feature, 'geometry'),\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Choropleth\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { isFunction, get } from 'lodash'\nimport { format } from 'd3-format'\nimport {\n    geoPath,\n    geoAzimuthalEqualArea,\n    geoAzimuthalEquidistant,\n    geoGnomonic,\n    geoOrthographic,\n    geoStereographic,\n    geoEqualEarth,\n    geoEquirectangular,\n    geoMercator,\n    geoTransverseMercator,\n    geoNaturalEarth1,\n    geoGraticule,\n} from 'd3-geo'\nimport { guessQuantizeColorScale, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useQuantizeColorScaleLegendData } from '@nivo/legends'\n\nexport const projectionById = {\n    azimuthalEqualArea: geoAzimuthalEqualArea,\n    azimuthalEquidistant: geoAzimuthalEquidistant,\n    gnomonic: geoGnomonic,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    mercator: geoMercator,\n    transverseMercator: geoTransverseMercator,\n    naturalEarth1: geoNaturalEarth1,\n}\n\nexport const useGeoMap = ({\n    width,\n    height,\n    projectionType,\n    projectionScale,\n    projectionTranslation,\n    projectionRotation,\n    fillColor,\n    borderWidth,\n    borderColor,\n}) => {\n    const projection = useMemo(() => {\n        return projectionById[projectionType]()\n            .scale(projectionScale)\n            .translate([width * projectionTranslation[0], height * projectionTranslation[1]])\n            .rotate(projectionRotation)\n    }, [\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation[0],\n        projectionTranslation[1],\n        projectionRotation[0],\n        projectionRotation[1],\n        projectionRotation[2],\n    ])\n    const path = useMemo(() => geoPath(projection), [projection])\n    const graticule = useMemo(() => geoGraticule())\n\n    const theme = useTheme()\n    const getBorderWidth = useMemo(\n        () => (typeof borderWidth === 'function' ? borderWidth : () => borderWidth),\n        [borderWidth]\n    )\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getFillColor = useMemo(\n        () => (typeof fillColor === 'function' ? fillColor : () => fillColor),\n        [fillColor]\n    )\n\n    return {\n        projection,\n        path,\n        graticule,\n        getBorderWidth,\n        getBorderColor,\n        getFillColor,\n    }\n}\n\nexport const useChoropleth = ({\n    features,\n    data,\n    match,\n    label,\n    value,\n    valueFormat,\n    colors,\n    unknownColor,\n    domain,\n}) => {\n    const findMatchingDatum = useMemo(() => {\n        if (isFunction(match)) return match\n        return (feature, datum) => {\n            const featureKey = get(feature, match)\n            const datumKey = get(datum, match)\n\n            return featureKey && featureKey === datumKey\n        }\n    }, [match])\n    const getLabel = useMemo(() => (isFunction(label) ? label : datum => get(datum, label)), [\n        label,\n    ])\n    const getValue = useMemo(() => (isFunction(value) ? value : datum => get(datum, value)), [\n        value,\n    ])\n    const valueFormatter = useMemo(() => {\n        if (valueFormat === undefined) return d => d\n        if (isFunction(valueFormat)) return valueFormat\n        return format(valueFormat)\n    }, [valueFormat])\n\n    const colorScale = useMemo(() => guessQuantizeColorScale(colors).domain(domain), [\n        colors,\n        domain,\n    ])\n    const getFillColor = useMemo(() => {\n        return feature => {\n            if (feature.value === undefined) return unknownColor\n            return colorScale(feature.value)\n        }\n    }, [colorScale, unknownColor])\n\n    const boundFeatures = useMemo(\n        () =>\n            features.map(feature => {\n                const datum = data.find(datum => findMatchingDatum(feature, datum))\n                const datumValue = getValue(datum)\n\n                if (datum) {\n                    const featureWithData = {\n                        ...feature,\n                        data: datum,\n                        value: datumValue,\n                        formattedValue: valueFormatter(datumValue),\n                    }\n                    featureWithData.color = getFillColor(featureWithData)\n                    featureWithData.label = getLabel(featureWithData)\n\n                    return featureWithData\n                }\n\n                return feature\n            }),\n        [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]\n    )\n\n    const legendData = useQuantizeColorScaleLegendData({\n        scale: colorScale,\n        valueFormat: valueFormatter,\n    })\n\n    return {\n        colorScale,\n        getFillColor,\n        boundFeatures,\n        valueFormatter,\n        legendData,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChoroplethTooltip = memo(({ feature }) => {\n    if (feature.data === undefined) return null\n\n    return (\n        <BasicTooltip\n            id={feature.label}\n            color={feature.color}\n            enableChip={true}\n            value={feature.formattedValue}\n        />\n    )\n})\n\nChoroplethTooltip.propTypes = {\n    feature: PropTypes.object.isRequired,\n}\n\nChoroplethTooltip.displayName = 'ChoroplethTooltip'\n\nexport default ChoroplethTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { projectionById } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst commonPropTypes = {\n    features: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.oneOf(['Feature']).isRequired,\n            properties: PropTypes.object,\n            geometry: PropTypes.object.isRequired,\n        })\n    ).isRequired,\n\n    projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n    projectionScale: PropTypes.number.isRequired,\n    projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n    projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGraticule: PropTypes.bool.isRequired,\n    graticuleLineWidth: PropTypes.number.isRequired,\n    graticuleLineColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const GeoMapPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const GeoMapCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonChoroplethPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    colors: quantizeColorScalePropType.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    unknownColor: PropTypes.string.isRequired,\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const ChoroplethPropTypes = {\n    ...GeoMapPropTypes,\n    ...commonChoroplethPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChoroplethCanvasPropTypes = {\n    ...GeoMapCanvasPropTypes,\n    ...commonChoroplethPropTypes,\n}\n\nconst commonDefaultProps = {\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: false,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#999999',\n\n    fillColor: '#dddddd',\n    borderWidth: 0,\n    borderColor: '#000000',\n\n    isInteractive: true,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseMove: () => {},\n    onClick: () => {},\n\n    layers: ['graticule', 'features'],\n    legends: [],\n}\n\nexport const GeoMapDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const GeoMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n\nconst commonChoroplethDefaultProps = {\n    match: 'id',\n    label: 'id',\n    value: 'value',\n    colors: 'PuBuGn',\n    unknownColor: '#999',\n    tooltip: ChoroplethTooltip,\n    layers: ['graticule', 'features', 'legends'],\n}\n\nexport const ChoroplethDefaultProps = {\n    ...GeoMapDefaultProps,\n    ...commonChoroplethDefaultProps,\n    role: 'img',\n}\n\nexport const ChoroplethCanvasDefaultProps = {\n    ...GeoMapCanvasDefaultProps,\n    ...commonChoroplethDefaultProps,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoGraticule = memo(({ path, graticule, lineWidth, lineColor }) => {\n    return <path fill=\"none\" strokeWidth={lineWidth} stroke={lineColor} d={path(graticule())} />\n})\n\nGeoGraticule.propTypes = {\n    path: PropTypes.func.isRequired,\n    graticule: PropTypes.func.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineColor: PropTypes.string.isRequired,\n}\n\nGeoGraticule.displayName = 'GeoGraticule'\n\nexport default GeoGraticule\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoMapFeature = memo(\n    ({\n        feature,\n        path,\n        fillColor,\n        borderWidth,\n        borderColor,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }) => {\n        return (\n            <path\n                key={feature.id}\n                fill={fillColor}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                strokeLinejoin=\"bevel\"\n                d={path(feature)}\n                onMouseEnter={event => onMouseEnter(feature, event)}\n                onMouseMove={event => onMouseMove(feature, event)}\n                onMouseLeave={event => onMouseLeave(feature, event)}\n                onClick={event => onClick(feature, event)}\n            />\n        )\n    }\n)\n\nGeoMapFeature.propTypes = {\n    feature: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['Feature']).isRequired,\n        properties: PropTypes.object,\n        geometry: PropTypes.object.isRequired,\n    }).isRequired,\n    path: PropTypes.func.isRequired,\n\n    fillColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nGeoMapFeature.displayName = 'GeoMapFeature'\n\nexport default GeoMapFeature\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment, useCallback, memo } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapPropTypes, GeoMapDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap } from './hooks'\n\nconst GeoMap = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        layers,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    } = props\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n    })\n\n    const theme = useTheme()\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {features.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n\n                return <Fragment key={i}>{layer(props)}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nGeoMap.displayName = 'GeoMap'\nGeoMap.propTypes = GeoMapPropTypes\nGeoMap.defaultProps = GeoMapDefaultProps\n\nexport default withContainer(GeoMap)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMap from './GeoMap'\n\nconst ResponsiveGeoMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMap\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapCanvasDefaultProps, GeoMapCanvasPropTypes } from './props'\nimport { useGeoMap } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst GeoMapCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        layers,\n\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n\n        fillColor,\n        borderWidth,\n        borderColor,\n\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap(\n        {\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor,\n            borderWidth,\n            borderColor,\n        }\n    )\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                features.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else {\n                layer(ctx, props)\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        features,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(() => {\n        if (!isInteractive || !Tooltip) return\n\n        const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n        if (feature) {\n            showTooltipFromEvent(<Tooltip feature={feature} />, event)\n        } else {\n            hideTooltip()\n        }\n        onMouseMove && onMouseMove(feature || null, event)\n    }, [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection])\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n    const handleClick = useCallback(() => {\n        if (!isInteractive || !onClick) return\n\n        const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n        if (feature) {\n            onClick(feature, event)\n        }\n    }, [isInteractive, canvasEl, features, projection, onClick])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nGeoMapCanvas.displatName = 'GeoMapCanvas'\nGeoMapCanvas.propTypes = GeoMapCanvasPropTypes\nGeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps\n\nexport default withContainer(GeoMapCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMapCanvas from './GeoMapCanvas'\n\nconst ResponsiveGeoMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, Fragment, useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethPropTypes, ChoroplethDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst Choropleth = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    }) => {\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        const theme = useTheme()\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleClick = useCallback(\n            (feature, event) => isInteractive && onClick && onClick(feature, event),\n            [isInteractive, onClick]\n        )\n        const handleMouseEnter = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseMove = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layer === 'graticule') {\n                        if (enableGraticule !== true) return null\n\n                        return (\n                            <GeoGraticule\n                                key=\"graticule\"\n                                path={path}\n                                graticule={graticule}\n                                lineWidth={graticuleLineWidth}\n                                lineColor={graticuleLineColor}\n                            />\n                        )\n                    }\n                    if (layer === 'features') {\n                        return (\n                            <Fragment key=\"features\">\n                                {boundFeatures.map(feature => (\n                                    <GeoMapFeature\n                                        key={feature.id}\n                                        feature={feature}\n                                        path={path}\n                                        fillColor={getFillColor(feature)}\n                                        borderWidth={getBorderWidth(feature)}\n                                        borderColor={getBorderColor(feature)}\n                                        onMouseEnter={handleMouseEnter}\n                                        onMouseMove={handleMouseMove}\n                                        onMouseLeave={handleMouseLeave}\n                                        onClick={handleClick}\n                                    />\n                                ))}\n                            </Fragment>\n                        )\n                    }\n                    if (layer === 'legends') {\n                        return legends.map((legend, i) => {\n                            return (\n                                <BoxLegendSvg\n                                    key={i}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    {...legend}\n                                />\n                            )\n                        })\n                    }\n\n                    return <Fragment key={i}>{layer({})}</Fragment>\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nChoropleth.displayName = 'Choropleth'\nChoropleth.propTypes = ChoroplethPropTypes\nChoropleth.defaultProps = ChoroplethDefaultProps\n\nexport default withContainer(Choropleth)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Choropleth from './Choropleth'\n\nconst ResponsiveChoropleth = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Choropleth width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoropleth\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethCanvasDefaultProps, ChoroplethCanvasPropTypes } from './props'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst ChoroplethCanvas = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    }) => {\n        const canvasEl = useRef(null)\n        const theme = useTheme()\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { projection, graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        useEffect(() => {\n            if (!canvasEl) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            path.context(ctx)\n\n            layers.forEach(layer => {\n                if (layer === 'graticule') {\n                    if (enableGraticule === true) {\n                        ctx.lineWidth = graticuleLineWidth\n                        ctx.strokeStyle = graticuleLineColor\n                        ctx.beginPath()\n                        path(graticule())\n                        ctx.stroke()\n                    }\n                } else if (layer === 'features') {\n                    boundFeatures.forEach(feature => {\n                        ctx.beginPath()\n                        path(feature)\n                        ctx.fillStyle = getFillColor(feature)\n                        ctx.fill()\n\n                        const borderWidth = getBorderWidth(feature)\n                        if (borderWidth > 0) {\n                            ctx.strokeStyle = getBorderColor(feature)\n                            ctx.lineWidth = borderWidth\n                            ctx.stroke()\n                        }\n                    })\n                } else if (layer === 'legends') {\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: width,\n                            containerHeight: height,\n                            theme,\n                        })\n                    })\n                } else {\n                    // layer(ctx, {})\n                }\n            })\n        }, [\n            canvasEl,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            path,\n            graticule,\n            getFillColor,\n            getBorderWidth,\n            getBorderColor,\n            boundFeatures,\n            legends,\n            layers,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleMouseMove = useCallback(() => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(\n                event,\n                canvasEl.current,\n                boundFeatures,\n                projection\n            )\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        }, [\n            showTooltipFromEvent,\n            hideTooltip,\n            isInteractive,\n            Tooltip,\n            canvasEl,\n            boundFeatures,\n            projection,\n        ])\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n        const handleClick = useCallback(() => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(\n                event,\n                canvasEl.current,\n                boundFeatures,\n                projection\n            )\n            if (feature) {\n                onClick(feature, event)\n            }\n        }, [isInteractive, canvasEl, boundFeatures, projection, onClick])\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChoroplethCanvas.displayName = 'ChoroplethCanvas'\nChoroplethCanvas.propTypes = ChoroplethCanvasPropTypes\nChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps\n\nexport default withContainer(ChoroplethCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChoroplethCanvas from './ChoroplethCanvas'\n\nconst ResponsiveChoroplethCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChoroplethCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoroplethCanvas\n"],"sourceRoot":""}