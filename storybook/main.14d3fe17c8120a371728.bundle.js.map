{"version":3,"file":"main.14d3fe17c8120a371728.bundle.js","sources":["webpack:///./packages/treemap/src/props.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { noop } from '@nivo/core'\nimport { treeMapTilePropType, defsPropTypes } from '@nivo/core'\nimport TreeMapNode from './TreeMapNode'\nimport TreeMapHtmlNode from './TreeMapHtmlNode'\n\n/*—————————————————————————————————————————————————————————————————————————————\n\n  Prop types\n\n—————————————————————————————————————————————————————————————————————————————*/\n\nconst commonPropTypes = {\n    // data\n    // `root` managed by `withHierarchy()` HOC\n    identity: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    // dimensions managed by `withDimensions()` HOC\n\n    // styling\n    // theme managed by `withTheme()` HOC\n    // colors managed by `withColors()` HOC\n\n    leavesOnly: PropTypes.bool.isRequired,\n    tile: treeMapTilePropType.isRequired,\n    innerPadding: PropTypes.number.isRequired,\n    outerPadding: PropTypes.number.isRequired,\n\n    // labels\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.string,\n    labelSkipSize: PropTypes.number.isRequired,\n    orientLabel: PropTypes.bool.isRequired,\n\n    // border\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.any.isRequired,\n\n    // interactivity\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n}\n\nexport const TreeMapPropTypes = {\n    ...commonPropTypes,\n    nodeComponent: PropTypes.func.isRequired,\n    ...defsPropTypes,\n}\n\nexport const TreeMapHtmlPropTypes = {\n    ...commonPropTypes,\n    nodeComponent: PropTypes.func.isRequired,\n}\n\nexport const TreeMapCanvasPropTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\n/*—————————————————————————————————————————————————————————————————————————————\n\n  Default props\n\n—————————————————————————————————————————————————————————————————————————————*/\n\nconst commonDefaultProps = {\n    // data\n    identity: 'id',\n\n    tile: 'squarify',\n    leavesOnly: false,\n\n    // labels\n    enableLabel: true,\n    label: 'id',\n    labelSkipSize: 0,\n    labelTextColor: 'inherit:darker(1)',\n    orientLabel: true,\n\n    innerPadding: 0,\n    outerPadding: 0,\n\n    borderWidth: 0,\n    borderColor: 'inherit',\n\n    // interactivity\n    isInteractive: true,\n    onClick: noop,\n}\n\nexport const TreeMapDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapNode,\n    defs: [],\n    fill: [],\n}\n\nexport const TreeMapHtmlDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapHtmlNode,\n}\n\nexport const TreeMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n"],"mappings":"AAoBA","sourceRoot":""}