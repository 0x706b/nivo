{"version":3,"sources":["webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../src/compute.js","webpack:///../src/hooks.js","webpack:///../src/Node.js","webpack:///../src/Tooltip.js","webpack:///../src/props.js","webpack:///../src/NodeWrapper.js","webpack:///../src/AnimatedNodes.js","webpack:///../src/ScatterPlotAnnotations.js","webpack:///../src/StaticNodes.js","webpack:///../src/Mesh.js","webpack:///../src/ScatterPlot.js","webpack:///../src/ResponsiveScatterPlot.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/ScatterPlotCanvas.js","webpack:///../src/ResponsiveScatterPlotCanvas.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","_toConsumableArray","isArray","arrayWithoutHoles","iter","Symbol","iterator","iterableToArray","unsupportedIterableToArray","TypeError","nonIterableSpread","useNodeSize","size","useMemo","isNumber","isPlainObject","isString","sizeScale","scaleLinear","d","get","getNodeSizeGenerator","useScatterPlot","data","xScaleSpec","xFormat","yScaleSpec","yFormat","width","height","nodeId","nodeSize","colors","computeXYScalesForSeries","series","xScale","yScale","formatX","useValueFormatter","formatY","getNodeId","usePropertyAccessor","rawNodes","serie","id","serieId","index","agg","x","y","formattedX","formattedY","computePoints","getNodeSize","getColor","useOrdinalColorScale","nodes","rawNode","style","color","legendData","label","useScatterPlotAnnotations","items","useAnnotations","annotations","getPosition","node","getDimensions","offset","Node","blendMode","onMouseEnter","onMouseMove","onMouseLeave","onClick","cx","cy","r","fill","mixBlendMode","memo","Tooltip","enableChip","commonPropTypes","PropTypes","isRequired","layers","enableGridX","enableGridY","axisTop","axisRight","axisBottom","axisLeft","values","sizes","renderNode","ordinalColorsPropType","blendModePropType","isInteractive","debugMesh","tooltip","markers","axis","legends","commonDefaultProps","role","useMesh","pixelRatio","type","min","max","scheme","ScatterPlotDefaultProps","animate","motionStiffness","motionDamping","ScatterPlotCanvasDefaultProps","window","NodePropType","NodeWrapper","NodeComponent","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","createElement","handleMouseMove","handleMouseLeave","handleClick","undefined","AnimatedNodes","springConfig","useMotionConfig","styles","spring","interpolatedStyles","ScatterPlotAnnotations","_jsx","StaticNodes","Mesh","debug","ScatterPlot","props","partialMargin","gridXValues","gridYValues","useDimensions","margin","innerWidth","innerHeight","outerWidth","outerHeight","theme","useTheme","customLayerProps","Nodes","layerById","grid","xValues","yValues","axes","top","right","bottom","left","mesh","containerWidth","containerHeight","layer","withContainer","ResponsiveScatterPlot","_slicedToArray","arrayWithHoles","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","nonIterableRest","ScatterPlotCanvas","canvasEl","useRef","useState","currentNode","setCurrentNode","boundAnnotations","useVoronoiMesh","points","delaunay","voronoi","useEffect","ctx","renderGridLinesToCanvas","scale","renderAnnotationsToCanvas","renderAxesToCanvas","renderVoronoiToCanvas","renderVoronoiCellToCanvas","legend","renderLegendToCanvas","getNodeFromMouseEvent","getRelativeCursor","isCursorInRect","nodeIndex","handleMouseHover","ref","cursor","Math","ResponsiveScatterPlotCanvas"],"mappings":"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","file":"bb41d583f6edc9b0b4a8d3a273e4376ae412b395-efd97c85557394df434c.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport get from 'lodash/get'\nimport isString from 'lodash/isString'\nimport isNumber from 'lodash/isNumber'\nimport isPlainObject from 'lodash/isPlainObject'\nimport { scaleLinear } from 'd3-scale'\n\nexport const getNodeSizeGenerator = size => {\n    if (typeof size === 'function') return size\n    if (isNumber(size)) return () => size\n    if (isPlainObject(size)) {\n        if (!isString(size.key)) {\n            throw new Error(\n                'symbolSize is invalid, key should be a string pointing to the property to use to determine node size'\n            )\n        }\n        if (!Array.isArray(size.values) || size.values.length !== 2) {\n            throw new Error(\n                'symbolSize is invalid, values spec should be an array containing two values, min and max'\n            )\n        }\n        if (!Array.isArray(size.sizes) || size.sizes.length !== 2) {\n            throw new Error(\n                'symbolSize is invalid, sizes spec should be an array containing two values, min and max'\n            )\n        }\n\n        const sizeScale = scaleLinear()\n            .domain([size.values[0], size.values[1]])\n            .range([size.sizes[0], size.sizes[1]])\n\n        return d => sizeScale(get(d, size.key))\n    }\n\n    throw new Error('symbolSize is invalid, it should be either a function, a number or an object')\n}\n\nexport const computePoints = ({ series, formatX, formatY, getNodeId }) => {\n    return series.reduce(\n        (agg, serie) => [\n            ...agg,\n            ...serie.data.map((d, index) => {\n                const id = getNodeId({ serieId: serie.id, index, ...d.data })\n\n                return {\n                    index: agg.length + index,\n                    id,\n                    x: d.position.x,\n                    y: d.position.y,\n                    data: {\n                        ...d.data,\n                        id,\n                        serieId: serie.id,\n                        formattedX: formatX(d.data.x),\n                        formattedY: formatY(d.data.y),\n                    },\n                }\n            }),\n        ],\n        []\n    )\n}\n\nexport const computeLegendData = ({ series }) => {\n    return series.map(serie => ({\n        id: serie.id,\n        label: serie.id,\n        //color: getColor({ serie }),\n    }))\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { useValueFormatter, usePropertyAccessor } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { useAnnotations } from '@nivo/annotations'\nimport { computePoints, getNodeSizeGenerator } from './compute'\n\nconst useNodeSize = size => useMemo(() => getNodeSizeGenerator(size), [size])\n\nexport const useScatterPlot = ({\n    data,\n    xScaleSpec,\n    xFormat,\n    yScaleSpec,\n    yFormat,\n    width,\n    height,\n    nodeId,\n    nodeSize,\n    colors,\n}) => {\n    const { series, xScale, yScale } = useMemo(\n        () => computeXYScalesForSeries(data, xScaleSpec, yScaleSpec, width, height),\n        [data, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getNodeId = usePropertyAccessor(nodeId)\n    const rawNodes = useMemo(() => computePoints({ series, formatX, formatY, getNodeId }), [\n        series,\n        formatX,\n        formatY,\n        getNodeId,\n    ])\n\n    const getNodeSize = useNodeSize(nodeSize)\n\n    const getColor = useOrdinalColorScale(colors, 'serieId')\n\n    const nodes = useMemo(\n        () =>\n            rawNodes.map(rawNode => {\n                return {\n                    ...rawNode,\n                    size: getNodeSize(rawNode.data),\n                    style: {\n                        color: getColor(rawNode.data),\n                    },\n                }\n            }),\n        [rawNodes, getNodeSize, getColor]\n    )\n\n    const legendData = useMemo(\n        () =>\n            series.map(serie => ({\n                id: serie.id,\n                label: serie.id,\n                color: getColor({ serieId: serie.id }),\n            })),\n        [series, getColor]\n    )\n\n    return {\n        xScale,\n        yScale,\n        nodes,\n        legendData,\n    }\n}\n\nexport const useScatterPlotAnnotations = (items, annotations) =>\n    useAnnotations({\n        data: items,\n        annotations,\n        getPosition: node => ({\n            x: node.x,\n            y: node.y,\n        }),\n        getDimensions: (node, offset) => {\n            const size = node.size + offset * 2\n\n            return { size, width: size, height: size }\n        },\n    })\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { blendModePropType } from '@nivo/core'\n\nconst Node = ({\n    x,\n    y,\n    size,\n    color,\n    blendMode,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}) => (\n    <circle\n        cx={x}\n        cy={y}\n        r={size / 2}\n        fill={color}\n        style={{ mixBlendMode: blendMode }}\n        onMouseEnter={onMouseEnter}\n        onMouseMove={onMouseMove}\n        onMouseLeave={onMouseLeave}\n        onClick={onClick}\n    />\n)\n\nNode.propTypes = {\n    node: PropTypes.object.isRequired,\n\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    blendMode: blendModePropType.isRequired,\n\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default memo(Node)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst Tooltip = ({ node }) => {\n    return (\n        <BasicTooltip\n            id={node.data.serieId}\n            value={`x: ${node.data.formattedX}, y: ${node.data.formattedY}`}\n            enableChip={true}\n            color={node.style.color}\n        />\n    )\n}\n\nTooltip.propTypes = {\n    node: PropTypes.object.isRequired,\n}\n\nexport default memo(Tooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes, blendModePropType } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { LegendPropShape } from '@nivo/legends'\nimport Node from './Node'\nimport Tooltip from './Tooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]).isRequired,\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    xScale: PropTypes.object.isRequired,\n    xFormat: PropTypes.any,\n    yScale: PropTypes.object.isRequired,\n    yFormat: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['grid', 'axes', 'nodes', 'markers', 'mesh', 'legends', 'annotations']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    annotations: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    nodeSize: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            values: PropTypes.arrayOf(PropTypes.number).isRequired,\n            sizes: PropTypes.arrayOf(PropTypes.number).isRequired,\n        }),\n        PropTypes.func,\n    ]).isRequired,\n    renderNode: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    blendMode: blendModePropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n}\n\nexport const ScatterPlotPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n}\n\nexport const ScatterPlotCanvasPropTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nconst commonDefaultProps = {\n    xScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    enableGridX: true,\n    enableGridY: true,\n    axisBottom: {},\n    axisLeft: {},\n\n    nodeId: ({ serieId, index }) => `${serieId}.${index}`,\n    nodeSize: 9,\n    renderNode: Node,\n\n    colors: { scheme: 'nivo' },\n    blendMode: 'normal',\n\n    isInteractive: true,\n    debugMesh: false,\n\n    tooltip: Tooltip,\n\n    markers: [],\n\n    legends: [],\n\n    annotations: [],\n}\n\nexport const ScatterPlotDefaultProps = {\n    ...commonDefaultProps,\n    layers: ['grid', 'axes', 'nodes', 'markers', 'mesh', 'legends', 'annotations'],\n    role: 'img',\n    useMesh: true,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n}\n\nexport const ScatterPlotCanvasDefaultProps = {\n    ...commonDefaultProps,\n    layers: ['grid', 'axes', 'nodes', 'mesh', 'legends', 'annotations'],\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nexport const NodePropType = PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    data: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        serieId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        x: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n            .isRequired,\n        formattedX: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        y: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n            .isRequired,\n        formattedY: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    }).isRequired,\n    style: PropTypes.shape({\n        color: PropTypes.string.isRequired,\n    }).isRequired,\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { blendModePropType } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { NodePropType } from './props'\n\nconst NodeWrapper = ({\n    node,\n    renderNode: NodeComponent,\n    x,\n    y,\n    size,\n    color,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    blendMode,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseEnter && onMouseEnter(node, event)\n        },\n        [node, tooltip, showTooltipFromEvent, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseMove && onMouseMove(node, event)\n        },\n        [node, tooltip, showTooltipFromEvent, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            onMouseLeave && onMouseLeave(node, event)\n        },\n        [node, hideTooltip, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(node, event)\n        },\n        [node, onClick]\n    )\n\n    return createElement(NodeComponent, {\n        node,\n        x,\n        y,\n        size,\n        color,\n        blendMode,\n        onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n        onMouseMove: isInteractive ? handleMouseMove : undefined,\n        onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n        onClick: isInteractive && onClick ? handleClick : undefined,\n    })\n}\n\nNodeWrapper.propTypes = {\n    node: NodePropType.isRequired,\n    renderNode: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    blendMode: blendModePropType.isRequired,\n}\n\nexport default memo(NodeWrapper)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { useMotionConfig, blendModePropType } from '@nivo/core'\nimport { NodePropType } from './props'\nimport NodeWrapper from './NodeWrapper'\n\nconst AnimatedNodes = ({\n    nodes,\n    renderNode,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    blendMode,\n}) => {\n    const { springConfig } = useMotionConfig()\n\n    return (\n        <TransitionMotion\n            styles={nodes.map(node => ({\n                key: node.id,\n                data: node,\n                style: {\n                    x: spring(node.x, springConfig),\n                    y: spring(node.y, springConfig),\n                    size: spring(node.size, springConfig),\n                },\n            }))}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: node }) => (\n                        <NodeWrapper\n                            key={key}\n                            node={node}\n                            renderNode={renderNode}\n                            x={style.x}\n                            y={style.y}\n                            size={style.size}\n                            color={node.style.color}\n                            isInteractive={isInteractive}\n                            onMouseEnter={onMouseEnter}\n                            onMouseMove={onMouseMove}\n                            onMouseLeave={onMouseLeave}\n                            onClick={onClick}\n                            tooltip={tooltip}\n                            blendMode={blendMode}\n                        />\n                    ))}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nAnimatedNodes.propTypes = {\n    nodes: PropTypes.arrayOf(NodePropType).isRequired,\n    renderNode: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    blendMode: blendModePropType.isRequired,\n}\n\nexport default memo(AnimatedNodes)\n","import { Annotation } from '@nivo/annotations'\nimport { useScatterPlotAnnotations } from './hooks'\n\nconst ScatterPlotAnnotations = ({ nodes, annotations }) => {\n    const boundAnnotations = useScatterPlotAnnotations(nodes, annotations)\n\n    return boundAnnotations.map((annotation, i) => <Annotation key={i} {...annotation} />)\n}\n\nScatterPlotAnnotations.propTypes = {}\n\nexport default ScatterPlotAnnotations\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { blendModePropType } from '@nivo/core'\nimport { NodePropType } from './props'\nimport NodeWrapper from './NodeWrapper'\n\nconst StaticNodes = ({\n    nodes,\n    renderNode,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    blendMode,\n}) => {\n    return nodes.map(node => (\n        <NodeWrapper\n            key={node.id}\n            node={node}\n            renderNode={renderNode}\n            x={node.x}\n            y={node.y}\n            size={node.size}\n            color={node.style.color}\n            isInteractive={isInteractive}\n            onMouseEnter={onMouseEnter}\n            onMouseMove={onMouseMove}\n            onMouseLeave={onMouseLeave}\n            onClick={onClick}\n            tooltip={tooltip}\n            blendMode={blendMode}\n        />\n    ))\n}\n\nStaticNodes.propTypes = {\n    nodes: PropTypes.arrayOf(NodePropType).isRequired,\n    renderNode: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    blendMode: blendModePropType.isRequired,\n}\n\nexport default memo(StaticNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\nimport { NodePropType } from './props'\n\nconst Mesh = ({\n    nodes,\n    width,\n    height,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseEnter && onMouseEnter(node, event)\n        },\n        [showTooltipFromEvent, tooltip, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (node, event) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event)\n            onMouseMove && onMouseMove(node, event)\n        },\n        [showTooltipFromEvent, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (node, event) => {\n            hideTooltip()\n            onMouseLeave && onMouseLeave(node, event)\n        },\n        [hideTooltip, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (node, event) => {\n            onClick && onClick(node, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={nodes}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    nodes: PropTypes.arrayOf(NodePropType).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, Fragment, useMemo } from 'react'\nimport {\n    SvgWrapper,\n    withContainer,\n    useDimensions,\n    useTheme,\n    useMotionConfig,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useScatterPlot } from './hooks'\nimport { ScatterPlotPropTypes, ScatterPlotDefaultProps } from './props'\nimport AnimatedNodes from './AnimatedNodes'\nimport ScatterPlotAnnotations from './ScatterPlotAnnotations'\nimport StaticNodes from './StaticNodes'\nimport Mesh from './Mesh'\n\nconst ScatterPlot = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        colors,\n        blendMode,\n\n        nodeId,\n        nodeSize,\n        renderNode,\n\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n\n        annotations,\n\n        isInteractive,\n        useMesh,\n        debugMesh,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n\n        markers,\n\n        legends,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const theme = useTheme()\n    const { animate } = useMotionConfig()\n\n    const { xScale, yScale, nodes, legendData } = useScatterPlot({\n        data,\n        xScaleSpec,\n        xFormat,\n        yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        nodeId,\n        nodeSize,\n        colors,\n    })\n\n    const customLayerProps = useMemo(\n        () => ({\n            ...props,\n            xScale,\n            yScale,\n            nodes,\n            margin,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n        }),\n        [xScale, yScale, nodes, margin, innerWidth, innerHeight, outerWidth, outerHeight]\n    )\n\n    const Nodes = animate ? AnimatedNodes : StaticNodes\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        nodes: createElement(Nodes, {\n            key: 'nodes',\n            nodes,\n            renderNode,\n            isInteractive,\n            onMouseEnter,\n            onMouseMove,\n            onMouseLeave,\n            onClick,\n            tooltip,\n            blendMode,\n        }),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n            />\n        ),\n        mesh: null,\n        annotations: (\n            <ScatterPlotAnnotations\n                key=\"annotations\"\n                nodes={nodes}\n                annotations={annotations}\n                innerWidth={innerWidth}\n                innerHeight={innerHeight}\n                animate={animate}\n            />\n        ),\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legendData}\n                theme={theme}\n            />\n        )),\n    }\n\n    if (isInteractive === true && useMesh === true) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                nodes={nodes}\n                width={innerWidth}\n                height={innerHeight}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer] !== undefined) {\n                    return layerById[layer]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                throw new Error(`Unknown layer (${layer})`)\n            })}\n        </SvgWrapper>\n    )\n}\n\nScatterPlot.propTypes = ScatterPlotPropTypes\nScatterPlot.defaultProps = ScatterPlotDefaultProps\n\nexport default memo(withContainer(ScatterPlot))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ScatterPlot from './ScatterPlot'\n\nconst ResponsiveScatterPlot = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ScatterPlot width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveScatterPlot\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useRef, useState, useEffect, useCallback, useMemo } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAnnotationsToCanvas } from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { ScatterPlotCanvasPropTypes, ScatterPlotCanvasDefaultProps } from './props'\nimport { useScatterPlot, useScatterPlotAnnotations } from './hooks'\n\nconst ScatterPlotCanvas = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n\n        layers,\n\n        colors,\n\n        nodeSize,\n        renderNode,\n\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n\n        annotations,\n\n        isInteractive,\n        debugMesh,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n\n        legends,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const [currentNode, setCurrentNode] = useState(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { xScale, yScale, nodes, legendData } = useScatterPlot({\n        data,\n        xScaleSpec,\n        xFormat,\n        yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        nodeSize,\n        colors,\n    })\n\n    const boundAnnotations = useScatterPlotAnnotations(nodes, annotations)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    const customLayerProps = useMemo(\n        () => ({\n            ...props,\n            xScale,\n            yScale,\n            nodes,\n            margin,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n        }),\n        [xScale, yScale, nodes, margin, innerWidth, innerHeight, outerWidth, outerHeight]\n    )\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'nodes') {\n                nodes.forEach(node => {\n                    renderNode(ctx, node)\n                })\n            } else if (layer === 'mesh') {\n                if (debugMesh === true) {\n                    renderVoronoiToCanvas(ctx, voronoi)\n                    if (currentNode) {\n                        renderVoronoiCellToCanvas(ctx, voronoi, currentNode.index)\n                    }\n                }\n            } else if (layer === 'legends') {\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, customLayerProps)\n            } else {\n                throw new Error(`Invalid layer: ${layer}`)\n            }\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        renderNode,\n        layers,\n        customLayerProps,\n        theme,\n        xScale,\n        yScale,\n        nodes,\n        enableGridX,\n        enableGridY,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        legendData,\n        debugMesh,\n        voronoi,\n        currentNode,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const getNodeFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const nodeIndex = delaunay.find(x - margin.left, y - margin.top)\n            return nodes[nodeIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const handleMouseHover = useCallback(\n        event => {\n            const node = getNodeFromMouseEvent(event)\n            setCurrentNode(node)\n\n            if (node) {\n                showTooltipFromEvent(createElement(tooltip, { node }), event)\n                if (currentNode && currentNode.id !== node.id) {\n                    onMouseLeave && onMouseLeave(currentNode, event)\n                    onMouseEnter && onMouseEnter(node, event)\n                }\n                if (!currentNode) {\n                    onMouseEnter && onMouseEnter(node, event)\n                }\n                onMouseMove && onMouseMove(node, event)\n            } else {\n                hideTooltip()\n                currentNode && onMouseLeave && onMouseLeave(currentNode, event)\n            }\n        },\n        [\n            getNodeFromMouseEvent,\n            currentNode,\n            setCurrentNode,\n            showTooltipFromEvent,\n            hideTooltip,\n            tooltip,\n            onMouseEnter,\n            onMouseMove,\n            onMouseLeave,\n        ]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentNode(null)\n            currentNode && onMouseLeave && onMouseLeave(currentNode, event)\n        },\n        [hideTooltip, currentNode, setCurrentNode, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const node = getNodeFromMouseEvent(event)\n                node && onClick(node, event)\n            }\n        },\n        [getNodeFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nScatterPlotCanvas.propTypes = ScatterPlotCanvasPropTypes\nScatterPlotCanvas.defaultProps = {\n    ...ScatterPlotCanvasDefaultProps,\n    renderNode: (ctx, node) => {\n        ctx.beginPath()\n        ctx.arc(node.x, node.y, node.size / 2, 0, 2 * Math.PI)\n        ctx.fillStyle = node.style.color\n        ctx.fill()\n    },\n}\n\nexport default memo(withContainer(ScatterPlotCanvas))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ScatterPlotCanvas from './ScatterPlotCanvas'\n\nconst ResponsiveScatterPlotCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ScatterPlotCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveScatterPlotCanvas\n"],"sourceRoot":""}