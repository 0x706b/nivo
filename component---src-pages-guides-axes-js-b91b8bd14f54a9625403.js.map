{"version":3,"sources":["webpack:///./src/components/styled.js","webpack:///./src/components/PageContent.js","webpack:///./src/components/guides/axes/scales.js","webpack:///./src/components/guides/axes/theme.js","webpack:///./src/components/guides/axes/AxesPosition.js","webpack:///./src/components/guides/axes/AxesTicks.js","webpack:///./src/components/guides/axes/AxesLegend.js","webpack:///./src/pages/guides/axes.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/compute.js","webpack:///../src/props.js","webpack:///../src/components/AxisTick.js","webpack:///../src/components/Axis.js","webpack:///../src/components/Axes.js","webpack:///../src/components/GridLine.js","webpack:///../src/components/GridLines.js","webpack:///../src/components/Grid.js","webpack:///../src/utils.js","webpack:///../src/canvas.js"],"names":["FullWidthBanner","styled","div","theme","colors","cardBackground","DescriptionBlock","media","tablet","mobile","Card","cardShadow","linearXScale","scaleLinear","range","domain","type","linearYScale","pointXScale","scalePoint","timeXScale","scaleTime","Date","timeXScaleHours","UTC","useAxisTheme","useTheme","useMemo","nivo","axis","line","strokeWidth","legend","text","fill","accent","AxesPosition","id","className","role","width","height","transform","animate","xScale","yScale","motionStiffness","motionDamping","top","legendPosition","legendOffset","right","bottom","left","AxesTicks","href","target","rel","style","justifyContent","alignItems","scale","tickValues","length","ticksPosition","format","axisPositions","AxesLegend","map","position","i","key","Axes","render","Layout","title","PageContent","to","Component","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","centerScale","bandwidth","offset","Math","d","timeByType","millisecond","second","minute","hour","day","week","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month","year","timeTypes","timeIntervalRegexp","RegExp","isInteger","isFinite","getScaleTicks","Array","spec","matches","timeType","Number","computeCartesianTicks","tickSize","tickPadding","tickRotation","engine","values","textProps","textPropsByEngine","lineX","lineY","textX","textY","textAlign","textBaseline","translate","x","y","ticks","getFormatter","f","timeFormat","d3Format","computeGridLines","_values","lineValues","lineCount","lines","v","x1","x2","y1","y2","axisPropTypes","PropTypes","renderTick","ariaHidden","bool","axisPropType","AxisTick","_value","onClick","textAnchor","animatedProps","gStyle","opacity","e","dominantBaseline","rotate","memo","Axis","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","springConfig","useSpring","lineX2","lineY2","config","immediate","transitions","useTransition","tick","initial","textTransform","from","enter","update","leave","aria-hidden","item","transitionProps","props","tickIndex","positions","axes","isXAxis","GridLine","xValues","yValues","xLines","yLines","degreesToRadians","degrees","renderAxisToCanvas","ctx","renderAxesToCanvas","renderGridLinesToCanvas"],"mappings":"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","file":"component---src-pages-guides-axes-js-b91b8bd14f54a9625403.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport const FullWidthBanner = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    margin-bottom: 40px;\n    padding: 20px;\n`\n\nexport const DescriptionBlock = styled.div`\n    max-width: 800px;\n    margin: 0 auto 50px;\n\n    ${media.tablet`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n`\n\nexport const Card = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    box-shadow: ${({ theme }) => theme.cardShadow};\n`\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport default styled.div`\n    margin: 0 50px;\n    position: relative;\n\n    ${media.tablet`\n        & {\n            margin: 0 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px;\n        }\n    `}\n`\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale'\n\nexport const linearXScale = scaleLinear().range([0, 280]).domain([0, 80])\nlinearXScale.type = 'linear'\n\nexport const linearYScale = scaleLinear().range([160, 0]).domain([0, 35])\nlinearYScale.type = 'linear'\n\nexport const pointXScale = scalePoint()\n    .range([0, 280])\n    .domain(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'])\npointXScale.type = 'point'\n\nexport const timeXScale = scaleTime()\n    .range([0, 280])\n    .domain([new Date(2019, 0, 1, 0, 0, 0, 0), new Date(2020, 0, 1, 0, 0, 0, 0)])\ntimeXScale.type = 'time'\n\nexport const timeXScaleHours = scaleTime()\n    .range([0, 280])\n    .domain([\n        new Date(Date.UTC(2020, 0, 1, 9, 0, 0, 0)),\n        new Date(Date.UTC(2020, 0, 1, 10, 0, 0, 0)),\n    ])\ntimeXScaleHours.type = 'time'\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { useTheme } from '../../../theming/context'\n\nexport const useAxisTheme = () => {\n    const theme = useTheme()\n    const nivoTheme = useMemo(() => {\n        return {\n            ...theme.nivo,\n            axis: {\n                ...theme.nivo.axis,\n                domain: {\n                    ...theme.nivo.axis.domain,\n                    line: {\n                        ...theme.nivo.axis.domain.line,\n                        strokeWidth: 1,\n                    },\n                },\n                legend: {\n                    ...theme.nivo.axis.legend,\n                    text: {\n                        ...theme.nivo.axis.legend.text,\n                        fill: theme.colors.accent,\n                    },\n                },\n            },\n        }\n    }, [theme])\n\n    return nivoTheme\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axes } from '@nivo/axes'\nimport { linearXScale, linearYScale } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst AxesPosition = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"position\">Axis position</h2>\n                <p>\n                    Axis position is determined by the property you use{' '}\n                    <strong>(top|right|bottom|left)Axis</strong>.\n                </p>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <div className=\"guide__illustrations\">\n                    <svg role=\"img\" width={380} height={260}>\n                        <g transform=\"translate(50,50)\">\n                            <ThemeProvider theme={theme}>\n                                <MotionConfigProvider animate={false}>\n                                    <Axes\n                                        xScale={linearXScale}\n                                        yScale={linearYScale}\n                                        width={280}\n                                        height={160}\n                                        animate={false}\n                                        motionStiffness={0}\n                                        motionDamping={0}\n                                        top={{\n                                            legend: 'axisTop',\n                                            legendPosition: 'middle',\n                                            legendOffset: -32,\n                                        }}\n                                        right={{\n                                            legend: 'axisRight',\n                                            legendPosition: 'middle',\n                                            legendOffset: 42,\n                                        }}\n                                        bottom={{\n                                            legend: 'axisBottom',\n                                            legendPosition: 'middle',\n                                            legendOffset: 38,\n                                        }}\n                                        left={{\n                                            legend: 'axisLeft',\n                                            legendPosition: 'middle',\n                                            legendOffset: -36,\n                                        }}\n                                    />\n                                </MotionConfigProvider>\n                            </ThemeProvider>\n                        </g>\n                    </svg>\n                </div>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesPosition\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { linearXScale, pointXScale, timeXScale, timeXScaleHours } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst AxesTicks = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"ticks\">Axis ticks</h2>\n                <p>\n                    Axes are composed of <strong>ticks</strong>, you can control the way they are\n                    computed and their aspect. By default, computing which ticks are displayed is\n                    managed by the corresponding{' '}\n                    <a\n                        href=\"https://github.com/d3/d3-scale\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        d3 scale\n                    </a>\n                    .\n                </p>\n                <h3 id=\"ticks-values\">Ticks values</h3>\n                <p>\n                    You can use the <code>tickValues</code> property in order to customize the\n                    displayed ticks, it accepts several forms:\n                </p>\n                <ul>\n                    <li>\n                        an array of values, which should be numbers for a linear scale, values being\n                        part of the dataset for point scales, or dates for time scales.\n                    </li>\n                    <li>\n                        a number which define the number of ticks to display,{' '}\n                        <strong>doesn't work with point scale</strong>, also note that when using\n                        this form{' '}\n                        <strong>\n                            it's not guaranteed that you'll have exactly the number of ticks you\n                            asked for\n                        </strong>{' '}\n                        as d3 will make an educated guess to define them.\n                    </li>\n                    <li>\n                        a time interval, for example <code>every day</code> or{' '}\n                        <code>every 15 minutes</code>,{' '}\n                        <strong>only works when using time scales</strong>.\n                    </li>\n                </ul>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <ThemeProvider theme={theme}>\n                    <MotionConfigProvider animate={false}>\n                        <div\n                            className=\"guide__illustrations\"\n                            style={{ justifyContent: 'center', alignItems: 'center' }}\n                        >\n                            <svg role=\"img\" width={380} height={191}>\n                                <g transform={`translate(50,50)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={pointXScale}\n                                        tickValues={['A', 'C', 'E', 'G', 'I']}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"point scale ['A', 'C', 'E', 'G', 'I']\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,120)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={linearXScale}\n                                        tickValues={[0, 20, 40, 60, 80]}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"linear scale [0, 20, 40, 60, 80]\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,190)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScale}\n                                        tickValues={[\n                                            new Date(2019, 0, 1, 0, 0, 0, 0),\n                                            new Date(2019, 6, 1, 0, 0, 0, 0),\n                                            new Date(2020, 0, 1, 0, 0, 0, 0),\n                                        ]}\n                                        length={280}\n                                        theme={theme}\n                                        format=\"%Y/%m\"\n                                        animate={false}\n                                        legend=\"time scale with three dates\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                            </svg>\n                            <svg role=\"img\" width={380} height={191}>\n                                <g transform={`translate(50,50)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScaleHours}\n                                        tickValues=\"every 15 minutes\"\n                                        format=\"%H:%M\"\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"time scale, every 15 minutes\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,120)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={linearXScale}\n                                        tickValues={5}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"linear scale, tickValues: 5\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,190)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScale}\n                                        tickValues={5}\n                                        length={280}\n                                        theme={theme}\n                                        format=\"%Y/%m\"\n                                        animate={false}\n                                        legend=\"time scale, tickValues: 5\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                            </svg>\n                        </div>\n                    </MotionConfigProvider>\n                </ThemeProvider>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesTicks\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { linearXScale, linearYScale } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst axisPositions = ['start', 'middle', 'end']\n\nconst AxesLegend = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"legend\">Axis legend</h2>\n                <p>\n                    You can optionally add a legend to an axis by setting the value of the{' '}\n                    <code>legend</code> property.\n                </p>\n                <h3 id=\"legend-position\">Legend position</h3>\n                <p>\n                    Legend position is controlled by two properties, <code>legendPosition</code> and{' '}\n                    <code>legendOffset</code>.<code>legendPosition</code> must be one of:{' '}\n                    <code>start</code>, <code>middle</code> or <code>end</code>,{' '}\n                    <code>legendOffset</code> will affect y position for <strong>top</strong> and{' '}\n                    <strong>bottom</strong> axes and x position for <strong>left</strong> and{' '}\n                    <strong>right</strong> axes.\n                </p>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <ThemeProvider theme={theme}>\n                    <MotionConfigProvider animate={false}>\n                        <div\n                            className=\"guide__illustrations\"\n                            style={{ justifyContent: 'center', alignItems: 'center' }}\n                        >\n                            <svg role=\"img\" width={380} height={180}>\n                                {axisPositions.map((position, i) => (\n                                    <g key={position} transform={`translate(50,${i * 70 + 40})`}>\n                                        <Axis\n                                            axis=\"x\"\n                                            scale={linearXScale}\n                                            length={280}\n                                            animate={false}\n                                            motionStiffness={0}\n                                            motionDamping={0}\n                                            legend={position}\n                                            legendPosition={position}\n                                            legendOffset={-32}\n                                            ticksPosition=\"before\"\n                                        />\n                                    </g>\n                                ))}\n                            </svg>\n                            <svg role=\"img\" width={260} height={260}>\n                                {axisPositions.map((position, i) => (\n                                    <g key={position} transform={`translate(${i * 90 + 50},50)`}>\n                                        <Axis\n                                            axis=\"y\"\n                                            scale={linearYScale}\n                                            length={160}\n                                            animate={false}\n                                            motionStiffness={0}\n                                            motionDamping={0}\n                                            legend={position}\n                                            legendPosition={position}\n                                            legendOffset={-32}\n                                            ticksPosition=\"before\"\n                                        />\n                                    </g>\n                                ))}\n                            </svg>\n                        </div>\n                    </MotionConfigProvider>\n                </ThemeProvider>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesLegend\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport SEO from '../../components/seo'\nimport PageContent from '../../components/PageContent'\nimport AxesPosition from '../../components/guides/axes/AxesPosition'\nimport AxesTicks from '../../components/guides/axes/AxesTicks'\nimport AxesLegend from '../../components/guides/axes/AxesLegend'\nimport { DescriptionBlock } from '../../components/styled'\n\nexport default class Axes extends Component {\n    render() {\n        return (\n            <Layout>\n                <SEO title=\"Axes Guide\" />\n                <PageContent>\n                    <div className=\"guide__header\">\n                        <h1>Axes</h1>\n                    </div>\n                </PageContent>\n                <DescriptionBlock>\n                    <h2>Using axes in nivo components</h2>\n                    <p>\n                        Axes are built on top of{' '}\n                        <a\n                            href=\"https://github.com/d3/d3-scale\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            d3 scales\n                        </a>\n                        . A lot of nivo components make use of it (<Link to=\"/bar\">Bar</Link>,{' '}\n                        <Link to=\"/line\">Line</Link>, <Link to=\"/scatterplot\">ScatterPlot</Link>\n                        …).\n                    </p>\n                </DescriptionBlock>\n                <AxesPosition />\n                <AxesTicks />\n                <AxesLegend />\n            </Layout>\n        )\n    }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\nimport { textPropsByEngine } from '@nivo/core'\n\nexport const centerScale = scale => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return d => scale(d) + offset\n}\n\nconst timeByType = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = value =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = (scale, spec) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    // continuous scales\n    if (scale.ticks) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n\n        if (typeof spec === 'string') {\n            // time interval\n            const matches = spec.match(timeIntervalRegexp)\n            if (matches) {\n                // UTC is used as it's more predictible\n                // however local time could be used too\n                // let's see how it fits users' requirements\n                const timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0]\n                if (matches[1] === undefined) {\n                    return scale.ticks(timeType)\n                }\n\n                return scale.ticks(timeType.every(Number(matches[1])))\n            }\n\n            throw new Error(`Invalid tickValues: ${spec}`)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n\nexport const computeCartesianTicks = ({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}) => {\n    const values = getScaleTicks(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    let translate\n    let textAlign = textProps.align.center\n    let textBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d), y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align.right\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align.left\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: value,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = (format, scale) => {\n    if (!format || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const f = timeFormat(format)\n        return d => f(new Date(d))\n    }\n\n    return d3Format(format)\n}\n\nexport const computeGridLines = ({ width, height, scale, axis, values: _values }) => {\n    const lineValues = Array.isArray(_values) ? _values : undefined\n    const lineCount = isInteger(_values) ? _values : undefined\n\n    const values = lineValues || getScaleTicks(scale, lineCount)\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n\n    let lines\n    if (axis === 'x') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: position(v),\n            x2: position(v),\n            y1: 0,\n            y2: height,\n        }))\n    } else if (axis === 'y') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: 0,\n            x2: width,\n            y1: position(v),\n            y2: position(v),\n        }))\n    }\n\n    return lines\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport { animated } from 'react-spring'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\n\nconst AxisTick = ({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}) => {\n    const theme = useTheme()\n\n    let value = _value\n    if (format !== undefined) {\n        value = format(value)\n    }\n\n    let gStyle = { opacity: animatedProps.opacity }\n    if (onClick) {\n        gStyle['cursor'] = 'pointer'\n    }\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            {...(onClick ? { onClick: e => onClick(e, value) } : {})}\n            style={gStyle}\n        >\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nAxisTick.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        .isRequired,\n    format: PropTypes.func,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    lineX: PropTypes.number.isRequired,\n    lineY: PropTypes.number.isRequired,\n    textX: PropTypes.number.isRequired,\n    textY: PropTypes.number.isRequired,\n    textBaseline: PropTypes.string.isRequired,\n    textAnchor: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    rotate: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    animatedProps: PropTypes.object.isRequired,\n}\nAxisTick.defaultProps = {\n    opacity: 1,\n    rotate: 0,\n}\n\nexport default memo(AxisTick)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, useTransition, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { axisPropTypes } from '../props'\nimport AxisTick from './AxisTick'\n\nconst defaultTickRenderer = props => <AxisTick {...props} />\n\nconst Axis = ({\n    axis,\n    scale,\n    x,\n    y,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    format,\n    renderTick,\n    legend,\n    legendPosition,\n    legendOffset,\n    onClick,\n    ariaHidden,\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transitions = useTransition(ticks, tick => tick.key, {\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transitions.map(({ item: tick, props: transitionProps, key }, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                    key,\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nAxis.propTypes = {\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    scale: PropTypes.func.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    length: PropTypes.number.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    tickValues: axisPropTypes.tickValues,\n    tickSize: PropTypes.number.isRequired,\n    tickPadding: PropTypes.number.isRequired,\n    tickRotation: PropTypes.number.isRequired,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func.isRequired,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n    legendOffset: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    ariaHidden: PropTypes.bool,\n}\nAxis.defaultProps = {\n    x: 0,\n    y: 0,\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    renderTick: defaultTickRenderer,\n    legendPosition: 'end',\n    legendOffset: 0,\n}\n\nexport default memo(Axis)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Axis from './Axis'\nimport { axisPropType } from '../props'\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nconst Axes = ({ xScale, yScale, width, height, top, right, bottom, left }) => {\n    const axes = { top, right, bottom, left }\n\n    return positions.map(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n\n        return (\n            <Axis\n                key={position}\n                {...axis}\n                axis={isXAxis ? 'x' : 'y'}\n                x={position === 'right' ? width : 0}\n                y={position === 'bottom' ? height : 0}\n                scale={isXAxis ? xScale : yScale}\n                length={isXAxis ? width : height}\n                ticksPosition={ticksPosition}\n            />\n        )\n    })\n}\n\nAxes.propTypes = {\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    top: axisPropType,\n    right: axisPropType,\n    bottom: axisPropType,\n    left: axisPropType,\n}\n\nexport default memo(Axes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nconst GridLine = ({ animatedProps }) => {\n    const theme = useTheme()\n\n    return <animated.line {...animatedProps} {...theme.grid.line} />\n}\n\nGridLine.propTypes = {\n    x1: PropTypes.number.isRequired,\n    x2: PropTypes.number.isRequired,\n    y1: PropTypes.number.isRequired,\n    y2: PropTypes.number.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n}\nGridLine.defaultProps = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n}\n\nexport default memo(GridLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport GridLine from './GridLine'\n\nconst GridLines = ({ lines }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transitions = useTransition(lines, line => line.key, {\n        initial: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        from: line => ({\n            opacity: 0,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        enter: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        update: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <g>\n            {transitions.map(({ item: line, props: animatedProps, key }) => (\n                <GridLine {...line} key={key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n}\n\nGridLines.propTypes = {\n    type: PropTypes.oneOf(['x', 'y']).isRequired,\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            x1: PropTypes.number,\n            x2: PropTypes.number,\n            y1: PropTypes.number,\n            y2: PropTypes.number,\n        })\n    ).isRequired,\n}\n\nexport default memo(GridLines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport GridLines from './GridLines'\nimport { computeGridLines } from '../compute'\n\nconst Grid = ({ width, height, xScale, yScale, xValues, yValues }) => {\n    const xLines = useMemo(() => {\n        if (!xScale) return false\n\n        return computeGridLines({\n            width,\n            height,\n            scale: xScale,\n            axis: 'x',\n            values: xValues,\n        })\n    }, [xScale, xValues])\n\n    const yLines = yScale\n        ? computeGridLines({\n              width,\n              height,\n              scale: yScale,\n              axis: 'y',\n              values: yValues,\n          })\n        : false\n\n    return (\n        <>\n            {xLines && <GridLines type=\"x\" lines={xLines} />}\n            {yLines && <GridLines type=\"y\" lines={yLines} />}\n        </>\n    )\n}\n\nGrid.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    xValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    yValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n}\n\nexport default memo(Grid)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const degreesToRadians = degrees => (degrees * Math.PI) / 180\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { degreesToRadians } from './utils'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\n\nexport const renderAxisToCanvas = (\n    ctx,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontSize}px ${theme.axis.ticks.text.fontFamily}`\n\n    if (theme.axis.domain.line.strokeWidth > 0) {\n        ctx.lineWidth = theme.axis.domain.line.strokeWidth\n        ctx.lineCap = 'square'\n        ctx.strokeStyle = theme.axis.domain.line.stroke\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    ticks.forEach(tick => {\n        if (theme.axis.ticks.line.strokeWidth > 0) {\n            ctx.lineWidth = theme.axis.ticks.line.strokeWidth\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.axis.ticks.line.stroke\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format !== undefined ? format(tick.value) : tick.value\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n        ctx.fillStyle = theme.axis.ticks.text.fill\n        ctx.fillText(value, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n        ctx.fillStyle = theme.axis.legend.text.fill\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nexport const renderAxesToCanvas = (\n    ctx,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = (ctx, { width, height, scale, axis, values }) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"sourceRoot":""}