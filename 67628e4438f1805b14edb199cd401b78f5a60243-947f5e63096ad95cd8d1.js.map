{"version":3,"file":"67628e4438f1805b14edb199cd401b78f5a60243-947f5e63096ad95cd8d1.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/treemap/round.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/./src/data/components/sunburst/mapper.tsx","webpack://nivo-website/./src/data/components/sunburst/props.ts","webpack://nivo-website/../node_modules/d3-hierarchy/src/partition.js","webpack://nivo-website/../src/SunburstTooltip.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/Arcs.tsx","webpack://nivo-website/../src/Sunburst.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveSunburst.tsx","webpack://nivo-website/../node_modules/lodash/cloneDeep.js"],"sourcesContent":["function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;else while (--i >= 0) {\n    sum += children[i].value;\n  }\n  node.value = sum;\n}\n\nexport default function () {\n  return this.eachAfter(count);\n}","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n\n  do {\n    node.height = height;\n  } while ((node = node.parent) && node.height < ++height);\n}\nexport function Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};","export default function (callback) {\n  var node = this,\n      current,\n      next = [node],\n      children,\n      i,\n      n;\n\n  do {\n    current = next.reverse(), next = [];\n\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      next = [],\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  while (node = next.pop()) {\n    callback(node);\n  }\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      children,\n      i;\n\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  return this;\n}","export default function (value) {\n  return this.eachAfter(function (node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n\n    while (--i >= 0) {\n      sum += children[i].value;\n    }\n\n    node.value = sum;\n  });\n}","export default function (compare) {\n  return this.eachBefore(function (node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}","export default function (end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n\n  var k = nodes.length;\n\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n\n  return c;\n}","export default function () {\n  var node = this,\n      nodes = [node];\n\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n\n  return nodes;\n}","export default function () {\n  var nodes = [];\n  this.each(function (node) {\n    nodes.push(node);\n  });\n  return nodes;\n}","export default function () {\n  var leaves = [];\n  this.eachBefore(function (node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}","export default function () {\n  var root = this,\n      links = [];\n  root.each(function (node) {\n    if (node !== root) {\n      // Don’t include the root’s parent, if any.\n      links.push({\n        source: node.parent,\n        target: node\n      });\n    }\n  });\n  return links;\n}","export default function (node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { patternLinesDef } from '@nivo/core'\nimport { mapFormat, settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    background: #fff;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    font-size: 12px;\n    border-radius: 2px;\n    box-shadow: 1px 1px 0 rgba(0, 0, 0, 0.15);\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\nconst TooltipValue = styled.span``\n\nconst CustomTooltip = node => {\n    return (\n        <TooltipWrapper style={{ color: node.color }}>\n            <TooltipKey>id</TooltipKey>\n            <TooltipValue>{node.id}</TooltipValue>\n            <TooltipKey>value</TooltipKey>\n            <TooltipValue>{node.value}</TooltipValue>\n            <TooltipKey>percentage</TooltipKey>\n            <TooltipValue>{Math.round(node.percentage * 100) / 100}%</TooltipValue>\n            <TooltipKey>color</TooltipKey>\n            <TooltipValue>{node.color}</TooltipValue>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        arcLabel: value => {\n            if (value === `d => \\`\\${d.id} (\\${d.value})\\``) return d => `${d.id} (${d.value})`\n            return value\n        },\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n        defs: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                patternLinesDef('lines', {\n                    background: 'rgba(0, 0, 0, 0)',\n                    color: 'inherit',\n                    rotation: -45,\n                    lineWidth: 4,\n                    spacing: 8,\n                }),\n            ]\n        },\n        fill: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                { match: { id: 'set' }, id: 'lines' },\n                { match: { id: 'misc' }, id: 'lines' },\n            ]\n        },\n    },\n    {\n        exclude: ['custom tooltip example', 'showcase pattern usage'],\n    }\n)\n","import { defaultProps } from '@nivo/sunburst'\nimport { arcTransitionModes } from '@nivo/arcs'\nimport {\n    groupProperties,\n    defsProperties,\n    motionProperties,\n    themeProperty,\n} from '../../../lib/componentProperties'\nimport { chartDimensions, ordinalColors, isInteractive } from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg', 'api']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Chart data, which should be immutable.',\n        description: `\n            Chart data, which must conform to this structure\n            if using the default \\`id\\` and \\`value\\` accessors:\n\n            \\`\\`\\`\n            {\n                // must be unique for the whole dataset\n                id: string | number\n                value: number\n                children: {\n                    id: string | number\n                    value: number\n                    children: ...\n                }[]\n            }\n            \\`\\`\\`\n\n            If using a different data structure, you must make sure\n            to adjust both \\`id\\` and \\`value\\`. Meaning you can provide\n            a completely different data structure as long as \\`id\\` and \\`value\\`\n            return the appropriate values.\n\n            Immutability of the data is important as re-computations\n            depends on it.\n        `,\n        type: 'object',\n        required: true,\n    },\n    {\n        key: 'id',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Id accessor.',\n        description: `\n            define id accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            id (string | number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.id,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Value accessor',\n        description: `\n            define value accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            value (number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.value,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'string | (value: number) => string | number',\n        control: { type: 'valueFormat' },\n    },\n    {\n        key: 'cornerRadius',\n        help: 'Round node shape.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.cornerRadius,\n        group: 'Base',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    ...chartDimensions(allFlavors),\n    themeProperty(['svg', 'api']),\n    ordinalColors({\n        flavors: allFlavors,\n        defaultValue: defaultProps.colors,\n    }),\n    {\n        key: 'colorBy',\n        help: `Define the property to use to assign a color to arcs.`,\n        flavors: allFlavors,\n        description: `\n            When using \\`id\\`, each node will get a new color,\n            and when using \\`depth\\` the nodes' color will depend on their depth.\n        `,\n        type: `'id' | 'depth'`,\n        required: false,\n        defaultValue: defaultProps.colorBy,\n        group: 'Style',\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'id', value: 'id' },\n                { label: 'depth', value: 'depth' },\n            ],\n        },\n    },\n    {\n        key: 'inheritColorFromParent',\n        help: 'Inherit color from parent node starting from 2nd level.',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.inheritColorFromParent,\n        control: { type: 'switch' },\n        group: 'Style',\n    },\n    {\n        key: 'childColor',\n        help: 'Defines how to compute child nodes color.',\n        flavors: allFlavors,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.childColor,\n        control: { type: 'inheritedColor' },\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Node border width.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.borderWidth,\n        control: { type: 'lineWidth' },\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Defines how to compute arcs color.',\n        flavors: allFlavors,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.borderColor,\n        control: { type: 'inheritedColor' },\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg', 'api']),\n    {\n        key: 'showcase pattern usage',\n        flavors: ['svg'],\n        help: 'Patterns.',\n        description: `\n            You can use \\`defs\\` and \\`fill\\` properties\n            to use patterns, see\n            [dedicated guide](self:/guides/patterns)\n            for further information.\n        `,\n        required: false,\n        type: 'boolean',\n        control: { type: 'switch' },\n        group: 'Style',\n    },\n    {\n        key: 'enableArcLabels',\n        help: 'Enable/disable arc labels.',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.enableArcLabels,\n        control: { type: 'switch' },\n        group: 'Arc labels',\n    },\n    {\n        key: 'arcLabel',\n        help: 'Defines how to get label text, can be a string (used to access current node data property) or a function which will receive the actual node data.',\n        flavors: allFlavors,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.arcLabel,\n        group: 'Arc labels',\n        control: {\n            type: 'choices',\n            choices: ['id', 'value', 'formattedValue', `d => \\`\\${d.id} (\\${d.value})\\``].map(\n                choice => ({\n                    label: choice,\n                    value: choice,\n                })\n            ),\n        },\n    },\n    {\n        key: 'arcLabelsRadiusOffset',\n        help: `\n            Define the radius to use to determine the label position, starting from inner radius,\n            this is expressed as a ratio.\n        `,\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.arcLabelsRadiusOffset,\n        group: 'Arc labels',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 2,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'arcLabelsSkipAngle',\n        help: `Skip label if corresponding arc's angle is lower than provided value.`,\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.arcLabelsSkipAngle,\n        group: 'Arc labels',\n        control: {\n            type: 'range',\n            unit: '°',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'arcLabelsTextColor',\n        help: 'Defines how to compute arc label text color.',\n        flavors: allFlavors,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.arcLabelsTextColor,\n        control: { type: 'inheritedColor' },\n        group: 'Arc labels',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        flavors: ['svg'],\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n\n            The layer component which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`Sunburst\\` component.\n\n            The context passed to layers has the following structure:\n\n            \\`\\`\\`\n            {\n                nodes:  ComputedDatum<RawDatum>[],\n                arcGenerator: Function\n                centerX:      number\n                centerY:      number\n                radius:       number\n            }\n            \\`\\`\\`\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaultProps.layers,\n    },\n    isInteractive({\n        flavors: ['svg'],\n        defaultValue: defaultProps.isInteractive,\n    }),\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n    {\n        key: 'transitionMode',\n        flavors: ['svg'],\n        help: 'Define how transitions behave.',\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.transitionMode,\n        group: 'Motion',\n        control: {\n            type: 'choices',\n            choices: arcTransitionModes.map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Tooltip custom component',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the following data:\n            \\`\\`\\`\n            {\n                id:         string | number,\n                value:      number,\n                depth:      number,\n                color:      string,\n                name:       string\n                loc:        number\n                percentage: number\n                // the parent datum\n                ancestor:   object\n            }\n            \\`\\`\\`\n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        required: false,\n        help: 'Showcase custom tooltip component.',\n        type: 'boolean',\n        control: { type: 'switch' },\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'onClick handler',\n        description: `\n            onClick handler, will receive node data as first argument\n            & event as second one. The node data has the following shape:\n\n            \\`\\`\\`\n            {\n                id:         string | number,\n                value:      number,\n                depth:      number,\n                color:      string,\n                name:       string\n                loc:        number\n                percentage: number\n                // the parent datum\n                ancestor:   object\n            }\n            \\`\\`\\`\n        `,\n    },\n]\n\nexport const groups = groupProperties(props)\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\nexport default function () {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 = root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function (node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function (x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function (x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const SunburstTooltip = <RawDatum,>({\n    id,\n    formattedValue,\n    color,\n}: ComputedDatum<RawDatum>) => (\n    <BasicTooltip id={id} value={formattedValue} enableChip={true} color={color} />\n)\n","import { ArcTransitionMode } from '@nivo/arcs'\nimport { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { SunburstTooltip } from './SunburstTooltip'\nimport { SunburstLayerId } from './types'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    cornerRadius: 0,\n    layers: ['arcs', 'arcLabels'] as SunburstLayerId[],\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    colorBy: 'id' as const,\n    inheritColorFromParent: true,\n    childColor: { from: 'color' },\n    borderWidth: 1,\n    borderColor: 'white',\n    enableArcLabels: false,\n    arcLabel: 'formattedValue',\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsSkipAngle: 0,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n    isInteractive: true,\n    defs: [],\n    fill: [],\n    tooltip: SunburstTooltip,\n    role: 'img',\n}\n","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { ComputedDatum, SunburstCommonProps, MouseHandlers } from './types'\nimport { useTooltip } from '@nivo/tooltip'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: SunburstCommonProps<RawDatum>['borderWidth']\n    borderColor: SunburstCommonProps<RawDatum>['borderColor']\n    isInteractive: SunburstCommonProps<RawDatum>['isInteractive']\n    onClick?: MouseHandlers<RawDatum>['onClick']\n    onMouseEnter?: MouseHandlers<RawDatum>['onMouseEnter']\n    onMouseMove?: MouseHandlers<RawDatum>['onMouseMove']\n    onMouseLeave?: MouseHandlers<RawDatum>['onMouseLeave']\n    tooltip: SunburstCommonProps<RawDatum>['tooltip']\n    transitionMode: SunburstCommonProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, datum), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    Container,\n    SvgWrapper,\n    useDimensions,\n} from '@nivo/core'\nimport { ArcLabelsLayer } from '@nivo/arcs'\nimport { defaultProps } from './props'\nimport { useSunburst, useSunburstLayerContext } from './hooks'\nimport { SunburstSvgProps, SunburstLayerId, SunburstLayer, ComputedDatum } from './types'\nimport { Arcs } from './Arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\n\ntype InnerSunburstProps<RawDatum> = Partial<\n    Omit<\n        SunburstSvgProps<RawDatum>,\n        'data' | 'width' | 'height' | 'isInteractive' | 'animate' | 'motionConfig'\n    >\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height' | 'isInteractive'>\n\nconst InnerSunburst = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    cornerRadius = defaultProps.cornerRadius,\n    layers = defaultProps.layers as SunburstLayer<RawDatum>[],\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor,\n    margin: partialMargin,\n    width,\n    height,\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsComponent,\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n    transitionMode = defaultProps.transitionMode,\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n    role = defaultProps.role,\n}: InnerSunburstProps<RawDatum>) => {\n    const { innerHeight, innerWidth, margin, outerHeight, outerWidth } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { centerX, centerY, radius } = useMemo(() => {\n        const radius = Math.min(innerWidth, innerHeight) / 2\n\n        return { radius, centerX: innerWidth / 2, centerY: innerHeight / 2 }\n    }, [innerHeight, innerWidth])\n\n    const { arcGenerator, nodes } = useSunburst({\n        data,\n        id,\n        value,\n        valueFormat,\n        radius,\n        cornerRadius,\n        colors,\n        colorBy,\n        inheritColorFromParent,\n        childColor,\n    })\n\n    const boundDefs = bindDefs(defs, nodes, fill, {\n        dataKey: '.',\n        colorKey: 'color',\n        targetKey: 'fill',\n    })\n\n    const layerById: Record<SunburstLayerId, ReactNode> = {\n        arcs: null,\n        arcLabels: null,\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={nodes}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                transitionMode={transitionMode}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onMouseMove={onMouseMove}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={nodes}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    const layerContext = useSunburstLayerContext<RawDatum>({\n        nodes,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            defs={boundDefs}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as SunburstLayerId] !== undefined) {\n                    return layerById[layer as SunburstLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Sunburst = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: Partial<Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>> &\n    Pick<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme, renderWrapper }}>\n        <InnerSunburst<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport { partition as d3Partition, hierarchy as d3Hierarchy } from 'd3-hierarchy'\nimport cloneDeep from 'lodash/cloneDeep'\nimport sortBy from 'lodash/sortBy'\nimport { usePropertyAccessor, useTheme, useValueFormatter } from '@nivo/core'\nimport { Arc, useArcGenerator } from '@nivo/arcs'\nimport { useOrdinalColorScale, useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport {\n    SunburstCommonProps,\n    ComputedDatum,\n    DataProps,\n    DatumId,\n    SunburstCustomLayerProps,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useSunburst = <RawDatum>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    radius,\n    cornerRadius = defaultProps.cornerRadius,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    inheritColorFromParent = defaultProps.inheritColorFromParent,\n    childColor = defaultProps.childColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n}: {\n    data: DataProps<RawDatum>['data']\n    id?: DataProps<RawDatum>['id']\n    value?: DataProps<RawDatum>['value']\n    valueFormat?: DataProps<RawDatum>['valueFormat']\n    radius: number\n    cornerRadius?: SunburstCommonProps<RawDatum>['cornerRadius']\n    colors?: SunburstCommonProps<RawDatum>['colors']\n    colorBy?: SunburstCommonProps<RawDatum>['colorBy']\n    inheritColorFromParent?: SunburstCommonProps<RawDatum>['inheritColorFromParent']\n    childColor?: SunburstCommonProps<RawDatum>['childColor']\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'color' | 'fill'>>(\n        colors,\n        colorBy\n    )\n    const getChildColor = useInheritedColor<ComputedDatum<RawDatum>>(childColor, theme)\n\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const nodes: ComputedDatum<RawDatum>[] = useMemo(() => {\n        // d3 mutates the data for performance reasons,\n        // however it does not work well with reactive programming,\n        // this ensures that we don't mutate the input data\n        const clonedData = cloneDeep(data)\n\n        const hierarchy = d3Hierarchy(clonedData).sum(getValue)\n\n        const partition = d3Partition<RawDatum>().size([2 * Math.PI, radius * radius])\n        // exclude root node\n        const descendants = partition(hierarchy).descendants().slice(1)\n\n        const total = hierarchy.value ?? 0\n\n        // It's important to sort node by depth,\n        // it ensures that we assign a parent node\n        // which has already been computed, because parent nodes\n        // are going to be computed first\n        const sortedNodes = sortBy(descendants, 'depth')\n\n        return sortedNodes.reduce<ComputedDatum<RawDatum>[]>((acc, descendant) => {\n            const id = getId(descendant.data)\n            // d3 hierarchy node value is optional by default as it depends on\n            // a call to `count()` or `sum()`, and we previously called `sum()`,\n            // d3 typings could be improved and make it non optional when calling\n            // one of those.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const value = descendant.value!\n            const percentage = (100 * value) / total\n            const path = descendant.ancestors().map(ancestor => getId(ancestor.data))\n\n            const arc: Arc = {\n                startAngle: descendant.x0,\n                endAngle: descendant.x1,\n                innerRadius: Math.sqrt(descendant.y0),\n                outerRadius: Math.sqrt(descendant.y1),\n            }\n\n            let parent: ComputedDatum<RawDatum> | undefined\n            if (descendant.parent) {\n                // as the parent is defined by the input data, and we sorted the data\n                // by `depth`, we can safely assume it's defined.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                parent = acc.find(node => node.id === getId(descendant.parent!.data))\n            }\n\n            const normalizedNode: ComputedDatum<RawDatum> = {\n                id,\n                path,\n                value,\n                percentage,\n                formattedValue: valueFormat ? formatValue(value) : `${percentage.toFixed(2)}%`,\n                color: '',\n                arc,\n                data: descendant.data,\n                depth: descendant.depth,\n                height: descendant.height,\n            }\n\n            if (inheritColorFromParent && parent && normalizedNode.depth > 1) {\n                normalizedNode.color = getChildColor(parent, normalizedNode)\n            } else {\n                normalizedNode.color = getColor(normalizedNode)\n            }\n\n            return [...acc, normalizedNode]\n        }, [])\n    }, [\n        data,\n        radius,\n        getValue,\n        getId,\n        valueFormat,\n        formatValue,\n        getColor,\n        inheritColorFromParent,\n        getChildColor,\n    ])\n\n    const arcGenerator = useArcGenerator({ cornerRadius })\n\n    return { arcGenerator, nodes }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useSunburstLayerContext = <RawDatum>({\n    nodes,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n}: SunburstCustomLayerProps<RawDatum>): SunburstCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            nodes,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n        }),\n        [nodes, arcGenerator, centerX, centerY, radius]\n    )\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Sunburst } from './Sunburst'\nimport { SunburstSvgProps } from './types'\n\ntype ResponsiveSunburstProps<RawDatum> = Partial<\n    Omit<SunburstSvgProps<RawDatum>, 'data' | 'width' | 'height'>\n> &\n    Pick<SunburstSvgProps<RawDatum>, 'data'>\n\nexport const ResponsiveSunburst = <RawDatum,>(props: ResponsiveSunburstProps<RawDatum>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Sunburst<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n"],"names":["count","node","sum","children","i","length","value","hierarchy","data","child","childs","n","root","Node","valued","nodes","defaultChildren","pop","Array","push","parent","depth","eachBefore","computeHeight","d","copyData","height","this","prototype","constructor","eachAfter","each","callback","current","next","reverse","sort","compare","path","end","start","ancestor","a","b","aNodes","ancestors","bNodes","c","leastCommonAncestor","k","splice","descendants","leaves","links","source","target","copy","x0","Math","round","y0","x1","y1","durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","field","interval","date","arguments","floor","ceil","d0","d1","offset","step","range","stop","previous","filter","test","setTime","every","isFinite","TooltipWrapper","styled","TooltipKey","TooltipValue","CustomTooltip","style","color","id","percentage","settingsMapper","valueFormat","mapFormat","arcLabel","tooltip","values","defs","patternLinesDef","background","rotation","lineWidth","spacing","fill","match","exclude","allFlavors","props","key","group","flavors","help","description","type","required","defaultValue","defaultProps","control","unit","min","max","chartDimensions","themeProperty","ordinalColors","choices","label","defsProperties","map","choice","isInteractive","motionProperties","arcTransitionModes","groups","groupProperties","dx","dy","padding","partition","positionNode","x","size","cornerRadius","layers","colors","scheme","colorBy","inheritColorFromParent","childColor","from","borderWidth","borderColor","enableArcLabels","arcLabelsRadiusOffset","arcLabelsSkipAngle","arcLabelsTextColor","theme","animate","motionConfig","transitionMode","formattedValue","_jsx","BasicTooltip","enableChip","role","Arcs","center","arcGenerator","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useMemo","datum","event","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","ArcsLayer","InnerSunburst","partialMargin","margin","width","arcLabelsComponent","useDimensions","innerHeight","innerWidth","outerHeight","outerWidth","radius","centerX","centerY","useTheme","getColor","useOrdinalColorScale","getChildColor","useInheritedColor","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","clonedData","cloneDeep","d3Hierarchy","d3Partition","PI","slice","total","sortBy","reduce","acc","descendant","arc","startAngle","endAngle","innerRadius","sqrt","outerRadius","find","normalizedNode","toFixed","useArcGenerator","useSunburst","boundDefs","bindDefs","dataKey","colorKey","targetKey","layerById","arcs","arcLabels","includes","ArcLabelsLayer","radiusOffset","skipAngle","textColor","component","layerContext","useSunburstLayerContext","SvgWrapper","layer","Fragment","Sunburst","renderWrapper","otherProps","Container","ResponsiveSunburst","ResponsiveWrapper","baseClone","module","exports","CLONE_DEEP_FLAG"],"sourceRoot":""}