{"version":3,"sources":["webpack:///../src/StreamLayer.js","webpack:///../src/StreamLayers.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/StreamDots.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/StreamSlicesItem.js","webpack:///../src/StreamSlices.js","webpack:///../src/StreamDotsItem.js","webpack:///../src/props.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../src/hooks.js","webpack:///../src/Stream.js","webpack:///../src/ResponsiveStream.js","webpack:///./src/data/components/stream/mapper.js","webpack:///./src/data/components/stream/props.js","webpack:///./src/data/components/stream/generator.js","webpack:///./src/data/components/stream/defaults.js","webpack:///./src/pages/stream/index.js","webpack:///../src/compute.js","webpack:///../src/components/AxisTick.js","webpack:///../src/components/Axis.js","webpack:///../src/components/Axes.js","webpack:///../src/components/GridLine.js","webpack:///../src/components/GridLines.js","webpack:///../src/components/Grid.js","webpack:///../src/utils.js","webpack:///../src/canvas.js"],"names":["memo","layer","fillOpacity","borderWidth","getBorderColor","getTooltipLabel","isInteractive","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","event","id","enableChip","color","useMotionConfig","animate","springConfig","animatedPath","useAnimatedPath","animatedProps","useSpring","config","immediate","d","fill","stroke","strokeWidth","onMouseMove","onMouseEnter","onMouseLeave","undefined","StreamLayers","layers","key","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","getDotY","datum","y","position","data","dotComponent","getSize","getColor","getBorderWidth","x","size","borderColor","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","unsupportedIterableToArray","TypeError","nonIterableRest","height","getTooltipValue","useState","isHover","setIsHover","rows","useMemo","p","handleMouseLeave","transform","x1","x2","y1","y2","strokeOpacity","width","slices","radius","cx","cy","r","StreamDefaultProps","PropTypes","stackOrderPropType","stackOffsetPropType","areaCurvePropType","ordinalColorsPropType","isRequired","match","inheritedColorPropType","order","offsetType","curve","axisBottom","enableGridX","enableGridY","modifiers","colors","scheme","defs","enableDots","dotPosition","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableStackTooltip","legends","role","motionConfig","_toConsumableArray","arrayWithoutHoles","iter","iterableToArray","nonIterableSpread","useStream","tooltipLabel","tooltipFormat","areaGenerator","curveFromProp","stack","d3Stack","stackOffsetFromProp","stackOrderFromProp","point","minValue","Math","stackMin","maxValue","stackMax","scaleLinear","xScale","yScale","theme","useTheme","useOrdinalColorScale","useInheritedColor","getDotSize","getDotColor","getDotBorderWidth","getDotBorderColor","enhancedLayers","points","index","path","layerIndex","sliceStack","a","b","useValueFormatter","WrappedStream","withContainer","partialMargin","margin","axisTop","axisRight","axisLeft","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","boundDefs","bindDefs","top","right","bottom","left","legendData","l","label","containerWidth","containerHeight","ResponsiveStream","props","settingsMapper","markersLabel","mapAxis","exclude","help","type","required","controlType","group","controlOptions","choices","stackOffsetPropKeys","map","stackOrderPropKeys","description","defaultValue","defaults","areaCurvePropKeys","enableControlForFlavors","unit","min","max","step","themeProperty","defsProperties","axesProperties","flavors","motionProperties","groups","groupProperties","names","generateLightDataSet","range","reduce","random","enable","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","patternDotsDef","background","padding","stagger","patternSquaresDef","initialProperties","defaultSettings","anchor","direction","translateX","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","onClick","alert","JSON","stringify","effects","on","style","Stream","ComponentTemplate","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","codePropertiesMapper","generateData","getTabData","centerScale","scale","bandwidth","offset","timeByType","millisecond","second","minute","hour","day","week","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month","year","timeTypes","timeIntervalRegexp","RegExp","isInteger","isFinite","getScaleTicks","spec","matches","timeType","Number","computeCartesianTicks","axis","ticksPosition","tickValues","engine","values","textProps","textPropsByEngine","line","lineX","lineY","text","textX","textY","textAlign","textBaseline","translate","ticks","getFormatter","f","timeFormat","Date","d3Format","computeGridLines","_values","lineValues","lineCount","lines","v","axisPropTypes","format","renderTick","legendPosition","ariaHidden","bool","axisPropType","AxisTick","_value","textAnchor","gStyle","opacity","e","dominantBaseline","rotate","Axis","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transitions","useTransition","tick","initial","textTransform","enter","update","leave","aria-hidden","item","transitionProps","tickIndex","positions","axes","isXAxis","GridLine","xValues","yValues","xLines","yLines","degreesToRadians","degrees","renderAxisToCanvas","ctx","renderAxesToCanvas","renderGridLinesToCanvas"],"mappings":"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","file":"component---src-pages-stream-index-js-248351651ae29f88b78c.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { BasicTooltip, useTooltip } from '@nivo/tooltip'\n\nconst StreamLayer = ({\n    layer,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    getTooltipLabel,\n    isInteractive,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(\n                <BasicTooltip id={getTooltipLabel(layer)} enableChip={true} color={layer.color} />,\n                event,\n                'left'\n            )\n        },\n        [showTooltipFromEvent, getTooltipLabel, layer]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(layer.path)\n    const animatedProps = useSpring({\n        color: layer.color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={layer.fill ? layer.fill : animatedProps.color}\n            fillOpacity={fillOpacity}\n            stroke={getBorderColor(layer)}\n            strokeWidth={borderWidth}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? hideTooltip : undefined}\n        />\n    )\n}\n\nStreamLayer.propTypes = {\n    layer: PropTypes.object.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    getTooltipLabel: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n}\n\nexport default memo(StreamLayer)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport StreamLayer from './StreamLayer'\n\nconst StreamLayers = ({\n    layers,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    getTooltipLabel,\n    isInteractive,\n}) => {\n    return (\n        <g>\n            {layers.map((layer, i) => (\n                <StreamLayer\n                    key={i}\n                    layer={layer}\n                    getBorderColor={getBorderColor}\n                    borderWidth={borderWidth}\n                    fillOpacity={fillOpacity}\n                    getTooltipLabel={getTooltipLabel}\n                    isInteractive={isInteractive}\n                />\n            ))}\n        </g>\n    )\n}\n\nStreamLayers.propTypes = {\n    layers: PropTypes.array.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    getTooltipLabel: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n}\n\nexport default StreamLayers\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst getDotY = (datum, position) => {\n    let y = datum.y2\n    if (position === 'center') {\n        y = datum.y1 + (datum.y2 - datum.y1) / 2\n    } else if (position === 'start') {\n        y = datum.y1\n    }\n\n    return y\n}\n\nconst StreamDots = ({\n    id,\n    color,\n    data,\n    dotComponent,\n    position,\n    getSize,\n    getColor,\n    getBorderWidth,\n    getBorderColor,\n}) => {\n    return data.map((d, i) => {\n        const datum = { ...d, key: id, color }\n\n        return React.createElement(dotComponent, {\n            key: i,\n            datum,\n            x: datum.x,\n            y: getDotY(datum, position),\n            size: getSize(datum),\n            color: getColor(datum),\n            borderWidth: getBorderWidth(datum),\n            borderColor: getBorderColor(datum),\n        })\n    })\n}\n\nStreamDots.propTypes = {\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    color: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.number.isRequired,\n            y1: PropTypes.number.isRequired,\n            y2: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    dotComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    position: PropTypes.oneOf(['start', 'center', 'end']).isRequired,\n    getSize: PropTypes.func.isRequired,\n    getColor: PropTypes.func.isRequired,\n    getBorderWidth: PropTypes.func.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n}\n\nexport default memo(StreamDots)\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback, useMemo, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst StreamSlicesItem = ({ slice, height, getTooltipLabel, getTooltipValue }) => {\n    const [isHover, setIsHover] = useState(false)\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const rows = useMemo(\n        () =>\n            slice.stack.map(p => [\n                <Chip key={p.id} color={p.color} />,\n                getTooltipLabel(p),\n                getTooltipValue(p.value),\n            ]),\n        [slice, getTooltipLabel, getTooltipValue]\n    )\n\n    const handleMouseHover = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(<TableTooltip rows={rows} />, event, 'left')\n        },\n        [setIsHover, showTooltipFromEvent, rows]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [setIsHover, hideTooltip])\n\n    return (\n        <g transform={`translate(${slice.x}, 0)`}>\n            {isHover && (\n                <line\n                    x1={0}\n                    x2={0}\n                    y1={0}\n                    y2={height}\n                    stroke=\"#000\"\n                    strokeOpacity={0.35}\n                    strokeWidth={1}\n                />\n            )}\n            <rect\n                x={-20}\n                width={40}\n                height={height}\n                fill=\"#000\"\n                fillOpacity={0}\n                onMouseEnter={handleMouseHover}\n                onMouseMove={handleMouseHover}\n                onMouseLeave={handleMouseLeave}\n            />\n        </g>\n    )\n}\n\nStreamSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    getTooltipLabel: PropTypes.func.isRequired,\n    getTooltipValue: PropTypes.func.isRequired,\n}\n\nexport default memo(StreamSlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport StreamSlicesItem from './StreamSlicesItem'\n\nconst StreamSlices = ({ slices, height, getTooltipLabel, getTooltipValue }) => (\n    <g>\n        {slices.map(slice => (\n            <StreamSlicesItem\n                key={slice.index}\n                slice={slice}\n                height={height}\n                getTooltipLabel={getTooltipLabel}\n                getTooltipValue={getTooltipValue}\n            />\n        ))}\n    </g>\n)\n\nStreamSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            index: PropTypes.number.isRequired,\n            x: PropTypes.number.isRequired,\n            stack: PropTypes.arrayOf(\n                PropTypes.shape({\n                    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    color: PropTypes.string.isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    height: PropTypes.number.isRequired,\n    getTooltipLabel: PropTypes.func.isRequired,\n    getTooltipValue: PropTypes.func.isRequired,\n}\n\nexport default memo(StreamSlices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\n\nconst StreamDotsItem = ({ x, y, size, color, borderWidth, borderColor }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size * 0.5,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius}\n            fill={animatedProps.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n        />\n    )\n}\n\nStreamDotsItem.propTypes = {\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n}\n\nexport default memo(StreamDotsItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useMemo } from 'react'\nimport { area, stack as d3Stack } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport {\n    curveFromProp,\n    useTheme,\n    stackOrderFromProp,\n    stackOffsetFromProp,\n    useValueFormatter,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\n\nconst stackMin = layers =>\n    Math.min(...layers.reduce((acc, layer) => [...acc, ...layer.map(d => d[0])], []))\nconst stackMax = layers =>\n    Math.max(...layers.reduce((acc, layer) => [...acc, ...layer.map(d => d[1])], []))\n\nexport const useStream = ({\n    width,\n    height,\n    data,\n    keys,\n    offsetType,\n    order,\n    curve,\n    colors,\n    borderColor,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n    tooltipLabel,\n    tooltipFormat,\n}) => {\n    const areaGenerator = useMemo(\n        () =>\n            area()\n                .x(({ x }) => x)\n                .y0(({ y1 }) => y1)\n                .y1(({ y2 }) => y2)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n\n    const stack = useMemo(\n        () =>\n            d3Stack()\n                .keys(keys)\n                .offset(stackOffsetFromProp(offsetType))\n                .order(stackOrderFromProp(order)),\n        [keys, offsetType, order]\n    )\n\n    const [layers, xScale, yScale] = useMemo(() => {\n        const layers = stack(data)\n        layers.forEach(layer => {\n            layer.forEach(point => {\n                point.value = point.data[layer.key]\n            })\n        })\n\n        const minValue = stackMin(layers)\n        const maxValue = stackMax(layers)\n\n        return [\n            layers,\n            scalePoint()\n                .domain(Array.from({ length: data.length }, (_, i) => i))\n                .range([0, width]),\n            scaleLinear().domain([minValue, maxValue]).range([height, 0]),\n        ]\n    }, [stack, data, width, height])\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, 'index')\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getDotSize = useMemo(() => (typeof dotSize === 'function' ? dotSize : () => dotSize), [\n        dotSize,\n    ])\n    const getDotColor = useInheritedColor(dotColor, theme)\n    const getDotBorderWidth = useMemo(\n        () => (typeof dotBorderWidth === 'function' ? dotBorderWidth : () => dotBorderWidth),\n        [dotBorderWidth]\n    )\n    const getDotBorderColor = useInheritedColor(dotBorderColor, theme)\n\n    const enhancedLayers = useMemo(\n        () =>\n            layers.map((points, layerIndex) => {\n                const layer = points.map((point, i) => ({\n                    index: i,\n                    x: xScale(i),\n                    value: point.value,\n                    y1: yScale(point[0]),\n                    y2: yScale(point[1]),\n                }))\n\n                return {\n                    id: keys[layerIndex],\n                    layer,\n                    path: areaGenerator(layer),\n                    color: getColor({ index: layerIndex }),\n                }\n            }),\n        [layers, keys, areaGenerator, getColor]\n    )\n\n    const slices = useMemo(\n        () =>\n            Array.from({ length: data.length }, (_, i) => {\n                const sliceStack = enhancedLayers\n                    .map(layer => ({\n                        id: layer.id,\n                        color: layer.color,\n                        ...layer.layer[i],\n                    }))\n                    .sort((a, b) => a.y2 - b.y2)\n\n                return {\n                    index: i,\n                    x: enhancedLayers[0].layer[i].x,\n                    stack: sliceStack,\n                }\n            }),\n        [data.length, enhancedLayers]\n    )\n\n    const getTooltipLabel = useMemo(() => {\n        if (typeof tooltipLabel === 'function') return tooltipLabel\n\n        return d => d.id\n    }, [tooltipLabel])\n    const getTooltipValue = useValueFormatter(tooltipFormat)\n\n    return {\n        xScale,\n        yScale,\n        layers: enhancedLayers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        getTooltipLabel,\n        getTooltipValue,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { bindDefs, SvgWrapper, useDimensions, withContainer } from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport StreamLayers from './StreamLayers'\nimport StreamDots from './StreamDots'\nimport StreamSlices from './StreamSlices'\nimport { StreamPropTypes, StreamDefaultProps } from './props'\nimport { useStream } from './hooks'\n\nconst Stream = ({\n    data,\n    keys,\n    offsetType,\n    order,\n    curve,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n    enableGridX,\n    enableGridY,\n\n    colors,\n    fillOpacity,\n    borderWidth,\n    borderColor,\n    defs,\n    fill,\n\n    enableDots,\n    dotPosition,\n    dotComponent,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n\n    isInteractive,\n    tooltipLabel,\n    tooltipFormat,\n    enableStackTooltip,\n\n    legends,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        xScale,\n        yScale,\n        layers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        getTooltipLabel,\n        getTooltipValue,\n    } = useStream({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        keys,\n        offsetType,\n        order,\n        curve,\n        colors,\n        borderColor,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n        tooltipLabel,\n        tooltipFormat,\n    })\n\n    const boundDefs = bindDefs(defs, layers, fill)\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            <Grid\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n            />\n            <StreamLayers\n                layers={layers}\n                fillOpacity={fillOpacity}\n                borderWidth={borderWidth}\n                getBorderColor={getBorderColor}\n                getTooltipLabel={getTooltipLabel}\n                isInteractive={isInteractive}\n            />\n            <Axes\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n            {enableDots &&\n                layers.map(layer => (\n                    <StreamDots\n                        key={layer.id}\n                        id={layer.id}\n                        color={layer.color}\n                        data={layer.layer}\n                        dotComponent={dotComponent}\n                        position={dotPosition}\n                        getSize={getDotSize}\n                        getColor={getDotColor}\n                        getBorderWidth={getDotBorderWidth}\n                        getBorderColor={getDotBorderColor}\n                    />\n                ))}\n            {isInteractive && enableStackTooltip && (\n                <StreamSlices\n                    slices={slices}\n                    height={innerHeight}\n                    getTooltipValue={getTooltipValue}\n                    getTooltipLabel={getTooltipLabel}\n                />\n            )}\n            {legends.map((legend, i) => {\n                const legendData = layers\n                    .map(l => ({\n                        id: l.id,\n                        label: l.id,\n                        color: l.color,\n                        fill: l.fill,\n                    }))\n                    .reverse()\n\n                return (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                    />\n                )\n            })}\n        </SvgWrapper>\n    )\n}\n\nStream.propTypes = StreamPropTypes\n\nconst WrappedStream = withContainer(Stream)\nWrappedStream.defaultProps = StreamDefaultProps\n\nexport default WrappedStream\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Stream from './Stream'\n\nconst ResponsiveStream = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Stream width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveStream\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper, mapAxis } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        markersLabel: value => {\n            if (value === `d => \\`\\${d.x}: \\${d.y}\\``) return d => `${d.x}: ${d.y}`\n            return value\n        },\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { areaCurvePropKeys, stackOrderPropKeys, stackOffsetPropKeys } from '@nivo/core'\nimport { StreamDefaultProps as defaults } from '@nivo/stream'\nimport {\n    themeProperty,\n    axesProperties,\n    motionProperties,\n    defsProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'offsetType',\n        help: 'Offset type.',\n        type: 'string',\n        required: false,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: stackOffsetPropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'order',\n        help: 'Layers order.',\n        type: 'string',\n        required: false,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: stackOrderPropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'curve',\n        description: `\n            Defines the curve factory to use\n            for the area generator.\n        `,\n        help: 'Curve interpolation.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: areaCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveStream/>\\`.\n        `,\n        help: 'Chart width.',\n        type: '{number}',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveStream/>\\`.\n        `,\n        help: 'Chart height.',\n        type: '{number}',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines how to compute line color.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'fillOpacity',\n        help: 'Layers fill opacity.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.fillOpacity,\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Width of layer border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        description: `\n            How to compute border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        help: 'Method to compute layer border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    ...defsProperties('Style'),\n    {\n        key: 'enableGridX',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    {\n        key: 'enableGridY',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridY,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    ...axesProperties(),\n    {\n        key: 'enableDots',\n        help: 'Enable/disable dots.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableDots,\n        controlType: 'switch',\n        group: 'Dots',\n    },\n    {\n        key: 'renderDot',\n        group: 'Dots',\n        flavors: ['svg'],\n        help: 'Custom rendering function for dots.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'dotSize',\n        help: 'Size of the dots',\n        description:\n            'Size of the dots, it also accepts a function which can be used to make it vary according to the associated datum.',\n        type: 'number | Function',\n        required: false,\n        defaultValue: defaults.dotSize,\n        controlType: 'range',\n        group: 'Dots',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 20,\n        },\n    },\n    {\n        key: 'dotColor',\n        help: 'Method to compute dots color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.dotColor,\n        controlType: 'inheritedColor',\n        group: 'Dots',\n    },\n    {\n        key: 'dotBorderWidth',\n        help: 'Width of the dots border.',\n        description:\n            'Width of the dots border, it also accepts a function which can be used to make it vary according to the associated datum.',\n        type: 'number | Function',\n        required: false,\n        defaultValue: defaults.dotBorderWidth,\n        controlType: 'lineWidth',\n        group: 'Dots',\n    },\n    {\n        key: 'dotBorderColor',\n        help: 'Method to compute dots border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.dotBorderColor,\n        controlType: 'inheritedColor',\n        group: 'Dots',\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'enableStackTooltip',\n        flavors: ['svg'],\n        help: `Enable/disable stack tooltip ('isInteractive' must also be 'true').`,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableStackTooltip,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport range from 'lodash/range'\nimport random from 'lodash/random'\n\nconst names = [\n    'Raoul',\n    'Josiane',\n    'Marcel',\n    'René',\n    'Paul',\n    'Jacques',\n    'Jane',\n    'André',\n    'Guillaume',\n    'Lyu',\n    'Maki',\n    'Junko',\n    'Emi',\n    'Kae',\n    'Tomoko',\n    'Camille',\n    'Jared',\n    'Ibrahim',\n    'Mohamed',\n    'Claude',\n    'Jean',\n    'Leonard',\n    'David',\n]\n\nexport const generateLightDataSet = () => ({\n    data: range(9).map(() =>\n        names.slice(0, 6).reduce((layer, key) => {\n            layer[key] = random(10, 200)\n            return layer\n        }, {})\n    ),\n    keys: names.slice(0, 6),\n})\n\nexport const generateHeavyDataSet = () => ({\n    data: range(360).map(() =>\n        names.reduce((layer, key) => {\n            layer[key] = random(10, 200)\n            return layer\n        }, {})\n    ),\n    keys: names,\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { patternDotsDef, patternSquaresDef } from '@nivo/core'\nimport { StreamDefaultProps } from '@nivo/stream'\n\nexport default {\n    margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60,\n    },\n\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: false,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: -40,\n    },\n    enableGridX: true,\n    enableGridY: false,\n\n    curve: 'catmullRom',\n    offsetType: 'silhouette',\n    order: 'none',\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.85,\n    borderWidth: 0,\n    borderColor: {\n        theme: 'background',\n    },\n\n    defs: [\n        patternDotsDef('dots', {\n            background: 'inherit',\n            color: '#2c998f',\n            size: 4,\n            padding: 2,\n            stagger: true,\n        }),\n        patternSquaresDef('squares', {\n            background: 'inherit',\n            color: '#e4c912',\n            size: 6,\n            padding: 2,\n            stagger: true,\n        }),\n    ],\n    fill: [\n        { match: { id: 'Paul' }, id: 'dots' },\n        { match: { id: 'Marcel' }, id: 'squares' },\n    ],\n\n    enableDots: StreamDefaultProps.enableDots,\n    dotSize: 8,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 2,\n    dotBorderColor: { from: 'color', modifiers: [['darker', 0.7]] },\n\n    animate: StreamDefaultProps.animate,\n    motionConfig: StreamDefaultProps.motionConfig,\n\n    isInteractive: StreamDefaultProps.isInteractive,\n    enableStackTooltip: true,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveStream, StreamDefaultProps } from '@nivo/stream'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/stream/meta.yml'\nimport mapper from '../../data/components/stream/mapper'\nimport { groups } from '../../data/components/stream/props'\nimport { generateLightDataSet } from '../../data/components/stream/generator'\nimport defaultSettings from '../../data/components/stream/defaults'\n\nconst initialProperties = {\n    ...defaultSettings,\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            translateX: 100,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemTextColor: '#999999',\n            symbolSize: 12,\n            symbolShape: 'circle',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Stream = () => {\n    return (\n        <ComponentTemplate\n            name=\"Stream\"\n            meta={meta.Stream}\n            icon=\"stream\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={StreamDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={(properties, data) => ({\n                keys: data.keys,\n                ...properties,\n            })}\n            generateData={generateLightDataSet}\n            getTabData={data => data.data}\n        >\n            {(properties, data, theme) => {\n                return (\n                    <ResponsiveStream\n                        data={data.data}\n                        keys={data.keys}\n                        {...properties}\n                        theme={theme}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Stream\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\nimport { textPropsByEngine } from '@nivo/core'\n\nexport const centerScale = scale => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return d => scale(d) + offset\n}\n\nconst timeByType = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = value =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = (scale, spec) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    // continuous scales\n    if (scale.ticks) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n\n        if (typeof spec === 'string') {\n            // time interval\n            const matches = spec.match(timeIntervalRegexp)\n            if (matches) {\n                // UTC is used as it's more predictible\n                // however local time could be used too\n                // let's see how it fits users' requirements\n                const timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0]\n                if (matches[1] === undefined) {\n                    return scale.ticks(timeType)\n                }\n\n                return scale.ticks(timeType.every(Number(matches[1])))\n            }\n\n            throw new Error(`Invalid tickValues: ${spec}`)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n\nexport const computeCartesianTicks = ({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}) => {\n    const values = getScaleTicks(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    let translate\n    let textAlign = textProps.align.center\n    let textBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d), y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align.right\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align.left\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: value,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = (format, scale) => {\n    if (!format || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const f = timeFormat(format)\n        return d => f(new Date(d))\n    }\n\n    return d3Format(format)\n}\n\nexport const computeGridLines = ({ width, height, scale, axis, values: _values }) => {\n    const lineValues = Array.isArray(_values) ? _values : undefined\n    const lineCount = isInteger(_values) ? _values : undefined\n\n    const values = lineValues || getScaleTicks(scale, lineCount)\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n\n    let lines\n    if (axis === 'x') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: position(v),\n            x2: position(v),\n            y1: 0,\n            y2: height,\n        }))\n    } else if (axis === 'y') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: 0,\n            x2: width,\n            y1: position(v),\n            y2: position(v),\n        }))\n    }\n\n    return lines\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport { animated } from 'react-spring'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\n\nconst AxisTick = ({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}) => {\n    const theme = useTheme()\n\n    let value = _value\n    if (format !== undefined) {\n        value = format(value)\n    }\n\n    let gStyle = { opacity: animatedProps.opacity }\n    if (onClick) {\n        gStyle['cursor'] = 'pointer'\n    }\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            {...(onClick ? { onClick: e => onClick(e, value) } : {})}\n            style={gStyle}\n        >\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nAxisTick.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        .isRequired,\n    format: PropTypes.func,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    lineX: PropTypes.number.isRequired,\n    lineY: PropTypes.number.isRequired,\n    textX: PropTypes.number.isRequired,\n    textY: PropTypes.number.isRequired,\n    textBaseline: PropTypes.string.isRequired,\n    textAnchor: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    rotate: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    animatedProps: PropTypes.object.isRequired,\n}\nAxisTick.defaultProps = {\n    opacity: 1,\n    rotate: 0,\n}\n\nexport default memo(AxisTick)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, useTransition, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { axisPropTypes } from '../props'\nimport AxisTick from './AxisTick'\n\nconst defaultTickRenderer = props => <AxisTick {...props} />\n\nconst Axis = ({\n    axis,\n    scale,\n    x,\n    y,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    format,\n    renderTick,\n    legend,\n    legendPosition,\n    legendOffset,\n    onClick,\n    ariaHidden,\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transitions = useTransition(ticks, tick => tick.key, {\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transitions.map(({ item: tick, props: transitionProps, key }, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                    key,\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nAxis.propTypes = {\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    scale: PropTypes.func.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    length: PropTypes.number.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    tickValues: axisPropTypes.tickValues,\n    tickSize: PropTypes.number.isRequired,\n    tickPadding: PropTypes.number.isRequired,\n    tickRotation: PropTypes.number.isRequired,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func.isRequired,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n    legendOffset: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    ariaHidden: PropTypes.bool,\n}\nAxis.defaultProps = {\n    x: 0,\n    y: 0,\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    renderTick: defaultTickRenderer,\n    legendPosition: 'end',\n    legendOffset: 0,\n}\n\nexport default memo(Axis)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Axis from './Axis'\nimport { axisPropType } from '../props'\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nconst Axes = ({ xScale, yScale, width, height, top, right, bottom, left }) => {\n    const axes = { top, right, bottom, left }\n\n    return positions.map(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n\n        return (\n            <Axis\n                key={position}\n                {...axis}\n                axis={isXAxis ? 'x' : 'y'}\n                x={position === 'right' ? width : 0}\n                y={position === 'bottom' ? height : 0}\n                scale={isXAxis ? xScale : yScale}\n                length={isXAxis ? width : height}\n                ticksPosition={ticksPosition}\n            />\n        )\n    })\n}\n\nAxes.propTypes = {\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    top: axisPropType,\n    right: axisPropType,\n    bottom: axisPropType,\n    left: axisPropType,\n}\n\nexport default memo(Axes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nconst GridLine = ({ animatedProps }) => {\n    const theme = useTheme()\n\n    return <animated.line {...animatedProps} {...theme.grid.line} />\n}\n\nGridLine.propTypes = {\n    x1: PropTypes.number.isRequired,\n    x2: PropTypes.number.isRequired,\n    y1: PropTypes.number.isRequired,\n    y2: PropTypes.number.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n}\nGridLine.defaultProps = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n}\n\nexport default memo(GridLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport GridLine from './GridLine'\n\nconst GridLines = ({ lines }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transitions = useTransition(lines, line => line.key, {\n        initial: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        from: line => ({\n            opacity: 0,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        enter: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        update: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <g>\n            {transitions.map(({ item: line, props: animatedProps, key }) => (\n                <GridLine {...line} key={key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n}\n\nGridLines.propTypes = {\n    type: PropTypes.oneOf(['x', 'y']).isRequired,\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            x1: PropTypes.number,\n            x2: PropTypes.number,\n            y1: PropTypes.number,\n            y2: PropTypes.number,\n        })\n    ).isRequired,\n}\n\nexport default memo(GridLines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport GridLines from './GridLines'\nimport { computeGridLines } from '../compute'\n\nconst Grid = ({ width, height, xScale, yScale, xValues, yValues }) => {\n    const xLines = useMemo(() => {\n        if (!xScale) return false\n\n        return computeGridLines({\n            width,\n            height,\n            scale: xScale,\n            axis: 'x',\n            values: xValues,\n        })\n    }, [xScale, xValues])\n\n    const yLines = yScale\n        ? computeGridLines({\n              width,\n              height,\n              scale: yScale,\n              axis: 'y',\n              values: yValues,\n          })\n        : false\n\n    return (\n        <>\n            {xLines && <GridLines type=\"x\" lines={xLines} />}\n            {yLines && <GridLines type=\"y\" lines={yLines} />}\n        </>\n    )\n}\n\nGrid.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    xValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    yValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n}\n\nexport default memo(Grid)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const degreesToRadians = degrees => (degrees * Math.PI) / 180\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { degreesToRadians } from './utils'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\n\nexport const renderAxisToCanvas = (\n    ctx,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontSize}px ${theme.axis.ticks.text.fontFamily}`\n\n    if (theme.axis.domain.line.strokeWidth > 0) {\n        ctx.lineWidth = theme.axis.domain.line.strokeWidth\n        ctx.lineCap = 'square'\n        ctx.strokeStyle = theme.axis.domain.line.stroke\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    ticks.forEach(tick => {\n        if (theme.axis.ticks.line.strokeWidth > 0) {\n            ctx.lineWidth = theme.axis.ticks.line.strokeWidth\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.axis.ticks.line.stroke\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format !== undefined ? format(tick.value) : tick.value\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n        ctx.fillStyle = theme.axis.ticks.text.fill\n        ctx.fillText(value, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n        ctx.fillStyle = theme.axis.legend.text.fill\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nexport const renderAxesToCanvas = (\n    ctx,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = (ctx, { width, height, scale, axis, values }) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"sourceRoot":""}