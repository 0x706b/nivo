{"version":3,"sources":["webpack:///./src/pages/bar/api.js","webpack:///./src/data/components/bar/props.js","webpack:///./src/data/components/bar/generator.js","webpack:///./src/data/components/bar/mapper.js","webpack:///./src/components/components/api-client/ApiPreview.js","webpack:///./src/components/components/api-client/ApiTabs.js","webpack:///./src/components/components/api-client/ApiSubmit.js","webpack:///./src/components/components/api-client/ApiResponse.js","webpack:///./src/components/components/api-client/ApiClient.js"],"names":["generateLightDataSet","data","keys","BarApi","title","keywords","meta","Bar","tags","componentName","chartClass","apiPath","flavors","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","width","height","margin","top","right","bottom","left","JSON","stringify","indexBy","colors","scheme","colorBy","borderRadius","borderWidth","borderColor","from","modifiers","padding","innerPadding","minValue","maxValue","groupMode","layout","reverse","valueScale","type","indexScale","round","axisTop","enable","tickSize","tickPadding","tickRotation","legend","legendOffset","axisRight","axisBottom","legendPosition","axisLeft","enableGridX","enableGridY","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","props","key","help","required","group","description","defaultValue","defaults","controlType","controlOptions","choices","label","value","disabled","map","v","disabledValue","min","max","step","unit","enableControlForFlavors","themeProperty","defsProperties","layers","axesProperties","isInteractive","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","anchor","direction","dataFrom","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","itemDirection","onClick","alert","motionProperties","groupProperties","dishes","generateCountriesData","slice","size","generateHeavyDataSet","TooltipWrapper","styled","div","TooltipKey","span","TooltipValue","CustomTooltip","node","style","color","id","indexValue","settingsMapper","mapAxis","tooltip","values","exclude","Link","a","Image","img","EmptyContainer","theme","textLight","ApiPreview","responseStatus","chartUrl","href","target","rel","src","alt","tabs","ApiTabs","body","isLoading","useTheme","useState","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","tab","isCurrent","icon","iconColors","NavItem","onMouseEnter","onMouseLeave","Icon","Content","CodeBlock","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","tablet","mobile","nav","background","text","LoaderContainer","loaderBarAnimation","keyframes","LoaderBar","accent","Loader","Button","ApiSubmit","render","this","loading","Component","Container","Header","borderLight","ResponseJson","pre","ApiResponse","response","responseContent","ApiClient","handleSettingsUpdate","settings","setState","handleDataUpdate","e","state","Object","assign","handleSubmit","fetch","config","nivoApiUrl","method","headers","Accept","then","res","status","json","catch","err","console","error","component","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","ComponentFlavorSelector","current","ComponentDescription","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","onChange","cardAltBackground"],"mappings":"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","file":"component---src-pages-bar-api-js-76951f9bd0a709653e6c.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport SEO from '../../components/seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/bar/props'\nimport meta from '../../data/components/bar/meta.yml'\nimport mapper from '../../data/components/bar/mapper'\nimport { generateLightDataSet } from '../../data/components/bar/generator'\n\nconst { data, keys } = generateLightDataSet()\n\nconst BarApi = () => {\n    return (\n        <>\n            <SEO title=\"Bar HTTP API\" keywords={[...meta.Bar.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"Bar\"\n                chartClass=\"bar\"\n                apiPath=\"/charts/bar\"\n                flavors={meta.flavors}\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 1200,\n                    height: 500,\n                    margin: {\n                        top: 40,\n                        right: 50,\n                        bottom: 40,\n                        left: 50,\n                    },\n                    data: JSON.stringify(data, null, '  '),\n                    keys: keys,\n                    indexBy: 'country',\n\n                    colors: { scheme: 'nivo' },\n                    colorBy: 'id',\n                    borderRadius: 0,\n                    borderWidth: 0,\n                    borderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1.6]],\n                    },\n\n                    padding: 0.2,\n                    innerPadding: 0,\n                    minValue: 'auto',\n                    maxValue: 'auto',\n\n                    groupMode: 'stacked',\n                    layout: 'vertical',\n                    reverse: false,\n\n                    valueScale: { type: 'linear' },\n                    indexScale: { type: 'band', round: true },\n\n                    axisTop: {\n                        enable: false,\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: '',\n                        legendOffset: 36,\n                    },\n                    axisRight: {\n                        enable: false,\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: '',\n                        legendOffset: 0,\n                    },\n                    axisBottom: {\n                        enable: true,\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: 36,\n                    },\n                    axisLeft: {\n                        enable: true,\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'food',\n                        legendPosition: 'middle',\n                        legendOffset: -40,\n                    },\n\n                    enableGridX: false,\n                    enableGridY: true,\n\n                    enableLabel: true,\n                    labelSkipWidth: 12,\n                    labelSkipHeight: 12,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1.6]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default BarApi\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { BarDefaultProps as defaults } from '@nivo/bar'\nimport {\n    themeProperty,\n    axesProperties,\n    motionProperties,\n    defsProperties,\n    getLegendsProps,\n    groupProperties,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        help: 'Chart data.',\n        type: 'object[]',\n        required: true,\n        group: 'Base',\n    },\n    {\n        key: 'indexBy',\n        help: 'Key to use to index the data.',\n        description: `\n            Key to use to index the data,\n            this key must exist in each data item.\n\n            You can also provide a function which will\n            receive the data item and must return the desired index.\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.indexBy,\n        group: 'Base',\n    },\n    {\n        key: 'keys',\n        help: 'Keys to use to determine each serie.',\n        type: 'string[]',\n        required: false,\n        defaultValue: defaults.keys,\n        group: 'Base',\n    },\n    {\n        key: 'groupMode',\n        help: `How to group bars.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.groupMode,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'stacked', value: 'stacked' },\n                { label: 'grouped', value: 'grouped' },\n            ],\n        },\n    },\n    {\n        key: 'layout',\n        help: `How to display bars.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.layout,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'valueScale',\n        type: 'object',\n        group: 'Base',\n        help: `value scale configuration.`,\n        defaultValue: defaults.valueScale,\n        controlType: 'object',\n        controlOptions: {\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type.`,\n                    type: 'string',\n                    controlType: 'choices',\n                    controlOptions: {\n                        disabled: true,\n                        choices: ['linear', 'symlog'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'indexScale',\n        type: 'object',\n        group: 'Base',\n        help: `index scale configuration.`,\n        defaultValue: defaults.indexScale,\n        controlType: 'object',\n        controlOptions: {\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type.`,\n                    type: 'string',\n                    controlType: 'choices',\n                    controlOptions: {\n                        disabled: true,\n                        choices: ['band'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n                {\n                    key: 'round',\n                    help: 'Toggle index scale (for bar width) rounding.',\n                    type: 'boolean',\n                    controlType: 'switch',\n                },\n            ],\n        },\n    },\n    {\n        key: 'reverse',\n        help:\n            'Reverse bars, starts on top instead of bottom for vertical layout and right instead of left for horizontal one.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.reverse,\n        controlType: 'switch',\n        group: 'Base',\n    },\n    {\n        key: 'minValue',\n        help: 'Minimum value.',\n        description: `\n            Minimum value, if 'auto',\n            will use min value from the provided data.\n        `,\n        required: false,\n        defaultValue: defaults.minValue,\n        type: 'number | string',\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: -1000,\n            min: -1000,\n            max: 0,\n        },\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value, if 'auto',\n            will use max value from the provided data.\n        `,\n        required: false,\n        defaultValue: defaults.maxValue,\n        type: 'number | string',\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 1000,\n            min: 0,\n            max: 1000,\n        },\n    },\n    {\n        key: 'padding',\n        help: 'Padding between each bar (ratio).',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.padding,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 0.9,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'innerPadding',\n        help: 'Padding between grouped/stacked bars.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.innerPadding,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 10,\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using \\`ResponsiveBar\\`.\n            Also note that width exclude left/right axes,\n            please add margin to make sure they're visible.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using \\`ResponsiveBar\\`.\n            Also note that width exclude left/right axes,\n            please add margin to make sure they're visible.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'colorBy',\n        type: 'string | Function',\n        help: 'Property used to determine node color.',\n        description: `\n            Property to use to determine node color.\n            If a function is provided, it will receive\n            the current node data and must return\n            a string or number which will be passed\n            to the color generator.\n        `,\n        required: false,\n        defaultValue: defaults.colorBy,\n        controlType: 'choices',\n        group: 'Style',\n        controlOptions: {\n            choices: [\n                {\n                    label: 'id',\n                    value: 'id',\n                },\n                {\n                    label: 'index',\n                    value: 'index',\n                },\n            ],\n        },\n    },\n    {\n        key: 'borderRadius',\n        flavors: ['svg', 'api'],\n        help: 'Rectangle border radius.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderRadius,\n        controlType: 'range',\n        group: 'Style',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    {\n        key: 'borderWidth',\n        help: 'Width of bar border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        description: `\n            how to compute border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'layers',\n        flavors: ['svg'],\n        help: 'Defines the order of layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`grid\\`, \\`axes\\`, \\`bars\\`, \\`markers\\`, \\`legends\\`.\n\n            You can also use this to insert extra layers to the chart,\n            this extra layer must be a function which will receive\n            the chart computed data and must return a valid SVG\n            element.\n        `,\n        type: 'Array<string | Function>',\n        required: false,\n        defaultValue: defaults.layers,\n        group: 'Customization',\n    },\n    {\n        key: 'enableLabel',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        group: 'Labels',\n        help: 'Define how bar labels are computed.',\n        description: `\n            Define how bar labels are computed.\n\n            By default it will use the bar's value.\n            It accepts a string which will be used to access\n            a specific bar data property, such as\n            \\`'value'\\` or \\`'id'\\`.\n\n            You can also use a funtion if you want to\n            add more logic, this function will receive\n            the current bar's data and must return\n            the computed label which, depending on the context,\n            should return a string or an svg element (Bar) or\n            a string (BarCanvas). For example let's say you want\n            to use a label with both the id and the value,\n            you can achieve this with:\n            \\`\\`\\`\n            label={d => \\`\\${d.id}: \\${d.value}\\`}\n            \\`\\`\\`\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.label,\n    },\n    {\n        key: 'labelFormat',\n        group: 'Labels',\n        help: 'How to format labels.',\n        description: `\n            How to format labels,\n            [see d3.format() documentation](https://github.com/d3/d3-format/blob/master/README.md#format).\n        `,\n        type: 'string | Function',\n    },\n    {\n        key: 'labelSkipWidth',\n        help: 'Skip label if bar width is lower than provided value, ignored if 0.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.labelSkipWidth,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    {\n        key: 'labelSkipHeight',\n        help: 'Skip label if bar height is lower than provided value, ignored if 0.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.labelSkipHeight,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    {\n        key: 'labelTextColor',\n        help: 'Defines how to compute label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.labelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'enableGridX',\n        group: 'Grid & Axes',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n    },\n    {\n        key: 'gridXValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for vertical grid lines.',\n        type: 'Array<number | string>',\n        required: false,\n    },\n    {\n        key: 'enableGridY',\n        group: 'Grid & Axes',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridY,\n        controlType: 'switch',\n    },\n    {\n        key: 'gridYValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for horizontal grid lines.',\n        type: 'Array<number | string>',\n        required: false,\n    },\n    ...axesProperties(),\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Tooltip custom component',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the following data:\n            \\`\\`\\`\n            {\n                id:         string | number,\n                value:      number,\n                index:      number,\n                indexValue: string | number,\n                color:      string,\n                // datum associated to the current index (raw data)\n                data:       object\n            }\n            \\`\\`\\`\n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'Showcase custom tooltip component.',\n        type: 'boolean',\n        controlType: 'switch',\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'onClick handler',\n        description: `\n            onClick handler, will receive node data as first argument\n            & event as second one. The node data has the following shape:\n\n            \\`\\`\\`\n            {\n                id:         string | number,\n                value:      number,\n                index:      number,\n                indexValue: string | number,\n                color:      string,\n                // datum associated to the current index (raw data)\n                data:       object\n            }\n            \\`\\`\\`\n        `,\n    },\n    {\n        key: 'legends',\n        flavors: ['svg'],\n        type: 'object[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                dataFrom: 'keys',\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 0,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n    ...motionProperties(['svg'], defaults),\n]\n\nexport const groups = groupProperties(props)\n","import { generateCountriesData } from '@nivo/generators'\n\nconst dishes = [\n    'hot dog',\n    'burger',\n    'sandwich',\n    'kebab',\n    'fries',\n    'donut',\n    'junk',\n    'sushi',\n    'ramen',\n    'curry',\n    'udon',\n    'bagel',\n    'yakitori',\n    'takoyaki',\n    'tacos',\n    'miso soup',\n    'tortilla',\n    'tapas',\n    'chipirones',\n    'gazpacho',\n    'soba',\n    'bavette',\n    'steak',\n    'pizza',\n    'spaghetti',\n    'ravioli',\n    'salad',\n    'pad thai',\n    'bun',\n    'waffle',\n    'crepe',\n    'churros',\n    'paella',\n    'empanadas',\n    'bruschetta',\n    'onion soup',\n    'cassoulet',\n    'bouillabaisse',\n    'unagi',\n    'tempura',\n    'tonkatsu',\n    'shabu-shabu',\n    'twinkies',\n    'jerky',\n    'fajitas',\n    'jambalaya',\n    'meatloaf',\n    `mac n' cheese`,\n    'baked beans',\n    'popcorn',\n    'buffalo wings',\n    'BBQ ribs',\n    'apple pie',\n    'nachos',\n    'risotto',\n    'tiramisu',\n]\n\nexport const generateLightDataSet = () => ({\n    data: generateCountriesData(dishes.slice(0, 6), { size: 7, max: 200 }),\n    keys: dishes.slice(0, 6),\n})\n\nexport const generateHeavyDataSet = () => ({\n    data: generateCountriesData(dishes, { size: 21, max: 200 }),\n    keys: dishes,\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper, mapAxis } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    background: #333;\n    padding: 12px 16px;\n    font-size: 12px;\n    border-radius: 2px;\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\nconst TooltipValue = styled.span``\n\nconst CustomTooltip = node => {\n    return (\n        <TooltipWrapper style={{ color: node.color }}>\n            <TooltipKey>id</TooltipKey>\n            <TooltipValue>{node.id}</TooltipValue>\n            <TooltipKey>value</TooltipKey>\n            <TooltipValue>{node.value}</TooltipValue>\n            <TooltipKey>index</TooltipKey>\n            <TooltipValue>{node.index}</TooltipValue>\n            <TooltipKey>indexValue</TooltipKey>\n            <TooltipValue>{node.indexValue}</TooltipValue>\n            <TooltipKey>color</TooltipKey>\n            <TooltipValue>{node.color}</TooltipValue>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n    },\n    {\n        exclude: [\n            'enable axisTop',\n            'enable axisRight',\n            'enable axisBottom',\n            'enable axisLeft',\n            'custom tooltip example',\n        ],\n    }\n)\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ApiPreview = ({ responseStatus, chartUrl }) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n\n    return <div className=\"api-client_preview\">{content}</div>\n}\n\nApiPreview.propTypes = {\n    responseStatus: PropTypes.number,\n    chartUrl: PropTypes.string,\n}\n\nexport default ApiPreview\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport ApiPreview from './ApiPreview'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\nimport CodeBlock from '../../CodeBlock'\n\nconst tabs = ['preview', 'body', 'data']\n\nconst ApiTabs = ({ chartClass, data, body, isLoading, responseStatus, chartUrl }) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState('preview')\n    const [hoverTab, setHoverTab] = useState(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview\n                        isLoading={isLoading}\n                        responseStatus={responseStatus}\n                        chartUrl={chartUrl}\n                    />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nApiTabs.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n}\n\nexport default ApiTabs\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.6);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 60%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst LoaderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n\nclass ApiSubmit extends Component {\n    render() {\n        const { loading, onClick } = this.props\n\n        return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n    }\n}\n\nApiSubmit.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nApiSubmit.defaultProps = {}\n\nexport default ApiSubmit\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n\nclass ApiResponse extends Component {\n    render() {\n        const { responseStatus, response } = this.props\n\n        let responseContent = 'no response available'\n        if (response) {\n            responseContent = JSON.stringify(response, null, '  ')\n        }\n\n        return (\n            <Container>\n                <Header>\n                    Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}\n                </Header>\n                <ResponseJson>{responseContent}</ResponseJson>\n            </Container>\n        )\n    }\n}\n\nApiResponse.propTypes = {}\n\nApiResponse.defaultProps = {}\n\nexport default ApiResponse\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport ComponentPage from '../ComponentPage'\nimport ComponentHeader from '../ComponentHeader'\nimport ComponentFlavorSelector from '../ComponentFlavorSelector'\nimport ComponentDescription from '../ComponentDescription'\nimport ComponentSettings from '../ComponentSettings'\nimport ApiTabs from './ApiTabs'\nimport ApiSubmit from './ApiSubmit'\nimport ApiResponse from './ApiResponse'\nimport config from '../../../data/config'\n\nconst description = component => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\nexport default class ApiClient extends Component {\n    static propTypes = {\n        componentName: PropTypes.string.isRequired,\n        chartClass: PropTypes.string.isRequired,\n        apiPath: PropTypes.string.isRequired,\n        dataProperty: PropTypes.string.isRequired,\n        propsMapper: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        dataProperty: 'data',\n        propsMapper: props => props,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            props: props.defaultProps,\n            loading: false,\n            responseStatus: null,\n            response: null,\n        }\n    }\n\n    handleSettingsUpdate = settings => {\n        this.setState({ props: settings })\n    }\n\n    handleDataUpdate = e => {\n        const { dataProperty } = this.props\n        const { props } = this.state\n\n        this.setState({\n            props: Object.assign({}, props, {\n                [dataProperty]: e.target.value,\n            }),\n        })\n    }\n\n    handleSubmit = () => {\n        const { apiPath, propsMapper } = this.props\n        const { props } = this.state\n\n        this.setState({\n            loading: true,\n        })\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    responseStatus: res.status,\n                })\n\n                return res.json()\n            })\n            .then(res => {\n                this.setState({ response: res })\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    render() {\n        const {\n            componentName,\n            chartClass,\n            apiPath,\n            controlGroups,\n            dataProperty,\n            propsMapper,\n            flavors,\n        } = this.props\n        const { props, loading, responseStatus, response } = this.state\n\n        const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n        return (\n            <Layout>\n                <ComponentPage>\n                    <ComponentHeader\n                        chartClass={`${componentName} HTTP API`}\n                        tags={[`POST ${apiPath}`]}\n                    />\n                    {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                    <ComponentDescription description={description(componentName, apiPath)} />\n                    <ApiTabs\n                        chartClass={chartClass}\n                        data={props[dataProperty]}\n                        body={propsMapper(props)}\n                        isLoading={loading}\n                        responseStatus={responseStatus}\n                        chartUrl={response ? response.url : null}\n                    />\n                    <ControlPanel>\n                        <SubmitWrapper>\n                            <ApiSubmit loading={loading} onClick={this.handleSubmit} />\n                        </SubmitWrapper>\n                        <ApiResponse responseStatus={responseStatus} response={response} />\n                    </ControlPanel>\n                    <ComponentSettings\n                        component={componentName}\n                        settings={props}\n                        flavors={flavorKeys}\n                        currentFlavor=\"api\"\n                        groups={controlGroups}\n                        onChange={this.handleSettingsUpdate}\n                    />\n                </ComponentPage>\n            </Layout>\n        )\n    }\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.6);\n    width: var(--partialWidth);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 60%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n"],"sourceRoot":""}