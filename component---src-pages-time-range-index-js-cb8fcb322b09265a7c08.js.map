{"version":3,"file":"component---src-pages-time-range-index-js-cb8fcb322b09265a7c08.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/month.js","webpack://nivo-website/../node_modules/d3-time/src/week.js","webpack://nivo-website/../node_modules/d3-time/src/year.js","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/./src/data/components/time-range/mapper.js","webpack://nivo-website/./src/data/components/time-range/props.ts","webpack://nivo-website/./src/pages/time-range/index.js","webpack://nivo-website/../node_modules/lodash/_baseIsDate.js","webpack://nivo-website/../node_modules/lodash/isDate.js"],"sourcesContent":["import interval from \"./interval.js\";\nvar month = interval(function (date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function (start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function (date) {\n  return date.getMonth();\n});\nexport default month;\nexport var months = month.range;","import interval from \"./interval.js\";\nimport { durationMinute, durationWeek } from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function (date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;","import interval from \"./interval.js\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","import React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    background: #333;\n    padding: 10px;\n    border-radius: 4px;\n    grid-template-columns: 100px 1fr;\n    grid-column-gap: 12px;\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\n\nconst CustomTooltip = day => {\n    return (\n        <TooltipWrapper style={{ color: day.color }}>\n            <TooltipKey>day</TooltipKey>\n            <span>{day.day}</span>\n            <TooltipKey>value</TooltipKey>\n            <span>{day.value}</span>\n            <TooltipKey>coordinates.x</TooltipKey>\n            <span>{day.coordinates.x}</span>\n            <TooltipKey>coordinates.y</TooltipKey>\n            <span>{day.coordinates.y}</span>\n            <TooltipKey>height</TooltipKey>\n            <span>{day.height}</span>\n            <TooltipKey>width</TooltipKey>\n            <span>{day.width}</span>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n    },\n    {\n        exclude: ['custom tooltip example'],\n    }\n)\n","import { boxAlignments } from '@nivo/core'\nimport { timeRangeDefaultProps as defaults } from '@nivo/calendar'\nimport { themeProperty, getLegendsProps, groupProperties } from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                day:   string, // format must be YYYY-MM-DD\n                value: number\n            }>\n            \\`\\`\\`\n            You can also add arbitrary data to this structure\n            to be used in tooltips or event handlers.\n        `,\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'from',\n        group: 'Base',\n        help: 'start date',\n        type: 'string | Date',\n        required: false,\n    },\n    {\n        key: 'to',\n        group: 'Base',\n        help: 'end date',\n        type: 'string | Date',\n        required: false,\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative of\n            the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative of\n            the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'direction',\n        help: 'defines calendar layout direction.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.direction,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'align',\n        help: 'defines how calendar should be aligned inside chart container.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.align,\n        group: 'Base',\n        controlType: 'boxAnchor',\n        controlOptions: {\n            choices: boxAlignments.map((align: string) => ({\n                label: align,\n                value: align,\n            })),\n        },\n    },\n    {\n        key: 'minValue',\n        help: 'Minimum value.',\n        description: `\n            Minimum value. If 'auto', will pick the lowest value\n            in the provided data set.\n            Should be overriden if your data set does not contain\n            desired lower bound value.\n        `,\n        required: false,\n        defaultValue: defaults.minValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 0,\n            min: -300,\n            max: 300,\n        },\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value. If 'auto', will pick the highest value\n            in the provided data set.\n            Should be overriden if your data set does not contain\n            desired higher bound value.\n        `,\n        required: false,\n        defaultValue: defaults.maxValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 100,\n            min: 0,\n            max: 600,\n        },\n    },\n    themeProperty(['svg']),\n    {\n        key: 'colors',\n        group: 'Style',\n        help: 'Cell colors.',\n        description: `\n            An array of colors to be used in conjunction with\n            \\`domain\\` to compute days' color.\n            It applies to days having a value defined, otherwise,\n            \\`emptyColor\\` will be used.\n        `,\n        type: 'string[]',\n        required: false,\n        defaultValue: defaults.colors,\n    },\n    {\n        key: 'emptyColor',\n        help: 'color to use to fill days without available value.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.emptyColor,\n        controlType: 'colorPicker',\n        group: 'Style',\n    },\n    // Months\n    {\n        key: 'monthLegend',\n        help: `can be used to customize months label, returns abbreviated month name (english) by default. This can be used to use a different language`,\n        type: '(year: number, month: number, date: Date) => string | number',\n        required: false,\n        group: 'Months',\n    },\n    {\n        key: 'monthLegendPosition',\n        help: 'defines month legends position.',\n        type: `'before' | 'after'`,\n        required: false,\n        defaultValue: defaults.monthLegendPosition,\n        controlType: 'radio',\n        group: 'Months',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'monthLegendOffset',\n        help: 'define offset from month edge to its label.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.monthLegendOffset,\n        controlType: 'range',\n        group: 'Months',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    // Weekday\n    {\n        key: 'weekdayLegendOffset',\n        help: 'define offset from weekday edge to its label.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.weekdayLegendOffset,\n        controlType: 'range',\n        group: 'Weekday',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 100,\n        },\n    },\n    {\n        key: 'weekdayTicks',\n        help: 'define weekday tickmarks to show',\n        type: 'Array<0 | 1 | 2 | 3 | 4 | 5 | 6>',\n        required: false,\n        defaultValue: [1, 3, 5],\n        group: 'Weekday',\n        description: `\n            Array of weekday tickmarks to display:\\n\n            0 = Sunday\\n\n            1 = Monday\\n\n            2 = Tuesday\\n\n            3 = Wednesday\\n\n            4 = Thursday\\n\n            5 = Friday\\n\n            6 = Saturday\\n\n        `,\n    },\n    // Days\n    {\n        key: 'square',\n        help: 'force day cell into square shape',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.square,\n        controlType: 'switch',\n        group: 'Days',\n    },\n    {\n        key: 'dayRadius',\n        help: 'define border radius of each day cell.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.dayRadius,\n        controlType: 'range',\n        group: 'Days',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'daySpacing',\n        help: 'define spacing between each day cell.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.daySpacing,\n        controlType: 'range',\n        group: 'Days',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'dayBorderWidth',\n        help: 'width of days border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.dayBorderWidth,\n        controlType: 'lineWidth',\n        group: 'Days',\n    },\n    {\n        key: 'dayBorderColor',\n        help: 'color to use for days border.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.dayBorderColor,\n        controlType: 'colorPicker',\n        group: 'Days',\n    },\n    {\n        key: 'isInteractive',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        help: 'onClick handler, it receives clicked day data and mouse event.',\n        type: '(day, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation, it must return a valid HTML\n            element and will receive the following data:\n            \\`\\`\\`\n            {\n                day:     string,\n                date:    {Date},\n                value:   number,\n                color:   string,\n                coordinates: {\n                    x: number,\n                    y: number,\n                },\n                height:  number\n                width:   number\n            }\n            \\`\\`\\`\n            You can also customize the tooltip style\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        help: 'Showcase custom tooltip.',\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'legends',\n        flavors: ['svg'],\n        type: 'LegendProps[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                anchor: 'bottom-right',\n                direction: 'row',\n                justify: false,\n                itemCount: 4,\n                itemWidth: 42,\n                itemHeight: 36,\n                itemsSpacing: 14,\n                itemDirection: 'right-to-left',\n                translateX: -85,\n                translateY: -240,\n                symbolSize: 20,\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n]\n\nexport const groups = groupProperties(props)\n","import React from 'react'\nimport { ResponsiveTimeRange, timeRangeDefaultProps } from '@nivo/calendar'\nimport { generateDayCounts } from '@nivo/generators'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/time-range/meta.yml'\nimport mapper from '../../data/components/time-range/mapper'\nimport { groups } from '../../data/components/time-range/props'\n\nconst Tooltip = data => {\n    /* return custom tooltip */\n}\n\nconst from = new Date(2018, 3, 1)\nconst to = new Date(2018, 7, 12)\nconst generateData = () => generateDayCounts(from, to)\n\nconst initialProperties = {\n    from: '2018-04-01',\n    to: '2018-08-12',\n\n    align: 'center',\n    emptyColor: '#eeeeee',\n    colors: ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560'],\n    minValue: 0,\n    maxValue: 'auto',\n\n    margin: {\n        top: 40,\n        right: 40,\n        bottom: 100,\n        left: 40,\n    },\n    direction: 'horizontal',\n\n    monthLegendPosition: 'before',\n    monthLegendOffset: 10,\n\n    weekdayLegendOffset: 75,\n\n    square: true,\n    dayRadius: 0,\n    daySpacing: 0,\n    dayBorderWidth: 2,\n    dayBorderColor: '#ffffff',\n\n    isInteractive: true,\n    'custom tooltip example': false,\n    tooltip: null,\n\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'row',\n            justify: false,\n            itemCount: 4,\n            itemWidth: 42,\n            itemHeight: 36,\n            itemsSpacing: 14,\n            itemDirection: 'right-to-left',\n            translateX: -60,\n            translateY: -60,\n            symbolSize: 20,\n        },\n    ],\n}\n\nconst TimeRange = () => {\n    return (\n        <ComponentTemplate\n            name=\"TimeRange\"\n            meta={meta.TimeRange}\n            icon=\"time-range\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={timeRangeDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={properties => ({\n                ...properties,\n                tooltip: properties.tooltip ? Tooltip : undefined,\n            })}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveTimeRange\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={day => {\n                            logAction({\n                                type: 'click',\n                                label: `[day] ${day.day}: ${day.value}`,\n                                color: day.color,\n                                data: day,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default TimeRange\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n","var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n"],"names":["month","date","setDate","setHours","step","setMonth","getMonth","start","end","getFullYear","months","range","weekday","i","getDate","getDay","getTimezoneOffset","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","year","setFullYear","every","k","isFinite","Math","floor","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","key","omit","mapAxis","type","value","upperFirst","enable","mapFormat","format","enabled","undefined","TooltipWrapper","styled","TooltipKey","CustomTooltip","day","style","color","coordinates","x","y","height","width","tooltip","values","props","group","help","description","required","enableControlForFlavors","controlType","controlOptions","unit","min","max","defaultValue","defaults","choices","label","boxAlignments","align","disabledValue","themeProperty","flavors","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","legend","anchor","direction","justify","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","translateX","translateY","symbolSize","onClick","data","alert","JSON","stringify","groups","groupProperties","Tooltip","from","Date","to","generateData","generateDayCounts","initialProperties","emptyColor","colors","minValue","maxValue","margin","top","right","bottom","left","monthLegendPosition","monthLegendOffset","weekdayLegendOffset","square","dayRadius","daySpacing","dayBorderWidth","dayBorderColor","isInteractive","legends","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","timeRangeDefaultProps","propertiesMapper","mapper","codePropertiesMapper","theme","logAction","baseGetTag","isObjectLike","module","exports","baseIsDate","baseUnary","nodeUtil","nodeIsDate","isDate"],"sourceRoot":""}