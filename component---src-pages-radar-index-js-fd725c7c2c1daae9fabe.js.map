{"version":3,"sources":["webpack:///./src/data/components/radar/mapper.js","webpack:///./src/pages/radar/index.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../src/RadarShapes.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/RadarGridLabels.js","webpack:///../src/RadarGridLevels.js","webpack:///../src/RadarGrid.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/RadarTooltipItem.js","webpack:///../src/RadarTooltip.js","webpack:///../src/RadarDots.js","webpack:///../src/props.js","webpack:///../src/Radar.js","webpack:///../src/ResponsiveRadar.js","webpack:///./src/data/components/radar/props.js"],"names":["settingsMapper","colorBy","value","d","color","markersLabel","key","index","initialProperties","indexBy","maxValue","margin","top","right","bottom","left","curve","borderWidth","borderColor","from","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","theme","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","colors","scheme","fillOpacity","blendMode","animate","motionConfig","isInteractive","legends","anchor","direction","translateX","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","onClick","alert","JSON","stringify","effects","on","style","Radar","name","meta","icon","flavors","currentFlavor","properties","groups","propertiesMapper","mapper","codePropertiesMapper","data","keys","generateData","generateWinesTastes","getTabData","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","test","_toConsumableArray","isArray","arrayWithoutHoles","iter","Symbol","iterator","iterableToArray","unsupportedIterableToArray","TypeError","nonIterableSpread","RadarShapes","memo","colorByKey","radiusScale","angleStep","curveInterpolator","useTheme","getBorderColor","useInheritedColor","lineGenerator","useMemo","useMotionConfig","springConfig","useSprings","path","fill","stroke","config","immediate","animatedProps","strokeWidth","mixBlendMode","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","RadarGridLabels","radius","angles","indices","labelComponent","label","labelOffset","labels","_angle","angle","position","positionFromAngle","textAnchor","radiansToDegrees","id","transform","dominantBaseline","React","renderLabel","RadarGridLevels","shape","radii","dataLength","radarLineGenerator","useTransition","enter","update","leave","r","v","Math","points","RadarGrid","levels","x1","y1","x2","y2","y","_slicedToArray","arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","nonIterableRest","RadarTooltipItem","datum","startAngle","endAngle","arcGenerator","tooltipFormat","useState","isHover","setIsHover","useTooltip","showTooltipFromEvent","hideTooltip","tooltipFormatter","useValueFormatter","tooltip","rows","a","b","title","showItemTooltip","useCallback","event","hideItemTooltip","tipX","tipY","line","onMouseEnter","onMouseMove","onMouseLeave","RadarTooltip","getIndex","arc","d3Arc","rootStartAngle","RadarDots","symbol","size","enableLabel","labelFormat","labelYOffset","fillColor","getInheritedColorGenerator","strokeColor","getLabel","getLabelGenerator","pointData","acc","point","x","PropTypes","closedCurvePropType","inheritedColorPropType","gridLabel","dotSymbol","dotLabelFormat","ordinalColorsPropType","blendModePropType","role","isRequired","RadarDefaultProps","motionDamping","motionStiffness","partialMargin","width","height","getAccessorFor","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","getColor","useOrdinalColorScale","mapping","computedMaxValue","scaleLinear","centerX","centerY","legendData","useCurveInterpolation","containerWidth","containerHeight","withContainer","ResponsiveRadar","props","dotsDefaults","defaultProps","group","help","description","type","required","defaultValue","defaults","controlType","controlOptions","disabledValue","min","max","choices","closedCurvePropKeys","map","enableControlForFlavors","unit","step","themeProperty","choice","dotDefaults","motionProperties","groupProperties"],"mappings":"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","file":"component---src-pages-radar-index-js-fd725c7c2c1daae9fabe.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({\n    colorBy: value => {\n        if (value === 'd => d.color') return d => d.color\n        return value\n    },\n    markersLabel: value => {\n        if (value === `d => \\`\\${d.key}: \\${d.value}\\``) return d => `${d.key}: ${d.value}`\n        if (value === `d => \\`\\${d.index}: \\${d.value}\\``) return d => `${d.index}: ${d.value}`\n        return value\n    },\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { generateWinesTastes } from '@nivo/generators'\nimport { ResponsiveRadar } from '@nivo/radar'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/radar/meta.yml'\nimport mapper from '../../data/components/radar/mapper'\nimport { groups } from '../../data/components/radar/props'\n\nconst initialProperties = {\n    indexBy: 'taste',\n    maxValue: 'auto',\n\n    margin: {\n        top: 70,\n        right: 80,\n        bottom: 40,\n        left: 80,\n    },\n\n    curve: 'linearClosed',\n\n    borderWidth: 2,\n    borderColor: { from: 'color' },\n\n    gridLevels: 5,\n    gridShape: 'circular',\n    gridLabelOffset: 36,\n\n    enableDots: true,\n    dotSize: 10,\n    dotColor: { theme: 'background' },\n    dotBorderWidth: 2,\n    dotBorderColor: { from: 'color' },\n    enableDotLabel: true,\n    dotLabel: 'value',\n    dotLabelYOffset: -12,\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.25,\n    blendMode: 'multiply',\n\n    animate: true,\n    motionConfig: 'wobbly',\n\n    isInteractive: true,\n\n    legends: [\n        {\n            anchor: 'top-left',\n            direction: 'column',\n            translateX: -50,\n            translateY: -40,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemTextColor: '#999',\n            symbolSize: 12,\n            symbolShape: 'circle',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Radar = () => {\n    return (\n        <ComponentTemplate\n            name=\"Radar\"\n            meta={meta.Radar}\n            icon=\"radar\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            propertiesMapper={mapper}\n            codePropertiesMapper={(properties, data) => ({\n                keys: data.keys,\n                ...properties,\n            })}\n            generateData={generateWinesTastes}\n            getTabData={data => data.data}\n        >\n            {(properties, data, theme) => {\n                return (\n                    <ResponsiveRadar\n                        data={data.data}\n                        keys={data.keys}\n                        {...properties}\n                        theme={theme}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Radar\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { lineRadial } from 'd3-shape'\nimport { useMotionConfig, useTheme, blendModePropType } from '@nivo/core'\nimport { useInheritedColor, inheritedColorPropType } from '@nivo/colors'\n\nconst RadarShapes = memo(\n    ({\n        data,\n        keys,\n        colorByKey,\n        radiusScale,\n        angleStep,\n        curveInterpolator,\n        borderWidth,\n        borderColor,\n        fillOpacity,\n        blendMode,\n    }) => {\n        const theme = useTheme()\n        const getBorderColor = useInheritedColor(borderColor, theme)\n\n        const lineGenerator = useMemo(() => {\n            return lineRadial()\n                .radius(d => radiusScale(d))\n                .angle((d, i) => i * angleStep)\n                .curve(curveInterpolator)\n        }, [radiusScale, angleStep, curveInterpolator])\n\n        const { animate, config: springConfig } = useMotionConfig()\n        const springs = useSprings(\n            keys.length,\n            keys.map(key => ({\n                path: lineGenerator(data.map(d => d[key])),\n                fill: colorByKey[key],\n                stroke: getBorderColor({ key, color: colorByKey[key] }),\n                config: springConfig,\n                immediate: !animate,\n            }))\n        )\n\n        return springs.map((animatedProps, index) => {\n            const key = keys[index]\n\n            return (\n                <animated.path\n                    key={key}\n                    d={animatedProps.path}\n                    fill={animatedProps.fill}\n                    fillOpacity={fillOpacity}\n                    stroke={animatedProps.stroke}\n                    strokeWidth={borderWidth}\n                    style={{ mixBlendMode: blendMode }}\n                />\n            )\n        })\n    }\n)\n\nRadarShapes.displayName = 'RadarShapes'\nRadarShapes.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    radiusScale: PropTypes.func.isRequired,\n    angleStep: PropTypes.number.isRequired,\n\n    curveInterpolator: PropTypes.func.isRequired,\n\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    fillOpacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n}\n\nexport default RadarShapes\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig, positionFromAngle, radiansToDegrees } from '@nivo/core'\n\nconst textAnchorFromAngle = _angle => {\n    const angle = radiansToDegrees(_angle) + 90\n    if (angle <= 10 || angle >= 350 || (angle >= 170 && angle <= 190)) return 'middle'\n    if (angle > 180) return 'end'\n    return 'start'\n}\n\nconst renderLabel = (label, theme, labelComponent) => {\n    if (labelComponent === undefined) {\n        return (\n            <text\n                style={theme.axis.ticks.text}\n                dominantBaseline=\"central\"\n                textAnchor={label.anchor}\n            >\n                {label.id}\n            </text>\n        )\n    }\n\n    return React.createElement(labelComponent, label)\n}\n\nconst RadarGridLabels = memo(({ radius, angles, indices, label: labelComponent, labelOffset }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = indices.map((index, i) => {\n        const position = positionFromAngle(angles[i], radius + labelOffset)\n        const textAnchor = textAnchorFromAngle(angles[i])\n\n        return {\n            id: index,\n            angle: radiansToDegrees(angles[i]),\n            anchor: textAnchor,\n            ...position,\n        }\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y})`,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.g key={label.id} transform={animatedProps.transform}>\n                {renderLabel(label, theme, labelComponent)}\n            </animated.g>\n        )\n    })\n})\n\nRadarGridLabels.displayName = 'RadarGridLabels'\nRadarGridLabels.propTypes = {\n    radius: PropTypes.number.isRequired,\n    angles: PropTypes.arrayOf(PropTypes.number).isRequired,\n    indices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n        .isRequired,\n    label: PropTypes.func,\n    labelOffset: PropTypes.number.isRequired,\n}\n\nexport default RadarGridLabels\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { lineRadial, curveLinearClosed } from 'd3-shape'\nimport { useTransition, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\n\nconst RadarGridLevels = memo(({ shape, radii, angleStep, dataLength }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n    let transitions\n\n    const radarLineGenerator = useMemo(\n        () =>\n            lineRadial()\n                .angle(i => i * angleStep)\n                .curve(curveLinearClosed),\n        [angleStep]\n    )\n\n    if (shape === 'circular') {\n        transitions = useTransition(radii, (_, i) => `level.${i}`, {\n            enter: radius => ({ radius }),\n            update: radius => ({ radius }),\n            leave: { radius: 0 },\n            config: springConfig,\n            immediate: !animate,\n        })\n\n        return transitions.map(({ props: animatedProps, key }) => (\n            <animated.circle\n                key={key}\n                fill=\"none\"\n                r={animatedProps.radius.interpolate(v => Math.max(v, 0))}\n                {...theme.grid.line}\n            />\n        ))\n    }\n\n    const points = Array.from({ length: dataLength }, (_, i) => i)\n\n    transitions = useTransition(radii, (_, i) => `level.${i}`, {\n        enter: radius => ({ path: radarLineGenerator.radius(radius)(points) }),\n        update: radius => ({ path: radarLineGenerator.radius(radius)(points) }),\n        leave: { path: radarLineGenerator.radius(0)(points) },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return transitions.map(({ props: animatedProps, key }) => (\n        <animated.path key={key} fill=\"none\" d={animatedProps.path} {...theme.grid.line} />\n    ))\n})\n\nRadarGridLevels.displayName = 'RadarGridLevels'\nRadarGridLevels.propTypes = {\n    shape: PropTypes.oneOf(['circular', 'linear']).isRequired,\n    radii: PropTypes.arrayOf(PropTypes.number).isRequired,\n    angleStep: PropTypes.number.isRequired,\n    dataLength: PropTypes.number.isRequired,\n}\n\nexport default RadarGridLevels\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport RadialGridLabels from './RadarGridLabels'\nimport RadarGridLevels from './RadarGridLevels'\n\nconst RadarGrid = memo(({ indices, levels, shape, radius, angleStep, label, labelOffset }) => {\n    const theme = useTheme()\n    const { radii, angles } = useMemo(() => {\n        return {\n            radii: Array.from({ length: levels })\n                .map((_, i) => (radius / levels) * (i + 1))\n                .reverse(),\n            angles: Array.from({ length: indices.length }, (_, i) => i * angleStep - Math.PI / 2),\n        }\n    }, [indices, levels, radius, angleStep])\n\n    return (\n        <g>\n            {angles.map((angle, i) => {\n                const position = positionFromAngle(angle, radius)\n                return (\n                    <line\n                        key={`axis.${i}`}\n                        x1={0}\n                        y1={0}\n                        x2={position.x}\n                        y2={position.y}\n                        {...theme.grid}\n                    />\n                )\n            })}\n            <RadarGridLevels\n                shape={shape}\n                radii={radii}\n                angleStep={angleStep}\n                dataLength={indices.length}\n            />\n            <RadialGridLabels\n                radius={radius}\n                angles={angles}\n                indices={indices}\n                labelOffset={labelOffset}\n                label={label}\n            />\n        </g>\n    )\n})\n\nRadarGrid.displayName = 'RadarGrid'\nRadarGrid.propTypes = {\n    indices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n        .isRequired,\n    shape: PropTypes.oneOf(['circular', 'linear']).isRequired,\n    radius: PropTypes.number.isRequired,\n    levels: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    label: PropTypes.func,\n    labelOffset: PropTypes.number.isRequired,\n}\n\nexport default RadarGrid\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo, useState, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { positionFromAngle, useTheme, useValueFormatter } from '@nivo/core'\nimport { TableTooltip, Chip, useTooltip } from '@nivo/tooltip'\n\nconst RadarTooltipItem = memo(\n    ({\n        datum,\n        keys,\n        index,\n        colorByKey,\n        radius,\n        startAngle,\n        endAngle,\n        arcGenerator,\n        tooltipFormat,\n    }) => {\n        const [isHover, setIsHover] = useState(false)\n        const theme = useTheme()\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const tooltipFormatter = useValueFormatter(tooltipFormat)\n        const tooltip = useMemo(() => {\n            const rows = keys.map(key => [\n                <Chip key={key} color={colorByKey[key]} />,\n                key,\n                tooltipFormatter(datum[key], key),\n            ])\n            rows.sort((a, b) => a[2] - b[2])\n            rows.reverse()\n\n            return <TableTooltip title={<strong>{index}</strong>} rows={rows} theme={theme} />\n        }, [datum, keys, index, colorByKey, theme, tooltipFormatter])\n        const showItemTooltip = useCallback(\n            event => {\n                setIsHover(true)\n                showTooltipFromEvent(tooltip, event)\n            },\n            [showTooltipFromEvent, tooltip]\n        )\n        const hideItemTooltip = useCallback(() => {\n            setIsHover(false)\n            hideTooltip()\n        }, [hideTooltip, setIsHover])\n\n        const { path, tipX, tipY } = useMemo(() => {\n            const position = positionFromAngle(\n                startAngle + (endAngle - startAngle) * 0.5 - Math.PI / 2,\n                radius\n            )\n\n            return {\n                path: arcGenerator({ startAngle, endAngle }),\n                tipX: position.x,\n                tipY: position.y,\n            }\n        }, [startAngle, endAngle, radius, arcGenerator])\n\n        return (\n            <>\n                {isHover && <line x1={0} y1={0} x2={tipX} y2={tipY} style={theme.crosshair.line} />}\n                <path\n                    d={path}\n                    fill=\"#F00\"\n                    fillOpacity={0}\n                    onMouseEnter={showItemTooltip}\n                    onMouseMove={showItemTooltip}\n                    onMouseLeave={hideItemTooltip}\n                />\n            </>\n        )\n    }\n)\n\nRadarTooltipItem.displayName = 'RadarTooltipItem'\nRadarTooltipItem.propTypes = {\n    datum: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    startAngle: PropTypes.number.isRequired,\n    endAngle: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n\n    arcGenerator: PropTypes.func.isRequired,\n\n    tooltipFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n}\n\nexport default RadarTooltipItem\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { arc as d3Arc } from 'd3-shape'\nimport RadarTooltipItem from './RadarTooltipItem'\n\nconst RadarTooltip = memo(\n    ({ data, keys, getIndex, colorByKey, radius, angleStep, tooltipFormat }) => {\n        const arc = d3Arc().outerRadius(radius).innerRadius(0)\n\n        const halfAngleStep = angleStep * 0.5\n        let rootStartAngle = -halfAngleStep\n\n        return (\n            <g>\n                {data.map(d => {\n                    const index = getIndex(d)\n                    const startAngle = rootStartAngle\n                    const endAngle = startAngle + angleStep\n\n                    rootStartAngle += angleStep\n\n                    return (\n                        <RadarTooltipItem\n                            key={index}\n                            datum={d}\n                            keys={keys}\n                            index={index}\n                            colorByKey={colorByKey}\n                            startAngle={startAngle}\n                            endAngle={endAngle}\n                            radius={radius}\n                            arcGenerator={arc}\n                            tooltipFormat={tooltipFormat}\n                        />\n                    )\n                })}\n            </g>\n        )\n    }\n)\n\nRadarTooltip.displayName = 'RadarTooltip'\nRadarTooltip.propTypes = {\n    data: PropTypes.array.isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    getIndex: PropTypes.func.isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    radius: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n}\n\nexport default RadarTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, positionFromAngle, getLabelGenerator, DotsItem } from '@nivo/core'\nimport { getInheritedColorGenerator, inheritedColorPropType } from '@nivo/colors'\n\nconst RadarDots = ({\n    data,\n    keys,\n    getIndex,\n    colorByKey,\n    radiusScale,\n    angleStep,\n    symbol,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    label,\n    labelFormat,\n    labelYOffset,\n}) => {\n    const theme = useTheme()\n    const fillColor = getInheritedColorGenerator(color, theme)\n    const strokeColor = getInheritedColorGenerator(borderColor, theme)\n    const getLabel = getLabelGenerator(label, labelFormat)\n\n    const points = useMemo(\n        () =>\n            data.reduce((acc, datum, i) => {\n                const index = getIndex(datum)\n                keys.forEach(key => {\n                    const pointData = {\n                        index,\n                        key,\n                        value: datum[key],\n                        color: colorByKey[key],\n                    }\n                    acc.push({\n                        key: `${key}.${index}`,\n                        label: enableLabel ? getLabel(pointData) : null,\n                        style: {\n                            fill: fillColor(pointData),\n                            stroke: strokeColor(pointData),\n                            ...positionFromAngle(\n                                angleStep * i - Math.PI / 2,\n                                radiusScale(datum[key])\n                            ),\n                        },\n                        data: pointData,\n                    })\n                })\n\n                return acc\n            }, []),\n        [\n            data,\n            getIndex,\n            colorByKey,\n            enableLabel,\n            getLabel,\n            fillColor,\n            strokeColor,\n            angleStep,\n            radiusScale,\n        ]\n    )\n\n    return points.map(point => (\n        <DotsItem\n            key={point.key}\n            x={point.style.x}\n            y={point.style.y}\n            symbol={symbol}\n            size={size}\n            color={point.style.fill}\n            borderWidth={borderWidth}\n            borderColor={point.style.stroke}\n            label={point.label}\n            labelYOffset={labelYOffset}\n            theme={theme}\n            datum={point.data}\n        />\n    ))\n}\n\nRadarDots.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    getIndex: PropTypes.func.isRequired,\n    colorByKey: PropTypes.object.isRequired,\n    radiusScale: PropTypes.func.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.string,\n    labelYOffset: PropTypes.number,\n}\nRadarDots.defaultProps = {\n    size: 6,\n    color: { from: 'color' },\n    borderWidth: 0,\n    borderColor: { from: 'color' },\n    enableLabel: false,\n    label: 'value',\n}\n\nexport default RadarDots\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { LegendPropShape } from '@nivo/legends'\nimport { closedCurvePropType, motionPropTypes, blendModePropType } from '@nivo/core'\n\nexport const RadarPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    indexBy: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]).isRequired,\n    maxValue: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]).isRequired,\n\n    curve: closedCurvePropType.isRequired,\n\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    gridLevels: PropTypes.number,\n    gridShape: PropTypes.oneOf(['circular', 'linear']),\n    gridLabel: PropTypes.func,\n    gridLabelOffset: PropTypes.number,\n\n    enableDots: PropTypes.bool.isRequired,\n    dotSymbol: PropTypes.func,\n    dotSize: PropTypes.number,\n    dotColor: inheritedColorPropType,\n    dotBorderWidth: PropTypes.number,\n    dotBorderColor: inheritedColorPropType,\n    enableDotLabel: PropTypes.bool,\n    dotLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    dotLabelFormat: PropTypes.string,\n    dotLabelYOffset: PropTypes.number,\n\n    colors: ordinalColorsPropType.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n    role: PropTypes.string.isRequired,\n\n    ...motionPropTypes,\n}\n\nexport const RadarDefaultProps = {\n    maxValue: 'auto',\n\n    curve: 'linearClosed',\n\n    borderWidth: 2,\n    borderColor: { from: 'color' },\n\n    gridLevels: 5,\n    gridShape: 'circular',\n    gridLabelOffset: 16,\n\n    enableDots: true,\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.25,\n    blendMode: 'normal',\n\n    isInteractive: true,\n\n    legends: [],\n    role: 'img',\n\n    animate: true,\n    motionDamping: 13,\n    motionStiffness: 90,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport {\n    withContainer,\n    useTheme,\n    useCurveInterpolation,\n    useDimensions,\n    getAccessorFor,\n    SvgWrapper,\n} from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport RadarShapes from './RadarShapes'\nimport RadarGrid from './RadarGrid'\nimport RadarTooltip from './RadarTooltip'\nimport RadarDots from './RadarDots'\nimport { RadarDefaultProps, RadarPropTypes } from './props'\n\nconst Radar = memo(\n    ({\n        data,\n        keys,\n        indexBy,\n        maxValue,\n        curve,\n        margin: partialMargin,\n        width,\n        height,\n        borderWidth,\n        borderColor,\n        gridLevels,\n        gridShape,\n        gridLabel,\n        gridLabelOffset,\n        enableDots,\n        dotSymbol,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n        enableDotLabel,\n        dotLabel,\n        dotLabelFormat,\n        dotLabelYOffset,\n        colors,\n        fillOpacity,\n        blendMode,\n        isInteractive,\n        tooltipFormat,\n        legends,\n        role,\n    }) => {\n        const getIndex = useMemo(() => getAccessorFor(indexBy), [indexBy])\n        const indices = useMemo(() => data.map(getIndex), [data, getIndex])\n\n        const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const theme = useTheme()\n\n        const getColor = useOrdinalColorScale(colors, 'key')\n        const colorByKey = useMemo(\n            () =>\n                keys.reduce((mapping, key, index) => {\n                    mapping[key] = getColor({ key, index })\n                    return mapping\n                }, {}),\n            [keys, getColor]\n        )\n\n        const { radius, radiusScale, centerX, centerY, angleStep } = useMemo(() => {\n            const computedMaxValue =\n                maxValue !== 'auto'\n                    ? maxValue\n                    : Math.max(...data.reduce((acc, d) => [...acc, ...keys.map(key => d[key])], []))\n\n            const radius = Math.min(innerWidth, innerHeight) / 2\n            const radiusScale = scaleLinear().range([0, radius]).domain([0, computedMaxValue])\n\n            return {\n                radius,\n                radiusScale,\n                centerX: innerWidth / 2,\n                centerY: innerHeight / 2,\n                angleStep: (Math.PI * 2) / data.length,\n            }\n        }, [keys, indexBy, data, maxValue, innerWidth, innerHeight])\n\n        const legendData = keys.map(key => ({\n            id: key,\n            label: key,\n            color: colorByKey[key],\n        }))\n\n        const curveInterpolator = useCurveInterpolation(curve)\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                <g transform={`translate(${centerX}, ${centerY})`}>\n                    <RadarGrid\n                        levels={gridLevels}\n                        shape={gridShape}\n                        radius={radius}\n                        angleStep={angleStep}\n                        indices={indices}\n                        label={gridLabel}\n                        labelOffset={gridLabelOffset}\n                    />\n                    <RadarShapes\n                        data={data}\n                        keys={keys}\n                        colorByKey={colorByKey}\n                        radiusScale={radiusScale}\n                        angleStep={angleStep}\n                        curveInterpolator={curveInterpolator}\n                        borderWidth={borderWidth}\n                        borderColor={borderColor}\n                        fillOpacity={fillOpacity}\n                        blendMode={blendMode}\n                    />\n                    {isInteractive && (\n                        <RadarTooltip\n                            data={data}\n                            keys={keys}\n                            getIndex={getIndex}\n                            colorByKey={colorByKey}\n                            radius={radius}\n                            angleStep={angleStep}\n                            tooltipFormat={tooltipFormat}\n                        />\n                    )}\n                    {enableDots && (\n                        <RadarDots\n                            data={data}\n                            keys={keys}\n                            getIndex={getIndex}\n                            radiusScale={radiusScale}\n                            angleStep={angleStep}\n                            symbol={dotSymbol}\n                            size={dotSize}\n                            colorByKey={colorByKey}\n                            color={dotColor}\n                            borderWidth={dotBorderWidth}\n                            borderColor={dotBorderColor}\n                            enableLabel={enableDotLabel}\n                            label={dotLabel}\n                            labelFormat={dotLabelFormat}\n                            labelYOffset={dotLabelYOffset}\n                        />\n                    )}\n                </g>\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                        data={legendData}\n                        theme={theme}\n                    />\n                ))}\n            </SvgWrapper>\n        )\n    }\n)\n\nRadar.displayName = 'Radar'\nRadar.propTypes = RadarPropTypes\nRadar.defaultProps = RadarDefaultProps\n\nexport default withContainer(Radar)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Radar from './Radar'\n\nconst ResponsiveRadar = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Radar width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveRadar\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { closedCurvePropKeys, DotsItemDefaultProps as dotDefaults } from '@nivo/core'\nimport { RadarDefaultProps as defaults, RadarDots } from '@nivo/radar'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst dotsDefaults = RadarDots.defaultProps\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data. If using objects indexBy & keys\n            should be strings, if using array they\n            should be numbers.\n            \n            For example, given this config:\n            \\`\\`\\`\n            [\n                { language: 'javascript', john: 12, sarah: 32, bob: 27 },\n                { language: 'golang', john: 25, sarah: 15, bob: 3 },\n                { language: 'python', john: 5, sarah: 22, bob: 31 },\n                { language: 'java', john: 19, sarah: 17, bob: 9 }\n            ]\n            keys: ['john', 'sarah', 'bob']\n            indexBy: 'language'\n            \\`\\`\\`\n            We'll have a radar chart representing programing\n            skills for each user by language\n            (3 layers and 4 dimensions).\n        `,\n        type: 'Array<object | Array>',\n        required: true,\n    },\n    {\n        key: 'indexBy',\n        group: 'Base',\n        help: 'Key to use to index the data.',\n        description: `\n            Key to use to index the data, this key\n            must exist in each data item.\n        `,\n        type: 'string | number',\n        required: false,\n        defaultValue: defaults.indexBy,\n    },\n    {\n        key: 'keys',\n        group: 'Base',\n        help: 'Keys to use to determine each serie.',\n        description: `\n            Keys to use to determine each serie.\n            Those keys should exist in each data item.\n        `,\n        type: 'Array<string | number>',\n        required: false,\n        defaultValue: defaults.keys,\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value, if 'auto',\n            will use max value from\n            the provided data.\n        `,\n        required: false,\n        defaultValue: defaults.maxValue,\n        type: 'number | string',\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 200,\n            min: 0,\n            max: 1000,\n        },\n    },\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use\n            for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: closedCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveRadar/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveRadar/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines how to compute slice color.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'fillOpacity',\n        help: 'Shape fill opacity.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.fillOpacity,\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'blendMode',\n        flavors: ['svg'],\n        help: 'Defines CSS mix-blend-mode property.',\n        description: `\n            Defines CSS \\`mix-blend-mode\\` property, see\n            [MDN documentation](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode).\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.blendMode,\n        controlType: 'blendMode',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Shape border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'gridLevels',\n        help: 'Number of levels to display for grid',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.gridLevels,\n        controlType: 'range',\n        group: 'Grid',\n        controlOptions: {\n            min: 1,\n            max: 12,\n        },\n    },\n    {\n        key: 'gridShape',\n        help: 'Determine shape of the grid.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.gridShape,\n        controlType: 'choices',\n        group: 'Grid',\n        controlOptions: {\n            choices: [\n                { label: 'circular', value: 'circular' },\n                { label: 'linear', value: 'linear' },\n            ],\n        },\n    },\n    {\n        key: 'gridLabel',\n        type: 'Function',\n        group: 'Grid',\n        help: 'Grid label.',\n        description: `\n            An optional function to override label rendering.\n            It must return a **valid SVG element** and will\n            receive the following props:\n            \\`\\`\\`\n            {\n                id:     string\n                # this can be used to determine the label layout,\n                # if the element should be centered, left/right aligned\n                anchor: 'start' | 'middle' | 'end'\n                # angle in degrees\n                angle:  number\n            }\n            \\`\\`\\`\n            The component will be wrapped inside\n            a \\`g\\` element **already positioned**\n            where the default label would have been placed.\n        `,\n    },\n    {\n        key: 'gridLabelOffset',\n        help: 'Label offset from outer radius.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.gridLabelOffset,\n        controlType: 'range',\n        group: 'Grid',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'enableDots',\n        help: 'Enable/disable dots.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableDots,\n        controlType: 'switch',\n        group: 'Dots',\n    },\n    {\n        key: 'dotSymbol',\n        group: 'Dots',\n        help: 'Overrides default dot circle.',\n        description: `\n            Overrides default dot circle.\n            The function will receive \\`size\\`,\n            \\`color\\`, \\`borderWidth\\` and \\`borderColor\\`\n            props and must return a valid SVG element.\n        `,\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'dotSize',\n        help: 'Size of the dots.',\n        type: 'number',\n        required: false,\n        defaultValue: dotsDefaults.size,\n        controlType: 'range',\n        group: 'Dots',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 64,\n        },\n    },\n    {\n        key: 'dotColor',\n        help: 'Method to compute dots color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: dotsDefaults.color,\n        controlType: 'inheritedColor',\n        group: 'Dots',\n    },\n    {\n        key: 'dotBorderWidth',\n        help: 'Width of the dots border.',\n        type: 'number',\n        required: false,\n        defaultValue: dotsDefaults.borderWidth,\n        controlType: 'range',\n        group: 'Dots',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 10,\n        },\n    },\n    {\n        key: 'dotBorderColor',\n        help: 'Method to compute dots border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: dotsDefaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Dots',\n    },\n    {\n        key: 'enableDotLabel',\n        help: 'Enable/disable dots label.',\n        type: 'boolean',\n        required: false,\n        defaultValue: dotsDefaults.enableLabel,\n        controlType: 'switch',\n        group: 'Dots',\n    },\n    {\n        key: 'dotLabel',\n        help: 'Dot label.',\n        description:\n            'Property to use to determine dot label. If a function is provided, it will receive current value and serie and must return a label.',\n        type: 'string',\n        required: false,\n        defaultValue: dotsDefaults.label,\n        controlType: 'choices',\n        group: 'Dots',\n        controlOptions: {\n            choices: [\n                'value',\n                'index',\n                'key',\n                `d => \\`\\${d.key}: \\${d.value}\\``,\n                `d => \\`\\${d.index}: \\${d.value}\\``,\n            ].map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'dotLabelYOffset',\n        help: 'Label Y offset from dot shape.',\n        type: 'number',\n        required: false,\n        defaultValue: dotDefaults.labelYOffset,\n        controlType: 'range',\n        group: 'Dots',\n        controlOptions: {\n            unit: 'px',\n            min: -24,\n            max: 24,\n        },\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n"],"sourceRoot":""}