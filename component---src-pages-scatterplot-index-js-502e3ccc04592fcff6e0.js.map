{"version":3,"sources":["webpack:///./src/data/components/scatterplot/generator.js","webpack:///./src/data/components/scatterplot/props.js","webpack:///../node_modules/lodash/random.js","webpack:///../node_modules/lodash/_baseRandom.js","webpack:///./src/lib/settings.js","webpack:///./src/pages/scatterplot/index.js","webpack:///./src/data/components/scatterplot/mapper.js"],"names":["keys","ageRange","weightRange","generateData","size","map","key","id","data","range","i","x","random","y","generateLightDataSet","generateHeavyDataSet","props","group","help","description","required","type","controlType","controlOptions","disabled","choices","v","label","value","disabledValue","defaultValue","min","max","defaults","nodeSize","unit","enableControlForFlavors","step","flavors","themeProperty","colors","blendMode","layers","enableGridX","enableGridY","axesProperties","isInteractive","useMesh","debugMesh","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","legend","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","itemDirection","onClick","alert","JSON","stringify","motionProperties","groups","groupProperties","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","Math","nativeRandom","module","exports","lower","upper","floating","undefined","temp","rand","length","nativeFloor","floor","settingsMapper","mapping","exclude","settings","options","overrides","Object","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","initialProperties","margin","top","right","bottom","left","xScale","xFormat","d","yScale","yFormat","ScatterPlotDefaultProps","axisTop","orient","tickSize","tickPadding","tickRotation","legendOffset","axisRight","axisBottom","legendPosition","axisLeft","animate","motionStiffness","motionDamping","legends","symbolShape","effects","on","style","itemOpacity","ScatterPlot","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","theme","logAction","node","serieId","color"],"mappings":"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","file":"component---src-pages-scatterplot-index-js-502e3ccc04592fcff6e0.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Rapha√´l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport range from 'lodash/range'\nimport random from 'lodash/random'\n\nconst keys = ['group A', 'group B', 'group C', 'group D', 'group E']\nconst ageRange = [0, 100]\nconst weightRange = [0, 120]\n\nconst generateData = size =>\n    keys.map(key => ({\n        id: key,\n        data: range(size).map(i => ({\n            x: random(ageRange[0], ageRange[1]),\n            y: random(weightRange[0], weightRange[1]),\n        })),\n    }))\n\nexport const generateLightDataSet = () => generateData(50)\n\nexport const generateHeavyDataSet = () => generateData(800)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Rapha√´l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ScatterPlotDefaultProps as defaults } from '@nivo/scatterplot'\nimport {\n    themeProperty,\n    axesProperties,\n    motionProperties,\n    getLegendsProps,\n    groupProperties,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:   string | number\n                data: Array<{\n                    x: number | string | Date\n                    y: number | string | Date\n                }>\n            }>\n            \\`\\`\\`\n\n            Please note that you should adjust \\`xScale\\`\n            and \\`yScale\\` according to \\`x\\` and \\`y\\` type,\n            for example if you use dates, you should use\n            a \\`time\\` scale.\n        `,\n        required: true,\n    },\n    {\n        key: 'xScale',\n        type: 'object',\n        help: `X scale configuration.`,\n        group: 'Base',\n        controlType: 'object',\n        controlOptions: {\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type, supports linear, point and time scales.`,\n                    type: 'string',\n                    controlType: 'choices',\n                    controlOptions: {\n                        disabled: true,\n                        choices: ['linear'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Minimum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Maximum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 1200,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'xFormat',\n        group: 'Base',\n        type: 'string | Function',\n        help: 'Optional formatter for x values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n    },\n    {\n        key: 'yScale',\n        group: 'Base',\n        type: 'object',\n        help: `Y scale configuration.`,\n        controlType: 'object',\n        controlOptions: {\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type, supports linear, point and time scales.`,\n                    type: 'string',\n                    controlType: 'choices',\n                    controlOptions: {\n                        disabled: true,\n                        choices: ['linear'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Minimum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Maximum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 1200,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'yFormat',\n        group: 'Base',\n        type: 'string | Function',\n        help: 'Optional formatter for y values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n    },\n    {\n        key: 'nodeSize',\n        group: 'Base',\n        defaultValue: defaults.nodeSize,\n        type: 'number | object | Function',\n        help: `How to compute node size, static or dynamic.`,\n        description: `\n            If you provide a **number**, all nodes will have the same\n            **fixed size**.\n\n            You can also use an object to define a varying size,\n            it must conform to the following interface:\n\n            \\`\\`\\`\n            {\n                key:    string\n                values: [min: number, max: number]\n                sizes:  [min: number, max: number]\n            }\n            \\`\\`\\`\n\n            Then the size of each node will **depend on the value\n            of \\`key\\` and \\`sizes\\`**.\n\n            If you use a **custom function**, it will receive the current\n            node and must **return a number**.\n        `,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 24,\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        description: `\n            Not required if using\n            \\`Responsive*\\` component.\n            Also note that width exclude left/right axes,\n            please add margin to make sure they're visible.\n        `,\n        help: 'Chart width.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        description: `\n            Not required if using\n            \\`Responsive*\\` component.\n            Also note that width exclude top/bottom axes,\n            please add margin to make sure they're visible.\n        `,\n        help: 'Chart height.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        group: 'Style',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n    },\n    {\n        key: 'blendMode',\n        group: 'Style',\n        flavors: ['svg'],\n        help: 'Defines CSS mix-blend-mode property.',\n        description: `\n            Defines CSS \\`mix-blend-mode\\` property for nodes,\n            see\n            [MDN documentation](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode).\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.blendMode,\n        controlType: 'blendMode',\n    },\n    {\n        key: 'layers',\n        flavors: ['svg', 'canvas'],\n        group: 'Customization',\n        help: 'Defines the order of layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`grid\\`, \\`axes\\`, \\`points\\`, \\`markers\\`,\n            \\`mesh\\`, \\`legends\\`.\n\n            You can also use this to insert extra layers\n            to the chart.\n            \n            For \\`ScatterPlot\\`, the extra layer should be a component\n            and will receive current chart context as props.\n\n            If using \\`ScatterPlotCanvas\\`, the extra layer should be\n            a function and will receive canvas context as first argument\n            and current chart context object as second.\n        `,\n        required: false,\n        defaultValue: defaults.layers,\n    },\n    {\n        key: 'renderNode',\n        flavors: ['svg', 'canvas'],\n        group: 'Customization',\n        help: 'Override default node rendering.',\n    },\n    {\n        key: 'enableGridX',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    {\n        key: 'gridXValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for vertical grid lines.',\n        type: 'Array<number | string | Date>',\n        required: false,\n    },\n    {\n        key: 'enableGridY',\n        group: 'Grid & Axes',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridY,\n        controlType: 'switch',\n    },\n    {\n        key: 'gridYValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for horizontal grid lines.',\n        type: 'Array<number | string | Date>',\n        required: false,\n    },\n    ...axesProperties(),\n    {\n        key: 'isInteractive',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'useMesh',\n        group: 'Interactivity',\n        flavors: ['svg'],\n        help: 'Use a mesh to detect mouse interactions.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.useMesh,\n        controlType: 'switch',\n    },\n    {\n        key: 'debugMesh',\n        help: 'Display mesh used to detect mouse interactions (voronoi cells).',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.debugMesh,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will\n            receive the node as a property.\n            \n            You can also customize the tooltip style\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        help: 'onMouseEnter handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        help: 'onMouseMove handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        help: 'onMouseLeave handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        help: 'onClick handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    ,\n    {\n        key: 'legends',\n        group: 'Legends',\n        flavors: ['svg', 'canvas'],\n        type: 'object[]',\n        help: `Optional chart's legends.`,\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 0,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n    ...motionProperties(['svg'], defaults),\n]\n\nexport const groups = groupProperties(props)\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Rapha√´l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping, { exclude = [] } = {}) => (settings, options = {}) => {\n    const overrides = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = type => (value, settings) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }) => (enabled === true ? format : undefined)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Rapha√´l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveScatterPlot, ScatterPlotDefaultProps } from '@nivo/scatterplot'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/scatterplot/meta.yml'\nimport mapper from '../../data/components/scatterplot/mapper'\nimport { groups } from '../../data/components/scatterplot/props'\nimport { generateLightDataSet } from '../../data/components/scatterplot/generator'\n\nconst initialProperties = {\n    margin: {\n        top: 60,\n        right: 140,\n        bottom: 70,\n        left: 90,\n    },\n\n    xScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n    xFormat: d => `${d} kg`,\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n    yFormat: d => `${d} cm`,\n\n    colors: ScatterPlotDefaultProps.colors,\n    blendMode: 'multiply',\n\n    nodeSize: ScatterPlotDefaultProps.nodeSize,\n\n    enableGridX: ScatterPlotDefaultProps.enableGridX,\n    enableGridY: ScatterPlotDefaultProps.enableGridY,\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: false,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'weight',\n        legendPosition: 'middle',\n        legendOffset: 46,\n        format: d => `${d} kg`,\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'size',\n        legendPosition: 'middle',\n        legendOffset: -60,\n        format: d => `${d} cm`,\n    },\n\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n\n    isInteractive: true,\n    useMesh: true,\n    debugMesh: false,\n\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 130,\n            translateY: 0,\n            itemWidth: 100,\n            itemHeight: 12,\n            itemsSpacing: 5,\n            itemDirection: 'left-to-right',\n            symbolSize: 12,\n            symbolShape: 'circle',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemOpacity: 1,\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst ScatterPlot = () => {\n    return (\n        <ComponentTemplate\n            name=\"ScatterPlot\"\n            meta={meta.ScatterPlot}\n            icon=\"scatterplot\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={ScatterPlotDefaultProps}\n            propertiesMapper={mapper}\n            generateData={generateLightDataSet}\n        >\n            {(properties, data, theme, logAction) => (\n                <ResponsiveScatterPlot\n                    data={data}\n                    {...properties}\n                    theme={theme}\n                    onClick={node => {\n                        logAction({\n                            type: 'click',\n                            label: `[node] serie: ${node.data.serieId}, x: ${node.x}, y: ${node.y}`,\n                            color: node.style.color,\n                            data: node,\n                        })\n                    }}\n                />\n            )}\n        </ComponentTemplate>\n    )\n}\n\nexport default ScatterPlot\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Rapha√´l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper, mapAxis } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n"],"sourceRoot":""}