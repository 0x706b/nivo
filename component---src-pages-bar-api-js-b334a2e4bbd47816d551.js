"use strict";(self.webpackChunknivo_website=self.webpackChunknivo_website||[]).push([[6212],{3583:function(e,a,t){function r(e){return function(){return e}}t.d(a,{Z:function(){return r}})},10016:function(e,a,t){t.d(a,{X:function(){return n}});var r=t(74186),o=t(80169),i=[{key:"data",help:"Chart data.",type:"object[]",required:!0,group:"Base"},{key:"indexBy",help:"Key to use to index the data.",description:"\n            Key to use to index the data,\n            this key must exist in each data item.\n\n            You can also provide a function which will\n            receive the data item and must return the desired index.\n        ",type:"string | (datum: RawDatum): string | number",required:!1,defaultValue:r.XB.indexBy,group:"Base"},{key:"keys",help:"Keys to use to determine each serie.",type:"string[]",required:!1,defaultValue:r.XB.keys,group:"Base"},{key:"groupMode",help:"How to group bars.",type:"grouped | stacked",required:!1,defaultValue:r.XB.groupMode,controlType:"radio",group:"Base",controlOptions:{choices:[{label:"stacked",value:"stacked"},{label:"grouped",value:"grouped"}]}},{key:"layout",help:"How to display bars.",type:"horizontal | vertical",required:!1,defaultValue:r.XB.layout,controlType:"radio",group:"Base",controlOptions:{choices:[{label:"horizontal",value:"horizontal"},{label:"vertical",value:"vertical"}]}},{key:"valueScale",type:"object",group:"Base",help:"value scale configuration.",defaultValue:r.XB.valueScale,controlType:"object",controlOptions:{props:[{key:"type",help:"Scale type.",type:"string",controlType:"choices",controlOptions:{disabled:!0,choices:["linear","symlog"].map((function(e){return{label:e,value:e}}))}}]}},{key:"indexScale",type:"object",group:"Base",help:"index scale configuration.",defaultValue:r.XB.indexScale,controlType:"object",controlOptions:{props:[{key:"type",help:"Scale type.",type:"string",controlType:"choices",controlOptions:{disabled:!0,choices:["band"].map((function(e){return{label:e,value:e}}))}},{key:"round",help:"Toggle index scale (for bar width) rounding.",type:"boolean",controlType:"switch"}]}},{key:"reverse",help:"Reverse bars, starts on top instead of bottom for vertical layout and right instead of left for horizontal one.",type:"boolean",required:!1,defaultValue:r.XB.reverse,controlType:"switch",group:"Base"},{key:"minValue",help:"Minimum value.",description:"\n            Minimum value, if 'auto',\n            will use min value from the provided data.\n        ",required:!1,defaultValue:r.XB.minValue,type:"number | 'auto'",controlType:"switchableRange",group:"Base",controlOptions:{disabledValue:"auto",defaultValue:-1e3,min:-1e3,max:0}},{key:"maxValue",help:"Maximum value.",description:"\n            Maximum value, if 'auto',\n            will use max value from the provided data.\n        ",required:!1,defaultValue:r.XB.maxValue,type:"number | 'auto'",controlType:"switchableRange",group:"Base",controlOptions:{disabledValue:"auto",defaultValue:1e3,min:0,max:1e3}},{key:"valueFormat",group:"Base",help:"Optional formatter for values.",description:"\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        ",required:!1,type:"string | (value: number) => string | number",controlType:"valueFormat"},{key:"padding",help:"Padding between each bar (ratio).",type:"number",required:!1,defaultValue:r.XB.padding,controlType:"range",group:"Base",controlOptions:{min:0,max:.9,step:.05}},{key:"innerPadding",help:"Padding between grouped/stacked bars.",type:"number",required:!1,defaultValue:r.XB.innerPadding,controlType:"range",group:"Base",controlOptions:{unit:"px",min:0,max:10}},{key:"width",enableControlForFlavors:["api"],help:"Chart width.",description:"\n            not required if using `ResponsiveBar`.\n            Also note that width exclude left/right axes,\n            please add margin to make sure they're visible.\n        ",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"height",enableControlForFlavors:["api"],help:"Chart height.",description:"\n            not required if using `ResponsiveBar`.\n            Also note that width exclude left/right axes,\n            please add margin to make sure they're visible.\n        ",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"pixelRatio",flavors:["canvas"],help:"Adjust pixel ratio, useful for HiDPI screens.",required:!1,defaultValue:"Depends on device",type:"number",controlType:"range",group:"Base",controlOptions:{min:1,max:2}},{key:"margin",help:"Chart margin.",type:"object",required:!1,controlType:"margin",group:"Base"},(0,o.JR)(["svg","canvas","api"]),{key:"colors",help:"Defines color range.",type:"string | Function | string[]",required:!1,defaultValue:r.XB.colors,controlType:"ordinalColors",group:"Style"},{key:"colorBy",type:"'id' | 'indexValue'",help:"Property used to determine node color.",description:"\n            Property to use to determine node color.\n        ",required:!1,defaultValue:r.XB.colorBy,controlType:"choices",group:"Style",controlOptions:{choices:[{label:"id",value:"id"},{label:"indexValue",value:"indexValue"}]}},{key:"borderRadius",help:"Rectangle border radius.",type:"number",required:!1,defaultValue:r.XB.borderRadius,controlType:"range",group:"Style",controlOptions:{unit:"px",min:0,max:36}},{key:"borderWidth",help:"Width of bar border.",type:"number",required:!1,defaultValue:r.XB.borderWidth,controlType:"lineWidth",group:"Style"},{key:"borderColor",help:"Method to compute border color.",description:"\n            how to compute border color,\n            [see dedicated documentation](self:/guides/colors).\n        ",type:"string | object |Â Function",required:!1,defaultValue:r.XB.borderColor,controlType:"inheritedColor",group:"Style"}].concat((0,o.uE)("Style",["svg"]),[{key:"layers",flavors:["svg","canvas"],help:"Defines the order of layers.",description:"\n            Defines the order of layers, available layers are:\n            `grid`, `axes`, `bars`, `markers`, `legends`,\n            `annotations`. The `markers` layer is not available\n            in the canvas flavor.\n\n            You can also use this to insert extra layers to the chart,\n            this extra layer must be a function which will receive\n            the chart computed data and must return a valid SVG\n            element.\n        ",type:"Array<string | Function>",required:!1,defaultValue:r.XB.layers,group:"Customization"},{key:"enableLabel",help:"Enable/disable labels.",type:"boolean",required:!1,defaultValue:r.XB.enableLabel,controlType:"switch",group:"Labels"},{key:"label",group:"Labels",help:"Define how bar labels are computed.",description:"\n            Define how bar labels are computed.\n\n            By default it will use the bar's value.\n            It accepts a string which will be used to access\n            a specific bar data property, such as\n            `'value'` or `'id'`.\n\n            You can also use a funtion if you want to\n            add more logic, this function will receive\n            the current bar's data and must return\n            the computed label which, depending on the context,\n            should return a string or an svg element (Bar) or\n            a string (BarCanvas). For example let's say you want\n            to use a label with both the id and the value,\n            you can achieve this with:\n            ```\n            label={d => `${d.id}: ${d.value}`}\n            ```\n        ",type:"string | Function",required:!1,defaultValue:r.XB.label},{key:"labelSkipWidth",help:"Skip label if bar width is lower than provided value, ignored if 0.",type:"number",required:!1,defaultValue:r.XB.labelSkipWidth,controlType:"range",group:"Labels",controlOptions:{unit:"px",min:0,max:36}},{key:"labelSkipHeight",help:"Skip label if bar height is lower than provided value, ignored if 0.",type:"number",required:!1,defaultValue:r.XB.labelSkipHeight,controlType:"range",group:"Labels",controlOptions:{unit:"px",min:0,max:36}},{key:"labelTextColor",help:"Defines how to compute label text color.",type:"string | object | Function",required:!1,defaultValue:r.XB.labelTextColor,controlType:"inheritedColor",group:"Labels"},{key:"enableGridX",group:"Grid & Axes",help:"Enable/disable x grid.",type:"boolean",required:!1,defaultValue:r.XB.enableGridX,controlType:"switch"},{key:"gridXValues",group:"Grid & Axes",help:"Specify values to use for vertical grid lines.",type:"Array<number | string>",required:!1},{key:"enableGridY",group:"Grid & Axes",help:"Enable/disable y grid.",type:"boolean",required:!1,defaultValue:r.XB.enableGridY,controlType:"switch"},{key:"gridYValues",group:"Grid & Axes",help:"Specify values to use for horizontal grid lines.",type:"Array<number | string>",required:!1}],(0,o.uh)(),[{key:"isInteractive",flavors:["svg","canvas"],help:"Enable/disable interactivity.",type:"boolean",required:!1,defaultValue:r.XB.isInteractive,controlType:"switch",group:"Interactivity"},{key:"tooltip",flavors:["svg","canvas"],group:"Interactivity",type:"Function",required:!1,help:"Tooltip custom component",description:"\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the following data:\n            ```\n            {\n                bar: {\n                    id:             string | number,\n                    value:          number,\n                    formattedValue: string,\n                    index:          number,\n                    indexValue:     string | number,\n                    // datum associated to the current index (raw data)\n                    data:           object\n                },\n                color: string,\n                label: string\n            }\n            ```\n            You can also customize the style of the tooltip\n            using the `theme.tooltip` object.\n        "},{key:"custom tooltip example",flavors:["svg","canvas"],group:"Interactivity",help:"Showcase custom tooltip component.",type:"boolean",controlType:"switch"},{key:"onClick",flavors:["svg","canvas"],group:"Interactivity",type:"Function",required:!1,help:"onClick handler",description:"\n            onClick handler, will receive node data as first argument\n            & event as second one. The node data has the following shape:\n\n            ```\n            {\n                id:             string | number,\n                value:          number,\n                formattedValue: string,\n                index:          number,\n                indexValue:     string | number,\n                color:          string,\n                // datum associated to the current index (raw data)\n                data:           object\n            }\n            ```\n        "},{key:"legends",flavors:["svg","canvas"],type:"object[]",help:"Optional chart's legends.",group:"Legends",controlType:"array",controlOptions:{props:(0,o.y0)(["svg"]),shouldCreate:!0,addLabel:"add legend",shouldRemove:!0,getItemTitle:function(e,a){return"legend["+e+"]: "+a.anchor+", "+a.direction},svgDefaultProps:{dataFrom:"keys",anchor:"top-left",direction:"column",justify:!1,translateX:0,translateY:0,itemWidth:100,itemHeight:20,itemsSpacing:0,symbolSize:20,itemDirection:"left-to-right",onClick:function(e){alert(JSON.stringify(e,null,"    "))}}}}],(0,o.$j)(["svg"],r.XB,"react-spring"),[{key:"isFocusable",flavors:["svg"],group:"Accessibility",help:"Make the root SVG element and each bar item focusable, for keyboard navigation.",description:"\n            If enabled, focusing will also reveal the tooltip if `isInteractive` is `true`,\n            when a bar gains focus and hide it on blur.\n            \n            Also note that if this option is enabled, focusing a bar will reposition the tooltip\n            at a fixed location.\n        ",type:"boolean",controlType:"switch"},{key:"ariaLabel",flavors:["svg"],group:"Accessibility",help:"Main element [aria-label](https://www.w3.org/TR/wai-aria/#aria-label).",type:"string"},{key:"ariaLabelledBy",flavors:["svg"],group:"Accessibility",help:"Main element [aria-labelledby](https://www.w3.org/TR/wai-aria/#aria-labelledby).",type:"string"},{key:"ariaDescribedBy",flavors:["svg"],group:"Accessibility",help:"Main element [aria-describedby](https://www.w3.org/TR/wai-aria/#aria-describedby).",type:"string"},{key:"barAriaLabel",flavors:["svg"],group:"Accessibility",help:"[aria-label](https://www.w3.org/TR/wai-aria/#aria-label) for bar items.",type:"(data) => string"},{key:"barAriaLabelledBy",flavors:["svg"],group:"Accessibility",help:"[aria-labelledby](https://www.w3.org/TR/wai-aria/#aria-labelledby) for bar items.",type:"(data) => string"},{key:"barAriaDescribedBy",flavors:["svg"],group:"Accessibility",help:"[aria-describedby](https://www.w3.org/TR/wai-aria/#aria-describedby) for bar items.",type:"(data) => string"}]),n=(0,o.R2)(i)},47885:function(e,a,t){t.d(a,{i:function(){return i},g:function(){return n}});var r=t(38681),o=["hot dog","burger","sandwich","kebab","fries","donut","junk","sushi","ramen","curry","udon","bagel","yakitori","takoyaki","tacos","miso soup","tortilla","tapas","chipirones","gazpacho","soba","bavette","steak","pizza","spaghetti","ravioli","salad","pad thai","bun","waffle","crepe","churros","paella","empanadas","bruschetta","onion soup","cassoulet","bouillabaisse","unagi","tempura","tonkatsu","shabu-shabu","twinkies","jerky","fajitas","jambalaya","meatloaf","mac n' cheese","baked beans","popcorn","buffalo wings","BBQ ribs","apple pie","nachos","risotto","tiramisu"],i=function(){return{data:(0,r.aw)(o.slice(0,6),{size:7,max:200}),keys:o.slice(0,6)}},n=function(){return{data:(0,r.aw)(o,{size:21,max:200}),keys:o}}},22726:function(e,a,t){t(27378);var r=t(91542),o=t(62370),i=t(24246),n=["color"];var l=r.default.div.withConfig({displayName:"mapper__TooltipWrapper",componentId:"sc-ix4uwo-0"})(["display:grid;grid-template-columns:1fr 1fr;grid-column-gap:12px;background:#333;padding:12px 16px;font-size:12px;border-radius:2px;"]),s=r.default.span.withConfig({displayName:"mapper__TooltipKey",componentId:"sc-ix4uwo-1"})(["font-weight:600;"]),u=r.default.span.withConfig({displayName:"mapper__TooltipValue",componentId:"sc-ix4uwo-2"})([""]),d=function(e){var a=e.color,t=function(e,a){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);return(0,i.jsxs)(l,{style:{color:a},children:[(0,i.jsx)(s,{children:"id"}),(0,i.jsx)(u,{children:t.id}),(0,i.jsx)(s,{children:"value"}),(0,i.jsx)(u,{children:t.value}),(0,i.jsx)(s,{children:"formattedValue"}),(0,i.jsx)(u,{children:t.formattedValue}),(0,i.jsx)(s,{children:"index"}),(0,i.jsx)(u,{children:t.index}),(0,i.jsx)(s,{children:"indexValue"}),(0,i.jsx)(u,{children:t.indexValue}),(0,i.jsx)(s,{children:"color"}),(0,i.jsx)(u,{children:a})]})};a.Z=(0,o.h8)({valueFormat:o.Ld,axisTop:(0,o.h6)("top"),axisRight:(0,o.h6)("right"),axisBottom:(0,o.h6)("bottom"),axisLeft:(0,o.h6)("left"),tooltip:function(e,a){if(a["custom tooltip example"])return d}},{exclude:["enable axisTop","enable axisRight","enable axisBottom","enable axisLeft","custom tooltip example"]})},90253:function(e,a,t){t.r(a);t(27378);var r=t(95546),o=t(73447),i=t(10016),n=t(8029),l=t(22726),s=t(47885),u=t(24246),d=(0,s.i)(),p=d.data,c=d.keys;a.default=function(){return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(r.p,{title:"Bar HTTP API",keywords:[].concat(n.$Q.tags,["HTTP API"])}),(0,u.jsx)(o.Z,{componentName:"Bar",chartClass:"bar",apiPath:"/charts/bar",flavors:n.Kk,dataProperty:"data",controlGroups:i.X,propsMapper:l.Z,defaultProps:{width:1200,height:500,margin:{top:40,right:50,bottom:40,left:50},data:JSON.stringify(p,null,"  "),keys:c,indexBy:"country",colors:{scheme:"nivo"},colorBy:"id",borderRadius:0,borderWidth:0,borderColor:{from:"color",modifiers:[["darker",1.6]]},padding:.2,innerPadding:0,minValue:"auto",maxValue:"auto",groupMode:"stacked",layout:"vertical",reverse:!1,valueScale:{type:"linear"},indexScale:{type:"band",round:!0},valueFormat:{format:"",enabled:!1},axisTop:{enable:!1,tickSize:5,tickPadding:5,tickRotation:0,legend:"",legendOffset:36},axisRight:{enable:!1,tickSize:5,tickPadding:5,tickRotation:0,legend:"",legendOffset:0},axisBottom:{enable:!0,tickSize:5,tickPadding:5,tickRotation:0,legend:"country",legendPosition:"middle",legendOffset:36},axisLeft:{enable:!0,tickSize:5,tickPadding:5,tickRotation:0,legend:"food",legendPosition:"middle",legendOffset:-40},enableGridX:!1,enableGridY:!0,enableLabel:!0,labelSkipWidth:12,labelSkipHeight:12,labelTextColor:{from:"color",modifiers:[["darker",1.6]]}}})]})}}}]);
//# sourceMappingURL=component---src-pages-bar-api-js-b334a2e4bbd47816d551.js.map