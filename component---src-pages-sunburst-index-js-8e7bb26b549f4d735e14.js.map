{"version":3,"sources":["webpack:///./src/pages/sunburst/index.js"],"names":["generateData","generateLibTree","initialProperties","margin","top","right","bottom","left","id","value","valueFormat","format","enabled","cornerRadius","borderWidth","borderColor","theme","colors","scheme","colorBy","inheritColorFromParent","childColor","from","modifiers","enableArcLabels","arcLabel","arcLabelsRadiusOffset","arcLabelsSkipAngle","arcLabelsTextColor","animate","defaultProps","motionConfig","transitionMode","defs","fill","isInteractive","tooltip","Sunburst","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","data","logAction","onClick","node","type","label","Math","round","percentage","color","parent"],"mappings":"mOAaMA,EAAe,kBAAMC,eAErBC,EAAoB,CACtBC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAEVC,GAAI,OACJC,MAAO,MACPC,YAAa,CAAEC,OAAQ,GAAIC,SAAS,GACpCC,aAAc,EACdC,YAAa,EACbC,YAAa,CAAEC,MAAO,cACtBC,OAAQ,CAAEC,OAAQ,QAClBC,QAAS,KACTC,wBAAwB,EACxBC,WAAY,CACRC,KAAM,QACNC,UAAW,CAAC,CAAC,WAAY,MAE7BC,iBAAiB,EACjBC,SAAU,iBACVC,sBAAuB,GACvBC,mBAAoB,GACpBC,mBAAoB,CAChBN,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,OAE3BM,QAASC,IAAaD,QACtBE,aAAcD,IAAaC,aAC3BC,eAAgBF,IAAaE,eAC7BC,KAAM,GACNC,KAAM,GACNC,eAAe,EACf,0BAA0B,EAC1BC,QAAS,KACT,0BAA0B,GA4CfC,UAzCE,WACb,OACI,kBAAC,IAAD,CACIC,KAAK,WACLC,KAAMA,IAAKF,SACXG,KAAK,WACLC,QAASF,IAAKE,QACdC,cAAc,MACdC,WAAYC,IACZC,kBAAmBf,IACnB5B,kBAAmBA,EACnB4C,iBAAkBC,IAClB/C,aAAcA,IAEb,SAAC2C,EAAYK,EAAMhC,EAAOiC,GACvB,OACI,kBAAC,IAAD,eACID,KAAMA,GACFL,EAFR,CAGI3B,MAAOA,EACPkC,QAAS,SAAAC,GAAI,OACTF,EAAU,CACNG,KAAM,QACNC,MAAM,cAAeF,EAAK3C,GAArB,MAA6B2C,EAAK1C,MAAlC,KACD6C,KAAKC,MAAwB,IAAlBJ,EAAKK,YAAoB,IADnC,IAGLC,MAAON,EAAKM,MAEZT,KAAK,OAAD,UACG,IAAKG,EAAM,CAAC,WADf,CAEAO,OAAQ,IAAKP,EAAKO,OAAQ,CAAC,OAAQ,SAAU","file":"component---src-pages-sunburst-index-js-8e7bb26b549f4d735e14.js","sourcesContent":["import React from 'react'\nimport { defaultProps, ResponsiveSunburst } from '@nivo/sunburst'\nimport { generateLibTree } from '@nivo/generators'\nimport { omit } from 'lodash'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/sunburst/meta.yml'\nimport mapper from '../../data/components/sunburst/mapper'\nimport { groups } from '../../data/components/sunburst/props'\n\nconst Tooltip = () => {\n    /* return custom tooltip */\n}\n\nconst generateData = () => generateLibTree()\n\nconst initialProperties = {\n    margin: {\n        top: 10,\n        right: 10,\n        bottom: 10,\n        left: 10,\n    },\n    id: 'name',\n    value: 'loc',\n    valueFormat: { format: '', enabled: false },\n    cornerRadius: 2,\n    borderWidth: 1,\n    borderColor: { theme: 'background' },\n    colors: { scheme: 'nivo' },\n    colorBy: 'id',\n    inheritColorFromParent: true,\n    childColor: {\n        from: 'color',\n        modifiers: [['brighter', 0.1]],\n    },\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsSkipAngle: 10,\n    arcLabelsTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1.4]],\n    },\n    animate: defaultProps.animate,\n    motionConfig: defaultProps.motionConfig,\n    transitionMode: defaultProps.transitionMode,\n    defs: [],\n    fill: [],\n    isInteractive: true,\n    'custom tooltip example': false,\n    tooltip: null,\n    'showcase pattern usage': false,\n}\n\nconst Sunburst = () => {\n    return (\n        <ComponentTemplate\n            name=\"Sunburst\"\n            meta={meta.Sunburst}\n            icon=\"sunburst\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            defaultProperties={defaultProps}\n            initialProperties={initialProperties}\n            propertiesMapper={mapper}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveSunburst\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={node =>\n                            logAction({\n                                type: 'click',\n                                label: `[sunburst] ${node.id} - ${node.value}: ${\n                                    Math.round(node.percentage * 100) / 100\n                                }%`,\n                                color: node.color,\n                                // prevent cyclic dependency\n                                data: {\n                                    ...omit(node, ['parent']),\n                                    parent: omit(node.parent, ['data', 'parent', 'children']),\n                                },\n                            })\n                        }\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Sunburst\n"],"sourceRoot":""}