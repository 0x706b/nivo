{"version":3,"sources":["webpack:///../src/PieSlice.tsx","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/PieTooltip.tsx","webpack:///../src/props.ts","webpack:///../src/hooks.ts","webpack:///../src/RadialLabel.tsx","webpack:///../src/RadialLabels.tsx","webpack:///../src/SliceLabels.tsx","webpack:///../src/PieLegends.tsx","webpack:///../src/Pie.tsx","webpack:///../src/ResponsivePie.tsx","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/PieCanvas.tsx","webpack:///../src/ResponsivePieCanvas.tsx"],"names":["PieSlice","datum","path","borderWidth","borderColor","isInteractive","onClick","onMouseEnter","onMouseMove","onMouseLeave","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleTooltip","useCallback","event","createElement","handleMouseEnter","handleMouseMove","handleMouseLeave","handleClick","d","fill","strokeWidth","stroke","undefined","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties","defaultProps","id","sortByValue","innerRadius","padAngle","cornerRadius","layers","startAngle","endAngle","fit","from","modifiers","radialLabel","enableRadialLabels","radialLabelsSkipAngle","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsTextXOffset","radialLabelsTextColor","theme","radialLabelsLinkColor","enableSliceLabels","sliceLabel","sliceLabelsSkipAngle","sliceLabelsRadiusOffset","sliceLabelsTextColor","colors","scheme","defs","enableChip","color","legends","role","pixelRatio","window","useNormalizedData","data","valueFormat","getId","useMemo","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","datumId","datumValue","normalizedDatum","label","formattedValue","usePieArcs","pie","innerPie","degreesToRadians","angle","Math","arc","index","angleDeg","radiansToDegrees","usePieArcGenerator","radius","d3Arc","usePieFromBox","width","height","innerRadiusRatio","dataWithArc","computedProps","centerX","centerY","computeArcBoundingBox","points","box","ratio","adjustedBox","boundingBox","debug","arcGenerator","usePieSliceLabels","enable","skipAngle","radiusOffset","textColor","useTheme","getTextColor","useInheritedColor","getLabel","getLabelGenerator","datumWithArc","midAngle","labelRadius","position","positionFromAngle","datumTextColor","usePieRadialLabels","textXOffset","linkOffset","linkDiagonalLength","linkHorizontalLength","linkColor","getLinkColor","absoluteAngleRadians","positionA","positionB","absoluteAngleDegrees","positionC","x","y","labelPosition","textAlign","text","align","line","lineGenerator","RadialLabel","linkStrokeWidth","style","transform","textAnchor","textPropsByEngine","dominantBaseline","RadialLabels","radialLabels","labelData","sliceStyle","pointerEvents","SliceLabels","labelAccessor","labels","PieLegends","containerWidth","containerHeight","withContainer","partialMargin","margin","_borderColor","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","normalizedData","boundDefs","bindDefs","layerById","slices","sliceLabels","layerContext","usePieLayerContext","layer","ResponsivePie","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","toString","slice","constructor","name","test","unsupportedIterableToArray","TypeError","nonIterableRest","canvasEl","useRef","getBorderColor","useEffect","ctx","point","drawRadialLabels","drawSliceLabels","legend","renderLegendToCanvas","arcs","getArcFromMouse","getRelativeCursor","hoveredArc","getHoveredArc","handleMouseHover","ref","cursor","ResponsivePieCanvas"],"mappings":"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","file":"4244ab35c9d6bba1b11f9cf1e604aac120f082de-37073e81c0c62845bf82.js","sourcesContent":["import React, { createElement, useCallback } from 'react'\n// @ts-ignore\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface PieSliceProps<RawDatum> {\n    datum: ComputedDatum<RawDatum>\n    path?: string\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: string\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    onClick: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave: CompletePieSvgProps<RawDatum>['onMouseLeave']\n}\n\nexport const PieSlice = <RawDatum,>({\n    datum,\n    path,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip,\n}: PieSliceProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleTooltip = useCallback(\n        event => showTooltipFromEvent(createElement(tooltip, { datum }), event),\n        [showTooltipFromEvent, datum, tooltip]\n    )\n\n    const handleMouseEnter = useCallback(\n        event => {\n            onMouseEnter?.(datum, event)\n            handleTooltip(event)\n        },\n        [onMouseEnter, handleTooltip, datum]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            onMouseMove?.(datum, event)\n            handleTooltip(event)\n        },\n        [onMouseMove, handleTooltip, datum]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            onMouseLeave?.(datum, event)\n            hideTooltip()\n        },\n        [onMouseLeave, hideTooltip, datum]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick?.(datum, event)\n        },\n        [onClick, datum]\n    )\n\n    return (\n        <path\n            d={path}\n            fill={datum.fill || datum.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['slices', 'radialLabels', 'sliceLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // radial labels\n    radialLabel: 'id',\n    enableRadialLabels: true,\n    radialLabelsSkipAngle: 0,\n    radialLabelsLinkOffset: 0,\n    radialLabelsLinkDiagonalLength: 16,\n    radialLabelsLinkHorizontalLength: 24,\n    radialLabelsLinkStrokeWidth: 1,\n    radialLabelsTextXOffset: 6,\n    radialLabelsTextColor: { theme: 'labels.text.fill' },\n    radialLabelsLinkColor: { theme: 'axis.ticks.line.stroke' },\n\n    // slices labels\n    enableSliceLabels: true,\n    sliceLabel: 'formattedValue',\n    sliceLabelsSkipAngle: 0,\n    sliceLabelsRadiusOffset: 0.5,\n    sliceLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // styling\n    colors: ({ scheme: 'nivo' } as unknown) as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    // interactivity\n    isInteractive: true,\n\n    // tooltip\n    tooltip: PieTooltip,\n\n    // legends\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { useMemo } from 'react'\nimport { get } from 'lodash'\nimport { arc as d3Arc, pie as d3Pie } from 'd3-shape'\nimport {\n    // @ts-ignore\n    degreesToRadians,\n    // @ts-ignore\n    radiansToDegrees,\n    // @ts-ignore\n    useValueFormatter,\n    // @ts-ignore\n    computeArcBoundingBox,\n    useTheme,\n    // @ts-ignore\n    positionFromAngle,\n    // @ts-ignore\n    midAngle,\n    // @ts-ignore\n    getLabelGenerator,\n    // @ts-ignore\n    absoluteAngleRadians,\n    // @ts-ignore\n    absoluteAngleDegrees,\n} from '@nivo/core'\nimport {\n    OrdinalColorScaleConfig,\n    useOrdinalColorScale,\n    InheritedColorConfig,\n    useInheritedColor,\n} from '@nivo/colors'\nimport { defaultProps } from './props'\nimport {\n    CompletePieSvgProps,\n    ComputedDatum,\n    PieArc,\n    PieArcGenerator,\n    LabelAccessorFunction,\n    PieCustomLayerProps,\n    RadialLabelData,\n    SliceLabelData,\n} from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = useMemo(() => (typeof id === 'function' ? id : (d: RawDatum) => get(d, id)), [id])\n    const getValue = useMemo(\n        () => (typeof value === 'function' ? value : (d: RawDatum) => get(d, value)),\n        [value]\n    )\n    const formatValue = useValueFormatter(valueFormat as any)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    startAngle: number\n    endAngle: number\n    padAngle: number\n    sortByValue: boolean\n}): Omit<ComputedDatum<RawDatum>, 'fill'>[] => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .padAngle(degreesToRadians(padAngle))\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n\n        if (sortByValue !== true) innerPie.sortValues(null)\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(\n        () =>\n            pie(data).map(\n                (\n                    arc: Omit<PieArc, 'angle' | 'angleDeg'> & {\n                        data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                    }\n                ) => {\n                    const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                    return {\n                        ...arc.data,\n                        arc: {\n                            index: arc.index,\n                            startAngle: arc.startAngle,\n                            endAngle: arc.endAngle,\n                            padAngle: arc.padAngle,\n                            angle,\n                            angleDeg: radiansToDegrees(angle),\n                        },\n                    }\n                }\n            ),\n\n        [pie, data]\n    )\n}\n\nexport const usePieArcGenerator = ({\n    radius,\n    innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n}: {\n    radius: number\n    innerRadius: number\n    cornerRadius: number\n}): PieArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<PieArc>().outerRadius(radius).innerRadius(innerRadius).cornerRadius(cornerRadius),\n        [radius, innerRadius, cornerRadius]\n    )\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    'startAngle' | 'endAngle' | 'padAngle' | 'sortByValue' | 'cornerRadius'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n    })\n\n    const arcGenerator = usePieArcGenerator({\n        radius,\n        innerRadius,\n        cornerRadius,\n    })\n\n    return { dataWithArc, arcGenerator }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n    })\n\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const arcGenerator = usePieArcGenerator({\n        radius: computedProps.radius,\n        innerRadius: computedProps.innerRadius,\n        cornerRadius,\n    })\n\n    return {\n        dataWithArc,\n        arcGenerator,\n        ...computedProps,\n    }\n}\n\nexport const usePieSliceLabels = <RawDatum>({\n    enable,\n    dataWithArc,\n    skipAngle,\n    radius,\n    innerRadius,\n    radiusOffset,\n    label,\n    textColor,\n}: {\n    enable: boolean\n    dataWithArc: ComputedDatum<RawDatum>[]\n    skipAngle: number\n    radius: number\n    innerRadius: number\n    radiusOffset: number\n    label: string | LabelAccessorFunction<RawDatum>\n    textColor: InheritedColorConfig<ComputedDatum<RawDatum>>\n}): SliceLabelData<RawDatum>[] => {\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<ComputedDatum<RawDatum>>(textColor, theme)\n    const getLabel = useMemo(() => getLabelGenerator(label), [label])\n\n    return useMemo(() => {\n        if (!enable) return []\n\n        return dataWithArc\n            .filter(datumWithArc => skipAngle === 0 || datumWithArc.arc.angleDeg > skipAngle)\n            .map(datumWithArc => {\n                const angle = midAngle(datumWithArc.arc) - Math.PI / 2\n                const labelRadius = innerRadius + (radius - innerRadius) * radiusOffset\n                const position = positionFromAngle(angle, labelRadius)\n                const datumTextColor = getTextColor(datumWithArc)\n\n                return {\n                    ...position,\n                    label: getLabel(datumWithArc),\n                    textColor: datumTextColor,\n                    datum: datumWithArc,\n                }\n            })\n    }, [enable, dataWithArc, skipAngle, radius, innerRadius, radiusOffset, getLabel, getTextColor])\n}\n\nexport const usePieRadialLabels = <RawDatum>({\n    enable,\n    dataWithArc,\n    label,\n    textXOffset,\n    textColor,\n    radius,\n    skipAngle,\n    linkOffset,\n    linkDiagonalLength,\n    linkHorizontalLength,\n    linkColor,\n}: {\n    enable: boolean\n    dataWithArc: ComputedDatum<RawDatum>[]\n    label: string | LabelAccessorFunction<RawDatum>\n    textXOffset: number\n    textColor: InheritedColorConfig<ComputedDatum<RawDatum>>\n    radius: number\n    skipAngle: number\n    linkOffset: number\n    linkDiagonalLength: number\n    linkHorizontalLength: number\n    linkColor: InheritedColorConfig<ComputedDatum<RawDatum>>\n}): RadialLabelData<RawDatum>[] => {\n    const getLabel = useMemo(() => getLabelGenerator(label), [label])\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<ComputedDatum<RawDatum>>(textColor, theme)\n    const getLinkColor = useInheritedColor<ComputedDatum<RawDatum>>(linkColor, theme)\n\n    return useMemo(() => {\n        if (!enable) return []\n\n        return dataWithArc\n            .filter(datum => skipAngle === 0 || datum.arc.angleDeg > skipAngle)\n            .map(datum => {\n                const angle = absoluteAngleRadians(midAngle(datum.arc) - Math.PI / 2)\n                const positionA = positionFromAngle(angle, radius + linkOffset)\n                const positionB = positionFromAngle(angle, radius + linkOffset + linkDiagonalLength)\n\n                let positionC\n                let labelPosition\n                let textAlign\n\n                if (\n                    absoluteAngleDegrees(radiansToDegrees(angle)) < 90 ||\n                    absoluteAngleDegrees(radiansToDegrees(angle)) >= 270\n                ) {\n                    positionC = { x: positionB.x + linkHorizontalLength, y: positionB.y }\n                    labelPosition = {\n                        x: positionB.x + linkHorizontalLength + textXOffset,\n                        y: positionB.y,\n                    }\n                    textAlign = 'left'\n                } else {\n                    positionC = { x: positionB.x - linkHorizontalLength, y: positionB.y }\n                    labelPosition = {\n                        x: positionB.x - linkHorizontalLength - textXOffset,\n                        y: positionB.y,\n                    }\n                    textAlign = 'right'\n                }\n\n                return {\n                    text: getLabel(datum),\n                    textColor: getTextColor(datum),\n                    position: labelPosition,\n                    align: textAlign,\n                    line: [positionA, positionB, positionC],\n                    linkColor: getLinkColor(datum),\n                    datum,\n                }\n            })\n    }, [\n        dataWithArc,\n        skipAngle,\n        radius,\n        linkOffset,\n        linkDiagonalLength,\n        linkHorizontalLength,\n        textXOffset,\n        getLabel,\n        getTextColor,\n        getLinkColor,\n    ])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    arcGenerator: PieArcGenerator\n    centerX: number\n    centerY: number\n    radius: number\n    innerRadius: number\n}): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import React from 'react'\nimport { line } from 'd3-shape'\nimport {\n    // @ts-ignore\n    textPropsByEngine,\n    useTheme,\n} from '@nivo/core'\nimport { RadialLabelData, Point } from './types'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\nexport const RadialLabel = <RawDatum,>({\n    label,\n    linkStrokeWidth,\n}: {\n    label: RadialLabelData<RawDatum>\n    linkStrokeWidth: number\n}) => {\n    const theme = useTheme()\n\n    return (\n        <>\n            <path\n                d={lineGenerator(label.line) ?? undefined}\n                fill=\"none\"\n                style={{ fill: 'none', stroke: label.linkColor }}\n                strokeWidth={linkStrokeWidth}\n            />\n            <g transform={`translate(${label.position.x}, ${label.position.y})`}>\n                <text\n                    textAnchor={textPropsByEngine.svg.align[label.align]}\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: label.textColor,\n                    }}\n                >\n                    {label.text}\n                </text>\n            </g>\n        </>\n    )\n}\n","import React from 'react'\nimport { usePieRadialLabels } from './hooks'\nimport { RadialLabel } from './RadialLabel'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface RadialLabelsProps<RawDatum> {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    label: CompletePieSvgProps<RawDatum>['radialLabel']\n    skipAngle: CompletePieSvgProps<RawDatum>['radialLabelsSkipAngle']\n    radius: number\n    linkOffset: CompletePieSvgProps<RawDatum>['radialLabelsLinkOffset']\n    linkDiagonalLength: CompletePieSvgProps<RawDatum>['radialLabelsLinkDiagonalLength']\n    linkHorizontalLength: CompletePieSvgProps<RawDatum>['radialLabelsLinkHorizontalLength']\n    linkStrokeWidth: CompletePieSvgProps<RawDatum>['radialLabelsLinkStrokeWidth']\n    textXOffset: CompletePieSvgProps<RawDatum>['radialLabelsTextXOffset']\n    textColor: CompletePieSvgProps<RawDatum>['radialLabelsTextColor']\n    linkColor: CompletePieSvgProps<RawDatum>['radialLabelsLinkColor']\n}\n\nexport const RadialLabels = <RawDatum,>({\n    dataWithArc,\n    label,\n    radius,\n    skipAngle,\n    linkOffset,\n    linkDiagonalLength,\n    linkHorizontalLength,\n    linkStrokeWidth,\n    textXOffset,\n    textColor,\n    linkColor,\n}: RadialLabelsProps<RawDatum>) => {\n    const radialLabels = usePieRadialLabels<RawDatum>({\n        enable: true,\n        dataWithArc,\n        label,\n        textXOffset,\n        textColor,\n        radius,\n        skipAngle,\n        linkOffset,\n        linkDiagonalLength,\n        linkHorizontalLength,\n        linkColor,\n    })\n\n    return (\n        <>\n            {radialLabels.map(labelData => (\n                <RadialLabel\n                    key={labelData.datum.id}\n                    label={labelData}\n                    linkStrokeWidth={linkStrokeWidth}\n                />\n            ))}\n        </>\n    )\n}\n","import React, { CSSProperties } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { usePieSliceLabels } from './hooks'\nimport { CompletePieSvgProps, ComputedDatum } from './types'\n\nconst sliceStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\ninterface SliceLabelsProps<RawDatum> {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    label: CompletePieSvgProps<RawDatum>['sliceLabel']\n    radiusOffset: CompletePieSvgProps<RawDatum>['sliceLabelsRadiusOffset']\n    radius: number\n    innerRadius: number\n    skipAngle: CompletePieSvgProps<RawDatum>['sliceLabelsSkipAngle']\n    textColor: CompletePieSvgProps<RawDatum>['sliceLabelsTextColor']\n}\n\nexport const SliceLabels = <RawDatum,>({\n    dataWithArc,\n    label: labelAccessor,\n    radius,\n    innerRadius,\n    radiusOffset,\n    skipAngle,\n    textColor,\n}: SliceLabelsProps<RawDatum>) => {\n    const theme = useTheme()\n\n    const labels = usePieSliceLabels({\n        enable: true,\n        dataWithArc,\n        skipAngle,\n        radius,\n        innerRadius,\n        radiusOffset,\n        label: labelAccessor,\n        textColor,\n    })\n\n    return (\n        <>\n            {labels.map(label => (\n                <g\n                    key={label.datum.id}\n                    transform={`translate(${label.x}, ${label.y})`}\n                    style={sliceStyle}\n                >\n                    <text\n                        textAnchor=\"middle\"\n                        dominantBaseline=\"central\"\n                        style={{\n                            ...theme.labels.text,\n                            fill: label.textColor,\n                        }}\n                    >\n                        {label.label}\n                    </text>\n                </g>\n            ))}\n        </>\n    )\n}\n","import React from 'react'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    dataWithArc: ComputedDatum<RawDatum>[]\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    dataWithArc,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={dataWithArc}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","import React, { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    withContainer,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useTheme,\n    useDimensions,\n} from '@nivo/core'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { PieSlice } from './PieSlice'\nimport { RadialLabels } from './RadialLabels'\nimport { SliceLabels } from './SliceLabels'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\n\nconst Pie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor: _borderColor = defaultProps.borderColor as InheritedColorConfig<\n        ComputedDatum<RawDatum>\n    >,\n\n    // radial labels\n    radialLabel = defaultProps.radialLabel,\n    enableRadialLabels = defaultProps.enableRadialLabels,\n    radialLabelsSkipAngle = defaultProps.radialLabelsSkipAngle,\n    radialLabelsLinkOffset = defaultProps.radialLabelsLinkOffset,\n    radialLabelsLinkDiagonalLength = defaultProps.radialLabelsLinkDiagonalLength,\n    radialLabelsLinkHorizontalLength = defaultProps.radialLabelsLinkHorizontalLength,\n    radialLabelsLinkStrokeWidth = defaultProps.radialLabelsLinkStrokeWidth,\n    radialLabelsTextXOffset = defaultProps.radialLabelsTextXOffset,\n    radialLabelsTextColor = defaultProps.radialLabelsTextColor,\n    radialLabelsLinkColor = defaultProps.radialLabelsLinkColor,\n\n    // slices labels\n    sliceLabel = defaultProps.sliceLabel,\n    enableSliceLabels = defaultProps.enableSliceLabels,\n    sliceLabelsSkipAngle = defaultProps.sliceLabelsSkipAngle,\n    sliceLabelsTextColor = defaultProps.sliceLabelsTextColor,\n    sliceLabelsRadiusOffset = defaultProps.sliceLabelsRadiusOffset,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const theme = useTheme()\n\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius } = usePieFromBox<\n        RawDatum\n    >({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n    })\n\n    const borderColor = useInheritedColor<ComputedDatum<RawDatum>>(_borderColor, theme)\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        slices: null,\n        radialLabels: null,\n        sliceLabels: null,\n        legends: null,\n    }\n\n    if (layers.includes('slices')) {\n        layerById.slices = (\n            <g key=\"slices\" transform={`translate(${centerX},${centerY})`}>\n                {dataWithArc.map(datumWithArc => (\n                    <PieSlice<RawDatum>\n                        key={datumWithArc.id}\n                        datum={datumWithArc}\n                        path={arcGenerator(datumWithArc.arc) ?? undefined}\n                        borderWidth={borderWidth}\n                        borderColor={borderColor(datumWithArc)}\n                        tooltip={tooltip}\n                        isInteractive={isInteractive}\n                        onClick={onClick}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                    />\n                ))}\n            </g>\n        )\n    }\n\n    if (enableRadialLabels && layers.includes('radialLabels')) {\n        layerById.radialLabels = (\n            <g key=\"radialLabels\" transform={`translate(${centerX},${centerY})`}>\n                <RadialLabels<RawDatum>\n                    dataWithArc={dataWithArc}\n                    radius={radius}\n                    label={radialLabel}\n                    skipAngle={radialLabelsSkipAngle}\n                    linkOffset={radialLabelsLinkOffset}\n                    linkDiagonalLength={radialLabelsLinkDiagonalLength}\n                    linkHorizontalLength={radialLabelsLinkHorizontalLength}\n                    linkStrokeWidth={radialLabelsLinkStrokeWidth}\n                    textXOffset={radialLabelsTextXOffset}\n                    textColor={radialLabelsTextColor}\n                    linkColor={radialLabelsLinkColor}\n                />\n            </g>\n        )\n    }\n\n    if (enableSliceLabels && layers.includes('sliceLabels')) {\n        layerById.sliceLabels = (\n            <g key=\"sliceLabels\" transform={`translate(${centerX},${centerY})`}>\n                <SliceLabels<RawDatum>\n                    dataWithArc={dataWithArc}\n                    label={sliceLabel}\n                    radius={radius}\n                    innerRadius={innerRadius}\n                    radiusOffset={sliceLabelsRadiusOffset}\n                    skipAngle={sliceLabelsSkipAngle}\n                    textColor={sliceLabelsTextColor}\n                />\n            </g>\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                dataWithArc={dataWithArc}\n                legends={legends}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport default withContainer(Pie) as <RawDatum>(props: PieSvgProps<RawDatum>) => JSX.Element\n","import React from 'react'\n// @ts-ignore\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Pie from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { createElement, useEffect, useMemo, useRef } from 'react'\nimport {\n    // @ts-ignore\n    getHoveredArc,\n    // @ts-ignore\n    getRelativeCursor,\n    // @ts-ignore\n    textPropsByEngine,\n    useDimensions,\n    useTheme,\n    // @ts-ignore\n    withContainer,\n    Theme,\n} from '@nivo/core'\n// @ts-ignore\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\n// @ts-ignore\nimport { useTooltip } from '@nivo/tooltip'\nimport { useNormalizedData, usePieFromBox, usePieRadialLabels, usePieSliceLabels } from './hooks'\nimport { ComputedDatum, PieCanvasProps, RadialLabelData, SliceLabelData } from './types'\nimport { defaultProps } from './props'\n\nconst drawSliceLabels = <RawDatum,>(\n    ctx: CanvasRenderingContext2D,\n    labels: SliceLabelData<RawDatum>[],\n    theme: Theme\n) => {\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels!.text!.fontSize}px ${theme.labels!.text!.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.save()\n        ctx.translate(label.x, label.y)\n        ctx.fillStyle = label.textColor\n        ctx.fillText(`${label.label}`, 0, 0)\n        ctx.restore()\n    })\n}\n\n// prettier-ignore\nconst drawRadialLabels = <RawDatum, >(\n    ctx: CanvasRenderingContext2D,\n    labels: RadialLabelData<RawDatum>[],\n    theme: Theme,\n    linkStrokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels!.text!.fontSize}px ${theme.labels!.text!.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.save()\n        ctx.translate(label.position.x, label.position.y)\n        ctx.fillStyle = label.textColor\n        ctx.textAlign = textPropsByEngine.canvas.align[label.align]\n        ctx.fillText(`${label.text}`, 0, 0)\n        ctx.restore()\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = linkStrokeWidth\n        label.line.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        if (linkStrokeWidth > 0) ctx.stroke()\n    })\n}\n\n// prettier-ignore\nconst PieCanvas = <RawDatum, >({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = 1,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // radial labels\n    radialLabel = defaultProps.radialLabel,\n    enableRadialLabels = defaultProps.enableRadialLabels,\n    radialLabelsSkipAngle = defaultProps.radialLabelsSkipAngle,\n    radialLabelsLinkOffset = defaultProps.radialLabelsLinkOffset,\n    radialLabelsLinkDiagonalLength = defaultProps.radialLabelsLinkDiagonalLength,\n    radialLabelsLinkHorizontalLength = defaultProps.radialLabelsLinkHorizontalLength,\n    radialLabelsLinkStrokeWidth = defaultProps.radialLabelsLinkStrokeWidth,\n    radialLabelsTextXOffset = defaultProps.radialLabelsTextXOffset,\n    radialLabelsTextColor = defaultProps.radialLabelsTextColor,\n    radialLabelsLinkColor = defaultProps.radialLabelsLinkColor,\n\n    // slices labels\n    sliceLabel = defaultProps.sliceLabel,\n    enableSliceLabels = defaultProps.enableSliceLabels,\n    sliceLabelsSkipAngle = defaultProps.sliceLabelsSkipAngle,\n    sliceLabelsTextColor = defaultProps.sliceLabelsTextColor,\n    sliceLabelsRadiusOffset = defaultProps.sliceLabelsRadiusOffset,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n    })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const radialLabels = usePieRadialLabels<RawDatum>({\n        enable: enableRadialLabels,\n        dataWithArc,\n        label: radialLabel,\n        textXOffset: radialLabelsTextXOffset,\n        textColor: radialLabelsTextColor,\n        radius,\n        skipAngle: radialLabelsSkipAngle,\n        linkOffset: radialLabelsLinkOffset,\n        linkDiagonalLength: radialLabelsLinkDiagonalLength,\n        linkHorizontalLength: radialLabelsLinkHorizontalLength,\n        linkColor: radialLabelsLinkColor,\n    })\n\n    const sliceLabels = usePieSliceLabels<RawDatum>({\n        enable: enableSliceLabels,\n        dataWithArc,\n        label: sliceLabel,\n        radius,\n        innerRadius,\n        radiusOffset: sliceLabelsRadiusOffset,\n        skipAngle: sliceLabelsSkipAngle,\n        textColor: sliceLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top);\n\n        (arcGenerator as any).context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableRadialLabels === true) {\n            drawRadialLabels(ctx, radialLabels, theme, radialLabelsLinkStrokeWidth)\n        }\n\n        if (enableSliceLabels === true) {\n            drawSliceLabels(ctx, sliceLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        getBorderColor,\n        enableRadialLabels,\n        radialLabels,\n        enableSliceLabels,\n        sliceLabels,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = getHoveredArc(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport default withContainer(PieCanvas) as <RawDatum>(\n    props: PieCanvasProps<RawDatum>\n) => JSX.Element\n","import React from 'react'\n// @ts-ignore\nimport { ResponsiveWrapper } from '@nivo/core'\nimport PieCanvas from './PieCanvas'\nimport { PieCanvasProps } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum,>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"sourceRoot":""}