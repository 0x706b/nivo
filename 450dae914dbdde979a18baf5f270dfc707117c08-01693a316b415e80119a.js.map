{"version":3,"file":"450dae914dbdde979a18baf5f270dfc707117c08-01693a316b415e80119a.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-shape/src/descending.js","webpack://nivo-website/../node_modules/d3-shape/src/identity.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nivo-website/../src/PieLegends.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../src/PieTooltip.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../node_modules/d3-shape/src/pie.js","webpack://nivo-website/../src/Arcs.tsx","webpack://nivo-website/../src/Pie.tsx","webpack://nivo-website/../src/ResponsivePie.tsx","webpack://nivo-website/../src/PieCanvas.tsx","webpack://nivo-website/../src/ResponsivePieCanvas.tsx"],"sourcesContent":["export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}","export default function (d) {\n  return d;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum, DatumId } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    toggleSerie: (id: DatumId) => void\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcLinkLabels', 'arcs', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport { CompletePieSvgProps, ComputedDatum, DatumId, PieArc, PieCustomLayerProps } from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    hidden: false,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n    hiddenIds,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n    hiddenIds: DatumId[]\n}): {\n    dataWithArc: Omit<ComputedDatum<RawDatum>, 'fill'>[]\n    legendData: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n} => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(() => {\n        const hiddenData = data.filter(item => !hiddenIds.includes(item.id))\n        const dataWithArc = pie(hiddenData).map(\n            (\n                arc: Omit<\n                    PieArc,\n                    'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                > & {\n                    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                }\n            ) => {\n                const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                return {\n                    ...arc.data,\n                    arc: {\n                        index: arc.index,\n                        startAngle: arc.startAngle,\n                        endAngle: arc.endAngle,\n                        innerRadius:\n                            activeId === arc.data.id\n                                ? innerRadius - activeInnerRadiusOffset\n                                : innerRadius,\n                        outerRadius:\n                            activeId === arc.data.id\n                                ? outerRadius + activeOuterRadiusOffset\n                                : outerRadius,\n                        thickness: outerRadius - innerRadius,\n                        padAngle: arc.padAngle,\n                        angle,\n                        angleDeg: radiansToDegrees(angle),\n                    },\n                }\n            }\n        )\n        const legendData = data.map(item => ({ ...item, hidden: hiddenIds.includes(item.id) }))\n\n        return { dataWithArc, legendData }\n    }, [\n        pie,\n        data,\n        hiddenIds,\n        activeId,\n        innerRadius,\n        activeInnerRadiusOffset,\n        outerRadius,\n        activeOuterRadiusOffset,\n    ])\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    Partial<CompletePieSvgProps<RawDatum>>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const [activeId, setActiveId] = useState<DatumId | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { ...pieArcs, arcGenerator, setActiveId, toggleSerie }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const [activeId, setActiveId] = useState<string | number | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        arcGenerator,\n        setActiveId,\n        toggleSerie,\n        ...pieArcs,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: PieCustomLayerProps<RawDatum>): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport { tau } from \"./math.js\";\nexport default function () {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    } // Optionally sort the arcs by previously-computed values or by data.\n\n\n    if (sortValues != null) index.sort(function (i, j) {\n      return sortValues(arcs[i], arcs[j]);\n    });else if (sort != null) index.sort(function (i, j) {\n      return sort(data[i], data[j]);\n    }); // Compute the arcs! They are stored in the original data's order.\n\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function (_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function (_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        legendData,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n        toggleSerie,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcLinkLabels: null,\n        arcs: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={legendData}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { createElement, useEffect, useMemo, useRef } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor, useDimensions, useTheme, Container } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = 1,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius, setActiveId } =\n        usePieFromBox<RawDatum>({\n            data: normalizedData,\n            width: innerWidth,\n            height: innerHeight,\n            fit,\n            innerRadius: innerRadiusRatio,\n            startAngle,\n            endAngle,\n            padAngle,\n            sortByValue,\n            cornerRadius,\n            activeInnerRadiusOffset,\n            activeOuterRadiusOffset,\n        })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const PieCanvas = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieCanvasProps<RawDatum>) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerPieCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum,>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"names":["a","b","NaN","d","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","PieLegends","width","height","legends","data","toggleSerie","containerWidth","containerHeight","legend","undefined","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","toString","slice","constructor","name","from","test","_toConsumableArray","isArray","arrayWithoutHoles","iter","Symbol","iterator","iterableToArray","unsupportedIterableToArray","TypeError","nonIterableSpread","_slicedToArray","arrayWithHoles","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","nonIterableRest","defaultProps","id","sortByValue","innerRadius","padAngle","cornerRadius","layers","startAngle","endAngle","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","borderWidth","borderColor","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsRadiusOffset","arcLabelsTextColor","theme","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","fill","isInteractive","animate","motionConfig","transitionMode","tooltip","datum","enableChip","color","role","pixelRatio","window","useNormalizedData","valueFormat","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","useMemo","datumId","datumValue","normalizedDatum","label","hidden","formattedValue","usePieArcs","outerRadius","activeId","hiddenIds","pie","innerPie","identity","sortValues","descending","sort","constant","j","k","a1","v","sum","index","arcs","a0","this","da","Math","min","max","p","abs","pa","_","degreesToRadians","hiddenData","item","dataWithArc","angle","arc","thickness","angleDeg","radiansToDegrees","legendData","usePieFromBox","innerRadiusRatio","useState","setActiveId","setHiddenIds","computedProps","radius","centerX","centerY","computeArcBoundingBox","points","box","ratio","adjustedBox","boundingBox","debug","pieArcs","useCallback","state","arcGenerator","useArcGenerator","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","InnerPie","partialMargin","margin","arcLabelsComponent","arcLinkLabelComponent","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","normalizedData","boundDefs","bindDefs","layerById","arcLinkLabels","arcLabels","skipAngle","offset","diagonalLength","straightLength","strokeWidth","textOffset","textColor","linkColor","component","radiusOffset","layerContext","usePieLayerContext","layer","Pie","renderWrapper","otherProps","ResponsivePie","InnerPieCanvas","canvasEl","useRef","useTheme","getBorderColor","useInheritedColor","useArcLabels","useArcLinkLabels","useEffect","ctx","drawCanvasArcLinkLabels","drawCanvasArcLabels","renderLegendToCanvas","getArcFromMouse","event","getRelativeCursor","x","y","hoveredArc","findArcUnderCursor","handleMouseHover","ref","style","cursor","PieCanvas","ResponsivePieCanvas"],"sourceRoot":""}