{"version":3,"file":"component---src-pages-components-tsx-d1930c3164e6c237b288.js","mappings":"oMAGA,IAAeA,EAAAA,QAAAA,IAAAA,WAAf,mGAIMC,EAAAA,EAAAA,OAJN,2EAUMA,EAAAA,EAAAA,OAVN,6E,+KCMaC,GAAmBC,EAAAA,EAAAA,OAAK,YAAgD,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,SACpCC,GAAeC,EAAAA,EAAAA,cAAY,SAAAC,GAAK,OAAIH,EAASG,EAAMC,OAAOC,SAAQ,CAACL,IACnEM,GAAcJ,EAAAA,EAAAA,cAAY,kBAAMF,EAAS,MAAK,CAACA,IAErD,OACI,UAACO,EAAD,YACI,SAACC,EAAD,CAAOC,KAAK,OAAOT,SAAUC,EAAcS,YAAY,SAASL,MAAON,KACvE,SAACY,EAAD,IACCZ,EAAKa,OAAS,IACX,SAACC,EAAD,CAAOC,QAASR,EAAhB,UACI,SAAC,MAAD,YAOdC,EAAYZ,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,mCAKTa,EAAQb,EAAAA,QAAAA,MAAAA,WAAH,kEAAGA,CAAH,mTAKa,qBAAGoB,MAAkBC,OAAOC,eAGlC,qBAAGF,MAAkBC,OAAOE,kBACjC,qBAAGH,MAAkBC,OAAOG,QAOxB,qBAAGJ,MAAkBC,OAAOI,aAKrB,qBAAGL,MAAkBC,OAAOK,UAK9CV,GAAmBhB,EAAAA,EAAAA,SAAO2B,EAAAA,KAAV,wFAAG3B,CAAH,kFACT,qBAAGoB,MAAkBC,OAAOK,UAQnCR,EAAQlB,EAAAA,QAAAA,KAAAA,WAAH,kEAAGA,CAAH,uNACO,qBAAGoB,MAAkBC,OAAOK,UACjC,qBAAGN,MAAkBC,OAAOE,kB,mDChEzC,I,EAAMK,EAAU,CAAC,MAAO,OAAQ,SAAU,YAO7BC,GAAoB1B,EAAAA,EAAAA,OAC7B,YAAkE,IAAvD2B,EAAsD,EAA9DC,OAAuB1B,EAAuC,EAAvCA,SACtB,OACI,UAAC,EAAD,YACI,SAAC2B,EAAD,CACIC,SAA4B,OAAlBH,EACVX,QAAS,WACLd,EAAS,OAHjB,iBAQCuB,EAAQM,KAAI,SAAAH,GAAM,OACf,SAACC,EAAD,CAEIC,SACsB,OAAlBH,GACAC,EAAOI,gBAAkBL,EAAcK,cAE3ChB,QAAS,WACLd,EAAS0B,IAPjB,SAUKA,GATIA,YAiBvBnB,EAAYZ,EAAAA,QAAAA,IAAAA,WAAH,uEAAGA,CAAH,qHAES,qBAAGoB,MAAkBC,OAAOK,UAQ9CM,EAAOhC,EAAAA,QAAAA,KAAAA,WAAH,kEAAGA,CAAH,2KAIQ,gBAAGiC,EAAH,EAAGA,SAAUb,EAAb,EAAaA,MAAb,OACVa,EAAWb,EAAMC,OAAOK,OAASN,EAAMC,OAAOE,kBACzC,gBAAGU,EAAH,EAAGA,SAAUb,EAAb,EAAaA,MAAb,OACLa,EAAWb,EAAMC,OAAOE,eAAiBH,EAAMC,OAAOK,UAIjC,qBAAGN,MAAkBC,OAAOK,SAOnDzB,EAAAA,EAAAA,OAlBI,4EAwBJA,EAAAA,EAAAA,OAxBI,6E,sBCvCH,I,YAAMmC,GAAqBjC,EAAAA,EAAAA,OAAK,YAA0D,IAAvDkC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,KAClDpB,GAAQqB,EAAAA,EAAAA,KAEd,OACI,UAAC,EAAD,CAAWC,GAAIL,EAAf,WACI,SAACM,EAAD,CAAMC,UAAS,gBAAkBL,EAAlB,IAA0BnB,EAAMyB,GAAhC,cACf,UAACC,EAAD,YACI,SAACC,EAAD,UAAOT,IACNE,EAAKvB,OAAS,IACX,SAAC+B,EAAD,UACKR,EAAKN,KAAI,SAAAe,GAAG,OACT,SAACC,EAAD,UAAgBD,GAANA,iBAShCrC,GAAYZ,EAAAA,EAAAA,SAAOmD,EAAAA,MAAV,oFAAGnD,CAAH,mRAES,qBAAGoB,MAAkBC,OAAOE,kBAIvC,qBAAGH,MAAkBC,OAAOG,QACjB,qBAAGJ,MAAkBC,OAAOE,kBAClC,qBAAGH,MAAkBgC,cAOtB,qBAAGhC,MAAkBC,OAAOK,UAErB,qBAAGN,MAAkBC,OAAOK,SAI9CzB,EAAAA,EAAAA,OArBS,I,EAAA,8W,0BAAA,E,IAyBa,qBAAGmB,MAAkBC,OAAOC,eAMxB,qBAAGF,MAAkBC,OAAOgC,cAChC,qBAAGjC,MAAkBC,OAAOC,gBASlDwB,EAAS9C,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,8FAQN+C,EAAO/C,EAAAA,QAAAA,KAAAA,WAAH,oEAAGA,CAAH,qCAKJ2C,EAAO3C,EAAAA,QAAAA,KAAAA,WAAH,oEAAGA,CAAH,6DAOJgD,EAAOhD,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,4FAEG,qBAAGoB,MAAkBC,OAAOI,aAOnCyB,EAAMlD,EAAAA,QAAAA,KAAAA,WAAH,mEAAGA,CAAH,wJAIoB,qBAAGoB,MAAkBC,OAAOK,U,8DC7FzD,I,QAmBa4B,EAAiB,SAAC,GAA2C,IAAzCvB,EAAwC,EAAxCA,OAAQ3B,EAAgC,EAAhCA,KACjCmD,EAAQC,EAAAA,GACZ,GAAIpD,GAAQ2B,EAAQ,CAChB,IAAM0B,EAtBY,SAACrD,EAAsB2B,GAC7C,IAAI2B,EAA+B,GAUnC,OATItD,GAAQA,EAAKa,OAAS,GACtByC,EAAWC,MAAK,qBAAGC,MAAkBzB,cAAc0B,SAASzD,EAAK+B,kBAEjEJ,GACA2B,EAAWC,MAAK,qBAAGnB,KACVN,KAAI,SAAAe,GAAG,OAAIA,EAAId,iBAAe0B,SAAS9B,EAAOI,kBAIpD,SAAA2B,GAAI,OAAIJ,EAAWK,OAAM,SAAAC,GAAS,OAAIA,EAAUF,OAW5BG,CAAkB7D,EAAM2B,GAC/CwB,EAAQC,EAAAA,GAAAA,OAAyBC,GAGrC,OAAqB,IAAjBF,EAAMtC,QAEF,UAACiD,EAAD,YACI,SAACC,EAAD,0BACA,mDAMR,SAACC,EAAD,UACKb,EAAMrB,KAAI,SAAA4B,GAAI,OACX,SAAC1B,EAAD,CAEIC,KAAMyB,EAAKzB,KACXC,KAAMwB,EAAKF,MACXrB,KAAMuB,EAAKvB,KACXC,KAAMsB,EAAKtB,MAJNsB,EAAKzB,YAWxB+B,EAAOpE,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,sEAKJC,EAAAA,EAAAA,aALI,4JAYJA,EAAAA,EAAAA,QAZI,4JAmBJA,EAAAA,EAAAA,OAnBI,4JA0BJA,EAAAA,EAAAA,OA1BI,mJA8BgB,qBAAGmB,MAAkBgC,eAKzCc,EAAQlE,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,yCAKLmE,EAAYnE,EAAAA,QAAAA,KAAAA,WAAH,oEAAGA,CAAH,gFAKF,qBAAGoB,MAAkBC,OAAOK,U,mDCxFlC,IAAM2C,EAAqB,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,SAC3C,GAAuBC,EAAAA,EAAAA,UAAQ,WAC3B,IAAMC,EAAS,IAAIC,gBAAgBJ,EAASK,QAC5C,MAAO,CAACF,EAAOG,IAAI,KAAMH,EAAOG,IAAI,aACrC,CAACN,EAASK,SAHNvE,EAAP,KAAa2B,EAAb,KAKMzB,GAAeC,EAAAA,EAAAA,cACjB,SAAAH,GACI,IAAMqE,EAAS,IAAIC,gBACftE,GAAMqE,EAAOI,OAAO,IAAKzE,GACzB2B,GAAQ0C,EAAOI,OAAO,SAAU9C,GAEpCwC,EAAS,gBAAgBE,EAAOK,WAAc,CAC1CC,SAAS,MAGjB,CAAChD,EAAQwC,IAEPS,GAAezE,EAAAA,EAAAA,cACjB,SAACwB,GACG,IAAM0C,EAAS,IAAIC,gBACftE,GAAMqE,EAAOI,OAAO,IAAKzE,GACzB2B,GAAQ0C,EAAOI,OAAO,SAAU9C,GAEpCwC,EAAS,gBAAgBE,EAAOK,cAEpC,CAAC1E,EAAMmE,IAGX,OACI,UAACU,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAQC,MAAM,gBACd,SAAC,EAAD,WACI,0CAEJ,UAACC,EAAD,YACI,SAAClF,EAAD,CAAkBE,KAAMA,GAAQ,GAAIC,SAAUC,KAC9C,SAACuB,EAAD,CAAmBxB,SAAU2E,EAAcjD,OAAQA,QAEvD,SAACuB,EAAD,CAAgBlD,KAAMA,EAAM2B,OAAQA,QAK1Ce,EAAS9C,EAAAA,QAAAA,IAAAA,WAAH,qEAAGA,CAAH,qIAUNoF,EAAmBpF,EAAAA,QAAAA,IAAAA,WAAH,+EAAGA,CAAH,qGAMhBC,EAAAA,EAAAA,aANgB,kFAYhBA,EAAAA,EAAAA,QAZgB,kFAkBhBA,EAAAA,EAAAA,OAlBgB,wHAyBhBA,EAAAA,EAAAA,OAzBgB,yHCjDtB,GATmB,SAAC,GAA6C,IAA3CqE,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,SAC5B,OACI,UAACc,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAKH,MAAM,gBACX,SAACd,EAAD,CAAoBC,SAAUA,EAAUC,SAAUA","sources":["webpack://nivo-website/./src/components/PageContent.ts","webpack://nivo-website/./src/components/components/explorer/ComponentsSearch.tsx","webpack://nivo-website/./src/components/components/explorer/ComponentsFilters.tsx","webpack://nivo-website/./src/components/components/explorer/ComponentsGridItem.tsx","webpack://nivo-website/./src/components/components/explorer/ComponentsGrid.tsx","webpack://nivo-website/./src/components/components/explorer/ComponentsExplorer.tsx","webpack://nivo-website/./src/pages/components.tsx"],"sourcesContent":["import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport default styled.div`\n    margin: 0 50px;\n    position: relative;\n\n    ${media.tablet`\n        & {\n            margin: 0 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px;\n        }\n    `}\n`\n","import React, { memo, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { MdSearch, MdClose } from 'react-icons/md'\n\ninterface ComponentsSearchProps {\n    term: string\n    onChange: (term: string) => void\n}\n\nexport const ComponentsSearch = memo(({ term, onChange }: ComponentsSearchProps) => {\n    const handleSearch = useCallback(event => onChange(event.target.value), [onChange])\n    const handleClear = useCallback(() => onChange(''), [onChange])\n\n    return (\n        <Container>\n            <Input type=\"text\" onChange={handleSearch} placeholder=\"Search\" value={term} />\n            <StyledSearchIcon />\n            {term.length > 0 && (\n                <Clear onClick={handleClear}>\n                    <MdClose />\n                </Clear>\n            )}\n        </Container>\n    )\n})\n\nconst Container = styled.div`\n    position: relative;\n    width: 100%;\n`\n\nconst Input = styled.input`\n    width: 100%;\n    padding: 0 44px;\n    height: 42px;\n    line-height: 38px;\n    border: 2px solid ${({ theme }) => theme.colors.borderLight};\n    font-size: inherit;\n    border-radius: 21px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    color: ${({ theme }) => theme.colors.text};\n    cursor: pointer;\n    box-shadow: none;\n\n    &::-webkit-input-placeholder,\n    &:-ms-input-placeholder,\n    &::-moz-placeholder {\n        color: ${({ theme }) => theme.colors.textLight};\n    }\n\n    &:focus {\n        outline: 0;\n        border-color: ${({ theme }) => theme.colors.accent};\n        cursor: auto;\n    }\n`\n\nconst StyledSearchIcon = styled(MdSearch)`\n    color: ${({ theme }) => theme.colors.accent};\n    font-size: 26px;\n    position: absolute;\n    top: 8px;\n    left: 12px;\n    cursor: pointer;\n`\n\nconst Clear = styled.span`\n    background: ${({ theme }) => theme.colors.accent};\n    color: ${({ theme }) => theme.colors.cardBackground};\n    width: 26px;\n    height: 26px;\n    font-size: 18px;\n    border-radius: 13px;\n    position: absolute;\n    top: 8px;\n    right: 9px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    &:hover {\n        color: white;\n    }\n`\n","import React, { memo } from 'react'\nimport styled from 'styled-components'\nimport media from '../../../theming/mediaQueries'\n\nconst filters = ['SVG', 'HTML', 'Canvas', 'HTTP API'] as const\n\ninterface ComponentsFiltersProps {\n    filter: string | null\n    onChange: (filter: string | null) => void\n}\n\nexport const ComponentsFilters = memo(\n    ({ filter: currentFilter, onChange }: ComponentsFiltersProps) => {\n        return (\n            <Container>\n                <Item\n                    isActive={currentFilter === null}\n                    onClick={() => {\n                        onChange(null)\n                    }}\n                >\n                    All\n                </Item>\n                {filters.map(filter => (\n                    <Item\n                        key={filter}\n                        isActive={\n                            currentFilter !== null &&\n                            filter.toLowerCase() === currentFilter.toLowerCase()\n                        }\n                        onClick={() => {\n                            onChange(filter)\n                        }}\n                    >\n                        {filter}\n                    </Item>\n                ))}\n            </Container>\n        )\n    }\n)\n\nconst Container = styled.div`\n    display: flex;\n    border: 2px solid ${({ theme }) => theme.colors.accent};\n    height: 42px;\n    border-radius: 2px;\n    overflow: hidden;\n    font-size: 13px;\n    font-weight: 700;\n`\n\nconst Item = styled.span<{\n    isActive: boolean\n}>`\n    line-height: 38px;\n    background: ${({ isActive, theme }) =>\n        isActive ? theme.colors.accent : theme.colors.cardBackground};\n    color: ${({ isActive, theme }) =>\n        isActive ? theme.colors.cardBackground : theme.colors.accent};\n    flex: 1;\n    text-align: center;\n    cursor: pointer;\n    border-left: 1px solid ${({ theme }) => theme.colors.accent};\n    padding: 0 26px;\n\n    &:first-child {\n        border-left-width: 0;\n    }\n\n    ${media.tablet`\n        & {\n            padding: 0 12px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            padding: 0 12px;\n        }\n    `}\n`\n","import React, { memo } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\n\ninterface ComponentsGridItemProps {\n    path: string\n    name: string\n    icon: string\n    tags: string[]\n}\n\nexport const ComponentsGridItem = memo(({ path, name, icon, tags }: ComponentsGridItemProps) => {\n    const theme = useTheme()\n\n    return (\n        <Container to={path}>\n            <Icon className={`sprite-icons-${icon}-${theme.id}-colored`} />\n            <Header>\n                <Name>{name}</Name>\n                {tags.length > 0 && (\n                    <Tags>\n                        {tags.map(tag => (\n                            <Tag key={tag}>{tag}</Tag>\n                        ))}\n                    </Tags>\n                )}\n            </Header>\n        </Container>\n    )\n})\n\nconst Container = styled(Link)`\n    text-decoration: none;\n    background-color: ${({ theme }) => theme.colors.cardBackground};\n    border-radius: 2px;\n    padding: 12px;\n    cursor: pointer;\n    color: ${({ theme }) => theme.colors.text};\n    border: 1px solid ${({ theme }) => theme.colors.cardBackground};\n    box-shadow: ${({ theme }) => theme.cardShadow};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    &:focus,\n    &:hover {\n        color: ${({ theme }) => theme.colors.accent};\n        box-shadow: none;\n        border-color: ${({ theme }) => theme.colors.accent};\n        outline: 0;\n    }\n\n    ${media.mobile`\n        & {\n            border-width: 0;\n            border-top-width: 1px;\n            border-color: ${({ theme }) => theme.colors.borderLight};\n            box-shadow: none;\n        }\n    \n        &:focus,\n        &:hover {\n            background-color: ${({ theme }) => theme.colors.background};\n            border-color: ${({ theme }) => theme.colors.borderLight};\n        }\n    \n        &:first-child {\n            border-top-width: 0;\n        }    \n    `}\n`\n\nconst Header = styled.div`\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n`\n\nconst Name = styled.span`\n    font-size: 15px;\n    font-weight: 600;\n`\n\nconst Icon = styled.span`\n    margin-right: 15px;\n    display: block;\n    width: 52px;\n    height: 52px;\n`\n\nconst Tags = styled.div`\n    font-size: 0.9rem;\n    color: ${({ theme }) => theme.colors.textLight};\n    line-height: 1em;\n    margin-top: 4px;\n    display: flex;\n    flex-wrap: wrap;\n`\n\nconst Tag = styled.span`\n    display: inline-block;\n    margin-right: 6px;\n    margin-bottom: 6px;\n    border-left: 1px solid ${({ theme }) => theme.colors.accent};\n    padding-left: 7px;\n\n    &:first-child {\n        padding-left: 0;\n        border-left: none;\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ComponentsGridItem } from './ComponentsGridItem'\nimport * as nav from '../../../data/nav'\nimport media from '../../../theming/mediaQueries'\n\ntype NavItem = {\n    label: string\n    path: string\n    icon: string\n    tags: string[]\n}\ntype FilterFunction = (item: NavItem) => boolean\n\nconst getFilterFunction = (term?: string | null, filter?: string | null): FilterFunction => {\n    let predicates: FilterFunction[] = []\n    if (term && term.length > 0) {\n        predicates.push(({ label }) => label.toLowerCase().includes(term.toLowerCase()))\n    }\n    if (filter) {\n        predicates.push(({ tags }) =>\n            tags.map(tag => tag.toLowerCase()).includes(filter.toLowerCase())\n        )\n    }\n\n    return item => predicates.every(predicate => predicate(item))\n}\n\ninterface ComponentsGridProps {\n    filter?: string | null\n    term?: string | null\n}\n\nexport const ComponentsGrid = ({ filter, term }: ComponentsGridProps) => {\n    let items = nav.allComponents\n    if (term || filter) {\n        const filterFunction = getFilterFunction(term, filter)\n        items = nav.allComponents.filter(filterFunction)\n    }\n\n    if (items.length === 0) {\n        return (\n            <Empty>\n                <EmptyIcon>{`¯\\\\_(ツ)_/¯`}</EmptyIcon>\n                <div>no result, sorry…</div>\n            </Empty>\n        )\n    }\n\n    return (\n        <Grid>\n            {items.map(item => (\n                <ComponentsGridItem\n                    key={item.path}\n                    path={item.path}\n                    name={item.label}\n                    icon={item.icon}\n                    tags={item.tags}\n                />\n            ))}\n        </Grid>\n    )\n}\n\nconst Grid = styled.div`\n    display: grid;\n    grid-row-gap: 15px;\n    margin-bottom: 30px;\n\n    ${media.desktopLarge`\n        & {\n            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n            grid-column-gap: 30px;\n        }\n    `}\n\n    ${media.desktop`\n        & {\n            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n            grid-column-gap: 20px;\n        }\n    `}\n\n    ${media.tablet`\n        & {\n            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n            grid-column-gap: 20px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            grid-template-columns: 1fr;\n            grid-row-gap: 0;\n            box-shadow: ${({ theme }) => theme.cardShadow};\n        }\n    `}\n`\n\nconst Empty = styled.div`\n    margin-top: 120px;\n    text-align: center;\n`\n\nconst EmptyIcon = styled.span`\n    font-size: 64px;\n    display: block;\n    margin-bottom: 50px;\n    white-space: pre;\n    color: ${({ theme }) => theme.colors.accent};\n`\n","import React, { useMemo, useCallback } from 'react'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\nimport media from '../../../theming/mediaQueries'\nimport PageContent from '../../PageContent'\nimport { ComponentsSearch } from './ComponentsSearch'\nimport { ComponentsFilters } from './ComponentsFilters'\nimport { ComponentsGrid } from './ComponentsGrid'\n\ninterface ComponentsExplorerProps {\n    location: {\n        search: string\n    }\n    navigate: (\n        path: string,\n        options?: {\n            replace?: boolean\n        }\n    ) => void\n}\n\nexport const ComponentsExplorer = ({ location, navigate }: ComponentsExplorerProps) => {\n    const [term, filter] = useMemo(() => {\n        const params = new URLSearchParams(location.search)\n        return [params.get('q'), params.get('filter')]\n    }, [location.search])\n\n    const handleSearch = useCallback(\n        term => {\n            const params = new URLSearchParams()\n            if (term) params.append('q', term)\n            if (filter) params.append('filter', filter)\n\n            navigate(`/components/?${params.toString()}`, {\n                replace: true,\n            })\n        },\n        [filter, navigate]\n    )\n    const handleFilter = useCallback(\n        (filter: string | null) => {\n            const params = new URLSearchParams()\n            if (term) params.append('q', term)\n            if (filter) params.append('filter', filter)\n\n            navigate(`/components/?${params.toString()}`)\n        },\n        [term, navigate]\n    )\n\n    return (\n        <PageContent>\n            <Helmet title=\"Components\" />\n            <Header>\n                <h1>Components</h1>\n            </Header>\n            <SearchAndFilters>\n                <ComponentsSearch term={term || ''} onChange={handleSearch} />\n                <ComponentsFilters onChange={handleFilter} filter={filter} />\n            </SearchAndFilters>\n            <ComponentsGrid term={term} filter={filter} />\n        </PageContent>\n    )\n}\n\nconst Header = styled.div`\n    height: 130px;\n    color: white;\n    margin-bottom: 50px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-end;\n`\n\nconst SearchAndFilters = styled.div`\n    display: grid;\n    align-items: center;\n    margin-bottom: 30px;\n    grid-template-columns: 1fr 2fr;\n\n    ${media.desktopLarge`\n        & {\n            grid-column-gap: 30px;\n        }\n    `}\n\n    ${media.desktop`\n        & {\n            grid-column-gap: 20px;\n        }\n    `}\n\n    ${media.tablet`\n        & {\n            grid-template-columns: 1fr;\n            grid-row-gap: 15px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            grid-template-columns: 1fr;\n            grid-row-gap: 15px;\n        }\n    `}\n`\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport { Seo } from '../components/Seo'\nimport { ComponentsExplorer } from '../components/components/explorer'\n\ninterface ComponentsProps {\n    location: {\n        search: string\n    }\n    navigate: (\n        path: string,\n        options?: {\n            replace?: boolean\n        }\n    ) => void\n}\n\nconst Components = ({ location, navigate }: ComponentsProps) => {\n    return (\n        <Layout>\n            <Seo title=\"Components\" />\n            <ComponentsExplorer location={location} navigate={navigate} />\n        </Layout>\n    )\n}\n\nexport default Components\n"],"names":["styled","media","ComponentsSearch","memo","term","onChange","handleSearch","useCallback","event","target","value","handleClear","Container","Input","type","placeholder","StyledSearchIcon","length","Clear","onClick","theme","colors","borderLight","cardBackground","text","textLight","accent","MdSearch","filters","ComponentsFilters","currentFilter","filter","Item","isActive","map","toLowerCase","ComponentsGridItem","path","name","icon","tags","useTheme","to","Icon","className","id","Header","Name","Tags","tag","Tag","Link","cardShadow","background","ComponentsGrid","items","nav","filterFunction","predicates","push","label","includes","item","every","predicate","getFilterFunction","Empty","EmptyIcon","Grid","ComponentsExplorer","location","navigate","useMemo","params","URLSearchParams","search","get","append","toString","replace","handleFilter","PageContent","Helmet","title","SearchAndFilters","Layout","Seo"],"sourceRoot":""}