{"version":3,"file":"3b6c5b8ed379442fd5bc3526e895b658a214ea3c-105464f616c7655b2c39.js","mappings":"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","sources":["webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nivo-website/../src/props.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://nivo-website/../src/PartTooltip.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/Part.tsx","webpack://nivo-website/../src/Parts.tsx","webpack://nivo-website/../src/PartLabel.tsx","webpack://nivo-website/../src/PartLabels.tsx","webpack://nivo-website/../src/Separator.tsx","webpack://nivo-website/../src/Separators.tsx","webpack://nivo-website/../src/FunnelAnnotations.tsx","webpack://nivo-website/../src/Funnel.tsx","webpack://nivo-website/../src/ResponsiveFunnel.tsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// @ts-ignore\nimport { MotionConfigProvider } from '@nivo/core'\nimport { FunnelLayerId } from './types'\n\nexport const svgDefaultProps = {\n    layers: ['separators', 'parts', 'labels', 'annotations'] as FunnelLayerId[],\n\n    direction: 'vertical' as const,\n    interpolation: 'smooth' as const,\n    spacing: 0,\n    shapeBlending: 0.66,\n\n    colors: { scheme: 'nivo' as const },\n    fillOpacity: 1,\n\n    borderWidth: 6,\n    borderColor: { from: 'color' },\n    borderOpacity: 0.66,\n\n    enableLabel: true,\n    labelColor: { theme: 'background' },\n\n    enableBeforeSeparators: true,\n    beforeSeparatorLength: 0,\n    beforeSeparatorOffset: 0,\n    enableAfterSeparators: true,\n    afterSeparatorLength: 0,\n    afterSeparatorOffset: 0,\n\n    annotations: [],\n\n    isInteractive: true,\n    currentPartSizeExtension: 0,\n\n    role: 'img',\n\n    animate: MotionConfigProvider.defaultProps.animate,\n    motionConfig: MotionConfigProvider.defaultProps.config,\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { BasicTooltip } from '@nivo/tooltip'\nimport { FunnelDatum, FunnelPartWithHandlers } from './types'\n\ninterface PartTooltipProps<D extends FunnelDatum> {\n    part: FunnelPartWithHandlers<D>\n}\n\nexport const PartTooltip = <D extends FunnelDatum>({ part }: PartTooltipProps<D>) => (\n    <BasicTooltip\n        id={part.data.label}\n        value={part.formattedValue}\n        color={part.color}\n        enableChip={true}\n    />\n)\n","import { createElement, useMemo, useState, MouseEvent } from 'react'\nimport { line, area, curveBasis, curveLinear } from 'd3-shape'\nimport { ScaleLinear, scaleLinear } from 'd3-scale'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { useTheme, useValueFormatter } from '@nivo/core'\nimport { useAnnotations } from '@nivo/annotations'\nimport { useTooltip, TooltipActionsContextData } from '@nivo/tooltip'\nimport { svgDefaultProps as defaults } from './props'\nimport { PartTooltip } from './PartTooltip'\nimport {\n    FunnelDatum,\n    FunnelCommonProps,\n    FunnelDataProps,\n    FunnelPart,\n    SeparatorProps,\n    FunnelCustomLayerProps,\n    FunnelAreaGenerator,\n    FunnelAreaPoint,\n    FunnelBorderGenerator,\n    Position,\n} from './types'\n\nexport const computeShapeGenerators = <D extends FunnelDatum>(\n    interpolation: FunnelCommonProps<D>['interpolation'],\n    direction: FunnelCommonProps<D>['direction']\n): [FunnelAreaGenerator, FunnelBorderGenerator] => {\n    // area generator which is used to draw funnel chart parts\n    const areaGenerator: FunnelAreaGenerator = area<FunnelAreaPoint>()\n    if (direction === 'vertical') {\n        areaGenerator\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n            .x0(d => d.x0)\n            .x1(d => d.x1)\n            .y(d => d.y)\n    } else {\n        areaGenerator\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n            .y0(d => d.y0)\n            .y1(d => d.y1)\n            .x(d => d.x)\n    }\n\n    return [\n        areaGenerator,\n        // we're using a different line generator to draw borders, this way\n        // we we don't have borders joining each side of the parts.\n        // it's important to have an empty point when defining the points\n        // to be used along with this, otherwise we'll get a line between both sides.\n        line<Position | null>()\n            .defined(d => d !== null)\n            .x(d => d!.x)\n            .y(d => d!.y)\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n    ]\n}\n\ninterface CustomBandScale {\n    (index: number): number\n    bandwidth: number\n}\n\nexport const computeScales = <D extends FunnelDatum>({\n    data,\n    direction,\n    width,\n    height,\n    spacing,\n}: {\n    data: FunnelDataProps<D>['data']\n    direction: FunnelCommonProps<D>['direction']\n    width: number\n    height: number\n    spacing: number\n}): [CustomBandScale, ScaleLinear<number, number>] => {\n    let bandScaleSize\n    let linearScaleSize\n    if (direction === 'vertical') {\n        bandScaleSize = height\n        linearScaleSize = width\n    } else {\n        bandScaleSize = width\n        linearScaleSize = height\n    }\n\n    const bandwidth = (bandScaleSize - spacing * (data.length - 1)) / data.length\n\n    // we're not using d3 band scale here to be able to get\n    // the actual paddingInner value in pixels, required to\n    // create centered separator lines between parts\n    const bandScale = (index: number) => spacing * index + bandwidth * index\n    bandScale.bandwidth = bandwidth\n\n    const allValues = data.map(d => d.value)\n\n    const linearScale = scaleLinear()\n        .domain([0, Math.max(...allValues)])\n        .range([0, linearScaleSize])\n\n    return [bandScale, linearScale]\n}\n\nexport const computeSeparators = <D extends FunnelDatum>({\n    parts,\n    direction,\n    width,\n    height,\n    spacing,\n    enableBeforeSeparators,\n    beforeSeparatorOffset,\n    enableAfterSeparators,\n    afterSeparatorOffset,\n}: {\n    parts: FunnelPart<D>[]\n    direction: FunnelCommonProps<D>['direction']\n    width: number\n    height: number\n    spacing: number\n    enableBeforeSeparators: boolean\n    beforeSeparatorOffset: number\n    enableAfterSeparators: boolean\n    afterSeparatorOffset: number\n}) => {\n    const beforeSeparators: SeparatorProps[] = []\n    const afterSeparators: SeparatorProps[] = []\n    const lastPart = parts[parts.length - 1]\n\n    if (direction === 'vertical') {\n        parts.forEach(part => {\n            const y = part.y0 - spacing / 2\n\n            if (enableBeforeSeparators) {\n                beforeSeparators.push({\n                    partId: part.data.id,\n                    x0: 0,\n                    x1: part.x0 - beforeSeparatorOffset,\n                    y0: y,\n                    y1: y,\n                })\n            }\n            if (enableAfterSeparators) {\n                afterSeparators.push({\n                    partId: part.data.id,\n                    x0: part.x1 + afterSeparatorOffset,\n                    x1: width,\n                    y0: y,\n                    y1: y,\n                })\n            }\n        })\n\n        const y = lastPart.y1\n        if (enableBeforeSeparators) {\n            beforeSeparators.push({\n                ...beforeSeparators[beforeSeparators.length - 1],\n                partId: 'none',\n                y0: y,\n                y1: y,\n            })\n        }\n        if (enableAfterSeparators) {\n            afterSeparators.push({\n                ...afterSeparators[afterSeparators.length - 1],\n                partId: 'none',\n                y0: y,\n                y1: y,\n            })\n        }\n    } else if (direction === 'horizontal') {\n        parts.forEach(part => {\n            const x = part.x0 - spacing / 2\n\n            beforeSeparators.push({\n                partId: part.data.id,\n                x0: x,\n                x1: x,\n                y0: 0,\n                y1: part.y0 - beforeSeparatorOffset,\n            })\n            afterSeparators.push({\n                partId: part.data.id,\n                x0: x,\n                x1: x,\n                y0: part.y1 + afterSeparatorOffset,\n                y1: height,\n            })\n        })\n\n        const x = lastPart.x1\n        beforeSeparators.push({\n            ...beforeSeparators[beforeSeparators.length - 1],\n            partId: 'none',\n            x0: x,\n            x1: x,\n        })\n        afterSeparators.push({\n            ...afterSeparators[afterSeparators.length - 1],\n            partId: 'none',\n            x0: x,\n            x1: x,\n        })\n    }\n\n    return [beforeSeparators, afterSeparators]\n}\n\nexport const computePartsHandlers = <D extends FunnelDatum>({\n    parts,\n    setCurrentPartId,\n    isInteractive,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    onClick,\n    showTooltipFromEvent,\n    hideTooltip,\n}: {\n    parts: FunnelPart<D>[]\n    setCurrentPartId: (id: string | number | null) => void\n    isInteractive: FunnelCommonProps<D>['isInteractive']\n    onMouseEnter?: FunnelCommonProps<D>['onMouseEnter']\n    onMouseLeave?: FunnelCommonProps<D>['onMouseLeave']\n    onMouseMove?: FunnelCommonProps<D>['onMouseMove']\n    onClick?: FunnelCommonProps<D>['onClick']\n    showTooltipFromEvent: TooltipActionsContextData['showTooltipFromEvent']\n    hideTooltip: () => void\n}) => {\n    if (!isInteractive) return parts\n\n    return parts.map(part => {\n        const boundOnMouseEnter = (event: MouseEvent) => {\n            setCurrentPartId(part.data.id)\n            showTooltipFromEvent(createElement(PartTooltip, { part }), event)\n            onMouseEnter !== undefined && onMouseEnter(part, event)\n        }\n\n        const boundOnMouseLeave = (event: MouseEvent) => {\n            setCurrentPartId(null)\n            hideTooltip()\n            onMouseLeave !== undefined && onMouseLeave(part, event)\n        }\n\n        const boundOnMouseMove = (event: MouseEvent) => {\n            showTooltipFromEvent(createElement(PartTooltip, { part }), event)\n            onMouseMove !== undefined && onMouseMove(part, event)\n        }\n\n        const boundOnClick =\n            onClick !== undefined\n                ? (event: MouseEvent) => {\n                      onClick(part, event)\n                  }\n                : undefined\n\n        return {\n            ...part,\n            onMouseEnter: boundOnMouseEnter,\n            onMouseLeave: boundOnMouseLeave,\n            onMouseMove: boundOnMouseMove,\n            onClick: boundOnClick,\n        }\n    })\n}\n\n/**\n * Creates required layout to generate a funnel chart,\n * it uses almost the same parameters as the Funnel component.\n *\n * For purpose/constrains on the parameters, please have a look\n * at the component's props.\n */\nexport const useFunnel = <D extends FunnelDatum>({\n    data,\n    width,\n    height,\n    direction = defaults.direction,\n    interpolation = defaults.interpolation,\n    spacing = defaults.spacing,\n    shapeBlending: rawShapeBlending = defaults.shapeBlending,\n    valueFormat,\n    colors = defaults.colors,\n    fillOpacity = defaults.fillOpacity,\n    borderWidth = defaults.borderWidth,\n    borderColor = defaults.borderColor,\n    borderOpacity = defaults.borderOpacity,\n    labelColor = defaults.labelColor,\n    enableBeforeSeparators = defaults.enableBeforeSeparators,\n    beforeSeparatorLength = defaults.beforeSeparatorLength,\n    beforeSeparatorOffset = defaults.beforeSeparatorOffset,\n    enableAfterSeparators = defaults.enableAfterSeparators,\n    afterSeparatorLength = defaults.afterSeparatorLength,\n    afterSeparatorOffset = defaults.afterSeparatorOffset,\n    isInteractive = defaults.isInteractive,\n    currentPartSizeExtension = defaults.currentPartSizeExtension,\n    currentBorderWidth,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: {\n    data: FunnelDataProps<D>['data']\n    width: number\n    height: number\n    direction?: FunnelCommonProps<D>['direction']\n    interpolation?: FunnelCommonProps<D>['interpolation']\n    spacing?: FunnelCommonProps<D>['spacing']\n    shapeBlending?: FunnelCommonProps<D>['shapeBlending']\n    valueFormat?: FunnelCommonProps<D>['valueFormat']\n    colors?: FunnelCommonProps<D>['colors']\n    fillOpacity?: FunnelCommonProps<D>['fillOpacity']\n    borderWidth?: FunnelCommonProps<D>['borderWidth']\n    borderColor?: FunnelCommonProps<D>['borderColor']\n    borderOpacity?: FunnelCommonProps<D>['borderOpacity']\n    labelColor?: FunnelCommonProps<D>['labelColor']\n    enableBeforeSeparators?: FunnelCommonProps<D>['enableBeforeSeparators']\n    beforeSeparatorLength?: FunnelCommonProps<D>['beforeSeparatorLength']\n    beforeSeparatorOffset?: FunnelCommonProps<D>['beforeSeparatorOffset']\n    enableAfterSeparators?: FunnelCommonProps<D>['enableAfterSeparators']\n    afterSeparatorLength?: FunnelCommonProps<D>['afterSeparatorLength']\n    afterSeparatorOffset?: FunnelCommonProps<D>['afterSeparatorOffset']\n    isInteractive?: FunnelCommonProps<D>['isInteractive']\n    currentPartSizeExtension?: FunnelCommonProps<D>['currentPartSizeExtension']\n    currentBorderWidth?: FunnelCommonProps<D>['currentBorderWidth']\n    onMouseEnter?: FunnelCommonProps<D>['onMouseEnter']\n    onMouseMove?: FunnelCommonProps<D>['onMouseMove']\n    onMouseLeave?: FunnelCommonProps<D>['onMouseLeave']\n    onClick?: FunnelCommonProps<D>['onClick']\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<D>(colors, 'id')\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getLabelColor = useInheritedColor(labelColor, theme)\n\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const [areaGenerator, borderGenerator] = useMemo(\n        () => computeShapeGenerators<D>(interpolation, direction),\n        [interpolation, direction]\n    )\n\n    let innerWidth: number\n    let innerHeight: number\n    const paddingBefore = enableBeforeSeparators ? beforeSeparatorLength + beforeSeparatorOffset : 0\n    const paddingAfter = enableAfterSeparators ? afterSeparatorLength + afterSeparatorOffset : 0\n    if (direction === 'vertical') {\n        innerWidth = width - paddingBefore - paddingAfter\n        innerHeight = height\n    } else {\n        innerWidth = width\n        innerHeight = height - paddingBefore - paddingAfter\n    }\n\n    const [bandScale, linearScale] = useMemo(\n        () =>\n            computeScales<D>({\n                data,\n                direction,\n                width: innerWidth,\n                height: innerHeight,\n                spacing,\n            }),\n        [data, direction, innerWidth, innerHeight, spacing]\n    )\n\n    const [currentPartId, setCurrentPartId] = useState<string | number | null>(null)\n\n    const parts: FunnelPart<D>[] = useMemo(() => {\n        const enhancedParts = data.map((datum, index) => {\n            const isCurrent = datum.id === currentPartId\n\n            let partWidth\n            let partHeight\n            let y0, x0\n\n            if (direction === 'vertical') {\n                partWidth = linearScale(datum.value)\n                partHeight = bandScale.bandwidth\n                x0 = paddingBefore + (innerWidth - partWidth) * 0.5\n                y0 = bandScale(index)\n            } else {\n                partWidth = bandScale.bandwidth\n                partHeight = linearScale(datum.value)\n                x0 = bandScale(index)\n                y0 = paddingBefore + (innerHeight - partHeight) * 0.5\n            }\n\n            const x1 = x0 + partWidth\n            const x = x0 + partWidth * 0.5\n            const y1 = y0 + partHeight\n            const y = y0 + partHeight * 0.5\n\n            const part: FunnelPart<D> = {\n                data: datum,\n                width: partWidth,\n                height: partHeight,\n                color: getColor(datum),\n                fillOpacity,\n                borderWidth:\n                    isCurrent && currentBorderWidth !== undefined\n                        ? currentBorderWidth\n                        : borderWidth,\n                borderOpacity,\n                formattedValue: formatValue(datum.value),\n                isCurrent,\n                x,\n                x0,\n                x1,\n                y,\n                y0,\n                y1,\n                borderColor: '',\n                labelColor: '',\n                points: [],\n                areaPoints: [],\n                borderPoints: [],\n            }\n\n            part.borderColor = getBorderColor(part)\n            part.labelColor = getLabelColor(part)\n\n            return part\n        })\n\n        const shapeBlending = rawShapeBlending / 2\n\n        enhancedParts.forEach((part, index) => {\n            const nextPart = enhancedParts[index + 1]\n\n            if (direction === 'vertical') {\n                part.points.push({ x: part.x0, y: part.y0 })\n                part.points.push({ x: part.x1, y: part.y0 })\n                if (nextPart) {\n                    part.points.push({ x: nextPart.x1, y: part.y1 })\n                    part.points.push({ x: nextPart.x0, y: part.y1 })\n                } else {\n                    part.points.push({ x: part.points[1].x, y: part.y1 })\n                    part.points.push({ x: part.points[0].x, y: part.y1 })\n                }\n                if (part.isCurrent) {\n                    part.points[0].x -= currentPartSizeExtension\n                    part.points[1].x += currentPartSizeExtension\n                    part.points[2].x += currentPartSizeExtension\n                    part.points[3].x -= currentPartSizeExtension\n                }\n\n                part.areaPoints = [\n                    {\n                        x: 0,\n                        x0: part.points[0].x,\n                        x1: part.points[1].x,\n                        y: part.y0,\n                        y0: 0,\n                        y1: 0,\n                    },\n                ]\n                part.areaPoints.push({\n                    ...part.areaPoints[0],\n                    y: part.y0 + part.height * shapeBlending,\n                })\n                const lastAreaPoint = {\n                    x: 0,\n                    x0: part.points[3].x,\n                    x1: part.points[2].x,\n                    y: part.y1,\n                    y0: 0,\n                    y1: 0,\n                }\n                part.areaPoints.push({\n                    ...lastAreaPoint,\n                    y: part.y1 - part.height * shapeBlending,\n                })\n                part.areaPoints.push(lastAreaPoint)\n                ;[0, 1, 2, 3].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x0,\n                        y: part.areaPoints[index].y,\n                    })\n                })\n                part.borderPoints.push(null)\n                ;[3, 2, 1, 0].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x1,\n                        y: part.areaPoints[index].y,\n                    })\n                })\n            } else {\n                part.points.push({ x: part.x0, y: part.y0 })\n                if (nextPart) {\n                    part.points.push({ x: part.x1, y: nextPart.y0 })\n                    part.points.push({ x: part.x1, y: nextPart.y1 })\n                } else {\n                    part.points.push({ x: part.x1, y: part.y0 })\n                    part.points.push({ x: part.x1, y: part.y1 })\n                }\n                part.points.push({ x: part.x0, y: part.y1 })\n                if (part.isCurrent) {\n                    part.points[0].y -= currentPartSizeExtension\n                    part.points[1].y -= currentPartSizeExtension\n                    part.points[2].y += currentPartSizeExtension\n                    part.points[3].y += currentPartSizeExtension\n                }\n\n                part.areaPoints = [\n                    {\n                        x: part.x0,\n                        x0: 0,\n                        x1: 0,\n                        y: 0,\n                        y0: part.points[0].y,\n                        y1: part.points[3].y,\n                    },\n                ]\n                part.areaPoints.push({\n                    ...part.areaPoints[0],\n                    x: part.x0 + part.width * shapeBlending,\n                })\n                const lastAreaPoint = {\n                    x: part.x1,\n                    x0: 0,\n                    x1: 0,\n                    y: 0,\n                    y0: part.points[1].y,\n                    y1: part.points[2].y,\n                }\n                part.areaPoints.push({\n                    ...lastAreaPoint,\n                    x: part.x1 - part.width * shapeBlending,\n                })\n                part.areaPoints.push(lastAreaPoint)\n                ;[0, 1, 2, 3].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x,\n                        y: part.areaPoints[index].y0,\n                    })\n                })\n                part.borderPoints.push(null)\n                ;[3, 2, 1, 0].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x,\n                        y: part.areaPoints[index].y1,\n                    })\n                })\n            }\n        })\n\n        return enhancedParts\n    }, [\n        data,\n        direction,\n        linearScale,\n        bandScale,\n        innerWidth,\n        innerHeight,\n        paddingBefore,\n        paddingAfter,\n        rawShapeBlending,\n        getColor,\n        formatValue,\n        getBorderColor,\n        getLabelColor,\n        currentPartId,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const partsWithHandlers = useMemo(\n        () =>\n            computePartsHandlers<D>({\n                parts,\n                setCurrentPartId,\n                isInteractive,\n                onMouseEnter,\n                onMouseLeave,\n                onMouseMove,\n                onClick,\n                showTooltipFromEvent,\n                hideTooltip,\n            }),\n        [\n            parts,\n            setCurrentPartId,\n            isInteractive,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseMove,\n            onClick,\n            showTooltipFromEvent,\n            hideTooltip,\n        ]\n    )\n\n    const [beforeSeparators, afterSeparators] = useMemo(\n        () =>\n            computeSeparators({\n                parts,\n                direction,\n                width,\n                height,\n                spacing,\n                enableBeforeSeparators,\n                beforeSeparatorOffset,\n                enableAfterSeparators,\n                afterSeparatorOffset,\n            }),\n        [\n            parts,\n            direction,\n            width,\n            height,\n            spacing,\n            enableBeforeSeparators,\n            beforeSeparatorOffset,\n            enableAfterSeparators,\n            afterSeparatorOffset,\n        ]\n    )\n\n    const customLayerProps: FunnelCustomLayerProps<D> = useMemo(\n        () => ({\n            width,\n            height,\n            parts: partsWithHandlers,\n            areaGenerator,\n            borderGenerator,\n            beforeSeparators,\n            afterSeparators,\n            setCurrentPartId,\n        }),\n        [\n            width,\n            height,\n            partsWithHandlers,\n            areaGenerator,\n            borderGenerator,\n            beforeSeparators,\n            afterSeparators,\n            setCurrentPartId,\n        ]\n    )\n\n    return {\n        parts: partsWithHandlers,\n        areaGenerator,\n        borderGenerator,\n        beforeSeparators,\n        afterSeparators,\n        setCurrentPartId,\n        currentPartId,\n        customLayerProps,\n    }\n}\n\nexport const useFunnelAnnotations = <D extends FunnelDatum>(\n    parts: FunnelPart<D>[],\n    annotations: FunnelCommonProps<D>['annotations']\n) =>\n    useAnnotations<FunnelPart<D>>({\n        data: parts,\n        annotations,\n        getPosition: part => ({\n            x: part.x,\n            y: part.y,\n        }),\n        getDimensions: (part: FunnelPart<D>) => {\n            const width = part.width\n            const height = part.height\n\n            return { size: Math.max(width, height), width, height }\n        },\n    })\n","import { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport {\n    FunnelDatum,\n    FunnelPartWithHandlers,\n    FunnelAreaGenerator,\n    FunnelBorderGenerator,\n} from './types'\n\nexport interface PartProps<D extends FunnelDatum> {\n    part: FunnelPartWithHandlers<D>\n    areaGenerator: FunnelAreaGenerator\n    borderGenerator: FunnelBorderGenerator\n}\n\nexport const Part = <D extends FunnelDatum>({\n    part,\n    areaGenerator,\n    borderGenerator,\n}: PartProps<D>) => {\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedAreaPath = useAnimatedPath(areaGenerator(part.areaPoints) as string)\n    const animatedBorderPath = useAnimatedPath(borderGenerator(part.borderPoints) as string)\n    const animatedProps = useSpring({\n        areaColor: part.color,\n        borderWidth: part.borderWidth,\n        borderColor: part.borderColor,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {part.borderWidth > 0 && (\n                <animated.path\n                    d={animatedBorderPath}\n                    stroke={animatedProps.borderColor}\n                    strokeWidth={animatedProps.borderWidth}\n                    strokeOpacity={part.borderOpacity}\n                    fill=\"none\"\n                />\n            )}\n            <animated.path\n                d={animatedAreaPath}\n                fill={animatedProps.areaColor}\n                fillOpacity={part.fillOpacity}\n                onMouseEnter={part.onMouseEnter}\n                onMouseLeave={part.onMouseLeave}\n                onMouseMove={part.onMouseMove}\n                onClick={part.onClick}\n            />\n        </>\n    )\n}\n","import { Part } from './Part'\nimport {\n    FunnelPartWithHandlers,\n    FunnelAreaGenerator,\n    FunnelBorderGenerator,\n    FunnelDatum,\n} from './types'\n\ninterface PartsProps<D extends FunnelDatum> {\n    parts: FunnelPartWithHandlers<D>[]\n    areaGenerator: FunnelAreaGenerator\n    borderGenerator: FunnelBorderGenerator\n}\n\nexport const Parts = <D extends FunnelDatum>({\n    parts,\n    areaGenerator,\n    borderGenerator,\n}: PartsProps<D>) => (\n    <>\n        {parts.map(part => (\n            <Part<D>\n                key={part.data.id}\n                part={part}\n                areaGenerator={areaGenerator}\n                borderGenerator={borderGenerator}\n            />\n        ))}\n    </>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface PartLabelProps<D extends FunnelDatum> {\n    part: FunnelPart<D>\n}\n\nexport const PartLabel = <D extends FunnelDatum>({ part }: PartLabelProps<D>) => {\n    const theme = useTheme()\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${part.x}, ${part.y})`,\n        color: part.labelColor,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: animatedProps.color,\n                    pointerEvents: 'none',\n                }}\n            >\n                {part.formattedValue}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { PartLabel } from './PartLabel'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface PartLabelsProps<D extends FunnelDatum> {\n    parts: FunnelPart<D>[]\n}\n\nexport const PartLabels = <D extends FunnelDatum>({ parts }: PartLabelsProps<D>) => (\n    <>\n        {parts.map(part => (\n            <PartLabel key={part.data.id} part={part} />\n        ))}\n    </>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { SeparatorProps as SeparatorType } from './types'\n\ninterface SeparatorProps {\n    separator: SeparatorType\n}\n\nexport const Separator = ({ separator }: SeparatorProps) => {\n    const theme = useTheme()\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x1: separator.x0,\n        x2: separator.x1,\n        y1: separator.y0,\n        y2: separator.y1,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.line\n            x1={animatedProps.x1}\n            x2={animatedProps.x2}\n            y1={animatedProps.y1}\n            y2={animatedProps.y2}\n            fill=\"none\"\n            {...(theme.grid.line as any)}\n        />\n    )\n}\n","import { Separator } from './Separator'\nimport { SeparatorProps as SeparatorType } from './types'\n\ninterface SeparatorsProps {\n    beforeSeparators: SeparatorType[]\n    afterSeparators: SeparatorType[]\n}\n\nexport const Separators = ({ beforeSeparators, afterSeparators }: SeparatorsProps) => (\n    <>\n        {beforeSeparators.map(separator => (\n            <Separator key={separator.partId} separator={separator} />\n        ))}\n        {afterSeparators.map(separator => (\n            <Separator key={separator.partId} separator={separator} />\n        ))}\n    </>\n)\n","import { Annotation } from '@nivo/annotations'\nimport { useFunnelAnnotations } from './hooks'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface FunnelAnnotationsProps<D extends FunnelDatum> {\n    parts: FunnelPart<D>[]\n    annotations: any[]\n}\n\nexport const FunnelAnnotations = <D extends FunnelDatum>({\n    parts,\n    annotations,\n}: FunnelAnnotationsProps<D>) => {\n    const boundAnnotations = useFunnelAnnotations<D>(parts, annotations)\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { SvgWrapper, Container, useDimensions } from '@nivo/core'\nimport { svgDefaultProps } from './props'\nimport { useFunnel } from './hooks'\nimport { Parts } from './Parts'\nimport { PartLabels } from './PartLabels'\nimport { Separators } from './Separators'\nimport { FunnelAnnotations } from './FunnelAnnotations'\nimport { FunnelDatum, FunnelLayerId, FunnelSvgProps } from './types'\n\ntype InnerFunnelProps<D extends FunnelDatum> = Omit<\n    FunnelSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerFunnel = <D extends FunnelDatum>({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    direction = svgDefaultProps.direction,\n    interpolation = svgDefaultProps.interpolation,\n    spacing = svgDefaultProps.spacing,\n    shapeBlending = svgDefaultProps.shapeBlending,\n    valueFormat,\n    colors = svgDefaultProps.colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n    borderOpacity = svgDefaultProps.borderOpacity,\n    enableLabel = svgDefaultProps.enableLabel,\n    labelColor = svgDefaultProps.labelColor,\n    enableBeforeSeparators = svgDefaultProps.enableBeforeSeparators,\n    beforeSeparatorLength = svgDefaultProps.beforeSeparatorLength,\n    beforeSeparatorOffset = svgDefaultProps.beforeSeparatorOffset,\n    enableAfterSeparators = svgDefaultProps.enableAfterSeparators,\n    afterSeparatorLength = svgDefaultProps.afterSeparatorLength,\n    afterSeparatorOffset = svgDefaultProps.afterSeparatorOffset,\n    layers = svgDefaultProps.layers,\n    annotations = svgDefaultProps.annotations,\n    isInteractive = svgDefaultProps.isInteractive,\n    currentPartSizeExtension = svgDefaultProps.currentPartSizeExtension,\n    currentBorderWidth,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerFunnelProps<D>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        areaGenerator,\n        borderGenerator,\n        parts,\n        beforeSeparators,\n        afterSeparators,\n        customLayerProps,\n    } = useFunnel<D>({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        direction,\n        interpolation,\n        spacing,\n        shapeBlending,\n        valueFormat,\n        colors,\n        fillOpacity,\n        borderWidth,\n        borderColor,\n        borderOpacity,\n        labelColor,\n        enableBeforeSeparators,\n        beforeSeparatorLength,\n        beforeSeparatorOffset,\n        enableAfterSeparators,\n        afterSeparatorLength,\n        afterSeparatorOffset,\n        isInteractive,\n        currentPartSizeExtension,\n        currentBorderWidth,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n    })\n\n    const layerById: Record<FunnelLayerId, ReactNode> = {\n        separators: null,\n        parts: null,\n        annotations: null,\n        labels: null,\n    }\n\n    if (layers.includes('separators')) {\n        layerById.separators = (\n            <Separators\n                key=\"separators\"\n                beforeSeparators={beforeSeparators}\n                afterSeparators={afterSeparators}\n            />\n        )\n    }\n\n    if (layers.includes('parts')) {\n        layerById.parts = (\n            <Parts<D>\n                key=\"parts\"\n                parts={parts}\n                areaGenerator={areaGenerator}\n                borderGenerator={borderGenerator}\n            />\n        )\n    }\n\n    if (layers?.includes('annotations')) {\n        layerById.annotations = (\n            <FunnelAnnotations<D> key=\"annotations\" parts={parts} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('labels') && enableLabel) {\n        layerById.labels = <PartLabels<D> key=\"labels\" parts={parts} />\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Funnel = <D extends FunnelDatum = FunnelDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: FunnelSvgProps<D>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerFunnel<D> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { FunnelDatum, FunnelSvgProps } from './types'\nimport { Funnel } from './Funnel'\n\nexport const ResponsiveFunnel = <D extends FunnelDatum = FunnelDatum>(\n    props: Omit<FunnelSvgProps<D>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Funnel<D> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","svgDefaultProps","layers","direction","interpolation","spacing","shapeBlending","colors","scheme","fillOpacity","borderWidth","borderColor","from","borderOpacity","enableLabel","labelColor","theme","enableBeforeSeparators","beforeSeparatorLength","beforeSeparatorOffset","enableAfterSeparators","afterSeparatorLength","afterSeparatorOffset","annotations","isInteractive","currentPartSizeExtension","role","animate","MotionConfigProvider","motionConfig","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","toString","slice","constructor","name","test","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","unsupportedIterableToArray","TypeError","nonIterableRest","_toConsumableArray","arrayWithoutHoles","iter","iterableToArray","nonIterableSpread","PartTooltip","part","id","color","enableChip","useFunnel","data","width","height","defaults","rawShapeBlending","valueFormat","currentBorderWidth","onMouseEnter","onMouseMove","onMouseLeave","onClick","useTheme","getColor","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelColor","formatValue","useValueFormatter","useMemo","areaGenerator","area","d","computeShapeGenerators","borderGenerator","paddingBefore","paddingAfter","innerWidth","innerHeight","bandScaleSize","linearScaleSize","bandwidth","bandScale","index","allValues","scaleLinear","Math","computeScales","linearScale","useState","currentPartId","setCurrentPartId","parts","enhancedParts","isCurrent","datum","partWidth","partHeight","x0","y0","x1","x","y1","y","formattedValue","points","areaPoints","borderPoints","nextPart","lastAreaPoint","useTooltip","showTooltipFromEvent","hideTooltip","partsWithHandlers","boundOnClick","event","createElement","computePartsHandlers","beforeSeparators","afterSeparators","lastPart","partId","computeSeparators","customLayerProps","Part","useMotionConfig","animatedAreaPath","useAnimatedPath","animatedBorderPath","animatedProps","useSpring","areaColor","config","immediate","stroke","strokeWidth","strokeOpacity","fill","Parts","PartLabel","transform","textAnchor","dominantBaseline","style","pointerEvents","PartLabels","Separator","separator","x2","y2","Separators","FunnelAnnotations","boundAnnotations","useAnnotations","getPosition","getDimensions","size","useFunnelAnnotations","_jsx","InnerFunnel","partialMargin","margin","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","outerWidth","outerHeight","layerById","separators","labels","layer","Funnel","renderWrapper","otherProps","ResponsiveFunnel"],"sourceRoot":""}