{"version":3,"file":"component---src-pages-network-index-js-6655ac2bb7d08c7e9abf.js","mappings":"oaAQA,IAAMA,EAAoBC,OAAOC,OAAO,CACpCC,OAAQ,CACJC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAGVC,aAAc,GACdC,YAAa,EACbC,WAAY,GAEZC,UAAW,SAAAC,GAAI,OAAIA,EAAKC,OACxBC,gBAAiB,EACjBC,gBAAiB,CACbC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3BC,UAAWC,EAAAA,GAAAA,UACXC,cAAe,SAAAC,GAAI,OAA8B,GAAzB,EAAIA,EAAKC,OAAOC,QAExCC,eAAe,EAEfC,SAAS,EACTC,gBAAiB,IACjBC,cAAe,KAGbC,EAAe,kBAAMC,EAAAA,EAAAA,OAqD3B,UAnDgB,WACZ,IAE4CC,GAExCC,EAAAA,EAAAA,gBAAe,aAHfD,MACIE,gBAAmBC,gBAY3B,OACI,SAAC,IAAD,CACIC,KAAK,UACLC,KAAMA,EAAAA,GACNC,KAAK,UACLC,QAASF,EAAAA,GACTG,cAAc,MACdC,WAAYC,EAAAA,EACZxC,kBAAmBA,EACnByC,kBAAmBtB,EAAAA,GACnBS,aAAcA,EACdc,YAAa,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,QAChCf,MAAOA,EAXX,SAaK,SAACS,EAAYI,EAAMG,EAAOC,GACvB,OACI,SAAC,KAAD,GACIH,MAAOD,EAAKC,MACZI,MAAOL,EAAKK,OACRT,EAHR,CAIIO,MAAOA,EACPG,QAAS,SAAArC,GACLmC,EAAU,CACNG,KAAM,QACNC,MAAM,cAAevC,EAAKwC,GAArB,YAAmCxC,EAAKyC,MAC7CxC,MAAOD,EAAKC,MACZ8B,KAAM/B","sources":["webpack://nivo-website/./src/pages/network/index.js"],"sourcesContent":["import React from 'react'\nimport { ResponsiveNetwork, NetworkDefaultProps } from '@nivo/network'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/network/meta.yml'\nimport { groups } from '../../data/components/network/props'\nimport { generateNetworkData } from '@nivo/generators'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst initialProperties = Object.freeze({\n    margin: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n\n    linkDistance: 30,\n    repulsivity: 6,\n    iterations: 60,\n\n    nodeColor: node => node.color,\n    nodeBorderWidth: 1,\n    nodeBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.8]],\n    },\n\n    linkColor: NetworkDefaultProps.linkColor,\n    linkThickness: link => (2 - link.source.depth) * 2,\n\n    isInteractive: true,\n\n    animate: true,\n    motionStiffness: 160,\n    motionDamping: 12,\n})\n\nconst generateData = () => generateNetworkData()\n\nconst Network = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/network.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 900, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <ComponentTemplate\n            name=\"Network\"\n            meta={meta.Network}\n            icon=\"network\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={NetworkDefaultProps}\n            generateData={generateData}\n            getDataSize={data => data.nodes.length}\n            image={image}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveNetwork\n                        nodes={data.nodes}\n                        links={data.links}\n                        {...properties}\n                        theme={theme}\n                        onClick={node => {\n                            logAction({\n                                type: 'click',\n                                label: `[node] id: ${node.id}, index: ${node.index}`,\n                                color: node.color,\n                                data: node,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Network\n"],"names":["initialProperties","Object","freeze","margin","top","right","bottom","left","linkDistance","repulsivity","iterations","nodeColor","node","color","nodeBorderWidth","nodeBorderColor","from","modifiers","linkColor","NetworkDefaultProps","linkThickness","link","source","depth","isInteractive","animate","motionStiffness","motionDamping","generateData","generateNetworkData","image","useStaticQuery","childImageSharp","gatsbyImageData","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","getDataSize","data","nodes","length","theme","logAction","links","onClick","type","label","id","index"],"sourceRoot":""}