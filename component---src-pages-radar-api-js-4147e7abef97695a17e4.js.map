{"version":3,"file":"component---src-pages-radar-api-js-4147e7abef97695a17e4.js","mappings":"+NASA,GAAuBA,EAAAA,EAAAA,MAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAsEd,UApEiB,WACb,IAE4CC,GAExCC,EAAAA,EAAAA,gBAAe,cAHfD,MACIE,gBAAmBC,gBAY3B,OACI,iCACI,SAAC,IAAD,CAAKC,MAAM,iBAAiBJ,MAAOA,EAAOK,SAAQ,UAAMC,EAAAA,EAAAA,KAAN,CAAuB,gBACzE,SAAC,IAAD,CACIC,cAAc,QACdC,WAAW,QACXC,QAAQ,gBACRC,QAASJ,EAAAA,EACTK,aAAa,OACbC,cAAeC,EAAAA,EACfC,YAAaC,EAAAA,EACbC,aAAc,CACVC,MAAO,IACPC,OAAQ,IACRpB,KAAMqB,KAAKC,UAAUtB,EAAM,KAAM,MACjCC,KAAAA,EACAsB,QAAS,QACTC,SAAU,OACVC,YAAa,CAAEC,OAAQ,QAASC,SAAS,GAEzCC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAGVC,OAAQ,CAAEC,OAAQ,QAClBC,MAAO,mBAEPC,YAAa,EACbC,YAAa,CAAEC,KAAM,SAErBC,WAAY,EACZC,UAAW,WACXC,gBAAiB,GAEjBC,YAAY,EACZC,QAAS,EACTC,SAAU,CAAEN,KAAM,SAClBO,eAAgB,EAChBC,eAAgB,CAAEC,MAAO,cACzBC,gBAAgB,EAChBC,SAAU,QACVC,iBAAkB,GAElBC,YAAa","sources":["webpack://nivo-website/./src/pages/radar/api.js"],"sourcesContent":["import React from 'react'\nimport { generateWinesTastes } from '@nivo/generators'\nimport { Seo } from '../../components/Seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/radar/props'\nimport mapper from '../../data/components/radar/mapper'\nimport meta from '../../data/components/radar/meta.yml'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst { data, keys } = generateWinesTastes()\n\nconst RadarApi = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/radar.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 900, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <>\n            <Seo title=\"Radar HTTP API\" image={image} keywords={[...meta.Radar.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"Radar\"\n                chartClass=\"radar\"\n                apiPath=\"/charts/radar\"\n                flavors={meta.flavors}\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 600,\n                    height: 600,\n                    data: JSON.stringify(data, null, '  '),\n                    keys,\n                    indexBy: 'taste',\n                    maxValue: 'auto',\n                    valueFormat: { format: '>-.2f', enabled: true },\n\n                    margin: {\n                        top: 70,\n                        right: 80,\n                        bottom: 40,\n                        left: 80,\n                    },\n\n                    colors: { scheme: 'nivo' },\n                    curve: 'catmullRomClosed',\n\n                    borderWidth: 2,\n                    borderColor: { from: 'color' },\n\n                    gridLevels: 5,\n                    gridShape: 'circular',\n                    gridLabelOffset: 36,\n\n                    enableDots: true,\n                    dotSize: 8,\n                    dotColor: { from: 'color' },\n                    dotBorderWidth: 0,\n                    dotBorderColor: { theme: 'background' },\n                    enableDotLabel: true,\n                    dotLabel: 'value',\n                    dotLabelYOffset: -12,\n\n                    fillOpacity: 0.1,\n                }}\n            />\n        </>\n    )\n}\n\nexport default RadarApi\n"],"names":["generateWinesTastes","data","keys","image","useStaticQuery","childImageSharp","gatsbyImageData","title","keywords","meta","componentName","chartClass","apiPath","flavors","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","width","height","JSON","stringify","indexBy","maxValue","valueFormat","format","enabled","margin","top","right","bottom","left","colors","scheme","curve","borderWidth","borderColor","from","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","dotBorderWidth","dotBorderColor","theme","enableDotLabel","dotLabel","dotLabelYOffset","fillOpacity"],"sourceRoot":""}