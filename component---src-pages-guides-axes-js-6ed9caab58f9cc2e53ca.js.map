{"version":3,"file":"component---src-pages-guides-axes-js-6ed9caab58f9cc2e53ca.js","mappings":"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","sources":["webpack://nivo-website/./src/components/PageContent.ts","webpack://nivo-website/./src/components/styled.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/./src/components/guides/axes/scales.js","webpack://nivo-website/./src/components/guides/axes/theme.js","webpack://nivo-website/./src/components/guides/axes/AxesPosition.js","webpack://nivo-website/./src/components/guides/axes/AxesTicks.js","webpack://nivo-website/./src/components/guides/axes/AxesLegend.js","webpack://nivo-website/./src/pages/guides/axes.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/../node_modules/d3-time/src/millisecond.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/second.js","webpack://nivo-website/../node_modules/d3-time/src/minute.js","webpack://nivo-website/../node_modules/d3-time/src/hour.js","webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/../node_modules/d3-time/src/week.js","webpack://nivo-website/../node_modules/d3-time/src/month.js","webpack://nivo-website/../node_modules/d3-time/src/year.js","webpack://nivo-website/../node_modules/d3-time/src/utcMinute.js","webpack://nivo-website/../node_modules/d3-time/src/utcHour.js","webpack://nivo-website/../node_modules/d3-time/src/utcDay.js","webpack://nivo-website/../node_modules/d3-time/src/utcWeek.js","webpack://nivo-website/../node_modules/d3-time/src/utcMonth.js","webpack://nivo-website/../node_modules/d3-time/src/utcYear.js","webpack://nivo-website/../node_modules/lodash/_baseUniq.js","webpack://nivo-website/../node_modules/lodash/_createSet.js","webpack://nivo-website/../node_modules/lodash/noop.js","webpack://nivo-website/../node_modules/lodash/uniq.js"],"sourcesContent":["import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport default styled.div`\n    margin: 0 50px;\n    position: relative;\n\n    ${media.tablet`\n        & {\n            margin: 0 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px;\n        }\n    `}\n`\n","import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport const FullWidthBanner = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    margin-bottom: 40px;\n    padding: 20px;\n`\n\nexport const DescriptionBlock = styled.div`\n    max-width: 800px;\n    margin: 0 auto 50px;\n\n    ${media.tablet`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n`\n\nexport const Card = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    box-shadow: ${({ theme }) => theme.cardShadow};\n`\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return (d3Format(format) as unknown) as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","import { scaleLinear, scalePoint, scaleTime } from 'd3-scale'\n\nexport const linearXScale = scaleLinear().range([0, 280]).domain([0, 80])\nlinearXScale.type = 'linear'\n\nexport const linearYScale = scaleLinear().range([160, 0]).domain([0, 35])\nlinearYScale.type = 'linear'\n\nexport const pointXScale = scalePoint()\n    .range([0, 280])\n    .domain(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'])\npointXScale.type = 'point'\n\nexport const timeXScale = scaleTime()\n    .range([0, 280])\n    .domain([new Date(2019, 0, 1, 0, 0, 0, 0), new Date(2020, 0, 1, 0, 0, 0, 0)])\ntimeXScale.type = 'time'\n\nexport const timeXScaleHours = scaleTime()\n    .range([0, 280])\n    .domain([\n        new Date(Date.UTC(2020, 0, 1, 9, 0, 0, 0)),\n        new Date(Date.UTC(2020, 0, 1, 10, 0, 0, 0)),\n    ])\ntimeXScaleHours.type = 'time'\n","import { useMemo } from 'react'\nimport { useTheme } from '../../../theming/context'\n\nexport const useAxisTheme = () => {\n    const theme = useTheme()\n    const nivoTheme = useMemo(() => {\n        return {\n            ...theme.nivo,\n            axis: {\n                ...theme.nivo.axis,\n                domain: {\n                    ...theme.nivo.axis.domain,\n                    line: {\n                        ...theme.nivo.axis.domain.line,\n                        strokeWidth: 1,\n                    },\n                },\n                legend: {\n                    ...theme.nivo.axis.legend,\n                    text: {\n                        ...theme.nivo.axis.legend.text,\n                        fill: theme.colors.accent,\n                    },\n                },\n            },\n        }\n    }, [theme])\n\n    return nivoTheme\n}\n","import React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axes } from '@nivo/axes'\nimport { linearXScale, linearYScale } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst AxesPosition = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"position\">Axis position</h2>\n                <p>\n                    Axis position is determined by the property you use{' '}\n                    <strong>(top|right|bottom|left)Axis</strong>.\n                </p>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <div className=\"guide__illustrations\">\n                    <svg role=\"img\" width={380} height={260}>\n                        <g transform=\"translate(50,50)\">\n                            <ThemeProvider theme={theme}>\n                                <MotionConfigProvider animate={false}>\n                                    <Axes\n                                        xScale={linearXScale}\n                                        yScale={linearYScale}\n                                        width={280}\n                                        height={160}\n                                        animate={false}\n                                        motionStiffness={0}\n                                        motionDamping={0}\n                                        top={{\n                                            legend: 'axisTop',\n                                            legendPosition: 'middle',\n                                            legendOffset: -32,\n                                        }}\n                                        right={{\n                                            legend: 'axisRight',\n                                            legendPosition: 'middle',\n                                            legendOffset: 42,\n                                        }}\n                                        bottom={{\n                                            legend: 'axisBottom',\n                                            legendPosition: 'middle',\n                                            legendOffset: 38,\n                                        }}\n                                        left={{\n                                            legend: 'axisLeft',\n                                            legendPosition: 'middle',\n                                            legendOffset: -36,\n                                        }}\n                                    />\n                                </MotionConfigProvider>\n                            </ThemeProvider>\n                        </g>\n                    </svg>\n                </div>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesPosition\n","import React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { linearXScale, pointXScale, timeXScale, timeXScaleHours } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst AxesTicks = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"ticks\">Axis ticks</h2>\n                <p>\n                    Axes are composed of <strong>ticks</strong>, you can control the way they are\n                    computed and their aspect. By default, computing which ticks are displayed is\n                    managed by the corresponding{' '}\n                    <a\n                        href=\"https://github.com/d3/d3-scale\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        d3 scale\n                    </a>\n                    .\n                </p>\n                <h3 id=\"ticks-values\">Ticks values</h3>\n                <p>\n                    You can use the <code>tickValues</code> property in order to customize the\n                    displayed ticks, it accepts several forms:\n                </p>\n                <ul>\n                    <li>\n                        an array of values, which should be numbers for a linear scale, values being\n                        part of the dataset for point scales, or dates for time scales.\n                    </li>\n                    <li>\n                        a number which define the number of ticks to display,{' '}\n                        <strong>doesn't work with point scale</strong>, also note that when using\n                        this form{' '}\n                        <strong>\n                            it's not guaranteed that you'll have exactly the number of ticks you\n                            asked for\n                        </strong>{' '}\n                        as d3 will make an educated guess to define them.\n                    </li>\n                    <li>\n                        a time interval, for example <code>every day</code> or{' '}\n                        <code>every 15 minutes</code>,{' '}\n                        <strong>only works when using time scales</strong>.\n                    </li>\n                </ul>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <ThemeProvider theme={theme}>\n                    <MotionConfigProvider animate={false}>\n                        <div\n                            className=\"guide__illustrations\"\n                            style={{ justifyContent: 'center', alignItems: 'center' }}\n                        >\n                            <svg role=\"img\" width={380} height={191}>\n                                <g transform={`translate(50,50)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={pointXScale}\n                                        tickValues={['A', 'C', 'E', 'G', 'I']}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"point scale ['A', 'C', 'E', 'G', 'I']\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,120)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={linearXScale}\n                                        tickValues={[0, 20, 40, 60, 80]}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"linear scale [0, 20, 40, 60, 80]\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,190)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScale}\n                                        tickValues={[\n                                            new Date(2019, 0, 1, 0, 0, 0, 0),\n                                            new Date(2019, 6, 1, 0, 0, 0, 0),\n                                            new Date(2020, 0, 1, 0, 0, 0, 0),\n                                        ]}\n                                        length={280}\n                                        theme={theme}\n                                        format=\"%Y/%m\"\n                                        animate={false}\n                                        legend=\"time scale with three dates\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                            </svg>\n                            <svg role=\"img\" width={380} height={191}>\n                                <g transform={`translate(50,50)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScaleHours}\n                                        tickValues=\"every 15 minutes\"\n                                        format=\"%H:%M\"\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"time scale, every 15 minutes\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,120)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={linearXScale}\n                                        tickValues={5}\n                                        length={280}\n                                        theme={theme}\n                                        animate={false}\n                                        legend=\"linear scale, tickValues: 5\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                                <g transform={`translate(50,190)`}>\n                                    <Axis\n                                        axis=\"x\"\n                                        scale={timeXScale}\n                                        tickValues={5}\n                                        length={280}\n                                        theme={theme}\n                                        format=\"%Y/%m\"\n                                        animate={false}\n                                        legend=\"time scale, tickValues: 5\"\n                                        legendPosition=\"start\"\n                                        legendOffset={-38}\n                                        ticksPosition=\"before\"\n                                    />\n                                </g>\n                            </svg>\n                        </div>\n                    </MotionConfigProvider>\n                </ThemeProvider>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesTicks\n","import React from 'react'\nimport { ThemeProvider, MotionConfigProvider } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { linearXScale, linearYScale } from './scales'\nimport { FullWidthBanner, DescriptionBlock } from '../../styled'\nimport { useAxisTheme } from './theme'\n\nconst axisPositions = ['start', 'middle', 'end']\n\nconst AxesLegend = () => {\n    const theme = useAxisTheme()\n\n    return (\n        <>\n            <DescriptionBlock>\n                <h2 id=\"legend\">Axis legend</h2>\n                <p>\n                    You can optionally add a legend to an axis by setting the value of the{' '}\n                    <code>legend</code> property.\n                </p>\n                <h3 id=\"legend-position\">Legend position</h3>\n                <p>\n                    Legend position is controlled by two properties, <code>legendPosition</code> and{' '}\n                    <code>legendOffset</code>.<code>legendPosition</code> must be one of:{' '}\n                    <code>start</code>, <code>middle</code> or <code>end</code>,{' '}\n                    <code>legendOffset</code> will affect y position for <strong>top</strong> and{' '}\n                    <strong>bottom</strong> axes and x position for <strong>left</strong> and{' '}\n                    <strong>right</strong> axes.\n                </p>\n            </DescriptionBlock>\n            <FullWidthBanner>\n                <ThemeProvider theme={theme}>\n                    <MotionConfigProvider animate={false}>\n                        <div\n                            className=\"guide__illustrations\"\n                            style={{ justifyContent: 'center', alignItems: 'center' }}\n                        >\n                            <svg role=\"img\" width={380} height={180}>\n                                {axisPositions.map((position, i) => (\n                                    <g key={position} transform={`translate(50,${i * 70 + 40})`}>\n                                        <Axis\n                                            axis=\"x\"\n                                            scale={linearXScale}\n                                            length={280}\n                                            animate={false}\n                                            motionStiffness={0}\n                                            motionDamping={0}\n                                            legend={position}\n                                            legendPosition={position}\n                                            legendOffset={-32}\n                                            ticksPosition=\"before\"\n                                        />\n                                    </g>\n                                ))}\n                            </svg>\n                            <svg role=\"img\" width={260} height={260}>\n                                {axisPositions.map((position, i) => (\n                                    <g key={position} transform={`translate(${i * 90 + 50},50)`}>\n                                        <Axis\n                                            axis=\"y\"\n                                            scale={linearYScale}\n                                            length={160}\n                                            animate={false}\n                                            motionStiffness={0}\n                                            motionDamping={0}\n                                            legend={position}\n                                            legendPosition={position}\n                                            legendOffset={-32}\n                                            ticksPosition=\"before\"\n                                        />\n                                    </g>\n                                ))}\n                            </svg>\n                        </div>\n                    </MotionConfigProvider>\n                </ThemeProvider>\n            </FullWidthBanner>\n        </>\n    )\n}\n\nexport default AxesLegend\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport { Seo } from '../../components/Seo'\nimport PageContent from '../../components/PageContent'\nimport AxesPosition from '../../components/guides/axes/AxesPosition'\nimport AxesTicks from '../../components/guides/axes/AxesTicks'\nimport AxesLegend from '../../components/guides/axes/AxesLegend'\nimport { DescriptionBlock } from '../../components/styled'\n\nexport default class Axes extends Component {\n    render() {\n        return (\n            <Layout>\n                <Seo title=\"Axes Guide\" />\n                <PageContent>\n                    <div className=\"guide__header\">\n                        <h1>Axes</h1>\n                    </div>\n                </PageContent>\n                <DescriptionBlock>\n                    <h2>Using axes in nivo components</h2>\n                    <p>\n                        Axes are built on top of{' '}\n                        <a\n                            href=\"https://github.com/d3/d3-scale\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            d3 scales\n                        </a>\n                        . A lot of nivo components make use of it (<Link to=\"/bar\">Bar</Link>,{' '}\n                        <Link to=\"/line\">Line</Link>, <Link to=\"/scatterplot\">ScatterPlot</Link>\n                        …).\n                    </p>\n                </DescriptionBlock>\n                <AxesPosition />\n                <AxesTicks />\n                <AxesLegend />\n            </Layout>\n        )\n    }\n}\n","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import interval from \"./interval\";\nvar millisecond = interval(function () {// noop\n}, function (date, step) {\n  date.setTime(+date + step);\n}, function (start, end) {\n  return end - start;\n}); // An optimized implementation for this simple case.\n\nmillisecond.every = function (k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function (date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function (date, step) {\n    date.setTime(+date + step * k);\n  }, function (start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","import interval from \"./interval\";\nimport { durationSecond } from \"./duration\";\nvar second = interval(function (date) {\n  date.setTime(date - date.getMilliseconds());\n}, function (date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function (start, end) {\n  return (end - start) / durationSecond;\n}, function (date) {\n  return date.getUTCSeconds();\n});\nexport default second;\nexport var seconds = second.range;","import interval from \"./interval\";\nimport { durationMinute, durationSecond } from \"./duration\";\nvar minute = interval(function (date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getMinutes();\n});\nexport default minute;\nexport var minutes = minute.range;","import interval from \"./interval\";\nimport { durationHour, durationMinute, durationSecond } from \"./duration\";\nvar hour = interval(function (date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getHours();\n});\nexport default hour;\nexport var hours = hour.range;","import interval from \"./interval\";\nimport { durationDay, durationMinute } from \"./duration\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import interval from \"./interval\";\nimport { durationMinute, durationWeek } from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function (date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;","import interval from \"./interval\";\nvar month = interval(function (date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function (start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function (date) {\n  return date.getMonth();\n});\nexport default month;\nexport var months = month.range;","import interval from \"./interval\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","import interval from \"./interval\";\nimport { durationMinute } from \"./duration\";\nvar utcMinute = interval(function (date) {\n  date.setUTCSeconds(0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getUTCMinutes();\n});\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;","import interval from \"./interval\";\nimport { durationHour } from \"./duration\";\nvar utcHour = interval(function (date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getUTCHours();\n});\nexport default utcHour;\nexport var utcHours = utcHour.range;","import interval from \"./interval\";\nimport { durationDay } from \"./duration\";\nvar utcDay = interval(function (date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function (start, end) {\n  return (end - start) / durationDay;\n}, function (date) {\n  return date.getUTCDate() - 1;\n});\nexport default utcDay;\nexport var utcDays = utcDay.range;","import interval from \"./interval\";\nimport { durationWeek } from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function (date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function (start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;","import interval from \"./interval\";\nvar utcMonth = interval(function (date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function (start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function (date) {\n  return date.getUTCMonth();\n});\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;","import interval from \"./interval\";\nvar utcYear = interval(function (date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function (start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function (date) {\n  return date.getUTCFullYear();\n}); // An optimized implementation for this simple case.\n\nutcYear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n"],"names":["styled","media","FullWidthBanner","theme","colors","cardBackground","DescriptionBlock","Card","cardShadow","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","d","x","y","ticks","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","isArray","Array","x1","x2","y1","y2","AxisTick","_value","format","onClick","textAnchor","animatedProps","useTheme","props","useMemo","style","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","tick","initial","textTransform","from","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","lines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","ctx","Number","degreesToRadians","String","renderAxesToCanvas","renderGridLinesToCanvas","linearXScale","scaleLinear","range","domain","type","linearYScale","pointXScale","scalePoint","timeXScale","scaleTime","timeXScaleHours","UTC","useAxisTheme","nivo","strokeWidth","fill","accent","id","className","role","motionStiffness","motionDamping","href","rel","justifyContent","alignItems","axisPositions","map","render","Layout","Seo","title","PageContent","Link","to","Component","t0","t1","newInterval","floori","offseti","count","field","interval","date","floor","ceil","round","d0","d1","offset","step","Math","start","stop","previous","test","setTime","end","every","isFinite","millisecond","k","durationSecond","durationMinute","durationHour","durationDay","durationWeek","second","getMilliseconds","getUTCSeconds","minute","getSeconds","getMinutes","hour","getHours","day","setHours","setDate","getDate","getTimezoneOffset","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","month","setMonth","getMonth","getFullYear","months","year","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","module","exports","array","iteratee","comparator","index","includes","isCommon","result","seen","set","outer","computed","seenIndex","Set","noop","baseUniq"],"sourceRoot":""}