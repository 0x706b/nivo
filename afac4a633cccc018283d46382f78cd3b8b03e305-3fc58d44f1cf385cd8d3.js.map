{"version":3,"file":"afac4a633cccc018283d46382f78cd3b8b03e305-3fc58d44f1cf385cd8d3.js","mappings":"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","sources":["webpack://nivo-website/./src/data/components/geo/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../node_modules/d3-geo/src/adder.js","webpack://nivo-website/../node_modules/d3-geo/src/math.js","webpack://nivo-website/../node_modules/d3-geo/src/noop.js","webpack://nivo-website/../node_modules/d3-geo/src/stream.js","webpack://nivo-website/../node_modules/d3-geo/src/area.js","webpack://nivo-website/../node_modules/d3-geo/src/cartesian.js","webpack://nivo-website/../node_modules/d3-geo/src/bounds.js","webpack://nivo-website/../node_modules/d3-geo/src/compose.js","webpack://nivo-website/../node_modules/d3-geo/src/rotation.js","webpack://nivo-website/../node_modules/d3-geo/src/circle.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/buffer.js","webpack://nivo-website/../node_modules/d3-geo/src/pointEqual.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/rejoin.js","webpack://nivo-website/../node_modules/d3-geo/src/polygonContains.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/index.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/antimeridian.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/circle.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/rectangle.js","webpack://nivo-website/../node_modules/d3-geo/src/clip/line.js","webpack://nivo-website/../node_modules/d3-geo/src/length.js","webpack://nivo-website/../node_modules/d3-geo/src/distance.js","webpack://nivo-website/../node_modules/d3-geo/src/contains.js","webpack://nivo-website/../node_modules/d3-geo/src/graticule.js","webpack://nivo-website/../node_modules/d3-geo/src/identity.js","webpack://nivo-website/../node_modules/d3-geo/src/path/area.js","webpack://nivo-website/../node_modules/d3-geo/src/path/bounds.js","webpack://nivo-website/../node_modules/d3-geo/src/path/centroid.js","webpack://nivo-website/../node_modules/d3-geo/src/path/context.js","webpack://nivo-website/../node_modules/d3-geo/src/path/measure.js","webpack://nivo-website/../node_modules/d3-geo/src/path/string.js","webpack://nivo-website/../node_modules/d3-geo/src/transform.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/fit.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/resample.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/index.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/azimuthal.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/mercator.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/equirectangular.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/equalEarth.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/gnomonic.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/naturalEarth1.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/orthographic.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/stereographic.js","webpack://nivo-website/../node_modules/d3-geo/src/projection/transverseMercator.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/hooks.js","webpack://nivo-website/../node_modules/d3-geo/src/path/index.js","webpack://nivo-website/../src/ChoroplethTooltip.js","webpack://nivo-website/../src/props.js","webpack://nivo-website/../src/GeoGraticule.js","webpack://nivo-website/../src/GeoMapFeature.js","webpack://nivo-website/../src/GeoMap.js","webpack://nivo-website/../src/ResponsiveGeoMap.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../src/GeoMapCanvas.js","webpack://nivo-website/../src/ResponsiveGeoMapCanvas.js","webpack://nivo-website/../src/Choropleth.js","webpack://nivo-website/../src/ResponsiveChoropleth.js","webpack://nivo-website/../src/ChoroplethCanvas.js","webpack://nivo-website/../src/ResponsiveChoroplethCanvas.js","webpack://nivo-website/./src/data/components/geo/mapper.js","webpack://nivo-website/../node_modules/d3-array/src/ascending.js","webpack://nivo-website/../node_modules/d3-array/src/bisector.js","webpack://nivo-website/../node_modules/d3-array/src/bisect.js","webpack://nivo-website/../node_modules/d3-array/src/array.js","webpack://nivo-website/../node_modules/d3-array/src/ticks.js","webpack://nivo-website/../node_modules/d3-array/src/merge.js","webpack://nivo-website/../node_modules/d3-array/src/range.js"],"sourcesContent":["import { GeoMapDefaultProps } from '@nivo/geo'\nimport { themeProperty, defsProperties } from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nexport const props: ChartProperty[] = [\n    {\n        key: 'width',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'projectionType',\n        help: 'Defines the projection to use.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionType,\n        controlType: 'choices',\n        group: 'Projection',\n        controlOptions: {\n            choices: [\n                { label: 'azimuthalEqualArea', value: 'azimuthalEqualArea' },\n                { label: 'azimuthalEquidistant', value: 'azimuthalEquidistant' },\n                { label: 'gnomonic', value: 'gnomonic' },\n                { label: 'orthographic', value: 'orthographic' },\n                { label: 'stereographic', value: 'stereographic' },\n                { label: 'equalEarth', value: 'equalEarth' },\n                { label: 'equirectangular', value: 'equirectangular' },\n                { label: 'mercator', value: 'mercator' },\n                { label: 'transverseMercator', value: 'transverseMercator' },\n                { label: 'naturalEarth1', value: 'naturalEarth1' },\n            ],\n        },\n    },\n    {\n        key: 'projectionScale',\n        help: 'Projection scale.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionScale,\n        type: 'number',\n        controlType: 'range',\n        group: 'Projection',\n        controlOptions: {\n            min: 0,\n            max: 400,\n        },\n    },\n    {\n        key: 'projectionTranslation',\n        type: '[number, number]',\n        help: 'Projection x/y translation.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionTranslation,\n        controlType: 'numberArray',\n        group: 'Projection',\n        controlOptions: {\n            unit: 'px',\n            items: [\n                {\n                    label: 'x',\n                    min: -1,\n                    max: 1,\n                    step: 0.05,\n                },\n                {\n                    label: 'y',\n                    min: -1,\n                    max: 1,\n                    step: 0.05,\n                },\n            ],\n        },\n    },\n    {\n        key: 'projectionRotation',\n        type: '[number, number, number]',\n        help: 'Projection rotation.',\n        required: false,\n        defaultValue: GeoMapDefaultProps.projectionRotation,\n        group: 'Projection',\n        controlType: 'numberArray',\n        controlOptions: {\n            items: [\n                {\n                    label: 'lambda (λ)',\n                    min: -360,\n                    max: 360,\n                },\n                {\n                    label: 'phi (φ)',\n                    min: -360,\n                    max: 360,\n                },\n                {\n                    label: 'gamma (γ)',\n                    min: -360,\n                    max: 360,\n                },\n            ],\n        },\n    },\n    themeProperty(['svg', 'canvas']),\n    {\n        key: 'borderWidth',\n        help: 'Control border width.',\n        type: 'number',\n        required: false,\n        defaultValue: GeoMapDefaultProps.borderWidth,\n        group: 'Style',\n        controlType: 'lineWidth',\n        controlOptions: {\n            step: 0.5,\n        },\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: GeoMapDefaultProps.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'enableGraticule',\n        help: 'Enable meridians and parallels, useful for showing projection distortion.',\n        type: 'boolean',\n        required: false,\n        defaultValue: GeoMapDefaultProps.enableGraticule,\n        controlType: 'switch',\n        group: 'Graticule',\n    },\n    {\n        key: 'graticuleLineWidth',\n        help: 'Control meridians and parallel lines width.',\n        type: 'number',\n        required: false,\n        defaultValue: GeoMapDefaultProps.graticuleLineWidth,\n        controlType: 'lineWidth',\n        group: 'Graticule',\n        controlOptions: {\n            step: 0.5,\n        },\n    },\n    {\n        key: 'graticuleLineColor',\n        help: 'Control meridians and parallel lines color.',\n        type: 'string',\n        required: false,\n        defaultValue: GeoMapDefaultProps.graticuleLineColor,\n        controlType: 'colorPicker',\n        group: 'Graticule',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'isInteractive',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: GeoMapDefaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onClick',\n        help: 'onClick handler, it receives clicked node data and style plus mouse event.',\n        type: 'Function',\n        required: false,\n        group: 'Interactivity',\n    },\n]\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping: any, { exclude = [] } = {}) => (\n    settings: any,\n    options: any = {}\n) => {\n    const overrides: any = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import length from \"./length\";\nvar coordinates = [null, null],\n    object = {\n  type: \"LineString\",\n  coordinates: coordinates\n};\nexport default function (a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}","import { default as polygonContains } from \"./polygonContains\";\nimport { default as distance } from \"./distance\";\nimport { epsilon, radians } from \"./math\";\nvar containsObjectType = {\n  Feature: function Feature(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function FeatureCollection(object, point) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      if (containsGeometry(features[i].geometry, point)) return true;\n    }\n\n    return false;\n  }\n};\nvar containsGeometryType = {\n  Sphere: function Sphere() {\n    return true;\n  },\n  Point: function Point(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function MultiPoint(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPoint(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  LineString: function LineString(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function MultiLineString(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsLine(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  Polygon: function Polygon(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function MultiPolygon(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPolygon(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  GeometryCollection: function GeometryCollection(object, point) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      if (containsGeometry(geometries[i], point)) return true;\n    }\n\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function (object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n}","import { range } from \"d3-array\";\nimport { abs, ceil, epsilon } from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function (x) {\n    return y.map(function (y) {\n      return [x, y];\n    });\n  };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function (y) {\n    return x.map(function (x) {\n      return [x, y];\n    });\n  };\n}\n\nexport default function graticule() {\n  var x1,\n      x0,\n      X1,\n      X0,\n      y1,\n      y0,\n      Y1,\n      Y0,\n      dx = 10,\n      dy = dx,\n      DX = 90,\n      DY = 360,\n      x,\n      y,\n      X,\n      Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {\n      type: \"MultiLineString\",\n      coordinates: lines()\n    };\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n      return abs(x % DX) > epsilon;\n    }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n      return abs(y % DY) > epsilon;\n    }).map(y));\n  }\n\n  graticule.lines = function () {\n    return lines().map(function (coordinates) {\n      return {\n        type: \"LineString\",\n        coordinates: coordinates\n      };\n    });\n  };\n\n  graticule.outline = function () {\n    return {\n      type: \"Polygon\",\n      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n    };\n  };\n\n  graticule.extent = function (_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function (_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function (_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function (_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function (_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function (_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function (_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\nexport function graticule10() {\n  return graticule()();\n}","export default function (x) {\n  return x;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { sqrt } from \"../math\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import projection from \"./index.js\";\nimport { abs, asin, cos, epsilon2, sin, sqrt } from \"../math.js\";\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  return [lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\n\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l), asin(sin(l) / M)];\n};\n\nexport default function () {\n  return projection(equalEarthRaw).scale(177.158);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import projection from \"./index\";\nimport { abs, epsilon } from \"../math\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { isFunction, get } from 'lodash'\nimport { format } from 'd3-format'\nimport {\n    geoPath,\n    geoAzimuthalEqualArea,\n    geoAzimuthalEquidistant,\n    geoGnomonic,\n    geoOrthographic,\n    geoStereographic,\n    geoEqualEarth,\n    geoEquirectangular,\n    geoMercator,\n    geoTransverseMercator,\n    geoNaturalEarth1,\n    geoGraticule,\n} from 'd3-geo'\nimport { guessQuantizeColorScale, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useQuantizeColorScaleLegendData } from '@nivo/legends'\n\nexport const projectionById = {\n    azimuthalEqualArea: geoAzimuthalEqualArea,\n    azimuthalEquidistant: geoAzimuthalEquidistant,\n    gnomonic: geoGnomonic,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    mercator: geoMercator,\n    transverseMercator: geoTransverseMercator,\n    naturalEarth1: geoNaturalEarth1,\n}\n\nexport const useGeoMap = ({\n    width,\n    height,\n    projectionType,\n    projectionScale,\n    projectionTranslation,\n    projectionRotation,\n    fillColor,\n    borderWidth,\n    borderColor,\n}) => {\n    const projection = useMemo(() => {\n        return projectionById[projectionType]()\n            .scale(projectionScale)\n            .translate([width * projectionTranslation[0], height * projectionTranslation[1]])\n            .rotate(projectionRotation)\n    }, [\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation[0],\n        projectionTranslation[1],\n        projectionRotation[0],\n        projectionRotation[1],\n        projectionRotation[2],\n    ])\n    const path = useMemo(() => geoPath(projection), [projection])\n    const graticule = useMemo(() => geoGraticule())\n\n    const theme = useTheme()\n    const getBorderWidth = useMemo(\n        () => (typeof borderWidth === 'function' ? borderWidth : () => borderWidth),\n        [borderWidth]\n    )\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getFillColor = useMemo(\n        () => (typeof fillColor === 'function' ? fillColor : () => fillColor),\n        [fillColor]\n    )\n\n    return {\n        projection,\n        path,\n        graticule,\n        getBorderWidth,\n        getBorderColor,\n        getFillColor,\n    }\n}\n\nexport const useChoropleth = ({\n    features,\n    data,\n    match,\n    label,\n    value,\n    valueFormat,\n    colors,\n    unknownColor,\n    domain,\n}) => {\n    const findMatchingDatum = useMemo(() => {\n        if (isFunction(match)) return match\n        return (feature, datum) => {\n            const featureKey = get(feature, match)\n            const datumKey = get(datum, match)\n\n            return featureKey && featureKey === datumKey\n        }\n    }, [match])\n    const getLabel = useMemo(() => (isFunction(label) ? label : datum => get(datum, label)), [\n        label,\n    ])\n    const getValue = useMemo(() => (isFunction(value) ? value : datum => get(datum, value)), [\n        value,\n    ])\n    const valueFormatter = useMemo(() => {\n        if (valueFormat === undefined) return d => d\n        if (isFunction(valueFormat)) return valueFormat\n        return format(valueFormat)\n    }, [valueFormat])\n\n    const colorScale = useMemo(() => guessQuantizeColorScale(colors).domain(domain), [\n        colors,\n        domain,\n    ])\n    const getFillColor = useMemo(() => {\n        return feature => {\n            if (feature.value === undefined) return unknownColor\n            return colorScale(feature.value)\n        }\n    }, [colorScale, unknownColor])\n\n    const boundFeatures = useMemo(\n        () =>\n            features.map(feature => {\n                const datum = data.find(datum => findMatchingDatum(feature, datum))\n                const datumValue = getValue(datum)\n\n                if (datum) {\n                    const featureWithData = {\n                        ...feature,\n                        data: datum,\n                        value: datumValue,\n                        formattedValue: valueFormatter(datumValue),\n                    }\n                    featureWithData.color = getFillColor(featureWithData)\n                    featureWithData.label = getLabel(featureWithData)\n\n                    return featureWithData\n                }\n\n                return feature\n            }),\n        [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]\n    )\n\n    const legendData = useQuantizeColorScaleLegendData({\n        scale: colorScale,\n        valueFormat: valueFormatter,\n    })\n\n    return {\n        colorScale,\n        getFillColor,\n        boundFeatures,\n        valueFormatter,\n        legendData,\n    }\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChoroplethTooltip = memo(({ feature }) => {\n    if (feature.data === undefined) return null\n\n    return (\n        <BasicTooltip\n            id={feature.label}\n            color={feature.color}\n            enableChip={true}\n            value={feature.formattedValue}\n        />\n    )\n})\n\nChoroplethTooltip.propTypes = {\n    feature: PropTypes.object.isRequired,\n}\n\nChoroplethTooltip.displayName = 'ChoroplethTooltip'\n\nexport default ChoroplethTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { projectionById } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst commonPropTypes = {\n    features: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.oneOf(['Feature']).isRequired,\n            properties: PropTypes.object,\n            geometry: PropTypes.object.isRequired,\n        })\n    ).isRequired,\n\n    projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n    projectionScale: PropTypes.number.isRequired,\n    projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n    projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGraticule: PropTypes.bool.isRequired,\n    graticuleLineWidth: PropTypes.number.isRequired,\n    graticuleLineColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const GeoMapPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const GeoMapCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonChoroplethPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    colors: quantizeColorScalePropType.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    unknownColor: PropTypes.string.isRequired,\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const ChoroplethPropTypes = {\n    ...GeoMapPropTypes,\n    ...commonChoroplethPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChoroplethCanvasPropTypes = {\n    ...GeoMapCanvasPropTypes,\n    ...commonChoroplethPropTypes,\n}\n\nconst commonDefaultProps = {\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: false,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#999999',\n\n    fillColor: '#dddddd',\n    borderWidth: 0,\n    borderColor: '#000000',\n\n    isInteractive: true,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseMove: () => {},\n    onClick: () => {},\n\n    layers: ['graticule', 'features'],\n    legends: [],\n}\n\nexport const GeoMapDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const GeoMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nconst commonChoroplethDefaultProps = {\n    match: 'id',\n    label: 'id',\n    value: 'value',\n    colors: 'PuBuGn',\n    unknownColor: '#999',\n    tooltip: ChoroplethTooltip,\n    layers: ['graticule', 'features', 'legends'],\n}\n\nexport const ChoroplethDefaultProps = {\n    ...GeoMapDefaultProps,\n    ...commonChoroplethDefaultProps,\n    role: 'img',\n}\n\nexport const ChoroplethCanvasDefaultProps = {\n    ...GeoMapCanvasDefaultProps,\n    ...commonChoroplethDefaultProps,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoGraticule = memo(({ path, graticule, lineWidth, lineColor }) => {\n    return <path fill=\"none\" strokeWidth={lineWidth} stroke={lineColor} d={path(graticule())} />\n})\n\nGeoGraticule.propTypes = {\n    path: PropTypes.func.isRequired,\n    graticule: PropTypes.func.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineColor: PropTypes.string.isRequired,\n}\n\nGeoGraticule.displayName = 'GeoGraticule'\n\nexport default GeoGraticule\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoMapFeature = memo(\n    ({\n        feature,\n        path,\n        fillColor,\n        borderWidth,\n        borderColor,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }) => {\n        return (\n            <path\n                key={feature.id}\n                fill={fillColor}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                strokeLinejoin=\"bevel\"\n                d={path(feature)}\n                onMouseEnter={event => onMouseEnter(feature, event)}\n                onMouseMove={event => onMouseMove(feature, event)}\n                onMouseLeave={event => onMouseLeave(feature, event)}\n                onClick={event => onClick(feature, event)}\n            />\n        )\n    }\n)\n\nGeoMapFeature.propTypes = {\n    feature: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['Feature']).isRequired,\n        properties: PropTypes.object,\n        geometry: PropTypes.object.isRequired,\n    }).isRequired,\n    path: PropTypes.func.isRequired,\n\n    fillColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nGeoMapFeature.displayName = 'GeoMapFeature'\n\nexport default GeoMapFeature\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useCallback, memo } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapPropTypes, GeoMapDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap } from './hooks'\n\nconst GeoMap = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        layers,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    } = props\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n    })\n\n    const theme = useTheme()\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {features.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n\n                return <Fragment key={i}>{layer(props)}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nGeoMap.displayName = 'GeoMap'\nGeoMap.propTypes = GeoMapPropTypes\nGeoMap.defaultProps = GeoMapDefaultProps\n\nexport default withContainer(GeoMap)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMap from './GeoMap'\n\nconst ResponsiveGeoMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMap\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapCanvasDefaultProps, GeoMapCanvasPropTypes } from './props'\nimport { useGeoMap } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst GeoMapCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        layers,\n\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n\n        fillColor,\n        borderWidth,\n        borderColor,\n\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap(\n        {\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor,\n            borderWidth,\n            borderColor,\n        }\n    )\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                features.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else {\n                layer(ctx, props)\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        features,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(\n        event => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        },\n        [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]\n    )\n    const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n        isInteractive,\n        hideTooltip,\n    ])\n    const handleClick = useCallback(\n        event => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                onClick(feature, event)\n            }\n        },\n        [isInteractive, canvasEl, features, projection, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nGeoMapCanvas.displatName = 'GeoMapCanvas'\nGeoMapCanvas.propTypes = GeoMapCanvasPropTypes\nGeoMapCanvas.defaultProps = GeoMapCanvasDefaultProps\n\nexport default withContainer(GeoMapCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMapCanvas from './GeoMapCanvas'\n\nconst ResponsiveGeoMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, Fragment, useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethPropTypes, ChoroplethDefaultProps } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst Choropleth = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        tooltip: Tooltip,\n        role,\n    }) => {\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        const theme = useTheme()\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleClick = useCallback(\n            (feature, event) => isInteractive && onClick && onClick(feature, event),\n            [isInteractive, onClick]\n        )\n        const handleMouseEnter = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseMove = useCallback(\n            (feature, event) =>\n                isInteractive &&\n                Tooltip &&\n                showTooltipFromEvent(<Tooltip feature={feature} />, event),\n            [isInteractive, showTooltipFromEvent, Tooltip]\n        )\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                {layers.map((layer, i) => {\n                    if (layer === 'graticule') {\n                        if (enableGraticule !== true) return null\n\n                        return (\n                            <GeoGraticule\n                                key=\"graticule\"\n                                path={path}\n                                graticule={graticule}\n                                lineWidth={graticuleLineWidth}\n                                lineColor={graticuleLineColor}\n                            />\n                        )\n                    }\n                    if (layer === 'features') {\n                        return (\n                            <Fragment key=\"features\">\n                                {boundFeatures.map(feature => (\n                                    <GeoMapFeature\n                                        key={feature.id}\n                                        feature={feature}\n                                        path={path}\n                                        fillColor={getFillColor(feature)}\n                                        borderWidth={getBorderWidth(feature)}\n                                        borderColor={getBorderColor(feature)}\n                                        onMouseEnter={handleMouseEnter}\n                                        onMouseMove={handleMouseMove}\n                                        onMouseLeave={handleMouseLeave}\n                                        onClick={handleClick}\n                                    />\n                                ))}\n                            </Fragment>\n                        )\n                    }\n                    if (layer === 'legends') {\n                        return legends.map((legend, i) => {\n                            return (\n                                <BoxLegendSvg\n                                    key={i}\n                                    containerWidth={width}\n                                    containerHeight={height}\n                                    data={legendData}\n                                    {...legend}\n                                />\n                            )\n                        })\n                    }\n\n                    return <Fragment key={i}>{layer({})}</Fragment>\n                })}\n            </SvgWrapper>\n        )\n    }\n)\n\nChoropleth.displayName = 'Choropleth'\nChoropleth.propTypes = ChoroplethPropTypes\nChoropleth.defaultProps = ChoroplethDefaultProps\n\nexport default withContainer(Choropleth)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Choropleth from './Choropleth'\n\nconst ResponsiveChoropleth = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Choropleth width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoropleth\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethCanvasDefaultProps, ChoroplethCanvasPropTypes } from './props'\nimport { useGeoMap, useChoropleth } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst ChoroplethCanvas = memo(\n    ({\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio,\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        colors,\n        domain,\n        unknownColor,\n        borderWidth,\n        borderColor,\n        enableGraticule,\n        graticuleLineWidth,\n        graticuleLineColor,\n        layers,\n        legends,\n        isInteractive,\n        onClick,\n        onMouseMove,\n        tooltip: Tooltip,\n    }) => {\n        const canvasEl = useRef(null)\n        const theme = useTheme()\n        const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n        const { projection, graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor: () => {},\n            borderWidth,\n            borderColor,\n        })\n        const { getFillColor, boundFeatures, legendData } = useChoropleth({\n            features,\n            data,\n            match,\n            label,\n            value,\n            valueFormat,\n            colors,\n            unknownColor,\n            domain,\n        })\n\n        useEffect(() => {\n            if (!canvasEl) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            path.context(ctx)\n\n            layers.forEach(layer => {\n                if (layer === 'graticule') {\n                    if (enableGraticule === true) {\n                        ctx.lineWidth = graticuleLineWidth\n                        ctx.strokeStyle = graticuleLineColor\n                        ctx.beginPath()\n                        path(graticule())\n                        ctx.stroke()\n                    }\n                } else if (layer === 'features') {\n                    boundFeatures.forEach(feature => {\n                        ctx.beginPath()\n                        path(feature)\n                        ctx.fillStyle = getFillColor(feature)\n                        ctx.fill()\n\n                        const borderWidth = getBorderWidth(feature)\n                        if (borderWidth > 0) {\n                            ctx.strokeStyle = getBorderColor(feature)\n                            ctx.lineWidth = borderWidth\n                            ctx.stroke()\n                        }\n                    })\n                } else if (layer === 'legends') {\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: width,\n                            containerHeight: height,\n                            theme,\n                        })\n                    })\n                } else {\n                    // layer(ctx, {})\n                }\n            })\n        }, [\n            canvasEl,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            path,\n            graticule,\n            getFillColor,\n            getBorderWidth,\n            getBorderColor,\n            boundFeatures,\n            legends,\n            layers,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n        const handleMouseMove = useCallback(\n            event => {\n                if (!isInteractive || !Tooltip) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    showTooltipFromEvent(<Tooltip feature={feature} />, event)\n                } else {\n                    hideTooltip()\n                }\n                onMouseMove && onMouseMove(feature || null, event)\n            },\n            [\n                showTooltipFromEvent,\n                hideTooltip,\n                isInteractive,\n                Tooltip,\n                canvasEl,\n                boundFeatures,\n                projection,\n            ]\n        )\n        const handleMouseLeave = useCallback(() => isInteractive && hideTooltip(), [\n            isInteractive,\n            hideTooltip,\n        ])\n        const handleClick = useCallback(\n            event => {\n                if (!isInteractive || !onClick) return\n\n                const feature = getFeatureFromMouseEvent(\n                    event,\n                    canvasEl.current,\n                    boundFeatures,\n                    projection\n                )\n                if (feature) {\n                    onClick(feature, event)\n                }\n            },\n            [isInteractive, canvasEl, boundFeatures, projection, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChoroplethCanvas.displayName = 'ChoroplethCanvas'\nChoroplethCanvas.propTypes = ChoroplethCanvasPropTypes\nChoroplethCanvas.defaultProps = ChoroplethCanvasDefaultProps\n\nexport default withContainer(ChoroplethCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChoroplethCanvas from './ChoroplethCanvas'\n\nconst ResponsiveChoroplethCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChoroplethCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoroplethCanvas\n","import React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    font-size: 13px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    padding: 10px 20px;\n    color: ${({ color }) => color};\n    border: 2px solid ${({ color }) => color};\n    box-shadow: 9px 16px 0 rgba(0, 0, 0, 0.15);\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\nconst TooltipValue = styled.span``\n\nconst CustomTooltip = ({ feature }) => {\n    return (\n        <TooltipWrapper color={feature.color}>\n            <TooltipKey>Custom tooltip</TooltipKey>\n            <span />\n            <TooltipKey>id</TooltipKey>\n            <TooltipValue>{feature.id}</TooltipValue>\n            <TooltipKey>value</TooltipKey>\n            <TooltipValue>{feature.value}</TooltipValue>\n            <TooltipKey>color</TooltipKey>\n            <TooltipValue>{feature.color}</TooltipValue>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        theme: (value, values) => {\n            if (!values['custom tooltip example']) return value\n\n            return {\n                ...values.theme,\n                tooltip: {\n                    container: {\n                        ...values.theme.tooltip.container,\n                        background: '#333',\n                    },\n                },\n            }\n        },\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n    },\n    {\n        exclude: ['custom tooltip example'],\n    }\n)\n","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}"],"names":["props","key","group","enableControlForFlavors","help","description","type","required","flavors","defaultValue","controlType","controlOptions","min","max","GeoMapDefaultProps","choices","label","value","unit","items","step","themeProperty","defsProperties","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","Adder","this","reset","prototype","constructor","s","t","add","y","_add","temp","valueOf","adder","a","b","x","bv","av","Math","PI","quarterPi","tau","abs","atan","atan2","cos","ceil","exp","floor","log","pow","sin","sign","sqrt","tan","acos","asin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","streamObjectType","Feature","object","FeatureCollection","features","i","n","length","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","spherical","cartesian","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","k","cartesianNormalizeInPlace","d","l","compose","invert","rotationIdentity","round","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","circleStream","radius","delta","direction","t0","t1","cosRadius","sinRadius","circleRadius","line","lines","push","rejoin","pop","concat","shift","result","Intersection","points","other","entry","o","e","v","p","segments","compareIntersection","startInside","interpolate","subject","clip","segment","p0","p1","pointEqual","sort","start","current","isSubject","array","sum","polygon","sinPhi","normal","angle","winding","m","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","j","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","arc","intersection","phiArc","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","polygonContains","pointLine","clean","ringSegments","filter","validSegment","_clean","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","w","uu","t2","q","polar","q1","code","r","c0","v0","v00","point2","c","clipMax","clipMin","x0","y0","x1","y1","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","ax","ay","dx","dy","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","distance","ab","map","ringRadians","pointRadians","graticuleX","graticuleY","X1","X0","Y1","Y0","X","Y","DX","DY","precision","graticule","outline","slice","reverse","extent","_","arguments","extentMajor","extentMinor","stepMajor","stepMinor","x00","y00","area","Infinity","bounds","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","PathString","_string","methods","TransformStream","fit","projection","fitBounds","clipExtent","scale","translate","h","_circle","join","cosMinDistance","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslate","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","recenter","center","apply","resample","transformRotate","clipAngle","fitExtent","fitSize","size","fitWidth","width","fitHeight","height","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorProjection","reclip","forward","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","projectionById","azimuthalEqualArea","azimuthalEquidistant","gnomonic","orthographic","stereographic","equalEarth","equirectangular","mercator","transverseMercator","naturalEarth1","useGeoMap","projectionType","projectionScale","projectionTranslation","projectionRotation","fillColor","borderWidth","borderColor","useMemo","path","projectionStream","contextStream","measure","geoPath","geoGraticule","theme","useTheme","getBorderWidth","getBorderColor","useInheritedColor","getFillColor","useChoropleth","data","match","valueFormat","colors","unknownColor","domain","findMatchingDatum","featureKey","datumKey","getLabel","datum","getValue","valueFormatter","colorScale","guessQuantizeColorScale","feature","boundFeatures","datumValue","featureWithData","formattedValue","legendData","useQuantizeColorScaleLegendData","ChoroplethTooltip","memo","id","color","enableChip","commonPropTypes","PropTypes","properties","inheritedColorPropType","enableGraticule","graticuleLineWidth","graticuleLineColor","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","layers","isRequired","GeoMapPropTypes","role","GeoMapCanvasPropTypes","pixelRatio","commonChoroplethPropTypes","quantizeColorScalePropType","commonDefaultProps","legends","GeoMapCanvasDefaultProps","window","commonChoroplethDefaultProps","ChoroplethDefaultProps","ChoroplethCanvasDefaultProps","GeoGraticule","lineWidth","lineColor","fill","strokeWidth","stroke","GeoMapFeature","strokeLinejoin","event","GeoMap","partialMargin","Tooltip","useDimensions","margin","outerWidth","outerHeight","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","useCallback","handleMouseEnter","handleMouseMove","handleMouseLeave","layer","withContainer","ResponsiveGeoMap","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","minLen","arrayLikeToArray","toString","call","name","test","unsupportedIterableToArray","TypeError","nonIterableRest","getFeatureFromMouseEvent","getRelativeCursor","el","f","geoContains","GeoMapCanvas","canvasEl","useRef","useEffect","ctx","ref","style","cursor","ResponsiveGeoMapCanvas","Choropleth","containerWidth","containerHeight","ResponsiveChoropleth","ChoroplethCanvas","legend","renderLegendToCanvas","ResponsiveChoroplethCanvas","TooltipWrapper","styled","cardBackground","TooltipKey","TooltipValue","CustomTooltip","values","container","background","compare","arrays","merged","stop","range"],"sourceRoot":""}