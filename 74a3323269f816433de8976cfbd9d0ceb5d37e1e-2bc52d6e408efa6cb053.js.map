{"version":3,"sources":["webpack:///../node_modules/lodash/_copySymbols.js","webpack:///../node_modules/lodash/_baseClone.js","webpack:///../node_modules/lodash/_initCloneArray.js","webpack:///./src/data/components/heatmap/generator.js","webpack:///../node_modules/lodash/_cloneDataView.js","webpack:///../node_modules/lodash/_cloneRegExp.js","webpack:///./src/data/components/heatmap/mapper.js","webpack:///../node_modules/lodash/_parent.js","webpack:///../node_modules/lodash/_baseAssignIn.js","webpack:///../node_modules/lodash/_getSymbolsIn.js","webpack:///../node_modules/lodash/isMap.js","webpack:///../node_modules/lodash/_copySymbolsIn.js","webpack:///../node_modules/lodash/_baseIsMap.js","webpack:///../node_modules/lodash/isSet.js","webpack:///../node_modules/lodash/_cloneSymbol.js","webpack:///../node_modules/lodash/_baseUnset.js","webpack:///../node_modules/lodash/omit.js","webpack:///../node_modules/lodash/_arrayEach.js","webpack:///./src/data/components/heatmap/props.js","webpack:///../node_modules/lodash/_customOmitClone.js","webpack:///../node_modules/lodash/_initCloneByTag.js","webpack:///./src/lib/settings.js","webpack:///../node_modules/lodash/_baseAssign.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/compute.js","webpack:///../src/props.js","webpack:///../src/components/AxisTick.js","webpack:///../src/components/Axis.js","webpack:///../src/components/Axes.js","webpack:///../src/components/GridLine.js","webpack:///../src/components/GridLines.js","webpack:///../src/components/Grid.js","webpack:///../src/utils.js","webpack:///../src/canvas.js","webpack:///../node_modules/lodash/_getAllKeysIn.js","webpack:///../node_modules/lodash/_baseIsSet.js"],"names":["copyObject","getSymbols","module","exports","source","object","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","keys","cloneableTags","baseClone","value","bitmask","customizer","key","stack","result","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","forEach","subValue","add","keysFunc","keysIn","props","hasOwnProperty","Object","prototype","array","length","constructor","call","index","input","dishes","generateLightDataSet","data","generateCountriesData","slice","size","min","max","generateHeavyDataSet","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","CustomCell","x","y","width","height","color","opacity","borderWidth","borderColor","textColor","transform","fill","fillOpacity","strokeWidth","stroke","d","Math","round","alignmentBaseline","textAnchor","style","dy","settingsMapper","cellShape","axisTop","mapAxis","axisRight","axisBottom","axisLeft","exclude","baseGet","baseSlice","path","arrayPush","getPrototype","stubArray","getSymbolsIn","getOwnPropertySymbols","baseIsMap","baseUnary","nodeUtil","nodeIsMap","isObjectLike","baseIsSet","nodeIsSet","Symbol","symbolProto","symbolValueOf","valueOf","symbol","castPath","last","parent","toKey","arrayMap","baseUnset","customOmitClone","flatRest","omit","paths","CLONE_DEEP_FLAG","iteratee","group","help","type","required","description","defaultValue","defaults","indexBy","minValue","controlType","controlOptions","disabledValue","maxValue","forceSquare","sizeVariation","step","padding","unit","enableControlForFlavors","flavors","themeProperty","choices","map","label","cellOpacity","cellBorderWidth","cellBorderColor","enableLabels","labelTextColor","enableGridX","enableGridY","axesProperties","isInteractive","hoverTarget","cellHoverOpacity","cellHoverOthersOpacity","motionProperties","groups","groupProperties","isPlainObject","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","mapping","settings","options","overrides","upperFirst","enable","mapFormat","format","enabled","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","getOwnPropertyDescriptors","defineProperties","centerScale","scale","bandwidth","offset","timeByType","millisecond","second","minute","hour","day","week","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month","year","timeTypes","timeIntervalRegexp","RegExp","isInteger","isFinite","getScaleTicks","Array","spec","matches","timeType","Number","computeCartesianTicks","axis","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","textProps","textPropsByEngine","position","line","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","ticks","getFormatter","f","timeFormat","Date","d3Format","computeGridLines","_values","lineValues","lineCount","lines","v","x1","x2","y1","y2","axisPropTypes","PropTypes","renderTick","legend","legendPosition","legendOffset","ariaHidden","bool","axisPropType","AxisTick","_value","onClick","animatedProps","theme","useTheme","gStyle","e","dominantBaseline","rotate","Axis","formatValue","useMemo","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","tick","initial","textTransform","from","enter","update","leave","aria-hidden","tickIndex","transitionProps","memo","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","GridLines","Grid","xValues","yValues","xLines","yLines","degreesToRadians","degrees","renderAxisToCanvas","ctx","renderAxesToCanvas","renderGridLinesToCanvas","baseGetAllKeys"],"mappings":"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","file":"74a3323269f816433de8976cfbd9d0ceb5d37e1e-2bc52d6e408efa6cb053.js","sourcesContent":["var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { generateCountriesData } from '@nivo/generators'\n\nconst dishes = [\n    'hot dog',\n    'burger',\n    'sandwich',\n    'kebab',\n    'fries',\n    'donut',\n    'junk',\n    'sushi',\n    'ramen',\n    'curry',\n    'udon',\n    'bagel',\n    'yakitori',\n    'takoyaki',\n    'tacos',\n    'miso soup',\n    'tortilla',\n    'tapas',\n    'chipirones',\n    'gazpacho',\n    'soba',\n    'bavette',\n    'steak',\n    'pizza',\n    'spaghetti',\n    'ravioli',\n    'salad',\n    'pad thai',\n    'bun',\n    'waffle',\n    'crepe',\n    'churros',\n    'paella',\n    'empanadas',\n    'bruschetta',\n    'onion soup',\n    'cassoulet',\n    'bouillabaisse',\n    'unagi',\n    'tempura',\n    'tonkatsu',\n    'shabu-shabu',\n    'twinkies',\n    'jerky',\n    'fajitas',\n    'jambalaya',\n    'meatloaf',\n    `mac n' cheese`,\n    'baked beans',\n    'popcorn',\n    'buffalo wings',\n    'BBQ ribs',\n    'apple pie',\n    'nachos',\n    'risotto',\n    'tiramisu',\n]\n\nexport const generateLightDataSet = () => ({\n    data: generateCountriesData(dishes.slice(0, 11), { size: 9, min: 0, max: 100 }),\n    keys: dishes.slice(0, 11),\n})\n\nexport const generateHeavyDataSet = () => ({\n    data: generateCountriesData(dishes, { size: 22, min: 0, max: 100 }),\n    keys: dishes,\n})\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { settingsMapper, mapAxis } from '../../../lib/settings'\n\nconst CustomCell = ({\n    value,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    textColor,\n}) => (\n    <g transform={`translate(${x}, ${y})`}>\n        <path\n            transform={`rotate(${value < 50 ? 180 : 0})`}\n            fill={color}\n            fillOpacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            d={`\n                M0 -${Math.round(height / 2)}\n                L${Math.round(width / 2)} ${Math.round(height / 2)}\n                L-${Math.round(width / 2)} ${Math.round(height / 2)}\n                L0 -${Math.round(height / 2)}\n            `}\n        />\n        <text\n            alignmentBaseline=\"central\"\n            textAnchor=\"middle\"\n            style={{ fill: textColor }}\n            dy={value < 50 ? -6 : 6}\n        >\n            {value}\n        </text>\n    </g>\n)\n\nexport default settingsMapper(\n    {\n        cellShape: value => {\n            if (value === `Custom(props) => (…)`) return CustomCell\n            return value\n        },\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { HeatMapDefaultProps as defaults } from '@nivo/heatmap'\nimport {\n    themeProperty,\n    axesProperties,\n    motionProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'indexBy',\n        group: 'Base',\n        help: 'Key to use to index the data.',\n        description: `\n            Key to use to index the data,\n            this key must exist in each data item.\n            You can also provide a function which will\n            receive the data item and must return\n            the desired index\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.indexBy,\n    },\n    {\n        key: 'keys',\n        group: 'Base',\n        help: 'Keys to use to determine each serie.',\n        type: 'string[]',\n        required: false,\n        defaultValue: defaults.keys,\n    },\n    {\n        key: 'minValue',\n        help: 'Minimum value.',\n        description: `\n            Minimum value.\n            If 'auto', will pick the lowest value\n            in the provided data set. Should be overriden\n            if your data set does not contain desired\n            lower bound value.\n        `,\n        required: false,\n        defaultValue: defaults.minValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 0,\n            min: -100,\n            max: 100,\n        },\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value. If 'auto', will pick the highest value\n            in the provided data set. Should be overriden\n            if your data set does not contain desired\n            higher bound value.\n        `,\n        required: false,\n        defaultValue: defaults.maxValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 100,\n            min: -100,\n            max: 100,\n        },\n    },\n    {\n        key: 'forceSquare',\n        help: 'Force square cells (width = height).',\n        required: false,\n        defaultValue: defaults.forceSquare,\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Base',\n    },\n    {\n        key: 'sizeVariation',\n        help: 'Cell size variation.',\n        description: `Size variation (0~1), if value is 0 size won't be affected. If you use for example the value 0.3, cell width/height will vary between 0.7~1 according to its corresponding value.`,\n        required: false,\n        defaultValue: defaults.sizeVariation,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.02,\n        },\n    },\n    {\n        key: 'padding',\n        help: 'Padding.',\n        required: false,\n        defaultValue: defaults.padding,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 36,\n            unit: 'px',\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveHeatMap/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1200,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveHeatMap/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1200,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'cellShape',\n        help: `Cell shape/component.`,\n        description: `\n            Cell shape, can be one of: \\`'rect'\\`, \\`'circle'\\`,\n            if a function is provided, it must return\n            a valid SVG element and will receive\n            the following props:\n            \\`\\`\\`\n            {\n                value:       number,\n                x:           number,\n                y:           number,\n                width:       number,\n                height:      number,\n                color:       string,\n                opacity:     number,\n                borderWidth: number,\n                borderColor: string,\n                textColor:   string,\n            }\n            \\`\\`\\`\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.cellShape,\n        controlType: 'choices',\n        group: 'Style',\n        controlOptions: {\n            choices: ['rect', 'circle', 'Custom(props) => (…)'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: 'nivo',\n        controlType: 'quantizeColors',\n        group: 'Style',\n    },\n    {\n        key: 'cellOpacity',\n        help: 'Cell opacity (0~1).',\n        required: false,\n        defaultValue: defaults.cellOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'cellBorderWidth',\n        help: 'Cell border width.',\n        required: false,\n        defaultValue: defaults.cellBorderWidth,\n        type: 'number',\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'cellBorderColor',\n        help: 'Method to compute cell border color.',\n        description: `\n            how to compute cell border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.cellBorderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'enableLabels',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableLabels,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'labelTextColor',\n        help: 'Method to compute label text color.',\n        description: `\n            how to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.labelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'enableGridX',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    {\n        key: 'enableGridY',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridY,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    ...axesProperties(),\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: '(cell, event) => void',\n        required: false,\n        help: 'onClick handler.',\n        description: `\n            onClick handler, will receive node data\n            as first argument & event as second one.\n            The node data has the following shape:\n            \\`\\`\\`\n            {\n                key:        string,\n                value:      number,\n                x:          number,\n                xKey:       {string|number},\n                y:          number,\n                yKey:       {string|number},\n                width:      number,\n                height:     number,\n                opacity:    number\n            }\n            \\`\\`\\`\n        `,\n    },\n    {\n        key: 'hoverTarget',\n        flavors: ['svg', 'canvas'],\n        help: 'Defines hover behavior.',\n        description: `\n            Defines hover behavior:\n\n            - **cell**: highlight the current cell\n            - **row**: highlight the current cell's row\n            - **column**: highlight the current cell's column\n            - **rowColumn**: highlight the current cell's row & column\n        `,\n        required: false,\n        defaultValue: defaults.hoverTarget,\n        type: 'string',\n        controlType: 'choices',\n        group: 'Interactivity',\n        controlOptions: {\n            choices: ['cell', 'row', 'column', 'rowColumn'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'cellHoverOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Cell opacity on hover.',\n        required: false,\n        defaultValue: defaults.cellHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'cellHoverOthersOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Cell opacity when not hovered.',\n        required: false,\n        defaultValue: defaults.cellHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping, { exclude = [] } = {}) => (settings, options = {}) => {\n    const overrides = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = type => (value, settings) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }) => (enabled === true ? format : undefined)\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\nimport { textPropsByEngine } from '@nivo/core'\n\nexport const centerScale = scale => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return d => scale(d) + offset\n}\n\nconst timeByType = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = value =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = (scale, spec) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    // continuous scales\n    if (scale.ticks) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n\n        if (typeof spec === 'string') {\n            // time interval\n            const matches = spec.match(timeIntervalRegexp)\n            if (matches) {\n                // UTC is used as it's more predictible\n                // however local time could be used too\n                // let's see how it fits users' requirements\n                const timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0]\n                if (matches[1] === undefined) {\n                    return scale.ticks(timeType)\n                }\n\n                return scale.ticks(timeType.every(Number(matches[1])))\n            }\n\n            throw new Error(`Invalid tickValues: ${spec}`)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n\nexport const computeCartesianTicks = ({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}) => {\n    const values = getScaleTicks(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = document.dir === 'rtl'\n    let translate\n    let textAlign = textProps.align.center\n    let textBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d), y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = (format, scale) => {\n    if (!format || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const f = timeFormat(format)\n        return d => f(new Date(d))\n    }\n\n    return d3Format(format)\n}\n\nexport const computeGridLines = ({ width, height, scale, axis, values: _values }) => {\n    const lineValues = Array.isArray(_values) ? _values : undefined\n    const lineCount = isInteger(_values) ? _values : undefined\n\n    const values = lineValues || getScaleTicks(scale, lineCount)\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n\n    let lines\n    if (axis === 'x') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: position(v),\n            x2: position(v),\n            y1: 0,\n            y2: height,\n        }))\n    } else if (axis === 'y') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: 0,\n            x2: width,\n            y1: position(v),\n            y2: position(v),\n        }))\n    }\n\n    return lines\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport { animated } from 'react-spring'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\n\nconst AxisTick = ({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}) => {\n    const theme = useTheme()\n\n    let value = _value\n    if (format !== undefined) {\n        value = format(value)\n    }\n\n    let gStyle = { opacity: animatedProps.opacity }\n    if (onClick) {\n        gStyle['cursor'] = 'pointer'\n    }\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            {...(onClick ? { onClick: e => onClick(e, value) } : {})}\n            style={gStyle}\n        >\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nAxisTick.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        .isRequired,\n    format: PropTypes.func,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    lineX: PropTypes.number.isRequired,\n    lineY: PropTypes.number.isRequired,\n    textX: PropTypes.number.isRequired,\n    textY: PropTypes.number.isRequired,\n    textBaseline: PropTypes.string.isRequired,\n    textAnchor: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    rotate: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    animatedProps: PropTypes.object.isRequired,\n}\nAxisTick.defaultProps = {\n    opacity: 1,\n    rotate: 0,\n}\n\nexport default memo(AxisTick)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, useTransition, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { axisPropTypes } from '../props'\nimport AxisTick from './AxisTick'\n\nconst Axis = ({\n    axis,\n    scale,\n    x,\n    y,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    format,\n    renderTick,\n    legend,\n    legendPosition,\n    legendOffset,\n    onClick,\n    ariaHidden,\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition(ticks, {\n        key: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nAxis.propTypes = {\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    scale: PropTypes.func.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    length: PropTypes.number.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    tickValues: axisPropTypes.tickValues,\n    tickSize: PropTypes.number.isRequired,\n    tickPadding: PropTypes.number.isRequired,\n    tickRotation: PropTypes.number.isRequired,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.elementType,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n    legendOffset: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    ariaHidden: PropTypes.bool,\n}\nAxis.defaultProps = {\n    x: 0,\n    y: 0,\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    renderTick: AxisTick,\n    legendPosition: 'end',\n    legendOffset: 0,\n}\n\nexport default memo(Axis)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Axis from './Axis'\nimport { axisPropType } from '../props'\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nconst Axes = ({ xScale, yScale, width, height, top, right, bottom, left }) => {\n    const axes = { top, right, bottom, left }\n\n    return positions.map(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n\n        return (\n            <Axis\n                key={position}\n                {...axis}\n                axis={isXAxis ? 'x' : 'y'}\n                x={position === 'right' ? width : 0}\n                y={position === 'bottom' ? height : 0}\n                scale={isXAxis ? xScale : yScale}\n                length={isXAxis ? width : height}\n                ticksPosition={ticksPosition}\n            />\n        )\n    })\n}\n\nAxes.propTypes = {\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    top: axisPropType,\n    right: axisPropType,\n    bottom: axisPropType,\n    left: axisPropType,\n}\n\nexport default memo(Axes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nconst GridLine = ({ animatedProps }) => {\n    const theme = useTheme()\n\n    return <animated.line {...animatedProps} {...theme.grid.line} />\n}\n\nGridLine.propTypes = {\n    x1: PropTypes.number.isRequired,\n    x2: PropTypes.number.isRequired,\n    y1: PropTypes.number.isRequired,\n    y2: PropTypes.number.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n}\nGridLine.defaultProps = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n}\n\nexport default memo(GridLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport GridLine from './GridLine'\n\nconst GridLines = ({ lines }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition(lines, {\n        key: line => line.key,\n        initial: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        from: line => ({\n            opacity: 0,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        enter: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        update: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n}\n\nGridLines.propTypes = {\n    type: PropTypes.oneOf(['x', 'y']).isRequired,\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            x1: PropTypes.number,\n            x2: PropTypes.number,\n            y1: PropTypes.number,\n            y2: PropTypes.number,\n        })\n    ).isRequired,\n}\n\nexport default memo(GridLines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport GridLines from './GridLines'\nimport { computeGridLines } from '../compute'\n\nconst Grid = ({ width, height, xScale, yScale, xValues, yValues }) => {\n    const xLines = useMemo(() => {\n        if (!xScale) return false\n\n        return computeGridLines({\n            width,\n            height,\n            scale: xScale,\n            axis: 'x',\n            values: xValues,\n        })\n    }, [xScale, xValues, width, height])\n\n    const yLines = yScale\n        ? computeGridLines({\n              width,\n              height,\n              scale: yScale,\n              axis: 'y',\n              values: yValues,\n          })\n        : false\n\n    return (\n        <>\n            {xLines && <GridLines type=\"x\" lines={xLines} />}\n            {yLines && <GridLines type=\"y\" lines={yLines} />}\n        </>\n    )\n}\n\nGrid.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    xValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    yValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n}\n\nexport default memo(Grid)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const degreesToRadians = degrees => (degrees * Math.PI) / 180\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { degreesToRadians } from './utils'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\n\nexport const renderAxisToCanvas = (\n    ctx,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontSize}px ${theme.axis.ticks.text.fontFamily}`\n\n    if (theme.axis.domain.line.strokeWidth > 0) {\n        ctx.lineWidth = theme.axis.domain.line.strokeWidth\n        ctx.lineCap = 'square'\n        ctx.strokeStyle = theme.axis.domain.line.stroke\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    ticks.forEach(tick => {\n        if (theme.axis.ticks.line.strokeWidth > 0) {\n            ctx.lineWidth = theme.axis.ticks.line.strokeWidth\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.axis.ticks.line.stroke\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format !== undefined ? format(tick.value) : tick.value\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n        ctx.fillStyle = theme.axis.ticks.text.fill\n        ctx.fillText(value, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n        ctx.fillStyle = theme.axis.legend.text.fill\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nexport const renderAxesToCanvas = (\n    ctx,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = (ctx, { width, height, scale, axis, values }) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n"],"sourceRoot":""}