{"version":3,"file":"component---src-pages-bullet-index-js-234813631441573e94b3.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/BulletMarkersItem.tsx","webpack://nivo-website/../src/BulletRectsItem.tsx","webpack://nivo-website/../src/BulletTooltip.tsx","webpack://nivo-website/../src/BulletMarkers.tsx","webpack://nivo-website/../src/BulletRects.tsx","webpack://nivo-website/../src/BulletItem.tsx","webpack://nivo-website/../src/Bullet.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveBullet.tsx","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/./src/data/components/bullet/props.ts","webpack://nivo-website/./src/pages/bullet/index.js","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","import { BulletMarkersItemProps } from './types'\nimport { animated } from '@react-spring/web'\n\nexport const BulletMarkersItem = ({\n    animatedProps: { color, transform, x, y1, y2 },\n    data,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: BulletMarkersItemProps) => {\n    return (\n        <animated.line\n            transform={transform}\n            x1={x}\n            x2={x}\n            y1={y1}\n            y2={y2}\n            fill=\"none\"\n            stroke={color}\n            strokeWidth=\"5\"\n            onMouseMove={event => onMouseMove(data, event)}\n            onMouseEnter={event => onMouseEnter(data, event)}\n            onMouseLeave={event => onMouseLeave(data, event)}\n            onClick={event => onClick(data, event)}\n        />\n    )\n}\n","import { BulletRectsItemProps } from './types'\nimport { animated, to } from '@react-spring/web'\n\nexport const BulletRectsItem = ({\n    animatedProps: { x, y, width, height, color },\n    borderColor,\n    borderWidth,\n    data,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: BulletRectsItemProps) => {\n    return (\n        <animated.rect\n            x={x}\n            y={y}\n            width={to(width, value => Math.max(value, 0))}\n            height={to(height, value => Math.max(value, 0))}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseMove={event => onMouseMove(data, event)}\n            onMouseEnter={event => onMouseEnter(data, event)}\n            onMouseLeave={event => onMouseLeave(data, event)}\n            onClick={event => onClick(data, event)}\n        />\n    )\n}\n","import { BulletTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BulletTooltip = ({ color, v0, v1 }: BulletTooltipProps) => {\n    return (\n        <BasicTooltip\n            id={\n                v1 ? (\n                    <span>\n                        <strong>{v0}</strong> to <strong>{v1}</strong>\n                    </span>\n                ) : (\n                    <strong>{v0}</strong>\n                )\n            }\n            enableChip={true}\n            color={color}\n        />\n    )\n}\n","import { useMemo } from 'react'\nimport * as React from 'react'\nimport { useTransition } from '@react-spring/web'\n// @ts-ignore\nimport { useMotionConfig } from '@nivo/core'\nimport {\n    BulletMarkersProps,\n    ComputedMarkersDatum,\n    MarkerWithPosition,\n    PositionWithColor,\n} from './types'\n\ntype MouseEventWithDatum = (\n    datum: ComputedMarkersDatum,\n    event: React.MouseEvent<SVGLineElement, MouseEvent>\n) => void\n\ntype EventHandlers = Record<'onMouseEnter' | 'onMouseLeave' | 'onClick', MouseEventWithDatum>\n\nconst getPositionGenerator = ({\n    layout,\n    reverse,\n    scale,\n    height,\n    markerSize,\n}: Pick<BulletMarkersProps, 'layout' | 'reverse' | 'scale' | 'height' | 'markerSize'>) => {\n    if (layout === 'horizontal') {\n        return (marker: ComputedMarkersDatum) => {\n            const x = scale(marker.value)\n            const y = height / 2\n            const rotation = reverse === true ? 180 : 0\n\n            return { x, y, size: markerSize, rotation }\n        }\n    }\n\n    return (marker: ComputedMarkersDatum) => {\n        const x = height / 2\n        const y = scale(marker.value)\n        const rotation = reverse === true ? 270 : 90\n\n        return { x, y, size: markerSize, rotation }\n    }\n}\n\nexport const BulletMarkers = ({\n    scale,\n    layout,\n    reverse,\n    markers,\n    height,\n    markerSize,\n    component,\n    onMouseEnter,\n    onMouseLeave,\n    onClick,\n}: BulletMarkersProps & EventHandlers) => {\n    const getPosition = useMemo(\n        () => getPositionGenerator({ layout, reverse, scale, height, markerSize }),\n        [layout, reverse, scale, height, markerSize]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<MarkerWithPosition, PositionWithColor>(\n        markers.map(marker => ({ ...marker, position: getPosition(marker) })),\n        {\n            keys: marker => `${marker.index}`,\n            enter: ({ color, position }: MarkerWithPosition) => ({\n                color,\n                transform: `rotate(${position.rotation}, ${position.x}, ${position.y})`,\n                x: position.x,\n                y1: position.y - position.size / 2,\n                y2: position.y + position.size / 2,\n            }),\n            update: ({ color, position }: MarkerWithPosition) => ({\n                color,\n                transform: `rotate(${position.rotation}, ${position.x}, ${position.y})`,\n                x: position.x,\n                y1: position.y - position.size / 2,\n                y2: position.y + position.size / 2,\n            }),\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <>\n            {transition((props, { position, ...marker }) =>\n                React.createElement(component, {\n                    key: marker.index,\n                    ...marker,\n                    ...position,\n                    animatedProps: props,\n                    data: marker,\n                    onMouseEnter,\n                    onMouseMove: onMouseEnter,\n                    onMouseLeave,\n                    onClick,\n                })\n            )}\n        </>\n    )\n}\n","import { createElement, useMemo } from 'react'\nimport { useTransition, animated, to } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { computeRects } from './compute'\nimport { BulletRectsProps, BulletRectComputedRect, BulletRectAnimatedProps } from './types'\nimport { useInheritedColor } from '@nivo/colors'\n\nexport const BulletRects = ({\n    animatedProps,\n    data,\n    layout,\n    y,\n    borderColor,\n    borderWidth,\n    component,\n    reverse,\n    scale,\n    height,\n    onMouseEnter,\n    onMouseLeave,\n    onClick,\n}: BulletRectsProps) => {\n    const rects = useMemo(\n        () =>\n            computeRects({\n                data,\n                layout,\n                reverse,\n                scale,\n                height,\n            }),\n        [data, layout, reverse, scale, height]\n    )\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getTransform = (value: number) =>\n        `translate(${layout === 'horizontal' ? 0 : value},${layout === 'horizontal' ? value : 0})`\n\n    const transform = animatedProps ? to(animatedProps.measuresY, getTransform) : getTransform(y)\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<BulletRectComputedRect, BulletRectAnimatedProps>(rects, {\n        keys: rect => `${rect.data.index}`,\n        enter: rect => ({\n            x: rect.x,\n            y: rect.y,\n            width: rect.width,\n            height: rect.height,\n            color: rect.data.color,\n        }),\n        update: rect => ({\n            x: rect.x,\n            y: rect.y,\n            width: rect.width,\n            height: rect.height,\n            color: rect.data.color,\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={transform}>\n            {transition((props, rect) =>\n                createElement(component, {\n                    key: rect.data.index,\n                    index: rect.data.index,\n                    animatedProps: props,\n                    data: rect.data,\n                    x: props.x.get(),\n                    y: props.y.get(),\n                    borderColor: getBorderColor(rect.data),\n                    borderWidth,\n                    width: to(props.width, value => Math.max(value, 0)).get(),\n                    height: to(props.height, value => Math.max(value, 0)).get(),\n                    color: props.color.get(),\n                    onMouseEnter,\n                    onMouseMove: onMouseEnter,\n                    onMouseLeave,\n                    onClick,\n                })\n            )}\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { Axis } from '@nivo/axes'\n// @ts-ignore\nimport { getColorScale, useMotionConfig, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { stackValues } from './compute'\nimport { BulletMarkers } from './BulletMarkers'\nimport { BulletRects } from './BulletRects'\nimport { BulletItemProps } from './types'\n\nexport const BulletItem = ({\n    id,\n\n    scale,\n    layout,\n    reverse,\n    axisPosition,\n    x,\n    y,\n    width,\n    height,\n\n    title = id,\n    titlePosition,\n    titleAlign,\n    titleOffsetX,\n    titleOffsetY,\n    titleRotation,\n    tooltip,\n\n    rangeBorderColor,\n    rangeBorderWidth,\n    rangeComponent,\n    rangeColors,\n    ranges,\n\n    measureBorderColor,\n    measureBorderWidth,\n    measureComponent,\n    measureHeight,\n    measureColors,\n    measures,\n\n    markerComponent,\n    markerColors,\n    markerHeight,\n    markers = [],\n\n    onRangeClick,\n    onMeasureClick,\n    onMarkerClick,\n}: BulletItemProps) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const computedRanges = useMemo(() => {\n        const rangeColorScale = getColorScale(rangeColors, scale, true)\n\n        return stackValues(ranges, scale, rangeColorScale, 'range')\n    }, [rangeColors, ranges, scale])\n\n    const computedMeasures = useMemo(() => {\n        const measureColorScale = getColorScale(measureColors, scale)\n\n        return stackValues(measures, scale, measureColorScale, 'measures')\n    }, [measureColors, measures, scale])\n\n    const computedMarkers = useMemo(() => {\n        const markerColorScale = getColorScale(markerColors, scale)\n\n        return markers.map((marker: number, index: number) => ({\n            value: marker,\n            index,\n            color: markerColorScale(\n                markerColorScale.type === 'sequential' ? marker : index\n            ) as string,\n        }))\n    }, [markerColors, markers, scale])\n\n    const TooltipComponent = tooltip\n\n    const rangeNodes = (\n        <BulletRects\n            data={computedRanges}\n            scale={scale}\n            layout={layout}\n            reverse={reverse}\n            x={0}\n            y={0}\n            width={width}\n            height={height}\n            component={rangeComponent}\n            borderColor={rangeBorderColor}\n            borderWidth={rangeBorderWidth}\n            onMouseEnter={(range, event) => {\n                showTooltipFromEvent(\n                    <TooltipComponent color={range.color} v0={range.v0} v1={range.v1} />,\n                    event\n                )\n            }}\n            onMouseLeave={hideTooltip}\n            onClick={(range, event) => {\n                onRangeClick?.({ id, ...range }, event)\n            }}\n        />\n    )\n\n    const markerNodes = (\n        <BulletMarkers\n            markers={computedMarkers}\n            scale={scale}\n            layout={layout}\n            reverse={reverse}\n            height={height}\n            markerSize={markerHeight}\n            component={markerComponent}\n            onMouseEnter={(marker, event) => {\n                showTooltipFromEvent(\n                    <TooltipComponent color={marker.color} v0={marker.value} />,\n                    event\n                )\n            }}\n            onMouseLeave={hideTooltip}\n            onClick={(marker, event) => {\n                onMarkerClick?.({ id, ...marker }, event)\n            }}\n        />\n    )\n\n    const axisX = layout === 'vertical' && axisPosition === 'after' ? height : 0\n    const axisY = layout === 'horizontal' && axisPosition === 'after' ? height : 0\n\n    const axis = (\n        <g transform={`translate(${axisX},${axisY})`}>\n            <Axis\n                axis={layout === 'horizontal' ? 'x' : 'y'}\n                length={layout === 'horizontal' ? width : height}\n                scale={scale}\n                ticksPosition={axisPosition}\n            />\n        </g>\n    )\n\n    const titleX =\n        layout === 'horizontal'\n            ? titlePosition === 'before'\n                ? titleOffsetX\n                : width + titleOffsetX\n            : height / 2 + titleOffsetX\n    const titleY =\n        layout === 'horizontal'\n            ? height / 2 + titleOffsetY\n            : titlePosition === 'before'\n            ? titleOffsetY\n            : width + titleOffsetY\n\n    const titleNode = (\n        <g transform={`translate(${titleX},${titleY}) rotate(${titleRotation})`}>\n            {typeof title === 'string' ? (\n                <text\n                    style={{\n                        ...theme?.labels?.text,\n                        dominantBaseline: 'central',\n                        textAnchor: titleAlign,\n                    }}\n                >\n                    {title}\n                </text>\n            ) : (\n                title\n            )}\n        </g>\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        measuresY: (height - measureHeight) / 2,\n        transform: `translate(${x},${y})`,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            {rangeNodes}\n            <BulletRects\n                animatedProps={animatedProps}\n                data={computedMeasures}\n                scale={scale}\n                layout={layout}\n                reverse={reverse}\n                x={0}\n                y={0}\n                width={width}\n                height={measureHeight}\n                component={measureComponent}\n                borderColor={measureBorderColor}\n                borderWidth={measureBorderWidth}\n                onMouseEnter={(measure, event) => {\n                    showTooltipFromEvent(\n                        <TooltipComponent color={measure.color} v0={measure.v1} />,\n                        event\n                    )\n                }}\n                onMouseLeave={hideTooltip}\n                onClick={(measure, event) => {\n                    onMeasureClick?.({ id, ...measure }, event)\n                }}\n            />\n            {axis}\n            {markerNodes}\n            {titleNode}\n        </animated.g>\n    )\n}\n","import { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { defaultProps } from './props'\nimport { BulletSvgProps } from './types'\nimport { BulletItem } from './BulletItem'\nimport { useEnhancedData } from './hooks'\n\nexport const Bullet = (props: BulletSvgProps) => {\n    const {\n        data,\n\n        layout,\n        spacing,\n        measureSize,\n        markerSize,\n        reverse,\n        axisPosition,\n\n        minValue,\n        maxValue,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        titlePosition,\n        titleAlign,\n        titleOffsetX,\n        titleOffsetY,\n        titleRotation,\n\n        rangeBorderColor,\n        rangeBorderWidth,\n        rangeComponent,\n        rangeColors,\n\n        measureBorderColor,\n        measureBorderWidth,\n        measureComponent,\n        measureColors,\n\n        markerComponent,\n        markerColors,\n\n        theme,\n        tooltip = defaultProps.tooltip,\n\n        animate,\n        motionConfig,\n\n        isInteractive,\n        onRangeClick,\n        onMeasureClick,\n        onMarkerClick,\n\n        role,\n    } = { ...defaultProps, ...props }\n\n    const { margin, innerWidth, innerHeight } = useDimensions(width, height, partialMargin)\n\n    const itemHeight =\n        layout === 'horizontal'\n            ? (innerHeight - spacing * (data.length - 1)) / data.length\n            : (innerWidth - spacing * (data.length - 1)) / data.length\n\n    const measureHeight = itemHeight * measureSize\n    const markerHeight = itemHeight * markerSize\n\n    const enhancedData = useEnhancedData(data, {\n        height: innerHeight,\n        layout,\n        maxValue: maxValue === 'auto' ? undefined : maxValue,\n        minValue: minValue === 'auto' ? undefined : minValue,\n        reverse,\n        width: innerWidth,\n    })\n\n    return (\n        <Container\n            isInteractive={isInteractive}\n            theme={theme}\n            animate={animate}\n            motionConfig={motionConfig}\n        >\n            <SvgWrapper width={width} height={height} margin={margin} role={role}>\n                {enhancedData.map((d, i) => (\n                    <BulletItem\n                        key={d.id}\n                        {...d}\n                        layout={layout}\n                        reverse={reverse}\n                        x={layout === 'vertical' ? itemHeight * i + spacing * i : 0}\n                        y={layout === 'horizontal' ? itemHeight * i + spacing * i : 0}\n                        width={innerWidth}\n                        height={itemHeight}\n                        titlePosition={titlePosition}\n                        titleAlign={titleAlign}\n                        titleOffsetX={titleOffsetX}\n                        titleOffsetY={titleOffsetY}\n                        titleRotation={titleRotation}\n                        measureHeight={measureHeight}\n                        markerHeight={markerHeight}\n                        rangeBorderColor={rangeBorderColor}\n                        rangeBorderWidth={rangeBorderWidth}\n                        rangeComponent={rangeComponent}\n                        rangeColors={rangeColors}\n                        measureBorderColor={measureBorderColor}\n                        measureBorderWidth={measureBorderWidth}\n                        measureComponent={measureComponent}\n                        measureColors={measureColors}\n                        markerComponent={markerComponent}\n                        markerColors={markerColors}\n                        axisPosition={axisPosition}\n                        onRangeClick={onRangeClick}\n                        onMeasureClick={onMeasureClick}\n                        onMarkerClick={onMarkerClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </SvgWrapper>\n        </Container>\n    )\n}\n","import { createLinearScale } from '@nivo/scales'\nimport { useMemo } from 'react'\nimport { Datum, CommonBulletProps } from './types'\n\nexport const useEnhancedData = (\n    data: Datum[],\n    {\n        layout,\n        maxValue,\n        minValue,\n        reverse,\n        height,\n        width,\n    }: Pick<CommonBulletProps, 'layout' | 'reverse' | 'height' | 'width'> &\n        Record<'maxValue' | 'minValue', number | undefined>\n) => {\n    return useMemo(\n        () =>\n            data.map(d => {\n                const all = [...d.ranges, ...d.measures, ...(d.markers ?? [])]\n                const max = maxValue ?? Math.max(...all)\n                const min = minValue ?? Math.min(...all)\n\n                const scale = createLinearScale(\n                    { clamp: true, min, max, type: 'linear' },\n                    { all, max, min },\n                    layout === 'horizontal' ? width : height,\n                    layout === 'horizontal' ? (reverse ? 'y' : 'x') : reverse ? 'x' : 'y'\n                )\n\n                return {\n                    ...d,\n                    scale,\n                }\n            }),\n        [data, height, layout, maxValue, minValue, reverse, width]\n    )\n}\n","import { ResponsiveWrapper, Dimensions } from '@nivo/core'\nimport { BulletSvgProps } from './types'\nimport { Bullet } from './Bullet'\n\nexport const ResponsiveBullet = (props: Omit<BulletSvgProps, 'height' | 'width'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: Dimensions) => <Bullet width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    distance: number\n    source: string\n    target: string\n}\n\ntype ExtraNode = {\n    color: string\n    depth: number\n    id: string\n    radius: number\n}\n\nexport const generateNetworkData = ({\n    rootNodeRadius = 12,\n    minMidNodes = 6,\n    maxMidNodes = 16,\n    midNodeRadius = 8,\n    minLeaves = 4,\n    maxLeaves = 16,\n    leafRadius = 4,\n} = {}) => {\n    const rootNode = {\n        id: '0',\n        radius: rootNodeRadius,\n        depth: 0,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `${k + 1}`,\n        radius: midNodeRadius,\n        depth: 1,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: '0',\n            target: source.id,\n            distance: 50,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 70,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                radius: leafRadius,\n                depth: 2,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 30,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit?: number | null, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: Record<string, unknown> = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","import { defaultProps } from '@nivo/bullet'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:        {string|number}\n                title?:    {ReactNode}\n                subtitle?: {ReactNode}\n                data: Array<{\n                    ranges:   number[]\n                    measures: number[]\n                    markers?: number[]\n                }>\n            }>\n            \\`\\`\\`\n\n            If \\`title\\` is \\`undefined\\`, \\`id\\` will be used for\n            \\`title\\`.\n        `,\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'minValue',\n        help: 'Minimum value.',\n        description: `\n            Minimum value, if 'auto',\n            will use min value from\n            the provided data.\n        `,\n        required: false,\n        defaultValue: defaultProps.minValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 0,\n            min: 0,\n            max: 10,\n        },\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value, if 'auto',\n            will use max value from\n            the provided data.\n        `,\n        required: false,\n        defaultValue: defaultProps.maxValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 100,\n            min: 50,\n            max: 100,\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        group: 'Base',\n        help: 'Chart width.',\n        description: 'not required if using `ResponsiveBullet`.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        group: 'Base',\n        help: 'Chart height.',\n        description: 'not required if using `ResponsiveBullet`.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'layout',\n        group: 'Base',\n        help: `How to display items.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.layout,\n        controlType: 'radio',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'reverse',\n        group: 'Base',\n        help: 'Reverse chart.',\n        description: `\n            Reverse chart, starts on top instead of bottom\n            for vertical layout and right instead of left\n            for horizontal one.\n        `,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.reverse,\n        controlType: 'switch',\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'spacing',\n        help: 'define spacing between items.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.spacing,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 100,\n        },\n    },\n    {\n        key: 'measureSize',\n        help: 'define size of measure related to item size, expressed as a ratio.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.measureSize,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'markerSize',\n        help: 'define size of markers related to item size, expressed as a ratio.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.markerSize,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 2,\n            step: 0.05,\n        },\n    },\n    themeProperty(['svg']),\n    {\n        key: 'rangeBorderColor',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Method to compute range border color.',\n        description: `\n            how to compute range border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        controlType: 'inheritedColor',\n        required: false,\n        defaultValue: defaultProps.rangeBorderColor,\n    },\n    {\n        key: 'rangeBorderWidth',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Width of range border.',\n        type: 'number',\n        controlType: 'lineWidth',\n        required: false,\n        defaultValue: defaultProps.rangeBorderWidth,\n    },\n    {\n        key: 'rangeComponent',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Custom component for ranges.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'rangeColors',\n        help: 'Ranges colors',\n        description: `\n            Defines colors for ranges,\n            you can either use categorical colors:\n            \\`greens\\` or sequential form: \\`seq:green\\`.\n        `,\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaultProps.rangeColors,\n        controlType: 'colors',\n        group: 'Style',\n        controlOptions: {\n            includeSequential: true,\n        },\n    },\n    {\n        key: 'measureBorderColor',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Method to compute measure border color.',\n        description: `\n            how to compute measure border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        controlType: 'inheritedColor',\n        required: false,\n        defaultValue: defaultProps.measureBorderColor,\n    },\n    {\n        key: 'measureBorderWidth',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Width of measure border.',\n        type: 'number',\n        controlType: 'lineWidth',\n        required: false,\n        defaultValue: defaultProps.measureBorderWidth,\n    },\n    {\n        key: 'measureComponent',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Custom component for measures.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'measureColors',\n        help: 'Measures colors.',\n        description: `\n            Defines colors for measures,\n            you can either use categorical colors:\n            \\`greens\\` or sequential form: \\`seq:green\\`.\n        `,\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaultProps.measureColors,\n        controlType: 'colors',\n        group: 'Style',\n        controlOptions: {\n            includeSequential: true,\n        },\n    },\n    {\n        key: 'markerComponent',\n        flavors: ['svg'],\n        group: 'Style',\n        help: 'Custom component for markers.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'markerColors',\n        help: 'Markers colors.',\n        description: `\n            Defines colors for markers,\n            you can either use categorical colors:\n            \\`greens\\` or sequential form: \\`seq:green\\`.\n        `,\n        type: 'string | Function| string[]',\n        required: false,\n        defaultValue: defaultProps.markerColors,\n        controlType: 'colors',\n        group: 'Style',\n        controlOptions: {\n            includeSequential: true,\n        },\n    },\n    {\n        key: 'axisPosition',\n        help: `Where to put axis.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.axisPosition,\n        controlType: 'radio',\n        group: 'Axes',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'titlePosition',\n        help: `Where to put title.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.titlePosition,\n        controlType: 'radio',\n        group: 'Title',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'titleAlign',\n        help: `title alignment.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.titleAlign,\n        controlType: 'choices',\n        group: 'Title',\n        controlOptions: {\n            choices: [\n                { label: 'start', value: 'start' },\n                { label: 'middle', value: 'middle' },\n                { label: 'end', value: 'end' },\n            ],\n        },\n    },\n    {\n        key: 'titleOffsetX',\n        help: 'title x offset from bullet edge.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.titleOffset,\n        controlType: 'range',\n        group: 'Title',\n        controlOptions: {\n            min: -100,\n            max: 100,\n            unit: 'px',\n        },\n    },\n    {\n        key: 'titleOffsetY',\n        help: 'title y offset from bullet edge.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.titleOffset,\n        controlType: 'range',\n        group: 'Title',\n        controlOptions: {\n            min: -100,\n            max: 100,\n            unit: 'px',\n        },\n    },\n    {\n        key: 'titleRotation',\n        help: 'title rotation.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.titleRotation,\n        controlType: 'angle',\n        group: 'Title',\n        controlOptions: {\n            start: 90,\n            min: -360,\n            max: 360,\n            step: 5,\n        },\n    },\n    {\n        key: 'onRangeClick',\n        flavors: ['svg'],\n        type: '(range, event) => void',\n        group: 'Interactivity',\n        required: false,\n        help: 'onClick handler for ranges.',\n        description: `\n            onClick handler for ranges, will receive range\n            data as first argument & event as second one.\n\n            The data has the following shape:\n            \\`\\`\\`\n            {\n                id:    string,\n                v0:    number,\n                v1:    number,\n                index: number,\n                color: string,\n            }\n            \\`\\`\\`\n\n            \\`v1\\` is the value of the range while\n            \\`v0\\` is the value of previous range.\n        `,\n    },\n    {\n        key: 'onMeasureClick',\n        flavors: ['svg'],\n        type: '(measure, event) => void',\n        group: 'Interactivity',\n        required: false,\n        help: 'onClick handler for measures.',\n        description: `\n            onClick handler for measures, will receive measure\n            data as first argument & event as second one.\n\n            The data has the following shape:\n            \\`\\`\\`\n            {\n                id:    string,\n                v0:    number,\n                v1:    number,\n                index: number,\n                color: string,\n            }\n            \\`\\`\\`\n\n            \\`v1\\` is the value of the measure while\n            \\`v0\\` is the value of previous measure.\n        `,\n    },\n    {\n        key: 'onMarkerClick',\n        flavors: ['svg'],\n        type: '(marker, event) => void',\n        group: 'Interactivity',\n        required: false,\n        help: 'onClick handler for markers.',\n        description: `\n            onClick handler for markers, will receive marker\n            data as first argument & event as second one.\n\n            The data has the following shape:\n            \\`\\`\\`\n            {\n                id:    string,\n                value: number,\n                index: number,\n                color: string,\n            }\n            \\`\\`\\`\n        `,\n    },\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import React from 'react'\nimport shuffle from 'lodash/shuffle'\nimport { ResponsiveBullet, defaultProps } from '@nivo/bullet'\nimport { generateBulletData } from '@nivo/generators'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/bullet/meta.yml'\nimport { groups } from '../../data/components/bullet/props'\n\nconst generateData = () => [\n    generateBulletData('temp.', shuffle([100, 120, 140])[0]),\n    generateBulletData('power', 2, { float: true, measureCount: 2 }),\n    generateBulletData('volume', shuffle([40, 60, 80])[0], { rangeCount: 8 }),\n    generateBulletData('cost', 500000, { measureCount: 2 }),\n    generateBulletData('revenue', shuffle([9, 11, 13])[0], { markerCount: 2 }),\n]\n\nconst initialProperties = {\n    minValue: defaultProps.minValue,\n    maxValue: defaultProps.maxValue,\n    margin: {\n        top: 50,\n        right: 90,\n        bottom: 50,\n        left: 90,\n    },\n    layout: defaultProps.layout,\n    reverse: defaultProps.reverse,\n    spacing: 46,\n    titlePosition: defaultProps.titlePosition,\n    titleAlign: 'start',\n    titleOffsetX: -70,\n    titleOffsetY: defaultProps.titleOffsetY,\n    titleRotation: defaultProps.titleRotation,\n    rangeBorderColor: defaultProps.rangeBorderColor,\n    rangeBorderWidth: defaultProps.rangeBorderWidth,\n    measureBorderColor: defaultProps.measureBorderColor,\n    measureBorderWidth: defaultProps.measureBorderWidth,\n    measureSize: 0.2,\n    markerSize: 0.6,\n    axisPosition: defaultProps.axisPosition,\n    rangeColors: defaultProps.rangeColors,\n    measureColors: defaultProps.measureColors,\n    markerColors: defaultProps.markerColors,\n    animate: defaultProps.animate,\n    motionConfig: defaultProps.motionConfig,\n}\n\nconst Bullet = () => {\n    return (\n        <ComponentTemplate\n            name=\"Bullet\"\n            meta={meta.Bullet}\n            icon=\"bullet\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={defaultProps}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveBullet\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onRangeClick={range => {\n                            logAction({\n                                type: 'click',\n                                label: `[range] ${range.id}: [${range.v0}, ${range.v1}]`,\n                                color: range.color,\n                                data: range,\n                            })\n                        }}\n                        onMeasureClick={measure => {\n                            logAction({\n                                type: 'click',\n                                label: `[measure] ${measure.id}: [${measure.v0}, ${measure.v1}]`,\n                                color: measure.color,\n                                data: measure,\n                            })\n                        }}\n                        onMarkerClick={marker => {\n                            logAction({\n                                type: 'click',\n                                label: `[marker] ${marker.id}: ${marker.value}`,\n                                color: marker.color,\n                                data: marker,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Bullet\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["day","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","days","range","computeCartesianTicks","translate","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","dir","textAlign","align","center","textBaseline","baseline","x","d","y","top","bottom","left","right","ticks","map","key","value","getFormatter","format","type","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","Array","isArray","lines","x1","x2","y1","y2","memoizedAxisTick","memo","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","React","animated","g","transform","dominantBaseline","textTransform","memoizedAxis","length","renderTick","AxisTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","keys","t","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","rotate","domain","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","isXAxis","Axis","GridLine","grid","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","ctx","_format","save","font","fontWeight","fontSize","fontFamily","strokeWidth","lineWidth","Number","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","forEach","degreesToRadians","fill","fillStyle","fillText","String","restore","renderAxesToCanvas","renderGridLinesToCanvas","BulletRectsItem","color","borderColor","borderWidth","data","onMouseEnter","onMouseMove","onMouseLeave","rect","to","Math","max","e","defaultProps","layout","reverse","spacing","minValue","maxValue","axisPosition","titlePosition","titleAlign","titleRotation","titleOffsetX","titleOffsetY","rangeComponent","rangeColors","measureComponent","measureColors","markers","markerComponent","markerColors","rangeBorderWidth","rangeBorderColor","measureSize","measureBorderWidth","measureBorderColor","markerSize","isInteractive","tooltip","v0","v1","BasicTooltip","id","enableChip","motionDefaultProps","motionConfig","margin","defaultMargin","role","stackValues","colorScale","useAverage","min","includes","filter","v","sort","a","b","reduce","acc","index","last","slice","sequentialValue","BulletMarkers","component","getPosition","marker","size","rotation","BulletRects","rects","computeRect","h","getBorderColor","useInheritedColor","getTransform","measuresY","createElement","get","BulletItem","title","ranges","measureHeight","measures","markerHeight","onRangeClick","onMeasureClick","onMarkerClick","useTooltip","showTooltipFromEvent","hideTooltip","computedRanges","rangeColorScale","getColorScale","computedMeasures","measureColorScale","computedMarkers","markerColorScale","TooltipComponent","rangeNodes","markerNodes","axisX","axisY","titleX","titleY","titleNode","labels","measure","Bullet","partialMargin","useDimensions","innerWidth","innerHeight","itemHeight","enhancedData","all","createLinearScale","clamp","Container","SvgWrapper","i","ResponsiveBullet","ResponsiveWrapper","randColor","round","random","countryCodes","names","programmingLanguages","generateBulletData","subtitle","rangeCount","measureCount","markerCount","float","remaining","generateChordData","maxSize","selectedKeys","matrix","generateNetworkData","rootNodeRadius","minMidNodes","maxMidNodes","midNodeRadius","minLeaves","maxLeaves","leafRadius","rootNode","radius","depth","nodes","_","k","links","extraNodes","push","source","target","distance","concat","generateParallelCoordinatesData","shuffle","availableNodes","n","name","getNodeTargets","currentPath","targets","Error","join","targetId","getNodesTargets","targetsById","link","generateSankeyData","nodeCount","maxIterations","Object","assign","node","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","groups","categoryCount","group","groupIndex","price","datum","volume","categories","randomizeSwarmPlotData","previousData","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","label","language","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","types","country","find","generateSeries","ids","xKeys","generateDayCounts","timeDays","dayFormat","generateOrderedDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","help","description","required","defaultValue","controlType","controlOptions","disabledValue","enableControlForFlavors","unit","choices","themeProperty","flavors","includeSequential","motionProperties","groupProperties","generateData","initialProperties","ComponentTemplate","meta","icon","currentFlavor","properties","defaultProperties","logAction","copyArray","shuffleSelf","module","exports","array","nativeFloor","floor","nativeRandom","lower","upper","collection","arrayMap","object","baseRandom","lastIndex","undefined","rand","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","baseValues"],"sourceRoot":""}