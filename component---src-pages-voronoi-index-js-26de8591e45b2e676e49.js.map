{"version":3,"file":"component---src-pages-voronoi-index-js-26de8591e45b2e676e49.js","mappings":"uPAKMA,EAAuB,CAAC,OAExBC,EAAsB,CACxB,CACIC,IAAK,OACLC,MAAO,OACPC,QAASJ,EACTK,KAAM,cACNC,YAAY,mPAUZC,KAAM,WACNC,UAAU,GAEd,CACIN,IAAK,UACLC,MAAO,OACPC,QAASJ,EACTK,KAAM,+BACNE,KAAM,mBACNC,UAAU,EACVC,aAAcC,EAAAA,GAAAA,SAElB,CACIR,IAAK,UACLC,MAAO,OACPC,QAASJ,EACTK,KAAM,+BACNE,KAAM,mBACNC,UAAU,EACVC,aAAcC,EAAAA,GAAAA,UAnCM,QAqCrBC,EAAAA,EAAAA,IAAgBX,GArCK,CAsCxB,CACIE,IAAK,SACLE,QAASJ,EACTG,MAAO,gBACPI,KAAM,qBACNF,KAAM,+BACNC,YAAY,qWASZE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,QAElB,CACIR,IAAK,cACLG,KAAM,wBACND,QAASJ,EACTO,KAAM,UACNC,UAAU,EACVC,aAAcC,EAAAA,GAAAA,YACdE,QAAS,CAAEL,KAAM,UACjBJ,MAAO,SAEX,CACID,IAAK,gBACLG,KAAM,oBACND,QAASJ,EACTO,KAAM,SACNC,UAAU,EACVC,aAAcC,EAAAA,GAAAA,cACdE,QAAS,CAAEL,KAAM,aACjBJ,MAAO,SAEX,CACID,IAAK,gBACLG,KAAM,eACND,QAASJ,EACTO,KAAM,SACNC,UAAU,EACVC,aAAcC,EAAAA,GAAAA,cACdE,QAAS,CAAEL,KAAM,eACjBJ,MAAO,SAEX,CACID,IAAK,cACLG,KAAM,wBACND,QAASJ,EACTO,KAAM,UACNC,UAAU,EACVC,aAAcC,EAAAA,GAAAA,YACdE,QAAS,CAAEL,KAAM,UACjBJ,MAAO,SAEX,CACID,IAAK,gBACLG,KAAM,0BACND,QAASJ,EACTO,KAAM,SACNC,UAAU,EACVC,aAAcC,EAAAA,GAAAA,cACdE,QAAS,CAAEL,KAAM,aACjBJ,MAAO,SAEX,CACID,IAAK,gBACLG,KAAM,0BACND,QAASJ,EACTO,KAAM,SACNC,UAAU,EACVC,aAAcC,EAAAA,GAAAA,cACdE,QAAS,CAAEL,KAAM,eACjBJ,MAAO,SAEX,CACID,IAAK,eACLG,KAAM,yBACND,QAASJ,EACTO,KAAM,UACNC,UAAU,EACVC,aAAcC,EAAAA,GAAAA,aACdE,QAAS,CAAEL,KAAM,UACjBJ,MAAO,UAEX,CACID,IAAK,YACLG,KAAM,kBACND,QAASJ,EACTO,KAAM,SACNC,UAAU,EACVC,aAAcC,EAAAA,GAAAA,UACdP,MAAO,SACPS,QAAS,CACLL,KAAM,QACNM,KAAM,KACNC,IAAK,EACLC,IAAK,GACLC,KAAM,IAGd,CACId,IAAK,aACLG,KAAM,gBACND,QAASJ,EACTO,KAAM,SACNC,UAAU,EACVC,aAAcC,EAAAA,GAAAA,WACdE,QAAS,CAAEL,KAAM,eACjBJ,MAAO,YAIFc,GAASC,EAAAA,EAAAA,IAAgBjB,G,sOCzJtC,IAAMkB,EAAU,CAAC,EAAG,KACdC,EAAU,CAAC,EAAG,KAEdC,EAAe,kBACjBC,GAAAA,CAAM,KAAKC,KAAI,SAAAC,GAAE,MAAK,CAAEA,GAAAA,EAAIC,EAAGC,KAAKC,SAAWR,EAAQ,GAAIS,EAAGF,KAAKC,SAAWP,EAAQ,QAEpFS,EAAiB,KAChBnB,EAAAA,GADgB,CAGnBS,QAAAA,EACAC,QAAAA,EAEAU,OAAQ,CACJC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAGVC,aAAa,EACbC,cAAe,EACfC,cAAe,UAEfC,aAAa,EACbC,cAAe,EACfC,cAAe,UAEfC,cAAc,EACdC,UAAW,EACXC,WAAY,YA8ChB,EA3CgB,WACZ,IAE4CC,GAExCC,EAAAA,EAAAA,gBAAe,cAHfD,MACIE,gBAAmBC,gBAY3B,OACI,SAACC,EAAA,EAAD,CACIC,KAAK,UACLC,KAAMA,EAAAA,EACNC,KAAK,UACL/C,QAAS8C,EAAAA,EACTE,cAAc,MACdC,WAAYpC,EACZY,kBAAmBA,EACnByB,kBAAmB5C,EAAAA,GACnBW,aAAcA,EACduB,MAAOA,EAVX,SAYK,SAACS,EAAYE,EAAMC,GAChB,OACI,SAAC,KAAD,GACID,KAAMA,EACNpC,QAASA,EACTC,QAASA,GACLiC,EAJR,CAKIG,MAAOA","sources":["webpack://nivo-website/./src/data/components/voronoi/props.ts","webpack://nivo-website/./src/pages/voronoi/index.js"],"sourcesContent":["import { defaultVoronoiProps } from '@nivo/voronoi'\nimport { groupProperties } from '../../../lib/componentProperties'\nimport { chartDimensions } from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array.<{\n                id: string | number,\n                x:  number,\n                y:  number\n            }>\n            \\`\\`\\`\n        `,\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'xDomain',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Defines the x values domain.',\n        type: '[number, number]',\n        required: false,\n        defaultValue: defaultVoronoiProps.xDomain,\n    },\n    {\n        key: 'yDomain',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Defines the y values domain.',\n        type: '[number, number]',\n        required: false,\n        defaultValue: defaultVoronoiProps.yDomain,\n    },\n    ...chartDimensions(allFlavors),\n    {\n        key: 'layers',\n        flavors: allFlavors,\n        group: 'Customization',\n        type: 'string | Component',\n        help: 'Defines the order of layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`links\\`, \\`cells\\`, \\`points\\`, \\`bounds\\`.\n\n            You can also use this to insert extra layers\n            to the chart, this extra layer must be\n            a function which will receive the chart computed\n            data and must return a valid SVG element.\n        `,\n        required: false,\n        defaultValue: defaultVoronoiProps.layers,\n    },\n    {\n        key: 'enableLinks',\n        help: 'Enable/disable links.',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultVoronoiProps.enableLinks,\n        control: { type: 'switch' },\n        group: 'Links',\n    },\n    {\n        key: 'linkLineWidth',\n        help: 'Links line width.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaultVoronoiProps.linkLineWidth,\n        control: { type: 'lineWidth' },\n        group: 'Links',\n    },\n    {\n        key: 'linkLineColor',\n        help: 'Links color.',\n        flavors: allFlavors,\n        type: 'string',\n        required: false,\n        defaultValue: defaultVoronoiProps.linkLineColor,\n        control: { type: 'colorPicker' },\n        group: 'Links',\n    },\n    {\n        key: 'enableCells',\n        help: 'Enable/disable cells.',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultVoronoiProps.enableCells,\n        control: { type: 'switch' },\n        group: 'Cells',\n    },\n    {\n        key: 'cellLineWidth',\n        help: 'Border width for cells.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaultVoronoiProps.cellLineWidth,\n        control: { type: 'lineWidth' },\n        group: 'Cells',\n    },\n    {\n        key: 'cellLineColor',\n        help: 'Border color for cells.',\n        flavors: allFlavors,\n        type: 'string',\n        required: false,\n        defaultValue: defaultVoronoiProps.cellLineColor,\n        control: { type: 'colorPicker' },\n        group: 'Cells',\n    },\n    {\n        key: 'enablePoints',\n        help: 'Enable/disable points.',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultVoronoiProps.enablePoints,\n        control: { type: 'switch' },\n        group: 'Points',\n    },\n    {\n        key: 'pointSize',\n        help: 'Size of points.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaultVoronoiProps.pointSize,\n        group: 'Points',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 12,\n            step: 1,\n        },\n    },\n    {\n        key: 'pointColor',\n        help: 'Points color.',\n        flavors: allFlavors,\n        type: 'string',\n        required: false,\n        defaultValue: defaultVoronoiProps.pointColor,\n        control: { type: 'colorPicker' },\n        group: 'Points',\n    },\n]\n\nexport const groups = groupProperties(props)\n","import React from 'react'\nimport range from 'lodash/range'\nimport { ResponsiveVoronoi, defaultVoronoiProps } from '@nivo/voronoi'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/voronoi/meta.yml'\nimport { groups } from '../../data/components/voronoi/props'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst xDomain = [0, 100]\nconst yDomain = [0, 100]\n\nconst generateData = () =>\n    range(100).map(id => ({ id, x: Math.random() * xDomain[1], y: Math.random() * yDomain[1] }))\n\nconst initialProperties = {\n    ...defaultVoronoiProps,\n\n    xDomain,\n    yDomain,\n\n    margin: {\n        top: 1,\n        right: 1,\n        bottom: 1,\n        left: 1,\n    },\n\n    enableLinks: true,\n    linkLineWidth: 1,\n    linkLineColor: '#cccccc',\n\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#c6432d',\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: '#c6432d',\n}\n\nconst Voronoi = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/voronoi.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <ComponentTemplate\n            name=\"Voronoi\"\n            meta={meta.Voronoi}\n            icon=\"voronoi\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={defaultVoronoiProps}\n            generateData={generateData}\n            image={image}\n        >\n            {(properties, data, theme) => {\n                return (\n                    <ResponsiveVoronoi\n                        data={data}\n                        xDomain={xDomain}\n                        yDomain={yDomain}\n                        {...properties}\n                        theme={theme}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Voronoi\n"],"names":["allFlavors","props","key","group","flavors","help","description","type","required","defaultValue","defaultVoronoiProps","chartDimensions","control","unit","min","max","step","groups","groupProperties","xDomain","yDomain","generateData","range","map","id","x","Math","random","y","initialProperties","margin","top","right","bottom","left","enableLinks","linkLineWidth","linkLineColor","enableCells","cellLineWidth","cellLineColor","enablePoints","pointSize","pointColor","image","useStaticQuery","childImageSharp","gatsbyImageData","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","data","theme"],"sourceRoot":""}