"use strict";(self.webpackChunknivo_website=self.webpackChunknivo_website||[]).push([[3130],{71157:function(e,r,t){t.d(r,{X:function(){return l}});var o=t(649),n=t(55930),i=t(80169),a=[{key:"keys",group:"Base",help:"Keys used to identify each cell in the matrix.",description:"\n            Keys used to identify each cell in the matrix,\n            for example given this matrix:\n            ```\n            [ [123, 37,  99 ],\n              [75,  103, 82 ],\n              [37,  65,  109] ]\n            ```\n            and those keys:\n            ```\n            ['John', 'Jane', 'Raoul']\n            ```\n            it will result in the following mapping:\n            ```\n            [ [null,    'John', 'Jane',  'Raoul']\n              ['John',   123,    37,      99    ],\n              ['Jane',   75,     103,     82    ],\n              ['Raoul',  37,     65,      109   ] ]\n            ```\n        ",required:!0,type:"string[]"},{key:"matrix",group:"Base",help:"The matrix used to compute the chord diagram.",description:"\n            The matrix used to compute the chord diagram,\n            it must be a square matrix, meaning each row length\n            must equal the row count.\n        ",required:!0,type:"Array<number[]>"},{key:"valueFormat",group:"Base",type:"string | Function",required:!1,help:"Optional value formatter."},{key:"width",enableControlForFlavors:["api"],help:"Chart width.",description:"\n            not required if using\n            `<ResponsiveChord/>`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        ",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"height",enableControlForFlavors:["api"],help:"Chart height.",description:"\n            not required if using\n            `<ResponsiveChord/>`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        ",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"pixelRatio",flavors:["canvas"],help:"Adjust pixel ratio, useful for HiDPI screens.",required:!1,defaultValue:"Depends on device",type:"number",controlType:"range",group:"Base",controlOptions:{min:1,max:2}},{key:"margin",help:"Chart margin.",type:"object",required:!1,controlType:"margin",group:"Base"},{key:"padAngle",help:"Padding angle.",required:!1,defaultValue:n.Yr.padAngle,type:"number",controlType:"range",group:"Base",controlOptions:{min:0,max:1,step:.01}},{key:"innerRadiusRatio",help:"Inner radius ratio.",required:!1,defaultValue:n.Yr.innerRadiusRatio,type:"number",controlType:"range",group:"Base",controlOptions:{min:0,max:1,step:.01}},{key:"innerRadiusOffset",help:"Inner radius offset (minus innerRadiusRatio).",required:!1,defaultValue:n.Yr.innerRadiusOffset,type:"number",controlType:"range",group:"Base",controlOptions:{min:0,max:1,step:.01}},(0,i.JR)(["svg","canvas","api"]),{key:"colors",help:"Defines how to compute arc/ribbon color.",type:"string | Function | string[]",required:!1,defaultValue:n.Yr.colors,flavors:["svg","canvas","api"],controlType:"ordinalColors",group:"Style"},{key:"arcOpacity",help:"Arcs opacity.",required:!1,defaultValue:n.Yr.arcOpacity,type:"number",controlType:"opacity",group:"Style"},{key:"arcBorderWidth",help:"Arcs border width.",required:!1,defaultValue:n.Yr.arcBorderWidth,type:"number",controlType:"lineWidth",group:"Style"},{key:"arcBorderColor",help:"Arcs border color.",required:!1,defaultValue:n.Yr.arcBorderColor,type:"string | object | Function",controlType:"inheritedColor",group:"Style"},{key:"ribbonOpacity",help:"Ribbons opacity.",required:!1,defaultValue:n.Yr.ribbonOpacity,type:"number",controlType:"opacity",group:"Style"},{key:"ribbonBorderWidth",help:"Ribbons border width.",required:!1,defaultValue:n.Yr.ribbonBorderWidth,type:"number",controlType:"lineWidth",group:"Style"},{key:"ribbonBorderColor",help:"Ribbons border color.",required:!1,defaultValue:n.Yr.ribbonBorderColor,type:"string | object | Function",controlType:"inheritedColor",group:"Style"},{key:"enableLabel",help:"Enable/disable labels.",type:"boolean",required:!1,defaultValue:n.Yr.enableLabel,controlType:"switch",group:"Labels"},{key:"label",help:"Defines how to get label text, can be a string (used to access current arc data property) or a function which will receive the actual arc data.",type:"string | Function",required:!1,defaultValue:n.Yr.label,controlType:"choices",group:"Labels",controlOptions:{choices:["id","value","d => `${d.id} [${d.value}]`"].map((function(e){return{label:e,value:e}}))}},{key:"labelOffset",help:"Label offset from arc.",required:!1,defaultValue:n.Yr.labelOffset,type:"number",controlType:"range",group:"Labels",controlOptions:{unit:"px",min:-80,max:80}},{key:"labelRotation",help:"Label rotation.",required:!1,defaultValue:n.Yr.labelRotation,type:"number",controlType:"angle",group:"Labels",controlOptions:{min:-180,max:180,step:5}},{key:"labelTextColor",description:"\n            How to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        ",help:"Method to compute label text color.",type:"string | object | Function",required:!1,defaultValue:n.Yr.labelTextColor,controlType:"inheritedColor",group:"Labels"},{key:"layers",group:"Customization",help:"Defines the order of layers and add custom layers.",description:"\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n            \n            The layer function which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the `Chord` component.\n\n            When using the canvas implementation, the function\n            will receive the canvas 2d context as first argument\n            and the chart's context and computed data as second.\n\n            Please make sure to use `context.save()` and\n            `context.restore()` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n        ",required:!1,type:"Array<string | Function>",defaultValue:n.Yr.layers},{key:"isInteractive",flavors:["svg","canvas"],help:"Enable/disable interactivity.",type:"boolean",required:!1,defaultValue:n.Yr.isInteractive,controlType:"switch",group:"Interactivity"},{key:"arcHoverOpacity",flavors:["svg","canvas"],help:"Arc opacity when hover (0~1).",required:!1,defaultValue:n.Yr.arcHoverOpacity,type:"number",controlType:"opacity",group:"Interactivity"},{key:"arcHoverOthersOpacity",flavors:["svg","canvas"],help:"Arc opacity when not hover (0~1).",required:!1,defaultValue:n.Yr.arcHoverOthersOpacity,type:"number",controlType:"opacity",group:"Interactivity"},{key:"ribbonHoverOpacity",flavors:["svg","canvas"],help:"Ribbon opacity when hover (0~1).",required:!1,defaultValue:n.Yr.ribbonHoverOpacity,type:"number",controlType:"opacity",group:"Interactivity"},{key:"ribbonHoverOthersOpacity",flavors:["svg","canvas"],help:"Ribbon opacity when not hover (0~1).",required:!1,defaultValue:n.Yr.ribbonHoverOthersOpacity,type:"number",controlType:"opacity",group:"Interactivity"},{key:"onArcMouseEnter",flavors:["svg","canvas"],group:"Interactivity",help:"onMouseEnter handler for arcs.",type:"(arc, event) => void",required:!1},{key:"onArcMouseMove",flavors:["svg","canvas"],group:"Interactivity",help:"onMouseMove handler for arcs.",type:"(arc, event) => void",required:!1},{key:"onArcMouseLeave",flavors:["svg","canvas"],group:"Interactivity",help:"onMouseLeave handler for arcs.",type:"(arc, event) => void",required:!1},{key:"onArcClick",flavors:["svg","canvas"],group:"Interactivity",help:"onClick handler for arcs.",type:"(arc, event) => void",required:!1},{key:"arcTooltip",flavors:["svg","canvas"],group:"Interactivity",type:"Function",required:!1,help:"Custom arc tooltip component.",description:"\n            A function allowing complete arc tooltip customisation,\n            it must return a valid HTML\n            element and will receive the arcs's data.\n        "},{key:"onRibbonMouseEnter",flavors:["svg"],group:"Interactivity",help:"onMouseEnter handler for ribbons.",type:"(ribbon, event) => void",required:!1},{key:"onRibbonMouseMove",flavors:["svg"],group:"Interactivity",help:"onMouseMove handler for ribbons.",type:"(ribbon, event) => void",required:!1},{key:"onRibbonMouseLeave",flavors:["svg"],group:"Interactivity",help:"onMouseLeave handler for ribbons.",type:"(ribbon, event) => void",required:!1},{key:"onRibbonClick",flavors:["svg"],group:"Interactivity",help:"onClick handler for ribbons.",type:"(ribbon, event) => void",required:!1},{key:"ribbonTooltip",flavors:["svg"],group:"Interactivity",type:"Function",required:!1,help:"Custom ribbon tooltip component.",description:"\n            A function allowing complete ribbon tooltip customisation,\n            it must return a valid HTML\n            element and will receive the ribbon's data.\n        "},{key:"legends",flavors:["svg","canvas"],type:"object[]",help:"Optional chart's legends.",group:"Legends",controlType:"array",controlOptions:{props:(0,i.y0)(["svg","canvas"]),shouldCreate:!0,addLabel:"add legend",shouldRemove:!0,getItemTitle:function(e,r){return"legend["+e+"]: "+r.anchor+", "+r.direction},defaults:{dataFrom:"keys",anchor:"top-left",direction:"column",justify:!1,translateX:0,translateY:0,itemWidth:100,itemHeight:20,itemsSpacing:0,symbolSize:20,itemDirection:"left-to-right",onClick:function(e){alert(JSON.stringify(e,null,"    "))}}}}].concat((0,o.Z)((0,i.$j)(["svg"],n.Yr))),l=(0,i.R2)(a)},62370:function(e,r,t){t.d(r,{h8:function(){return l},h6:function(){return c},Ld:function(){return s}});var o=t(48159),n=t.n(o),i=t(76744),a=t.n(i),l=function(e,r){var t=(void 0===r?{}:r).exclude,o=void 0===t?[]:t;return function(r,t){void 0===t&&(t={});var i={};return Object.keys(r).forEach((function(o){e[o]&&(i[o]=e[o](r[o],r,t))})),Object.assign({},n()(r,o),i)}},c=function(e){return function(r,t){return t["axis"+a()(e)].enable?n()(r,["enable"]):null}},s=function(e){var r=e.format;return e.enabled?r:void 0}},50938:function(e,r,t){var o=t(62370);r.Z=(0,o.h8)({label:function(e){return"d => `${d.id} [${d.value}]`"===e?function(e){return e.id+" ["+e.value+"]"}:e}})},37742:function(e,r,t){t.r(r);var o=t(27378),n=t(38681),i=t(55930),a=t(69857),l=t(82454),c=t(50938),s=t(71157),u={margin:{top:60,right:200,bottom:60,left:60},valueFormat:".2f",pixelRatio:"undefined"!=typeof window&&window.devicePixelRatio?window.devicePixelRatio:1,padAngle:.006,innerRadiusRatio:.86,innerRadiusOffset:0,arcOpacity:1,arcBorderWidth:0,arcBorderColor:{from:"color",modifiers:[["darker",.4]]},ribbonOpacity:.5,ribbonBorderWidth:0,ribbonBorderColor:{from:"color",modifiers:[["darker",.4]]},enableLabel:!0,label:"id",labelOffset:9,labelRotation:-90,labelTextColor:{from:"color",modifiers:[["darker",1]]},colors:{scheme:"paired"},isInteractive:!0,arcHoverOpacity:1,arcHoverOthersOpacity:.4,ribbonHoverOpacity:.75,ribbonHoverOthersOpacity:0,legends:[{anchor:"right",direction:"column",justify:!1,translateX:120,translateY:0,itemWidth:80,itemHeight:11,itemsSpacing:0,itemTextColor:"#999",itemDirection:"left-to-right",symbolSize:12,onClick:function(e){alert(JSON.stringify(e,null,"    "))},effects:[{on:"hover",style:{itemTextColor:"#000"}}]}]},p=function(){return(0,n.wQ)({size:38})};r.default=function(){return o.createElement(a.T,{name:"ChordCanvas",meta:l.tn,icon:"chord",flavors:l.Kk,currentFlavor:"canvas",properties:s.X,initialProperties:u,propertiesMapper:c.Z,codePropertiesMapper:function(e,r){return Object.assign({keys:r.keys},e)},generateData:p,dataKey:"matrix",getDataSize:function(){return 1482},getTabData:function(e){return e.matrix}},(function(e,r,t,n){return o.createElement(i.Sy,Object.assign({matrix:r.matrix,keys:r.keys},e,{theme:t,onArcClick:function(e){n({type:"click",label:"[arc] "+e.label,color:e.color,data:e})}}))}))}}}]);
//# sourceMappingURL=component---src-pages-chord-canvas-js-bfe11d04ac25bad93779.js.map