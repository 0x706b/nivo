{"version":3,"file":"25ccb43ceb3d67e070a2f11237e10b29a6e2579d-2668e3f26936af9727af.js","mappings":"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AY8D,KAAKkC,aACzCgC,EAAIS,UAAkD,EAAtC3D,EAAM9E,YAAY8D,KAAK2B,aACnCX,EAAM9E,YAAY8D,KAAK2B,aAAe,IACtCuC,EAAIiB,SAAW,QACfjB,EAAIkB,WACAhH,EAAW9B,KACX8B,EAAW0C,SAASd,KAAK,GACzB5B,EAAW0C,SAASd,KAAK,IAE7BkE,EAAIiB,SAAW,SAEnBjB,EAAImB,SAASjH,EAAW9B,KAAM8B,EAAW0C,SAASd,KAAK,GAAI5B,EAAW0C,SAASd,KAAK,QAG5FkE,EAAIoB,a,gdCpIKC,EAAY,wBAAatM,KAAKL,MAAsB,IAAhBK,KAAKuM,UAAAA,eCAzCC,EAAe,CACxB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MC1PSC,EAAQ,CACjB,OACA,QACA,OACA,SACA,UACA,QACA,MACA,QACA,OACA,YACA,UACA,UACA,UACA,SACA,SACA,OACA,YACA,QACA,OACA,QACA,QACA,YACA,YACA,SACA,MACA,UACA,WACA,QACA,SACA,SACA,OACA,WACA,UACA,WACA,OACA,OACA,WACA,QACA,QCvCSC,EAAuB,CAChC,MACA,OACA,aACA,KACA,SACA,SACA,OACA,UACA,SACA,OACA,OACA,QACA,OACA,OACA,IACA,MACA,OACA,UCNSC,GDMT,8ECN8B,SAC9BvJ,EACAX,EAAAA,GAAAA,IAAAA,OAAAA,IAAAA,EAQa,KANTmK,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,SAAAA,EAAAA,EACAC,WAAAA,OAAAA,IAAAA,EAAa,QACbC,aAAAA,OAAAA,IAAAA,EAAe,QACfC,YAAAA,OAAAA,IAAAA,EAAc,cACdC,OAAAA,IAAAA,GAAAA,EAAAA,MAkBG,CACH7J,GAAAA,EACAwJ,MAAAA,EACAC,SAAAA,EACAK,OAnBWjN,GAAAA,CAAM6M,EAAa,GAAG1F,QACjC,gBACU+F,EAAY1K,EAAM4E,EAAI,UACpBkF,GAAAA,CAAOY,EAAWF,IAAAA,OAAW5F,KAEzC,CAAC5E,IAeD2K,SAZanN,GAAAA,CAAM8M,GAAc3F,QAAiB,mBAC/B,IAAfC,EAAI7H,OA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","sources":["webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/./src/data/components/network/mapper.ts","webpack://nivo-website/./src/data/components/network/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/utils.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/AnnotationNote.tsx","webpack://nivo-website/../src/AnnotationLink.tsx","webpack://nivo-website/../src/CircleAnnotationOutline.tsx","webpack://nivo-website/../src/DotAnnotationOutline.tsx","webpack://nivo-website/../src/RectAnnotationOutline.tsx","webpack://nivo-website/../src/Annotation.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseFilter.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/filter.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import { settingsMapper } from '../../../lib/settings'\n\nexport const dynamicNodeSizeValue = 'dynamic: (node: InputNode) => node.size'\nexport const dynamicActiveNodeSizeValue = 'dynamic: (node: InputNode) => node.size * 1.5'\nexport const dynamicLinkThicknessValue =\n    'dynamic: (link: ComputedLink) => (2 - link.source.data.depth) * 2'\n\nexport default settingsMapper({\n    nodeSize: (value: number | typeof dynamicNodeSizeValue) => {\n        if (value === dynamicNodeSizeValue) {\n            return (node: any) => node.size\n        }\n\n        return value\n    },\n    activeNodeSize: (value: number | typeof dynamicActiveNodeSizeValue) => {\n        if (value === dynamicActiveNodeSizeValue) {\n            return (node: any) => node.size * 1.5\n        }\n\n        return value\n    },\n    linkThickness: (value: number | typeof dynamicLinkThicknessValue) => {\n        if (value === dynamicLinkThicknessValue) {\n            return (link: any) => 2 + link.target.data.height * 2\n        }\n\n        return value\n    },\n})\n","import { commonDefaultProps as defaults, svgDefaultProps } from '@nivo/network'\nimport { groupProperties, themeProperty, motionProperties } from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    isInteractive,\n    commonAccessibilityProps,\n    blendMode,\n    annotations,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\nimport {\n    dynamicNodeSizeValue,\n    dynamicActiveNodeSizeValue,\n    dynamicLinkThicknessValue,\n} from './mapper'\n\nconst allFlavors: Flavor[] = ['svg', 'canvas']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: '{ nodes: NetworkInputNode[], links: NetworkInputLink[] }',\n        required: true,\n        help: 'Chart data defining nodes and links.',\n        flavors: allFlavors,\n        description: `\n            Chart data, which must conform to this structure:\n\n            \\`\\`\\`\n            {\n                nodes: {\n                    id: string\n                }[]\n                links: {\n                    source: string // ref to node id\n                    target: string // ref to node id\n                }[]\n            }\n            \\`\\`\\`\n            \n            Please note that each node id **must** be unique.\n        `,\n    },\n    ...chartDimensions(allFlavors),\n    {\n        key: 'linkDistance',\n        group: 'Simulation',\n        type: 'number | string | (link: Link) => number',\n        help: `Control links' distance.`,\n        flavors: allFlavors,\n        description: `\n            If you set a **number**, this value will be used for all links.\n\n            If you use a **function**, it will receive a link and must return\n            the desired distance.\n            \n            Please note that in most cases you won't get links having the\n            exact distance you specified as it also depends on the other forces.\n        `,\n    },\n    {\n        key: 'centeringStrength',\n        group: 'Simulation',\n        type: 'number',\n        help: 'Control how much the centering force affects nodes positioning.',\n        description: `\n            This value will also affect the strength\n            of \\`distanceMin\\` and \\`distanceMax\\`.\n        `,\n        flavors: allFlavors,\n        defaultValue: defaults.centeringStrength,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 2,\n            step: 0.1,\n        },\n    },\n    {\n        key: 'repulsivity',\n        group: 'Simulation',\n        type: 'number',\n        help: 'Control how nodes repel each other.',\n        description: `\n            This value will also affect the strength\n            of \\`distanceMin\\` and \\`distanceMax\\`.\n        `,\n        flavors: allFlavors,\n        defaultValue: defaults.repulsivity,\n        control: {\n            type: 'range',\n            min: 1,\n            max: 100,\n        },\n    },\n    {\n        key: 'distanceMin',\n        group: 'Simulation',\n        type: 'number',\n        help: 'Sets the minimum distance between nodes for the many-body force.',\n        flavors: allFlavors,\n        defaultValue: defaults.distanceMin,\n    },\n    {\n        key: 'distanceMax',\n        group: 'Simulation',\n        type: 'number',\n        help: 'Sets the maximum disteance between nodes for the many-body force.',\n        flavors: allFlavors,\n        defaultValue: defaults.distanceMax,\n    },\n    {\n        key: 'iterations',\n        group: 'Simulation',\n        help: 'Adjust the simulation quality.',\n        description: `\n            Increasing this number will result in a **more accurate simulation**,\n            however it will also involve more computing.\n        `,\n        type: 'number',\n        flavors: allFlavors,\n        defaultValue: defaults.iterations,\n        control: {\n            type: 'range',\n            min: 30,\n            max: 260,\n        },\n    },\n    themeProperty(allFlavors),\n    {\n        key: 'nodeComponent',\n        group: 'Nodes',\n        type: 'NetworkNodeComponent',\n        help: `Custom node component for the SVG implementation.`,\n        flavors: ['svg'],\n        defaultValue: 'NetworkNode',\n    },\n    {\n        key: 'renderNode',\n        group: 'Nodes',\n        type: 'NetworkNodeCanvasRenderer',\n        help: `Custom node rendering for the canvas implementation.`,\n        flavors: ['canvas'],\n    },\n    {\n        key: 'nodeSize',\n        group: 'Nodes',\n        type: 'number | (node: InputNode) => number',\n        help: `Control nodes' size.`,\n        flavors: allFlavors,\n        defaultValue: defaults.nodeSize,\n        control: {\n            type: 'switchableRange',\n            disabledValue: dynamicNodeSizeValue,\n            defaultValue: defaults.nodeSize as number,\n            unit: 'px',\n            min: 4,\n            max: 64,\n        },\n    },\n    {\n        key: 'activeNodeSize',\n        group: 'Nodes',\n        type: 'number | (node: InputNode) => number',\n        help: `Control active nodes' size.`,\n        flavors: allFlavors,\n        defaultValue: defaults.activeNodeSize,\n        control: {\n            type: 'switchableRange',\n            disabledValue: dynamicActiveNodeSizeValue,\n            defaultValue: defaults.activeNodeSize as number,\n            unit: 'px',\n            min: 4,\n            max: 64,\n        },\n    },\n    {\n        key: 'inactiveNodeSize',\n        group: 'Nodes',\n        type: 'number | (node: InputNode) => number',\n        help: `Control inactive nodes' size.`,\n        flavors: allFlavors,\n        defaultValue: defaults.inactiveNodeSize,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 4,\n            max: 64,\n        },\n    },\n    {\n        key: 'nodeColor',\n        group: 'Nodes',\n        type: 'string | (node: InputNode) => string',\n        help: `Control nodes' color.`,\n        flavors: allFlavors,\n        defaultValue: defaults.nodeColor,\n    },\n    {\n        key: 'nodeBorderWidth',\n        group: 'Nodes',\n        type: 'number | (node: NetworkComputedNode) => number',\n        help: `Control nodes' border width.`,\n        flavors: allFlavors,\n        defaultValue: defaults.nodeBorderWidth,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'nodeBorderColor',\n        group: 'Nodes',\n        type: 'InheritedColorConfig<NetworkComputedNode>',\n        help: `Control nodes' border color.`,\n        flavors: allFlavors,\n        defaultValue: defaults.nodeBorderColor,\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'linkComponent',\n        group: 'Links',\n        type: 'NetworkLinkComponent',\n        help: `Custom link component for the SVG implementation.`,\n        flavors: ['svg'],\n        defaultValue: 'NetworkLink',\n    },\n    {\n        key: 'renderLink',\n        group: 'Links',\n        type: 'NetworkLinkCanvasRenderer',\n        help: `Custom link rendering for the canvas implementation.`,\n        flavors: ['canvas'],\n    },\n    {\n        key: 'linkThickness',\n        group: 'Links',\n        type: 'number | (link: NetworkComputedLink) => number',\n        help: `Control links' thickness.`,\n        flavors: allFlavors,\n        defaultValue: defaults.linkThickness,\n        control: {\n            type: 'switchableRange',\n            disabledValue: dynamicLinkThicknessValue,\n            defaultValue: defaults.linkThickness as number,\n            unit: 'px',\n            min: 1,\n            max: 12,\n        },\n    },\n    {\n        key: 'linkColor',\n        group: 'Links',\n        type: 'InheritedColorConfig<ComputedLink>',\n        help: `Control links' color.`,\n        flavors: allFlavors,\n        defaultValue: defaults.linkColor,\n        control: {\n            type: 'inheritedColor',\n            inheritableProperties: ['source.color', 'target.color'],\n        },\n    },\n    blendMode({\n        group: 'Links',\n        key: 'linkBlendMode',\n        target: 'links',\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.linkBlendMode,\n    }),\n    isInteractive({ flavors: allFlavors, defaultValue: defaults.isInteractive }),\n    {\n        key: 'nodeTooltip',\n        group: 'Interactivity',\n        type: 'NetworkNodeTooltipComponent',\n        help: 'Custom tooltip component for nodes.',\n        flavors: allFlavors,\n        description: `\n            An optional component allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the node's data as a property.\n        `,\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        help: 'onClick handler.',\n        type: '(node: NetworkComputedNode, event: MouseEvent) => void',\n        flavors: allFlavors,\n    },\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        help: 'onMouseEnter handler.',\n        type: '(node: ComputedNode, event: MouseEvent) => void',\n        flavors: ['svg'],\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        help: 'onMouseMove handler.',\n        type: '(node: ComputedNode, event: MouseEvent) => void',\n        flavors: ['svg'],\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        help: 'onMouseLeave handler.',\n        type: '(node: ComputedNode, event: MouseEvent) => void',\n        flavors: ['svg'],\n    },\n    annotations({\n        target: 'nodes',\n        flavors: allFlavors,\n        createDefaults: {\n            type: 'circle',\n            match: { id: 'Node 0' },\n            note: 'New annotation',\n            noteX: 160,\n            noteY: 36,\n            offset: 6,\n            noteTextOffset: 5,\n        },\n    }),\n    {\n        key: 'layers',\n        type: `('links' | 'nodes')[] | FunctionComponent<LayerProps>`,\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        defaultValue: defaults.layers,\n        flavors: ['svg', 'canvas'],\n    },\n    ...commonAccessibilityProps(['svg']),\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] }: { exclude?: string[] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    source: string\n    target: string\n    distance: number\n}\n\ntype ExtraNode = {\n    id: string\n    height: number\n    color: string\n    size: number\n}\n\nexport const generateNetworkData = ({\n    rootSize = 32,\n    midSize = 24,\n    leafSize = 12,\n    minMidNodes = 5,\n    maxMidNodes = 11,\n    minLeaves = 3,\n    maxLeaves = 9,\n}: {\n    rootSize?: number\n    midSize?: number\n    leafSize?: number\n    minMidNodes?: number\n    maxMidNodes?: number\n    minLeaves?: number\n    maxLeaves?: number\n} = {}) => {\n    const rootNode = {\n        id: 'Node 0',\n        height: 2,\n        size: rootSize,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `Node ${k + 1}`,\n        height: 1,\n        size: midSize,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: 'Node 0',\n            target: source.id,\n            distance: 80,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 80,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                height: 0,\n                size: leafSize,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 50,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit?: number | null, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: Record<string, unknown> = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","arguments","length","floor","ceil","round","d0","d1","offset","step","Math","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","d","dynamicNodeSizeValue","dynamicActiveNodeSizeValue","dynamicLinkThicknessValue","settingsMapper","nodeSize","value","node","size","activeNodeSize","linkThickness","link","target","data","height","allFlavors","props","key","group","type","required","help","flavors","description","chartDimensions","defaultValue","defaults","control","min","max","themeProperty","disabledValue","unit","inheritableProperties","blendMode","svgDefaultProps","isInteractive","annotations","createDefaults","match","id","note","noteX","noteY","noteTextOffset","commonAccessibilityProps","motionProperties","groups","groupProperties","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","defaultProps","isCircleAnnotation","annotationSpec","isDotAnnotation","isRectAnnotation","computeAnnotation","annotation","computedNoteX","computedNoteY","x","y","noteWidth","_isNumber","abs","Error","computedX","computedY","angle","sourceX","sourceY","targetX","targetY","atan2","absoluteAngleDegrees","radiansToDegrees","getLinkAngle","position","positionFromAngle","degreesToRadians","eighth","width","textX","noteLineX","points","text","useAnnotations","getPosition","getDimensions","useMemo","reduce","acc","_filter","map","datum","dimensions","_omit","bindAnnotations","useComputedAnnotations","computed","AnnotationNote","theme","useTheme","useMotionConfig","animate","springConfig","config","animatedProps","useSpring","immediate","createElement","_jsxs","outlineWidth","_jsx","animated","style","strokeLinejoin","strokeWidth","stroke","outlineColor","AnnotationLink","isOutline","path","firstPoint","animatedPath","useAnimatedPath","strokeLinecap","opacity","outlineOpacity","fill","CircleAnnotationOutline","radius","outline","circle","cx","cy","r","DotAnnotationOutline","dotSize","symbol","RectAnnotationOutline","borderRadius","rect","rx","ry","Annotation","useComputedAnnotation","noteType","isValidElement","isSvgNote","drawPoints","ctx","index","moveTo","lineTo","renderAnnotationsToCanvas","save","isCanvasNote","lineCap","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","font","fontSize","fontFamily","lineJoin","strokeText","fillText","restore","randColor","random","countryCodes","names","programmingLanguages","generateBulletData","title","subtitle","rangeCount","measureCount","markerCount","float","ranges","remaining","measures","markers","generateChordData","minValue","maxValue","maxSize","selectedKeys","slice","matrix","generateNetworkData","rootSize","midSize","leafSize","minMidNodes","maxMidNodes","minLeaves","maxLeaves","rootNode","color","nodes","Array","from","_","k","links","extraNodes","source","distance","concat","generateParallelCoordinatesData","shuffle","availableNodes","n","name","getNodeTargets","currentPath","targets","includes","join","targetId","getNodesTargets","targetsById","generateSankeyData","nodeCount","maxIterations","assign","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","categoryCount","groupIndex","price","volume","categories","randomizeSwarmPlotData","previousData","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","label","language","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","types","country","find","generateSeries","ids","xKeys","generateDayCounts","to","days","timeDays","dayFormat","timeFormat","day","generateOrderedDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","i","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","copyArray","shuffleSelf","module","exports","array","baseEach","collection","predicate","result","nativeFloor","nativeRandom","lower","upper","values","arrayMap","object","baseRandom","lastIndex","rand","arrayFilter","baseFilter","baseIteratee","isArray","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","baseValues"],"sourceRoot":""}