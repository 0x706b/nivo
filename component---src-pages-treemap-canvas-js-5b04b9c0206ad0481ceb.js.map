{"version":3,"sources":["webpack:///./src/data/components/treemap/mapper.js","webpack:///./src/data/components/treemap/generator.js","webpack:///./src/pages/treemap/canvas.js","webpack:///./src/data/components/treemap/props.js"],"names":["settingsMapper","label","value","node","id","formattedValue","parentLabel","pathComponents","join","valueFormat","mapFormat","generateLightDataSet","root","generateLibTree","generateHeavyDataSet","children","range","map","i","random","nodeCount","initialProperties","identity","TreeMapCanvasDefaultProps","format","enabled","tile","leavesOnly","innerPadding","outerPadding","margin","top","right","bottom","left","pixelRatio","window","devicePixelRatio","enableLabel","TreeMapDefaultProps","labelSkipSize","labelTextColor","from","modifiers","orientLabel","colors","scheme","colorBy","nodeOpacity","borderWidth","borderColor","animate","motionConfig","isInteractive","TreeMapCanvas","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","generateData","data","theme","logAction","onClick","type","color","defaults","props","key","group","help","required","defaultValue","controlType","description","controlOptions","choices","unit","min","max","enableControlForFlavors","defsProperties","prop","enableParentLabel","parentLabelSize","parentLabelPosition","parentLabelPadding","motionProperties","groupProperties"],"mappings":"+FAAA,gBAUeA,gBAAe,CAC1BC,MAAO,SAAAC,GACH,MAAS,kDAALA,EACO,SAAAC,GAAI,OAAOA,EAAKC,GAAZ,KAAmBD,EAAKE,eAAxB,KACRH,GAEXI,YAAa,SAAAJ,GACT,MAAS,4CAALA,EACO,SAAAC,GAAI,OAAIA,EAAKI,eAAeC,KAAK,QACrCN,GAEXO,YAAaC,O,oCCrBjB,8HAYaC,EAAuB,iBAAO,CAAEC,KAAMC,gBAItCC,EAAuB,WAMhC,MAAO,CACHF,KAAM,CACFR,GAAI,OACJW,SARSC,IAHI,KAGoBC,KAAI,SAAAC,GAAC,MAAK,CAC/Cd,GAAG,QAASc,EACZhB,MAAOiB,IAAO,GAAI,UAQlBC,UAbiB,O,oCCdzB,6HAqBMC,EAAoB,CACtBC,SAAUC,IAA0BD,SACpCpB,MAAOqB,IAA0BrB,MACjCO,YAAa,CAAEe,OAAQ,OAAQC,SAAS,GACxCC,KAAMH,IAA0BG,KAChCC,YAAY,EACZC,aAAc,EACdC,aAAc,EAEdC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAGVC,WACsB,oBAAXC,QAA0BA,OAAOC,iBAAmBD,OAAOC,iBAAmB,EAEzFC,aAAa,EACbrC,MAAOsC,IAAoBtC,MAC3BuC,cAAe,GACfC,eAAgB,CACZC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,KAE3BC,YAAarB,IAA0BqB,YAEvCC,OAAQ,CAAEC,OAAQ,YAClBC,QAAS,KACTC,YAAazB,IAA0ByB,YACvCC,YAAa1B,IAA0B0B,YACvCC,YAAa,CACTR,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3BQ,QAASZ,IAAoBY,QAC7BC,aAAcb,IAAoBa,aAElCC,cAAed,IAAoBc,eAsCxBC,UAnCO,WAClB,OACI,kBAAC,IAAD,CACIC,KAAK,gBACLC,KAAMA,IAAKF,cACXG,KAAK,UACLC,QAASF,IAAKE,QACdC,cAAc,SACdC,WAAYC,IACZxC,kBAAmBA,EACnByC,kBAAmBvC,IACnBwC,iBAAkBC,IAClBC,aAAcnD,MAEb,SAAC8C,EAAYM,EAAMC,EAAOC,GACvB,OACI,kBAAC,IAAD,eACIF,KAAMA,EAAKtD,MACPgD,EAFR,CAGIO,MAAOA,EACPE,QAAS,SAAAlE,GACLiE,EAAU,CACNE,KAAM,QACNrE,MAAM,UAAWE,EAAKC,GAAjB,KAAwBD,EAAKE,eAClCkE,MAAOpE,EAAKoE,MACZL,KAAM/D,a,4GC9EhCqE,EAAWjC,IAEXkC,EAAK,CACP,CACIC,IAAK,OACLC,MAAO,OACPC,KAAM,gCACNN,KAAM,SACNO,UAAU,GAEd,CACIH,IAAK,WACLC,MAAO,OACPC,KAAM,yDACNN,KAAM,oBACNO,UAAU,EACVC,aAAcN,EAASlD,UAE3B,CACIoD,IAAK,QACLC,MAAO,OACPC,KAAM,sDACNN,KAAM,oBACNO,UAAU,EACVC,aAAc,SAElB,CACIJ,IAAK,cACLE,KAAK,mJAILN,KAAM,oBACNO,UAAU,EACVE,YAAa,cACbJ,MAAO,QAEX,CACID,IAAK,OACLC,MAAO,OACPC,KAAM,kCACNI,YAAY,iKAIZV,KAAM,SACNO,UAAU,EACVC,aAAc,WACdC,YAAa,UACbE,eAAgB,CACZC,QAAS,CACL,CAAEjF,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,YAAaC,MAAO,aAC7B,CACID,MAAO,aACPC,MAAO,iBAKvB,CACIwE,IAAK,aACLE,KAAM,sCACNN,KAAM,UACNO,UAAU,EACVC,aAAcN,EAAS7C,WACvBoD,YAAa,SACbJ,MAAO,QAEX,CACID,IAAK,eACLE,KAAM,yCACNN,KAAM,SACNO,UAAU,EACVC,aAAcN,EAAS5C,aACvBmD,YAAa,QACbJ,MAAO,OACPM,eAAgB,CACZE,KAAM,KACNC,IAAK,EACLC,IAAK,KAGb,CACIX,IAAK,eACLE,KAAM,yCACNN,KAAM,SACNO,UAAU,EACVC,aAAcN,EAAS3C,aACvBkD,YAAa,QACbJ,MAAO,OACPM,eAAgB,CACZE,KAAM,KACNC,IAAK,EACLC,IAAK,KAGb,CACIX,IAAK,QACLC,MAAO,OACPW,wBAAyB,CAAC,OAC1BV,KAAM,eACNI,YAAY,uHAIZV,KAAM,SACNO,UAAU,GAEd,CACIH,IAAK,SACLC,MAAO,OACPW,wBAAyB,CAAC,OAC1BV,KAAM,gBACNI,YAAY,uHAIZV,KAAM,SACNO,UAAU,GAEd,CACIH,IAAK,aACLhB,QAAS,CAAC,UACVkB,KAAK,gDACLC,UAAU,EACVC,aAAc,oBACdR,KAAK,SACLS,YAAa,QACbJ,MAAO,OACPM,eAAgB,CACZG,IAAK,EACLC,IAAK,IAGb,CACIX,IAAK,SACLE,KAAM,gBACNN,KAAM,SACNO,UAAU,EACVE,YAAa,SACbJ,MAAO,QAEX,CACID,IAAK,SACLE,KAAM,qCACNN,KAAM,+BACNO,UAAU,EACVC,aAAcN,EAAS3B,OACvBkC,YAAa,gBACbJ,MAAO,SAEX,CACID,IAAK,cACLE,KAAM,sBACNC,UAAU,EACVC,aAAcN,EAASxB,YACvBsB,KAAM,SACNS,YAAa,UACbJ,MAAO,SAEX,CACID,IAAK,cACLE,KAAM,6BACNN,KAAM,SACNO,UAAU,EACVC,aAAcN,EAASvB,YACvB8B,YAAa,YACbJ,MAAO,SAEX,CACID,IAAK,cACLE,KAAM,kCACNN,KAAM,6BACNO,UAAU,EACVC,aAAcN,EAAStB,YACvB6B,YAAa,iBACbJ,MAAO,UAlLJ,mBAoLJY,YAAe,QAAS,CAAC,SApLrB,CAqLP,CACIb,IAAK,cACLE,KAAM,yBACNN,KAAM,UACNO,UAAU,EACVC,aAAcN,EAASlC,YACvByC,YAAa,SACbJ,MAAO,UAEX,CACID,IAAK,QACLE,KAAM,kBACNI,YACI,4KACJV,KAAM,oBACNO,UAAU,EACVE,YAAa,UACbJ,MAAO,SACPM,eAAgB,CACZC,QAAS,CACL,iBACA,KAFK,iDAIPjE,KAAI,SAAAuE,GAAI,MAAK,CACXvF,MAAOuF,EACPtF,MAAOsF,QAInB,CACId,IAAK,gBACLE,KACI,4FACJN,KAAM,SACNO,UAAU,EACVE,YAAa,QACbJ,MAAO,SACPM,eAAgB,CACZE,KAAM,KACNC,IAAK,EACLC,IAAK,MAGb,CACIX,IAAK,cACLE,KAAM,oDACNN,KAAM,UACNO,UAAU,EACVC,aAAcN,EAAS5B,YACvBmC,YAAa,SACbJ,MAAO,UAEX,CACID,IAAK,iBACLE,KAAM,sCACNN,KAAM,6BACNO,UAAU,EACVE,YAAa,iBACbJ,MAAO,UAEX,CACID,IAAK,oBACLhB,QAAS,CAAC,MAAO,OAAQ,OACzBkB,KAAM,yBACNN,KAAM,UACNO,UAAU,EACVC,aAAcN,EAASiB,kBACvBV,YAAa,SACbJ,MAAO,UAEX,CACID,IAAK,cACLhB,QAAS,CAAC,MAAO,OAAQ,OACzBkB,KAAM,yBACNI,YACI,mLACJV,KAAM,oBACNO,UAAU,EACVE,YAAa,UACbJ,MAAO,SACPM,eAAgB,CACZC,QAAS,CAAC,KAAM,iBAAP,2CAAoEjE,KACzE,SAAAuE,GAAI,MAAK,CACLvF,MAAOuF,EACPtF,MAAOsF,QAKvB,CACId,IAAK,kBACLhB,QAAS,CAAC,MAAO,OAAQ,OACzBkB,KAAK,qBACLC,UAAU,EACVC,aAAcN,EAASkB,gBACvBpB,KAAK,SACLS,YAAa,QACbJ,MAAO,SACPM,eAAgB,CACZG,IAAK,GACLC,IAAK,KAGb,CACIX,IAAK,sBACLhB,QAAS,CAAC,MAAO,OAAQ,OACzBkB,KAAM,yBACNN,KAAK,sCACLO,UAAU,EACVE,YAAa,UACbJ,MAAO,SACPG,aAAcN,EAASmB,oBACvBV,eAAgB,CACZC,QAAS,CAAC,MAAO,QAAS,SAAU,QAAQjE,KAAI,SAAAuE,GAAI,MAAK,CACrDvF,MAAOuF,EACPtF,MAAOsF,QAInB,CACId,IAAK,qBACLhB,QAAS,CAAC,MAAO,OAAQ,OACzBkB,KAAK,wBACLC,UAAU,EACVC,aAAcN,EAASoB,mBACvBtB,KAAK,SACLS,YAAa,QACbJ,MAAO,SACPM,eAAgB,CACZG,IAAK,EACLC,IAAK,KAGb,CACIX,IAAK,uBACLhB,QAAS,CAAC,MAAO,OAAQ,OACzBkB,KAAM,6CACNN,KAAM,6BACNO,UAAU,EACVE,YAAa,iBACbJ,MAAO,UAEX,CACID,IAAK,gBACLhB,QAAS,CAAC,MAAO,OAAQ,UACzBkB,KAAM,gCACNN,KAAM,UACNO,UAAU,EACVC,aAAcN,EAASnB,cACvB0B,YAAa,SACbJ,MAAO,iBAEX,CACID,IAAK,eACLhB,QAAS,CAAC,MAAO,QACjBiB,MAAO,gBACPL,KAAM,wBACNM,KAAM,wBACNC,UAAU,GAEd,CACIH,IAAK,cACLhB,QAAS,CAAC,MAAO,OAAQ,UACzBiB,MAAO,gBACPL,KAAM,wBACNM,KAAM,uBACNC,UAAU,GAEd,CACIH,IAAK,eACLhB,QAAS,CAAC,MAAO,QACjBiB,MAAO,gBACPL,KAAM,wBACNM,KAAM,wBACNC,UAAU,GAEd,CACIH,IAAK,UACLhB,QAAS,CAAC,MAAO,OAAQ,UACzBiB,MAAO,gBACPL,KAAM,wBACNM,KAAM,mBACNC,UAAU,IA3WP,YA6WJgB,YAAiB,CAAC,MAAO,OAAQ,UAAWrB,EAAU,kBAGhDX,EAASiC,YAAgBrB","file":"component---src-pages-treemap-canvas-js-5b04b9c0206ad0481ceb.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper({\n    label: value => {\n        if (value === `node => \\`\\${node.id} (\\${node.formattedValue})\\``)\n            return node => `${node.id} (${node.formattedValue})`\n        return value\n    },\n    parentLabel: value => {\n        if (value === `node => node.pathComponents.join(' / ')`)\n            return node => node.pathComponents.join(' / ')\n        return value\n    },\n    valueFormat: mapFormat,\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { generateLibTree } from '@nivo/generators'\nimport range from 'lodash/range'\nimport random from 'lodash/random'\n\nexport const generateLightDataSet = () => ({ root: generateLibTree() })\n\nconst HEAVY_NODE_COUNT = 600\n\nexport const generateHeavyDataSet = () => {\n    const children = range(HEAVY_NODE_COUNT).map(i => ({\n        id: `node.${i}`,\n        value: random(10, 100000),\n    }))\n\n    return {\n        root: {\n            id: 'root',\n            children,\n        },\n        nodeCount: HEAVY_NODE_COUNT,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport omit from 'lodash/omit'\nimport {\n    ResponsiveTreeMapCanvas,\n    TreeMapCanvasDefaultProps,\n    TreeMapDefaultProps,\n} from '@nivo/treemap'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/treemap/meta.yml'\nimport mapper from '../../data/components/treemap/mapper'\nimport { groups } from '../../data/components/treemap/props'\nimport { generateHeavyDataSet } from '../../data/components/treemap/generator'\n\nconst initialProperties = {\n    identity: TreeMapCanvasDefaultProps.identity,\n    value: TreeMapCanvasDefaultProps.value,\n    valueFormat: { format: '.02s', enabled: true },\n    tile: TreeMapCanvasDefaultProps.tile,\n    leavesOnly: true,\n    innerPadding: 0,\n    outerPadding: 0,\n\n    margin: {\n        top: 10,\n        right: 10,\n        bottom: 10,\n        left: 10,\n    },\n\n    pixelRatio:\n        typeof window !== 'undefined' && window.devicePixelRatio ? window.devicePixelRatio : 1,\n\n    enableLabel: true,\n    label: TreeMapDefaultProps.label,\n    labelSkipSize: 18,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 3]],\n    },\n    orientLabel: TreeMapCanvasDefaultProps.orientLabel,\n\n    colors: { scheme: 'spectral' },\n    colorBy: 'id',\n    nodeOpacity: TreeMapCanvasDefaultProps.nodeOpacity,\n    borderWidth: TreeMapCanvasDefaultProps.borderWidth,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.8]],\n    },\n\n    animate: TreeMapDefaultProps.animate,\n    motionConfig: TreeMapDefaultProps.motionConfig,\n\n    isInteractive: TreeMapDefaultProps.isInteractive,\n}\n\nconst TreeMapCanvas = () => {\n    return (\n        <ComponentTemplate\n            name=\"TreeMapCanvas\"\n            meta={meta.TreeMapCanvas}\n            icon=\"treemap\"\n            flavors={meta.flavors}\n            currentFlavor=\"canvas\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={TreeMapCanvasDefaultProps}\n            propertiesMapper={mapper}\n            generateData={generateHeavyDataSet}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveTreeMapCanvas\n                        data={data.root}\n                        {...properties}\n                        theme={theme}\n                        onClick={node => {\n                            logAction({\n                                type: 'click',\n                                label: `[node] ${node.id}: ${node.formattedValue}`,\n                                color: node.color,\n                                data: node,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default TreeMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { TreeMapDefaultProps } from '@nivo/treemap'\nimport { motionProperties, defsProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst defaults = TreeMapDefaultProps\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'The hierarchical data object.',\n        type: 'object',\n        required: true,\n    },\n    {\n        key: 'identity',\n        group: 'Base',\n        help: 'The key or function to use to retrieve nodes identity.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.identity,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        help: 'The key or function to use to retrieve nodes value.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: 'value',\n    },\n    {\n        key: 'valueFormat',\n        help: `\n            Value format supporting d3-format notation, this formatted value\n            will then be used for labels and tooltips.\n        `,\n        type: 'string | Function',\n        required: false,\n        controlType: 'valueFormat',\n        group: 'Base',\n    },\n    {\n        key: 'tile',\n        group: 'Base',\n        help: 'Strategy used to compute nodes.',\n        description: `\n            Strategy used to compute nodes, see\n            [official d3 documentation](https://github.com/mbostock/d3/wiki/Treemap-Layout#mode).\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: 'squarify',\n        controlType: 'choices',\n        controlOptions: {\n            choices: [\n                { label: 'binary', value: 'binary' },\n                { label: 'squarify', value: 'squarify' },\n                { label: 'slice', value: 'slice' },\n                { label: 'dice', value: 'dice' },\n                { label: 'sliceDice', value: 'sliceDice' },\n                {\n                    label: 'resquarify',\n                    value: 'resquarify',\n                },\n            ],\n        },\n    },\n    {\n        key: 'leavesOnly',\n        help: 'Only render leaf nodes (no parent).',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.leavesOnly,\n        controlType: 'switch',\n        group: 'Base',\n    },\n    {\n        key: 'innerPadding',\n        help: 'Padding between parent and child node.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.innerPadding,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'outerPadding',\n        help: 'Padding between parent and child node.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.outerPadding,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'colors',\n        help: 'Defines how to compute node color.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'nodeOpacity',\n        help: 'Node opacity (0~1).',\n        required: false,\n        defaultValue: defaults.nodeOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Control node border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'enableLabel',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        help: 'Label accessor.',\n        description:\n            'Defines how to get label text, can be a string (used to access current node property) or a function which will receive the actual node and must return the desired label.',\n        type: 'string | Function',\n        required: false,\n        controlType: 'choices',\n        group: 'Labels',\n        controlOptions: {\n            choices: [\n                'formattedValue',\n                'id',\n                `node => \\`\\${node.id} (\\${node.formattedValue})\\``,\n            ].map(prop => ({\n                label: prop,\n                value: prop,\n            })),\n        },\n    },\n    {\n        key: 'labelSkipSize',\n        help:\n            'Skip label rendering if node minimal side length is lower than given value, 0 to disable.',\n        type: 'number',\n        required: false,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 100,\n        },\n    },\n    {\n        key: 'orientLabel',\n        help: 'Orient labels according to max node width/height.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.orientLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'labelTextColor',\n        help: 'Method to compute label text color.',\n        type: 'string | object | Function',\n        required: false,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'enableParentLabel',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableParentLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'parentLabel',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Parent label accessor.',\n        description:\n            'Defines how to get parent label text, can be a string (used to access current node property) or a function which will receive the actual node and must return the desired label.',\n        type: 'string | Function',\n        required: false,\n        controlType: 'choices',\n        group: 'Labels',\n        controlOptions: {\n            choices: ['id', 'formattedValue', `node => node.pathComponents.join(' / ')`].map(\n                prop => ({\n                    label: prop,\n                    value: prop,\n                })\n            ),\n        },\n    },\n    {\n        key: 'parentLabelSize',\n        flavors: ['svg', 'html', 'api'],\n        help: `Parent label size.`,\n        required: false,\n        defaultValue: defaults.parentLabelSize,\n        type: `number`,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            min: 10,\n            max: 40,\n        },\n    },\n    {\n        key: 'parentLabelPosition',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Parent label position.',\n        type: `'top' | 'right' | 'bottom' | 'left'`,\n        required: false,\n        controlType: 'choices',\n        group: 'Labels',\n        defaultValue: defaults.parentLabelPosition,\n        controlOptions: {\n            choices: ['top', 'right', 'bottom', 'left'].map(prop => ({\n                label: prop,\n                value: prop,\n            })),\n        },\n    },\n    {\n        key: 'parentLabelPadding',\n        flavors: ['svg', 'html', 'api'],\n        help: `Parent label padding.`,\n        required: false,\n        defaultValue: defaults.parentLabelPadding,\n        type: `number`,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'parentLabelTextColor',\n        flavors: ['svg', 'html', 'api'],\n        help: 'Method to compute parent label text color.',\n        type: 'string | object | Function',\n        required: false,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'html', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseEnter handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseMove handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onMouseLeave handler.',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        type: '(node, event) => void',\n        help: 'onClick handler.',\n        required: false,\n    },\n    ...motionProperties(['svg', 'html', 'canvas'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n"],"sourceRoot":""}