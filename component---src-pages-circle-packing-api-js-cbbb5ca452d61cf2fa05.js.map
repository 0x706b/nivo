{"version":3,"sources":["webpack:///./src/pages/circle-packing/api.js","webpack:///./src/data/components/circle-packing/mapper.js","webpack:///./src/data/components/circle-packing/props.js","webpack:///./src/components/components/api-client/ApiPreview.js","webpack:///./src/components/components/api-client/ApiTabs.js","webpack:///./src/components/components/api-client/ApiSubmit.js","webpack:///./src/components/components/api-client/ApiResponse.js","webpack:///./src/components/components/api-client/ApiClient.js","webpack:///../node_modules/lodash/cloneDeep.js"],"names":["root","generateLibTree","CirclePackingApi","title","keywords","meta","CirclePacking","tags","componentName","chartClass","apiPath","flavors","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","width","height","margin","top","right","bottom","left","JSON","stringify","identity","value","valueFormat","format","enabled","colors","scheme","colorBy","inheritColorFromParent","childColor","from","modifiers","padding","enableLabels","leavesOnly","label","labelsSkipRadius","labelTextColor","labelTextDY","borderWidth","borderColor","settingsMapper","mapFormat","d","id","props","key","group","help","description","type","required","defaultValue","controlType","controlOptions","unit","min","max","enableControlForFlavors","step","themeProperty","choices","defsProperties","map","choice","isInteractive","motionProperties","groupProperties","Link","styled","a","Image","img","EmptyContainer","div","theme","textLight","ApiPreview","responseStatus","chartUrl","href","target","rel","src","alt","tabs","ApiTabs","data","body","isLoading","useTheme","useState","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","tab","isCurrent","icon","iconColors","NavItem","onClick","onMouseEnter","onMouseLeave","Icon","Content","CodeBlock","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","tablet","mobile","nav","background","span","text","LoaderContainer","loaderBarAnimation","keyframes","LoaderBar","accent","index","Loader","Button","ApiSubmit","render","this","loading","Component","Container","Header","borderLight","ResponseJson","pre","ApiResponse","response","responseContent","ApiClient","handleSettingsUpdate","settings","setState","handleDataUpdate","e","state","Object","assign","handleSubmit","fetch","config","nivoApiUrl","method","headers","Accept","then","res","status","json","catch","err","console","error","component","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","ComponentFlavorSelector","current","ComponentDescription","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","onChange","cardAltBackground","baseClone","module","exports","CLONE_DEEP_FLAG"],"mappings":"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","file":"component---src-pages-circle-packing-api-js-cbbb5ca452d61cf2fa05.js","sourcesContent":["import React from 'react'\nimport { generateLibTree } from '@nivo/generators'\nimport SEO from '../../components/seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/circle-packing/props'\nimport mapper from '../../data/components/circle-packing/mapper'\nimport meta from '../../data/components/circle-packing/meta.yml'\n\nconst root = generateLibTree()\n\nconst CirclePackingApi = () => {\n    return (\n        <>\n            <SEO\n                title=\"CirclePacking HTTP API\"\n                keywords={[...meta.CirclePacking.tags, 'HTTP API']}\n            />\n            <ApiClient\n                componentName=\"CirclePacking\"\n                chartClass=\"circle-packing\"\n                apiPath=\"/charts/circle-packing\"\n                flavors={meta.flavors}\n                dataProperty=\"root\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 600,\n                    height: 600,\n                    margin: {\n                        top: 20,\n                        right: 20,\n                        bottom: 20,\n                        left: 20,\n                    },\n                    root: JSON.stringify(root, null, '  '),\n                    identity: 'name',\n                    value: 'loc',\n                    valueFormat: { format: '', enabled: false },\n                    colors: { scheme: 'nivo' },\n                    colorBy: 'depth',\n                    inheritColorFromParent: false,\n                    childColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.3]],\n                    },\n                    padding: 1,\n                    enableLabels: true,\n                    leavesOnly: false,\n                    label: 'id',\n                    labelsSkipRadius: 8,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.8]],\n                    },\n                    labelTextDY: 4,\n                    borderWidth: 0,\n                    borderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.3]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default CirclePackingApi\n","import { mapFormat, settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({\n    valueFormat: mapFormat,\n    label: value => {\n        if (value === `d => \\`\\${d.id}: \\${d.value}\\``) return d => `${d.id}: ${d.value}`\n        return value\n    },\n})\n","import { defaultProps } from '@nivo/circle-packing'\nimport {\n    themeProperty,\n    motionProperties,\n    defsProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data, which should be immutable.',\n        description: `\n            Chart data, which must conform to this structure\n            if using the default \\`id\\` and \\`value\\` accessors:\n\n            \\`\\`\\`\n            {\n                // must be unique for the whole dataset\n                id: string | number\n                value: number\n                children: {\n                    id: string | number\n                    value: number\n                    children: ...\n                }[]\n            }\n            \\`\\`\\`\n\n            If using a different data structure, you must make sure\n            to adjust both \\`id\\` and \\`value\\`. Meaning you can provide\n            a completely different data structure as long as \\`id\\` and \\`value\\`\n            return the appropriate values.\n\n            Immutability of the data is important as re-computations\n            depends on it.\n        `,\n        type: 'object',\n        required: true,\n    },\n    {\n        key: 'id',\n        group: 'Base',\n        help: 'Id accessor.',\n        description: `\n            define id accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            id (string | number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.id,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        help: 'Value accessor',\n        description: `\n            define value accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            value (number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.value,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'string | (value: number) => string | number',\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'padding',\n        help: 'Padding between each circle.',\n        description: `\n            Padding between adjacent circles.\n            Please be aware that when zoomed\n            this value will be affected by the zooming factor\n            and is expressed in pixels. See the\n            [official d3 documentation](https://github.com/d3/d3-hierarchy#pack_padding).\n        `,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.padding,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'leavesOnly',\n        help: 'Only render leaf nodes (skip parent nodes).',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.leavesOnly,\n        controlType: 'switch',\n        group: 'Base',\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using \\`<ResponsiveCirclePacking/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using \\`<ResponsiveCirclePacking/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Define how to compute node color.',\n        description: `\n            colors used to colorize the circles,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: { scheme: 'nivo' },\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'colorBy',\n        help: `Define the property to use to assign a color to circles.`,\n        description: `\n            When using \\`id\\`, each node will get a new color,\n            and when using \\`depth\\` the nodes' color will depend on their depth.\n        `,\n        type: `'id' | 'depth'`,\n        required: false,\n        defaultValue: defaultProps.colorBy,\n        controlType: 'radio',\n        group: 'Style',\n        controlOptions: {\n            choices: [\n                { label: 'id', value: 'id' },\n                { label: 'depth', value: 'depth' },\n            ],\n        },\n    },\n    {\n        key: 'inheritColorFromParent',\n        help: 'Inherit color from parent node starting from 2nd level.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.inheritColorFromParent,\n        controlType: 'switch',\n        group: 'Style',\n    },\n    {\n        key: 'childColor',\n        help:\n            'Defines how to compute child nodes color, only used when inheritColorFromParent is enabled.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.childColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Width of circle border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        description: `\n            how to compute border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'circleComponent',\n        help: 'Custom circle component.',\n        group: 'Style',\n        required: false,\n    },\n    {\n        key: 'enableLabels',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.enableLabels,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        help: 'Label accessor.',\n        description: `\n            Defines how to get label text,\n            can be a string (used to access current node data property)\n            or a function which will receive the actual node data.\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.label,\n        controlType: 'choices',\n        group: 'Labels',\n        controlOptions: {\n            choices: ['id', 'value', 'formattedValue', `d => \\`\\${d.id}: \\${d.value}\\``].map(\n                choice => ({\n                    label: choice,\n                    value: choice,\n                })\n            ),\n        },\n    },\n    {\n        key: 'labelsFilter',\n        help: 'Filter labels using custom conditions.',\n        description: `\n            Please note that at this stage, nodes are already excluded\n            according to \\`labelsSkipRadius\\`.\n            \n            This can be used to only show labels at a certain depth for example:\n            \n            \\`\\`\\`\n            <CirclePacking\n                labelsFilter={label => label.node.depth == 2}\n                {...props}\n            />\n            \\`\\`\\`\n        `,\n        type: '(label) => boolean',\n        required: false,\n        group: 'Labels',\n    },\n    {\n        key: 'labelsSkipRadius',\n        help: 'Skip label rendering if node radius is lower than given value, 0 to disable.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.labelsSkipRadius,\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'labelTextColor',\n        help: 'Method to compute label text color.',\n        description: `\n            how to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.labelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'labelComponent',\n        help: 'Custom label component.',\n        group: 'Labels',\n        required: false,\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'html', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        help: 'onMouseEnter handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseMove handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        help: 'onMouseLeave handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        help: 'onClick handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'zoomedId',\n        flavors: ['svg', 'html', 'canvas'],\n        help: `Zoom on a specific node.`,\n        description: `\n            If provided, zoom on the node having the provided ID,\n            this can be used to build a zoomable circle packing chart\n            when used in conjunction with the \\`onClick\\` property.  \n        `,\n        type: 'string | null',\n        required: false,\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg', 'html'], defaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ApiPreview = ({ responseStatus, chartUrl }) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n\n    return <div className=\"api-client_preview\">{content}</div>\n}\n\nApiPreview.propTypes = {\n    responseStatus: PropTypes.number,\n    chartUrl: PropTypes.string,\n}\n\nexport default ApiPreview\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport ApiPreview from './ApiPreview'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\nimport CodeBlock from '../../CodeBlock'\n\nconst tabs = ['preview', 'body', 'data']\n\nconst ApiTabs = ({ chartClass, data, body, isLoading, responseStatus, chartUrl }) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState('preview')\n    const [hoverTab, setHoverTab] = useState(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview\n                        isLoading={isLoading}\n                        responseStatus={responseStatus}\n                        chartUrl={chartUrl}\n                    />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nApiTabs.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n}\n\nexport default ApiTabs\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.6);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 60%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst LoaderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n\nclass ApiSubmit extends Component {\n    render() {\n        const { loading, onClick } = this.props\n\n        return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n    }\n}\n\nApiSubmit.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nApiSubmit.defaultProps = {}\n\nexport default ApiSubmit\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n\nclass ApiResponse extends Component {\n    render() {\n        const { responseStatus, response } = this.props\n\n        let responseContent = 'no response available'\n        if (response) {\n            responseContent = JSON.stringify(response, null, '  ')\n        }\n\n        return (\n            <Container>\n                <Header>\n                    Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}\n                </Header>\n                <ResponseJson>{responseContent}</ResponseJson>\n            </Container>\n        )\n    }\n}\n\nApiResponse.propTypes = {}\n\nApiResponse.defaultProps = {}\n\nexport default ApiResponse\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport ComponentPage from '../ComponentPage'\nimport ComponentHeader from '../ComponentHeader'\nimport ComponentFlavorSelector from '../ComponentFlavorSelector'\nimport ComponentDescription from '../ComponentDescription'\nimport ComponentSettings from '../ComponentSettings'\nimport ApiTabs from './ApiTabs'\nimport ApiSubmit from './ApiSubmit'\nimport ApiResponse from './ApiResponse'\nimport config from '../../../data/config'\n\nconst description = component => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\nexport default class ApiClient extends Component {\n    static propTypes = {\n        componentName: PropTypes.string.isRequired,\n        chartClass: PropTypes.string.isRequired,\n        apiPath: PropTypes.string.isRequired,\n        dataProperty: PropTypes.string.isRequired,\n        propsMapper: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        dataProperty: 'data',\n        propsMapper: props => props,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            props: props.defaultProps,\n            loading: false,\n            responseStatus: null,\n            response: null,\n        }\n    }\n\n    handleSettingsUpdate = settings => {\n        this.setState({ props: settings })\n    }\n\n    handleDataUpdate = e => {\n        const { dataProperty } = this.props\n        const { props } = this.state\n\n        this.setState({\n            props: Object.assign({}, props, {\n                [dataProperty]: e.target.value,\n            }),\n        })\n    }\n\n    handleSubmit = () => {\n        const { apiPath, propsMapper } = this.props\n        const { props } = this.state\n\n        this.setState({\n            loading: true,\n        })\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    responseStatus: res.status,\n                })\n\n                return res.json()\n            })\n            .then(res => {\n                this.setState({ response: res })\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    render() {\n        const {\n            componentName,\n            chartClass,\n            apiPath,\n            controlGroups,\n            dataProperty,\n            propsMapper,\n            flavors,\n        } = this.props\n        const { props, loading, responseStatus, response } = this.state\n\n        const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n        return (\n            <Layout>\n                <ComponentPage>\n                    <ComponentHeader\n                        chartClass={`${componentName} HTTP API`}\n                        tags={[`POST ${apiPath}`]}\n                    />\n                    {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                    <ComponentDescription description={description(componentName, apiPath)} />\n                    <ApiTabs\n                        chartClass={chartClass}\n                        data={props[dataProperty]}\n                        body={propsMapper(props)}\n                        isLoading={loading}\n                        responseStatus={responseStatus}\n                        chartUrl={response ? response.url : null}\n                    />\n                    <ControlPanel>\n                        <SubmitWrapper>\n                            <ApiSubmit loading={loading} onClick={this.handleSubmit} />\n                        </SubmitWrapper>\n                        <ApiResponse responseStatus={responseStatus} response={response} />\n                    </ControlPanel>\n                    <ComponentSettings\n                        component={componentName}\n                        settings={props}\n                        flavors={flavorKeys}\n                        currentFlavor=\"api\"\n                        groups={controlGroups}\n                        onChange={this.handleSettingsUpdate}\n                    />\n                </ComponentPage>\n            </Layout>\n        )\n    }\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.6);\n    width: var(--partialWidth);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 60%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n"],"sourceRoot":""}