{"version":3,"file":"component---src-pages-sankey-index-tsx-5ffdf892d399ba83d237.js","mappings":"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lDe,kBACX,gBAAC,IAAD,CAKIC,KAAK,SACLC,KAAMA,EAAAA,EACNC,KAAK,SACL7F,QAAS4F,EAAAA,EACTE,cAAc,MACdC,WAAY9E,EAAAA,EACZiB,kBAAmBA,EACnB8D,kBAAmB5F,EAAAA,GACnB6F,iBAAkBC,EAAAA,EAClBX,aAAcA,IAEb,SAACQ,EAAY3J,EAAM+J,EAAOC,GACvB,OACI,gBAAC,KAAD,eACIhK,KAAMA,GACF2J,EAFR,CAGII,MAAOA,EACPnB,QAAS,SAAAqB,GACL,IAAI9F,EAEAA,EADA,OAAQ8F,EACH,UAAaA,EAAKC,GAAlB,KAAyBD,EAAK7F,MAE9B,UAAa6F,EAAKE,OAAOD,GAAzB,MAAiCD,EAAKG,OAAOF,GAA7C,KAAoDD,EAAK7F,MAGlE4F,EAAU,CACNvG,KAAM,QACNU,MAAAA,EACAnE,KAAMuF,GAAAA,CAAK0E,EAAM,CACb,cACA,cACA,qBACA,qBACA,qBACA,kC,gdC5InBI,EAAY,wBAAazO,KAAK2G,MAAsB,IAAhB3G,KAAK0O,UAAAA,eCAzCC,EAAe,CACxB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MC1PSC,EAAQ,CACjB,OACA,QACA,OACA,SACA,UACA,QACA,MACA,QACA,OACA,YACA,UACA,UACA,UACA,SACA,SACA,OACA,YACA,QACA,OACA,QACA,QACA,YACA,YACA,SACA,MACA,UACA,WACA,QACA,SACA,SACA,OACA,WACA,UACA,WACA,OACA,OACA,WACA,QACA,QCvCSC,EAAuB,CAChC,MACA,OACA,aACA,KACA,SACA,SACA,OACA,UACA,SACA,OACA,OACA,QACA,OACA,OACA,IACA,MACA,OACA,UCNSC,GDMT,8ECN8B,SAC9BR,EACAxF,EAAAA,GAAAA,IAAAA,OAAAA,IAAAA,EAQa,KANTiG,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,SAAAA,EAAAA,EACAC,WAAAA,OAAAA,IAAAA,EAAa,QACbC,aAAAA,OAAAA,IAAAA,EAAe,QACfC,YAAAA,OAAAA,IAAAA,EAAc,cACdC,OAAAA,IAAAA,GAAAA,EAAAA,M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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/./src/data/components/sankey/mapper.ts","webpack://nivo-website/./src/data/components/sankey/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/./src/pages/sankey/index.tsx","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/cloneDeep.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import { settingsMapper, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper({\n    valueFormat: mapFormat,\n})\n","import { svgDefaultProps, sankeyAlignmentPropKeys } from '@nivo/sankey'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: '{ nodes: object[], links: object[] }',\n        required: true,\n        help: 'Chart data defining nodes and links.',\n        flavors: ['svg', 'api'],\n        description: `\n            Chart data, which must conform to this structure:\n\n            \\`\\`\\`\n            {\n                nodes: {\n                    id: string\n                }[],\n                links: {\n                    source: string, // ref to node id\n                    target: string, // ref to node id\n                    value:  number\n                }[]\n            }\n            \\`\\`\\`\n        `,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | (value: number) => string',\n        required: false,\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        flavors: ['svg', 'api'],\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'layout',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: `Control sankey layout direction.`,\n        defaultValue: svgDefaultProps.layout,\n        flavors: ['svg', 'api'],\n        controlType: 'radio',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'align',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Node alignment method.',\n        description: `\n            Defines node alignment method.\n            Please have a look at the\n            [official d3 documentation](https://github.com/d3/d3-sankey#sankey_nodeAlign)\n            for further information.\n        `,\n        defaultValue: svgDefaultProps.align,\n        flavors: ['svg', 'api'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: sankeyAlignmentPropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'sort',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: 'Node sorting method.',\n        description: `\n            Defines node sorting method. Must be one of:\n\n            - **'auto'** order of nodes within each\n              column is determined automatically by the layout.\n            - **'input'** order is fixed by the input.\n            - **'ascending'** node with lower values on top.\n            - **'descending'** node with higher values on top.\n            - \\`(nodeA, nodeB) => number\\` user defined function.\n\n            Please have a look at the\n            [official d3 documentation](https://github.com/d3/d3-sankey#sankey_nodeSort)\n            for further information.\n        `,\n        defaultValue: svgDefaultProps.sort,\n        flavors: ['svg', 'api'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: ['auto', 'input', 'ascending', 'descending'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        type: 'number',\n        required: true,\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveSankey/>\\`.\n        `,\n        flavors: ['svg', 'api'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1200,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        type: 'number',\n        required: true,\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveSankey/>\\`.\n        `,\n        flavors: ['svg', 'api'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1200,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        group: 'Base',\n        flavors: ['svg', 'api'],\n        controlType: 'margin',\n    },\n    themeProperty(['svg', 'api']),\n    {\n        key: 'colors',\n        group: 'Style',\n        type: 'string | Function | string[]',\n        required: false,\n        help: 'Defines how to compute nodes color.',\n        defaultValue: svgDefaultProps.colors,\n        flavors: ['svg', 'api'],\n        controlType: 'ordinalColors',\n    },\n    {\n        key: 'nodeThickness',\n        group: 'Nodes',\n        type: 'number',\n        required: false,\n        help: 'Node thickness.',\n        defaultValue: svgDefaultProps.nodeThickness,\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 100,\n        },\n    },\n    {\n        key: 'nodeOpacity',\n        group: 'Nodes',\n        help: 'Node opacity (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.nodeOpacity,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'opacity',\n    },\n    {\n        key: 'nodeHoverOpacity',\n        group: 'Nodes',\n        flavors: ['svg'],\n        help: 'Node opacity on hover (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.nodeHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n    },\n    {\n        key: 'nodeHoverOthersOpacity',\n        flavors: ['svg'],\n        help: 'Other nodes opacity on hover (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.nodeHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Nodes',\n    },\n    {\n        key: 'nodeSpacing',\n        group: 'Nodes',\n        help: 'Spacing between nodes at an identical level.',\n        required: false,\n        defaultValue: svgDefaultProps.nodeSpacing,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'nodeInnerPadding',\n        group: 'Nodes',\n        help: 'Node inner padding, distance from link, substracted from nodeThickness.',\n        required: false,\n        defaultValue: svgDefaultProps.nodeInnerPadding,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'nodeBorderWidth',\n        group: 'Nodes',\n        help: 'Node border width.',\n        required: false,\n        defaultValue: svgDefaultProps.nodeBorderWidth,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'nodeBorderColor',\n        group: 'Nodes',\n        description: `\n            how to compute node border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        help: 'Method to compute node border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: svgDefaultProps.nodeBorderColor,\n        flavors: ['svg', 'api'],\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'nodeBorderRadius',\n        group: 'Nodes',\n        help: 'Node border radius.',\n        type: 'number',\n        required: false,\n        defaultValue: svgDefaultProps.nodeBorderRadius,\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 12,\n        },\n    },\n    {\n        key: 'linkOpacity',\n        group: 'Links',\n        help: 'Link opacity (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.linkOpacity,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'opacity',\n    },\n    {\n        key: 'linkHoverOpacity',\n        group: 'Links',\n        flavors: ['svg'],\n        help: 'Link opacity on hover(0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.linkHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n    },\n    {\n        key: 'linkHoverOthersOpacity',\n        group: 'Links',\n        flavors: ['svg'],\n        help: 'Other links opacity on hover (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.linkHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n    },\n    {\n        key: 'linkContract',\n        group: 'Links',\n        help: 'Contract link width.',\n        required: false,\n        defaultValue: svgDefaultProps.linkContract,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'linkBlendMode',\n        flavors: ['svg'],\n        help: 'Defines CSS [mix-blend-mode](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode) property for links.',\n        type: 'string',\n        required: false,\n        defaultValue: svgDefaultProps.linkBlendMode,\n        controlType: 'blendMode',\n        group: 'Links',\n    },\n    {\n        key: 'enableLinkGradient',\n        group: 'Links',\n        help: 'Enable/disable gradient from source/target nodes instead of plain color.',\n        type: 'boolean',\n        required: false,\n        defaultValue: svgDefaultProps.enableLinkGradient,\n        flavors: ['svg', 'api'],\n        controlType: 'switch',\n    },\n    {\n        key: 'enableLabels',\n        group: 'Labels',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: svgDefaultProps.enableLabels,\n        flavors: ['svg', 'api'],\n        controlType: 'switch',\n    },\n    {\n        key: 'labelPosition',\n        group: 'Labels',\n        help: 'Label position.',\n        type: 'string',\n        required: false,\n        defaultValue: svgDefaultProps.labelPosition,\n        flavors: ['svg', 'api'],\n        controlType: 'radio',\n        controlOptions: {\n            choices: ['inside', 'outside'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'labelPadding',\n        group: 'Labels',\n        help: 'Label padding from node.',\n        required: false,\n        defaultValue: svgDefaultProps.labelPadding,\n        type: 'number',\n        flavors: ['svg', 'api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'labelTextColor',\n        group: 'Labels',\n        help: 'Method to compute label text color.',\n        description: `\n            how to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: svgDefaultProps.labelTextColor,\n        flavors: ['svg', 'api'],\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'labelOrientation',\n        group: 'Labels',\n        help: 'Label orientation.',\n        type: 'string',\n        required: false,\n        defaultValue: svgDefaultProps.labelOrientation,\n        flavors: ['svg', 'api'],\n        controlType: 'radio',\n        controlOptions: {\n            choices: ['horizontal', 'vertical'].map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: svgDefaultProps.isInteractive,\n        controlType: 'switch',\n    },\n    {\n        key: 'nodeTooltip',\n        flavors: ['svg'],\n        help: `Tooltip custom component for nodes.`,\n        type: 'FunctionComponent<{ node: SankeyNodeDatum }>',\n        required: false,\n        group: 'Interactivity',\n        description: `\n            Allows complete node tooltip customisation, it must return\n            a valid HTML element and will receive the node as a property.\n                        \n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'linkTooltip',\n        flavors: ['svg'],\n        help: `Tooltip custom component for links.`,\n        type: 'FunctionComponent<{ link: SankeyLinkDatum }>',\n        required: false,\n        group: 'Interactivity',\n        description: `\n            Allows complete link tooltip customisation, it must return\n            a valid HTML element and will receive the link as a property.\n                        \n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onClick handler, it receives target node or link data and mouse event.',\n        type: '(target: SankeyNodeDatum | SankeyLinkDatum, event) => void',\n        required: false,\n    },\n    ...motionProperties(['svg'], svgDefaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","import React from 'react'\nimport omit from 'lodash/omit'\nimport { generateSankeyData } from '@nivo/generators'\nimport {\n    ResponsiveSankey,\n    svgDefaultProps,\n    SankeySvgProps,\n    DefaultNode,\n    DefaultLink,\n} from '@nivo/sankey'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/sankey/meta.yml'\nimport mapper from '../../data/components/sankey/mapper'\nimport { groups } from '../../data/components/sankey/props'\n\ntype MappedSankeyProps = Omit<SankeySvgProps<DefaultNode, DefaultLink>, 'data' | 'width' | 'height'>\ntype UnmappedSankeyProps = Omit<MappedSankeyProps, 'valueFormat'> & {\n    valueFormat: {\n        format: string\n        enabled: boolean\n    }\n}\n\nconst initialProperties: UnmappedSankeyProps = {\n    margin: {\n        top: 40,\n        right: 160,\n        bottom: 40,\n        left: 50,\n    },\n\n    valueFormat: { format: '', enabled: false },\n\n    layout: 'horizontal' as const,\n    align: 'justify' as const,\n    sort: 'auto' as const,\n    colors: { scheme: 'category10' as const },\n\n    nodeOpacity: 1,\n    nodeHoverOpacity: 1,\n    nodeHoverOthersOpacity: 0.35,\n    nodeThickness: 18,\n    nodeInnerPadding: 0,\n    nodeSpacing: 24,\n    nodeBorderWidth: 0,\n    nodeBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.8]],\n    },\n    nodeBorderRadius: 3,\n\n    linkOpacity: 0.5,\n    linkHoverOpacity: 0.6,\n    linkHoverOthersOpacity: 0.1,\n    linkContract: 3,\n    linkBlendMode: 'multiply' as const,\n    enableLinkGradient: true,\n\n    enableLabels: true,\n    labelPosition: 'outside' as const,\n    labelOrientation: 'vertical' as const,\n    labelPadding: 16,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    animate: svgDefaultProps.animate,\n    motionConfig: svgDefaultProps.motionConfig,\n\n    isInteractive: svgDefaultProps.isInteractive,\n\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            translateX: 130,\n            itemWidth: 100,\n            itemHeight: 14,\n            itemDirection: 'right-to-left',\n            itemsSpacing: 2,\n            itemTextColor: '#999',\n            symbolSize: 14,\n            onClick: (d: any) => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst generateData = () => generateSankeyData({ nodeCount: 6, maxIterations: 8 })\n\nconst Sankey = () => (\n    <ComponentTemplate<\n        UnmappedSankeyProps,\n        MappedSankeyProps,\n        SankeySvgProps<DefaultNode, DefaultLink>['data']\n    >\n        name=\"Sankey\"\n        meta={meta.Sankey}\n        icon=\"sankey\"\n        flavors={meta.flavors}\n        currentFlavor=\"svg\"\n        properties={groups}\n        initialProperties={initialProperties}\n        defaultProperties={svgDefaultProps}\n        propertiesMapper={mapper}\n        generateData={generateData}\n    >\n        {(properties, data, theme, logAction) => {\n            return (\n                <ResponsiveSankey\n                    data={data}\n                    {...properties}\n                    theme={theme}\n                    onClick={node => {\n                        let label\n                        if ('id' in node) {\n                            label = `[node] ${node.id}: ${node.value}`\n                        } else {\n                            label = `[link] ${node.source.id} > ${node.target.id}: ${node.value}`\n                        }\n\n                        logAction({\n                            type: 'click',\n                            label,\n                            data: omit(node, [\n                                'sourceLinks',\n                                'targetLinks',\n                                'source.sourceLinks',\n                                'source.targetLinks',\n                                'target.sourceLinks',\n                                'target.targetLinks',\n                            ]),\n                        })\n                    }}\n                />\n            )\n        }}\n    </ComponentTemplate>\n)\n\nexport default Sankey\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    distance: number\n    source: string\n    target: string\n}\n\ntype ExtraNode = {\n    color: string\n    depth: number\n    id: string\n    radius: number\n}\n\nexport const generateNetworkData = ({\n    rootNodeRadius = 12,\n    minMidNodes = 6,\n    maxMidNodes = 16,\n    midNodeRadius = 8,\n    minLeaves = 4,\n    maxLeaves = 16,\n    leafRadius = 4,\n} = {}) => {\n    const rootNode = {\n        id: '0',\n        radius: rootNodeRadius,\n        depth: 0,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `${k + 1}`,\n        radius: midNodeRadius,\n        depth: 1,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: '0',\n            target: source.id,\n            distance: 50,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 70,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                radius: leafRadius,\n                depth: 2,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 30,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit?: number | null, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: Record<string, unknown> = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","line","data","i","d","buffer","n","length","defined0","lineStart","lineEnd","point","arguments","p","day","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","days","range","durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","floor","ceil","round","d0","d1","offset","stop","previous","push","filter","test","setTime","every","isFinite","settingsMapper","valueFormat","mapFormat","props","key","group","type","required","help","flavors","description","controlType","defaultValue","svgDefaultProps","controlOptions","choices","label","value","sankeyAlignmentPropKeys","map","enableControlForFlavors","unit","min","max","themeProperty","motionProperties","groups","groupProperties","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","format","enabled","undefined","initialProperties","margin","top","right","bottom","left","layout","align","sort","colors","scheme","nodeOpacity","nodeHoverOpacity","nodeHoverOthersOpacity","nodeThickness","nodeInnerPadding","nodeSpacing","nodeBorderWidth","nodeBorderColor","from","modifiers","nodeBorderRadius","linkOpacity","linkHoverOpacity","linkHoverOthersOpacity","linkContract","linkBlendMode","enableLinkGradient","enableLabels","labelPosition","labelOrientation","labelPadding","labelTextColor","animate","motionConfig","isInteractive","legends","anchor","direction","translateX","itemWidth","itemHeight","itemDirection","itemsSpacing","itemTextColor","symbolSize","onClick","alert","JSON","stringify","effects","on","style","generateData","generateSankeyData","nodeCount","maxIterations","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","theme","logAction","node","id","source","target","randColor","random","countryCodes","names","programmingLanguages","generateBulletData","title","subtitle","rangeCount","measureCount","markerCount","float","ranges","reduce","remaining","acc","measures","markers","generateChordData","size","minValue","maxValue","maxSize","selectedKeys","slice","matrix","generateNetworkData","rootNodeRadius","minMidNodes","maxMidNodes","midNodeRadius","minLeaves","maxLeaves","leafRadius","rootNode","radius","depth","color","nodes","Array","k","links","extraNodes","distance","concat","generateParallelCoordinatesData","shuffle","availableNodes","getNodeTargets","currentPath","targets","includes","join","targetId","getNodesTargets","targetsById","link","assign","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","categoryCount","groupIndex","price","index","datum","volume","categories","randomizeSwarmPlotData","previousData","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","language","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","types","country","find","generateSeries","ids","xKeys","generateDayCounts","to","timeDays","dayFormat","timeFormat","generateOrderedDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","copyArray","shuffleSelf","module","exports","array","nativeFloor","nativeRandom","lower","upper","values","collection","arrayMap","object","baseRandom","lastIndex","rand","baseClone","CLONE_DEEP_FLAG","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","isArray","baseValues"],"sourceRoot":""}