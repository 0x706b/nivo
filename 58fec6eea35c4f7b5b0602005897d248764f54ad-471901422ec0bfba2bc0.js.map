{"version":3,"sources":["webpack:///../node_modules/lodash/_baseIsDate.js","webpack:///./src/data/components/line/props.js","webpack:///./src/data/components/line/generator.js","webpack:///./src/data/components/line/mapper.js","webpack:///../node_modules/lodash/uniqBy.js","webpack:///./src/lib/settings.js","webpack:///../node_modules/lodash/isDate.js","webpack:///../node_modules/d3-scale/node_modules/d3-time/src/utcMonth.js","webpack:///../node_modules/d3-scale/node_modules/d3-time/src/utcHour.js","webpack:///../node_modules/d3-scale/node_modules/d3-time/src/utcMinute.js","webpack:///../src/linearScale.js","webpack:///../src/logScale.js","webpack:///../src/symlogScale.js","webpack:///../src/pointScale.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../src/timeHelpers.js","webpack:///../src/timeScale.js","webpack:///../node_modules/d3-scale/src/utcTime.js","webpack:///../src/bandScale.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/compute.js","webpack:///../src/index.js","webpack:///./src/data/components/line/defaults.js"],"names":["baseGetTag","isObjectLike","module","exports","value","props","key","group","help","description","required","type","controlType","controlOptions","disabled","choices","map","v","label","disabledValue","defaultValue","min","max","enableControlForFlavors","unit","step","defaults","curve","lineCurvePropKeys","themeProperty","colors","lineWidth","enableArea","areaBaselineValue","areaOpacity","flavors","areaBlendMode","defsProperties","layers","enablePoints","pointSize","pointColor","pointBorderWidth","pointBorderColor","enablePointLabel","choice","dotDefaults","labelYOffset","enableGridX","enableGridY","axesProperties","isInteractive","useMesh","debugMesh","enableSlicesTooltip","debugSlices","enableCrosshair","crosshairType","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","legend","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","symbolShape","itemDirection","itemTextColor","onClick","data","alert","JSON","stringify","effects","on","style","itemBackground","itemOpacity","motionProperties","groups","groupProperties","generateLightDataSet","generateSeries","generateHeavyDataSet","range","settingsMapper","pointLabel","d","x","y","xFormat","mapFormat","yFormat","axisTop","mapAxis","axisRight","axisBottom","axisLeft","exclude","baseIteratee","baseUniq","array","iteratee","length","mapping","settings","options","overrides","Object","keys","forEach","omit","upperFirst","enable","format","enabled","undefined","baseIsDate","baseUnary","nodeUtil","nodeIsDate","isDate","utcMonth","interval","date","setUTCDate","setUTCHours","setUTCMonth","getUTCMonth","start","end","getUTCFullYear","utcHour","setUTCMinutes","setTime","duration","getUTCHours","utcMinute","setUTCSeconds","getUTCMinutes","linearScalePropTypes","PropTypes","stacked","reverse","clamp","nice","logScalePropTypes","base","symLogScalePropTypes","constant","pointScalePropTypes","isRequired","_defineProperty","obj","defineProperty","enumerable","configurable","writable","timePrecisions","precisionCutOffs","precisionCutOffsByType","createDateNormalizer","precision","useUTC","precisionFn","cutOff","createPrecisionMethod","parseTime","utcParse","timeParse","timeScale","axis","values","xy","size","normalize","minValue","maxValue","scale","init","apply","utcYear","utcWeek","utcDay","domain","Date","UTC","arguments","scaleUtc","scaleTime","timeScalePropTypes","bandScalePropTypes","round","bool","_arrayLikeToArray","arr","len","i","arr2","Array","_toConsumableArray","isArray","arrayLikeToArray","arrayWithoutHoles","iter","Symbol","iterator","from","iterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","test","unsupportedIterableToArray","TypeError","nonIterableSpread","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","getOtherAxis","compareValues","a","compareDateValues","b","computeXYScalesForSeries","_series","series","serie","generateSeriesXY","xScaleSpec","stackX","yScaleSpec","stackY","xScale","computeScale","yScale","spec","scaleLinear","linearScale","scalePoint","pointScale","hasZero","hasMixedSign","sign","Math","scaleLog","logScale","scaleSymlog","symlogScale","generateSeriesAxis","getValue","setValue","scaleSpec","parseFloat","all","uniq","sortBy","uniqBy","last","stackAxis","otherAxis","compare","stack","datum","stackValue","head","scalePropType","width","height","margin","top","right","bottom","left","LineDefaultProps","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","theme","pointLabelYOffset","enableSlices"],"mappings":"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","file":"58fec6eea35c4f7b5b0602005897d248764f54ad-471901422ec0bfba2bc0.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { lineCurvePropKeys, DotsItemDefaultProps as dotDefaults } from '@nivo/core'\nimport { LineDefaultProps as defaults } from '@nivo/line'\nimport {\n    themeProperty,\n    axesProperties,\n    motionProperties,\n    getLegendsProps,\n    groupProperties,\n    defsProperties,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:   string | number\n                data: Array<{\n                    x: number | string | Date\n                    y: number | string | Date\n                }>\n            }>\n            \\`\\`\\`\n        `,\n        required: true,\n        type: 'object[]',\n    },\n    {\n        key: 'xScale',\n        type: 'object',\n        group: 'Base',\n        help: `X scale configuration.`,\n        controlType: 'object',\n        controlOptions: {\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type.`,\n                    type: 'string',\n                    controlType: 'choices',\n                    controlOptions: {\n                        disabled: true,\n                        choices: ['linear', 'point'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'xFormat',\n        group: 'Base',\n        help: 'Optional formatter for x values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'Function | string',\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'yScale',\n        type: 'object',\n        help: `Y scale configuration.`,\n        group: 'Base',\n        controlType: 'object',\n        controlOptions: {\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type.`,\n                    type: 'string',\n                    controlType: 'choices',\n                    controlOptions: {\n                        disabled: true,\n                        choices: ['linear', 'point'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n                {\n                    key: 'stacked',\n                    help: 'Enable/disable stacked mode.',\n                    type: 'boolean',\n                    required: false,\n                    controlType: 'switch',\n                },\n                {\n                    key: 'min',\n                    help: 'Minimum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Maximum scale value.',\n                    required: false,\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        disabledValue: 'auto',\n                        defaultValue: 1200,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'yFormat',\n        group: 'Base',\n        help: 'Optional formatter for y values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'Function | string',\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width, not required when using responsive variant.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height, not required when using responsive variant.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Style',\n        controlOptions: {\n            choices: lineCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'lineWidth',\n        help: 'Line width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.lineWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'enableArea',\n        help: 'Enable/disable area below each line.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableArea,\n        controlType: 'switch',\n        group: 'Style',\n    },\n    {\n        key: 'areaBaselineValue',\n        help: 'Define the value to be used for area baseline.',\n        description: `\n            Define the value to be used for area baseline.\n            Please note that this value isn't the\n            position of the baseline but the value used\n            to compute it.\n        `,\n        type: 'number | string | Date',\n        required: false,\n        defaultValue: defaults.areaBaselineValue,\n        controlType: 'range',\n        group: 'Style',\n        controlOptions: {\n            min: 0,\n            max: 200,\n            step: 10,\n        },\n    },\n    {\n        key: 'areaOpacity',\n        help: 'Area opacity (0~1), depends on enableArea.',\n        required: false,\n        defaultValue: defaults.areaOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'areaBlendMode',\n        flavors: ['svg'],\n        help: 'Defines CSS mix-blend-mode property.',\n        description: `\n            Defines CSS \\`mix-blend-mode\\` property for areas,\n            see\n            [MDN documentation](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode).\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.areaBlendMode,\n        controlType: 'blendMode',\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this property to insert extra layers\n            to the chart, this extra layer must be\n            a function which will receive the chart\n            computed data and must return a valid SVG element.\n        `,\n        required: false,\n        defaultValue: defaults.layers,\n    },\n    {\n        key: 'enablePoints',\n        help: 'Enable/disable points.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enablePoints,\n        controlType: 'switch',\n        group: 'Points',\n    },\n    {\n        key: 'pointSymbol',\n        flavors: ['svg'],\n        help:\n            'Overrides default point circle. The function will receive `size`, `color`, `borderWidth` and `borderColor` props and must return a valid SVG element.',\n        type: 'Function',\n        required: false,\n        group: 'Points',\n    },\n    {\n        key: 'pointSize',\n        help: 'Size of the points.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.pointSize,\n        controlType: 'range',\n        group: 'Points',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 20,\n        },\n    },\n    {\n        key: 'pointColor',\n        help: 'Method to compute points color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.pointColor,\n        controlType: 'inheritedColor',\n        group: 'Points',\n    },\n    {\n        key: 'pointBorderWidth',\n        help: 'Width of the points border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.pointBorderWidth,\n        controlType: 'lineWidth',\n        group: 'Points',\n    },\n    {\n        key: 'pointBorderColor',\n        help: 'Method to compute points border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.pointBorderColor,\n        controlType: 'inheritedColor',\n        group: 'Points',\n    },\n    {\n        key: 'enablePointLabel',\n        flavors: ['svg', 'api'],\n        group: 'Points',\n        help: 'Enable/disable points label.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enablePointLabel,\n        controlType: 'switch',\n    },\n    {\n        key: 'pointLabel',\n        flavors: ['svg', 'api'],\n        group: 'Points',\n        help:\n            'Property to use to determine point label. If a function is provided, it will receive current point data and should return the desired label.',\n        type: 'string',\n        required: false,\n        controlType: 'choices',\n        controlOptions: {\n            choices: ['y', 'yFormatted', 'x', 'xFormatted', `d => \\`\\${d.x}: \\${d.y}\\``].map(\n                choice => ({\n                    label: choice,\n                    value: choice,\n                })\n            ),\n        },\n    },\n    {\n        key: 'pointLabelYOffset',\n        flavors: ['svg', 'api'],\n        group: 'Points',\n        help: 'Label Y offset from point shape.',\n        type: 'number',\n        required: false,\n        defaultValue: dotDefaults.labelYOffset,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: -24,\n            max: 24,\n        },\n    },\n    {\n        key: 'enableGridX',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    {\n        key: 'gridXValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for vertical grid lines.',\n        type: 'Array<number | string | Date>',\n        required: false,\n    },\n    {\n        key: 'enableGridY',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridY,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    {\n        key: 'gridYValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for horizontal grid lines.',\n        type: 'Array<number | string | Date>',\n        required: false,\n    },\n    ...axesProperties(),\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'useMesh',\n        flavors: ['svg'],\n        help: 'Use a voronoi mesh to detect mouse interactions, enableSlices must be disabled',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.useMesh,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'debugMesh',\n        flavors: ['svg', 'canvas'],\n        help: 'Display mesh used to detect mouse interactions (voronoi cells).',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.debugMesh,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: `onMouseEnter handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: `onMouseMove handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `onMouseLeave handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `onClick handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `Custom point tooltip`,\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'enableSlices',\n        group: 'Interactivity',\n        flavors: ['svg'],\n        help: `Enable/disable slices tooltip for x or y axis, automatically disable mesh.`,\n        type: `'x' | 'y' | false`,\n        required: false,\n        defaultValue: defaults.enableSlicesTooltip,\n        controlType: 'choices',\n        controlOptions: {\n            choices: [\n                {\n                    label: 'false',\n                    value: false,\n                },\n                {\n                    label: 'x',\n                    value: 'x',\n                },\n                {\n                    label: 'y',\n                    value: 'y',\n                },\n            ],\n        },\n    },\n    {\n        key: 'debugSlices',\n        flavors: ['svg'],\n        help: 'Display area used to detect mouse interactions for slices.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.debugSlices,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'sliceTooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `Custom slice tooltip`,\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'enableCrosshair',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'Enable/disable crosshair.',\n        type: 'boolean',\n        required: false,\n        controlType: 'switch',\n        defaultValue: defaults.enableCrosshair,\n    },\n    {\n        key: 'crosshairType',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        required: false,\n        defaultValue: defaults.crosshairType,\n        help: `Crosshair type, forced to slices axis if enabled.`,\n        type: 'string',\n        controlType: 'choices',\n        controlOptions: {\n            disabled: true,\n            choices: [\n                'x',\n                'y',\n                'top-left',\n                'top',\n                'top-right',\n                'right',\n                'bottom-right',\n                'bottom',\n                'bottom-left',\n                'left',\n                'cross',\n            ].map(v => ({\n                label: v,\n                value: v,\n            })),\n        },\n    },\n    {\n        key: 'legends',\n        flavors: ['svg', 'canvas'],\n        type: 'object[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                anchor: 'left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 4,\n                symbolSize: 20,\n                symbolShape: 'circle',\n                itemDirection: 'left-to-right',\n                itemTextColor: '#777',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1,\n                        },\n                    },\n                ],\n            },\n        },\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport range from 'lodash/range'\nimport { generateSeries } from '@nivo/generators'\n\nexport const generateLightDataSet = () => {\n    return generateSeries(\n        ['japan', 'france', 'us', 'germany', 'norway'],\n        [\n            'plane',\n            'helicopter',\n            'boat',\n            'train',\n            'subway',\n            'bus',\n            'car',\n            'moto',\n            'bicycle',\n            'horse',\n            'skateboard',\n            'others',\n        ]\n    )\n}\n\nexport const generateHeavyDataSet = () => {\n    return generateSeries(\n        [\n            'japan',\n            'brazil',\n            'france',\n            'us',\n            'germany',\n            'norway',\n            'china',\n            'algeria',\n            'mexico',\n            'finland',\n            'australia',\n        ],\n        range(121)\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        pointLabel: value => {\n            if (value === `d => \\`\\${d.x}: \\${d.y}\\``) return d => `${d.x}: ${d.y}`\n            return value\n        },\n        xFormat: mapFormat,\n        yFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping, { exclude = [] } = {}) => (settings, options = {}) => {\n    const overrides = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = type => (value, settings) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }) => (enabled === true ? format : undefined)\n","var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n","import interval from \"./interval.js\";\nvar utcMonth = interval(function (date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function (start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function (date) {\n  return date.getUTCMonth();\n});\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;","import interval from \"./interval.js\";\nimport { durationHour } from \"./duration.js\";\nvar utcHour = interval(function (date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getUTCHours();\n});\nexport default utcHour;\nexport var utcHours = utcHour.range;","import interval from \"./interval.js\";\nimport { durationMinute } from \"./duration.js\";\nvar utcMinute = interval(function (date) {\n  date.setUTCSeconds(0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getUTCMinutes();\n});\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scaleLinear } from 'd3-scale'\nimport PropTypes from 'prop-types'\n\nexport const linearScale = (\n    { axis, min = 0, max = 'auto', stacked = false, reverse = false, clamp = false, nice = false },\n    xy,\n    width,\n    height\n) => {\n    const values = xy[axis]\n    const size = axis === 'x' ? width : height\n\n    let minValue = min\n    if (min === 'auto') {\n        minValue = stacked === true ? values.minStacked : values.min\n    }\n    let maxValue = max\n    if (max === 'auto') {\n        maxValue = stacked === true ? values.maxStacked : values.max\n    }\n\n    const scale = scaleLinear().rangeRound(axis === 'x' ? [0, size] : [size, 0])\n\n    if (reverse === true) scale.domain([maxValue, minValue])\n    else scale.domain([minValue, maxValue])\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'number') scale.nice(nice)\n\n    scale.type = 'linear'\n    scale.stacked = stacked\n    scale.clamp(clamp)\n\n    return scale\n}\n\nexport const linearScalePropTypes = {\n    type: PropTypes.oneOf(['linear']).isRequired,\n    min: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    max: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    stacked: PropTypes.bool,\n    reverse: PropTypes.bool,\n    clamp: PropTypes.bool,\n    nice: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scaleLog } from 'd3-scale'\nimport PropTypes from 'prop-types'\n\nexport const logScale = ({ axis, base = 10, min = 'auto', max = 'auto' }, xy, width, height) => {\n    const values = xy[axis]\n    const size = axis === 'x' ? width : height\n\n    const hasZero = values.all.some(v => v === 0)\n    let sign\n    let hasMixedSign = false\n    values.all\n        .filter(v => v != null)\n        .forEach(v => {\n            if (hasMixedSign === true) return\n            if (sign === undefined) {\n                sign = Math.sign(v)\n            } else if (Math.sign(v) !== sign) {\n                hasMixedSign = true\n            }\n        })\n\n    if (hasZero || hasMixedSign) {\n        throw new Error(\n            [\n                `a log scale domain must be strictly-positive or strictly-negative,`,\n                `and must not include or cross zero.`,\n            ].join('\\n')\n        )\n    }\n\n    let minValue = min\n    if (min === 'auto') {\n        minValue = values.min\n    }\n    let maxValue = max\n    if (max === 'auto') {\n        maxValue = values.max\n    }\n\n    const scale = scaleLog()\n        .domain([minValue, maxValue])\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .base(base)\n        .nice()\n\n    scale.type = 'log'\n\n    return scale\n}\n\nexport const logScalePropTypes = {\n    type: PropTypes.oneOf(['log']).isRequired,\n    base: PropTypes.number,\n    min: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    max: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scaleSymlog } from 'd3-scale'\nimport PropTypes from 'prop-types'\n\nexport const symlogScale = (\n    { axis, constant = 1, min = 'auto', max = 'auto' },\n    xy,\n    width,\n    height\n) => {\n    const values = xy[axis]\n    const size = axis === 'x' ? width : height\n\n    let minValue = min\n    if (min === 'auto') {\n        minValue = values.min\n    }\n\n    let maxValue = max\n    if (max === 'auto') {\n        maxValue = values.max\n    }\n\n    const scale = scaleSymlog()\n        .domain([minValue, maxValue])\n        .constant(constant)\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .nice()\n\n    scale.type = 'symlog'\n\n    return scale\n}\n\nexport const symLogScalePropTypes = {\n    type: PropTypes.oneOf(['symlog']).isRequired,\n    constant: PropTypes.number,\n    min: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n    max: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint } from 'd3-scale'\nimport PropTypes from 'prop-types'\n\nexport const pointScale = ({ axis }, xy, width, height) => {\n    const values = xy[axis]\n    const size = axis === 'x' ? width : height\n\n    const scale = scalePoint().range([0, size]).domain(values.all)\n\n    scale.type = 'point'\n\n    return scale\n}\n\nexport const pointScalePropTypes = {\n    type: PropTypes.oneOf(['point']).isRequired,\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { timeParse, utcParse } from 'd3-time-format'\n\nexport const TIME_PRECISION_MILLISECOND = 'millisecond'\nexport const TIME_PRECISION_SECOND = 'second'\nexport const TIME_PRECISION_MINUTE = 'minute'\nexport const TIME_PRECISION_HOUR = 'hour'\nexport const TIME_PRECISION_DAY = 'day'\nexport const TIME_PRECISION_MONTH = 'month'\nexport const TIME_PRECISION_YEAR = 'year'\n\nexport const timePrecisions = [\n    TIME_PRECISION_MILLISECOND,\n    TIME_PRECISION_SECOND,\n    TIME_PRECISION_MINUTE,\n    TIME_PRECISION_HOUR,\n    TIME_PRECISION_DAY,\n    TIME_PRECISION_MONTH,\n    TIME_PRECISION_YEAR,\n]\n\nexport const precisionCutOffs = [\n    date => date.setMilliseconds(0),\n    date => date.setSeconds(0),\n    date => date.setMinutes(0),\n    date => date.setHours(0),\n    date => date.setDate(1),\n    date => date.setMonth(0),\n]\n\nexport const precisionCutOffsByType = {\n    [TIME_PRECISION_MILLISECOND]: [],\n    [TIME_PRECISION_SECOND]: precisionCutOffs.slice(0, 1),\n    [TIME_PRECISION_MINUTE]: precisionCutOffs.slice(0, 2),\n    [TIME_PRECISION_HOUR]: precisionCutOffs.slice(0, 3),\n    [TIME_PRECISION_DAY]: precisionCutOffs.slice(0, 4),\n    [TIME_PRECISION_MONTH]: precisionCutOffs.slice(0, 5),\n    [TIME_PRECISION_YEAR]: precisionCutOffs.slice(0, 6),\n}\n\nexport const createPrecisionMethod = precision => date => {\n    precisionCutOffsByType[precision].forEach(cutOff => {\n        cutOff(date)\n    })\n    return date\n}\n\nexport const createDateNormalizer = ({\n    format = 'native',\n    precision = 'millisecond',\n    useUTC = true,\n}) => {\n    const precisionFn = createPrecisionMethod(precision)\n    if (format === 'native') return v => precisionFn(v)\n\n    const parseTime = useUTC ? utcParse(format) : timeParse(format)\n    return v => precisionFn(parseTime(v))\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scaleTime, scaleUtc } from 'd3-scale'\nimport PropTypes from 'prop-types'\nimport { createDateNormalizer, timePrecisions, TIME_PRECISION_MILLISECOND } from './timeHelpers'\n\nexport const timeScale = (\n    {\n        axis,\n        format = 'native',\n        precision = TIME_PRECISION_MILLISECOND,\n        min = 'auto',\n        max = 'auto',\n        useUTC = true,\n        nice = false,\n    },\n    xy,\n    width,\n    height\n) => {\n    const values = xy[axis]\n    const size = axis === 'x' ? width : height\n\n    const normalize = createDateNormalizer({ format, precision, useUTC })\n\n    let minValue = min\n    if (min === 'auto') {\n        minValue = values.min\n    } else if (format !== 'native') {\n        minValue = normalize(min)\n    }\n\n    let maxValue = max\n    if (max === 'auto') {\n        maxValue = values.max\n    } else if (format !== 'native') {\n        maxValue = normalize(max)\n    }\n\n    const scale = useUTC ? scaleUtc() : scaleTime()\n    scale.domain([minValue, maxValue]).range([0, size])\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'object' || typeof nice === 'number') scale.nice(nice)\n\n    scale.type = 'time'\n    scale.useUTC = useUTC\n\n    return scale\n}\n\nexport const timeScalePropTypes = {\n    type: PropTypes.oneOf(['time']).isRequired,\n    format: PropTypes.string,\n    precision: PropTypes.oneOf(timePrecisions),\n    nice: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.object]),\n}\n","import { calendar } from \"./time.js\";\nimport { utcFormat } from \"d3-time-format\";\nimport { utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond } from \"d3-time\";\nimport { initRange } from \"./init.js\";\nexport default function utcTime() {\n  return initRange.apply(calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const bandScalePropTypes = {\n    type: PropTypes.oneOf(['band']).isRequired,\n    round: PropTypes.bool,\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport sortBy from 'lodash/sortBy'\nimport last from 'lodash/last'\nimport isDate from 'lodash/isDate'\nimport { linearScale } from './linearScale'\nimport { logScale } from './logScale'\nimport { symlogScale } from './symlogScale'\nimport { pointScale } from './pointScale'\nimport { timeScale } from './timeScale'\nimport { createDateNormalizer } from './timeHelpers'\n\nexport const getOtherAxis = axis => (axis === 'x' ? 'y' : 'x')\n\nexport const compareValues = (a, b) => a === b\nexport const compareDateValues = (a, b) => a.getTime() === b.getTime()\n\nexport const computeXYScalesForSeries = (_series, xScaleSpec, yScaleSpec, width, height) => {\n    const series = _series.map(serie => ({\n        ...serie,\n        data: serie.data.map(d => ({ data: { ...d } })),\n    }))\n\n    let xy = generateSeriesXY(series, xScaleSpec, yScaleSpec)\n    if (xScaleSpec.stacked === true) {\n        stackX(yScaleSpec.type, xy, series)\n    }\n    if (yScaleSpec.stacked === true) {\n        stackY(xScaleSpec.type, xy, series)\n    }\n\n    const xScale = computeScale({ ...xScaleSpec, axis: 'x' }, xy, width, height)\n    const yScale = computeScale({ ...yScaleSpec, axis: 'y' }, xy, width, height)\n\n    series.forEach(serie => {\n        serie.data.forEach(d => {\n            d.position = {\n                x:\n                    xScale.stacked === true\n                        ? d.data.xStacked === null\n                            ? null\n                            : xScale(d.data.xStacked)\n                        : d.data.x === null\n                        ? null\n                        : xScale(d.data.x),\n                y:\n                    yScale.stacked === true\n                        ? d.data.yStacked === null\n                            ? null\n                            : yScale(d.data.yStacked)\n                        : d.data.y === null\n                        ? null\n                        : yScale(d.data.y),\n            }\n        })\n    })\n\n    return {\n        ...xy,\n        series,\n        xScale,\n        yScale,\n    }\n}\n\nexport const computeScale = (spec, xy, width, height) => {\n    if (spec.type === 'linear') return linearScale(spec, xy, width, height)\n    else if (spec.type === 'point') return pointScale(spec, xy, width, height)\n    else if (spec.type === 'time') return timeScale(spec, xy, width, height)\n    else if (spec.type === 'log') return logScale(spec, xy, width, height)\n    else if (spec.type === 'symlog') return symlogScale(spec, xy, width, height)\n}\n\nexport const generateSeriesXY = (series, xScaleSpec, yScaleSpec) => ({\n    x: generateSeriesAxis(series, 'x', xScaleSpec),\n    y: generateSeriesAxis(series, 'y', yScaleSpec),\n})\n\n/**\n * Normalize data according to scale type, (time => Date, linear => Number)\n * compute sorted unique values and min/max.\n */\nexport const generateSeriesAxis = (\n    series,\n    axis,\n    scaleSpec,\n    {\n        getValue = d => d.data[axis],\n        setValue = (d, v) => {\n            d.data[axis] = v\n        },\n    } = {}\n) => {\n    if (scaleSpec.type === 'linear') {\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                setValue(d, getValue(d) === null ? null : parseFloat(getValue(d)))\n            })\n        })\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        const parseTime = createDateNormalizer(scaleSpec)\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                setValue(d, getValue(d) === null ? null : parseTime(getValue(d)))\n            })\n        })\n    }\n\n    let all = []\n    series.forEach(serie => {\n        serie.data.forEach(d => {\n            all.push(getValue(d))\n        })\n    })\n\n    let min, max\n    if (scaleSpec.type === 'linear') {\n        all = uniq(all)\n        all = sortBy(all, v => v)\n        min = Math.min(...all)\n        max = Math.max(...all)\n    } else if (scaleSpec.type === 'time') {\n        all = uniqBy(all, v => v.getTime())\n        all = all\n            .slice(0)\n            .sort((a, b) => b - a)\n            .reverse()\n        min = all[0]\n        max = last(all)\n    } else {\n        all = uniq(all)\n        min = all[0]\n        max = last(all)\n    }\n\n    return { all, min, max }\n}\n\nexport const stackAxis = (axis, otherType, xy, series) => {\n    const otherAxis = getOtherAxis(axis)\n\n    let all = []\n    xy[otherAxis].all.forEach(v => {\n        const compare = isDate(v) ? compareDateValues : compareValues\n        const stack = []\n        series.forEach(serie => {\n            const datum = serie.data.find(d => compare(d.data[otherAxis], v))\n            let value = null\n            let stackValue = null\n            if (datum !== undefined) {\n                value = datum.data[axis]\n                if (value !== null) {\n                    const head = last(stack)\n                    if (head === undefined) {\n                        stackValue = value\n                    } else if (head !== null) {\n                        stackValue = head + value\n                    }\n                }\n                datum.data[`${axis}Stacked`] = stackValue\n            }\n            stack.push(stackValue)\n            all.push(stackValue)\n        })\n    })\n    all = all.filter(v => v !== null)\n\n    xy[axis].minStacked = Math.min(...all)\n    xy[axis].maxStacked = Math.max(...all)\n}\n\nexport const stackX = (xy, otherType, series) => stackAxis('x', xy, otherType, series)\nexport const stackY = (xy, otherType, series) => stackAxis('y', xy, otherType, series)\n\nexport const computeAxisSlices = (axis, data) => {\n    const otherAxis = getOtherAxis(axis)\n\n    return data[otherAxis].all.map(v => {\n        const slice = {\n            id: v,\n            [otherAxis]: data[`${otherAxis}Scale`](v),\n            data: [],\n        }\n        const compare = isDate(v) ? compareDateValues : compareValues\n        data.series.forEach(serie => {\n            const datum = serie.data.find(d => compare(d.data[otherAxis], v))\n            if (datum !== undefined) {\n                slice.data.push({\n                    ...datum,\n                    serie,\n                })\n            }\n        })\n        slice.data.reverse()\n\n        return slice\n    })\n}\n\nexport const computeXSlices = data => computeAxisSlices('x', data)\nexport const computeYSlices = data => computeAxisSlices('y', data)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { linearScalePropTypes } from './linearScale'\nimport { logScalePropTypes } from './logScale'\nimport { symLogScalePropTypes } from './symlogScale'\nimport { pointScalePropTypes } from './pointScale'\nimport { timeScalePropTypes } from './timeScale'\nimport { bandScalePropTypes } from './bandScale'\n\nexport * from './compute'\nexport * from './linearScale'\nexport * from './logScale'\nexport * from './symlogScale'\nexport * from './pointScale'\nexport * from './timeScale'\nexport * from './timeHelpers'\nexport * from './bandScale'\n\nexport const scalePropType = PropTypes.oneOfType([\n    PropTypes.shape(linearScalePropTypes),\n    PropTypes.shape(pointScalePropTypes),\n    PropTypes.shape(timeScalePropTypes),\n    PropTypes.shape(logScalePropTypes),\n    PropTypes.shape(symLogScalePropTypes),\n    PropTypes.shape(bandScalePropTypes),\n])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { LineDefaultProps } from '@nivo/line'\n\nexport default {\n    width: 600,\n    height: 400,\n\n    margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60,\n    },\n\n    xScale: {\n        type: 'point',\n    },\n    xFormat: { format: '', enabled: false },\n    yScale: {\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        stacked: true,\n        reverse: false,\n    },\n    yFormat: { format: ' >-.2f', enabled: true },\n\n    curve: LineDefaultProps.curve,\n\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: false,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'transportation',\n        legendOffset: 36,\n        legendPosition: 'middle',\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'count',\n        legendOffset: -40,\n        legendPosition: 'middle',\n    },\n\n    enableGridX: LineDefaultProps.enableGridX,\n    enableGridY: LineDefaultProps.enableGridY,\n\n    colors: LineDefaultProps.colors,\n    lineWidth: 2,\n\n    enablePoints: true,\n    pointSize: 10,\n    pointColor: { theme: 'background' },\n    pointBorderWidth: 2,\n    pointBorderColor: { from: 'serieColor' },\n    enablePointLabel: LineDefaultProps.enablePointLabel,\n    pointLabel: LineDefaultProps.pointLabel,\n    pointLabelYOffset: -12,\n\n    enableArea: LineDefaultProps.enableArea,\n    areaBlendMode: LineDefaultProps.areaBlendMode,\n    areaBaselineValue: LineDefaultProps.areaBaselineValue,\n    areaOpacity: LineDefaultProps.areaOpacity,\n\n    isInteractive: LineDefaultProps.isInteractive,\n    enableSlices: false,\n    debugSlices: false,\n\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n"],"sourceRoot":""}