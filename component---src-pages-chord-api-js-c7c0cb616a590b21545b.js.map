{"version":3,"sources":["webpack:///../node_modules/d3-array/src/ascending.js","webpack:///../node_modules/d3-array/src/bisect.js","webpack:///../node_modules/d3-array/src/bisector.js","webpack:///../node_modules/d3-array/src/cross.js","webpack:///../node_modules/d3-array/src/array.js","webpack:///../node_modules/d3-array/src/range.js","webpack:///../node_modules/d3-array/src/ticks.js","webpack:///../node_modules/d3-array/src/threshold/sturges.js","webpack:///../node_modules/d3-array/src/merge.js","webpack:///../node_modules/d3-array/src/index.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/ChordArcTooltip.js","webpack:///../src/ChordRibbonTooltip.js","webpack:///../src/props.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/hooks.js","webpack:///../src/compute.js","webpack:///../src/ChordRibbon.js","webpack:///../src/ChordRibbons.js","webpack:///../src/ChordArc.js","webpack:///../src/ChordArcs.js","webpack:///../src/ChordLabels.js","webpack:///../src/Chord.js","webpack:///../src/ChordCanvas.js","webpack:///../src/ResponsiveChord.js","webpack:///../src/ResponsiveChordCanvas.js","webpack:///./src/pages/chord/api.js","webpack:///./src/data/components/chord/props.js","webpack:///../node_modules/d3-chord/src/math.js","webpack:///../node_modules/d3-chord/src/chord.js","webpack:///../node_modules/d3-chord/src/array.js","webpack:///../node_modules/d3-chord/src/constant.js","webpack:///../node_modules/d3-chord/src/ribbon.js","webpack:///../node_modules/d3-chord/src/index.js","webpack:///./src/data/components/chord/mapper.js","webpack:///../node_modules/lodash/mapValues.js","webpack:///./src/components/components/api-client/ApiPreview.js","webpack:///./src/components/components/api-client/ApiTabs.js","webpack:///./src/components/components/api-client/ApiSubmit.js","webpack:///./src/components/components/api-client/ApiResponse.js","webpack:///./src/components/components/api-client/ApiClient.js"],"names":["a","b","NaN","f","ascending","length","compare","d","x","Array","prototype","slice","map","start","stop","step","n","arguments","i","Math","max","ceil","range","sqrt","m","merged","array","arrays","j","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","source","forEach","getOwnPropertyDescriptors","defineProperties","ChordArcTooltip","memo","arc","id","color","enableChip","ChordRibbonTooltip","ribbon","theme","useTheme","rows","commonPropTypes","PropTypes","matrix","valueFormat","padAngle","innerRadiusRatio","innerRadiusOffset","layers","arcOpacity","arcHoverOpacity","arcHoverOthersOpacity","arcBorderWidth","arcBorderColor","inheritedColorPropType","onArcMouseEnter","onArcMouseMove","onArcMouseLeave","onArcClick","arcTooltip","ribbonOpacity","ribbonHoverOpacity","ribbonHoverOthersOpacity","ribbonBorderWidth","ribbonBorderColor","ribbonBlendMode","blendModePropType","onRibbonMouseEnter","onRibbonMouseMove","onRibbonMouseLeave","onRibbonClick","ribbonTooltip","enableLabel","label","labelOffset","labelRotation","labelTextColor","colors","ordinalColorsPropType","isInteractive","legends","isRequired","commonDefaultProps","role","pixelRatio","from","modifiers","scheme","ChordDefaultProps","animate","motionStiffness","motionDamping","ChordCanvasDefaultProps","global","_arrayLikeToArray","arr","len","arr2","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","toString","call","constructor","name","test","unsupportedIterableToArray","TypeError","nonIterableRest","useChordLayout","useMemo","d3Chord","computeChordLayout","useChordGenerators","width","height","center","radius","innerRadius","ribbonRadius","arcGenerator","d3Arc","ribbonGenerator","d3Ribbon","computeChordGenerators","useChord","chord","getLabel","getLabelGenerator","formatValue","useValueFormatter","getColor","useOrdinalColorScale","ribbons","arcs","computeChordArcsAndRibbons","useChordArcsAndRibbons","useChordSelection","useState","currentArc","setCurrentArc","currentRibbon","setCurrentRibbon","selection","selectedArcIds","selectedRibbonIds","hasSelection","getArcOpacity","getRibbonOpacity","useChordLayerContext","ChordRibbon","sourceStartAngle","sourceEndAngle","targetStartAngle","targetEndAngle","opacity","borderWidth","getBorderColor","blendMode","setCurrent","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","event","handleMouseMove","handleMouseLeave","handleClick","startAngle","endAngle","fill","fillOpacity","strokeWidth","stroke","strokeOpacity","style","mixBlendMode","getRibbonAngles","firstArc","secondArc","useMiddleAngle","firstMiddleAngle","midAngle","secondMiddleAngle","angles","mapValues","angle","spring","ribbonWillEnter","interpolateColor","ribbonWillLeave","springConfig","ChordRibbons","getOpacity","useMotionConfig","_springConfig","precision","willEnter","willLeave","styles","data","interpolatedStyles","getInterpolatedColor","ChordArc","ChordArcs","ChordLabels","rotation","textProps","getPolarLabelProps","transform","pointerEvents","textAnchor","dominantBaseline","baseline","Chord","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","getLabelTextColor","useInheritedColor","getArcBorderColor","getRibbonBorderColor","layerContext","legendData","layerById","labels","containerWidth","containerHeight","layer","withContainer","getArcFromMouseEvent","canvasEl","getRelativeCursor","y","centerX","centerY","getHoveredArc","ChordCanvas","useRef","useEffect","ctx","props","degreesToRadians","legend","renderLegendToCanvas","handleMouseHover","useCallback","ref","cursor","ResponsiveChord","ResponsiveChordCanvas","generateChordData","size","ChordApi","title","keywords","meta","tags","componentName","chartClass","apiPath","flavors","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","JSON","stringify","top","right","bottom","left","group","help","description","required","type","enableControlForFlavors","controlType","controlOptions","unit","min","defaultValue","defaults","themeProperty","choices","choice","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","anchor","direction","dataFrom","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","itemDirection","alert","motionProperties","groupProperties","cos","sin","pi","PI","halfPi","tau","compareValue","sortGroups","sortSubgroups","sortChords","k","x0","dx","groupSums","groupIndex","subgroupIndex","chords","subgroups","sort","di","dj","v","a0","a1","subindex","_","defaultSource","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","context","buffer","argv","s","this","t","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","moveTo","quadraticCurveTo","closePath","constant","settingsMapper","baseAssignValue","baseForOwn","baseIteratee","module","exports","iteratee","result","Link","styled","Image","img","EmptyContainer","div","textLight","ApiPreview","responseStatus","chartUrl","href","rel","src","alt","tabs","ApiTabs","body","isLoading","currentTab","setCurrentTab","hoverTab","setHoverTab","Wrapper","className","Nav","tab","isCurrent","icon","iconColors","NavItem","Icon","Content","CodeBlock","dimensions","headerHeight","miniNavWidth","cardBackground","border","media","tablet","mobile","nav","background","span","text","LoaderContainer","loaderBarAnimation","keyframes","LoaderBar","accent","Loader","Button","ApiSubmit","render","loading","Component","Container","Header","borderLight","ResponseJson","pre","ApiResponse","response","responseContent","ApiClient","handleSettingsUpdate","settings","setState","handleDataUpdate","e","state","assign","handleSubmit","fetch","config","nivoApiUrl","method","headers","Accept","then","res","status","json","catch","console","error","component","flavorKeys","flavor","Layout","ComponentPage","ComponentHeader","ComponentFlavorSelector","current","ComponentDescription","url","ControlPanel","SubmitWrapper","ComponentSettings","currentFlavor","onChange","cardAltBackground"],"mappings":"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","file":"component---src-pages-chord-api-js-c7c0cb616a590b21545b.js","sourcesContent":["export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","import \"core-js/modules/es6.array.map\";\nvar array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","export { default as bisect, bisectRight, bisectLeft } from \"./bisect\";\nexport { default as ascending } from \"./ascending\";\nexport { default as bisector } from \"./bisector\";\nexport { default as cross } from \"./cross\";\nexport { default as descending } from \"./descending\";\nexport { default as deviation } from \"./deviation\";\nexport { default as extent } from \"./extent\";\nexport { default as histogram } from \"./histogram\";\nexport { default as thresholdFreedmanDiaconis } from \"./threshold/freedmanDiaconis\";\nexport { default as thresholdScott } from \"./threshold/scott\";\nexport { default as thresholdSturges } from \"./threshold/sturges\";\nexport { default as max } from \"./max\";\nexport { default as mean } from \"./mean\";\nexport { default as median } from \"./median\";\nexport { default as merge } from \"./merge\";\nexport { default as min } from \"./min\";\nexport { default as pairs } from \"./pairs\";\nexport { default as permute } from \"./permute\";\nexport { default as quantile } from \"./quantile\";\nexport { default as range } from \"./range\";\nexport { default as scan } from \"./scan\";\nexport { default as shuffle } from \"./shuffle\";\nexport { default as sum } from \"./sum\";\nexport { default as ticks, tickIncrement, tickStep } from \"./ticks\";\nexport { default as transpose } from \"./transpose\";\nexport { default as variance } from \"./variance\";\nexport { default as zip } from \"./zip\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChordArcTooltip = memo(({ arc }) => {\n    return (\n        <BasicTooltip\n            id={arc.label}\n            value={arc.formattedValue}\n            color={arc.color}\n            enableChip={true}\n        />\n    )\n})\n\nChordArcTooltip.displayName = 'ChordArcTooltip'\nChordArcTooltip.propTypes = {\n    arc: PropTypes.object.isRequired,\n}\n\nexport default ChordArcTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\n\nconst ChordRibbonTooltip = memo(({ ribbon }) => {\n    const theme = useTheme()\n\n    return (\n        <TableTooltip\n            theme={theme}\n            rows={[\n                [\n                    <Chip key=\"chip\" color={ribbon.source.color} />,\n                    <strong key=\"id\">{ribbon.source.label}</strong>,\n                    ribbon.source.formattedValue,\n                ],\n                [\n                    <Chip key=\"chip\" color={ribbon.target.color} />,\n                    <strong key=\"id\">{ribbon.target.label}</strong>,\n                    ribbon.target.formattedValue,\n                ],\n            ]}\n        />\n    )\n})\n\nChordRibbonTooltip.displayName = 'ChordRibbonTooltip'\nChordRibbonTooltip.propTypes = {\n    ribbon: PropTypes.object.isRequired,\n}\n\nexport default ChordRibbonTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { blendModePropType, motionPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { LegendPropShape } from '@nivo/legends'\nimport ChordArcTooltip from './ChordArcTooltip'\nimport ChordRibbonTooltip from './ChordRibbonTooltip'\n\nconst commonPropTypes = {\n    keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n    matrix: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    padAngle: PropTypes.number.isRequired,\n    innerRadiusRatio: PropTypes.number.isRequired,\n    innerRadiusOffset: PropTypes.number.isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['ribbons', 'arcs', 'labels', 'legends']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    arcOpacity: PropTypes.number.isRequired,\n    arcHoverOpacity: PropTypes.number.isRequired,\n    arcHoverOthersOpacity: PropTypes.number.isRequired,\n    arcBorderWidth: PropTypes.number.isRequired,\n    arcBorderColor: inheritedColorPropType.isRequired,\n    onArcMouseEnter: PropTypes.func,\n    onArcMouseMove: PropTypes.func,\n    onArcMouseLeave: PropTypes.func,\n    onArcClick: PropTypes.func,\n    arcTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    ribbonOpacity: PropTypes.number.isRequired,\n    ribbonHoverOpacity: PropTypes.number.isRequired,\n    ribbonHoverOthersOpacity: PropTypes.number.isRequired,\n    ribbonBorderWidth: PropTypes.number.isRequired,\n    ribbonBorderColor: inheritedColorPropType.isRequired,\n    ribbonBlendMode: blendModePropType.isRequired,\n    onRibbonMouseEnter: PropTypes.func,\n    onRibbonMouseMove: PropTypes.func,\n    onRibbonMouseLeave: PropTypes.func,\n    onRibbonClick: PropTypes.func,\n    ribbonTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelOffset: PropTypes.number.isRequired,\n    labelRotation: PropTypes.number.isRequired,\n    labelTextColor: inheritedColorPropType.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n}\n\nexport const ChordPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChordCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    padAngle: 0,\n    innerRadiusRatio: 0.9,\n    innerRadiusOffset: 0,\n\n    layers: ['ribbons', 'arcs', 'labels', 'legends'],\n\n    arcOpacity: 1,\n    arcHoverOpacity: 1,\n    arcHoverOthersOpacity: 0.15,\n    arcBorderWidth: 1,\n    arcBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.4]],\n    },\n    arcTooltip: ChordArcTooltip,\n\n    ribbonOpacity: 0.5,\n    ribbonHoverOpacity: 0.85,\n    ribbonHoverOthersOpacity: 0.15,\n    ribbonBorderWidth: 1,\n    ribbonBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.4]],\n    },\n    ribbonBlendMode: 'normal',\n    ribbonTooltip: ChordRibbonTooltip,\n\n    enableLabel: true,\n    label: 'id',\n    labelOffset: 12,\n    labelRotation: 0,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    colors: { scheme: 'nivo' },\n\n    legends: [],\n\n    isInteractive: true,\n}\n\nexport const ChordDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    role: 'img',\n}\n\nexport const ChordCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo, useState } from 'react'\nimport { useValueFormatter, getLabelGenerator } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { computeChordLayout, computeChordGenerators, computeChordArcsAndRibbons } from './compute'\n\nexport const useChordLayout = ({ padAngle }) =>\n    useMemo(() => computeChordLayout({ padAngle }), [padAngle])\n\nexport const useChordGenerators = ({ width, height, innerRadiusRatio, innerRadiusOffset }) =>\n    useMemo(\n        () =>\n            computeChordGenerators({\n                width,\n                height,\n                innerRadiusRatio,\n                innerRadiusOffset,\n            }),\n        [width, height, innerRadiusRatio, innerRadiusOffset]\n    )\n\nexport const useChordArcsAndRibbons = ({ chord, getColor, keys, matrix, getLabel, formatValue }) =>\n    useMemo(\n        () =>\n            computeChordArcsAndRibbons({\n                chord,\n                getColor,\n                keys,\n                matrix,\n                getLabel,\n                formatValue,\n            }),\n        [chord, getColor, keys, matrix, getLabel, formatValue]\n    )\n\nexport const useChord = ({\n    keys,\n    matrix,\n    label,\n    valueFormat,\n    width,\n    height,\n    innerRadiusRatio,\n    innerRadiusOffset,\n    padAngle,\n    colors,\n}) => {\n    const chord = useChordLayout({ padAngle })\n    const { center, radius, innerRadius, arcGenerator, ribbonGenerator } = useChordGenerators({\n        width,\n        height,\n        innerRadiusRatio,\n        innerRadiusOffset,\n    })\n    const getLabel = useMemo(() => getLabelGenerator(label), [label])\n    const formatValue = useValueFormatter(valueFormat)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const { arcs, ribbons } = useChordArcsAndRibbons({\n        chord,\n        getColor,\n        keys,\n        matrix,\n        getLabel,\n        formatValue,\n    })\n\n    return {\n        center,\n        chord,\n        radius,\n        innerRadius,\n        arcGenerator,\n        ribbonGenerator,\n        getColor,\n        arcs,\n        ribbons,\n    }\n}\n\nexport const useChordSelection = ({\n    arcs,\n    arcOpacity,\n    arcHoverOpacity,\n    arcHoverOthersOpacity,\n    ribbons,\n    ribbonOpacity,\n    ribbonHoverOpacity,\n    ribbonHoverOthersOpacity,\n}) => {\n    const [currentArc, setCurrentArc] = useState(null)\n    const [currentRibbon, setCurrentRibbon] = useState(null)\n\n    const selection = useMemo(() => {\n        const selectedArcIds = []\n        const selectedRibbonIds = []\n\n        if (currentArc) {\n            selectedArcIds.push(currentArc.id)\n            ribbons\n                .filter(\n                    ribbon =>\n                        ribbon.source.id === currentArc.id || ribbon.target.id === currentArc.id\n                )\n                .forEach(ribbon => {\n                    selectedRibbonIds.push(ribbon.id)\n                })\n        }\n\n        if (currentRibbon) {\n            selectedArcIds.push(currentRibbon.source.id)\n            selectedArcIds.push(currentRibbon.target.id)\n            selectedRibbonIds.push(currentRibbon.id)\n        }\n\n        return { selectedArcIds, selectedRibbonIds }\n    }, [currentArc, currentRibbon, arcs, ribbons])\n\n    const hasSelection =\n        selection.selectedArcIds.length > 1 || selection.selectedRibbonIds.length > 0\n\n    const getArcOpacity = useMemo(\n        () => arc => {\n            if (!hasSelection) return arcOpacity\n            return selection.selectedArcIds.includes(arc.id)\n                ? arcHoverOpacity\n                : arcHoverOthersOpacity\n        },\n        [selection.selectedArcIds, arcOpacity, arcHoverOpacity, arcHoverOthersOpacity]\n    )\n    const getRibbonOpacity = useMemo(\n        () => ribbon => {\n            if (!hasSelection) return ribbonOpacity\n            return selection.selectedRibbonIds.includes(ribbon.id)\n                ? ribbonHoverOpacity\n                : ribbonHoverOthersOpacity\n        },\n        [selection.selectedRibbonIds, ribbonOpacity, ribbonHoverOpacity, ribbonHoverOthersOpacity]\n    )\n\n    return {\n        currentArc,\n        setCurrentArc,\n        currentRibbon,\n        setCurrentRibbon,\n        hasSelection,\n        ...selection,\n        getArcOpacity,\n        getRibbonOpacity,\n    }\n}\n\nexport const useChordLayerContext = ({\n    center,\n    radius,\n    arcs,\n    arcGenerator,\n    ribbons,\n    ribbonGenerator,\n}) =>\n    useMemo(\n        () => ({\n            center,\n            radius,\n            arcs,\n            arcGenerator,\n            ribbons,\n            ribbonGenerator,\n        }),\n        [center, radius, arcs, arcGenerator, ribbons, ribbonGenerator]\n    )\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { arc as d3Arc } from 'd3-shape'\nimport { chord as d3Chord, ribbon as d3Ribbon } from 'd3-chord'\n\nexport const computeChordLayout = ({ padAngle }) => d3Chord().padAngle(padAngle)\n\nexport const computeChordGenerators = ({ width, height, innerRadiusRatio, innerRadiusOffset }) => {\n    const center = [width / 2, height / 2]\n    const radius = Math.min(width, height) / 2\n    const innerRadius = radius * innerRadiusRatio\n    const ribbonRadius = radius * (innerRadiusRatio - innerRadiusOffset)\n\n    const arcGenerator = d3Arc().outerRadius(radius).innerRadius(innerRadius)\n\n    const ribbonGenerator = d3Ribbon().radius(ribbonRadius)\n\n    return { center, radius, innerRadius, arcGenerator, ribbonGenerator }\n}\n\nexport const computeChordArcsAndRibbons = ({\n    chord,\n    getColor,\n    keys,\n    matrix,\n    getLabel,\n    formatValue,\n}) => {\n    const ribbons = chord(matrix)\n\n    const arcs = ribbons.groups.map(arc => {\n        arc.id = keys[arc.index]\n        arc.color = getColor(arc)\n        arc.formattedValue = formatValue(arc.value)\n        arc.label = getLabel(arc)\n\n        return arc\n    })\n\n    ribbons.forEach(ribbon => {\n        ribbon.source.id = keys[ribbon.source.index]\n        ribbon.source.color = getColor(ribbon.source)\n        ribbon.source.formattedValue = formatValue(ribbon.source.value)\n        ribbon.source.label = getLabel(ribbon.source)\n\n        ribbon.target.id = keys[ribbon.target.index]\n        ribbon.target.color = getColor(ribbon.target)\n        ribbon.target.formattedValue = formatValue(ribbon.target.value)\n        ribbon.target.label = getLabel(ribbon.target)\n\n        // ensure id remains the same even if source/target are reversed\n        ribbon.id = [ribbon.source.id, ribbon.target.id].sort().join('.')\n    })\n\n    return { arcs, ribbons }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { blendModePropType } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst ChordRibbon = memo(\n    ({\n        ribbon,\n        ribbonGenerator,\n        sourceStartAngle,\n        sourceEndAngle,\n        targetStartAngle,\n        targetEndAngle,\n        color,\n        opacity,\n        borderWidth,\n        getBorderColor,\n        blendMode,\n        isInteractive,\n        setCurrent,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(ribbon)\n                showTooltipFromEvent(React.createElement(tooltip, { ribbon }), event)\n                onMouseEnter && onMouseEnter(ribbon, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, ribbon, onMouseEnter])\n        const handleMouseMove = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                showTooltipFromEvent(React.createElement(tooltip, { ribbon }), event)\n                onMouseMove && onMouseMove(ribbon, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, ribbon, onMouseMove])\n        const handleMouseLeave = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(null)\n                hideTooltip()\n                onMouseLeave && onMouseLeave(ribbon, event)\n            }\n        }, [isInteractive, hideTooltip, ribbon, onMouseLeave])\n        const handleClick = useMemo(() => {\n            if (!isInteractive || !onClick) return undefined\n            return event => onClick(ribbon, event)\n        }, [isInteractive, ribbon, onClick])\n\n        return (\n            <path\n                d={ribbonGenerator({\n                    source: {\n                        startAngle: sourceStartAngle,\n                        endAngle: sourceEndAngle,\n                    },\n                    target: {\n                        startAngle: targetStartAngle,\n                        endAngle: targetEndAngle,\n                    },\n                })}\n                fill={color}\n                fillOpacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={getBorderColor({ ...ribbon, color })}\n                strokeOpacity={opacity}\n                style={{ mixBlendMode: blendMode }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChordRibbon.displayName = 'ChordRibbon'\nChordRibbon.propTypes = {\n    ribbon: PropTypes.object.isRequired,\n    ribbonGenerator: PropTypes.func.isRequired,\n    sourceStartAngle: PropTypes.number.isRequired,\n    sourceEndAngle: PropTypes.number.isRequired,\n    targetStartAngle: PropTypes.number.isRequired,\n    targetEndAngle: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    blendMode: blendModePropType.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default ChordRibbon\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport mapValues from 'lodash/mapValues'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { blendModePropType, midAngle, useMotionConfig } from '@nivo/core'\nimport { interpolateColor, getInterpolatedColor } from '@nivo/colors'\nimport ChordRibbon from './ChordRibbon'\n\n/**\n * Used to get ribbon angles, instead of using source and target arcs,\n * we sort arcs by value to have smooth transitions, otherwise,\n * if source|target arc value becomes greater than the other,\n * the ribbon will be reversed.\n *\n * @param {Object}  source\n * @param {Object}  target\n * @param {boolean} useMiddleAngle\n * @param {Object}  [springConfig]\n * @return {Object}\n */\nconst getRibbonAngles = ({ source, target }, useMiddleAngle, springConfig) => {\n    let firstArc\n    let secondArc\n    if (source.startAngle < target.startAngle) {\n        firstArc = source\n        secondArc = target\n    } else {\n        firstArc = target\n        secondArc = source\n    }\n\n    let angles\n    if (useMiddleAngle === true) {\n        const firstMiddleAngle = midAngle(firstArc)\n        const secondMiddleAngle = midAngle(secondArc)\n\n        angles = {\n            sourceStartAngle: firstMiddleAngle,\n            sourceEndAngle: firstMiddleAngle,\n            targetStartAngle: secondMiddleAngle,\n            targetEndAngle: secondMiddleAngle,\n        }\n    } else {\n        angles = {\n            sourceStartAngle: firstArc.startAngle,\n            sourceEndAngle: firstArc.endAngle,\n            targetStartAngle: secondArc.startAngle,\n            targetEndAngle: secondArc.endAngle,\n        }\n    }\n\n    if (!springConfig) return angles\n\n    return mapValues(angles, angle => spring(angle, springConfig))\n}\n\nconst ribbonWillEnter = ({ data: ribbon }) => ({\n    ...getRibbonAngles(ribbon, true),\n    opacity: 0,\n    ...interpolateColor(ribbon.source.color),\n})\n\nconst ribbonWillLeave = springConfig => ({ data: ribbon }) => ({\n    ...getRibbonAngles(ribbon, true, springConfig),\n    opacity: 0,\n    ...interpolateColor(ribbon.source.color, springConfig),\n})\n\nconst ChordRibbons = memo(\n    ({\n        ribbons,\n        ribbonGenerator,\n        borderWidth,\n        getBorderColor,\n        getOpacity,\n        blendMode,\n        isInteractive,\n        setCurrent,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { animate, springConfig: _springConfig } = useMotionConfig()\n\n        if (animate !== true) {\n            return (\n                <g>\n                    {ribbons.map(ribbon => {\n                        return (\n                            <ChordRibbon\n                                key={ribbon.id}\n                                ribbon={ribbon}\n                                ribbonGenerator={ribbonGenerator}\n                                sourceStartAngle={ribbon.source.startAngle}\n                                sourceEndAngle={ribbon.source.endAngle}\n                                targetStartAngle={ribbon.target.startAngle}\n                                targetEndAngle={ribbon.target.endAngle}\n                                color={ribbon.source.color}\n                                blendMode={blendMode}\n                                opacity={getOpacity(ribbon)}\n                                borderWidth={borderWidth}\n                                getBorderColor={getBorderColor}\n                                isInteractive={isInteractive}\n                                setCurrent={setCurrent}\n                                onMouseEnter={onMouseEnter}\n                                onMouseMove={onMouseMove}\n                                onMouseLeave={onMouseLeave}\n                                onClick={onClick}\n                                tooltip={tooltip}\n                            />\n                        )\n                    })}\n                </g>\n            )\n        }\n\n        const springConfig = {\n            ..._springConfig,\n            precision: 0.001,\n        }\n\n        return (\n            <TransitionMotion\n                willEnter={ribbonWillEnter}\n                willLeave={ribbonWillLeave(springConfig)}\n                styles={ribbons.map(ribbon => {\n                    return {\n                        key: ribbon.id,\n                        data: ribbon,\n                        style: {\n                            ...getRibbonAngles(ribbon, false, springConfig),\n                            opacity: spring(getOpacity(ribbon), springConfig),\n                            ...interpolateColor(ribbon.source.color, springConfig),\n                        },\n                    }\n                })}\n            >\n                {interpolatedStyles => (\n                    <>\n                        {interpolatedStyles.map(({ key, style, data: ribbon }) => {\n                            const color = getInterpolatedColor(style)\n\n                            return (\n                                <ChordRibbon\n                                    key={key}\n                                    ribbon={ribbon}\n                                    ribbonGenerator={ribbonGenerator}\n                                    sourceStartAngle={style.sourceStartAngle}\n                                    sourceEndAngle={Math.max(\n                                        style.sourceEndAngle,\n                                        style.sourceStartAngle\n                                    )}\n                                    targetStartAngle={style.targetStartAngle}\n                                    targetEndAngle={Math.max(\n                                        style.targetEndAngle,\n                                        style.targetStartAngle\n                                    )}\n                                    color={color}\n                                    blendMode={blendMode}\n                                    opacity={style.opacity}\n                                    borderWidth={borderWidth}\n                                    getBorderColor={getBorderColor}\n                                    isInteractive={isInteractive}\n                                    setCurrent={setCurrent}\n                                    onMouseEnter={onMouseEnter}\n                                    onMouseMove={onMouseMove}\n                                    onMouseLeave={onMouseLeave}\n                                    onClick={onClick}\n                                    tooltip={tooltip}\n                                />\n                            )\n                        })}\n                    </>\n                )}\n            </TransitionMotion>\n        )\n    }\n)\n\nChordRibbons.displayName = 'ChordRibbons'\nChordRibbons.propTypes = {\n    ribbons: PropTypes.array.isRequired,\n    ribbonGenerator: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    getOpacity: PropTypes.func.isRequired,\n    blendMode: blendModePropType.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default ChordRibbons\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst ChordArc = memo(\n    ({\n        arc,\n        startAngle,\n        endAngle,\n        borderWidth,\n        getBorderColor,\n        opacity,\n        arcGenerator,\n        setCurrent,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(arc)\n                showTooltipFromEvent(React.createElement(tooltip, { arc }), event)\n                onMouseEnter && onMouseEnter(arc, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, arc, onMouseEnter])\n        const handleMouseMove = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                showTooltipFromEvent(React.createElement(tooltip, { arc }), event)\n                onMouseMove && onMouseMove(arc, event)\n            }\n        }, [isInteractive, showTooltipFromEvent, tooltip, arc, onMouseMove])\n        const handleMouseLeave = useMemo(() => {\n            if (!isInteractive) return undefined\n            return event => {\n                setCurrent(null)\n                hideTooltip()\n                onMouseLeave && onMouseLeave(arc, event)\n            }\n        }, [isInteractive, hideTooltip, arc, onMouseLeave])\n        const handleClick = useMemo(() => {\n            if (!isInteractive || !onClick) return undefined\n            return event => onClick(arc, event)\n        }, [isInteractive, arc, onClick])\n\n        return (\n            <path\n                d={arcGenerator({ startAngle, endAngle })}\n                fill={arc.color}\n                fillOpacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={getBorderColor(arc)}\n                strokeOpacity={opacity}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        )\n    }\n)\n\nChordArc.displayName = 'ChordArc'\nChordArc.propTypes = {\n    arc: PropTypes.object.isRequired,\n    startAngle: PropTypes.number.isRequired,\n    endAngle: PropTypes.number.isRequired,\n    arcGenerator: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    opacity: PropTypes.number.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default ChordArc\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { interpolateColor, getInterpolatedColor } from '@nivo/colors'\nimport { useMotionConfig } from '@nivo/core'\nimport ChordArc from './ChordArc'\n\nconst ChordArcs = memo(\n    ({\n        arcs,\n        borderWidth,\n        getBorderColor,\n        getOpacity,\n        arcGenerator,\n        setCurrent,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }) => {\n        const { animate, springConfig: _springConfig } = useMotionConfig()\n\n        if (animate !== true) {\n            return arcs.map(arc => {\n                return (\n                    <ChordArc\n                        key={arc.id}\n                        arc={arc}\n                        arcGenerator={arcGenerator}\n                        startAngle={arc.startAngle}\n                        endAngle={arc.endAngle}\n                        color={arc.color}\n                        opacity={getOpacity(arc)}\n                        borderWidth={borderWidth}\n                        getBorderColor={getBorderColor}\n                        getOpacity={getOpacity}\n                        isInteractive={isInteractive}\n                        setCurrent={setCurrent}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                )\n            })\n        }\n\n        const springConfig = {\n            ..._springConfig,\n            precision: 0.001,\n        }\n\n        return (\n            <TransitionMotion\n                styles={arcs.map(arc => {\n                    return {\n                        key: arc.id,\n                        data: arc,\n                        style: {\n                            startAngle: spring(arc.startAngle, springConfig),\n                            endAngle: spring(arc.endAngle, springConfig),\n                            opacity: spring(getOpacity(arc), springConfig),\n                            ...interpolateColor(arc.color, springConfig),\n                        },\n                    }\n                })}\n            >\n                {interpolatedStyles => (\n                    <>\n                        {interpolatedStyles.map(({ key, style, data: arc }) => {\n                            const color = getInterpolatedColor(style)\n\n                            return (\n                                <ChordArc\n                                    key={key}\n                                    arc={arc}\n                                    arcGenerator={arcGenerator}\n                                    startAngle={style.startAngle}\n                                    endAngle={style.endAngle}\n                                    color={color}\n                                    opacity={style.opacity}\n                                    borderWidth={borderWidth}\n                                    getBorderColor={getBorderColor}\n                                    getOpacity={getOpacity}\n                                    isInteractive={isInteractive}\n                                    setCurrent={setCurrent}\n                                    onMouseEnter={onMouseEnter}\n                                    onMouseMove={onMouseMove}\n                                    onMouseLeave={onMouseLeave}\n                                    onClick={onClick}\n                                    tooltip={tooltip}\n                                />\n                            )\n                        })}\n                    </>\n                )}\n            </TransitionMotion>\n        )\n    }\n)\n\nChordArcs.displayName = 'ChordArcs'\nChordArcs.propTypes = {\n    arcs: PropTypes.array.isRequired,\n    arcGenerator: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    getBorderColor: PropTypes.func.isRequired,\n    getOpacity: PropTypes.func.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default ChordArcs\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { TransitionMotion, spring } from 'react-motion'\nimport { midAngle, getPolarLabelProps, useTheme } from '@nivo/core'\nimport { useMotionConfig } from '@nivo/core'\n\nconst ChordLabels = ({ arcs, radius, rotation, getColor }) => {\n    const theme = useTheme()\n    const { animate, springConfig } = useMotionConfig()\n\n    if (animate !== true) {\n        return (\n            <>\n                {arcs.map(arc => {\n                    const color = getColor(arc, theme)\n                    const angle = midAngle(arc)\n                    const textProps = getPolarLabelProps(radius, angle, rotation)\n\n                    return (\n                        <text\n                            key={arc.id}\n                            transform={`translate(${textProps.x}, ${textProps.y}) rotate(${textProps.rotate})`}\n                            style={{\n                                ...theme.labels.text,\n                                pointerEvents: 'none',\n                                fill: color,\n                            }}\n                            textAnchor={textProps.align}\n                            dominantBaseline={textProps.baseline}\n                        >\n                            {arc.label}\n                        </text>\n                    )\n                })}\n            </>\n        )\n    }\n\n    return (\n        <TransitionMotion\n            styles={arcs.map(arc => {\n                const angle = midAngle(arc)\n\n                return {\n                    key: arc.id,\n                    data: arc,\n                    style: {\n                        angle: spring(angle, springConfig),\n                    },\n                }\n            })}\n        >\n            {interpolatedStyles => (\n                <>\n                    {interpolatedStyles.map(({ key, style, data: arc }) => {\n                        const color = getColor(arc, theme)\n                        const textProps = getPolarLabelProps(radius, style.angle, rotation)\n\n                        return (\n                            <text\n                                key={key}\n                                transform={`translate(${textProps.x}, ${textProps.y}) rotate(${textProps.rotate})`}\n                                style={{\n                                    ...theme.labels.text,\n                                    pointerEvents: 'none',\n                                    fill: color,\n                                }}\n                                textAnchor={textProps.align}\n                                dominantBaseline={textProps.baseline}\n                            >\n                                {arc.label}\n                            </text>\n                        )\n                    })}\n                </>\n            )}\n        </TransitionMotion>\n    )\n}\n\nChordLabels.propTypes = {\n    arcs: PropTypes.array.isRequired,\n    radius: PropTypes.number.isRequired,\n    rotation: PropTypes.number.isRequired,\n    getColor: PropTypes.func.isRequired,\n}\n\nexport default ChordLabels\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment } from 'react'\nimport { withContainer, SvgWrapper, useDimensions, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { ChordPropTypes, ChordDefaultProps } from './props'\nimport { useChord, useChordSelection, useChordLayerContext } from './hooks'\nimport ChordRibbons from './ChordRibbons'\nimport ChordArcs from './ChordArcs'\nimport ChordLabels from './ChordLabels'\n\nconst Chord = ({\n    margin: partialMargin,\n    width,\n    height,\n\n    keys,\n    matrix,\n    label,\n    valueFormat,\n    innerRadiusRatio,\n    innerRadiusOffset,\n    padAngle,\n\n    layers,\n\n    colors,\n\n    arcBorderWidth,\n    arcBorderColor,\n    arcOpacity,\n    arcHoverOpacity,\n    arcHoverOthersOpacity,\n    arcTooltip,\n\n    ribbonBorderWidth,\n    ribbonBorderColor,\n    ribbonBlendMode,\n    ribbonOpacity,\n    ribbonHoverOpacity,\n    ribbonHoverOthersOpacity,\n    ribbonTooltip,\n\n    enableLabel,\n    labelOffset,\n    labelRotation,\n    labelTextColor,\n\n    isInteractive,\n    onArcMouseEnter,\n    onArcMouseMove,\n    onArcMouseLeave,\n    onArcClick,\n    onRibbonMouseEnter,\n    onRibbonMouseMove,\n    onRibbonMouseLeave,\n    onRibbonClick,\n\n    legends,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { center, radius, arcGenerator, ribbonGenerator, arcs, ribbons } = useChord({\n        keys,\n        matrix,\n        label,\n        valueFormat,\n        width: innerWidth,\n        height: innerHeight,\n        innerRadiusRatio,\n        innerRadiusOffset,\n        padAngle,\n        colors,\n    })\n\n    const { setCurrentArc, setCurrentRibbon, getArcOpacity, getRibbonOpacity } = useChordSelection({\n        arcs,\n        arcOpacity,\n        arcHoverOpacity,\n        arcHoverOthersOpacity,\n        ribbons,\n        ribbonOpacity,\n        ribbonHoverOpacity,\n        ribbonHoverOthersOpacity,\n    })\n\n    const theme = useTheme()\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const getArcBorderColor = useInheritedColor(arcBorderColor, theme)\n    const getRibbonBorderColor = useInheritedColor(ribbonBorderColor, theme)\n\n    const layerContext = useChordLayerContext({\n        center,\n        radius,\n        arcs,\n        arcGenerator,\n        ribbons,\n        ribbonGenerator,\n    })\n\n    if (radius <= 0) return null\n\n    const legendData = arcs.map(arc => ({\n        id: arc.id,\n        label: arc.label,\n        color: arc.color,\n    }))\n\n    const layerById = {\n        ribbons: (\n            <g key=\"ribbons\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordRibbons\n                    ribbons={ribbons}\n                    ribbonGenerator={ribbonGenerator}\n                    borderWidth={ribbonBorderWidth}\n                    getBorderColor={getRibbonBorderColor}\n                    getOpacity={getRibbonOpacity}\n                    blendMode={ribbonBlendMode}\n                    setCurrent={setCurrentRibbon}\n                    isInteractive={isInteractive}\n                    onMouseEnter={onRibbonMouseEnter}\n                    onMouseMove={onRibbonMouseMove}\n                    onMouseLeave={onRibbonMouseLeave}\n                    onClick={onRibbonClick}\n                    tooltip={ribbonTooltip}\n                />\n            </g>\n        ),\n        arcs: (\n            <g key=\"arcs\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordArcs\n                    arcs={arcs}\n                    arcGenerator={arcGenerator}\n                    borderWidth={arcBorderWidth}\n                    getBorderColor={getArcBorderColor}\n                    getOpacity={getArcOpacity}\n                    setCurrent={setCurrentArc}\n                    isInteractive={isInteractive}\n                    onMouseEnter={onArcMouseEnter}\n                    onMouseMove={onArcMouseMove}\n                    onMouseLeave={onArcMouseLeave}\n                    onClick={onArcClick}\n                    tooltip={arcTooltip}\n                />\n            </g>\n        ),\n        labels: null,\n        legends: (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                        theme={theme}\n                    />\n                ))}\n            </Fragment>\n        ),\n    }\n\n    if (enableLabel === true) {\n        layerById.labels = (\n            <g key=\"labels\" transform={`translate(${center[0]}, ${center[1]})`}>\n                <ChordLabels\n                    arcs={arcs}\n                    radius={radius + labelOffset}\n                    rotation={labelRotation}\n                    getColor={getLabelTextColor}\n                />\n            </g>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer] !== undefined) {\n                    return layerById[layer]\n                }\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{layer(layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nChord.propTypes = ChordPropTypes\nChord.defaultProps = ChordDefaultProps\n\nexport default withContainer(Chord)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useEffect, useCallback } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    midAngle,\n    getPolarLabelProps,\n    degreesToRadians,\n    getRelativeCursor,\n    getHoveredArc,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useChord, useChordSelection, useChordLayerContext } from './hooks'\nimport { ChordCanvasPropTypes, ChordCanvasDefaultProps } from './props'\n\nconst getArcFromMouseEvent = ({ event, canvasEl, center, margin, radius, innerRadius, arcs }) => {\n    const [x, y] = getRelativeCursor(canvasEl, event)\n    const centerX = margin.left + center[0]\n    const centerY = margin.top + center[1]\n\n    return getHoveredArc(centerX, centerY, radius, innerRadius, arcs, x, y)\n}\n\nconst ChordCanvas = memo(\n    ({\n        pixelRatio,\n        margin: partialMargin,\n        width,\n        height,\n        keys,\n        matrix,\n        label,\n        valueFormat,\n        innerRadiusRatio,\n        innerRadiusOffset,\n        padAngle,\n        layers,\n        colors,\n        arcBorderWidth,\n        arcBorderColor,\n        arcOpacity,\n        arcHoverOpacity,\n        arcHoverOthersOpacity,\n        arcTooltip,\n        ribbonBorderWidth,\n        ribbonBorderColor,\n        ribbonOpacity,\n        ribbonHoverOpacity,\n        ribbonHoverOthersOpacity,\n        enableLabel,\n        labelOffset,\n        labelRotation,\n        labelTextColor,\n        isInteractive,\n        onArcMouseEnter,\n        onArcMouseMove,\n        onArcMouseLeave,\n        onArcClick,\n        legends,\n    }) => {\n        const canvasEl = useRef(null)\n        const { innerWidth, innerHeight, outerWidth, outerHeight, margin } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n\n        const {\n            center,\n            radius,\n            innerRadius,\n            arcGenerator,\n            ribbonGenerator,\n            arcs,\n            ribbons,\n        } = useChord({\n            keys,\n            matrix,\n            label,\n            valueFormat,\n            width: innerWidth,\n            height: innerHeight,\n            innerRadiusRatio,\n            innerRadiusOffset,\n            padAngle,\n            colors,\n        })\n\n        const { currentArc, setCurrentArc, getArcOpacity, getRibbonOpacity } = useChordSelection({\n            arcs,\n            arcOpacity,\n            arcHoverOpacity,\n            arcHoverOthersOpacity,\n            ribbons,\n            ribbonOpacity,\n            ribbonHoverOpacity,\n            ribbonHoverOthersOpacity,\n        })\n\n        const theme = useTheme()\n        const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n        const getArcBorderColor = useInheritedColor(arcBorderColor, theme)\n        const getRibbonBorderColor = useInheritedColor(ribbonBorderColor, theme)\n\n        const layerContext = useChordLayerContext({\n            center,\n            radius,\n            arcs,\n            arcGenerator,\n            ribbons,\n            ribbonGenerator,\n        })\n\n        useEffect(() => {\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n            if (radius <= 0) return\n\n            layers.forEach(layer => {\n                if (layer === 'ribbons') {\n                    ctx.save()\n                    ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                    ribbonGenerator.context(ctx)\n                    ribbons.forEach(ribbon => {\n                        ctx.save()\n\n                        ctx.globalAlpha = getRibbonOpacity(ribbon)\n                        ctx.fillStyle = ribbon.source.color\n                        ctx.beginPath()\n                        ribbonGenerator(ribbon)\n                        ctx.fill()\n\n                        if (ribbonBorderWidth > 0) {\n                            ctx.strokeStyle = getRibbonBorderColor({\n                                ...ribbon,\n                                color: ribbon.source.color,\n                            })\n                            ctx.lineWidth = ribbonBorderWidth\n                            ctx.stroke()\n                        }\n\n                        ctx.restore()\n                    })\n\n                    ctx.restore()\n                }\n\n                if (layer === 'arcs') {\n                    ctx.save()\n                    ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                    arcGenerator.context(ctx)\n                    arcs.forEach(arc => {\n                        ctx.save()\n\n                        ctx.globalAlpha = getArcOpacity(arc)\n                        ctx.fillStyle = arc.color\n                        ctx.beginPath()\n                        arcGenerator(arc)\n                        ctx.fill()\n\n                        if (arcBorderWidth > 0) {\n                            ctx.strokeStyle = getArcBorderColor(arc)\n                            ctx.lineWidth = arcBorderWidth\n                            ctx.stroke()\n                        }\n\n                        ctx.restore()\n                    })\n\n                    ctx.restore()\n                }\n\n                if (layer === 'labels' && enableLabel === true) {\n                    ctx.save()\n                    ctx.translate(margin.left + center[0], margin.top + center[1])\n\n                    ctx.font = `${theme.labels.text.fontSize}px ${\n                        theme.labels.text.fontFamily || 'sans-serif'\n                    }`\n\n                    arcs.forEach(arc => {\n                        const angle = midAngle(arc)\n                        const props = getPolarLabelProps(radius + labelOffset, angle, labelRotation)\n\n                        ctx.save()\n                        ctx.translate(props.x, props.y)\n                        ctx.rotate(degreesToRadians(props.rotate))\n\n                        ctx.textAlign = props.align\n                        ctx.textBaseline = props.baseline\n                        ctx.fillStyle = getLabelTextColor(arc, theme)\n                        ctx.fillText(arc.label, 0, 0)\n\n                        ctx.restore()\n                    })\n\n                    ctx.restore()\n                }\n\n                if (layer === 'legends') {\n                    ctx.save()\n                    ctx.translate(margin.left, margin.top)\n\n                    const legendData = arcs.map(arc => ({\n                        id: arc.id,\n                        label: arc.label,\n                        color: arc.color,\n                    }))\n\n                    legends.forEach(legend => {\n                        renderLegendToCanvas(ctx, {\n                            ...legend,\n                            data: legendData,\n                            containerWidth: innerWidth,\n                            containerHeight: innerHeight,\n                            theme,\n                        })\n                    })\n\n                    ctx.restore()\n                }\n\n                if (typeof layer === 'function') {\n                    layer(ctx, layerContext)\n                }\n            })\n        }, [\n            canvasEl,\n            innerWidth,\n            innerHeight,\n            outerWidth,\n            outerHeight,\n            margin,\n            pixelRatio,\n            theme,\n            layers,\n            arcs,\n            arcGenerator,\n            getArcOpacity,\n            arcBorderWidth,\n            getArcBorderColor,\n            ribbons,\n            ribbonGenerator,\n            getRibbonOpacity,\n            ribbonBorderWidth,\n            getRibbonBorderColor,\n            enableLabel,\n            labelOffset,\n            labelRotation,\n            getLabelTextColor,\n            legends,\n            layerContext,\n        ])\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseHover = useCallback(\n            event => {\n                const arc = getArcFromMouseEvent({\n                    event,\n                    canvasEl: canvasEl.current,\n                    center,\n                    margin,\n                    radius,\n                    innerRadius,\n                    arcs,\n                })\n\n                if (arc) {\n                    setCurrentArc(arc)\n                    showTooltipFromEvent(React.createElement(arcTooltip, { arc }), event)\n                    !currentArc && onArcMouseEnter && onArcMouseEnter(arc, event)\n                    onArcMouseMove && onArcMouseMove(arc, event)\n                    currentArc &&\n                        currentArc.id !== arc.id &&\n                        onArcMouseLeave &&\n                        onArcMouseLeave(arc, event)\n                } else {\n                    setCurrentArc(null)\n                    hideTooltip()\n                    currentArc && onArcMouseLeave && onArcMouseLeave(currentArc, event)\n                }\n            },\n            [\n                canvasEl,\n                center,\n                margin,\n                radius,\n                innerRadius,\n                arcs,\n                setCurrentArc,\n                showTooltipFromEvent,\n                hideTooltip,\n                onArcMouseEnter,\n                onArcMouseMove,\n                onArcMouseLeave,\n            ]\n        )\n\n        const handleMouseLeave = useCallback(() => {\n            setCurrentArc(null)\n            hideTooltip()\n        }, [setCurrentArc, hideTooltip])\n\n        const handleClick = useCallback(\n            event => {\n                if (!onArcClick) return\n\n                const arc = getArcFromMouseEvent({\n                    event,\n                    canvasEl: canvasEl.current,\n                    center,\n                    margin,\n                    radius,\n                    innerRadius,\n                    arcs,\n                })\n\n                arc && onArcClick(arc, event)\n            },\n            [canvasEl, center, margin, radius, innerRadius, arcs, onArcClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                    cursor: isInteractive ? 'auto' : 'normal',\n                }}\n                onMouseEnter={isInteractive ? handleMouseHover : undefined}\n                onMouseMove={isInteractive ? handleMouseHover : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n\nChordCanvas.propTypes = ChordCanvasPropTypes\nChordCanvas.defaultProps = ChordCanvasDefaultProps\n\nexport default withContainer(ChordCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Chord from './Chord'\n\nconst ResponsiveChord = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Chord width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChord\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChordCanvas from './ChordCanvas'\n\nconst ResponsiveChordCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChordCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChordCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { generateChordData } from '@nivo/generators'\nimport SEO from '../../components/seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/chord/props'\nimport mapper from '../../data/components/chord/mapper'\nimport meta from '../../data/components/chord/meta.yml'\n\nconst MATRIX_SIZE = 5\n\nconst data = generateChordData({ size: MATRIX_SIZE })\n\nconst ChordApi = () => {\n    return (\n        <>\n            <SEO title=\"Chord HTTP API\" keywords={[...meta.Chord.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"Chord\"\n                chartClass=\"chord\"\n                apiPath=\"/charts/chord\"\n                flavors={meta.flavors}\n                dataProperty=\"matrix\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 800,\n                    height: 800,\n                    matrix: JSON.stringify(data.matrix, null, '  '),\n                    keys: data.keys,\n                    margin: {\n                        top: 40,\n                        right: 40,\n                        bottom: 40,\n                        left: 40,\n                    },\n                    padAngle: 0.02,\n                    innerRadiusRatio: 0.96,\n                    innerRadiusOffset: 0.01,\n\n                    colors: { scheme: 'nivo' },\n\n                    arcOpacity: 1,\n                    arcBorderWidth: 1,\n                    arcBorderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.4]],\n                    },\n\n                    ribbonOpacity: 0.5,\n                    ribbonBorderWidth: 1,\n                    ribbonBorderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.4]],\n                    },\n\n                    enableLabel: true,\n                    label: 'id',\n                    labelOffset: 12,\n                    labelRotation: -90,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default ChordApi\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ChordDefaultProps as defaults } from '@nivo/chord'\nimport {\n    themeProperty,\n    motionProperties,\n    groupProperties,\n    getLegendsProps,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'keys',\n        group: 'Base',\n        help: 'Keys used to identify each cell in the matrix.',\n        description: `\n            Keys used to identify each cell in the matrix,\n            for example given this matrix:\n            \\`\\`\\`\n            [ [123, 37,  99 ],\n              [75,  103, 82 ],\n              [37,  65,  109] ]\n            \\`\\`\\`\n            and those keys:\n            \\`\\`\\`\n            ['John', 'Jane', 'Raoul']\n            \\`\\`\\`\n            it will result in the following mapping:\n            \\`\\`\\`\n            [ [null,    'John', 'Jane',  'Raoul']\n              ['John',   123,    37,      99    ],\n              ['Jane',   75,     103,     82    ],\n              ['Raoul',  37,     65,      109   ] ]\n            \\`\\`\\`\n        `,\n        required: true,\n        type: 'string[]',\n    },\n    {\n        key: 'matrix',\n        group: 'Base',\n        help: 'The matrix used to compute the chord diagram.',\n        description: `\n            The matrix used to compute the chord diagram,\n            it must be a square matrix, meaning each row length\n            must equal the row count.\n        `,\n        required: true,\n        type: 'Array<number[]>',\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: `Optional value formatter.`,\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveChord/>\\`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveChord/>\\`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'padAngle',\n        help: 'Padding angle.',\n        required: false,\n        defaultValue: defaults.padAngle,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.01,\n        },\n    },\n    {\n        key: 'innerRadiusRatio',\n        help: 'Inner radius ratio.',\n        required: false,\n        defaultValue: defaults.innerRadiusRatio,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.01,\n        },\n    },\n    {\n        key: 'innerRadiusOffset',\n        help: 'Inner radius offset (minus innerRadiusRatio).',\n        required: false,\n        defaultValue: defaults.innerRadiusOffset,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.01,\n        },\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines how to compute arc/ribbon color.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'arcOpacity',\n        help: 'Arcs opacity.',\n        required: false,\n        defaultValue: defaults.arcOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'arcBorderWidth',\n        help: 'Arcs border width.',\n        required: false,\n        defaultValue: defaults.arcBorderWidth,\n        type: 'number',\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'arcBorderColor',\n        help: 'Arcs border color.',\n        required: false,\n        defaultValue: defaults.arcBorderColor,\n        type: 'string | object | Function',\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'ribbonOpacity',\n        help: 'Ribbons opacity.',\n        required: false,\n        defaultValue: defaults.ribbonOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'ribbonBorderWidth',\n        help: 'Ribbons border width.',\n        required: false,\n        defaultValue: defaults.ribbonBorderWidth,\n        type: 'number',\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'ribbonBorderColor',\n        help: 'Ribbons border color.',\n        required: false,\n        defaultValue: defaults.ribbonBorderColor,\n        type: 'string | object | Function',\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'enableLabel',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        help:\n            'Defines how to get label text, can be a string (used to access current arc data property) or a function which will receive the actual arc data.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.label,\n        controlType: 'choices',\n        group: 'Labels',\n        controlOptions: {\n            choices: ['id', 'value', `d => \\`\\${d.id} [\\${d.value}]\\``].map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'labelOffset',\n        help: 'Label offset from arc.',\n        required: false,\n        defaultValue: defaults.labelOffset,\n        type: 'number',\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            unit: 'px',\n            min: -80,\n            max: 80,\n        },\n    },\n    {\n        key: 'labelRotation',\n        help: 'Label rotation.',\n        required: false,\n        defaultValue: defaults.labelRotation,\n        type: 'number',\n        controlType: 'angle',\n        group: 'Labels',\n        controlOptions: {\n            min: -180,\n            max: 180,\n            step: 5,\n        },\n    },\n    {\n        key: 'labelTextColor',\n        description: `\n            How to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        help: 'Method to compute label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.labelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n            \n            The layer function which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`Chord\\` component.\n\n            When using the canvas implementation, the function\n            will receive the canvas 2d context as first argument\n            and the chart's context and computed data as second.\n\n            Please make sure to use \\`context.save()\\` and\n            \\`context.restore()\\` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaults.layers,\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'arcHoverOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Arc opacity when hover (0~1).',\n        required: false,\n        defaultValue: defaults.arcHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'arcHoverOthersOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Arc opacity when not hover (0~1).',\n        required: false,\n        defaultValue: defaults.arcHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'ribbonHoverOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Ribbon opacity when hover (0~1).',\n        required: false,\n        defaultValue: defaults.ribbonHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'ribbonHoverOthersOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Ribbon opacity when not hover (0~1).',\n        required: false,\n        defaultValue: defaults.ribbonHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onArcMouseEnter',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseEnter handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'onArcMouseMove',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseMove handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'onArcMouseLeave',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseLeave handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'onArcClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onClick handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'arcTooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom arc tooltip component.',\n        description: `\n            A function allowing complete arc tooltip customisation,\n            it must return a valid HTML\n            element and will receive the arcs's data.\n        `,\n    },\n    {\n        key: 'onRibbonMouseEnter',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseEnter handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'onRibbonMouseMove',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseMove handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'onRibbonMouseLeave',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseLeave handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'onRibbonClick',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onClick handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'ribbonTooltip',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom ribbon tooltip component.',\n        description: `\n            A function allowing complete ribbon tooltip customisation,\n            it must return a valid HTML\n            element and will receive the ribbon's data.\n        `,\n    },\n    {\n        key: 'legends',\n        flavors: ['svg', 'canvas'],\n        type: 'object[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                dataFrom: 'keys',\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 0,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n    ...motionProperties(['svg'], defaults),\n]\n\nexport const groups = groupProperties(props)\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;","import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.sort\";\nimport { range } from \"d3-array\";\nimport { max, tau } from \"./math\";\n\nfunction compareValue(compare) {\n  return function (a, b) {\n    return compare(a.source.value + a.target.value, b.source.value + b.target.value);\n  };\n}\n\nexport default function () {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j; // Compute the sum.\n\n    k = 0, i = -1;\n\n    while (++i < n) {\n      x = 0, j = -1;\n\n      while (++j < n) {\n        x += matrix[i][j];\n      }\n\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    } // Sort groups…\n\n\n    if (sortGroups) groupIndex.sort(function (a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    }); // Sort subgroups…\n\n    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {\n      d.sort(function (a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    }); // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n; // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n\n    x = 0, i = -1;\n\n    while (++i < n) {\n      x0 = x, j = -1;\n\n      while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    } // Generate chords for each (non-empty) subgroup-subgroup link.\n\n\n    i = -1;\n\n    while (++i < n) {\n      j = i - 1;\n\n      while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n\n        if (source.value || target.value) {\n          chords.push(source.value < target.value ? {\n            source: target,\n            target: source\n          } : {\n            source: source,\n            target: target\n          });\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function (_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function (_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function (_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function (_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}","export var slice = Array.prototype.slice;","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import { slice } from \"./array\";\nimport constant from \"./constant\";\nimport { cos, halfPi, sin } from \"./math\";\nimport { path } from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function () {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n    if (!context) context = buffer = path();\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function (_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function (_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n}","export { default as chord } from \"./chord\";\nexport { default as ribbon } from \"./ribbon\";","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({\n    label: value => {\n        if (value === `d => \\`\\${d.id} [\\${d.value}]\\``) return d => `${d.id} [${d.value}]`\n        return value\n    },\n})\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\n\n\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n  baseForOwn(object, function (value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst Image = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`\n\nconst EmptyContainer = styled.div`\n    font-size: 14px;\n    line-height: 1.6em;\n    color: ${({ theme }) => theme.colors.textLight};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ApiPreview = ({ responseStatus, chartUrl }) => {\n    if (responseStatus === 201 && chartUrl) {\n        return (\n            <Link href={chartUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                <Image src={chartUrl} alt=\"api result\" />\n            </Link>\n        )\n    }\n\n    return (\n        <EmptyContainer>\n            Click the generate button in order to generate the chart.\n            <br />\n            You can customize settings by using dedicated controls.\n        </EmptyContainer>\n    )\n\n    return <div className=\"api-client_preview\">{content}</div>\n}\n\nApiPreview.propTypes = {\n    responseStatus: PropTypes.number,\n    chartUrl: PropTypes.string,\n}\n\nexport default ApiPreview\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport ApiPreview from './ApiPreview'\nimport media from '../../../theming/mediaQueries'\nimport { useTheme } from '../../../theming/context'\nimport CodeBlock from '../../CodeBlock'\n\nconst tabs = ['preview', 'body', 'data']\n\nconst ApiTabs = ({ chartClass, data, body, isLoading, responseStatus, chartUrl }) => {\n    const theme = useTheme()\n\n    const [currentTab, setCurrentTab] = useState('preview')\n    const [hoverTab, setHoverTab] = useState(null)\n\n    return (\n        <Wrapper className={`chart-tabs--${currentTab}`}>\n            <Nav>\n                {tabs.map(tab => {\n                    const isCurrent = tab === currentTab\n                    const icon = tab === 'preview' ? chartClass : 'data'\n                    const iconColors = isCurrent || hoverTab === tab ? 'colored' : 'neutral'\n\n                    return (\n                        <NavItem\n                            key={tab}\n                            className=\"no-select\"\n                            isCurrent={isCurrent}\n                            onClick={() => setCurrentTab(tab)}\n                            onMouseEnter={() => setHoverTab(tab)}\n                            onMouseLeave={() => setHoverTab(null)}\n                        >\n                            <Icon className={`sprite-icons-${icon}-${theme.id}-${iconColors}`} />\n                            {tab}\n                        </NavItem>\n                    )\n                })}\n            </Nav>\n            <Content>\n                {currentTab === 'preview' && (\n                    <ApiPreview\n                        isLoading={isLoading}\n                        responseStatus={responseStatus}\n                        chartUrl={chartUrl}\n                    />\n                )}\n                {currentTab === 'body' && <CodeBlock>{JSON.stringify(body, null, '  ')}</CodeBlock>}\n                {currentTab === 'data' && <CodeBlock>{data}</CodeBlock>}\n                <Loader isLoading={isLoading} />\n            </Content>\n        </Wrapper>\n    )\n}\n\nApiTabs.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n}\n\nexport default ApiTabs\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.6);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.55);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 60%;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.55);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 460px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    display: flex;\n    font-size: 15px;\n    color: #aaa;\n    position: relative;\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: block;\n    position: relative;\n    padding-left: 46px;\n    padding-right: 14px;\n    padding-top: 11px;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Icon = styled.span`\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    transform: scale(0.44);\n    transform-origin: top left;\n    margin: 12px 0 0 12px;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 46px;\n    bottom: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst LoaderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100px;\n    height: 80px;\n    margin-top: -40px;\n    margin-left: -50px;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: 10px 10px 10px 10px 10px;\n    grid-column-gap: 6px;\n    padding: 10px 13px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);\n    pointer-events: none;\n    opacity: ${({ isLoading }) => (isLoading ? 1 : 0)};\n    transform: translate3d(0, ${({ isLoading }) => (isLoading ? 0 : '20px')}, 0);\n    transition: transform 200ms, opacity 200ms;\n`\n\nconst loaderBarAnimation = keyframes`\n    0%, 100% {\n        transform: scale3d(1, 0, 1);\n    }\n    50% {\n        transform: scale3d(1, 1, 1);\n    }\n`\n\nconst LoaderBar = styled.span`\n    display: block;\n    background: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 100%;\n    transform: scale3d(1, 0, 1);\n    transform-origin: 100% 100%;\n    animation-name: ${loaderBarAnimation};\n    animation-duration: 800ms;\n    animation-iteration-count: infinite;\n    animation-delay: ${({ index }) => (index + 1) * 60}ms;\n`\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <LoaderContainer isLoading={isLoading}>\n            <span>\n                <LoaderBar index={0} />\n            </span>\n            <span>\n                <LoaderBar index={1} />\n            </span>\n            <span>\n                <LoaderBar index={2} />\n            </span>\n            <span>\n                <LoaderBar index={3} />\n            </span>\n            <span>\n                <LoaderBar index={4} />\n            </span>\n        </LoaderContainer>\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Button = styled.span`\n    display: block;\n    background-color: ${({ theme }) => theme.colors.accent};\n    color: #fff;\n    text-align: center;\n    padding: 12px 24px;\n    border-radius: 2px;\n    cursor: pointer;\n    text-decoration: none;\n`\n\nclass ApiSubmit extends Component {\n    render() {\n        const { loading, onClick } = this.props\n\n        return <Button onClick={onClick}>{loading ? 'sending' : 'generate'}</Button>\n    }\n}\n\nApiSubmit.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nApiSubmit.defaultProps = {}\n\nexport default ApiSubmit\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    border-top: 1px solid ${({ theme }) => theme.colors.border};\n    overflow-x: hidden;\n    overflow-y: auto;\n`\n\nconst Header = styled.div`\n    padding: 12px 20px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.borderLight};\n`\n\nconst ResponseJson = styled.pre`\n    padding: 12px 20px;\n    font-size: 13px;\n    line-height: 1.6em;\n    overflow: hidden;\n    width: 100%;\n    margin: 0;\n`\n\nclass ApiResponse extends Component {\n    render() {\n        const { responseStatus, response } = this.props\n\n        let responseContent = 'no response available'\n        if (response) {\n            responseContent = JSON.stringify(response, null, '  ')\n        }\n\n        return (\n            <Container>\n                <Header>\n                    Response {responseStatus ? <strong>{responseStatus}</strong> : 'n/a'}\n                </Header>\n                <ResponseJson>{responseContent}</ResponseJson>\n            </Container>\n        )\n    }\n}\n\nApiResponse.propTypes = {}\n\nApiResponse.defaultProps = {}\n\nexport default ApiResponse\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 Raphaël Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Layout from '../../Layout'\nimport media from '../../../theming/mediaQueries'\nimport ComponentPage from '../ComponentPage'\nimport ComponentHeader from '../ComponentHeader'\nimport ComponentFlavorSelector from '../ComponentFlavorSelector'\nimport ComponentDescription from '../ComponentDescription'\nimport ComponentSettings from '../ComponentSettings'\nimport ApiTabs from './ApiTabs'\nimport ApiSubmit from './ApiSubmit'\nimport ApiResponse from './ApiResponse'\nimport config from '../../../data/config'\n\nconst description = component => `\nThe \\`${component}\\`component is available in the nivo\nHTTP rendering API.\nThe API generates a SVG and return a path to this SVG\nwhich can then be easily embedded.\n\nThe api accepts almost the same properties as the regular component,\nin json, however it's not interactive and you cannot use code\nin properties (functions).\n\nPlease note that the demo API server is installed on heroku\nusing a free plan, so it might be unavailable from times to times.\n`\n\nexport default class ApiClient extends Component {\n    static propTypes = {\n        componentName: PropTypes.string.isRequired,\n        chartClass: PropTypes.string.isRequired,\n        apiPath: PropTypes.string.isRequired,\n        dataProperty: PropTypes.string.isRequired,\n        propsMapper: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        dataProperty: 'data',\n        propsMapper: props => props,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            props: props.defaultProps,\n            loading: false,\n            responseStatus: null,\n            response: null,\n        }\n    }\n\n    handleSettingsUpdate = settings => {\n        this.setState({ props: settings })\n    }\n\n    handleDataUpdate = e => {\n        const { dataProperty } = this.props\n        const { props } = this.state\n\n        this.setState({\n            props: Object.assign({}, props, {\n                [dataProperty]: e.target.value,\n            }),\n        })\n    }\n\n    handleSubmit = () => {\n        const { apiPath, propsMapper } = this.props\n        const { props } = this.state\n\n        this.setState({\n            loading: true,\n        })\n\n        fetch(`${config.nivoApiUrl}${apiPath}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(propsMapper(props)),\n        })\n            .then(res => {\n                this.setState({\n                    loading: false,\n                    responseStatus: res.status,\n                })\n\n                return res.json()\n            })\n            .then(res => {\n                this.setState({ response: res })\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    render() {\n        const {\n            componentName,\n            chartClass,\n            apiPath,\n            controlGroups,\n            dataProperty,\n            propsMapper,\n            flavors,\n        } = this.props\n        const { props, loading, responseStatus, response } = this.state\n\n        const flavorKeys = flavors.map(flavor => flavor.flavor)\n\n        return (\n            <Layout>\n                <ComponentPage>\n                    <ComponentHeader\n                        chartClass={`${componentName} HTTP API`}\n                        tags={[`POST ${apiPath}`]}\n                    />\n                    {flavors && <ComponentFlavorSelector flavors={flavors} current=\"api\" />}\n                    <ComponentDescription description={description(componentName, apiPath)} />\n                    <ApiTabs\n                        chartClass={chartClass}\n                        data={props[dataProperty]}\n                        body={propsMapper(props)}\n                        isLoading={loading}\n                        responseStatus={responseStatus}\n                        chartUrl={response ? response.url : null}\n                    />\n                    <ControlPanel>\n                        <SubmitWrapper>\n                            <ApiSubmit loading={loading} onClick={this.handleSubmit} />\n                        </SubmitWrapper>\n                        <ApiResponse responseStatus={responseStatus} response={response} />\n                    </ControlPanel>\n                    <ComponentSettings\n                        component={componentName}\n                        settings={props}\n                        flavors={flavorKeys}\n                        currentFlavor=\"api\"\n                        groups={controlGroups}\n                        onChange={this.handleSettingsUpdate}\n                    />\n                </ComponentPage>\n            </Layout>\n        )\n    }\n}\n\nconst ControlPanel = styled.div`\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --partialWidth: calc(var(--innerWidth) * 0.6);\n    width: var(--partialWidth);\n    background: ${({ theme }) => theme.colors.cardAltBackground};\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: calc(var(--innerHeight) * 0.45);\n    z-index: 10;\n    overflow: hidden;\n    display: grid;\n    grid-template-rows: 1fr 2fr;\n\n    ${media.tablet`\n        & {\n            right: 0;\n            bottom: 0;\n            --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n            height: calc(var(--innerHeight) * 0.45);\n            width: 60%;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            right: auto;\n            bottom: auto;\n            width: auto;\n            height: auto;\n            border-left-width: 0;\n            z-index: 0;\n        }\n    `}\n`\n\nconst SubmitWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 12px 0;\n`\n"],"sourceRoot":""}