{"version":3,"file":"efe91cf6703fad396db656d24d0f48444463fb65-d8933eb3fc305a3a5d3e.js","mappings":"sLASMA,EAAsB,CACxB,CACIC,IAAK,OACLC,KAAM,cACNC,YAAY,sLAKZC,KAAM,WACNC,MAAO,OACPC,UAAU,GAEd,CACIL,IAAK,KACLI,MAAO,OACPD,KAAM,oBACNE,UAAU,EACVJ,KAAK,0DACLC,YAAY,maAUZI,aAAcC,EAAAA,GAAAA,IAElB,CACIP,IAAK,QACLI,MAAO,OACPD,KAAM,oBACNE,UAAU,EACVJ,KAAK,8CACLK,aAAcC,EAAAA,GAAAA,OAElB,CACIP,IAAK,cACLI,MAAO,OACPH,KAAM,iCACNC,YAAY,0VAOZG,UAAU,EACVF,KAAM,8CACNK,YAAa,eAEjB,CACIR,IAAK,SACLI,MAAO,OACPD,KAAM,WACNE,UAAU,EACVJ,KAAM,qBAEV,CACID,IAAK,UACLI,MAAO,OACPD,KAAM,oBACNE,UAAU,EACVJ,KAAM,8FACNK,aAAcC,EAAAA,GAAAA,SAElB,CACIP,IAAK,OACLI,MAAO,OACPD,KAAM,6BACNE,UAAU,EACVJ,KAAK,+CACLC,YAAY,+pBAqBZI,aAAcC,EAAAA,GAAAA,MAElB,CACIP,IAAK,UACLC,KAAM,yBACNE,KAAM,SACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,QACdC,YAAa,QACbJ,MAAO,OACPK,eAAgB,CACZC,KAAM,KACNC,IAAK,EACLC,IAAK,KAGb,CACIZ,IAAK,QACLa,wBAAyB,CAAC,OAC1BT,MAAO,OACPH,KAAM,eACNC,YAAY,uHAIZC,KAAM,SACNE,UAAU,GAEd,CACIL,IAAK,SACLa,wBAAyB,CAAC,OAC1BT,MAAO,OACPH,KAAM,gBACNC,YAAY,uHAIZC,KAAM,SACNE,UAAU,GAEd,CACIL,IAAK,SACLC,KAAM,gBACNE,KAAM,SACNE,UAAU,EACVG,YAAa,SACbJ,MAAO,QAEX,CACIJ,IAAK,aACLc,QAAS,CAAC,UACVb,KAAK,gDACLI,UAAU,EACVC,aAAc,oBACdH,KAAK,SACLK,YAAa,QACbJ,MAAO,OACPK,eAAgB,CACZE,IAAK,EACLC,IAAK,IAGb,CACIZ,IAAK,gBACLC,KAAM,kBACNC,YAAY,sqBAeZC,KAAM,SACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,cACdC,YAAa,QACbJ,MAAO,aACPK,eAAgB,CACZM,KAAM,GACNJ,IAAK,GACLC,IAAK,IAGb,CACIZ,IAAK,uBACLC,KAAM,iCACNC,YAAY,0JAIZC,KAAM,SACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,qBACdC,YAAa,QACbJ,MAAO,aACPK,eAAgB,CACZE,IAAK,GACLC,IAAK,MAGb,CACIZ,IAAK,SACLC,KAAK,gBACLE,KAAM,SACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,OACdC,YAAa,QACbJ,MAAO,SACPK,eAAgB,CACZO,QAAS,CACL,CAAEC,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,WAAYC,MAAO,eAIxC,CACIlB,IAAK,MACLC,KAAM,0BACNE,KAAM,SACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,IACdC,YAAa,QACbJ,MAAO,SACPK,eAAgB,CACZC,KAAM,KACNC,IAAK,EACLC,IAAK,OAGbO,EAAAA,EAAAA,IAAc,CAAC,MAAO,WACtB,CACInB,IAAK,SACLC,KAAM,qCACNC,YAAY,qlCA6BZC,KAAK,6BACLE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,OACdC,YAAa,gBACbJ,MAAO,SAEX,CACIJ,IAAK,UACLI,MAAO,QACPH,KAAM,wDACNC,YAAY,0bAWZC,KAAK,oBACLE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,QACdC,YAAa,UACbC,eAAgB,CACZO,QAAS,CAAC,QAAS,MAAMI,KAAI,SAAApB,GAAG,MAAK,CACjCiB,MAAOjB,EACPkB,MAAOlB,QAInB,CACIA,IAAK,cACLC,KAAM,6BACNE,KAAM,oBACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,YACdC,YAAa,YACbJ,MAAO,SAEX,CACIJ,IAAK,cACLC,KAAM,6BACNE,KAAM,6BACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,YACdC,YAAa,iBACbJ,MAAO,SAEX,CACIJ,IAAK,SACLI,MAAO,gBACPH,KAAM,qDACNC,YAAY,i8BAuBZG,UAAU,EACVF,KAAM,2BACNG,aAAcC,EAAAA,GAAAA,QAElB,CACIP,IAAK,kBACLI,MAAO,gBACPU,QAAS,CAAC,OACVb,KAAM,gEACNC,YAAY,iTASZG,UAAU,EACVF,KAAM,aAEV,CACIH,IAAK,eACLI,MAAO,gBACPU,QAAS,CAAC,UACVb,KAAM,mEACNC,YAAY,ybAYZG,UAAU,EACVF,KAAM,YAEV,CACIH,IAAK,cACLI,MAAO,cACPH,KAAM,yBACNE,KAAM,UACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,YACdC,YAAa,UAEjB,CACIR,IAAK,cACLI,MAAO,cACPH,KAAM,iDACNE,KAAM,yBACNE,UAAU,GAEd,CACIL,IAAK,cACLI,MAAO,cACPH,KAAM,yBACNE,KAAM,UACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,YACdC,YAAa,UAEjB,CACIR,IAAK,cACLI,MAAO,cACPH,KAAM,mDACNE,KAAM,yBACNE,UAAU,IA9ZU,gBAgarBgB,EAAAA,EAAAA,OAhaqB,CAiaxB,CACIrB,IAAK,gBACLC,KAAM,gCACNE,KAAM,UACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,cACdC,YAAa,SACbJ,MAAO,iBAEX,CACIJ,IAAK,UACLC,KAAM,mEACNa,QAAS,CAAC,OACVX,KAAM,UACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,QACdC,YAAa,SACbJ,MAAO,iBAEX,CACIJ,IAAK,YACLC,KAAM,0FACNE,KAAM,UACNE,UAAU,EACVC,aAAcC,EAAAA,GAAAA,UACdC,YAAa,SACbJ,MAAO,iBAEX,CACIJ,IAAK,eACLI,MAAO,gBACPH,KAAM,wBACNE,KAAM,wBACNE,UAAU,GAEd,CACIL,IAAK,cACLI,MAAO,gBACPH,KAAM,uBACNE,KAAM,wBACNE,UAAU,GAEd,CACIL,IAAK,eACLI,MAAO,gBACPH,KAAM,wBACNE,KAAM,wBACNE,UAAU,GAEd,CACIL,IAAK,UACLI,MAAO,gBACPH,KAAM,mBACNE,KAAM,wBACNE,UAAU,GAEd,CACIL,IAAK,UACLI,MAAO,gBACPD,KAAM,WACNE,UAAU,EACVJ,KAAM,4BACNC,YAAY,iLA/dQ,QAqerBoB,EAAAA,EAAAA,IAAiB,CAAC,OAAQf,EAAAA,GAAc,kBAGlCgB,GAASC,EAAAA,EAAAA,IAAgBzB,I,gKC9ezB0B,EACT,SAACC,EAAD,qBAAkC,GAAlC,GAAiBC,QAAAA,OAAjB,MAA2B,GAA3B,SACA,SAACC,EAAeC,QAAsB,IAAtBA,IAAAA,EAAe,IAC3B,IAAMC,EAAiB,GAQvB,OANAC,OAAOC,KAAKJ,GAAUK,SAAQ,SAAAjC,GACtB0B,EAAQ1B,KACR8B,EAAU9B,GAAO0B,EAAQ1B,GAAK4B,EAAS5B,GAAM4B,EAAUC,OAIxD,OAAP,UACOK,GAAAA,CAAKN,EAAUD,GACfG,KAIFK,EAAU,SAAChC,GAAD,OAAkB,SAACe,EAAYU,GAAb,OACrCA,EAAS,OAAOQ,GAAAA,CAAWjC,IAASkC,OAASH,GAAAA,CAAKhB,EAAO,CAAC,WAAa,OAE9DoB,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,SAAWC,QACtBD,OAASE,I,icCxBVlC,EACA,EADAA,EAEE,IAFFA,EAGO,ECyBPmC,EAAqB,SAC9BC,GAAAA,MACwE,WAAxBA,EAAexC,MAEtDyC,EAAkB,SAC3BD,GAAAA,MACqE,QAAxBA,EAAexC,MAEnD0C,EAAmB,SAC5BF,GAAAA,MACsE,SAAxBA,EAAexC,MCoDpD2C,EAAoB,SAC7BC,GAAAA,IAWIC,EACAC,EATAC,EAMAH,EANAG,EACAC,EAKAJ,EALAI,EACAC,EAIAL,EAJAK,MACAC,EAGAN,EAHAM,MAAAA,EAGAN,EAFAO,UAAAA,OAAAA,IAAAA,EAAY/C,EAAa+C,EAAAA,EAEzBP,EADAQ,eAAAA,OAAAA,IAAAA,EAAiBhD,EAAagD,EAAAA,GAM9BC,GAAAA,CAASJ,GACTJ,EAAgBE,EAAIE,MACjB,aAAIA,EAAMK,IAAAA,MAGP,IAAIC,MAAAA,6EAFVV,EAAgBI,EAAMK,IAAAA,GAKtBD,GAAAA,CAASH,GACTJ,EAAgBE,EAAIE,MACjB,aAAIA,EAAMI,IAAAA,MAGP,IAAIC,MAAAA,6EAFVT,EAAgBI,EAAMI,IAAAA,IAKtBE,EAAYT,EACZU,EAAYT,EAEVU,EA7CkB,SACxBC,EACAC,EACAC,EACAC,GAAAA,IAEMJ,EAAQK,KAAKC,MAAMF,EAAUF,EAASC,EAAUF,GAAAA,OAE/CM,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,IAAiBR,IAqC/BS,CAAapB,EAAGC,EAAGH,EAAeC,GAAAA,GAE5CP,EAA0BK,GAAa,CAAC,IAClCwB,GAAWC,EAAAA,EAAAA,KAAkBC,EAAAA,EAAAA,IAAiBZ,GAAQd,EAAW2B,KAAO,GAC9Ef,GAAaY,EAASrB,EACtBU,GAAaW,EAASpB,EAAAA,GAGtBN,EAAwBE,GAAa,CAAC,IAChC4B,EAAST,KAAKU,OAAOf,EAAQ,IAAM,IAAM,EAChC,IAAXc,IACAf,GAAab,EAAW8B,OAAS,GAEtB,IAAXF,IACAhB,GAAaZ,EAAW+B,MAAQ,EAChClB,GAAab,EAAW8B,OAAS,GAEtB,IAAXF,IACAhB,GAAaZ,EAAW+B,MAAQ,GAErB,IAAXH,IACAhB,GAAaZ,EAAW+B,MAAQ,EAChClB,GAAab,EAAW8B,OAAS,GAEtB,IAAXF,IACAf,GAAab,EAAW8B,OAAS,GAEtB,IAAXF,IACAhB,GAAaZ,EAAW+B,MAAQ,EAChClB,GAAab,EAAW8B,OAAS,GAEtB,IAAXF,IACAhB,GAAaZ,EAAW+B,MAAQ,GAErB,IAAXH,IACAhB,GAAaZ,EAAW+B,MAAQ,EAChClB,GAAab,EAAW8B,OAAS,OAIrCE,EAAQ/B,EAGRgC,EAAYhC,EAAAA,OAGXa,EAAQ,IAAM,IAAM,KACrBkB,GAASzB,EACT0B,GAAa1B,GAEb0B,GAAa1B,EAGV,CACH2B,OAAQ,CACJ,CAACtB,EAAWC,GACZ,CAACZ,EAAeC,GAChB,CAAC+B,EAbS/B,IAediC,KAAM,CAACH,EAlBG9B,EAAgBM,GAmB1BM,MAAOA,EAAQ,KC5KVsB,EAAiB,gBAC1BC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,cAAAA,OAOAC,EAAAA,EAAAA,UACI,kBDNuB,gBAM3BJ,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,cAAAA,OAOAF,EAAYI,QAAO,SAACC,EAA+B3C,GAAAA,IACzC4C,EAAS5C,EAAW4C,QAAU,kBAG7BD,EACAE,GAAAA,CAAcR,EAAMrC,EAAW8C,OAAOzE,KAAI,gBACnCmD,EAAWe,EAAYQ,GACvBC,EAAaR,EAAcO,GAAAA,OAE7BpD,EAAmBK,IAAeF,EAAiBE,MACnDgD,EAAWrB,KAAOqB,EAAWrB,KAAgB,EAATiB,EACpCI,EAAWjB,MAAQiB,EAAWjB,MAAiB,EAATa,EACtCI,EAAWlB,OAASkB,EAAWlB,OAAkB,EAATc,GAAAA,EAAAA,GAqBrCK,GAAAA,CAAKjD,EAAY,CAAC,QAAS,WAC3BwB,EACAwB,EAAAA,CACHrB,KAAM3B,EAAW2B,MAAQqB,EAAWrB,KACpCoB,MAAAA,UAMb,ICpDKG,CAAuB,CACnBb,KAAAA,EACAC,YAAAA,EACAC,YAAAA,EACAC,cAAAA,MAER,CAACH,EAAMC,EAAaC,EAAaC,KAG5BW,EAAyB,gBAClCb,EAAAA,EAAAA,YAAAA,OAIAG,EAAAA,EAAAA,UACI,kBACIH,EAAYjE,KAAI,wBACT2B,EAAAA,CACHoD,SAAUrD,EAAAA,EAAAA,GACHC,WAGf,CAACsC,KCzCIe,EAAiB,gBAC1BN,EAAAA,EAAAA,MACA5C,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EACAkD,EAAAA,EAAAA,KAOMC,GAAQC,EAAAA,EAAAA,MAAAA,GAC4BC,EAAAA,EAAAA,MAAlCC,EAAAA,EAAAA,QAAiBC,EAAAA,EAARC,OAEXC,GAAgBC,EAAAA,EAAAA,WAAU,CAC5B3D,EAAAA,EACAC,EAAAA,EACAwD,OAAQD,EACRI,WAAYL,IAAAA,MAGI,mBAATJ,GACAU,EAAAA,EAAAA,eAAcV,EAAM,CAAEnD,EAAAA,EAAGC,EAAAA,EAAG2C,MAAAA,IAInCkB,MAAAA,cAAAA,MAAAA,SAAAA,KACKV,EAAMjB,YAAYH,KAAK+B,aAAe,GACnCD,MAAAA,cAACE,EAAAA,EAAAA,KAAShC,CACNhC,EAAG0D,EAAc1D,EACjBC,EAAGyD,EAAczD,EACjBgE,MAAAA,EAAAA,GACOb,EAAMjB,YAAYH,KAAAA,CACrBkC,eAAgB,QAChBC,YAAmD,EAAtCf,EAAMjB,YAAYH,KAAK+B,aACpCK,OAAQhB,EAAMjB,YAAYH,KAAKqC,gBAGlClB,GAGTW,MAAAA,cAACE,EAAAA,EAAAA,KAAShC,CACNhC,EAAG0D,EAAc1D,EACjBC,EAAGyD,EAAczD,EACjBgE,MAAOjF,GAAAA,CAAKoE,EAAMjB,YAAYH,KAAM,CAAC,eAAgB,kBAEpDmB,KChDJmB,EAAiB,SAAC,GAAD,IAC1BvC,EAAAA,EAAAA,OAAAA,EAAAA,EACAwC,UAAAA,OAAAA,IAAAA,GAAAA,EAKMnB,GAAQC,EAAAA,EAAAA,MAERmB,GAAOlC,EAAAA,EAAAA,UAAQ,eACVmC,EAA8B1C,EAAAA,GAAAA,OAAAA,EAAAA,MAAAA,GAElBQ,QACf,SAACC,EAAAA,GAAAA,OAAmBA,EAAAA,KAAAA,EAAAA,GAAAA,IAAAA,EAAAA,KAAAA,IAChBiC,EAAW,OAAMA,EAAW,MAErC,CAAC1C,IAEE2C,GAAeC,EAAAA,EAAAA,IAAgBH,GAAAA,GAEjCD,GAAanB,EAAMjB,YAAYyC,KAAKb,cAAgB,SAC7C,SAGLE,EAAAA,EAAAA,GAAab,EAAMjB,YAAYyC,MAAAA,OACjCL,IACAN,EAAMY,cAAgB,SACtBZ,EAAME,YACFf,EAAMjB,YAAYyC,KAAKT,YAAoD,EAAtCf,EAAMjB,YAAYyC,KAAKb,aAChEE,EAAMG,OAAShB,EAAMjB,YAAYyC,KAAKP,cAGnCP,MAAAA,cAACE,EAAAA,EAAAA,KAASQ,CAAKM,KAAK,OAAOC,EAAGL,EAAcT,MAAOA,KCjCjDe,EAA0B,SAAC,GAAD,IAAGhF,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAAGuB,EAAAA,EAAAA,KACtC4B,GAAQC,EAAAA,EAAAA,MAAAA,GAC4BC,EAAAA,EAAAA,MAAlCC,EAAAA,EAAAA,QAAiBC,EAAAA,EAARC,OAEXC,GAAgBC,EAAAA,EAAAA,WAAU,CAC5B3D,EAAAA,EACAC,EAAAA,EACAgF,OAAQzD,EAAO,EACfiC,OAAQD,EACRI,WAAYL,IAAAA,OAIZO,MAAAA,cAAAA,MAAAA,SAAAA,KACKV,EAAMjB,YAAY+C,QAAQnB,aAAe,GACtCD,MAAAA,cAACE,EAAAA,EAAAA,OAASmB,CACNC,GAAI1B,EAAc1D,EAClBqF,GAAI3B,EAAczD,EAClBqF,EAAG5B,EAAcuB,OACjBhB,MAAAA,EAAAA,GACOb,EAAMjB,YAAY+C,QAAAA,CACrBJ,KAAM,OACNX,YACIf,EAAMjB,YAAY+C,QAAQf,YACe,EAAzCf,EAAMjB,YAAY+C,QAAQnB,aAC9BK,OAAQhB,EAAMjB,YAAY+C,QAAQb,iBAI9CP,MAAAA,cAACE,EAAAA,EAAAA,OAASmB,CACNC,GAAI1B,EAAc1D,EAClBqF,GAAI3B,EAAczD,EAClBqF,EAAG5B,EAAcuB,OACjBhB,MAAOb,EAAMjB,YAAY+C,YChC5BK,EAAuB,SAAC,GAAD,IAChCvF,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EAAAA,EAAAA,EACAuB,KAAAA,OAAAA,IAAAA,EAAOnE,EAAamI,EAMdpC,GAAQC,EAAAA,EAAAA,MAAAA,GAC4BC,EAAAA,EAAAA,MAAlCC,EAAAA,EAAAA,QAAiBC,EAAAA,EAARC,OAEXC,GAAgBC,EAAAA,EAAAA,WAAU,CAC5B3D,EAAAA,EACAC,EAAAA,EACAgF,OAAQzD,EAAO,EACfiC,OAAQD,EACRI,WAAYL,IAAAA,OAIZO,MAAAA,cAAAA,MAAAA,SAAAA,KACKV,EAAMjB,YAAY+C,QAAQnB,aAAe,GACtCD,MAAAA,cAACE,EAAAA,EAAAA,OAASmB,CACNC,GAAI1B,EAAc1D,EAClBqF,GAAI3B,EAAczD,EAClBqF,EAAG5B,EAAcuB,OACjBhB,MAAAA,EAAAA,GACOb,EAAMjB,YAAY+C,QAAAA,CACrBJ,KAAM,OACNX,YAAsD,EAAzCf,EAAMjB,YAAY+C,QAAQnB,aACvCK,OAAQhB,EAAMjB,YAAY+C,QAAQb,iBAI9CP,MAAAA,cAACE,EAAAA,EAAAA,OAASmB,CACNC,GAAI1B,EAAc1D,EAClBqF,GAAI3B,EAAczD,EAClBqF,EAAG5B,EAAcuB,OACjBhB,MAAOb,EAAMjB,YAAYsD,WCxC5BC,EAAwB,SAAC,GAAD,IACjC1F,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EACA2B,EAAAA,EAAAA,MACAD,EAAAA,EAAAA,OAOMyB,GAAQC,EAAAA,EAAAA,MAAAA,GAC4BC,EAAAA,EAAAA,MAAlCC,EAAAA,EAAAA,QAAiBC,EAAAA,EAARC,OAEXC,GAAgBC,EAAAA,EAAAA,WAAU,CAC5B3D,EAAGA,EAAI4B,EAAQ,EACf3B,EAAGA,EAAI0B,EAAS,EAChBC,MAAAA,EACAD,OAAAA,EACA8B,OAAQD,EACRI,WAAYL,IAAAA,OAIZO,MAAAA,cAAAA,MAAAA,SAAAA,KACKV,EAAMjB,YAAY+C,QAAQnB,aAAe,GACtCD,MAAAA,cAACE,EAAAA,EAAAA,KAAS2B,CACN3F,EAAG0D,EAAc1D,EACjBC,EAAGyD,EAAczD,EACjB2B,MAAO8B,EAAc9B,MACrBD,OAAQ+B,EAAc/B,OACtBsC,MAAAA,EAAAA,GACOb,EAAMjB,YAAY+C,QAAAA,CACrBJ,KAAM,OACNX,YACIf,EAAMjB,YAAY+C,QAAQf,YACe,EAAzCf,EAAMjB,YAAY+C,QAAQnB,aAC9BK,OAAQhB,EAAMjB,YAAY+C,QAAQb,iBAI9CP,MAAAA,cAACE,EAAAA,EAAAA,KAAS2B,CACN3F,EAAG0D,EAAc1D,EACjBC,EAAGyD,EAAczD,EACjB2B,MAAO8B,EAAc9B,MACrBD,OAAQ+B,EAAc/B,OACtBsC,MAAOb,EAAMjB,YAAY+C,YCxC5BU,EAAa,SAAS/F,GAAAA,IACvB+C,EAAsB/C,EAAtB+C,MAAO5C,EAAeH,EAAfG,EAAGC,EAAYJ,EAAZI,EAAGkD,EAAStD,EAATsD,KACfF,ENuC2B,SAAQpD,GAAAA,OACzCyC,EAAAA,EAAAA,UAAQ,kBAAM1C,EAAyBC,KAAa,CAACA,IMxCpCgG,CAAsBhG,GAAAA,IRAlB,SAAQsD,GAAAA,IACvB2C,SAAkB3C,EAAAA,OAGpB4C,EAAAA,EAAAA,gBAAe5C,IACF,WAAb2C,GACa,aAAbA,GACa,WAAbA,EQLCE,CAAU7C,GAAAA,MACL,IAAI3C,MAAM,+CAIhBsD,MAAAA,cAAAA,MAAAA,SAAAA,KACIA,MAAAA,cAACQ,EAAAA,CAAevC,OAAQkB,EAASlB,OAAQwC,WAAAA,IACxC/E,EAAmBK,IAChBiE,MAAAA,cAACkB,EAAAA,CAAwBhF,EAAGA,EAAGC,EAAGA,EAAGuB,KAAM3B,EAAW2B,OAEzD9B,EAAgBG,IACbiE,MAAAA,cAACyB,EAAAA,CAAqBvF,EAAGA,EAAGC,EAAGA,EAAGuB,KAAM3B,EAAW2B,OAEtD7B,EAAiBE,IACdiE,MAAAA,cAAC4B,EAAAA,CACG1F,EAAGA,EACHC,EAAGA,EACH2B,MAAO/B,EAAW+B,MAClBD,OAAQ9B,EAAW8B,SAG3BmC,MAAAA,cAACQ,EAAAA,CAAevC,OAAQkB,EAASlB,SACjC+B,MAAAA,cAACZ,EAAAA,CAAeN,MAAOA,EAAO5C,EAAGiD,EAASjB,KAAK,GAAI/B,EAAGgD,EAASjB,KAAK,GAAImB,KAAMA,MC/BpF8C,EAAa,SAACC,EAA+BnE,GAC/CA,EAAOhD,SAAQ,WAASoH,GAAAA,IAAPnG,EAAAA,EAAAA,GAAGC,EAAAA,EAAAA,GACF,IAAVkG,EACAD,EAAIE,OAAOpG,EAAGC,GAEdiG,EAAIG,OAAOrG,EAAGC,OAKbqG,EAA4B,SACrCJ,EAAAA,GAAAA,IAEI/D,EAAAA,EAAAA,YACAiB,EAAAA,EAAAA,MAMuB,IAAvBjB,EAAYoE,SAEhBL,EAAIM,OACJrE,EAAYpD,SAAQ,gBTLI,SAAQoE,GAAAA,IAC1B2C,SAAkB3C,EAAAA,MAEJ,WAAb2C,GAAsC,aAAbA,ESGvBW,CAAa5G,EAAWsD,MAAAA,MACnB,IAAI3C,MAAM,6CAGhB4C,EAAMjB,YAAYyC,KAAKb,aAAe,IACtCmC,EAAIQ,QAAU,SACdR,EAAIS,YAAcvD,EAAMjB,YAAYyC,KAAKP,aACzC6B,EAAIU,UACAxD,EAAMjB,YAAYyC,KAAKT,YAAoD,EAAtCf,EAAMjB,YAAYyC,KAAKb,aAChEmC,EAAIW,YACJZ,EAAWC,EAAKrG,EAAWoD,SAASlB,QACpCmE,EAAI9B,SACJ8B,EAAIQ,QAAU,QAGdlH,EAAmBK,IAAeuD,EAAMjB,YAAY+C,QAAQnB,aAAe,IAC3EmC,EAAIS,YAAcvD,EAAMjB,YAAY+C,QAAQb,aAC5C6B,EAAIU,UACAxD,EAAMjB,YAAY+C,QAAQf,YAAuD,EAAzCf,EAAMjB,YAAY+C,QAAQnB,aACtEmC,EAAIW,YACJX,EAAIY,IAAIjH,EAAWG,EAAGH,EAAWI,EAAGJ,EAAW2B,KAAO,EAAG,EAAG,EAAIR,KAAK+F,IACrEb,EAAI9B,UAGJ1E,EAAgBG,IAAeuD,EAAMjB,YAAYsD,OAAO1B,aAAe,IACvEmC,EAAIS,YAAcvD,EAAMjB,YAAYsD,OAAOpB,aAC3C6B,EAAIU,UAAoD,EAAxCxD,EAAMjB,YAAYsD,OAAO1B,aACzCmC,EAAIW,YACJX,EAAIY,IAAIjH,EAAWG,EAAGH,EAAWI,EAAGJ,EAAW2B,KAAO,EAAG,EAAG,EAAIR,KAAK+F,IACrEb,EAAI9B,UAGJzE,EAAiBE,IAAeuD,EAAMjB,YAAY+C,QAAQnB,aAAe,IACzEmC,EAAIS,YAAcvD,EAAMjB,YAAY+C,QAAQb,aAC5C6B,EAAIU,UACAxD,EAAMjB,YAAY+C,QAAQf,YAAuD,EAAzCf,EAAMjB,YAAY+C,QAAQnB,aACtEmC,EAAIW,YACJX,EAAIP,KACA9F,EAAWG,EAAIH,EAAW+B,MAAQ,EAClC/B,EAAWI,EAAIJ,EAAW8B,OAAS,EACnC9B,EAAW+B,MACX/B,EAAW8B,QAEfuE,EAAI9B,UAGR8B,EAAIS,YAAcvD,EAAMjB,YAAYyC,KAAKR,OACzC8B,EAAIU,UAAYxD,EAAMjB,YAAYyC,KAAKT,YACvC+B,EAAIW,YACJZ,EAAWC,EAAKrG,EAAWoD,SAASlB,QACpCmE,EAAI9B,SAEA5E,EAAmBK,KACnBqG,EAAIS,YAAcvD,EAAMjB,YAAY+C,QAAQd,OAC5C8B,EAAIU,UAAYxD,EAAMjB,YAAY+C,QAAQf,YAC1C+B,EAAIW,YACJX,EAAIY,IAAIjH,EAAWG,EAAGH,EAAWI,EAAGJ,EAAW2B,KAAO,EAAG,EAAG,EAAIR,KAAK+F,IACrEb,EAAI9B,UAGJ1E,EAAgBG,KAChBqG,EAAIc,UAAY5D,EAAMjB,YAAYsD,OAAOX,KACzCoB,EAAIW,YACJX,EAAIY,IAAIjH,EAAWG,EAAGH,EAAWI,EAAGJ,EAAW2B,KAAO,EAAG,EAAG,EAAIR,KAAK+F,IACrEb,EAAIpB,QAGJnF,EAAiBE,KACjBqG,EAAIS,YAAcvD,EAAMjB,YAAY+C,QAAQd,OAC5C8B,EAAIU,UAAYxD,EAAMjB,YAAY+C,QAAQf,YAC1C+B,EAAIW,YACJX,EAAIP,KACA9F,EAAWG,EAAIH,EAAW+B,MAAQ,EAClC/B,EAAWI,EAAIJ,EAAW8B,OAAS,EACnC9B,EAAW+B,MACX/B,EAAW8B,QAEfuE,EAAI9B,UAGuB,mBAApBvE,EAAWsD,KAClBtD,EAAWsD,KAAK+C,EAAK,CACjBtD,MAAO/C,EAAW+C,MAClB5C,EAAGH,EAAWoD,SAASjB,KAAK,GAC5B/B,EAAGJ,EAAWoD,SAASjB,KAAK,GAC5BoB,MAAAA,KAGJ8C,EAAIe,KAAU7D,EAAMjB,YAAYH,KAAKkF,SAAAA,MAAc9D,EAAMjB,YAAYH,KAAKmF,WAC1EjB,EAAIc,UAAY5D,EAAMjB,YAAYH,KAAK8C,KACvCoB,EAAIS,YAAcvD,EAAMjB,YAAYH,KAAKqC,aACzC6B,EAAIU,UAAkD,EAAtCxD,EAAMjB,YAAYH,KAAK+B,aACnCX,EAAMjB,YAAYH,KAAK+B,aAAe,IACtCmC,EAAIkB,SAAW,QACflB,EAAImB,WACAxH,EAAWsD,KACXtD,EAAWoD,SAASjB,KAAK,GACzBnC,EAAWoD,SAASjB,KAAK,IAE7BkE,EAAIkB,SAAW,SAEnBlB,EAAIoB,SAASzH,EAAWsD,KAAMtD,EAAWoD,SAASjB,KAAK,GAAInC,EAAWoD,SAASjB,KAAK,QAG5FkE,EAAIqB,a,2fR7HR,IAEaC,EAAwB,gBA4B7BC,EA3BJC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,cACAC,EAAAA,EAAAA,WACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,aAAAA,EAAAA,EACAC,OAAAA,OAAAA,IAAAA,EAAS,QAWHC,GAASC,EAAAA,EAAAA,IAAqBR,EAAOE,GAErCO,EAAYC,EAAAA,GAAkBJ,GAE9B5G,EAAW,cAAesG,GAAQW,EAAAA,EAAAA,IAAYX,GAASA,EACvDY,EAAO,CAAEC,MAAO,EAAGC,MAAO,GAC1BzG,EAAO,CAAEH,MAAO,EAAG6G,MAAO,GAE1BC,EAA4B,iBAAbC,UAAyC,QAAjBA,SAASC,IAElDC,EAA6BV,EAAUW,MAAMC,OAC7CC,EAAmCb,EAAUc,SAASF,OAAAA,MAE7C,MAATtB,GACAD,EAAY,wBAAM,CAAEzH,EAAAA,OAAAA,EAAGqB,EAAS0D,IAAAA,EAAM,EAAG9E,EAAG,IAE5CsI,EAAKE,MAAQX,GAA8B,UAAlBF,EAA4B,GAAK,GAC1D5F,EAAK0G,OAASZ,EAAWC,IAAkC,UAAlBH,EAA4B,GAAK,GAGtEqB,EADkB,UAAlBrB,EACeQ,EAAUc,SAASC,IAEnBf,EAAUc,SAASE,OAGjB,IAAjBpB,EACAc,EAAYV,EAAUW,MAAMC,OAET,UAAlBpB,GAA6BI,EAAe,GAC1B,WAAlBJ,GAA8BI,EAAe,GAE9Cc,EAAYV,EAAUW,MAAMJ,EAAQ,OAAS,SAC7CM,EAAeb,EAAUc,SAASF,SAEf,UAAlBpB,GAA6BI,EAAe,GAC1B,WAAlBJ,GAA8BI,EAAe,KAE9Cc,EAAYV,EAAUW,MAAMJ,EAAQ,QAAU,QAC9CM,EAAeb,EAAUc,SAASF,UAGtCvB,EAAY,wBAAM,CAAEzH,EAAG,EAAGC,EAAAA,OAAAA,EAAGoB,EAAS0D,IAAAA,EAAM,IAE5CwD,EAAKC,MAAQV,GAA8B,UAAlBF,EAA4B,GAAK,GAC1D5F,EAAKH,OAASiG,EAAWC,IAAkC,UAAlBH,EAA4B,GAAK,GAGtEkB,EADkB,UAAlBlB,EACYQ,EAAUW,MAAMM,KAEhBjB,EAAUW,MAAMO,OAY7B,CACHC,MATUrB,EAAOhK,KAAI,sBACrBpB,IAAsB,iBAAVkB,GAAuC,iBAAVA,EAAqBA,EAAAA,GAAWA,EACzEA,MAAAA,GACGyJ,EAAUzJ,GACVuK,EACAvG,MAKH8G,UAAAA,EACAG,aAAAA,IAIKO,EAAe,SACxBnK,EACAsI,GAAAA,QAAAA,IAEWtI,GAA4C,mBAAXA,EAAuB,OAAOA,EAAAA,GAEvD,SAAfsI,EAAM1K,KAAiB,KACjBwM,GAAYC,EAAAA,EAAAA,IAAWrK,GAAAA,OAErB,SAAC0F,GAAAA,OAAW0E,EAAU1E,aAAa4E,KAAO5E,EAAI,IAAI4E,KAAK5E,KAAAA,OAG5D6E,EAAAA,EAAAA,IAASvK,IAGPwK,EAAmB,gBAxGZ7L,EAyGhB4D,EAAAA,EAAAA,MACAD,EAAAA,EAAAA,OACAgG,EAAAA,EAAAA,MACAD,EAAAA,EAAAA,KACQoC,EAAAA,EAAR5B,OASMA,GAtHUlK,EAqHmB8L,GArHcC,MAAMC,QAAQhM,GAqHjB8L,OAAAA,KACjB3B,EAAAA,EAAAA,IAAqBR,EAAOmC,IACnDzI,EAAW,cAAesG,GAAQW,EAAAA,EAAAA,IAAYX,GAASA,EAEvDsC,EACO,MAATvC,EACMQ,EAAOhK,KAAI,0BAAU,CACjBpB,IAAAA,GAAQkB,EACRkM,GAAAA,OAAAA,EAAI7I,EAASrD,IAAAA,EAAU,EACvBmM,GAAAA,OAAAA,EAAI9I,EAASrD,IAAAA,EAAU,EACvBoM,GAAI,EACJC,GAAI1I,MAERuG,EAAOhK,KAAI,0BAAU,CACjBpB,IAAAA,GAAQkB,EACRkM,GAAI,EACJC,GAAIvI,EACJwI,GAAAA,OAAAA,EAAI/I,EAASrD,IAAAA,EAAU,EACvBqM,GAAAA,OAAAA,EAAIhJ,EAASrD,IAAAA,EAAU,aAG9BiM,GShGLK,GAAmBC,EAAAA,EAAAA,OA1CR,kBACNC,EAAAA,EAAPxM,MACAqB,EAAAA,EAAAA,OACAmJ,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAgC,EAAAA,EAAAA,QACAxB,EAAAA,EAAAA,aACAyB,EAAAA,EAAAA,WACAhH,EAAAA,EAAAA,cAEMN,GAAQC,EAAAA,EAAAA,MAERrF,EAAAA,OAAAA,EAAAA,MAAQqB,OAAAA,EAAAA,EAASmL,IAAAA,EAAWA,EAE5B3N,GAAQyF,EAAAA,EAAAA,UAAQ,eACZ2B,EAAQ,CAAE0G,QAASjH,EAAciH,SAAAA,OAElCF,EAIE,CACHxG,MAAAA,EAAAA,GAAYA,EAAAA,CAAO2G,OAAQ,YAC3BH,QAAS,SAACI,GAAAA,OAAqDJ,EAAQI,EAAO7M,KALvE,CAAEiG,MAAAA,KAOd,CAACP,EAAciH,QAASF,EAASzM,IAAAA,OAGhC8F,EAAAA,cAACE,EAAAA,EAAAA,EAAS8G,EAAAA,CAAEC,UAAWrH,EAAcqH,WAAelO,GAChDiH,EAAAA,cAAAA,OAAAA,CAAMoG,GAAI,EAAGC,GAAI3B,EAAO4B,GAAI,EAAGC,GAAI5B,EAAOxE,MAAOb,EAAMsE,KAAK6B,MAAMhB,OAClEzE,EAAAA,cAACE,EAAAA,EAAAA,KAAShC,CACNgJ,iBAAkB/B,EAClByB,WAAYA,EACZK,UAAWrH,EAAcuH,cACzBhH,MAAOb,EAAMsE,KAAK6B,MAAMvH,MAEvBhE,OCwHXkN,GAAeX,EAAAA,EAAAA,OA1JR,gBACT7C,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MAAAA,EAAAA,EACA3H,EAAAA,OAAAA,IAAAA,EAAI,QACJC,EAAAA,OAAAA,IAAAA,EAAI,IACJsG,EAAAA,EAAAA,OACAqB,EAAAA,EAAAA,cACAC,EAAAA,EAAAA,WAAAA,EAAAA,EACAC,SAAAA,OAAAA,IAAAA,EAAW,QACXC,YAAAA,OAAAA,IAAAA,EAAc,QACdC,aAAAA,OAAAA,IAAAA,EAAe,IACf3I,EAAAA,EAAAA,OAAAA,EAAAA,EACA8L,WAAAA,OAAAA,IAAAA,EAAaC,EAAAA,EACbC,EAAAA,EAAAA,OAAAA,EAAAA,EACAC,eAAAA,OAAAA,IAAAA,EAAiB,YACjBC,aAAAA,OAAAA,IAAAA,EAAe,IACfd,EAAAA,EAAAA,QACAe,EAAAA,EAAAA,WASMpI,GAAQC,EAAAA,EAAAA,MAERoI,GAAcnJ,EAAAA,EAAAA,UAAQ,kBAAMkH,EAAanK,EAAQsI,KAAQ,CAACtI,EAAQsI,IAAAA,EAE7BH,EAAsB,CAC7DE,KAAAA,EACAC,MAAAA,EACAC,cAAAA,EACAC,WAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,aAAAA,IAPIuB,EAAAA,EAAAA,MAAOT,EAAAA,EAAAA,UAAWG,EAAAA,EAAAA,aAUtByC,EAAa,iBACbL,EAAsB,CAAC,IAInBX,EAHAiB,EAAU,EACVC,EAAU,EACVC,EAAiB,EAGR,MAATnE,GACAmE,GAAkB,GAClBF,EAAUJ,EACa,UAAnBD,GACAZ,EAAa,QACbkB,EAAUrF,GACgB,WAAnB+E,GACPZ,EAAa,SACbkB,EAAUrF,EAAS,GACO,QAAnB+E,IACPZ,EAAa,SAGjBkB,EAAUL,EACa,UAAnBD,EACAZ,EAAa,QACa,WAAnBY,GACPZ,EAAa,SACbiB,EAAUpF,EAAS,GACO,QAAnB+E,IACPZ,EAAa,MACbiB,EAAUpF,IAIlBmF,EACI5H,EAAAA,cAAAA,OAAAA,CACIiH,UAAAA,aAAwBY,EAAAA,KAAYC,EAAAA,YAAmBC,EAAAA,IACvDnB,WAAYA,EACZzG,MAAAA,EAAAA,CACI+G,iBAAkB,WACf5H,EAAMsE,KAAK2D,OAAOrJ,OAGxBqJ,GAAAA,IAAAA,GAK6B/H,EAAAA,EAAAA,MAAlCC,EAAAA,EAAAA,QAAiBC,EAAAA,EAARC,OAEXC,GAAgBC,EAAAA,EAAAA,WAAU,CAC5BoH,UAAAA,aAAwB/K,EAAAA,IAAKC,EAAAA,IAC7B6L,OAAiB,MAATpE,EAAenB,EAAS,EAChCwF,OAAiB,MAATrE,EAAe,EAAInB,EAC3B9C,OAAQD,EACRI,WAAYL,IAGVyI,GAAaC,EAAAA,EAAAA,eAGjB1C,EAAO,CACLzK,KAAM,SAAAoN,GAAA,OAAQC,EAAKrP,KACnBsP,QAAS,SAAAF,GAAA,MAAS,CACdvB,QAAS,EACTI,UAAAA,aAAwBoB,EAAKnM,EAAAA,IAAKmM,EAAKlM,EAAAA,IACvCgL,cAAAA,aAA4BkB,EAAKtK,MAAAA,IAASsK,EAAKzD,MAAAA,YAAiBV,EAAAA,MAEpEqE,KAAM,SAAAH,GAAA,MAAS,CACXvB,QAAS,EACTI,UAAAA,aAAwBoB,EAAKnM,EAAAA,IAAKmM,EAAKlM,EAAAA,IACvCgL,cAAAA,aAA4BkB,EAAKtK,MAAAA,IAASsK,EAAKzD,MAAAA,YAAiBV,EAAAA,MAEpEsE,MAAO,SAAAJ,GAAA,MAAS,CACZvB,QAAS,EACTI,UAAAA,aAAwBoB,EAAKnM,EAAAA,IAAKmM,EAAKlM,EAAAA,IACvCgL,cAAAA,aAA4BkB,EAAKtK,MAAAA,IAASsK,EAAKzD,MAAAA,YAAiBV,EAAAA,MAEpEuE,OAAQ,SAAAL,GAAA,MAAS,CACbvB,QAAS,EACTI,UAAAA,aAAwBoB,EAAKnM,EAAAA,IAAKmM,EAAKlM,EAAAA,IACvCgL,cAAAA,aAA4BkB,EAAKtK,MAAAA,IAASsK,EAAKzD,MAAAA,YAAiBV,EAAAA,MAEpEwE,MAAO,CACH7B,QAAS,GAEblH,OAAQD,EACRI,WAAYL,IAAAA,OAIZO,EAAAA,cAACE,EAAAA,EAAAA,EAAS8G,CAAEC,UAAWrH,EAAcqH,UAAAA,cAAwBS,GACxDQ,GAAW,SAACS,EAAiBN,EAAMO,EAAQC,GAAAA,OACjC7I,EAAAA,cAAoBqH,EAAAA,EAAAA,CACvBwB,UAAAA,EACAtN,OAAQoM,EACRmB,OAAQ5E,EACRiB,aAAAA,EACAyB,WAAY5B,EACZpF,cAAe+I,GACZN,EACC1B,EAAU,CAAEA,QAAAA,GAAY,QAGpC3G,EAAAA,cAACE,EAAAA,EAAAA,KAASuE,CACNtE,MAAOb,EAAMsE,KAAKmF,OAAOtE,KACzB2B,GAAI,EACJC,GAAIzG,EAAcoI,OAClB1B,GAAI,EACJC,GAAI3G,EAAcqI,SAErBL,MZ5JAoB,EAAgB,CACzBlF,cAAemF,IAAAA,MAAgB,CAAC,SAAU,UAC1ClF,WAAYkF,IAAAA,UAAoB,CAC5BA,IAAAA,OACAA,IAAAA,QACIA,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,OAAkBA,IAAAA,WAAqBpD,SAElFoD,IAAAA,SAEJjF,SAAUiF,IAAAA,OACVhF,YAAagF,IAAAA,OACb/E,aAAc+E,IAAAA,OACd1N,OAAQ0N,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,SAC7C5B,WAAY4B,IAAAA,KACZ1B,OAAQ0B,IAAAA,KACRzB,eAAgByB,IAAAA,MAAgB,CAAC,QAAS,SAAU,QACpDxB,aAAcwB,IAAAA,OACdvB,WAAYuB,IAAAA,MAGHC,EAAeD,IAAAA,MAAgBD,GAE/BG,EAAY,CAAC,MAAO,QAAS,SAAU,QalBvCC,GAAO3C,EAAAA,EAAAA,OAChB,gBACI4C,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAxL,EAAAA,EAAAA,MACAD,EAAAA,EAAAA,OAeM0L,EAAO,CAAElE,IAAAA,EAdfA,IAcoBG,MAAAA,EAbpBA,MAa2BF,OAAAA,EAZ3BA,OAYmCC,KAAAA,EAXnCA,MAAAA,OAcIvF,MAAAA,cAAAA,MAAAA,SAAAA,KACKmJ,EAAU/O,KAAI,gBACLwJ,EAAO2F,EAAKhM,GAAAA,IAIbqG,EAAM,OAAO,SAEZ4F,EAAuB,QAAbjM,GAAmC,WAAbA,EAChCuG,EACW,QAAbvG,GAAmC,SAAbA,EAAsB,SAAW,eAGvDyC,MAAAA,cAACyJ,EAAAA,EAAAA,CACGzQ,IAAKuE,GACDqG,EAAAA,CACJA,KAAM4F,EAAU,IAAM,IACtBtN,EAAgB,UAAbqB,EAAuBO,EAAQ,EAClC3B,EAAgB,WAAboB,EAAwBM,EAAS,EACpCgG,MAAO2F,EAAUH,EAASC,EAC1B7G,OAAQ+G,EAAU1L,EAAQD,EAC1BiG,cAAeA,YC9C9B4F,GAAWjD,EAAAA,EAAAA,OACpB,gBACI7G,EAAAA,EAAAA,cAUMN,GAAQC,EAAAA,EAAAA,MAAAA,OAEPS,MAAAA,cAACE,EAAAA,EAAAA,KAASuE,EAAAA,GAAS7E,EAAoBN,EAAMqK,KAAKlF,UCZpDmF,GAAYnD,EAAAA,EAAAA,OAAK,gBAAGN,EAAAA,EAAAA,MAAAA,GACa3G,EAAAA,EAAAA,MAAlCC,EAAAA,EAAAA,QAAiBC,EAAAA,EAARC,OAEXuI,GAAaC,EAAAA,EAAAA,eACfhC,EACA,CACInL,KAAM,mBAAQyJ,EAAKzL,KACnBsP,QAAS,kBAAS,CACdzB,QAAS,EACTT,GAAI3B,EAAK2B,GACTC,GAAI5B,EAAK4B,GACTC,GAAI7B,EAAK6B,GACTC,GAAI9B,EAAK8B,KAEbgC,KAAM,kBAAS,CACX1B,QAAS,EACTT,GAAI3B,EAAK2B,GACTC,GAAI5B,EAAK4B,GACTC,GAAI7B,EAAK6B,GACTC,GAAI9B,EAAK8B,KAEbiC,MAAO,kBAAS,CACZ3B,QAAS,EACTT,GAAI3B,EAAK2B,GACTC,GAAI5B,EAAK4B,GACTC,GAAI7B,EAAK6B,GACTC,GAAI9B,EAAK8B,KAEbkC,OAAQ,kBAAS,CACb5B,QAAS,EACTT,GAAI3B,EAAK2B,GACTC,GAAI5B,EAAK4B,GACTC,GAAI7B,EAAK6B,GACTC,GAAI9B,EAAK8B,KAEbmC,MAAO,CACH7B,QAAS,GAEblH,OAAQD,EACRI,WAAYL,IAAAA,OAKhBO,MAAAA,cAAAA,IAAAA,KACKkI,GAAW,SAACtI,EAAe6E,GAAAA,OACxBzE,MAAAA,cAAC0J,EAAAA,EAAAA,GAAajF,EAAAA,CAAMzL,IAAKyL,EAAKzL,IAAK4G,cAAeA,YC/CrDiK,GAAOpD,EAAAA,EAAAA,OAChB,gBACI3I,EAAAA,EAAAA,MACAD,EAAAA,EAAAA,OACAwL,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAQ,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,QASMC,GAASxL,EAAAA,EAAAA,UAAQ,mBACd6K,GAEEtD,EAAiB,CACpBjI,MAAAA,EACAD,OAAAA,EACAgG,MAAOwF,EACPzF,KAAM,IACNQ,OAAQ0F,MAEb,CAACT,EAAQS,EAAShM,EAAOD,IAEtBoM,GAASzL,EAAAA,EAAAA,UAAQ,mBACd8K,GAEEvD,EAAiB,CACpBjI,MAAAA,EACAD,OAAAA,EACAgG,MAAOyF,EACP1F,KAAM,IACNQ,OAAQ2F,MAEb,CAAClM,EAAQC,EAAOwL,EAAQS,IAAAA,OAGvB/J,MAAAA,cAAAA,MAAAA,SAAAA,KACKgK,GAAUhK,MAAAA,cAAC4J,EAAAA,CAAUzD,MAAO6D,IAC5BC,GAAUjK,MAAAA,cAAC4J,EAAAA,CAAUzD,MAAO8D,QN1ChCC,EAAqB,SAC9B9H,EAAAA,GAAAA,IAAAA,EAEIwB,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MAAAA,EAAAA,EACA3H,EAAAA,OAAAA,IAAAA,EAAI,QACJC,EAAAA,OAAAA,IAAAA,EAAI,IACJsG,EAAAA,EAAAA,OAEAqB,EAAAA,EAAAA,cACAC,EAAAA,EAAAA,WAAAA,EAAAA,EACAC,SAAAA,OAAAA,IAAAA,EAAW,QACXC,YAAAA,OAAAA,IAAAA,EAAc,QACdC,aAAAA,OAAAA,IAAAA,EAAe,IACPiG,EAAAA,EAAR5O,OAEAgM,EAAAA,EAAAA,OAAAA,EAAAA,EACAC,eAAAA,OAAAA,IAAAA,EAAiB,YACjBC,aAAAA,OAAAA,IAAAA,EAAe,IAEfnI,EAAAA,EAAAA,MAAAA,EAmBuCoE,EAAsB,CAC7DE,KAAAA,EACAC,MAAAA,EACAC,cAAAA,EACAC,WAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,aAAAA,EACAC,OAAQ,WARJsB,EAAAA,EAAAA,MAAOT,EAAAA,EAAAA,UAAWG,EAAAA,EAAAA,aAW1B/C,EAAIM,OACJN,EAAIuB,UAAUzH,EAAGC,GAEjBiG,EAAI4C,UAAYA,EAChB5C,EAAI+C,aAAeA,EACnB/C,EAAIe,MAAU7D,EAAMsE,KAAK6B,MAAMvH,KAAKkM,WAAgB9K,EAAMsE,KAAK6B,MAAMvH,KAAKkM,WAAAA,IAAgB,IACtF9K,EAAMsE,KAAK6B,MAAMvH,KAAKkF,SAAAA,MACpB9D,EAAMsE,KAAK6B,MAAMvH,KAAKmF,YAAAA,OAAAA,EAEvB/D,EAAMsE,KAAKmF,OAAOtE,KAAKpE,aAAAA,EAAe,GAAK,IAC5C+B,EAAIU,UAAYuH,OAAO/K,EAAMsE,KAAKmF,OAAOtE,KAAKpE,aAC9C+B,EAAIQ,QAAU,SAEVtD,EAAMsE,KAAKmF,OAAOtE,KAAKnE,SACvB8B,EAAIS,YAAcvD,EAAMsE,KAAKmF,OAAOtE,KAAKnE,QAG7C8B,EAAIW,YACJX,EAAIE,OAAO,EAAG,GACdF,EAAIG,OAAgB,MAATqB,EAAenB,EAAS,EAAY,MAATmB,EAAe,EAAInB,GACzDL,EAAI9B,UAAAA,IAGF/E,EAA4B,mBAAZ4O,EAAyBA,EAAU,SAACjQ,GAAAA,MAAAA,GAAsBA,GAAAA,GAEhFuL,EAAMxK,SAAQ,4BACLqE,EAAMsE,KAAK6B,MAAMhB,KAAKpE,aAAAA,EAAe,GAAK,IAC3C+B,EAAIU,UAAYuH,OAAO/K,EAAMsE,KAAK6B,MAAMhB,KAAKpE,aAC7C+B,EAAIQ,QAAU,SAEVtD,EAAMsE,KAAK6B,MAAMhB,KAAKnE,SACtB8B,EAAIS,YAAcvD,EAAMsE,KAAK6B,MAAMhB,KAAKnE,QAG5C8B,EAAIW,YACJX,EAAIE,OAAO+F,EAAKnM,EAAGmM,EAAKlM,GACxBiG,EAAIG,OAAO8F,EAAKnM,EAAImM,EAAK3D,MAAO2D,EAAKlM,EAAIkM,EAAK1D,OAC9CvC,EAAI9B,UAAAA,IAGFpG,EAAQqB,EAAO8M,EAAKnO,OAE1BkI,EAAIM,OACJN,EAAIuB,UAAU0E,EAAKnM,EAAImM,EAAKtK,MAAOsK,EAAKlM,EAAIkM,EAAKzD,OACjDxC,EAAI0G,QAAOrL,EAAAA,EAAAA,IAAiByG,IAExB5E,EAAMsE,KAAK6B,MAAMvH,KAAK8C,OACtBoB,EAAIc,UAAY5D,EAAMsE,KAAK6B,MAAMvH,KAAK8C,MAG1CoB,EAAIoB,SAAS8G,OAAOpQ,GAAQ,EAAG,GAC/BkI,EAAIqB,kBAAAA,IAGJ8D,EAAsB,KAClBM,EAAU,EACVC,EAAU,EACVC,EAAiB,EACjB/C,EAA6B,SAEpB,MAATpB,GACAmE,GAAkB,GAClBF,EAAUJ,EACa,UAAnBD,GACAxC,EAAY,QACZ8C,EAAUrF,GACgB,WAAnB+E,GACPxC,EAAY,SACZ8C,EAAUrF,EAAS,GACO,QAAnB+E,IACPxC,EAAY,SAGhB8C,EAAUL,EACa,UAAnBD,EACAxC,EAAY,QACc,WAAnBwC,GACPxC,EAAY,SACZ6C,EAAUpF,EAAS,GACO,QAAnB+E,IACPxC,EAAY,MACZ6C,EAAUpF,IAIlBL,EAAIuB,UAAUkE,EAASC,GACvB1F,EAAI0G,QAAOrL,EAAAA,EAAAA,IAAiBsK,IAC5B3F,EAAIe,MACA7D,EAAMsE,KAAK2D,OAAOrJ,KAAKkM,WAAgB9K,EAAMsE,KAAK2D,OAAOrJ,KAAKkM,WAAAA,IAAgB,IAC/E9K,EAAMsE,KAAK2D,OAAOrJ,KAAKkF,SAAAA,MAAc9D,EAAMsE,KAAK2D,OAAOrJ,KAAKmF,WAE3D/D,EAAMsE,KAAK2D,OAAOrJ,KAAK8C,OACvBoB,EAAIc,UAAY5D,EAAMsE,KAAK2D,OAAOrJ,KAAK8C,MAG3CoB,EAAI4C,UAAYA,EAChB5C,EAAI+C,aAAe,SACnB/C,EAAIoB,SAAS+D,EAAQ,EAAG,GAG5BnF,EAAIqB,WAGK8G,EAAqB,SAC9BnI,EAAAA,GAAAA,IAEIiH,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAxL,EAAAA,EAAAA,MACAD,EAAAA,EAAAA,OAEAwH,EAAAA,EAAAA,IACAG,EAAAA,EAAAA,MACAF,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,KAEAjG,EAAAA,EAAAA,MAaEiK,EAAO,CAAElE,IAAAA,EAAKG,MAAAA,EAAOF,OAAAA,EAAQC,KAAAA,GAEnC4D,EAAUlO,SAAQ,gBACR2I,EAAO2F,EAAKhM,GAAAA,IAIbqG,EAAM,OAAO,SAEZ4F,EAAuB,QAAbjM,GAAmC,WAAbA,EAChCuG,EAA6B,QAAbvG,GAAmC,SAAbA,EAAsB,SAAW,QACvEsG,EAAQ2F,EAAUH,EAASC,EAC3B/N,EAASmK,EAAa9B,EAAKrI,OAAQsI,GAEzCqG,EAAmB9H,EAAAA,EAAAA,GACZwB,EAAAA,CACHA,KAAM4F,EAAU,IAAM,IACtBtN,EAAgB,UAAbqB,EAAuBO,EAAQ,EAClC3B,EAAgB,WAAboB,EAAwBM,EAAS,EACpCgG,MAAAA,EACAtI,OAAAA,EACAkH,OAAQ+G,EAAU1L,EAAQD,EAC1BiG,cAAAA,EACAxE,MAAAA,SAKCkL,EAA0B,SACnCpI,EAAAA,GAAAA,IAEItE,EAAAA,EAAAA,MACAD,EAAAA,EAAAA,OACAgG,EAAAA,EAAAA,MACAD,EAAAA,EAAAA,KACAQ,EAAAA,EAAAA,OASU2B,EAAiB,CAAEjI,MAAAA,EAAOD,OAAAA,EAAQgG,MAAAA,EAAOD,KAAAA,EAAMQ,OAAAA,IAEvDnJ,SAAQ,YACVmH,EAAIW,YACJX,EAAIE,OAAOmC,EAAK2B,GAAI3B,EAAK6B,IACzBlE,EAAIG,OAAOkC,EAAK4B,GAAI5B,EAAK8B,IACzBnE,EAAI9B,c,gdO3OCmK,EAAY,wBAAavN,KAAKU,MAAsB,IAAhBV,KAAKwN,UAAAA,eCAzCC,EAAe,CACxB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MC1PSC,EAAQ,CACjB,OACA,QACA,OACA,SACA,UACA,QACA,MACA,QACA,OACA,YACA,UACA,UACA,UACA,SACA,SACA,OACA,YACA,QACA,OACA,QACA,QACA,YACA,YACA,SACA,MACA,UACA,WACA,QACA,SACA,SACA,OACA,WACA,UACA,WACA,OACA,OACA,WACA,QACA,QCvCSC,EAAuB,CAChC,MACA,OACA,aACA,KACA,SACA,SACA,OACA,UACA,SACA,OACA,OACA,QACA,OACA,OACA,IACA,MACA,OACA,UCNSC,GDMT,8ECN8B,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","sources":["webpack://nivo-website/./src/data/components/swarmplot/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/utils.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/AnnotationNote.tsx","webpack://nivo-website/../src/AnnotationLink.tsx","webpack://nivo-website/../src/CircleAnnotationOutline.tsx","webpack://nivo-website/../src/DotAnnotationOutline.tsx","webpack://nivo-website/../src/RectAnnotationOutline.tsx","webpack://nivo-website/../src/Annotation.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/./src/data/components/swarmplot/generator.js","webpack://nivo-website/./src/data/components/swarmplot/mapper.js","webpack://nivo-website/../node_modules/lodash/_arrayEach.js","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseAssign.js","webpack://nivo-website/../node_modules/lodash/_baseAssignIn.js","webpack://nivo-website/../node_modules/lodash/_baseClone.js","webpack://nivo-website/../node_modules/lodash/_baseFilter.js","webpack://nivo-website/../node_modules/lodash/_baseIsMap.js","webpack://nivo-website/../node_modules/lodash/_baseIsSet.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseUnset.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_cloneDataView.js","webpack://nivo-website/../node_modules/lodash/_cloneRegExp.js","webpack://nivo-website/../node_modules/lodash/_cloneSymbol.js","webpack://nivo-website/../node_modules/lodash/_copySymbols.js","webpack://nivo-website/../node_modules/lodash/_copySymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_customOmitClone.js","webpack://nivo-website/../node_modules/lodash/_getAllKeysIn.js","webpack://nivo-website/../node_modules/lodash/_getSymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_initCloneArray.js","webpack://nivo-website/../node_modules/lodash/_initCloneByTag.js","webpack://nivo-website/../node_modules/lodash/_parent.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/filter.js","webpack://nivo-website/../node_modules/lodash/isMap.js","webpack://nivo-website/../node_modules/lodash/isSet.js","webpack://nivo-website/../node_modules/lodash/omit.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["import { defaultProps } from '@nivo/swarmplot'\nimport {\n    themeProperty,\n    motionProperties,\n    axesProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        help: 'Chart data.',\n        description: `\n            This Chart's doesn't have a predefined structure,\n            you must use a schema which match \\`groupBy\\`,\n            \\`identity\\` and \\`value\\` properties.\n        `,\n        type: 'object[]',\n        group: 'Base',\n        required: true,\n    },\n    {\n        key: 'id',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: `Property used to retrieve the node's unique identifier.`,\n        description: `\n            This property will determine the identifier of a datum\n            amongst the whole data set, thus, it's really important\n            that it's unique.\n\n            It is especially important to have proper identifier\n            when enabling animations, as it will be used to determine\n            if a node is a new one or should transition from previous\n            to next state.\n        `,\n        defaultValue: defaultProps.id,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: `Property used to retrieve the node's value.`,\n        defaultValue: defaultProps.value,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'string | (value: number) => string | number',\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'groups',\n        group: 'Base',\n        type: 'string[]',\n        required: true,\n        help: 'Available groups.',\n    },\n    {\n        key: 'groupBy',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: 'Propety used to group nodes, must return a group which is available in the groups property.',\n        defaultValue: defaultProps.groupBy,\n    },\n    {\n        key: 'size',\n        group: 'Base',\n        type: 'number | object | Function',\n        required: false,\n        help: `How to compute node size, static or dynamic.`,\n        description: `\n            If you provide a **number**, all nodes will have the same\n            **fixed size**.\n\n            You can also use an object to define a varying size,\n            it must conform to the following interface:\n\n            \\`\\`\\`\n            {\n                key:    string\n                values: [min: number, max: number]\n                sizes:  [min: number, max: number]\n            }\n            \\`\\`\\`\n\n            Then the size of each node will **depend on the value\n            of \\`key\\` and \\`sizes\\`**.\n\n            If you use a **custom function**, it will receive the current\n            node and must **return a number**.\n        `,\n        defaultValue: defaultProps.size,\n    },\n    {\n        key: 'spacing',\n        help: 'Spacing between nodes.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.spacing,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        group: 'Base',\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        group: 'Base',\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative\n            of the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'forceStrength',\n        help: 'Force strength.',\n        description: `\n            This value determine the strength applied on the value\n            axis, using lower value will result in a **more linear\n            arrangement**, however nodes won't be placed accurately\n            according to their values.\n\n            On the other hand, if you increase this value, the\n            simulation will try to **align the nodes with their\n            corresponding values** on the value axis, resulting\n            in a narrower chart.\n\n            Please note that increasing this value will sometimes\n            require to **increase the quality of the simulation**\n            via the \\`simulationIterations\\` property.\n        `,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.forceStrength,\n        controlType: 'range',\n        group: 'Simulation',\n        controlOptions: {\n            step: 0.2,\n            min: 0.2,\n            max: 9,\n        },\n    },\n    {\n        key: 'simulationIterations',\n        help: 'Adjust the simulation quality.',\n        description: `\n            Increasing this number will result in a **more accurate simulation**,\n            however it will also involve more computing.\n        `,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.simulationIterations,\n        controlType: 'range',\n        group: 'Simulation',\n        controlOptions: {\n            min: 60,\n            max: 260,\n        },\n    },\n    {\n        key: 'layout',\n        help: `Chart layout.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaultProps.layout,\n        controlType: 'radio',\n        group: 'Layout',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'gap',\n        help: 'Gap between each serie.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.gap,\n        controlType: 'range',\n        group: 'Layout',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 100,\n        },\n    },\n    themeProperty(['svg', 'canvas']),\n    {\n        key: 'colors',\n        help: 'Defines how to compute node color.',\n        description: `\n            The colors property is used to determine the **ordinal color scale**\n            to use to compute nodes' color, it use the serie id as a discriminator.\n\n            You can use a **predefined color scheme**, using the following form:\n\n            \\`\\`\\`\n            colors={{ scheme: 'category10' }}\n            \\`\\`\\`\n\n            Where \\`category10\\` is the identifier of the color scheme.\n            Please have a look at [the dedicated guide](self:/guides/colors)\n            for available schemes.\n\n            If you wish to use **color already defined on the data**\n            you passed to the chart, you can also use this form:\n\n            \\`\\`\\`\n            colors={{ datum: 'color' }}\n            \\`\\`\\`\n\n            Where \\`color\\` is the path to the property containing the color\n            to apply in the current datum.\n\n            You can also use a **custom function** which will receive the current\n            datum and must **return a valid color code**.\n\n            If you pass a string, it will be **used as a color for each and every nodes**.\n        `,\n        type: `Function | object | string`,\n        required: false,\n        defaultValue: defaultProps.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'colorBy',\n        group: 'Style',\n        help: 'Property or accessor function to be used with colors.',\n        description: `\n            When using a color scheme or an array of colors,\n            you'll generate a color scale, this scale will\n            receive a value which will be translated to a color.\n\n            This property define the way we get this value,\n            it can be either a \\`string\\` or a custom function.\n\n            Please have a look at [the colors guide](self:/guides/colors)\n            for further information.\n        `,\n        type: `Function | string`,\n        required: false,\n        defaultValue: defaultProps.colorBy,\n        controlType: 'choices',\n        controlOptions: {\n            choices: ['group', 'id'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'borderWidth',\n        help: 'Control node border width.',\n        type: 'number | Function',\n        required: false,\n        defaultValue: defaultProps.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Control node border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`grid\\`, \\`axes\\`, \\`nodes\\`, \\`mesh\\`.\n\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n\n            The layer function which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`SwarmPlot\\` component.\n\n            When using the canvas implementation, the function\n            will receive the canvas 2d context as first argument\n            and the chart's context and computed data as second.\n\n            Please make sure to use \\`context.save()\\` and\n            \\`context.restore()\\` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n\n            You can see a live example of custom layers\n            [here](storybook:/swarmplot--extra-layers).\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaultProps.layers,\n    },\n    {\n        key: 'circleComponent',\n        group: 'Customization',\n        flavors: ['svg'],\n        help: 'Override default circle component for the SVG implementation.',\n        description: `\n            This property can be used to completely\n            customize the way nodes are rendered.\n\n            You should return a valid SVG node.\n\n            You can see a live example of custom circle component\n            [here](storybook:/swarmplot--custom-circle-component).\n        `,\n        required: false,\n        type: 'Component',\n    },\n    {\n        key: 'renderCircle',\n        group: 'Customization',\n        flavors: ['canvas'],\n        help: 'Override default circle rendering for the canvas implementation.',\n        description: `\n            This property can be used to completely\n            customize the way nodes are rendered.\n\n            The rendering function will receive the canvas 2d\n            context as first argument.\n\n            Please make sure to use \\`context.save()\\` and\n            \\`context.restore()\\` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n        `,\n        required: false,\n        type: 'Function',\n    },\n    {\n        key: 'enableGridX',\n        group: 'Grid & Axes',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.enableGridX,\n        controlType: 'switch',\n    },\n    {\n        key: 'gridXValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for vertical grid lines.',\n        type: 'Array<number | string>',\n        required: false,\n    },\n    {\n        key: 'enableGridY',\n        group: 'Grid & Axes',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.enableGridY,\n        controlType: 'switch',\n    },\n    {\n        key: 'gridYValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for horizontal grid lines.',\n        type: 'Array<number | string>',\n        required: false,\n    },\n    ...axesProperties(),\n    {\n        key: 'isInteractive',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'useMesh',\n        help: 'Use a mesh to detect mouse interactions, always true for canvas.',\n        flavors: ['svg'],\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.useMesh,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'debugMesh',\n        help: 'Display the mesh used to detect mouse interactions (voronoi cells), depends on useMesh.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.debugMesh,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        help: 'onMouseEnter handler.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        help: 'onMouseMove handler.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        help: 'onMouseLeave handler.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        help: 'onClick handler.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the node's data.\n        `,\n    },\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationSpec,\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: Required<AnnotationSpec<Datum>>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    AnnotationSpec,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: Required<AnnotationSpec<Datum>>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: Required<AnnotationSpec<Datum>>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    distance: number\n    source: string\n    target: string\n}\n\ntype ExtraNode = {\n    color: string\n    depth: number\n    id: string\n    radius: number\n}\n\nexport const generateNetworkData = ({\n    rootNodeRadius = 12,\n    minMidNodes = 6,\n    maxMidNodes = 16,\n    midNodeRadius = 8,\n    minLeaves = 4,\n    maxLeaves = 16,\n    leafRadius = 4,\n} = {}) => {\n    const rootNode = {\n        id: '0',\n        radius: rootNodeRadius,\n        depth: 0,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `${k + 1}`,\n        radius: midNodeRadius,\n        depth: 1,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: '0',\n            target: source.id,\n            distance: 50,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 70,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                radius: leafRadius,\n                depth: 2,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 30,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit?: number | null, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: Record<string, unknown> = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","import { generateSwarmPlotData, randomizeSwarmPlotData } from '@nivo/generators'\n\nconst allGroups = ['group A', 'group B', 'group C', 'group D', 'group E', 'group F', 'group G']\n\nexport const generateLightDataSet = previousData => {\n    if (previousData !== undefined) return randomizeSwarmPlotData(previousData)\n\n    return generateSwarmPlotData(allGroups.slice(0, 3), { min: 50, max: 80 })\n}\n\nexport const generateHeavyDataSet = previousData => {\n    if (previousData !== undefined) return randomizeSwarmPlotData(previousData)\n\n    return generateSwarmPlotData(allGroups, { min: 60, max: 100 })\n}\n","import { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper({\n    valueFormat: mapFormat,\n    axisTop: mapAxis('top'),\n    axisRight: mapAxis('right'),\n    axisBottom: mapAxis('bottom'),\n    axisLeft: mapAxis('left'),\n})\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["props","key","help","description","type","group","required","defaultValue","defaultProps","controlType","controlOptions","unit","min","max","enableControlForFlavors","flavors","step","choices","label","value","themeProperty","map","axesProperties","motionProperties","groups","groupProperties","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","isCircleAnnotation","annotationSpec","isDotAnnotation","isRectAnnotation","computeAnnotation","annotation","computedNoteX","computedNoteY","x","y","noteX","noteY","noteWidth","noteTextOffset","_isNumber","abs","Error","computedX","computedY","angle","sourceX","sourceY","targetX","targetY","Math","atan2","absoluteAngleDegrees","radiansToDegrees","getLinkAngle","position","positionFromAngle","degreesToRadians","size","eighth","round","height","width","textX","noteLineX","points","text","useAnnotations","data","annotations","getPosition","getDimensions","useMemo","reduce","acc","offset","_filter","match","datum","dimensions","_omit","bindAnnotations","useComputedAnnotations","computed","AnnotationNote","note","theme","useTheme","useMotionConfig","animate","springConfig","config","animatedProps","useSpring","immediate","createElement","React","outlineWidth","animated","style","strokeLinejoin","strokeWidth","stroke","outlineColor","AnnotationLink","isOutline","path","firstPoint","animatedPath","useAnimatedPath","link","strokeLinecap","fill","d","CircleAnnotationOutline","radius","outline","circle","cx","cy","r","DotAnnotationOutline","dotSize","symbol","RectAnnotationOutline","rect","Annotation","useComputedAnnotation","noteType","isValidElement","isSvgNote","drawPoints","ctx","index","moveTo","lineTo","renderAnnotationsToCanvas","length","save","isCanvasNote","lineCap","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","font","fontSize","fontFamily","lineJoin","strokeText","fillText","restore","computeCartesianTicks","translate","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","centerScale","line","lineX","lineY","textY","isRTL","document","dir","textAlign","align","center","textBaseline","baseline","top","bottom","left","right","ticks","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","_values","Array","isArray","lines","x1","x2","y1","y2","memoizedAxisTick","memo","_value","onClick","textAnchor","opacity","cursor","event","g","transform","dominantBaseline","textTransform","memoizedAxis","renderTick","AxisTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transition","useTransition","t","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","rotate","domain","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","isXAxis","Axis","GridLine","grid","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","fontWeight","Number","String","renderAxesToCanvas","renderGridLinesToCanvas","randColor","random","countryCodes","names","programmingLanguages","generateBulletData","id","title","subtitle","rangeCount","measureCount","markerCount","float","ranges","range","remaining","measures","markers","generateChordData","minValue","maxValue","maxSize","selectedKeys","slice","matrix","generateNetworkData","rootNodeRadius","minMidNodes","maxMidNodes","midNodeRadius","minLeaves","maxLeaves","leafRadius","rootNode","depth","color","nodes","_","k","links","extraNodes","push","source","target","distance","concat","generateParallelCoordinatesData","shuffle","availableNodes","n","name","getNodeTargets","currentPath","targets","filter","includes","join","targetId","getNodesTargets","targetsById","generateSankeyData","nodeCount","maxIterations","assign","node","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","categoryCount","groupIndex","price","volume","categories","randomizeSwarmPlotData","previousData","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","language","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","types","country","find","generateSeries","ids","xKeys","generateDayCounts","to","days","timeDays","dayFormat","day","generateOrderedDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","i","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","allGroups","generateLightDataSet","generateHeavyDataSet","valueFormat","axisTop","axisRight","axisBottom","axisLeft","module","exports","array","iteratee","copyArray","shuffleSelf","copyObject","object","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","stack","result","isDeep","isFlat","isFull","isArr","tag","isFunc","stacked","get","set","subValue","add","baseEach","collection","predicate","isObjectLike","nativeFloor","floor","nativeRandom","lower","upper","castPath","last","parent","toKey","arrayMap","cloneArrayBuffer","dataView","buffer","constructor","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","prototype","symbolValueOf","valueOf","call","getSymbols","getSymbolsIn","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","getOwnPropertySymbols","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseGet","baseSlice","baseRandom","rand","arrayFilter","baseFilter","baseIteratee","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","baseUnset","customOmitClone","flatRest","paths","CLONE_DEEP_FLAG","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","baseValues"],"sourceRoot":""}