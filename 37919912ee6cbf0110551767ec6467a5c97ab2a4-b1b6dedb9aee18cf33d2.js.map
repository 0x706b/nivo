{"version":3,"file":"37919912ee6cbf0110551767ec6467a5c97ab2a4-b1b6dedb9aee18cf33d2.js","mappings":"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","sources":["webpack://nivo-website/./src/data/components/heatmap/generator.ts","webpack://nivo-website/./src/data/components/heatmap/mapper.ts","webpack://nivo-website/./src/data/components/heatmap/props.ts","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/utils.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/AnnotationNote.tsx","webpack://nivo-website/../src/AnnotationLink.tsx","webpack://nivo-website/../src/CircleAnnotationOutline.tsx","webpack://nivo-website/../src/DotAnnotationOutline.tsx","webpack://nivo-website/../src/RectAnnotationOutline.tsx","webpack://nivo-website/../src/Annotation.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/svg/symbols/SymbolCircle.tsx","webpack://nivo-website/../src/svg/symbols/SymbolSquare.tsx","webpack://nivo-website/../src/svg/symbols/SymbolTriangle.tsx","webpack://nivo-website/../src/defaults.ts","webpack://nivo-website/../src/svg/ContinuousColorsLegendSvg.tsx","webpack://nivo-website/../src/svg/AnchoredContinuousColorsLegendSvg.tsx","webpack://nivo-website/../src/svg/LegendSvgItem.tsx","webpack://nivo-website/../src/svg/symbols/SymbolDiamond.tsx","webpack://nivo-website/../src/svg/LegendSvg.tsx","webpack://nivo-website/../src/svg/BoxLegendSvg.tsx","webpack://nivo-website/../node_modules/lodash/_baseFilter.js","webpack://nivo-website/../node_modules/lodash/filter.js"],"sourcesContent":["import { generateXYSeries, sets } from '@nivo/generators'\nimport { Data } from './types'\n\nexport const getLightData = () =>\n    generateXYSeries({\n        serieIds: ['Japan', 'France', 'US', 'Germany', 'Norway', 'Iceland', 'UK', 'Vietnam'],\n        x: {\n            values: ['Train', 'Subway', 'Bus', 'Car', 'Boat', 'Moto', 'Moped', 'Bicycle', 'Others'],\n        },\n        y: {\n            length: NaN,\n            min: -100_000,\n            max: 100_000,\n            round: true,\n        },\n    }) as Data\n\nexport const getHeavyData = () =>\n    generateXYSeries({\n        serieIds: sets.countryCodes.slice(0, 26),\n        x: {\n            values: sets.names,\n        },\n        y: {\n            length: NaN,\n            min: -100_000,\n            max: 100_000,\n            round: true,\n        },\n    }) as Data\n","import { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\nimport { SvgUnmappedProps, SvgMappedProps } from './types'\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n        legends: (legends: SvgUnmappedProps['legends'][number][]): SvgMappedProps['legends'] => {\n            return legends.map(legend => ({\n                ...legend,\n                tickFormat: mapFormat(legend.tickFormat),\n            }))\n        },\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","import { commonDefaultProps as defaults, svgDefaultProps as svgDefaults } from '@nivo/heatmap'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    chartGrid,\n    axes,\n    isInteractive,\n    commonAccessibilityProps,\n    annotations,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg', 'canvas', 'api']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        type: 'HeatMapSerie<Datum, ExtraProps>[]',\n        required: true,\n        description: `\n        The default expected type is:\n        \n        \\`\\`\\`\n        {\n            id: string\n            data: {\n                x: string | number\n                y: number | null\n            }[]\n        }[]\n        \\`\\`\\`\n        \n        Please note that each serie **MUST** have the same length.\n        `,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        type: 'string | (value: number) => string | number',\n        control: { type: 'valueFormat' },\n    },\n    ...chartDimensions(allFlavors),\n    {\n        key: 'forceSquare',\n        help: 'Force square cells (width = height), please note that **padding is ignored**.',\n        defaultValue: defaults.forceSquare,\n        type: 'boolean',\n        control: { type: 'switch' },\n        group: 'Base',\n    },\n    {\n        key: 'xOuterPadding',\n        defaultValue: defaults.xOuterPadding,\n        type: 'number',\n        group: 'Base',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'xInnerPadding',\n        defaultValue: defaults.xInnerPadding,\n        type: 'number',\n        group: 'Base',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'yOuterPadding',\n        flavors: allFlavors,\n        defaultValue: defaults.yOuterPadding,\n        type: 'number',\n        group: 'Base',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'yInnerPadding',\n        defaultValue: defaults.yInnerPadding,\n        type: 'number',\n        group: 'Base',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'sizeVariation',\n        help: 'Optionally make the size of the cells vary depending on their value.',\n        description: `\n        To enable this feature, you can use the following config:\n        \n        \\`\\`\\`\n        interface SizeVariationConfig {\n            // use auto min/max values if unspecified\n            values?: [min: number, max: number]\n            // expressed as a range from 0~1\n            sizes: [min: number, max: number]\n        }\n        \\`\\`\\`\n        `,\n        defaultValue: defaults.sizeVariation,\n        type: 'false | SizeVariationConfig',\n        group: 'Base',\n    },\n    themeProperty(allFlavors),\n    {\n        key: 'colors',\n        group: 'Style',\n        type: 'ContinuousColorScaleConfig | ((datum) => string)',\n        defaultValue: defaults.colors,\n        control: {\n            type: 'continuous_colors',\n        },\n    },\n    {\n        key: 'emptyColor',\n        group: 'Style',\n        help: 'Color to use for cells not having a value.',\n        type: 'string',\n        defaultValue: defaults.emptyColor,\n        control: { type: 'colorPicker' },\n    },\n    {\n        key: 'opacity',\n        group: 'Style',\n        defaultValue: defaults.opacity,\n        type: 'number',\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'activeOpacity',\n        group: 'Style',\n        flavors: ['svg', 'canvas'],\n        defaultValue: defaults.activeOpacity,\n        type: 'number',\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'inactiveOpacity',\n        group: 'Style',\n        flavors: ['svg', 'canvas'],\n        defaultValue: defaults.inactiveOpacity,\n        type: 'number',\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'borderRadius',\n        group: 'Style',\n        help: 'Cell border radius, when using `rect`.',\n        flavors: ['svg', 'api'],\n        defaultValue: svgDefaults.borderRadius,\n        type: 'number',\n        control: { type: 'range', min: 0, max: 16 },\n    },\n    {\n        key: 'borderWidth',\n        group: 'Style',\n        defaultValue: defaults.borderWidth,\n        type: 'number',\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'borderColor',\n        group: 'Style',\n        description: `\n            how to compute cell border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'InheritedColorConfig<ComputedCell>',\n        defaultValue: defaults.borderColor,\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'enableLabels',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        defaultValue: defaults.enableLabels,\n        control: { type: 'switch' },\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        help: 'Define what to use as a label.',\n        type: 'PropertyAccessor',\n        defaultValue: defaults.label,\n        group: 'Labels',\n    },\n    {\n        key: 'labelTextColor',\n        description: `\n            how to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        defaultValue: defaults.labelTextColor,\n        control: { type: 'inheritedColor' },\n        group: 'Labels',\n    },\n    ...chartGrid({\n        flavors: allFlavors,\n        xDefault: defaults.enableGridX,\n        yDefault: defaults.enableGridY,\n    }),\n    ...axes({ flavors: allFlavors }),\n    {\n        key: 'legends',\n        group: 'Legends',\n        help: 'Please note that **legends are ignored when using a custom function** for `colors`.',\n        type: `ContinuousColorsLegendProps[]`,\n        control: {\n            type: 'array',\n            shouldCreate: true,\n            shouldRemove: true,\n            defaults: {\n                anchor: 'center',\n                translateX: 0,\n                translateY: 0,\n                length: 320,\n                thickness: 8,\n                direction: 'row',\n                tickPosition: 'after',\n                tickSize: 3,\n                tickSpacing: 4,\n                tickOverlap: false,\n                tickFormat: { format: '>-.2s', enabled: true },\n                title: 'New Legend',\n                titleAlign: 'start',\n                titleOffset: 4,\n            },\n            props: [\n                {\n                    key: 'anchor',\n                    type: 'LegendAnchor',\n                    control: { type: 'boxAnchor' },\n                },\n                {\n                    key: 'translateX',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: -200,\n                        max: 200,\n                    },\n                },\n                {\n                    key: 'translateY',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: -200,\n                        max: 200,\n                    },\n                },\n                {\n                    key: 'length',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: 60,\n                        max: 500,\n                    },\n                },\n                {\n                    key: 'thickness',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: 6,\n                        max: 32,\n                    },\n                },\n                {\n                    key: 'direction',\n                    type: `'row' | 'column'`,\n                    control: {\n                        type: 'radio',\n                        choices: [\n                            {\n                                label: 'row',\n                                value: 'row',\n                            },\n                            {\n                                label: 'column',\n                                value: 'column',\n                            },\n                        ],\n                    },\n                },\n                {\n                    key: 'tickPosition',\n                    type: `'before' | 'after'`,\n                    control: {\n                        type: 'radio',\n                        choices: [\n                            {\n                                label: 'before',\n                                value: 'before',\n                            },\n                            {\n                                label: 'after',\n                                value: 'after',\n                            },\n                        ],\n                    },\n                },\n                {\n                    key: 'tickSize',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: 0,\n                        max: 12,\n                    },\n                },\n                {\n                    key: 'tickSpacing',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: 0,\n                        max: 12,\n                    },\n                },\n                {\n                    key: 'tickOverlap',\n                    type: 'boolean',\n                    control: { type: 'switch' },\n                },\n                {\n                    key: 'tickFormat',\n                    type: 'string | (value: number) => string | number',\n                    control: { type: 'valueFormat' },\n                },\n                {\n                    key: 'title',\n                    type: 'string',\n                    control: { type: 'text' },\n                },\n                {\n                    key: 'titleAlign',\n                    type: `'start' | 'middle' | 'end'`,\n                    control: {\n                        type: 'radio',\n                        columns: 3,\n                        choices: [\n                            {\n                                label: 'start',\n                                value: 'start',\n                            },\n                            {\n                                label: 'middle',\n                                value: 'middle',\n                            },\n                            {\n                                label: 'end',\n                                value: 'end',\n                            },\n                        ],\n                    },\n                },\n                {\n                    key: 'titleOffset',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: 0,\n                        max: 12,\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'layers',\n        type: `('grid' | 'axes' | 'cells' | CustomLayer | CustomCanvasLayer)[]`,\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers, please use the appropriate variant for custom layers.',\n        defaultValue: defaults.layers,\n        flavors: ['svg', 'canvas'],\n    },\n    {\n        key: 'cellComponent',\n        group: 'Customization',\n        type: `'rect' | 'circle' | CellComponent`,\n        help: 'Cell component, the API does not support `CellComponent`.',\n        flavors: ['svg', 'api'],\n        defaultValue: 'rect',\n        control: {\n            type: 'choices',\n            choices: ['rect', 'circle'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'renderCell',\n        group: 'Customization',\n        type: `'rect' | 'circle' | CellCanvasRenderer`,\n        help: 'Cell renderer for canvas implementation.',\n        flavors: ['canvas'],\n        defaultValue: 'rect',\n        control: {\n            type: 'choices',\n            choices: ['rect', 'circle', 'customRenderCell'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    isInteractive({\n        flavors: ['svg', 'canvas'],\n        defaultValue: defaults.isInteractive,\n    }),\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'TooltipComponent',\n        help: 'Custom tooltip component.',\n        flavors: ['svg', 'canvas'],\n        description: `\n            An optional component allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the cell's data as a property.\n        `,\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: '(cell: ComputedCell, event: MouseEvent) => void',\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: '(cell: ComputedCell, event: MouseEvent) => void',\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: '(cell: ComputedCell, event: MouseEvent) => void',\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: '(cell: ComputedCell, event: MouseEvent) => void',\n    },\n    {\n        key: 'hoverTarget',\n        flavors: ['svg', 'canvas'],\n        help: 'Defines hover behavior.',\n        description: `\n            Defines hover behavior:\n\n            - **cell**: highlight the current cell\n            - **row**: highlight the current cell's row\n            - **column**: highlight the current cell's column\n            - **rowColumn**: highlight the current cell's row & column\n        `,\n        defaultValue: defaults.hoverTarget,\n        type: 'string',\n        group: 'Interactivity',\n        control: {\n            type: 'choices',\n            choices: ['cell', 'row', 'column', 'rowColumn'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    annotations({\n        target: 'nodes',\n        flavors: allFlavors,\n        createDefaults: {\n            type: 'rect',\n            match: { id: 'Germany.Bus' },\n            note: 'Bus in Germany',\n            noteX: 120,\n            noteY: -130,\n            offset: 6,\n            noteTextOffset: 5,\n        },\n    }),\n    ...commonAccessibilityProps(allFlavors),\n    ...motionProperties(['svg', 'canvas'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { ContinuousColorsLegendProps } from './types'\n\nexport const continuousColorsLegendDefaults: {\n    length: NonNullable<ContinuousColorsLegendProps['length']>\n    thickness: NonNullable<ContinuousColorsLegendProps['thickness']>\n    direction: NonNullable<ContinuousColorsLegendProps['direction']>\n    tickPosition: NonNullable<ContinuousColorsLegendProps['tickPosition']>\n    tickSize: NonNullable<ContinuousColorsLegendProps['tickSize']>\n    tickSpacing: NonNullable<ContinuousColorsLegendProps['tickSpacing']>\n    tickOverlap: NonNullable<ContinuousColorsLegendProps['tickOverlap']>\n    tickFormat: NonNullable<ContinuousColorsLegendProps['tickFormat']>\n    titleAlign: NonNullable<ContinuousColorsLegendProps['titleAlign']>\n    titleOffset: NonNullable<ContinuousColorsLegendProps['titleOffset']>\n} = {\n    length: 200,\n    thickness: 16,\n    direction: 'row',\n    tickPosition: 'after',\n    tickSize: 4,\n    tickSpacing: 3,\n    tickOverlap: false,\n    tickFormat: (value: number) => `${value}`,\n    titleAlign: 'start',\n    titleOffset: 4,\n}\n","import { Fragment } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { computeContinuousColorsLegend } from '../compute'\nimport { ContinuousColorsLegendProps } from '../types'\nimport { continuousColorsLegendDefaults } from '../defaults'\n\nexport const ContinuousColorsLegendSvg = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        ticks: computedTicks,\n        colorStops,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const theme = useTheme()\n\n    const id = `ContinuousColorsLegendSvgGradient.${direction}.${colorStops\n        .map(stop => stop.offset)\n        .join('_')}`\n\n    return (\n        <g>\n            <defs>\n                <linearGradient\n                    id={id}\n                    x1={gradientX1}\n                    y1={gradientY1}\n                    x2={gradientX2}\n                    y2={gradientY2}\n                >\n                    {colorStops.map(colorStop => (\n                        <stop {...colorStop} />\n                    ))}\n                </linearGradient>\n            </defs>\n            {titleText && (\n                <text\n                    transform={`translate(${titleX}, ${titleY}) rotate(${titleRotation})`}\n                    textAnchor={titleHorizontalAlign}\n                    dominantBaseline={titleVerticalAlign}\n                    style={theme.legends.title.text}\n                >\n                    {titleText}\n                </text>\n            )}\n            <rect width={width} height={height} fill={`url(#${id}`} />\n            {computedTicks.map((tick, index) => (\n                <Fragment key={index}>\n                    <line\n                        x1={tick.x1}\n                        y1={tick.y1}\n                        x2={tick.x2}\n                        y2={tick.y2}\n                        style={theme.legends.ticks.line}\n                    />\n                    <text\n                        x={tick.textX}\n                        y={tick.textY}\n                        textAnchor={tick.textHorizontalAlign}\n                        dominantBaseline={tick.textVerticalAlign}\n                        style={theme.legends.ticks.text}\n                    >\n                        {tick.text}\n                    </text>\n                </Fragment>\n            ))}\n        </g>\n    )\n}\n","import { AnchoredContinuousColorsLegendProps } from '../types'\nimport { computePositionFromAnchor } from '../compute'\nimport { continuousColorsLegendDefaults } from '../defaults'\nimport { ContinuousColorsLegendSvg } from './ContinuousColorsLegendSvg'\n\nexport const AnchoredContinuousColorsLegendSvg = ({\n    containerWidth,\n    containerHeight,\n    anchor,\n    translateX = 0,\n    translateY = 0,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    ...legendProps\n}: AnchoredContinuousColorsLegendProps) => {\n    let width: number\n    let height: number\n    if (direction === 'row') {\n        width = length\n        height = thickness\n    } else {\n        width = thickness\n        height = length\n    }\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <ContinuousColorsLegendSvg\n                length={length}\n                thickness={thickness}\n                direction={direction}\n                {...legendProps}\n            />\n        </g>\n    )\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n"],"names":["getLightData","generateXYSeries","serieIds","x","values","y","length","NaN","min","max","round","getHeavyData","sets","settingsMapper","valueFormat","mapFormat","axisTop","mapAxis","axisRight","axisBottom","axisLeft","legends","map","legend","tickFormat","exclude","allFlavors","props","key","group","help","type","required","description","control","chartDimensions","defaultValue","defaults","step","flavors","themeProperty","svgDefaults","chartGrid","xDefault","yDefault","axes","shouldCreate","shouldRemove","anchor","translateX","translateY","thickness","direction","tickPosition","tickSize","tickSpacing","tickOverlap","format","enabled","title","titleAlign","titleOffset","choices","label","value","columns","isInteractive","annotations","target","createDefaults","match","id","note","noteX","noteY","offset","noteTextOffset","commonAccessibilityProps","motionProperties","groups","groupProperties","defaultProps","isCircleAnnotation","annotationSpec","isDotAnnotation","isRectAnnotation","computeAnnotation","annotation","computedNoteX","computedNoteY","noteWidth","_isNumber","abs","Error","computedX","computedY","angle","sourceX","sourceY","targetX","targetY","Math","atan2","absoluteAngleDegrees","radiansToDegrees","getLinkAngle","position","positionFromAngle","degreesToRadians","size","eighth","height","width","textX","noteLineX","points","text","useAnnotations","data","getPosition","getDimensions","useMemo","reduce","acc","_filter","datum","dimensions","_omit","bindAnnotations","useComputedAnnotations","computed","AnnotationNote","theme","useTheme","useMotionConfig","animate","springConfig","config","animatedProps","useSpring","immediate","createElement","_jsxDEV","outlineWidth","animated","style","strokeLinejoin","strokeWidth","stroke","outlineColor","omit","AnnotationLink","isOutline","path","firstPoint","animatedPath","useAnimatedPath","link","strokeLinecap","opacity","outlineOpacity","fill","d","CircleAnnotationOutline","radius","outline","circle","cx","cy","r","DotAnnotationOutline","dotSize","symbol","RectAnnotationOutline","borderRadius","rect","rx","ry","Annotation","useComputedAnnotation","noteType","isValidElement","isSvgNote","drawPoints","ctx","forEach","index","moveTo","lineTo","renderAnnotationsToCanvas","save","isCanvasNote","lineCap","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","font","fontSize","fontFamily","textAlign","textBaseline","lineJoin","strokeText","fillText","restore","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickPadding","tickRotation","engine","getScaleTicks","textProps","textPropsByEngine","centerScale","line","lineX","lineY","textY","isRTL","document","translate","ticks","getFormatter","formatter","timeFormat","d3Format","computeGridLines","_values","isArray","Array","lines","x1","x2","y1","y2","AxisTick","_value","onClick","textAnchor","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transition","useTransition","keys","tick","initial","textTransform","from","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","Number","String","renderAxesToCanvas","renderGridLinesToCanvas","continuousColorsLegendDefaults","zeroPadding","computeDimensions","item","itemsSpacing","_padding","padding","itemCount","itemWidth","itemHeight","horizontalPadding","verticalPadding","spacing","computePositionFromAnchor","containerWidth","containerHeight","computeItemLayout","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","justify","symbolSize","symbolSpacing","computeContinuousColorsLegend","domain","reverse","positionScale","scaleLinear","range","thresholds","titleX","titleY","titleRotation","titleVerticalAlign","textVerticalAlign","textHorizontalAlign","colorStops","computeContinuousColorScaleColorStops","getValueFormatter","computedTicks","gradientY1","gradientX2","push","gradientX1","gradientY2","titleText","titleHorizontalAlign","ContinuousColorsLegendSvg","stop","join","colorStop","Fragment","AnchoredContinuousColorsLegendSvg","legendProps","symbolByShape","borderWidth","borderColor","pointerEvents","diamond","square","triangle","LegendSvgItem","textColor","background","symbolShape","symbolBorderWidth","symbolBorderColor","onMouseEnter","onMouseLeave","toggleSerie","effects","useState","setStyle","handleMouseEnter","useCallback","filter","on","effect","handleMouseLeave","some","handler","SymbolShape","itemOpacity","itemBackground","e","React","color","hidden","itemTextColor","userSelect","LegendSvg","itemDirection","xStep","yStep","i","BoxLegendSvg","textAlignMapping","start","middle","end","renderLegendToCanvas","t","itemX","itemY","fillRect","renderContinuousColorLegendToCanvas","_ticks","initialStyles","gradient","createLinearGradient","addColorStop","stopColor","fontWeight","useQuantizeColorScaleLegendData","overriddenDomain","v","separator","items","domainValue","invertExtent","extent","LegendPropShape","isRequired","baseEach","module","exports","collection","predicate","result","arrayFilter","baseFilter","baseIteratee"],"sourceRoot":""}