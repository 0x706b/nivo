{"version":3,"sources":["webpack:///./src/data/components/swarmplot/mapper.js","webpack:///./src/pages/swarmplot/index.js"],"names":["settingsMapper","axisTop","mapAxis","axisRight","axisBottom","axisLeft","initialProperties","Object","freeze","groupBy","identity","value","valueFormat","valueScale","type","min","max","reverse","size","key","values","sizes","spacing","layout","SwarmPlotDefaultProps","gap","forceStrength","simulationIterations","colors","colorBy","borderWidth","borderColor","from","modifiers","margin","top","right","bottom","left","enableGridX","enableGridY","enable","orient","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","isInteractive","useMesh","debugMesh","animate","motionStiffness","motionDamping","ScatterPlot","ComponentTemplate","name","meta","SwarmPlot","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","codePropertiesMapper","data","generateData","generateLightDataSet","getTabData","getDataSize","length","theme","logAction","onClick","node","label","id","group","color"],"mappings":"wLAUeA,cAAe,CAC1BC,QAASC,YAAQ,OACjBC,UAAWD,YAAQ,SACnBE,WAAYF,YAAQ,UACpBG,SAAUH,YAAQ,U,wBCEhBI,EAAoBC,OAAOC,OAAO,CACpCC,QAAS,QACTC,SAAU,KACVC,MAAO,QACPC,YAAa,OACbC,WAAY,CACRC,KAAM,SACNC,IAAK,EACLC,IAAK,IACLC,SAAS,GAEbC,KAAM,CACFC,IAAK,SACLC,OAAQ,CAAC,EAAG,IACZC,MAAO,CAAC,EAAG,KAEfC,QAAS,EACTC,OAAQC,IAAsBD,OAC9BE,IAAKD,IAAsBC,IAE3BC,cAAe,EACfC,qBAAsB,IAEtBC,OAAQJ,IAAsBI,OAC9BC,QAAS,QACTC,YAAa,EACbC,YAAa,CACTC,KAAM,QACNC,UAAW,CACP,CAAC,SAAU,IACX,CAAC,UAAW,MAGpBC,OAAQ,CACJC,IAAK,GACLC,MAAO,IACPC,OAAQ,GACRC,KAAM,KAEVC,aAAa,EACbC,aAAa,EACbvC,QAAS,CACLwC,QAAQ,EACRC,OAAQ,MACRC,SAAU,GACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,yCACRC,eAAgB,SAChBC,cAAe,IAEnB7C,UAAW,CACPsC,QAAQ,EACRC,OAAQ,QACRC,SAAU,GACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,yCACRC,eAAgB,SAChBC,aAAc,IAElB5C,WAAY,CACRqC,QAAQ,EACRC,OAAQ,SACRC,SAAU,GACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,yCACRC,eAAgB,SAChBC,aAAc,IAElB3C,SAAU,CACNoC,QAAQ,EACRC,OAAQ,OACRC,SAAU,GACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,yCACRC,eAAgB,SAChBC,cAAe,IAGnBC,eAAe,EACfC,SAAS,EACTC,WAAW,EAEXC,SAAS,EACTC,gBAAiB,GACjBC,cAAe,KA6CJC,UA1CK,WAChB,OACI,kBAACC,EAAA,EAAD,CACIC,KAAK,YACLC,KAAMA,IAAKC,UACXC,KAAK,YACLC,QAASH,IAAKG,QACdC,cAAc,MACdC,WAAYC,IACZ1D,kBAAmBA,EACnB2D,kBAAmBzC,IACnB0C,iBAAkBC,EAClBC,qBAAsB,SAACL,EAAYM,GAAb,sBAClBL,OAAQK,EAAKL,QACVD,IAEPO,aAAcC,IACdC,WAAY,SAAAH,GAAI,OAAIA,EAAKA,MACzBI,YAAa,SAAAJ,GAAI,OAAIA,EAAKA,KAAKK,UAE9B,SAACX,EAAYM,EAAMM,EAAOC,GACvB,OACI,kBAAC,IAAD,eACIP,KAAMA,EAAKA,KACXL,OAAQK,EAAKL,QACTD,EAHR,CAIIY,MAAOA,EACPE,QAAS,SAAAC,GACLF,EAAU,CACN9D,KAAM,QACNiE,MAAM,cAAeD,EAAKE,GAArB,YAAmCF,EAAKG,MAAxC,YAAyDH,EAAKnE,MACnEuE,MAAOJ,EAAKI,MACZb,KAAMS","file":"component---src-pages-swarmplot-index-js-ac059ba951222efc4fa0.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper, mapAxis } from '../../../lib/settings'\n\nexport default settingsMapper({\n    axisTop: mapAxis('top'),\n    axisRight: mapAxis('right'),\n    axisBottom: mapAxis('bottom'),\n    axisLeft: mapAxis('left'),\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveSwarmPlot, SwarmPlotDefaultProps } from '@nivo/swarmplot'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/swarmplot/meta.yml'\nimport mapper from '../../data/components/swarmplot/mapper'\nimport { groups } from '../../data/components/swarmplot/props'\nimport { generateLightDataSet } from '../../data/components/swarmplot/generator'\n\nconst initialProperties = Object.freeze({\n    groupBy: 'group',\n    identity: 'id',\n    value: 'price',\n    valueFormat: '$.2f',\n    valueScale: {\n        type: 'linear',\n        min: 0,\n        max: 500,\n        reverse: false,\n    },\n    size: {\n        key: 'volume',\n        values: [4, 20],\n        sizes: [6, 20],\n    },\n    spacing: 2,\n    layout: SwarmPlotDefaultProps.layout,\n    gap: SwarmPlotDefaultProps.gap,\n\n    forceStrength: 4,\n    simulationIterations: 100,\n\n    colors: SwarmPlotDefaultProps.colors,\n    colorBy: 'group',\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [\n            ['darker', 0.6],\n            ['opacity', 0.5],\n        ],\n    },\n    margin: {\n        top: 80,\n        right: 100,\n        bottom: 80,\n        left: 100,\n    },\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {\n        enable: true,\n        orient: 'top',\n        tickSize: 10,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'group if vertical, price if horizontal',\n        legendPosition: 'middle',\n        legendOffset: -46,\n    },\n    axisRight: {\n        enable: true,\n        orient: 'right',\n        tickSize: 10,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'price if vertical, group if horizontal',\n        legendPosition: 'middle',\n        legendOffset: 76,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 10,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'group if vertical, price if horizontal',\n        legendPosition: 'middle',\n        legendOffset: 46,\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 10,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'price if vertical, group if horizontal',\n        legendPosition: 'middle',\n        legendOffset: -76,\n    },\n\n    isInteractive: true,\n    useMesh: false,\n    debugMesh: false,\n\n    animate: true,\n    motionStiffness: 50,\n    motionDamping: 10,\n})\n\nconst ScatterPlot = () => {\n    return (\n        <ComponentTemplate\n            name=\"SwarmPlot\"\n            meta={meta.SwarmPlot}\n            icon=\"swarmplot\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={SwarmPlotDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={(properties, data) => ({\n                groups: data.groups,\n                ...properties,\n            })}\n            generateData={generateLightDataSet}\n            getTabData={data => data.data}\n            getDataSize={data => data.data.length}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveSwarmPlot\n                        data={data.data}\n                        groups={data.groups}\n                        {...properties}\n                        theme={theme}\n                        onClick={node => {\n                            logAction({\n                                type: 'click',\n                                label: `[node] id: ${node.id}, group: ${node.group}, value: ${node.value}`,\n                                color: node.color,\n                                data: node,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default ScatterPlot\n"],"sourceRoot":""}