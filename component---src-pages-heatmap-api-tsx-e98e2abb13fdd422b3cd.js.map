{"version":3,"file":"component---src-pages-heatmap-api-tsx-e98e2abb13fdd422b3cd.js","mappings":"+NASMA,GAAOC,EAAAA,EAAAA,KAmHb,UAjHmB,WACf,IAE4CC,GAExCC,EAAAA,EAAAA,gBAAe,cAHfD,MACIE,gBAAmBC,gBAY3B,OACI,iCACI,SAAC,IAAD,CACIC,MAAM,mBACNJ,MAAOA,EACPK,SAAQ,UAAMC,EAAAA,GAAAA,KAAN,CAAyB,gBAErC,SAAC,IAAD,CACIC,cAAc,UACdC,WAAW,UACXC,QAAQ,kBACRC,QAASJ,EAAAA,GACTK,aAAa,OACbC,cAAeC,EAAAA,EACfC,YAAaC,EAAAA,EACbC,aAAc,CACVC,MAAO,IACPC,OAAQ,IACRpB,KAAMqB,KAAKC,UAAUtB,EAAKA,KAAM,KAAM,MACtCuB,KAAMvB,EAAKuB,KACXC,QAAS,UAETC,OAAQ,CACJC,IAAK,IACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAGVC,SAAU,OACVC,SAAU,OACVC,aAAa,EACbC,cAAe,GACfC,QAAS,EACTC,OAAQ,OAERC,QAAS,CACLC,QAAQ,EACRC,OAAQ,MACRC,SAAU,EACVC,YAAa,EACbC,cAAe,GACfC,OAAQ,GACRC,aAAc,IAElBC,UAAW,CACPP,QAAQ,EACRC,OAAQ,QACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,UACRG,eAAgB,SAChBF,aAAc,GAElBG,WAAY,CACRT,QAAQ,EACRC,OAAQ,SACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,UACRG,eAAgB,SAChBF,aAAc,IAElBI,SAAU,CACNV,QAAQ,EACRC,OAAQ,OACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,UACRG,eAAgB,SAChBF,cAAe,IAGnBK,aAAa,EACbC,aAAa,EAEbC,UAAW,SACXC,YAAa,EACbC,gBAAiB,EACjBC,gBAAiB,CACbC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3BC,cAAc,EACdC,eAAgB,CACZH,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU","sources":["webpack://nivo-website/./src/pages/heatmap/api.tsx"],"sourcesContent":["import React from 'react'\nimport { Seo } from '../../components/Seo'\nimport { ApiClient } from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/heatmap/props'\nimport mapper from '../../data/components/heatmap/mapper'\nimport { generateLightDataSet } from '../../data/components/heatmap/generator'\nimport meta from '../../data/components/heatmap/meta.yml'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst data = generateLightDataSet()\n\nconst HeatMapApi = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/heatmap.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <>\n            <Seo\n                title=\"HeatMap HTTP API\"\n                image={image}\n                keywords={[...meta.HeatMap.tags, 'HTTP API']}\n            />\n            <ApiClient\n                componentName=\"HeatMap\"\n                chartClass=\"heatmap\"\n                apiPath=\"/charts/heatmap\"\n                flavors={meta.flavors}\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 800,\n                    height: 600,\n                    data: JSON.stringify(data.data, null, '  '),\n                    keys: data.keys,\n                    indexBy: 'country',\n\n                    margin: {\n                        top: 100,\n                        right: 60,\n                        bottom: 30,\n                        left: 60,\n                    },\n\n                    minValue: 'auto',\n                    maxValue: 'auto',\n                    forceSquare: true,\n                    sizeVariation: 0.4,\n                    padding: 2,\n                    colors: 'nivo',\n\n                    axisTop: {\n                        enable: true,\n                        orient: 'top',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: -55,\n                        legend: '',\n                        legendOffset: 36,\n                    },\n                    axisRight: {\n                        enable: false,\n                        orient: 'right',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: 0,\n                    },\n                    axisBottom: {\n                        enable: false,\n                        orient: 'bottom',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: 36,\n                    },\n                    axisLeft: {\n                        enable: true,\n                        orient: 'left',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: -40,\n                    },\n\n                    enableGridX: false,\n                    enableGridY: true,\n\n                    cellShape: 'circle',\n                    cellOpacity: 1,\n                    cellBorderWidth: 0,\n                    cellBorderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.4]],\n                    },\n\n                    enableLabels: true,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1.4]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default HeatMapApi\n"],"names":["data","generateLightDataSet","image","useStaticQuery","childImageSharp","gatsbyImageData","title","keywords","meta","componentName","chartClass","apiPath","flavors","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","width","height","JSON","stringify","keys","indexBy","margin","top","right","bottom","left","minValue","maxValue","forceSquare","sizeVariation","padding","colors","axisTop","enable","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","axisRight","legendPosition","axisBottom","axisLeft","enableGridX","enableGridY","cellShape","cellOpacity","cellBorderWidth","cellBorderColor","from","modifiers","enableLabels","labelTextColor"],"sourceRoot":""}