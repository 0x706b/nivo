{"version":3,"sources":["webpack:///./src/data/components/chord/props.js","webpack:///./src/data/components/chord/mapper.js","webpack:///./src/pages/chord/canvas.js"],"names":["props","key","group","help","description","required","type","enableControlForFlavors","controlType","controlOptions","unit","min","max","step","flavors","defaultValue","defaults","padAngle","innerRadiusRatio","innerRadiusOffset","themeProperty","colors","arcOpacity","arcBorderWidth","arcBorderColor","ribbonOpacity","ribbonBorderWidth","ribbonBorderColor","enableLabel","label","choices","map","choice","value","labelOffset","labelRotation","labelTextColor","layers","isInteractive","arcHoverOpacity","arcHoverOthersOpacity","ribbonHoverOpacity","ribbonHoverOthersOpacity","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","legend","anchor","direction","dataFrom","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","itemDirection","onClick","data","alert","JSON","stringify","motionProperties","groups","groupProperties","settingsMapper","d","id","initialProperties","margin","top","right","bottom","left","valueFormat","pixelRatio","window","devicePixelRatio","from","modifiers","scheme","legends","itemTextColor","effects","on","style","generateData","generateChordData","size","ChordCanvas","name","meta","icon","currentFlavor","properties","propertiesMapper","mapper","codePropertiesMapper","keys","dataKey","getDataSize","MATRIX_SIZE","getTabData","matrix","theme","logAction","onArcClick","arc","color"],"mappings":"wKAgBMA,EAAK,CACP,CACIC,IAAK,OACLC,MAAO,OACPC,KAAM,iDACNC,YAAY,soBAoBZC,UAAU,EACVC,KAAM,YAEV,CACIL,IAAK,SACLC,MAAO,OACPC,KAAM,gDACNC,YAAY,gLAKZC,UAAU,EACVC,KAAM,mBAEV,CACIL,IAAK,cACLC,MAAO,OACPI,KAAM,oBACND,UAAU,EACVF,KAAK,6BAET,CACIF,IAAK,QACLM,wBAAyB,CAAC,OAC1BJ,KAAM,eACNC,YAAY,4MAMZE,KAAM,SACND,UAAU,EACVG,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZC,KAAM,KACNC,IAAK,IACLC,IAAK,IACLC,KAAM,IAGd,CACIZ,IAAK,SACLM,wBAAyB,CAAC,OAC1BJ,KAAM,gBACNC,YAAY,4MAMZE,KAAM,SACND,UAAU,EACVG,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZC,KAAM,KACNC,IAAK,IACLC,IAAK,IACLC,KAAM,IAGd,CACIZ,IAAK,aACLa,QAAS,CAAC,UACVX,KAAK,gDACLE,UAAU,EACVU,aAAc,oBACdT,KAAK,SACLE,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZE,IAAK,EACLC,IAAK,IAGb,CACIX,IAAK,SACLE,KAAM,gBACNG,KAAM,SACND,UAAU,EACVG,YAAa,SACbN,MAAO,QAEX,CACID,IAAK,WACLE,KAAM,iBACNE,UAAU,EACVU,aAAcC,IAASC,SACvBX,KAAM,SACNE,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZE,IAAK,EACLC,IAAK,EACLC,KAAM,MAGd,CACIZ,IAAK,mBACLE,KAAM,sBACNE,UAAU,EACVU,aAAcC,IAASE,iBACvBZ,KAAM,SACNE,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZE,IAAK,EACLC,IAAK,EACLC,KAAM,MAGd,CACIZ,IAAK,oBACLE,KAAM,gDACNE,UAAU,EACVU,aAAcC,IAASG,kBACvBb,KAAM,SACNE,YAAa,QACbN,MAAO,OACPO,eAAgB,CACZE,IAAK,EACLC,IAAK,EACLC,KAAM,MAGdO,IACA,CACInB,IAAK,SACLE,KAAM,2CACNG,KAAM,+BACND,UAAU,EACVU,aAAcC,IAASK,OACvBb,YAAa,gBACbN,MAAO,SAEX,CACID,IAAK,aACLE,KAAM,gBACNE,UAAU,EACVU,aAAcC,IAASM,WACvBhB,KAAM,SACNE,YAAa,UACbN,MAAO,SAEX,CACID,IAAK,iBACLE,KAAM,qBACNE,UAAU,EACVU,aAAcC,IAASO,eACvBjB,KAAM,SACNE,YAAa,YACbN,MAAO,SAEX,CACID,IAAK,iBACLE,KAAM,qBACNE,UAAU,EACVU,aAAcC,IAASQ,eACvBlB,KAAM,6BACNE,YAAa,iBACbN,MAAO,SAEX,CACID,IAAK,gBACLE,KAAM,mBACNE,UAAU,EACVU,aAAcC,IAASS,cACvBnB,KAAM,SACNE,YAAa,UACbN,MAAO,SAEX,CACID,IAAK,oBACLE,KAAM,wBACNE,UAAU,EACVU,aAAcC,IAASU,kBACvBpB,KAAM,SACNE,YAAa,YACbN,MAAO,SAEX,CACID,IAAK,oBACLE,KAAM,wBACNE,UAAU,EACVU,aAAcC,IAASW,kBACvBrB,KAAM,6BACNE,YAAa,iBACbN,MAAO,SAEX,CACID,IAAK,cACLE,KAAM,yBACNG,KAAM,UACND,UAAU,EACVU,aAAcC,IAASY,YACvBpB,YAAa,SACbN,MAAO,UAEX,CACID,IAAK,QACLE,KACI,kJACJG,KAAM,oBACND,UAAU,EACVU,aAAcC,IAASa,MACvBrB,YAAa,UACbN,MAAO,SACPO,eAAgB,CACZqB,QAAS,CAAC,KAAM,QAAP,+BAAmDC,KAAI,SAAAC,GAAM,MAAK,CACvEH,MAAOG,EACPC,MAAOD,QAInB,CACI/B,IAAK,cACLE,KAAM,yBACNE,UAAU,EACVU,aAAcC,IAASkB,YACvB5B,KAAM,SACNE,YAAa,QACbN,MAAO,SACPO,eAAgB,CACZC,KAAM,KACNC,KAAM,GACNC,IAAK,KAGb,CACIX,IAAK,gBACLE,KAAM,kBACNE,UAAU,EACVU,aAAcC,IAASmB,cACvB7B,KAAM,SACNE,YAAa,QACbN,MAAO,SACPO,eAAgB,CACZE,KAAM,IACNC,IAAK,IACLC,KAAM,IAGd,CACIZ,IAAK,iBACL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","file":"component---src-pages-chord-canvas-js-bf624083b7bb3b9f763c.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ChordDefaultProps as defaults } from '@nivo/chord'\nimport {\n    themeProperty,\n    motionProperties,\n    groupProperties,\n    getLegendsProps,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'keys',\n        group: 'Base',\n        help: 'Keys used to identify each cell in the matrix.',\n        description: `\n            Keys used to identify each cell in the matrix,\n            for example given this matrix:\n            \\`\\`\\`\n            [ [123, 37,  99 ],\n              [75,  103, 82 ],\n              [37,  65,  109] ]\n            \\`\\`\\`\n            and those keys:\n            \\`\\`\\`\n            ['John', 'Jane', 'Raoul']\n            \\`\\`\\`\n            it will result in the following mapping:\n            \\`\\`\\`\n            [ [null,    'John', 'Jane',  'Raoul']\n              ['John',   123,    37,      99    ],\n              ['Jane',   75,     103,     82    ],\n              ['Raoul',  37,     65,      109   ] ]\n            \\`\\`\\`\n        `,\n        required: true,\n        type: 'string[]',\n    },\n    {\n        key: 'matrix',\n        group: 'Base',\n        help: 'The matrix used to compute the chord diagram.',\n        description: `\n            The matrix used to compute the chord diagram,\n            it must be a square matrix, meaning each row length\n            must equal the row count.\n        `,\n        required: true,\n        type: 'Array<number[]>',\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: `Optional value formatter.`,\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveChord/>\\`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveChord/>\\`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'padAngle',\n        help: 'Padding angle.',\n        required: false,\n        defaultValue: defaults.padAngle,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.01,\n        },\n    },\n    {\n        key: 'innerRadiusRatio',\n        help: 'Inner radius ratio.',\n        required: false,\n        defaultValue: defaults.innerRadiusRatio,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.01,\n        },\n    },\n    {\n        key: 'innerRadiusOffset',\n        help: 'Inner radius offset (minus innerRadiusRatio).',\n        required: false,\n        defaultValue: defaults.innerRadiusOffset,\n        type: 'number',\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.01,\n        },\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines how to compute arc/ribbon color.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'arcOpacity',\n        help: 'Arcs opacity.',\n        required: false,\n        defaultValue: defaults.arcOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'arcBorderWidth',\n        help: 'Arcs border width.',\n        required: false,\n        defaultValue: defaults.arcBorderWidth,\n        type: 'number',\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'arcBorderColor',\n        help: 'Arcs border color.',\n        required: false,\n        defaultValue: defaults.arcBorderColor,\n        type: 'string | object | Function',\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'ribbonOpacity',\n        help: 'Ribbons opacity.',\n        required: false,\n        defaultValue: defaults.ribbonOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'ribbonBorderWidth',\n        help: 'Ribbons border width.',\n        required: false,\n        defaultValue: defaults.ribbonBorderWidth,\n        type: 'number',\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'ribbonBorderColor',\n        help: 'Ribbons border color.',\n        required: false,\n        defaultValue: defaults.ribbonBorderColor,\n        type: 'string | object | Function',\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'enableLabel',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableLabel,\n        controlType: 'switch',\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        help:\n            'Defines how to get label text, can be a string (used to access current arc data property) or a function which will receive the actual arc data.',\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaults.label,\n        controlType: 'choices',\n        group: 'Labels',\n        controlOptions: {\n            choices: ['id', 'value', `d => \\`\\${d.id} [\\${d.value}]\\``].map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'labelOffset',\n        help: 'Label offset from arc.',\n        required: false,\n        defaultValue: defaults.labelOffset,\n        type: 'number',\n        controlType: 'range',\n        group: 'Labels',\n        controlOptions: {\n            unit: 'px',\n            min: -80,\n            max: 80,\n        },\n    },\n    {\n        key: 'labelRotation',\n        help: 'Label rotation.',\n        required: false,\n        defaultValue: defaults.labelRotation,\n        type: 'number',\n        controlType: 'angle',\n        group: 'Labels',\n        controlOptions: {\n            min: -180,\n            max: 180,\n            step: 5,\n        },\n    },\n    {\n        key: 'labelTextColor',\n        description: `\n            How to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        help: 'Method to compute label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.labelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n            \n            The layer function which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`Chord\\` component.\n\n            When using the canvas implementation, the function\n            will receive the canvas 2d context as first argument\n            and the chart's context and computed data as second.\n\n            Please make sure to use \\`context.save()\\` and\n            \\`context.restore()\\` if you make some global\n            modifications to the 2d context inside this function\n            to avoid side effects.\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaults.layers,\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'arcHoverOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Arc opacity when hover (0~1).',\n        required: false,\n        defaultValue: defaults.arcHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'arcHoverOthersOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Arc opacity when not hover (0~1).',\n        required: false,\n        defaultValue: defaults.arcHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'ribbonHoverOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Ribbon opacity when hover (0~1).',\n        required: false,\n        defaultValue: defaults.ribbonHoverOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'ribbonHoverOthersOpacity',\n        flavors: ['svg', 'canvas'],\n        help: 'Ribbon opacity when not hover (0~1).',\n        required: false,\n        defaultValue: defaults.ribbonHoverOthersOpacity,\n        type: 'number',\n        controlType: 'opacity',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onArcMouseEnter',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseEnter handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'onArcMouseMove',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseMove handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'onArcMouseLeave',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseLeave handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'onArcClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onClick handler for arcs.',\n        type: '(arc, event) => void',\n        required: false,\n    },\n    {\n        key: 'arcTooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom arc tooltip component.',\n        description: `\n            A function allowing complete arc tooltip customisation,\n            it must return a valid HTML\n            element and will receive the arcs's data.\n        `,\n    },\n    {\n        key: 'onRibbonMouseEnter',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseEnter handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'onRibbonMouseMove',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseMove handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'onRibbonMouseLeave',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseLeave handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'onRibbonClick',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onClick handler for ribbons.',\n        type: '(ribbon, event) => void',\n        required: false,\n    },\n    {\n        key: 'ribbonTooltip',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom ribbon tooltip component.',\n        description: `\n            A function allowing complete ribbon tooltip customisation,\n            it must return a valid HTML\n            element and will receive the ribbon's data.\n        `,\n    },\n    {\n        key: 'legends',\n        flavors: ['svg', 'canvas'],\n        type: 'object[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                dataFrom: 'keys',\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 0,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n    ...motionProperties(['svg'], defaults),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({\n    label: value => {\n        if (value === `d => \\`\\${d.id} [\\${d.value}]\\``) return d => `${d.id} [${d.value}]`\n        return value\n    },\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { generateChordData } from '@nivo/generators'\nimport { ResponsiveChordCanvas } from '@nivo/chord'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/chord/meta.yml'\nimport mapper from '../../data/components/chord/mapper'\nimport { groups } from '../../data/components/chord/props'\n\nconst MATRIX_SIZE = 38\n\nconst initialProperties = {\n    margin: {\n        top: 60,\n        right: 200,\n        bottom: 60,\n        left: 60,\n    },\n\n    valueFormat: '.2f',\n\n    pixelRatio:\n        typeof window !== 'undefined' && window.devicePixelRatio ? window.devicePixelRatio : 1,\n\n    padAngle: 0.006,\n    innerRadiusRatio: 0.86,\n    innerRadiusOffset: 0,\n\n    arcOpacity: 1,\n    arcBorderWidth: 0,\n    arcBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.4]],\n    },\n\n    ribbonOpacity: 0.5,\n    ribbonBorderWidth: 0,\n    ribbonBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.4]],\n    },\n\n    enableLabel: true,\n    label: 'id',\n    labelOffset: 9,\n    labelRotation: -90,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    colors: { scheme: 'paired' },\n\n    isInteractive: true,\n    arcHoverOpacity: 1,\n    arcHoverOthersOpacity: 0.4,\n    ribbonHoverOpacity: 0.75,\n    ribbonHoverOthersOpacity: 0,\n\n    legends: [\n        {\n            anchor: 'right',\n            direction: 'column',\n            justify: false,\n            translateX: 120,\n            translateY: 0,\n            itemWidth: 80,\n            itemHeight: 11,\n            itemsSpacing: 0,\n            itemTextColor: '#999',\n            itemDirection: 'left-to-right',\n            symbolSize: 12,\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst generateData = () => generateChordData({ size: MATRIX_SIZE })\n\nconst ChordCanvas = () => {\n    return (\n        <ComponentTemplate\n            name=\"ChordCanvas\"\n            meta={meta.ChordCanvas}\n            icon=\"chord\"\n            flavors={meta.flavors}\n            currentFlavor=\"canvas\"\n            properties={groups}\n            initialProperties={initialProperties}\n            propertiesMapper={mapper}\n            codePropertiesMapper={(properties, data) => ({\n                keys: data.keys,\n                ...properties,\n            })}\n            generateData={generateData}\n            dataKey=\"matrix\"\n            getDataSize={() => MATRIX_SIZE * MATRIX_SIZE + MATRIX_SIZE}\n            getTabData={data => data.matrix}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveChordCanvas\n                        matrix={data.matrix}\n                        keys={data.keys}\n                        {...properties}\n                        theme={theme}\n                        onArcClick={arc => {\n                            logAction({\n                                type: 'click',\n                                label: `[arc] ${arc.label}`,\n                                color: arc.color,\n                                data: arc,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default ChordCanvas\n"],"sourceRoot":""}