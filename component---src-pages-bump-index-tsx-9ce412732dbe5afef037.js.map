{"version":3,"file":"component---src-pages-bump-index-tsx-9ce412732dbe5afef037.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/area.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/./src/data/components/bump/props.ts","webpack://nivo-website/./src/data/components/bump/mapper.ts","webpack://nivo-website/./src/pages/bump/index.tsx","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import { bumpSvgDefaultProps as defaults } from '@nivo/bump'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    ordinalColors,\n    chartGrid,\n    axes,\n    isInteractive,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: 'BumpSerie<Datum, ExtraProps>[]',\n        help: 'Chart data.',\n        flavors: allFlavors,\n        description: `\n            Chart data, which must conform to this structure:\n\n            \\`\\`\\`\n            {\n                id:   string\n                data: {\n                    x: number | string\n                    y: number | null\n                }[]\n            }[]\n            \\`\\`\\`\n\n            This component assumes that every serie contains all\n            x values sorted the same way they should appear on the chart.\n            \n            As this component is a TypeScript generic, it is possible to customize\n            the datum using the \\`Datum\\` arg, and it's also possible to add\n            some extra properties to the series by passing \\`ExtraProps\\`.\n        `,\n        required: true,\n    },\n    ...chartDimensions(allFlavors),\n    {\n        key: 'interpolation',\n        group: 'Base',\n        type: 'string',\n        help: `Line interpolation.`,\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaults.interpolation,\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'smooth', value: 'smooth' },\n                { label: 'linear', value: 'linear' },\n            ],\n        },\n    },\n    {\n        key: 'xPadding',\n        group: 'Base',\n        type: 'number',\n        help: 'X padding.',\n        defaultValue: defaults.xPadding,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'xOuterPadding',\n        group: 'Base',\n        type: 'number',\n        help: 'X outer padding.',\n        defaultValue: defaults.xOuterPadding,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'yOuterPadding',\n        group: 'Base',\n        type: 'number',\n        help: 'Y outer padding.',\n        defaultValue: defaults.yOuterPadding,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    themeProperty(['svg']),\n    ordinalColors({\n        flavors: allFlavors,\n        defaultValue: defaults.colors,\n    }),\n    {\n        key: 'lineWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Line width.',\n        flavors: ['svg'],\n        required: false,\n        defaultValue: defaults.lineWidth,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'activeLineWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Line width for active series.',\n        flavors: ['svg'],\n        required: false,\n        defaultValue: defaults.activeLineWidth,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'inactiveLineWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Line width for inactive series.',\n        defaultValue: defaults.inactiveLineWidth,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'opacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Opacity.',\n        defaultValue: defaults.opacity,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'activeOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Opacity for active series.',\n        defaultValue: defaults.activeOpacity,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'inactiveOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Opacity for inactive series.',\n        defaultValue: defaults.inactiveOpacity,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'startLabel',\n        help: 'Start label, use a boolean to enable/disable, or a function to customize its text.',\n        group: 'Labels',\n        type: 'boolean | (serie: BumpSerie) => string',\n        defaultValue: defaults.startLabel,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'startLabelPadding',\n        help: 'Start label padding.',\n        group: 'Labels',\n        type: 'number',\n        defaultValue: defaults.startLabelPadding,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'startLabelTextColor',\n        help: 'Method to compute start label text color, or a function to customize its text.',\n        type: 'InheritedColorConfig<BumpComputedSerie>',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaults.startLabelTextColor,\n        control: { type: 'inheritedColor' },\n        group: 'Labels',\n    },\n    {\n        key: 'endLabel',\n        help: 'End label, use a boolean to enable/disable, or a function to customize its text.',\n        group: 'Labels',\n        type: 'boolean | (serie: BumpSerie) => string',\n        defaultValue: defaults.endLabel,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'endLabelPadding',\n        help: 'End label padding.',\n        group: 'Labels',\n        type: 'number',\n        defaultValue: defaults.endLabelPadding,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'endLabelTextColor',\n        help: 'Method to compute end label text color.',\n        type: 'InheritedColorConfig<BumpComputedSerie>',\n        required: false,\n        defaultValue: defaults.endLabelTextColor,\n        flavors: ['svg'],\n        control: { type: 'inheritedColor' },\n        group: 'Labels',\n    },\n    {\n        key: 'pointSize',\n        group: 'Points',\n        help: 'Point size.',\n        type: 'number | Function',\n        defaultValue: defaults.pointSize,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 24,\n        },\n    },\n    {\n        key: 'activePointSize',\n        group: 'Points',\n        help: 'Point size for active series.',\n        type: 'number | Function',\n        defaultValue: defaults.activePointSize,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 24,\n        },\n    },\n    {\n        key: 'inactivePointSize',\n        group: 'Points',\n        help: 'Point size for inactive series.',\n        type: 'number | Function',\n        defaultValue: defaults.inactivePointSize,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 24,\n        },\n    },\n    {\n        key: 'pointColor',\n        group: 'Points',\n        type: 'string | object | Function',\n        help: 'Method to compute point fill color.',\n        defaultValue: defaults.pointColor,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'inheritedColor',\n            inheritableProperties: ['serie.color'],\n            defaultFrom: 'serie.color',\n        },\n    },\n    {\n        key: 'pointBorderWidth',\n        group: 'Points',\n        help: 'Point border width.',\n        type: 'number | Function',\n        defaultValue: defaults.pointBorderWidth,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'activePointBorderWidth',\n        group: 'Points',\n        help: 'Point border width for active series.',\n        type: 'number | Function',\n        defaultValue: defaults.activePointBorderWidth,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'inactivePointBorderWidth',\n        group: 'Points',\n        help: 'Point border width for inactive series.',\n        type: 'number | Function',\n        defaultValue: defaults.inactivePointBorderWidth,\n        flavors: ['svg'],\n        required: false,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'pointBorderColor',\n        group: 'Points',\n        type: 'string | object | Function',\n        help: 'Method to compute point border color.',\n        defaultValue: defaults.pointBorderColor,\n        flavors: ['svg'],\n        required: false,\n        control: {\n            type: 'inheritedColor',\n            inheritableProperties: ['color', 'serie.color'],\n            defaultFrom: 'color',\n        },\n    },\n    ...chartGrid({\n        flavors: allFlavors,\n        xDefault: defaults.enableGridX,\n        yDefault: defaults.enableGridY,\n    }),\n    ...axes({ flavors: allFlavors }),\n    isInteractive({\n        flavors: ['svg'],\n        defaultValue: defaults.isInteractive,\n    }),\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        type: '(serie: BumpComputedSerie, event: MouseEvent) => void',\n        help: 'onMouseEnter handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        type: '(serie: BumpComputedSerie, event: MouseEvent) => void',\n        help: 'onMouseMove handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        type: '(serie: BumpComputedSerie, event: MouseEvent) => void',\n        help: 'onMouseLeave handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        type: '(serie: BumpComputedSerie, event: MouseEvent) => void',\n        help: 'onClick handler.',\n        required: false,\n        flavors: ['svg'],\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the series's data.\n        `,\n        flavors: ['svg'],\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import { settingsMapper, mapAxis } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","import React from 'react'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { ResponsiveBump, bumpSvgDefaultProps as defaults, BumpCommonProps } from '@nivo/bump'\nimport { ModernMotionProps } from '@nivo/core'\nimport { AxisProps } from '@nivo/axes'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/bump/meta.yml'\nimport { groups } from '../../data/components/bump/props'\nimport mapper from '../../data/components/bump/mapper'\n\ninterface Datum {\n    x: number\n    y: number\n}\n\nconst generateData = () => {\n    const years = range(2000, 2005)\n    const ranks = range(1, 13)\n\n    const series: {\n        id: string\n        data: Datum[]\n    }[] = ranks.map(rank => {\n        return {\n            id: `Serie ${rank}`,\n            data: [],\n        }\n    })\n\n    years.forEach(year => {\n        shuffle(ranks).forEach((rank, i) => {\n            series[i].data.push({\n                x: year,\n                y: rank,\n            })\n        })\n    })\n\n    return series\n}\n\ntype Props = Omit<\n    BumpCommonProps<Datum, {}>,\n    'theme' | 'onMouseEnter' | 'onMouseMove' | 'onMouseLeave' | 'onClick' | 'renderWrapper'\n> &\n    ModernMotionProps\n\ntype UnmappedProps = Omit<Props, 'axisTop' | 'axisRight' | 'axisBottom' | 'axisLeft'> & {\n    axisTop: AxisProps & { enable: boolean }\n    axisRight: AxisProps & { enable: boolean }\n    axisBottom: AxisProps & { enable: boolean }\n    axisLeft: AxisProps & { enable: boolean }\n}\n\nconst initialProperties: UnmappedProps = {\n    ...defaults,\n    margin: {\n        top: 40,\n        right: 100,\n        bottom: 40,\n        left: 60,\n    },\n\n    colors: { scheme: 'spectral' },\n    lineWidth: 3,\n    activeLineWidth: 6,\n    inactiveLineWidth: 3,\n    inactiveOpacity: 0.15,\n\n    pointSize: 10,\n    activePointSize: 16,\n    inactivePointSize: 0,\n    pointColor: { theme: 'background' },\n    pointBorderWidth: 3,\n    activePointBorderWidth: 3,\n    inactivePointBorderWidth: 0,\n    pointBorderColor: { from: 'serie.color' },\n\n    axisTop: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: -36,\n    },\n    axisRight: {\n        enable: false,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        format: (value: number) => `#${value}`,\n        legend: 'ranking',\n        legendPosition: 'middle',\n        legendOffset: 40,\n    },\n    axisBottom: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: 32,\n    },\n    axisLeft: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        format: (value: number) => `#${value}`,\n        legend: 'ranking',\n        legendPosition: 'middle',\n        legendOffset: -40,\n    },\n}\n\nconst Bump = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/bump.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <ComponentTemplate<UnmappedProps, Props>\n            name=\"Bump\"\n            meta={meta.Bump}\n            icon=\"chord\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            defaultProperties={defaults}\n            initialProperties={initialProperties}\n            propertiesMapper={mapper}\n            generateData={generateData}\n            image={image}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveBump<Datum>\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={serie =>\n                            logAction({\n                                type: 'click',\n                                label: `[serie] ${serie.id}`,\n                                color: serie.color,\n                                data: serie,\n                            })\n                        }\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Bump\n","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","area","data","i","j","k","d","buffer","n","length","defined0","x0z","Array","y0z","areaStart","lineStart","lineEnd","point","areaEnd","arealine","arguments","lineX0","lineY0","lineY1","lineX1","line","p","allFlavors","props","key","group","type","help","flavors","description","required","chartDimensions","defaultValue","defaults","control","choices","label","value","min","max","step","themeProperty","ordinalColors","inheritableProperties","defaultFrom","chartGrid","xDefault","yDefault","axes","isInteractive","motionProperties","groups","groupProperties","settingsMapper","axisTop","mapAxis","axisRight","axisBottom","axisLeft","exclude","generateData","years","range","ranks","series","map","rank","id","forEach","year","shuffle","push","initialProperties","margin","top","right","bottom","left","colors","scheme","lineWidth","activeLineWidth","inactiveLineWidth","inactiveOpacity","pointSize","activePointSize","inactivePointSize","pointColor","theme","pointBorderWidth","activePointBorderWidth","inactivePointBorderWidth","pointBorderColor","from","enable","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","format","image","useStaticQuery","childImageSharp","gatsbyImageData","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","logAction","onClick","serie","color","computeCartesianTicks","translate","axis","scale","ticksPosition","tickValues","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","lineX","lineY","text","textX","textY","isRTL","document","dir","textAlign","align","center","textBaseline","baseline","ticks","v","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","isArray","lines","memoizedAxisTick","memo","_value","textAnchor","animatedProps","useTheme","useMemo","style","opacity","cursor","event","_jsxs","animated","g","transform","_jsx","dominantBaseline","textTransform","memoizedAxis","renderTick","AxisTick","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","keys","t","tick","initial","enter","update","leave","transitionProps","_state","tickIndex","React","rotate","domain","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","isXAxis","Axis","GridLine","grid","GridLines","_createElement","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","ctx","_format","save","font","fontWeight","fontSize","fontFamily","strokeWidth","Number","lineCap","stroke","strokeStyle","beginPath","degreesToRadians","fill","fillStyle","fillText","String","restore","renderAxesToCanvas","renderGridLinesToCanvas","copyArray","shuffleSelf","module","exports","array","nativeFloor","floor","nativeRandom","random","lower","upper","collection","arrayMap","object","baseRandom","size","index","lastIndex","undefined","rand","arrayShuffle","baseShuffle","baseValues"],"sourceRoot":""}