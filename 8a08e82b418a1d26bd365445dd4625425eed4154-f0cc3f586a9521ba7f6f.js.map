{"version":3,"sources":["webpack:///../node_modules/d3-scale/node_modules/d3-array/src/range.js","webpack:///../node_modules/d3-scale/src/band.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/props.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../src/hooks.js","webpack:///../src/ParallelCoordinatesLineTooltip.js","webpack:///../src/ParallelCoordinatesLine.js","webpack:///../src/ParallelCoordinates.js","webpack:///../src/ResponsiveParallelCoordinates.js","webpack:///../src/ParallelCoordinatesCanvas.js","webpack:///../src/ResponsiveParallelCoordinatesCanvas.js","webpack:///./src/data/components/parallel-coordinates/props.js","webpack:///./src/data/components/parallel-coordinates/mapper.js","webpack:///./src/data/components/parallel-coordinates/variables.js"],"names":["start","stop","step","n","arguments","length","i","Math","max","ceil","range","Array","band","bandwidth","scale","ordinal","unknown","undefined","domain","ordinalRange","r0","r1","round","paddingInner","paddingOuter","align","rescale","reverse","floor","values","map","_","_ref","_ref2","rangeRound","_ref3","_ref4","padding","min","copy","init","apply","pointish","point","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","target","source","forEach","getOwnPropertyDescriptors","defineProperties","commonVariablePropTypes","PropTypes","ticksPosition","tickSize","tickPadding","tickRotation","format","legend","legendPosition","legendOffset","number","commonPropTypes","data","variables","type","tickValues","layout","curve","lineCurvePropType","strokeWidth","lineOpacity","axesPlan","axesTicksPosition","colors","ordinalColorsPropType","isRequired","commonDefaultProps","role","scheme","animate","motionConfig","svgDefaultProps","_arrayLikeToArray","arr","len","arr2","_toConsumableArray","isArray","arrayLikeToArray","arrayWithoutHoles","iter","Symbol","iterator","from","iterableToArray","o","minLen","prototype","toString","call","slice","constructor","name","test","unsupportedIterableToArray","TypeError","nonIterableSpread","useParallelCoordinates","width","height","getLineColor","useOrdinalColorScale","lineGenerator","useMemo","d","curveFromProp","variablesScale","variablesWithScale","variable","allValues","scaleLinear","scalePoint","dataWithPoints","points","x","datum","y","index","computeParallelCoordinatesLayout","ParallelCoordinatesLineTooltip","rows","memo","ParallelCoordinatesLine","color","opacity","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","event","useMotionConfig","springConfig","animatedPath","useAnimatedPath","animatedProps","useSpring","config","immediate","stroke","strokeLinecap","fill","onMouseEnter","onMouseMove","onMouseLeave","WrappedParallelCoordinates","withContainer","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","axes","axis","ResponsiveParallelCoordinates","props","WrappedParallelCoordinatesCanvas","pixelRatio","canvasEl","useRef","theme","useTheme","useEffect","ctx","renderAxisToCanvas","ref","style","window","ResponsiveParallelCoordinatesCanvas","group","help","required","description","controlType","controlOptions","shouldCreate","shouldRemove","getItemTitle","disabled","when","disabledValue","defaultValue","defaults","choices","label","lineCurvePropKeys","enableControlForFlavors","unit","flavors","themeProperty","motionProperties","groups","groupProperties","settingsMapper"],"mappings":"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","file":"8a08e82b418a1d26bd365445dd4625425eed4154-f0cc3f586a9521ba7f6f.js","sourcesContent":["export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","import _slicedToArray from \"/Users/neil/Projects/external/nivo/node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { range as sequence } from \"d3-array\";\nimport { initRange } from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function (i) {\n      return start + step * i;\n    });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function (_) {\n    var _ref, _ref2;\n\n    return arguments.length ? ((_ref = _, _ref2 = _slicedToArray(_ref, 2), r0 = _ref2[0], r1 = _ref2[1], _ref), r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function (_) {\n    var _ref3, _ref4;\n\n    return (_ref3 = _, _ref4 = _slicedToArray(_ref3, 2), r0 = _ref4[0], r1 = _ref4[1], _ref3), r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n\n  scale.step = function () {\n    return step;\n  };\n\n  scale.round = function (_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function (_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function (_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function () {\n    return band(domain(), [r0, r1]).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function () {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\n\nconst commonVariablePropTypes = {\n    key: PropTypes.string.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n}\n\nexport const commonPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.shape({\n                ...commonVariablePropTypes,\n                key: PropTypes.string.isRequired,\n                type: PropTypes.oneOf(['point']).isRequired,\n                padding: PropTypes.number,\n                values: PropTypes.arrayOf(\n                    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                ),\n                tickValues: PropTypes.arrayOf(\n                    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                ),\n            }),\n            PropTypes.shape({\n                ...commonVariablePropTypes,\n                type: PropTypes.oneOf(['linear']).isRequired,\n                min: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n                max: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n                tickValues: PropTypes.oneOfType([\n                    PropTypes.number,\n                    PropTypes.arrayOf(PropTypes.number),\n                ]),\n            }),\n        ])\n    ).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    curve: lineCurvePropType.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    lineOpacity: PropTypes.number.isRequired,\n    axesPlan: PropTypes.oneOf(['foreground', 'background']).isRequired,\n    axesTicksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    colors: ordinalColorsPropType.isRequired,\n}\n\nexport const svgPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const commonDefaultProps = {\n    layout: 'horizontal',\n    curve: 'linear',\n    colors: { scheme: 'yellow_orange_red' },\n    strokeWidth: 2,\n    lineOpacity: 0.35,\n    axesPlan: 'foreground',\n    axesTicksPosition: 'after',\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useMemo } from 'react'\nimport { line } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport { curveFromProp } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\n\nexport const computeParallelCoordinatesLayout = ({ width, height, data, variables, layout }) => {\n    const variablesScale = scalePoint()\n        .range(layout === 'horizontal' ? [0, width] : [height, 0])\n        .domain(variables.map(({ key }) => key))\n\n    const range = layout === 'horizontal' ? [height, 0] : [0, width]\n    const variablesWithScale = variables.map(variable => {\n        const allValues = new Set()\n        data.forEach(d => allValues.add(d[variable.key]))\n\n        let scale\n        if (variable.type === 'linear') {\n            const min =\n                variable.min !== undefined && variable.min !== 'auto'\n                    ? variable.min\n                    : Math.min(...Array.from(allValues))\n            const max =\n                variable.max !== undefined && variable.max !== 'auto'\n                    ? variable.max\n                    : Math.max(...Array.from(allValues))\n\n            scale = scaleLinear().rangeRound(range).domain([min, max])\n        }\n\n        if (variable.type === 'point') {\n            scale = scalePoint()\n                .range(range)\n                .domain(variable.values || allValues)\n\n            if (variable.padding !== undefined) {\n                scale.padding(variable.padding)\n            }\n        }\n\n        return {\n            ...variable,\n            scale,\n            values: Array.from(allValues),\n        }\n    })\n\n    const dataWithPoints = data.map((datum, index) => {\n        const points = variablesWithScale.map(variable => ({\n            x:\n                layout === 'horizontal'\n                    ? variablesScale(variable.key)\n                    : variable.scale(datum[variable.key]),\n            y:\n                layout === 'horizontal'\n                    ? variable.scale(datum[variable.key])\n                    : variablesScale(variable.key),\n        }))\n\n        return { index, ...datum, points }\n    })\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n    }\n}\n\nexport const computeAxisDensity = (variable, data) => {\n    let kernels\n    if (variable.type === 'point') {\n        kernels = data.reduce((acc, datum) => {\n            const value = datum[variable.key]\n            let kernel = acc.find(k => k.id === value)\n            if (kernel === undefined) {\n                kernel = { id: value, count: 0 }\n                acc.push(kernel)\n            }\n            kernel.count++\n\n            return acc\n        }, [])\n        kernels = variable.scale\n            .domain()\n            .map(d => kernels.find(k => k.id === d))\n            .filter(k => k !== undefined)\n    } else if (variable.type === 'linear') {\n        kernels = variable.scale.ticks(5).map((id, index, ticks) => {\n            if (index === 0) {\n                return {\n                    id,\n                    count: variable.values.filter(v => v <= id).length,\n                }\n            }\n\n            return {\n                id,\n                count: variable.values.filter(v => v > ticks[index - 1] && v <= id).length,\n            }\n        })\n    }\n\n    if (kernels !== undefined) {\n        const scale = scaleLinear()\n            .rangeRound([0, 60])\n            .domain([0, Math.max(...kernels.map(k => k.count))])\n\n        return kernels.map(k => ({\n            id: k.id,\n            position: variable.scale(k.id),\n            size: scale(k.count),\n        }))\n    }\n\n    return []\n}\n\nexport const useParallelCoordinates = ({\n    width,\n    height,\n    data,\n    variables,\n    layout,\n    colors,\n    curve,\n}) => {\n    const getLineColor = useOrdinalColorScale(colors, 'index')\n\n    const lineGenerator = useMemo(\n        () =>\n            line()\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n\n    const { variablesScale, variablesWithScale, dataWithPoints } = useMemo(\n        () =>\n            computeParallelCoordinatesLayout({\n                width,\n                height,\n                data,\n                variables,\n                layout,\n            }),\n        [width, height, data, variables, layout]\n    )\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        getLineColor,\n        lineGenerator,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TableTooltip } from '@nivo/tooltip'\n\nconst ParallelCoordinatesLineTooltip = ({ data, variables }) => {\n    return (\n        <TableTooltip\n            rows={variables.map(variable => [\n                variable.key,\n                <strong>{data[variable.key]}</strong>, // eslint-disable-line react/jsx-key\n            ])}\n        />\n    )\n}\n\nParallelCoordinatesLineTooltip.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(ParallelCoordinatesLineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport ParallelCoordinatesLineTooltip from './ParallelCoordinatesLineTooltip'\n\nconst ParallelCoordinatesLine = ({\n    data,\n    variables,\n    lineGenerator,\n    points,\n    strokeWidth,\n    color,\n    opacity,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(\n                <ParallelCoordinatesLineTooltip data={data} variables={variables} />,\n                event\n            )\n        },\n        [data, variables]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(lineGenerator(points))\n    const animatedProps = useSpring({\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            stroke={animatedProps.color}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            opacity={animatedProps.opacity}\n            fill=\"none\"\n            onMouseEnter={handleMouseHover}\n            onMouseMove={handleMouseHover}\n            onMouseLeave={hideTooltip}\n        />\n    )\n}\n\nParallelCoordinatesLine.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n}\n\nexport default memo(ParallelCoordinatesLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { SvgWrapper, useDimensions, withContainer } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { svgPropTypes, svgDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\nimport ParallelCoordinatesLine from './ParallelCoordinatesLine'\n\nconst ParallelCoordinates = ({\n    data,\n    variables,\n    layout,\n    width,\n    height,\n    margin: partialMargin,\n    axesPlan,\n    axesTicksPosition,\n    strokeWidth,\n    lineOpacity,\n    curve,\n    colors,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        lineGenerator,\n        getLineColor,\n    } = useParallelCoordinates({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        variables,\n        layout,\n        colors,\n        curve,\n    })\n\n    const axes = variablesWithScale.map(variable => (\n        <Axis\n            key={variable.key}\n            axis={layout === 'horizontal' ? 'y' : 'x'}\n            length={layout === 'horizontal' ? innerHeight : innerWidth}\n            x={layout === 'horizontal' ? variablesScale(variable.key) : 0}\n            y={layout === 'horizontal' ? 0 : variablesScale(variable.key)}\n            scale={variable.scale}\n            ticksPosition={variable.ticksPosition || axesTicksPosition}\n            tickValues={variable.tickValues}\n            tickSize={variable.tickSize}\n            tickPadding={variable.tickPadding}\n            tickRotation={variable.tickRotation}\n            format={variable.tickFormat}\n            legend={variable.legend}\n            legendPosition={variable.legendPosition}\n            legendOffset={variable.legendOffset}\n        />\n    ))\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {axesPlan === 'background' && axes}\n            {dataWithPoints.map(datum => (\n                <ParallelCoordinatesLine\n                    key={datum.index}\n                    data={datum}\n                    variables={variables}\n                    lineGenerator={lineGenerator}\n                    points={datum.points}\n                    strokeWidth={strokeWidth}\n                    opacity={lineOpacity}\n                    color={getLineColor(datum)}\n                />\n            ))}\n            {axesPlan === 'foreground' && axes}\n        </SvgWrapper>\n    )\n}\n\nParallelCoordinates.propTypes = svgPropTypes\n\nconst WrappedParallelCoordinates = withContainer(ParallelCoordinates)\nWrappedParallelCoordinates.defaultProps = svgDefaultProps\n\nexport default WrappedParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinates from './ParallelCoordinates'\n\nconst ResponsiveParallelCoordinates = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ParallelCoordinates width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDimensions, useTheme, withContainer } from '@nivo/core'\nimport { renderAxisToCanvas } from '@nivo/axes'\nimport { commonPropTypes, commonDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\n\nconst ParallelCoordinatesCanvas = ({\n    data,\n    layout,\n    variables,\n    width,\n    height,\n    margin: partialMargin,\n    curve,\n    colors,\n    lineOpacity,\n    strokeWidth,\n    axesTicksPosition,\n    pixelRatio,\n}) => {\n    const canvasEl = useRef(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        lineGenerator,\n        getLineColor,\n    } = useParallelCoordinates({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        variables,\n        layout,\n        colors,\n        curve,\n    })\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        lineGenerator.context(ctx)\n        dataWithPoints.forEach(datum => {\n            ctx.save()\n            ctx.globalAlpha = lineOpacity\n\n            ctx.beginPath()\n            lineGenerator(datum.points)\n            ctx.strokeStyle = getLineColor(datum)\n            ctx.lineWidth = strokeWidth\n            ctx.stroke()\n\n            ctx.restore()\n        })\n\n        variablesWithScale.map(variable => {\n            renderAxisToCanvas(ctx, {\n                axis: layout === 'horizontal' ? 'y' : 'x',\n                scale: variable.scale,\n                x: layout === 'horizontal' ? variablesScale(variable.key) : 0,\n                y: layout === 'horizontal' ? 0 : variablesScale(variable.key),\n                length: layout === 'horizontal' ? innerHeight : innerWidth,\n                ticksPosition: axesTicksPosition,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        lineGenerator,\n        getLineColor,\n        lineOpacity,\n        strokeWidth,\n        dataWithPoints,\n        variablesWithScale,\n        layout,\n        axesTicksPosition,\n        theme,\n        pixelRatio,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        />\n    )\n}\n\nParallelCoordinatesCanvas.propTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nconst WrappedParallelCoordinatesCanvas = withContainer(ParallelCoordinatesCanvas)\nWrappedParallelCoordinatesCanvas.defaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nexport default WrappedParallelCoordinatesCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinatesCanvas from './ParallelCoordinatesCanvas'\n\nconst ResponsiveParallelCoordinatesCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => (\n            <ParallelCoordinatesCanvas width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinatesCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { lineCurvePropKeys } from '@nivo/core'\nimport { commonDefaultProps as defaults } from '@nivo/parallel-coordinates'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        type: 'Array<object | Array>',\n        required: true,\n    },\n    {\n        key: 'variables',\n        type: 'object[]',\n        help: 'Variables configuration.',\n        description: `\n            Variables configuration, define accessor (\\`key\\`)\n            and variable type. Type must be one of\n            \\`linear\\` or \\`point\\`, \\`linear\\`\n            variables are suitable for continuous numerical\n            data such as age or cost while\n            \\`point\\` variables are suitable for\n            discrete values such as gender.\n        `,\n        group: 'Variables',\n        controlType: 'array',\n        controlOptions: {\n            shouldCreate: false,\n            shouldRemove: false,\n            getItemTitle: (index, values) => `${values.key} (${values.type})`,\n            props: [\n                {\n                    key: 'key',\n                    help: 'Variable key, used to access to corresponding datum value.',\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'type',\n                    help: `Variable type, must be one of: 'linear', 'point'.`,\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Min value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Max value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 1000,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                // {\n                //     key: 'padding',\n                //     help: 'Outer padding (0~1).',\n                //     type: `number`,\n                //     controlType: 'range',\n                //     controlOptions: {\n                //         when: ({ type }) => type === 'point',\n                //         min: 0,\n                //         max: 1,\n                //         step: 0.01,\n                //     },\n                // },\n            ],\n        },\n    },\n    {\n        key: 'layout',\n        help: `Chart layout.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.layout,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: lineCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'axesPlan',\n        help: `Axes plan.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesPlan,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'foreground', value: 'foreground' },\n                { label: 'background', value: 'background' },\n            ],\n        },\n    },\n    {\n        key: 'axesTicksPosition',\n        help: `Axes ticks position.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesTicksPosition,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'strokeWidth',\n        help: 'Lines stroke width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.strokeWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'lineOpacity',\n        help: 'Lines opacity.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.lineOpacity,\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport default [\n    {\n        key: 'temp',\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'temperature',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'cost',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'cost',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'color',\n        type: 'point',\n        padding: 1,\n        values: ['red', 'yellow', 'green'],\n        legend: 'color',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'target',\n        type: 'point',\n        padding: 0,\n        values: ['A', 'B', 'C', 'D', 'E'],\n        legend: 'target',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'volume',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        legend: 'volume',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n]\n"],"sourceRoot":""}