{"version":3,"file":"component---src-pages-stream-index-js-354043c43a45bfda8941.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/area.js","webpack://nivo-website/../node_modules/d3-shape/src/array.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/../node_modules/d3-shape/src/stack.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nivo-website/../src/StreamLayer.tsx","webpack://nivo-website/../src/StreamLayers.tsx","webpack://nivo-website/../src/StreamDots.tsx","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../src/StreamSlicesItem.tsx","webpack://nivo-website/../src/StreamSlices.tsx","webpack://nivo-website/../src/StreamDotsItem.tsx","webpack://nivo-website/../src/LayerTooltip.tsx","webpack://nivo-website/../src/StackTooltip.tsx","webpack://nivo-website/../src/Stream.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveStream.tsx","webpack://nivo-website/./src/data/components/stream/mapper.js","webpack://nivo-website/./src/data/components/stream/props.ts","webpack://nivo-website/./src/data/components/stream/generator.js","webpack://nivo-website/./src/data/components/stream/defaults.js","webpack://nivo-website/./src/pages/stream/index.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/random.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}","export var slice = Array.prototype.slice;","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import { slice } from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function () {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function (_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function (_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function (_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useCallback, createElement } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamLayerData } from './types'\n\ninterface StreamLayerProps<RawDatum extends StreamDatum> {\n    layer: StreamLayerData\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayer = <RawDatum extends StreamDatum>({\n    layer,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayerProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { layer }), event, 'left')\n        },\n        [showTooltipFromEvent, layer]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(layer.path)\n    const animatedProps = useSpring({\n        color: layer.color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={layer.fill ? layer.fill : animatedProps.color}\n            fillOpacity={fillOpacity}\n            stroke={getBorderColor(layer)}\n            strokeWidth={borderWidth}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? hideTooltip : undefined}\n        />\n    )\n}\n","import { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { StreamLayer } from './StreamLayer'\nimport { StreamCommonProps, StreamLayerData, StreamDatum } from './types'\n\ninterface StreamLayersProps<RawDatum extends StreamDatum> {\n    layers: StreamLayerData[]\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayers = <RawDatum extends StreamDatum>({\n    layers,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayersProps<RawDatum>) => (\n    <g>\n        {layers.map((layer, i) => (\n            <StreamLayer<RawDatum>\n                key={i}\n                layer={layer}\n                getBorderColor={getBorderColor}\n                borderWidth={borderWidth}\n                fillOpacity={fillOpacity}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { createElement } from 'react'\nimport { StreamSvgProps, StreamLayerDatum, StreamDatum } from './types'\n\ninterface StreamDotsProps<RawDatum extends StreamDatum> {\n    id: string | number\n    color: string\n    data: StreamLayerDatum[]\n    dotComponent: Exclude<StreamSvgProps<RawDatum>['dotComponent'], undefined>\n    position: 'start' | 'center' | 'end'\n    getSize: (datum: StreamLayerDatum) => number\n    getColor: (datum: StreamLayerDatum) => string\n    getBorderWidth: (datum: StreamLayerDatum) => number\n    getBorderColor: (datum: StreamLayerDatum) => string\n}\n\nconst getDotY = <RawDatum extends StreamDatum>(\n    datum: StreamLayerDatum,\n    position: StreamDotsProps<RawDatum>['position']\n) => {\n    let y = datum.y2\n    if (position === 'center') {\n        y = datum.y1 + (datum.y2 - datum.y1) / 2\n    } else if (position === 'start') {\n        y = datum.y1\n    }\n\n    return y\n}\n\nexport const StreamDots = <RawDatum extends StreamDatum>({\n    data,\n    dotComponent,\n    position,\n    getSize,\n    getColor,\n    getBorderWidth,\n    getBorderColor,\n}: StreamDotsProps<RawDatum>) => (\n    <>\n        {data.map((datum, i) => {\n            return createElement(dotComponent, {\n                key: i,\n                datum,\n                x: datum.x,\n                y: getDotY<RawDatum>(datum, position),\n                size: getSize(datum),\n                color: getColor(datum),\n                borderWidth: getBorderWidth(datum),\n                borderColor: getBorderColor(datum),\n            })\n        })}\n    </>\n)\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createElement, useCallback, useState } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamSliceData } from './types'\n\ninterface StreamSlicesItemProps<RawDatum extends StreamDatum> {\n    slice: StreamSliceData\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlicesItem = <RawDatum extends StreamDatum>({\n    slice,\n    height,\n    tooltip,\n}: StreamSlicesItemProps<RawDatum>) => {\n    const [isHover, setIsHover] = useState(false)\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(createElement(tooltip, { slice }), event, 'left')\n        },\n        [setIsHover, showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [setIsHover, hideTooltip])\n\n    return (\n        <g transform={`translate(${slice.x}, 0)`}>\n            {isHover && (\n                <line\n                    x1={0}\n                    x2={0}\n                    y1={0}\n                    y2={height}\n                    stroke=\"#000\"\n                    strokeOpacity={0.35}\n                    strokeWidth={1}\n                />\n            )}\n            <rect\n                x={-20}\n                width={40}\n                height={height}\n                fill=\"#000\"\n                fillOpacity={0}\n                onMouseEnter={handleMouseHover}\n                onMouseMove={handleMouseHover}\n                onMouseLeave={handleMouseLeave}\n            />\n        </g>\n    )\n}\n","import { StreamSliceData, StreamDatum, StreamCommonProps } from './types'\nimport { StreamSlicesItem } from './StreamSlicesItem'\n\ninterface StreamSlicesProps<RawDatum extends StreamDatum> {\n    slices: StreamSliceData[]\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlices = <RawDatum extends StreamDatum>({\n    slices,\n    height,\n    tooltip,\n}: StreamSlicesProps<RawDatum>) => (\n    <g>\n        {slices.map(slice => (\n            <StreamSlicesItem<RawDatum>\n                key={slice.index}\n                slice={slice}\n                height={height}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\n\nexport interface StreamDotsItemProps {\n    x: number\n    y: number\n    size: number\n    color: string\n    borderWidth: number\n    borderColor: string\n}\n\nexport const StreamDotsItem = ({\n    x,\n    y,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n}: StreamDotsItemProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size * 0.5,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius}\n            fill={animatedProps.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nexport const LayerTooltip = ({ layer }: TooltipProps) => (\n    <BasicTooltip id={layer.label} enableChip={true} color={layer.color} />\n)\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { StackTooltipProps } from './types'\n\nexport const StackTooltip = ({ slice }: StackTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            slice.stack.map(p => [\n                <Chip key={p.layerId} color={p.color} />,\n                p.layerLabel,\n                p.formattedValue,\n            ]),\n        [slice]\n    )\n\n    return <TableTooltip rows={rows} />\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    Container,\n    SvgWrapper,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { StreamLayers } from './StreamLayers'\nimport { StreamDots } from './StreamDots'\nimport { StreamSlices } from './StreamSlices'\nimport { useStream } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { StreamDatum, StreamLayerId, StreamSvgProps } from './types'\n\ntype InnerStreamProps<RawDatum extends StreamDatum> = Omit<\n    StreamSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerStream = <RawDatum extends StreamDatum>({\n    data,\n    keys,\n    label,\n    valueFormat,\n\n    offsetType,\n    order,\n    curve,\n\n    layers: chartLayers = svgDefaultProps.layers,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n\n    colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n\n    enableDots = svgDefaultProps.enableDots,\n    dotPosition = svgDefaultProps.dotPosition,\n    dotComponent = svgDefaultProps.dotComponent,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    enableStackTooltip = svgDefaultProps.enableStackTooltip,\n    stackTooltip = svgDefaultProps.stackTooltip,\n\n    legends = svgDefaultProps.legends,\n\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerStreamProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        xScale,\n        yScale,\n        layers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    } = useStream<RawDatum>({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        keys,\n        label,\n        valueFormat,\n        offsetType,\n        order,\n        curve,\n        colors,\n        borderColor,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n    })\n\n    const boundDefs = bindDefs(defs, layers, fill)\n\n    const layerById: Record<StreamLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        layers: null,\n        dots: null,\n        slices: null,\n        legends: null,\n    }\n\n    if (chartLayers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n            />\n        )\n    }\n\n    if (chartLayers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (chartLayers.includes('layers')) {\n        layerById.layers = (\n            <StreamLayers<RawDatum>\n                key=\"layers\"\n                layers={layers}\n                fillOpacity={fillOpacity}\n                borderWidth={borderWidth}\n                getBorderColor={getBorderColor}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <Fragment key=\"dots\">\n                {layers.map(layer => (\n                    <StreamDots\n                        key={layer.id}\n                        id={layer.id}\n                        color={layer.color}\n                        data={layer.data}\n                        dotComponent={dotComponent}\n                        position={dotPosition}\n                        getSize={getDotSize}\n                        getColor={getDotColor}\n                        getBorderWidth={getDotBorderWidth}\n                        getBorderColor={getDotBorderColor}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (chartLayers.includes('slices') && isInteractive && enableStackTooltip) {\n        layerById.slices = (\n            <StreamSlices<RawDatum>\n                key=\"slices\"\n                slices={slices}\n                height={innerHeight}\n                tooltip={stackTooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => {\n                    const legendData = layers\n                        .map(layer => ({\n                            id: layer.id,\n                            label: layer.label,\n                            color: layer.color,\n                            fill: layer.fill,\n                        }))\n                        .reverse()\n\n                    return (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legend}\n                            containerWidth={innerWidth}\n                            containerHeight={innerHeight}\n                            data={legendData}\n                        />\n                    )\n                })}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {chartLayers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Stream = <RawDatum extends StreamDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: StreamSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerStream<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport { area, stack as d3Stack } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport {\n    useTheme,\n    usePropertyAccessor,\n    useValueFormatter,\n    useCurveInterpolation,\n    // @ts-ignore\n    stackOrderFromProp,\n    // @ts-ignore\n    stackOffsetFromProp,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    StreamCommonProps,\n    StreamCustomLayerProps,\n    StreamDataProps,\n    StreamDatum,\n    StreamLayerData,\n    StreamLayerDatum,\n    StreamSliceData,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useStream = <RawDatum extends StreamDatum>({\n    width,\n    height,\n    data,\n    keys,\n    label = defaultProps.label,\n    valueFormat,\n    offsetType = defaultProps.offsetType,\n    order = defaultProps.order,\n    curve = defaultProps.curve,\n    colors = defaultProps.colors,\n    borderColor = defaultProps.borderColor,\n    dotSize = defaultProps.dotSize,\n    dotColor = defaultProps.dotColor,\n    dotBorderWidth = defaultProps.dotBorderWidth,\n    dotBorderColor = defaultProps.dotBorderColor,\n}: {\n    width: number\n    height: number\n    data: StreamDataProps<RawDatum>['data']\n    keys: StreamDataProps<RawDatum>['keys']\n    label?: StreamCommonProps<RawDatum>['label']\n    valueFormat?: StreamCommonProps<RawDatum>['valueFormat']\n    offsetType?: StreamCommonProps<RawDatum>['offsetType']\n    order?: StreamCommonProps<RawDatum>['order']\n    curve?: StreamCommonProps<RawDatum>['curve']\n    colors?: StreamCommonProps<RawDatum>['colors']\n    dotSize?: StreamCommonProps<RawDatum>['dotSize']\n    dotColor?: StreamCommonProps<RawDatum>['dotColor']\n    dotBorderWidth?: StreamCommonProps<RawDatum>['dotBorderWidth']\n    dotBorderColor?: StreamCommonProps<RawDatum>['dotBorderColor']\n    borderColor?: StreamCommonProps<RawDatum>['borderColor']\n}) => {\n    const areaCurveFactory = useCurveInterpolation(curve)\n    const areaGenerator = useMemo(\n        () =>\n            area<StreamLayerDatum>()\n                .x(({ x }) => x)\n                .y0(({ y1 }) => y1)\n                .y1(({ y2 }) => y2)\n                .curve(areaCurveFactory),\n        [areaCurveFactory]\n    )\n\n    const stack = useMemo(\n        () =>\n            d3Stack<RawDatum, string | number>()\n                .keys(keys)\n                .offset(stackOffsetFromProp(offsetType))\n                .order(stackOrderFromProp(order)),\n        [keys, offsetType, order]\n    )\n\n    const [layers, xScale, yScale] = useMemo(() => {\n        const allMin: number[] = []\n        const allMax: number[] = []\n\n        const layers = stack(data).map(layer => {\n            return layer.map(point => {\n                allMin.push(point[0])\n                allMax.push(point[1])\n\n                return {\n                    ...point,\n                    value: point.data[layer.key] as number,\n                }\n            })\n        })\n\n        const minValue = Math.min(...allMin)\n        const maxValue = Math.max(...allMax)\n\n        return [\n            layers,\n            scalePoint<number>()\n                .domain(Array.from({ length: data.length }, (_, i) => i))\n                .range([0, width]),\n            scaleLinear().domain([minValue, maxValue]).range([height, 0]),\n        ]\n    }, [stack, data, width, height])\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<StreamLayerData, 'label' | 'color' | 'data'>>(\n        colors,\n        'id'\n    )\n    const getBorderColor = useInheritedColor<StreamLayerData>(borderColor, theme)\n\n    const getDotSize = useMemo(\n        () => (typeof dotSize === 'function' ? dotSize : () => dotSize),\n        [dotSize]\n    )\n    const getDotColor = useInheritedColor(dotColor, theme)\n    const getDotBorderWidth = useMemo(\n        () => (typeof dotBorderWidth === 'function' ? dotBorderWidth : () => dotBorderWidth),\n        [dotBorderWidth]\n    )\n    const getDotBorderColor = useInheritedColor(dotBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<\n        Omit<StreamLayerData, 'label' | 'color' | 'data'>,\n        string | number\n    >(label)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const enhancedLayers: StreamLayerData[] = useMemo(\n        () =>\n            layers.map((points, layerIndex) => {\n                const computedPoints: StreamLayerDatum[] = points.map((point, i) => ({\n                    layerId: keys[layerIndex],\n                    layerLabel: '',\n                    index: i,\n                    color: '',\n                    x: xScale(i) as number,\n                    value: point.value,\n                    formattedValue: formatValue(point.value),\n                    y1: yScale(point[0]),\n                    y2: yScale(point[1]),\n                }))\n\n                const layer: Omit<StreamLayerData, 'label' | 'color' | 'data'> = {\n                    id: keys[layerIndex] as string,\n                    path: areaGenerator(computedPoints) as string,\n                }\n\n                const layerWithComputedProperties: Omit<StreamLayerData, 'data'> = {\n                    ...layer,\n                    label: getLabel(layer),\n                    color: getColor(layer),\n                }\n\n                return {\n                    ...layerWithComputedProperties,\n                    data: computedPoints.map(point => {\n                        point.layerLabel = layerWithComputedProperties.label\n                        point.color = layerWithComputedProperties.color\n\n                        return point\n                    }),\n                }\n            }),\n        [layers, keys, getLabel, areaGenerator, getColor, xScale, yScale, formatValue]\n    )\n\n    const slices: StreamSliceData[] = useMemo(\n        () =>\n            Array.from({ length: data.length }, (_, i) => {\n                const sliceStack = enhancedLayers\n                    .map(layer => layer.data[i])\n                    .sort((a, b) => a.y2 - b.y2)\n\n                return {\n                    index: i,\n                    x: enhancedLayers[0].data[i].x,\n                    stack: sliceStack,\n                }\n            }),\n        [data.length, enhancedLayers]\n    )\n\n    const layerContext: StreamCustomLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            layers: enhancedLayers,\n            slices,\n        }),\n        [xScale, yScale, enhancedLayers, slices]\n    )\n\n    return {\n        xScale,\n        yScale,\n        layers: enhancedLayers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    }\n}\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { StreamDatum, StreamSvgProps } from './types'\nimport { Stream } from './Stream'\n\nexport const ResponsiveStream = <RawDatum extends StreamDatum>(\n    props: Omit<StreamSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Stream<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","// @ts-ignore: the core package should be migrated to TS\nimport { areaCurvePropKeys, stackOrderPropKeys, stackOffsetPropKeys } from '@nivo/core'\nimport { defaultProps, svgDefaultProps } from '@nivo/stream'\nimport {\n    themeProperty,\n    axesProperties,\n    motionProperties,\n    defsProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: 'object[]',\n        required: true,\n        help: 'Chart data.',\n        flavors: ['svg'],\n    },\n    {\n        key: 'keys',\n        group: 'Base',\n        type: 'string | number',\n        required: true,\n        help: 'Keys to use to build each layer.',\n        description: `\n            Keys to use to index the data,\n            those keys must exist in each data item.\n            \n            For example let's say you have this data:\n            \n            \\`\\`\\`\n            [{ A: 10, B: 20},\n             { A: 20, B: 10},\n             { A: 15, B: 15}]\n            \\`\\`\\`\n              \n            Then the keys should be: \\`['A', 'B']\\`.\n            \n            Also note that those keys are used by default to generate\n            the label of each layer, displayed in the legends and\n            the stack tooltip, this behaviour can be customized\n            via the \\`label\\` property, in case you want to display\n            something else.\n        `,\n        flavors: ['svg'],\n    },\n    {\n        key: 'label',\n        group: 'Base',\n        type: 'string | (layer) => string | number',\n        required: false,\n        help: 'Label accessor, used for legends.',\n        description: `\n            Define how to access the label of each layer,\n            by default, nivo will use the corresponding key defined\n            in \\`keys\\`, it is available under the \\`id\\` property\n            of the layer.\n        `,\n        defaultValue: defaultProps.label,\n        flavors: ['svg'],\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | (value: number) => string',\n        required: false,\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        flavors: ['svg'],\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'offsetType',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Offset type.',\n        flavors: ['svg'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: stackOffsetPropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'order',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Layers order.',\n        flavors: ['svg'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: stackOrderPropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'curve',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use\n            for the area generator.\n        `,\n        defaultValue: defaultProps.curve,\n        flavors: ['svg'],\n        controlType: 'choices',\n        controlOptions: {\n            choices: areaCurvePropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        type: '{number}',\n        required: true,\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveStream/>\\`.\n        `,\n        flavors: ['svg'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        type: '{number}',\n        required: true,\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveStream/>\\`.\n        `,\n        flavors: ['svg'],\n        enableControlForFlavors: ['api'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        group: 'Base',\n        type: 'object',\n        required: false,\n        help: 'Chart margin.',\n        flavors: ['svg'],\n        controlType: 'margin',\n    },\n    themeProperty(['svg']),\n    {\n        key: 'colors',\n        group: 'Style',\n        type: 'string | Function',\n        required: false,\n        help: 'Defines how to compute line color.',\n        flavors: ['svg'],\n        defaultValue: defaultProps.colors,\n        controlType: 'ordinalColors',\n    },\n    {\n        key: 'fillOpacity',\n        group: 'Style',\n        type: 'number',\n        required: false,\n        help: 'Layers fill opacity.',\n        flavors: ['svg'],\n        defaultValue: defaultProps.fillOpacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'borderWidth',\n        group: 'Style',\n        help: 'Width of layer border.',\n        type: 'number',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.borderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'borderColor',\n        group: 'Style',\n        type: 'string | object | Function',\n        required: false,\n        help: 'Method to compute layer border color.',\n        description: `\n            How to compute border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        flavors: ['svg'],\n        defaultValue: defaultProps.borderColor,\n        controlType: 'inheritedColor',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'layers',\n        group: 'Customization',\n        type: 'Array<string | Function>',\n        required: false,\n        help: 'Defines the order of layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`grid\\`, \\`axes\\`, \\`layers\\`, \\`dots\\`, \\`slices\\`, \\`legends\\`.\n\n            You can also use this to insert extra layers to the chart,\n            this extra layer must be a function which will receive\n            the chart computed data and must return a valid SVG element.\n        `,\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.layers,\n    },\n    {\n        key: 'enableGridX',\n        group: 'Grid & Axes',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.enableGridX,\n        controlType: 'switch',\n    },\n    {\n        key: 'enableGridY',\n        group: 'Grid & Axes',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.enableGridY,\n        controlType: 'switch',\n    },\n    ...axesProperties(),\n    {\n        key: 'enableDots',\n        group: 'Dots',\n        help: 'Enable/disable dots.',\n        type: 'boolean',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.enableDots,\n        controlType: 'switch',\n    },\n    {\n        key: 'renderDot',\n        group: 'Dots',\n        flavors: ['svg'],\n        help: 'Custom rendering function for dots.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'dotSize',\n        group: 'Dots',\n        help: 'Size of the dots',\n        description:\n            'Size of the dots, it also accepts a function which can be used to make it vary according to the associated datum.',\n        type: 'number | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotSize,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 20,\n        },\n    },\n    {\n        key: 'dotColor',\n        group: 'Dots',\n        help: 'Method to compute dots color.',\n        type: 'string | object | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotColor,\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'dotBorderWidth',\n        group: 'Dots',\n        help: 'Width of the dots border.',\n        description:\n            'Width of the dots border, it also accepts a function which can be used to make it vary according to the associated datum.',\n        type: 'number | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotBorderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'dotBorderColor',\n        group: 'Dots',\n        help: 'Method to compute dots border color.',\n        type: 'string | object | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotBorderColor,\n        controlType: 'inheritedColor',\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg'],\n        help: `Tooltip custom component.`,\n        type: 'FunctionComponent',\n        required: false,\n        group: 'Interactivity',\n        description: `\n            Allows complete tooltip customisation, it must return\n            a valid HTML element and will receive the following data:\n            \n            \\`\\`\\`\n            {\n                layer: {\n                    id: string | number\n                    label: string | number\n                    color: string\n                    // populated when using patterns/gradients\n                    fill?: string\n                    path: string\n                    // computed data for each data point for this\n                    // specific layer\n                    data: StreamLayerDatum[]\n                }\n            }\n            \\`\\`\\`\n            \n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'enableStackTooltip',\n        flavors: ['svg'],\n        help: `Enable/disable stack tooltip ('isInteractive' must also be 'true').`,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.enableStackTooltip,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'stackTooltip',\n        flavors: ['svg'],\n        help: `Stack tooltip custom component.`,\n        type: 'FunctionComponent',\n        required: false,\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n    {\n        key: 'ariaLabel',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-label](https://www.w3.org/TR/wai-aria/#aria-label).',\n        type: 'string',\n        required: false,\n    },\n    {\n        key: 'ariaLabelledBy',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-labelledby](https://www.w3.org/TR/wai-aria/#aria-labelledby).',\n        type: 'string',\n        required: false,\n    },\n    {\n        key: 'ariaDescribedBy',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-describedby](https://www.w3.org/TR/wai-aria/#aria-describedby).',\n        type: 'string',\n        required: false,\n    },\n]\n\nexport const groups = groupProperties(props)\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\nconst names = [\n    'Raoul',\n    'Josiane',\n    'Marcel',\n    'René',\n    'Paul',\n    'Jacques',\n    'Jane',\n    'André',\n    'Guillaume',\n    'Lyu',\n    'Maki',\n    'Junko',\n    'Emi',\n    'Kae',\n    'Tomoko',\n    'Camille',\n    'Jared',\n    'Ibrahim',\n    'Mohamed',\n    'Claude',\n    'Jean',\n    'Leonard',\n    'David',\n]\n\nexport const generateLightDataSet = () => ({\n    data: range(9).map(() =>\n        names.slice(0, 6).reduce((layer, key) => {\n            layer[key] = random(10, 200)\n            return layer\n        }, {})\n    ),\n    keys: names.slice(0, 6),\n})\n\nexport const generateHeavyDataSet = () => ({\n    data: range(360).map(() =>\n        names.reduce((layer, key) => {\n            layer[key] = random(10, 200)\n            return layer\n        }, {})\n    ),\n    keys: names,\n})\n","import { patternDotsDef, patternSquaresDef } from '@nivo/core'\nimport { defaultProps, svgDefaultProps } from '@nivo/stream'\n\nexport default {\n    label: defaultProps.label,\n    valueFormat: { format: '', enabled: false },\n\n    margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60,\n    },\n\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: false,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: -40,\n    },\n    enableGridX: true,\n    enableGridY: false,\n\n    curve: 'catmullRom',\n    offsetType: 'silhouette',\n    order: 'none',\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.85,\n    borderWidth: 0,\n    borderColor: {\n        theme: 'background',\n    },\n\n    defs: [\n        patternDotsDef('dots', {\n            background: 'inherit',\n            color: '#2c998f',\n            size: 4,\n            padding: 2,\n            stagger: true,\n        }),\n        patternSquaresDef('squares', {\n            background: 'inherit',\n            color: '#e4c912',\n            size: 6,\n            padding: 2,\n            stagger: true,\n        }),\n    ],\n    fill: [\n        { match: { id: 'Paul' }, id: 'dots' },\n        { match: { id: 'Marcel' }, id: 'squares' },\n    ],\n\n    enableDots: defaultProps.enableDots,\n    dotSize: 8,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 2,\n    dotBorderColor: { from: 'color', modifiers: [['darker', 0.7]] },\n\n    animate: svgDefaultProps.animate,\n    motionConfig: svgDefaultProps.motionConfig,\n\n    isInteractive: defaultProps.isInteractive,\n    enableStackTooltip: true,\n}\n","import React from 'react'\nimport { ResponsiveStream, svgDefaultProps } from '@nivo/stream'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/stream/meta.yml'\nimport mapper from '../../data/components/stream/mapper'\nimport { groups } from '../../data/components/stream/props'\nimport { generateLightDataSet } from '../../data/components/stream/generator'\nimport defaultSettings from '../../data/components/stream/defaults'\n\nconst initialProperties = {\n    ...defaultSettings,\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            translateX: 100,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemTextColor: '#999999',\n            symbolSize: 12,\n            symbolShape: 'circle',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Stream = () => {\n    return (\n        <ComponentTemplate\n            name=\"Stream\"\n            meta={meta.Stream}\n            icon=\"stream\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={svgDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={(properties, data) => ({\n                keys: data.keys,\n                ...properties,\n            })}\n            generateData={generateLightDataSet}\n            getTabData={data => data.data}\n        >\n            {(properties, data, theme) => {\n                return (\n                    <ResponsiveStream\n                        data={data.data}\n                        keys={data.keys}\n                        {...properties}\n                        theme={theme}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Stream\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","area","data","i","j","k","d","buffer","n","length","defined0","x0z","Array","y0z","areaStart","lineStart","lineEnd","point","areaEnd","arealine","arguments","lineX0","lineY0","lineY1","lineX1","slice","line","p","stackValue","key","keys","order","offset","value","stack","oz","kz","apply","m","sz","sij","ki","si","index","durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","floor","ceil","round","d0","d1","step","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","settingsMapper","mapping","exclude","settings","options","overrides","Object","forEach","omit","mapAxis","type","upperFirst","enable","mapFormat","format","enabled","undefined","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","ticks","getFormatter","formatter","timeFormat","d3Format","computeGridLines","width","height","_values","isArray","lines","AxisTick","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","tick","initial","textTransform","from","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","ctx","Number","degreesToRadians","String","renderAxesToCanvas","renderGridLinesToCanvas","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","call","StreamLayer","layer","fillOpacity","borderWidth","getBorderColor","isInteractive","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","createElement","animatedPath","useAnimatedPath","color","fill","stroke","strokeWidth","onMouseMove","onMouseEnter","onMouseLeave","StreamLayers","layers","getDotY","datum","StreamDots","dotComponent","getSize","getColor","getBorderWidth","size","borderColor","_arrayLikeToArray","arr","len","arr2","_slicedToArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","name","unsupportedIterableToArray","TypeError","nonIterableRest","StreamSlicesItem","useState","isHover","setIsHover","handleMouseLeave","strokeOpacity","StreamSlices","slices","defaultProps","label","offsetType","axisBottom","axisLeft","enableGridX","enableGridY","colors","scheme","modifiers","enableDots","dotPosition","radius","cx","cy","dotSize","dotColor","dotBorderWidth","dotBorderColor","id","enableChip","enableStackTooltip","stackTooltip","rows","legends","legendLabel","role","svgDefaultProps","defs","motionConfig","isFocusable","InnerStream","valueFormat","chartLayers","partialMargin","margin","axisTop","axisRight","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","areaCurveFactory","useCurveInterpolation","areaGenerator","d3Stack","stackOffsetFromProp","stackOrderFromProp","allMin","allMax","minValue","maxValue","scaleLinear","useOrdinalColorScale","useInheritedColor","getDotSize","getDotColor","getDotBorderWidth","getDotBorderColor","getLabel","usePropertyAccessor","useValueFormatter","enhancedLayers","computedPoints","points","layerId","layerLabel","formattedValue","layerWithComputedProperties","sliceStack","a","b","layerContext","useStream","boundDefs","bindDefs","layerById","grid","dots","legendData","containerWidth","containerHeight","Stream","renderWrapper","otherProps","ResponsiveStream","group","required","help","flavors","description","defaultValue","controlType","controlOptions","choices","stackOffsetPropKeys","stackOrderPropKeys","areaCurvePropKeys","enableControlForFlavors","unit","min","max","themeProperty","defsProperties","axesProperties","motionProperties","groups","groupProperties","names","generateLightDataSet","map","reduce","random","orient","patternDotsDef","background","padding","stagger","patternSquaresDef","match","initialProperties","defaultSettings","anchor","direction","translateX","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","alert","JSON","stringify","effects","on","ComponentTemplate","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","codePropertiesMapper","generateData","getTabData","nativeFloor","nativeRandom","module","exports","lower","upper","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","rand"],"sourceRoot":""}