"use strict";(self.webpackChunknivo_website=self.webpackChunknivo_website||[]).push([[2853],{3583:function(e,t,a){function n(e){return function(){return e}}a.d(t,{Z:function(){return n}})},10016:function(e,t,a){a.d(t,{X:function(){return l}});var n=a(649),o=a(74186),r=a(80169),i=[{key:"data",help:"Chart data.",type:"object[]",required:!0,group:"Base"},{key:"indexBy",help:"Key to use to index the data.",description:"\n            Key to use to index the data,\n            this key must exist in each data item.\n\n            You can also provide a function which will\n            receive the data item and must return the desired index.\n        ",type:"string | (datum: RawDatum): string | number",required:!1,defaultValue:o.XB.indexBy,group:"Base"},{key:"keys",help:"Keys to use to determine each serie.",type:"string[]",required:!1,defaultValue:o.XB.keys,group:"Base"},{key:"groupMode",help:"How to group bars.",type:"grouped | stacked",required:!1,defaultValue:o.XB.groupMode,controlType:"radio",group:"Base",controlOptions:{choices:[{label:"stacked",value:"stacked"},{label:"grouped",value:"grouped"}]}},{key:"layout",help:"How to display bars.",type:"horizontal | vertical",required:!1,defaultValue:o.XB.layout,controlType:"radio",group:"Base",controlOptions:{choices:[{label:"horizontal",value:"horizontal"},{label:"vertical",value:"vertical"}]}},{key:"valueScale",type:"object",group:"Base",help:"value scale configuration.",defaultValue:o.XB.valueScale,controlType:"object",controlOptions:{props:[{key:"type",help:"Scale type.",type:"string",controlType:"choices",controlOptions:{disabled:!0,choices:["linear","symlog"].map((function(e){return{label:e,value:e}}))}}]}},{key:"indexScale",type:"object",group:"Base",help:"index scale configuration.",defaultValue:o.XB.indexScale,controlType:"object",controlOptions:{props:[{key:"type",help:"Scale type.",type:"string",controlType:"choices",controlOptions:{disabled:!0,choices:["band"].map((function(e){return{label:e,value:e}}))}},{key:"round",help:"Toggle index scale (for bar width) rounding.",type:"boolean",controlType:"switch"}]}},{key:"reverse",help:"Reverse bars, starts on top instead of bottom for vertical layout and right instead of left for horizontal one.",type:"boolean",required:!1,defaultValue:o.XB.reverse,controlType:"switch",group:"Base"},{key:"minValue",help:"Minimum value.",description:"\n            Minimum value, if 'auto',\n            will use min value from the provided data.\n        ",required:!1,defaultValue:o.XB.minValue,type:"number | 'auto'",controlType:"switchableRange",group:"Base",controlOptions:{disabledValue:"auto",defaultValue:-1e3,min:-1e3,max:0}},{key:"maxValue",help:"Maximum value.",description:"\n            Maximum value, if 'auto',\n            will use max value from the provided data.\n        ",required:!1,defaultValue:o.XB.maxValue,type:"number | 'auto'",controlType:"switchableRange",group:"Base",controlOptions:{disabledValue:"auto",defaultValue:1e3,min:0,max:1e3}},{key:"valueFormat",group:"Base",help:"Optional formatter for values.",description:"\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        ",required:!1,type:"string | (value: number) => string | number",controlType:"valueFormat"},{key:"padding",help:"Padding between each bar (ratio).",type:"number",required:!1,defaultValue:o.XB.padding,controlType:"range",group:"Base",controlOptions:{min:0,max:.9,step:.05}},{key:"innerPadding",help:"Padding between grouped/stacked bars.",type:"number",required:!1,defaultValue:o.XB.innerPadding,controlType:"range",group:"Base",controlOptions:{unit:"px",min:0,max:10}},{key:"width",enableControlForFlavors:["api"],help:"Chart width.",description:"\n            not required if using `ResponsiveBar`.\n            Also note that width exclude left/right axes,\n            please add margin to make sure they're visible.\n        ",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"height",enableControlForFlavors:["api"],help:"Chart height.",description:"\n            not required if using `ResponsiveBar`.\n            Also note that width exclude left/right axes,\n            please add margin to make sure they're visible.\n        ",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"pixelRatio",flavors:["canvas"],help:"Adjust pixel ratio, useful for HiDPI screens.",required:!1,defaultValue:"Depends on device",type:"number",controlType:"range",group:"Base",controlOptions:{min:1,max:2}},{key:"margin",help:"Chart margin.",type:"object",required:!1,controlType:"margin",group:"Base"},(0,r.JR)(["svg","canvas","api"]),{key:"colors",help:"Defines color range.",type:"string | Function | string[]",required:!1,defaultValue:o.XB.colors,controlType:"ordinalColors",group:"Style"},{key:"colorBy",type:"'id' | 'indexValue'",help:"Property used to determine node color.",description:"\n            Property to use to determine node color.\n        ",required:!1,defaultValue:o.XB.colorBy,controlType:"choices",group:"Style",controlOptions:{choices:[{label:"id",value:"id"},{label:"indexValue",value:"indexValue"}]}},{key:"borderRadius",help:"Rectangle border radius.",type:"number",required:!1,defaultValue:o.XB.borderRadius,controlType:"range",group:"Style",controlOptions:{unit:"px",min:0,max:36}},{key:"borderWidth",help:"Width of bar border.",type:"number",required:!1,defaultValue:o.XB.borderWidth,controlType:"lineWidth",group:"Style"},{key:"borderColor",help:"Method to compute border color.",description:"\n            how to compute border color,\n            [see dedicated documentation](self:/guides/colors).\n        ",type:"string | object |Â Function",required:!1,defaultValue:o.XB.borderColor,controlType:"inheritedColor",group:"Style"}].concat((0,n.Z)((0,r.uE)("Style",["svg"])),[{key:"layers",flavors:["svg","canvas"],help:"Defines the order of layers.",description:"\n            Defines the order of layers, available layers are:\n            `grid`, `axes`, `bars`, `markers`, `legends`,\n            `annotations`. The `markers` layer is not available\n            in the canvas flavor.\n\n            You can also use this to insert extra layers to the chart,\n            this extra layer must be a function which will receive\n            the chart computed data and must return a valid SVG\n            element.\n        ",type:"Array<string | Function>",required:!1,defaultValue:o.XB.layers,group:"Customization"},{key:"enableLabel",help:"Enable/disable labels.",type:"boolean",required:!1,defaultValue:o.XB.enableLabel,controlType:"switch",group:"Labels"},{key:"label",group:"Labels",help:"Define how bar labels are computed.",description:"\n            Define how bar labels are computed.\n\n            By default it will use the bar's value.\n            It accepts a string which will be used to access\n            a specific bar data property, such as\n            `'value'` or `'id'`.\n\n            You can also use a funtion if you want to\n            add more logic, this function will receive\n            the current bar's data and must return\n            the computed label which, depending on the context,\n            should return a string or an svg element (Bar) or\n            a string (BarCanvas). For example let's say you want\n            to use a label with both the id and the value,\n            you can achieve this with:\n            ```\n            label={d => `${d.id}: ${d.value}`}\n            ```\n        ",type:"string | Function",required:!1,defaultValue:o.XB.label},{key:"labelSkipWidth",help:"Skip label if bar width is lower than provided value, ignored if 0.",type:"number",required:!1,defaultValue:o.XB.labelSkipWidth,controlType:"range",group:"Labels",controlOptions:{unit:"px",min:0,max:36}},{key:"labelSkipHeight",help:"Skip label if bar height is lower than provided value, ignored if 0.",type:"number",required:!1,defaultValue:o.XB.labelSkipHeight,controlType:"range",group:"Labels",controlOptions:{unit:"px",min:0,max:36}},{key:"labelTextColor",help:"Defines how to compute label text color.",type:"string | object | Function",required:!1,defaultValue:o.XB.labelTextColor,controlType:"inheritedColor",group:"Labels"},{key:"enableGridX",group:"Grid & Axes",help:"Enable/disable x grid.",type:"boolean",required:!1,defaultValue:o.XB.enableGridX,controlType:"switch"},{key:"gridXValues",group:"Grid & Axes",help:"Specify values to use for vertical grid lines.",type:"Array<number | string>",required:!1},{key:"enableGridY",group:"Grid & Axes",help:"Enable/disable y grid.",type:"boolean",required:!1,defaultValue:o.XB.enableGridY,controlType:"switch"},{key:"gridYValues",group:"Grid & Axes",help:"Specify values to use for horizontal grid lines.",type:"Array<number | string>",required:!1}],(0,n.Z)((0,r.uh)()),[{key:"isInteractive",flavors:["svg","canvas"],help:"Enable/disable interactivity.",type:"boolean",required:!1,defaultValue:o.XB.isInteractive,controlType:"switch",group:"Interactivity"},{key:"tooltip",flavors:["svg","canvas"],group:"Interactivity",type:"Function",required:!1,help:"Tooltip custom component",description:"\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the following data:\n            ```\n            {\n                bar: {\n                    id:             string | number,\n                    value:          number,\n                    formattedValue: string,\n                    index:          number,\n                    indexValue:     string | number,\n                    // datum associated to the current index (raw data)\n                    data:           object\n                },\n                color: string,\n                label: string\n            }\n            ```\n            You can also customize the style of the tooltip\n            using the `theme.tooltip` object.\n        "},{key:"custom tooltip example",flavors:["svg","canvas"],group:"Interactivity",help:"Showcase custom tooltip component.",type:"boolean",controlType:"switch"},{key:"onClick",flavors:["svg","canvas"],group:"Interactivity",type:"Function",required:!1,help:"onClick handler",description:"\n            onClick handler, will receive node data as first argument\n            & event as second one. The node data has the following shape:\n\n            ```\n            {\n                id:             string | number,\n                value:          number,\n                formattedValue: string,\n                index:          number,\n                indexValue:     string | number,\n                color:          string,\n                // datum associated to the current index (raw data)\n                data:           object\n            }\n            ```\n        "},{key:"legends",flavors:["svg","canvas"],type:"object[]",help:"Optional chart's legends.",group:"Legends",controlType:"array",controlOptions:{props:(0,r.y0)(["svg"]),shouldCreate:!0,addLabel:"add legend",shouldRemove:!0,getItemTitle:function(e,t){return"legend["+e+"]: "+t.anchor+", "+t.direction},svgDefaultProps:{dataFrom:"keys",anchor:"top-left",direction:"column",justify:!1,translateX:0,translateY:0,itemWidth:100,itemHeight:20,itemsSpacing:0,symbolSize:20,itemDirection:"left-to-right",onClick:function(e){alert(JSON.stringify(e,null,"    "))}}}}],(0,n.Z)((0,r.$j)(["svg"],o.XB,"react-spring")),[{key:"isFocusable",flavors:["svg"],group:"Accessibility",help:"Make the root SVG element and each bar item focusable, for keyboard navigation.",description:"\n            If enabled, focusing will also reveal the tooltip if `isInteractive` is `true`,\n            when a bar gains focus and hide it on blur.\n            \n            Also note that if this option is enabled, focusing a bar will reposition the tooltip\n            at a fixed location.\n        ",type:"boolean",controlType:"switch"},{key:"ariaLabel",flavors:["svg"],group:"Accessibility",help:"Main element [aria-label](https://www.w3.org/TR/wai-aria/#aria-label).",type:"string"},{key:"ariaLabelledBy",flavors:["svg"],group:"Accessibility",help:"Main element [aria-labelledby](https://www.w3.org/TR/wai-aria/#aria-labelledby).",type:"string"},{key:"ariaDescribedBy",flavors:["svg"],group:"Accessibility",help:"Main element [aria-describedby](https://www.w3.org/TR/wai-aria/#aria-describedby).",type:"string"},{key:"barAriaLabel",flavors:["svg"],group:"Accessibility",help:"[aria-label](https://www.w3.org/TR/wai-aria/#aria-label) for bar items.",type:"(data) => string"},{key:"barAriaLabelledBy",flavors:["svg"],group:"Accessibility",help:"[aria-labelledby](https://www.w3.org/TR/wai-aria/#aria-labelledby) for bar items.",type:"(data) => string"},{key:"barAriaDescribedBy",flavors:["svg"],group:"Accessibility",help:"[aria-describedby](https://www.w3.org/TR/wai-aria/#aria-describedby) for bar items.",type:"(data) => string"}]),l=(0,r.R2)(i)},62370:function(e,t,a){a.d(t,{h8:function(){return l},h6:function(){return s},Ld:function(){return u}});var n=a(48159),o=a.n(n),r=a(76744),i=a.n(r),l=function(e,t){var a=(void 0===t?{}:t).exclude,n=void 0===a?[]:a;return function(t,a){void 0===a&&(a={});var r={};return Object.keys(t).forEach((function(n){e[n]&&(r[n]=e[n](t[n],t,a))})),Object.assign({},o()(t,n),r)}},s=function(e){return function(t,a){return a["axis"+i()(e)].enable?o()(t,["enable"]):null}},u=function(e){var t=e.format;return e.enabled?t:void 0}},47885:function(e,t,a){a.d(t,{i:function(){return r},g:function(){return i}});var n=a(38681),o=["hot dog","burger","sandwich","kebab","fries","donut","junk","sushi","ramen","curry","udon","bagel","yakitori","takoyaki","tacos","miso soup","tortilla","tapas","chipirones","gazpacho","soba","bavette","steak","pizza","spaghetti","ravioli","salad","pad thai","bun","waffle","crepe","churros","paella","empanadas","bruschetta","onion soup","cassoulet","bouillabaisse","unagi","tempura","tonkatsu","shabu-shabu","twinkies","jerky","fajitas","jambalaya","meatloaf","mac n' cheese","baked beans","popcorn","buffalo wings","BBQ ribs","apple pie","nachos","risotto","tiramisu"],r=function(){return{data:(0,n.aw)(o.slice(0,6),{size:7,max:200}),keys:o.slice(0,6)}},i=function(){return{data:(0,n.aw)(o,{size:21,max:200}),keys:o}}},22726:function(e,t,a){var n=a(30808),o=a(27378),r=a(91542),i=a(62370),l=["color"],s=r.default.div.withConfig({displayName:"mapper__TooltipWrapper",componentId:"sc-ix4uwo-0"})(["display:grid;grid-template-columns:1fr 1fr;grid-column-gap:12px;background:#333;padding:12px 16px;font-size:12px;border-radius:2px;"]),u=r.default.span.withConfig({displayName:"mapper__TooltipKey",componentId:"sc-ix4uwo-1"})(["font-weight:600;"]),d=r.default.span.withConfig({displayName:"mapper__TooltipValue",componentId:"sc-ix4uwo-2"})([""]),c=function(e){var t=e.color,a=(0,n.Z)(e,l);return o.createElement(s,{style:{color:t}},o.createElement(u,null,"id"),o.createElement(d,null,a.id),o.createElement(u,null,"value"),o.createElement(d,null,a.value),o.createElement(u,null,"formattedValue"),o.createElement(d,null,a.formattedValue),o.createElement(u,null,"index"),o.createElement(d,null,a.index),o.createElement(u,null,"indexValue"),o.createElement(d,null,a.indexValue),o.createElement(u,null,"color"),o.createElement(d,null,t))};t.Z=(0,i.h8)({valueFormat:i.Ld,axisTop:(0,i.h6)("top"),axisRight:(0,i.h6)("right"),axisBottom:(0,i.h6)("bottom"),axisLeft:(0,i.h6)("left"),tooltip:function(e,t){if(t["custom tooltip example"])return c}},{exclude:["enable axisTop","enable axisRight","enable axisBottom","enable axisLeft","custom tooltip example"]})},54491:function(e,t,a){a.r(t);var n=a(27378),o=a(74186),r=a(69857),i=a(8029),l=a(47885),s=a(22726),u=a(10016),d=function(e){},c={indexBy:"country",margin:{top:50,right:60,bottom:50,left:60},pixelRatio:"undefined"!=typeof window&&window.devicePixelRatio?window.devicePixelRatio:1,padding:.15,innerPadding:0,minValue:"auto",maxValue:"auto",groupMode:"stacked",layout:"horizontal",reverse:!1,valueScale:{type:"linear"},indexScale:{type:"band",round:!0},valueFormat:{format:"",enabled:!1},colors:{scheme:"red_blue"},colorBy:"id",borderWidth:0,borderRadius:0,borderColor:{from:"color",modifiers:[["darker",1.6]]},axisTop:{enable:!0,tickSize:5,tickPadding:5,tickRotation:0,legend:"",legendOffset:36},axisRight:{enable:!1,tickSize:5,tickPadding:5,tickRotation:0,legend:"",legendOffset:0},axisBottom:{enable:!0,tickSize:5,tickPadding:5,tickRotation:0,legend:"country",legendPosition:"middle",legendOffset:36},axisLeft:{enable:!0,tickSize:5,tickPadding:5,tickRotation:0,legend:"food",legendPosition:"middle",legendOffset:-40},enableGridX:!0,enableGridY:!1,enableLabel:!0,labelSkipWidth:12,labelSkipHeight:12,labelTextColor:{from:"color",modifiers:[["darker",1.6]]},isInteractive:!0,"custom tooltip example":!1,tooltip:null,legends:[]};t.default=function(){return n.createElement(r.T,{name:"BarCanvas",meta:i.nX,icon:"bar",flavors:i.Kk,currentFlavor:"canvas",properties:u.X,initialProperties:c,propertiesMapper:s.Z,codePropertiesMapper:function(e,t){return Object.assign({keys:t.keys},e,{tooltip:e.tooltip?d:void 0})},generateData:l.g,getTabData:function(e){return e.data}},(function(e,t,a,r){return n.createElement(o.dc,Object.assign({data:t.data,keys:t.keys},e,{theme:a,onClick:function(e){return r({type:"click",label:"[bar] "+e.id+" - "+e.indexValue+": "+e.value,color:e.color,data:e})}}))}))}}}]);
//# sourceMappingURL=component---src-pages-bar-canvas-js-fd5dd65ee28396a1d35e.js.map