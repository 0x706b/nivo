{"version":3,"file":"8a08e82b418a1d26bd365445dd4625425eed4154-cc2ab1f494e471e9cc7d.js","mappings":"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","sources":["webpack://nivo-website/./src/data/components/parallel-coordinates/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/props.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://nivo-website/../src/hooks.js","webpack://nivo-website/../src/ParallelCoordinatesLineTooltip.js","webpack://nivo-website/../src/ParallelCoordinatesLine.js","webpack://nivo-website/../src/ParallelCoordinates.js","webpack://nivo-website/../src/ResponsiveParallelCoordinates.js","webpack://nivo-website/../src/ParallelCoordinatesCanvas.js","webpack://nivo-website/../src/ResponsiveParallelCoordinatesCanvas.js","webpack://nivo-website/./src/data/components/parallel-coordinates/mapper.js","webpack://nivo-website/./src/data/components/parallel-coordinates/variables.js","webpack://nivo-website/../node_modules/lodash/_arrayEach.js","webpack://nivo-website/../node_modules/lodash/_baseAssign.js","webpack://nivo-website/../node_modules/lodash/_baseAssignIn.js","webpack://nivo-website/../node_modules/lodash/_baseClone.js","webpack://nivo-website/../node_modules/lodash/_baseIsMap.js","webpack://nivo-website/../node_modules/lodash/_baseIsSet.js","webpack://nivo-website/../node_modules/lodash/_baseUnset.js","webpack://nivo-website/../node_modules/lodash/_cloneDataView.js","webpack://nivo-website/../node_modules/lodash/_cloneRegExp.js","webpack://nivo-website/../node_modules/lodash/_cloneSymbol.js","webpack://nivo-website/../node_modules/lodash/_copySymbols.js","webpack://nivo-website/../node_modules/lodash/_copySymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_customOmitClone.js","webpack://nivo-website/../node_modules/lodash/_getAllKeysIn.js","webpack://nivo-website/../node_modules/lodash/_getSymbolsIn.js","webpack://nivo-website/../node_modules/lodash/_initCloneArray.js","webpack://nivo-website/../node_modules/lodash/_initCloneByTag.js","webpack://nivo-website/../node_modules/lodash/_parent.js","webpack://nivo-website/../node_modules/lodash/isMap.js","webpack://nivo-website/../node_modules/lodash/isSet.js","webpack://nivo-website/../node_modules/lodash/omit.js"],"sourcesContent":["import { lineCurvePropKeys } from '@nivo/core'\nimport { commonDefaultProps as defaults } from '@nivo/parallel-coordinates'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        type: 'Array<object | Array>',\n        required: true,\n    },\n    {\n        key: 'variables',\n        type: 'object[]',\n        help: 'Variables configuration.',\n        description: `\n            Variables configuration, define accessor (\\`key\\`)\n            and variable type. Type must be one of\n            \\`linear\\` or \\`point\\`, \\`linear\\`\n            variables are suitable for continuous numerical\n            data such as age or cost while\n            \\`point\\` variables are suitable for\n            discrete values such as gender.\n        `,\n        group: 'Variables',\n        controlType: 'array',\n        controlOptions: {\n            shouldCreate: false,\n            shouldRemove: false,\n            getItemTitle: (index, values) => `${values.key} (${values.type})`,\n            props: [\n                {\n                    key: 'key',\n                    help: 'Variable key, used to access to corresponding datum value.',\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'type',\n                    help: `Variable type, must be one of: 'linear', 'point'.`,\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Min value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Max value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 1000,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                // {\n                //     key: 'padding',\n                //     help: 'Outer padding (0~1).',\n                //     type: `number`,\n                //     controlType: 'range',\n                //     controlOptions: {\n                //         when: ({ type }) => type === 'point',\n                //         min: 0,\n                //         max: 1,\n                //         step: 0.01,\n                //     },\n                // },\n            ],\n        },\n    },\n    {\n        key: 'layout',\n        help: `Chart layout.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.layout,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: lineCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'axesPlan',\n        help: `Axes plan.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesPlan,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'foreground', value: 'foreground' },\n                { label: 'background', value: 'background' },\n            ],\n        },\n    },\n    {\n        key: 'axesTicksPosition',\n        help: `Axes ticks position.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesTicksPosition,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty(['svg', 'canvas']),\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'strokeWidth',\n        help: 'Lines stroke width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.strokeWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'lineOpacity',\n        help: 'Lines opacity.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.lineOpacity,\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping: any, { exclude = [] } = {}) => (\n    settings: any,\n    options: any = {}\n) => {\n    const overrides: any = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return (d3Format(format) as unknown) as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\n\nconst commonVariablePropTypes = {\n    key: PropTypes.string.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n}\n\nexport const commonPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.shape({\n                ...commonVariablePropTypes,\n                key: PropTypes.string.isRequired,\n                type: PropTypes.oneOf(['point']).isRequired,\n                padding: PropTypes.number,\n                values: PropTypes.arrayOf(\n                    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                ),\n                tickValues: PropTypes.arrayOf(\n                    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                ),\n            }),\n            PropTypes.shape({\n                ...commonVariablePropTypes,\n                type: PropTypes.oneOf(['linear']).isRequired,\n                min: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n                max: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n                tickValues: PropTypes.oneOfType([\n                    PropTypes.number,\n                    PropTypes.arrayOf(PropTypes.number),\n                ]),\n            }),\n        ])\n    ).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    curve: lineCurvePropType.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    lineOpacity: PropTypes.number.isRequired,\n    axesPlan: PropTypes.oneOf(['foreground', 'background']).isRequired,\n    axesTicksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    colors: ordinalColorsPropType.isRequired,\n}\n\nexport const svgPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const commonDefaultProps = {\n    layout: 'horizontal',\n    curve: 'linear',\n    colors: { scheme: 'yellow_orange_red' },\n    strokeWidth: 2,\n    lineOpacity: 0.35,\n    axesPlan: 'foreground',\n    axesTicksPosition: 'after',\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useMemo } from 'react'\nimport { line } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport { curveFromProp } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\n\nexport const computeParallelCoordinatesLayout = ({ width, height, data, variables, layout }) => {\n    const variablesScale = scalePoint()\n        .range(layout === 'horizontal' ? [0, width] : [height, 0])\n        .domain(variables.map(({ key }) => key))\n\n    const range = layout === 'horizontal' ? [height, 0] : [0, width]\n    const variablesWithScale = variables.map(variable => {\n        const allValues = new Set()\n        data.forEach(d => allValues.add(d[variable.key]))\n\n        let scale\n        if (variable.type === 'linear') {\n            const min =\n                variable.min !== undefined && variable.min !== 'auto'\n                    ? variable.min\n                    : Math.min(...Array.from(allValues))\n            const max =\n                variable.max !== undefined && variable.max !== 'auto'\n                    ? variable.max\n                    : Math.max(...Array.from(allValues))\n\n            scale = scaleLinear().rangeRound(range).domain([min, max])\n        }\n\n        if (variable.type === 'point') {\n            scale = scalePoint()\n                .range(range)\n                .domain(variable.values || allValues)\n\n            if (variable.padding !== undefined) {\n                scale.padding(variable.padding)\n            }\n        }\n\n        return {\n            ...variable,\n            scale,\n            values: Array.from(allValues),\n        }\n    })\n\n    const dataWithPoints = data.map((datum, index) => {\n        const points = variablesWithScale.map(variable => ({\n            x:\n                layout === 'horizontal'\n                    ? variablesScale(variable.key)\n                    : variable.scale(datum[variable.key]),\n            y:\n                layout === 'horizontal'\n                    ? variable.scale(datum[variable.key])\n                    : variablesScale(variable.key),\n        }))\n\n        return { index, ...datum, points }\n    })\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n    }\n}\n\nexport const computeAxisDensity = (variable, data) => {\n    let kernels\n    if (variable.type === 'point') {\n        kernels = data.reduce((acc, datum) => {\n            const value = datum[variable.key]\n            let kernel = acc.find(k => k.id === value)\n            if (kernel === undefined) {\n                kernel = { id: value, count: 0 }\n                acc.push(kernel)\n            }\n            kernel.count++\n\n            return acc\n        }, [])\n        kernels = variable.scale\n            .domain()\n            .map(d => kernels.find(k => k.id === d))\n            .filter(k => k !== undefined)\n    } else if (variable.type === 'linear') {\n        kernels = variable.scale.ticks(5).map((id, index, ticks) => {\n            if (index === 0) {\n                return {\n                    id,\n                    count: variable.values.filter(v => v <= id).length,\n                }\n            }\n\n            return {\n                id,\n                count: variable.values.filter(v => v > ticks[index - 1] && v <= id).length,\n            }\n        })\n    }\n\n    if (kernels !== undefined) {\n        const scale = scaleLinear()\n            .rangeRound([0, 60])\n            .domain([0, Math.max(...kernels.map(k => k.count))])\n\n        return kernels.map(k => ({\n            id: k.id,\n            position: variable.scale(k.id),\n            size: scale(k.count),\n        }))\n    }\n\n    return []\n}\n\nexport const useParallelCoordinates = ({\n    width,\n    height,\n    data,\n    variables,\n    layout,\n    colors,\n    curve,\n}) => {\n    const getLineColor = useOrdinalColorScale(colors, 'index')\n\n    const lineGenerator = useMemo(\n        () =>\n            line()\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n\n    const { variablesScale, variablesWithScale, dataWithPoints } = useMemo(\n        () =>\n            computeParallelCoordinatesLayout({\n                width,\n                height,\n                data,\n                variables,\n                layout,\n            }),\n        [width, height, data, variables, layout]\n    )\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        getLineColor,\n        lineGenerator,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TableTooltip } from '@nivo/tooltip'\n\nconst ParallelCoordinatesLineTooltip = ({ data, variables }) => {\n    return (\n        <TableTooltip\n            rows={variables.map(variable => [\n                variable.key,\n                <strong>{data[variable.key]}</strong>, // eslint-disable-line react/jsx-key\n            ])}\n        />\n    )\n}\n\nParallelCoordinatesLineTooltip.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(ParallelCoordinatesLineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport ParallelCoordinatesLineTooltip from './ParallelCoordinatesLineTooltip'\n\nconst ParallelCoordinatesLine = ({\n    data,\n    variables,\n    lineGenerator,\n    points,\n    strokeWidth,\n    color,\n    opacity,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(\n                <ParallelCoordinatesLineTooltip data={data} variables={variables} />,\n                event\n            )\n        },\n        [data, variables]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(lineGenerator(points))\n    const animatedProps = useSpring({\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            stroke={animatedProps.color}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            opacity={animatedProps.opacity}\n            fill=\"none\"\n            onMouseEnter={handleMouseHover}\n            onMouseMove={handleMouseHover}\n            onMouseLeave={hideTooltip}\n        />\n    )\n}\n\nParallelCoordinatesLine.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n}\n\nexport default memo(ParallelCoordinatesLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { SvgWrapper, useDimensions, withContainer } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { svgPropTypes, svgDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\nimport ParallelCoordinatesLine from './ParallelCoordinatesLine'\n\nconst ParallelCoordinates = ({\n    data,\n    variables,\n    layout,\n    width,\n    height,\n    margin: partialMargin,\n    axesPlan,\n    axesTicksPosition,\n    strokeWidth,\n    lineOpacity,\n    curve,\n    colors,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        lineGenerator,\n        getLineColor,\n    } = useParallelCoordinates({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        variables,\n        layout,\n        colors,\n        curve,\n    })\n\n    const axes = variablesWithScale.map(variable => (\n        <Axis\n            key={variable.key}\n            axis={layout === 'horizontal' ? 'y' : 'x'}\n            length={layout === 'horizontal' ? innerHeight : innerWidth}\n            x={layout === 'horizontal' ? variablesScale(variable.key) : 0}\n            y={layout === 'horizontal' ? 0 : variablesScale(variable.key)}\n            scale={variable.scale}\n            ticksPosition={variable.ticksPosition || axesTicksPosition}\n            tickValues={variable.tickValues}\n            tickSize={variable.tickSize}\n            tickPadding={variable.tickPadding}\n            tickRotation={variable.tickRotation}\n            format={variable.tickFormat}\n            legend={variable.legend}\n            legendPosition={variable.legendPosition}\n            legendOffset={variable.legendOffset}\n        />\n    ))\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {axesPlan === 'background' && axes}\n            {dataWithPoints.map(datum => (\n                <ParallelCoordinatesLine\n                    key={datum.index}\n                    data={datum}\n                    variables={variables}\n                    lineGenerator={lineGenerator}\n                    points={datum.points}\n                    strokeWidth={strokeWidth}\n                    opacity={lineOpacity}\n                    color={getLineColor(datum)}\n                />\n            ))}\n            {axesPlan === 'foreground' && axes}\n        </SvgWrapper>\n    )\n}\n\nParallelCoordinates.propTypes = svgPropTypes\n\nconst WrappedParallelCoordinates = withContainer(ParallelCoordinates)\nWrappedParallelCoordinates.defaultProps = svgDefaultProps\n\nexport default WrappedParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinates from './ParallelCoordinates'\n\nconst ResponsiveParallelCoordinates = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ParallelCoordinates width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDimensions, useTheme, withContainer } from '@nivo/core'\nimport { renderAxisToCanvas } from '@nivo/axes'\nimport { commonPropTypes, commonDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\n\nconst ParallelCoordinatesCanvas = ({\n    data,\n    layout,\n    variables,\n    width,\n    height,\n    margin: partialMargin,\n    curve,\n    colors,\n    lineOpacity,\n    strokeWidth,\n    axesTicksPosition,\n    pixelRatio,\n}) => {\n    const canvasEl = useRef(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        lineGenerator,\n        getLineColor,\n    } = useParallelCoordinates({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        variables,\n        layout,\n        colors,\n        curve,\n    })\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        lineGenerator.context(ctx)\n        dataWithPoints.forEach(datum => {\n            ctx.save()\n            ctx.globalAlpha = lineOpacity\n\n            ctx.beginPath()\n            lineGenerator(datum.points)\n            ctx.strokeStyle = getLineColor(datum)\n            ctx.lineWidth = strokeWidth\n            ctx.stroke()\n\n            ctx.restore()\n        })\n\n        variablesWithScale.map(variable => {\n            renderAxisToCanvas(ctx, {\n                axis: layout === 'horizontal' ? 'y' : 'x',\n                scale: variable.scale,\n                x: layout === 'horizontal' ? variablesScale(variable.key) : 0,\n                y: layout === 'horizontal' ? 0 : variablesScale(variable.key),\n                length: layout === 'horizontal' ? innerHeight : innerWidth,\n                ticksPosition: axesTicksPosition,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        lineGenerator,\n        getLineColor,\n        lineOpacity,\n        strokeWidth,\n        dataWithPoints,\n        variablesWithScale,\n        layout,\n        axesTicksPosition,\n        theme,\n        pixelRatio,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        />\n    )\n}\n\nParallelCoordinatesCanvas.propTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nconst WrappedParallelCoordinatesCanvas = withContainer(ParallelCoordinatesCanvas)\nWrappedParallelCoordinatesCanvas.defaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nexport default WrappedParallelCoordinatesCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinatesCanvas from './ParallelCoordinatesCanvas'\n\nconst ResponsiveParallelCoordinatesCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => (\n            <ParallelCoordinatesCanvas width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinatesCanvas\n","import { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({})\n","export default [\n    {\n        key: 'temp',\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'temperature',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'cost',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'cost',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'color',\n        type: 'point',\n        padding: 1,\n        values: ['red', 'yellow', 'green'],\n        legend: 'color',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'target',\n        type: 'point',\n        padding: 0,\n        values: ['A', 'B', 'C', 'D', 'E'],\n        legend: 'target',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'volume',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        legend: 'volume',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n]\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n"],"names":["props","key","group","help","type","required","description","controlType","controlOptions","shouldCreate","shouldRemove","getItemTitle","index","values","disabled","when","disabledValue","defaultValue","min","max","defaults","choices","label","value","lineCurvePropKeys","enableControlForFlavors","unit","step","flavors","themeProperty","motionProperties","groups","groupProperties","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","getOwnPropertyDescriptors","defineProperties","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","d","x","y","ticks","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","isArray","Array","x1","x2","y1","y2","AxisTick","_value","onClick","textAnchor","animatedProps","theme","useTheme","useMemo","style","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","tick","initial","textTransform","from","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","lines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","ctx","Number","degreesToRadians","String","renderAxesToCanvas","renderGridLinesToCanvas","commonVariablePropTypes","commonPropTypes","data","variables","padding","layout","curve","lineCurvePropType","strokeWidth","lineOpacity","axesPlan","axesTicksPosition","colors","ordinalColorsPropType","commonDefaultProps","role","scheme","motionConfig","svgDefaultProps","_arrayLikeToArray","arr","len","arr2","_toConsumableArray","arrayLikeToArray","arrayWithoutHoles","iter","Symbol","iterator","iterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","test","unsupportedIterableToArray","TypeError","nonIterableSpread","useParallelCoordinates","getLineColor","useOrdinalColorScale","lineGenerator","curveFromProp","variablesScale","range","variablesWithScale","variable","allValues","Math","scaleLinear","scalePoint","dataWithPoints","points","datum","computeParallelCoordinatesLayout","ParallelCoordinatesLineTooltip","rows","ParallelCoordinatesLine","color","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","animatedPath","useAnimatedPath","stroke","strokeLinecap","fill","onMouseEnter","onMouseMove","onMouseLeave","WrappedParallelCoordinates","withContainer","partialMargin","margin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","ResponsiveParallelCoordinates","WrappedParallelCoordinatesCanvas","pixelRatio","canvasEl","useRef","useEffect","ref","window","ResponsiveParallelCoordinatesCanvas","module","exports","array","iteratee","copyObject","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","stack","result","isDeep","isFlat","isFull","isArr","tag","isFunc","stacked","get","set","subValue","add","isObjectLike","castPath","last","parent","toKey","path","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","symbolProto","symbolValueOf","valueOf","symbol","getSymbols","getSymbolsIn","isPlainObject","baseGetAllKeys","arrayPush","getPrototype","stubArray","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","baseGet","baseSlice","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet","arrayMap","baseUnset","customOmitClone","flatRest","paths","CLONE_DEEP_FLAG"],"sourceRoot":""}