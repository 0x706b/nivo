(self.webpackChunknivo_website=self.webpackChunknivo_website||[]).push([[5482],{41807:function(e,o,n){"use strict";var t=n(62370);o.Z=(0,t.h8)({valueFormat:t.Ld})},71448:function(e,o,n){"use strict";n.d(o,{X:function(){return l}});var t=n(79201),r=n(36177),i=n(80169),a=[{key:"data",group:"Base",type:"{ nodes: object[], links: object[] }",required:!0,help:"Chart data defining nodes and links.",flavors:["svg","api"],description:"\n            Chart data, which must conform to this structure:\n\n            ```\n            {\n                nodes: {\n                    id: string\n                }[],\n                links: {\n                    source: string, // ref to node id\n                    target: string, // ref to node id\n                    value:  number\n                }[]\n            }\n            ```\n        "},{key:"valueFormat",group:"Base",type:"string | (value: number) => string",required:!1,help:"Optional formatter for values.",description:"\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        ",flavors:["svg","api"],controlType:"valueFormat"},{key:"layout",group:"Base",type:"string",required:!1,help:"Control sankey layout direction.",defaultValue:r.XB.layout,flavors:["svg","api"],controlType:"radio",controlOptions:{choices:[{label:"horizontal",value:"horizontal"},{label:"vertical",value:"vertical"}]}},{key:"align",group:"Base",type:"string",required:!1,help:"Node alignment method.",description:"\n            Defines node alignment method.\n            Please have a look at the\n            [official d3 documentation](https://github.com/d3/d3-sankey#sankey_nodeAlign)\n            for further information.\n        ",defaultValue:r.XB.align,flavors:["svg","api"],controlType:"choices",controlOptions:{choices:r.ut.map((function(e){return{label:e,value:e}}))}},{key:"sort",group:"Base",type:"string | Function",required:!1,help:"Node sorting method.",description:"\n            Defines node sorting method. Must be one of:\n\n            - **'auto'** order of nodes within each\n              column is determined automatically by the layout.\n            - **'input'** order is fixed by the input.\n            - **'ascending'** node with lower values on top.\n            - **'descending'** node with higher values on top.\n            - `(nodeA, nodeB) => number` user defined function.\n\n            Please have a look at the\n            [official d3 documentation](https://github.com/d3/d3-sankey#sankey_nodeSort)\n            for further information.\n        ",defaultValue:r.XB.sort,flavors:["svg","api"],controlType:"choices",controlOptions:{choices:["auto","input","ascending","descending"].map((function(e){return{label:e,value:e}}))}},{key:"width",group:"Base",type:"number",required:!0,help:"Chart width.",description:"\n            not required if using\n            `<ResponsiveSankey/>`.\n        ",flavors:["svg","api"],enableControlForFlavors:["api"],controlType:"range",controlOptions:{unit:"px",min:100,max:1200,step:5}},{key:"height",group:"Base",type:"number",required:!0,help:"Chart height.",description:"\n            not required if using\n            `<ResponsiveSankey/>`.\n        ",flavors:["svg","api"],enableControlForFlavors:["api"],controlType:"range",controlOptions:{unit:"px",min:100,max:1200,step:5}},{key:"margin",help:"Chart margin.",type:"object",required:!1,group:"Base",flavors:["svg","api"],controlType:"margin"},(0,i.JR)(["svg","api"]),{key:"colors",group:"Style",type:"string | Function | string[]",required:!1,help:"Defines how to compute nodes color.",defaultValue:r.XB.colors,flavors:["svg","api"],controlType:"ordinalColors"},{key:"nodeThickness",group:"Nodes",type:"number",required:!1,help:"Node thickness.",defaultValue:r.XB.nodeThickness,flavors:["svg","api"],controlType:"range",controlOptions:{unit:"px",min:2,max:100}},{key:"nodeOpacity",group:"Nodes",help:"Node opacity (0~1).",required:!1,defaultValue:r.XB.nodeOpacity,type:"number",flavors:["svg","api"],controlType:"opacity"},{key:"nodeHoverOpacity",group:"Nodes",flavors:["svg"],help:"Node opacity on hover (0~1).",required:!1,defaultValue:r.XB.nodeHoverOpacity,type:"number",controlType:"opacity"},{key:"nodeHoverOthersOpacity",flavors:["svg"],help:"Other nodes opacity on hover (0~1).",required:!1,defaultValue:r.XB.nodeHoverOthersOpacity,type:"number",controlType:"opacity",group:"Nodes"},{key:"nodeSpacing",group:"Nodes",help:"Spacing between nodes at an identical level.",required:!1,defaultValue:r.XB.nodeSpacing,type:"number",flavors:["svg","api"],controlType:"range",controlOptions:{unit:"px",min:0,max:60}},{key:"nodeInnerPadding",group:"Nodes",help:"Node inner padding, distance from link, substracted from nodeThickness.",required:!1,defaultValue:r.XB.nodeInnerPadding,type:"number",flavors:["svg","api"],controlType:"range",controlOptions:{unit:"px",min:0,max:20}},{key:"nodeBorderWidth",group:"Nodes",help:"Node border width.",required:!1,defaultValue:r.XB.nodeBorderWidth,type:"number",flavors:["svg","api"],controlType:"lineWidth"},{key:"nodeBorderColor",group:"Nodes",description:"\n            how to compute node border color,\n            [see dedicated documentation](self:/guides/colors).\n        ",help:"Method to compute node border color.",type:"string | object | Function",required:!1,defaultValue:r.XB.nodeBorderColor,flavors:["svg","api"],controlType:"inheritedColor"},{key:"nodeBorderRadius",group:"Nodes",help:"Node border radius.",type:"number",required:!1,defaultValue:r.XB.nodeBorderRadius,flavors:["svg","api"],controlType:"range",controlOptions:{unit:"px",min:0,max:12}},{key:"linkOpacity",group:"Links",help:"Link opacity (0~1).",required:!1,defaultValue:r.XB.linkOpacity,type:"number",flavors:["svg","api"],controlType:"opacity"},{key:"linkHoverOpacity",group:"Links",flavors:["svg"],help:"Link opacity on hover(0~1).",required:!1,defaultValue:r.XB.linkHoverOpacity,type:"number",controlType:"opacity"},{key:"linkHoverOthersOpacity",group:"Links",flavors:["svg"],help:"Other links opacity on hover (0~1).",required:!1,defaultValue:r.XB.linkHoverOthersOpacity,type:"number",controlType:"opacity"},{key:"linkContract",group:"Links",help:"Contract link width.",required:!1,defaultValue:r.XB.linkContract,type:"number",flavors:["svg","api"],controlType:"range",controlOptions:{unit:"px",min:0,max:60}},{key:"linkBlendMode",flavors:["svg"],help:"Defines CSS [mix-blend-mode](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode) property for links.",type:"string",required:!1,defaultValue:r.XB.linkBlendMode,controlType:"blendMode",group:"Links"},{key:"enableLinkGradient",group:"Links",help:"Enable/disable gradient from source/target nodes instead of plain color.",type:"boolean",required:!1,defaultValue:r.XB.enableLinkGradient,flavors:["svg","api"],controlType:"switch"},{key:"enableLabels",group:"Labels",help:"Enable/disable labels.",type:"boolean",required:!1,defaultValue:r.XB.enableLabels,flavors:["svg","api"],controlType:"switch"},{key:"labelPosition",group:"Labels",help:"Label position.",type:"string",required:!1,defaultValue:r.XB.labelPosition,flavors:["svg","api"],controlType:"radio",controlOptions:{choices:["inside","outside"].map((function(e){return{label:e,value:e}}))}},{key:"labelPadding",group:"Labels",help:"Label padding from node.",required:!1,defaultValue:r.XB.labelPadding,type:"number",flavors:["svg","api"],controlType:"range",controlOptions:{unit:"px",min:0,max:60}},{key:"labelTextColor",group:"Labels",help:"Method to compute label text color.",description:"\n            how to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        ",type:"string | object | Function",required:!1,defaultValue:r.XB.labelTextColor,flavors:["svg","api"],controlType:"inheritedColor"},{key:"labelOrientation",group:"Labels",help:"Label orientation.",type:"string",required:!1,defaultValue:r.XB.labelOrientation,flavors:["svg","api"],controlType:"radio",controlOptions:{choices:["horizontal","vertical"].map((function(e){return{label:e,value:e}}))}},{key:"isInteractive",flavors:["svg"],group:"Interactivity",help:"Enable/disable interactivity.",type:"boolean",required:!1,defaultValue:r.XB.isInteractive,controlType:"switch"},{key:"nodeTooltip",flavors:["svg"],help:"Tooltip custom component for nodes.",type:"FunctionComponent<{ node: SankeyNodeDatum }>",required:!1,group:"Interactivity",description:"\n            Allows complete node tooltip customisation, it must return\n            a valid HTML element and will receive the node as a property.\n                        \n            You can also customize the style of the tooltip\n            using the `theme.tooltip` object.\n        "},{key:"linkTooltip",flavors:["svg"],help:"Tooltip custom component for links.",type:"FunctionComponent<{ link: SankeyLinkDatum }>",required:!1,group:"Interactivity",description:"\n            Allows complete link tooltip customisation, it must return\n            a valid HTML element and will receive the link as a property.\n                        \n            You can also customize the style of the tooltip\n            using the `theme.tooltip` object.\n        "},{key:"onClick",flavors:["svg"],group:"Interactivity",help:"onClick handler, it receives target node or link data and mouse event.",type:"(target: SankeyNodeDatum | SankeyLinkDatum, event) => void",required:!1}].concat((0,t.Z)((0,i.$j)(["svg"],r.XB,"react-spring"))),l=(0,i.R2)(a)},62370:function(e,o,n){"use strict";n.d(o,{h8:function(){return l},h6:function(){return s},Ld:function(){return d}});var t=n(48159),r=n.n(t),i=n(76744),a=n.n(i),l=function(e,o){var n=(void 0===o?{}:o).exclude,t=void 0===n?[]:n;return function(o,n){void 0===n&&(n={});var i={};return Object.keys(o).forEach((function(t){e[t]&&(i[t]=e[t](o[t],o,n))})),Object.assign({},r()(o,t),i)}},s=function(e){return function(o,n){return n["axis"+a()(e)].enable?r()(o,["enable"]):null}},d=function(e){var o=e.format;return e.enabled?o:void 0}},9800:function(e,o,n){"use strict";n.r(o);var t=n(27378),r=n(48159),i=n.n(r),a=n(38681),l=n(36177),s=n(69857),d=n(79951),u=n(41807),p=n(71448),c={margin:{top:40,right:160,bottom:40,left:50},valueFormat:{format:"",enabled:!1},layout:"horizontal",align:"justify",sort:"auto",colors:{scheme:"category10"},nodeOpacity:1,nodeHoverOpacity:1,nodeHoverOthersOpacity:.35,nodeThickness:18,nodeInnerPadding:0,nodeSpacing:24,nodeBorderWidth:0,nodeBorderColor:{from:"color",modifiers:[["darker",.8]]},nodeBorderRadius:3,linkOpacity:.5,linkHoverOpacity:.6,linkHoverOthersOpacity:.1,linkContract:3,linkBlendMode:"multiply",enableLinkGradient:!0,enableLabels:!0,labelPosition:"outside",labelOrientation:"vertical",labelPadding:16,labelTextColor:{from:"color",modifiers:[["darker",1]]},animate:l.XB.animate,motionConfig:l.XB.motionConfig,isInteractive:l.XB.isInteractive,legends:[{anchor:"bottom-right",direction:"column",translateX:130,itemWidth:100,itemHeight:14,itemDirection:"right-to-left",itemsSpacing:2,itemTextColor:"#999",symbolSize:14,onClick:function(e){alert(JSON.stringify(e,null,"    "))},effects:[{on:"hover",style:{itemTextColor:"#000"}}]}]},y=function(){return(0,a.O$)({nodeCount:6,maxIterations:8})};o.default=function(){return t.createElement(s.T,{name:"Sankey",meta:d.b,icon:"sankey",flavors:d.K,currentFlavor:"svg",properties:p.X,initialProperties:c,defaultProperties:l.XB,propertiesMapper:u.Z,generateData:y},(function(e,o,n,r){return t.createElement(l.h7,Object.assign({data:o},e,{theme:n,onClick:function(e){var o;o="id"in e?"[node] "+e.id+": "+e.value:"[link] "+e.source.id+" > "+e.target.id+": "+e.value,r({type:"click",label:o,data:i()(e,["sourceLinks","targetLinks","source.sourceLinks","source.targetLinks","target.sourceLinks","target.targetLinks"])})}}))}))}},30454:function(e,o,n){var t=n(40699);e.exports=function(e){return t(e,5)}}}]);
//# sourceMappingURL=component---src-pages-sankey-index-tsx-d51467f211e970cc6ca5.js.map