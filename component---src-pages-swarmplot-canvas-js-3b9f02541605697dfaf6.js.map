{"version":3,"sources":["webpack:///./src/pages/swarmplot/canvas.js","webpack:///./src/data/components/scatterplot/mapper.js"],"names":["initialProperties","Object","freeze","pixelRatio","window","devicePixelRatio","groupBy","identity","value","valueFormat","valueScale","type","min","max","reverse","size","key","values","sizes","spacing","layout","SwarmPlotCanvasDefaultProps","gap","forceStrength","simulationIterations","colors","scheme","colorBy","borderWidth","borderColor","from","modifiers","margin","top","right","bottom","left","enableGridX","enableGridY","axisTop","enable","orient","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisRight","axisBottom","axisLeft","isInteractive","useMesh","debugMesh","ScatterPlotCanvas","name","meta","SwarmPlotCanvas","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","codePropertiesMapper","data","generateData","generateHeavyDataSet","getTabData","getDataSize","length","theme","logAction","onClick","node","label","id","group","color","settingsMapper","mapAxis","exclude"],"mappings":"6FAAA,iHAgBMA,EAAoBC,OAAOC,OAAO,CACpCC,WACsB,oBAAXC,QAA0BA,OAAOC,iBAAmBD,OAAOC,iBAAmB,EACzFC,QAAS,QACTC,SAAU,KACVC,MAAO,QACPC,YAAa,OACbC,WAAY,CACRC,KAAM,SACNC,IAAK,EACLC,IAAK,IACLC,SAAS,GAEbC,KAAM,CACFC,IAAK,SACLC,OAAQ,CAAC,EAAG,IACZC,MAAO,CAAC,EAAG,KAEfC,QAAS,EACTC,OAAQC,IAA4BD,OACpCE,IAAKD,IAA4BC,IAEjCC,cAAe,EACfC,qBAAsB,GAEtBC,OAAQ,CAAEC,OAAQ,UAClBC,QAAS,QACTC,YAAa,EACbC,YAAa,CACTC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAE3BC,OAAQ,CACJC,IAAK,GACLC,MAAO,IACPC,OAAQ,GACRC,KAAM,KAEVC,aAAa,EACbC,aAAa,EACbC,QAAS,CACLC,QAAQ,EACRC,OAAQ,MACRC,SAAU,GACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,yCACRC,eAAgB,SAChBC,cAAe,IAEnBC,UAAW,CACPR,QAAQ,EACRC,OAAQ,QACRC,SAAU,GACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,yCACRC,eAAgB,SAChBC,aAAc,IAElBE,WAAY,CACRT,QAAQ,EACRC,OAAQ,SACRC,SAAU,GACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,yCACRC,eAAgB,SAChBC,aAAc,IAElBG,SAAU,CACNV,QAAQ,EACRC,OAAQ,OACRC,SAAU,GACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,yCACRC,eAAgB,SAChBC,cAAe,IAGnBI,eAAe,EACfC,SAAS,EACTC,WAAW,IA6CAC,UA1CW,WACtB,OACI,kBAAC,IAAD,CACIC,KAAK,kBACLC,KAAMA,IAAKC,gBACXC,KAAK,YACLC,QAASH,IAAKG,QACdC,cAAc,SACdC,WAAYC,IACZ9D,kBAAmBA,EACnB+D,kBAAmB1C,IACnB2C,iBAAkBC,IAClBC,qBAAsB,SAACL,EAAYM,GAAb,sBAClBL,OAAQK,EAAKL,QACVD,IAEPO,aAAcC,IACdC,WAAY,SAAAH,GAAI,OAAIA,EAAKA,MACzBI,YAAa,SAAAJ,GAAI,OAAIA,EAAKA,KAAKK,UAE9B,SAACX,EAAYM,EAAMM,EAAOC,GACvB,OACI,kBAAC,IAAD,eACIP,KAAMA,EAAKA,KACXL,OAAQK,EAAKL,QACTD,EAHR,CAIIY,MAAOA,EACPE,QAAS,SAAAC,GACLF,EAAU,CACN/D,KAAM,QACNkE,MAAM,cAAeD,EAAKE,GAArB,YAAmCF,EAAKG,MAAxC,YAAyDH,EAAKpE,MACnEwE,MAAOJ,EAAKI,MACZb,KAAMS,a,kCCtItC,0BAYeK,gBACX,CACI1C,QAAS2C,YAAQ,OACjBlC,UAAWkC,YAAQ,SACnBjC,WAAYiC,YAAQ,UACpBhC,SAAUgC,YAAQ,SAEtB,CACIC,QAAS,CAAC,iBAAkB,mBAAoB,oBAAqB","file":"component---src-pages-swarmplot-canvas-js-3b9f02541605697dfaf6.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveSwarmPlotCanvas, SwarmPlotCanvasDefaultProps } from '@nivo/swarmplot'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/swarmplot/meta.yml'\nimport mapper from '../../data/components/scatterplot/mapper'\nimport { groups } from '../../data/components/swarmplot/props'\nimport { generateHeavyDataSet } from '../../data/components/swarmplot/generator'\n\nconst initialProperties = Object.freeze({\n    pixelRatio:\n        typeof window !== 'undefined' && window.devicePixelRatio ? window.devicePixelRatio : 1,\n    groupBy: 'group',\n    identity: 'id',\n    value: 'price',\n    valueFormat: '$.2f',\n    valueScale: {\n        type: 'linear',\n        min: 0,\n        max: 500,\n        reverse: false,\n    },\n    size: {\n        key: 'volume',\n        values: [4, 20],\n        sizes: [4, 12],\n    },\n    spacing: 1,\n    layout: SwarmPlotCanvasDefaultProps.layout,\n    gap: SwarmPlotCanvasDefaultProps.gap,\n\n    forceStrength: 1,\n    simulationIterations: 60,\n\n    colors: { scheme: 'paired' },\n    colorBy: 'group',\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.6]],\n    },\n    margin: {\n        top: 80,\n        right: 100,\n        bottom: 80,\n        left: 100,\n    },\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {\n        enable: true,\n        orient: 'top',\n        tickSize: 10,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'group if vertical, price if horizontal',\n        legendPosition: 'middle',\n        legendOffset: -46,\n    },\n    axisRight: {\n        enable: true,\n        orient: 'right',\n        tickSize: 10,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'price if vertical, group if horizontal',\n        legendPosition: 'middle',\n        legendOffset: 76,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 10,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'group if vertical, price if horizontal',\n        legendPosition: 'middle',\n        legendOffset: 46,\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 10,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'price if vertical, group if horizontal',\n        legendPosition: 'middle',\n        legendOffset: -76,\n    },\n\n    isInteractive: true,\n    useMesh: true,\n    debugMesh: false,\n})\n\nconst ScatterPlotCanvas = () => {\n    return (\n        <ComponentTemplate\n            name=\"SwarmPlotCanvas\"\n            meta={meta.SwarmPlotCanvas}\n            icon=\"swarmplot\"\n            flavors={meta.flavors}\n            currentFlavor=\"canvas\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={SwarmPlotCanvasDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={(properties, data) => ({\n                groups: data.groups,\n                ...properties,\n            })}\n            generateData={generateHeavyDataSet}\n            getTabData={data => data.data}\n            getDataSize={data => data.data.length}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveSwarmPlotCanvas\n                        data={data.data}\n                        groups={data.groups}\n                        {...properties}\n                        theme={theme}\n                        onClick={node => {\n                            logAction({\n                                type: 'click',\n                                label: `[node] id: ${node.id}, group: ${node.group}, value: ${node.value}`,\n                                color: node.color,\n                                data: node,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default ScatterPlotCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper, mapAxis } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n"],"sourceRoot":""}