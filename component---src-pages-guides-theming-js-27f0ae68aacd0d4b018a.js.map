{"version":3,"sources":["webpack:///./src/components/components/ComponentHeader.js","webpack:///./src/components/components/ComponentSettings.js","webpack:///./src/components/components/ComponentPage.js","webpack:///./src/pages/guides/theming.js"],"names":["Container","styled","div","media","desktopLarge","desktop","tablet","mobile","Title","h1","Tags","Tag","span","theme","colors","background","accent","ComponentHeader","memo","chartClass","tags","map","tag","key","defaultProps","cardBackground","text","Group","gradientColor0","gradientColor1","ComponentSettings","component","flavors","currentFlavor","settings","onChange","groups","group","name","controls","properties","ComponentPage","dimensions","headerHeight","topCardShadow","miniNavWidth","initialTheme","textColor","defaultTheme","fontSize","axis","domain","line","stroke","strokeWidth","ticks","grid","controlGroups","help","controlType","controlOptions","unit","min","max","isOpenedByDefault","props","Theming","useState","setTheme","mode","setMode","title","Description","source","Charts","Nav","NavItem","isCurrent","onClick","margin","top","right","bottom","left","data","id","value","animate","axisBottom","legend","legendPosition","legendOffset","axisLeft","x","y","enableDots","enableDotLabel","Code","JSON","stringify","nav","border","pre","highlight","plain","backgroundColor","color"],"mappings":"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","file":"component---src-pages-guides-theming-js-27f0ae68aacd0d4b018a.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * (c) 2016 RaphaÃ«l Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport media from '../../theming/mediaQueries'\n\nconst Container = styled.div`\n    flex-direction: column;\n    color: #fff;\n    margin-bottom: 10px;\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-end;\n    position: relative;\n    height: 130px;\n    padding: 0 30px;\n\n    ${media.desktopLarge`\n        & {\n            padding: 0 40px;\n        }\n    `}\n\n    ${media.desktop`\n        & {\n            padding: 0 30px;\n        }\n    `}\n\n    ${media.tablet`\n        & {\n            padding: 0 20px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            padding: 0 20px;\n        }\n    `}\n`\n\nconst Title = styled.h1`\n    margin: 0 0 10px;\n    padding: 0;\n`\n\nconst Tags = styled.div``\n\nconst Tag = styled.span`\n    display: inline-block;\n    background: ${({ theme }) => theme.colors.background};\n    color: ${({ theme }) => theme.colors.accent};\n    font-size: 0.8rem;\n    font-weight: 500;\n    padding: 3px 11px;\n    border-radius: 2px;\n    margin-right: 7px;\n    margin-bottom: 7px;\n`\n\nconst ComponentHeader = memo(({ chartClass, tags }) => {\n    return (\n        <Container>\n            <Title>{chartClass}</Title>\n            <Tags>\n                {tags.map(tag => (\n                    <Tag key={tag}>{tag}</Tag>\n                ))}\n            </Tags>\n        </Container>\n    )\n})\n\nComponentHeader.propTypes = {\n    chartClass: PropTypes.string.isRequired,\n    tags: PropTypes.array.isRequired,\n}\n\nComponentHeader.defaultProps = {\n    tags: [],\n}\n\nexport default ComponentHeader\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 RaphaÃ«l Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport ControlsGroup from '../controls/ControlsGroup'\nimport media from '../../theming/mediaQueries'\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    color: ${({ theme }) => theme.colors.text};\n`\n\nconst Group = styled.div`\n    &:first-child {\n        border-top-width: 0;\n    }\n`\n\nconst Title = styled.div`\n    padding: 16px 30px;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 13px;\n    line-height: 1em;\n    color: white;\n    background: ${({ theme }) => theme.colors.accent};\n    background-image: linear-gradient(\n        -90deg,\n        ${({ theme }) => theme.colors.gradientColor0},\n        ${({ theme }) => theme.colors.gradientColor1}\n    );\n    background-size: 200% 100%;\n    background-repeat: no-repeat;\n    background-position: top left;\n\n    ${media.tablet`\n        & {\n            padding: 16px 20px 16px 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            padding: 16px 20px 16px 30px;\n        }\n    `}\n`\n\nconst ComponentSettings = ({ component, flavors, currentFlavor, settings, onChange, groups }) => {\n    return (\n        <Container>\n            {groups.map(group => {\n                return (\n                    <Group key={group.name}>\n                        <Title>{group.name}</Title>\n                        <ControlsGroup\n                            component={component}\n                            name={group.name}\n                            flavors={flavors}\n                            currentFlavor={currentFlavor}\n                            controls={group.properties}\n                            settings={settings}\n                            onChange={onChange}\n                        />\n                    </Group>\n                )\n            })}\n        </Container>\n    )\n}\n\nComponentSettings.propTypes = {\n    component: PropTypes.string.isRequired,\n    flavors: PropTypes.arrayOf(PropTypes.oneOf(['svg', 'html', 'canvas', 'api'])).isRequired,\n    currentFlavor: PropTypes.oneOf(['svg', 'html', 'canvas', 'api']).isRequired,\n    settings: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    groups: PropTypes.array.isRequired,\n}\n\nexport default ComponentSettings\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 RaphaÃ«l Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport styled from 'styled-components'\nimport media from '../../theming/mediaQueries'\n\nconst ComponentPage = styled.div`\n    margin-right: 55%;\n\n    &:after {\n        content: ' ';\n        position: fixed;\n        top: ${({ theme }) => theme.dimensions.headerHeight}px;\n        box-shadow: ${({ theme }) => theme.topCardShadow};\n        right: 0;\n        bottom: 0;\n        --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n        width: calc(var(--innerWidth) * 0.55);\n        background: rgba(0, 0, 0, 0);\n    }\n\n    ${media.tablet`\n        & {\n            margin-right: 55%;\n            &:after {\n                width: 55%;\n            }\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0;\n            &:after {\n                display: none;\n            }\n        }\n    `}\n`\n\nexport default ComponentPage\n","/*\n * This file is part of the nivo project.\n *\n * (c) 2016 RaphaÃ«l Benitte\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { defaultTheme } from '@nivo/core'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsiveLine } from '@nivo/line'\nimport Layout from '../../components/Layout'\nimport SEO from '../../components/seo'\nimport ComponentPage from '../../components/components/ComponentPage'\nimport ComponentHeader from '../../components/components/ComponentHeader'\nimport Markdown from '../../components/Markdown'\nimport ComponentSettings from '../../components/components/ComponentSettings'\nimport media from '../../theming/mediaQueries'\n\nconst initialTheme = {\n    background: '#ffffff', // defaultTheme.background,\n    textColor: defaultTheme.textColor,\n    fontSize: defaultTheme.fontSize,\n    axis: {\n        domain: {\n            line: {\n                stroke: '#777777', // defaultTheme.axis.domain.line.stroke,\n                strokeWidth: defaultTheme.axis.domain.line.strokeWidth,\n            },\n        },\n        ticks: {\n            line: {\n                stroke: defaultTheme.axis.ticks.line.stroke,\n                strokeWidth: defaultTheme.axis.ticks.line.strokeWidth,\n            },\n        },\n    },\n    grid: {\n        line: {\n            stroke: defaultTheme.grid.line.stroke,\n            strokeWidth: defaultTheme.grid.line.strokeWidth,\n        },\n    },\n}\n\nconst controlGroups = [\n    {\n        name: 'Theme',\n        group: 'Theme',\n        properties: [\n            {\n                name: 'background',\n                help: 'main background color.',\n                controlType: 'colorPicker',\n            },\n            {\n                name: 'textColor',\n                help: 'main text color.',\n                controlType: 'colorPicker',\n            },\n            // fontFamily: 'sans-serif',\n            {\n                name: 'fontSize',\n                help: 'main font size.',\n                controlType: 'range',\n                controlOptions: {\n                    unit: 'px',\n                    min: 6,\n                    max: 36,\n                },\n            },\n            {\n                name: 'axis',\n                controlType: 'object',\n                controlOptions: {\n                    isOpenedByDefault: true,\n                    props: [\n                        {\n                            key: 'ticks',\n                            controlType: 'object',\n                            controlOptions: {\n                                isOpenedByDefault: true,\n                                props: [\n                                    {\n                                        key: 'line',\n                                        controlType: 'object',\n                                        controlOptions: {\n                                            isOpenedByDefault: true,\n                                            props: [\n                                                {\n                                                    key: 'strokeWidth',\n                                                    controlType: 'lineWidth',\n                                                },\n                                                {\n                                                    key: 'stroke',\n                                                    controlType: 'colorPicker',\n                                                },\n                                            ],\n                                        },\n                                    },\n                                ],\n                            },\n                        },\n                        {\n                            key: 'domain',\n                            controlType: 'object',\n                            controlOptions: {\n                                isOpenedByDefault: true,\n                                props: [\n                                    {\n                                        key: 'line',\n                                        controlType: 'object',\n                                        controlOptions: {\n                                            isOpenedByDefault: true,\n                                            props: [\n                                                {\n                                                    key: 'strokeWidth',\n                                                    controlType: 'lineWidth',\n                                                },\n                                                {\n                                                    key: 'stroke',\n                                                    controlType: 'colorPicker',\n                                                },\n                                            ],\n                                        },\n                                    },\n                                ],\n                            },\n                        },\n                    ],\n                },\n            },\n            {\n                name: 'grid',\n                controlType: 'object',\n                controlOptions: {\n                    isOpenedByDefault: true,\n                    props: [\n                        {\n                            key: 'line',\n                            controlType: 'object',\n                            controlOptions: {\n                                isOpenedByDefault: true,\n                                props: [\n                                    {\n                                        key: 'stroke',\n                                        controlType: 'colorPicker',\n                                    },\n                                    {\n                                        key: 'strokeWidth',\n                                        controlType: 'lineWidth',\n                                    },\n                                ],\n                            },\n                        },\n                    ],\n                },\n            },\n        ],\n    },\n]\n\nconst description = `\n**nivo** supports theming via the \\`theme\\` property, this property\nmust contain an object which defines various styles to be applied to your\ncharts. If you don't provide a theme, the default theme will be used. When\nyou provide a theme, you don't have to provide all properties as it will get\nmerged with the default theme.\n\nThere are a few things to notice while theming your components. Values for\nfont-size, bordersâ¦ are **unitless** as nivo supports several\nimplementations (SVG, HTML, Canvas), however you can pass extra CSS\nattributes when using a specific implementation, for example, you might add\na stroke-dasharray to the grid lines when using the SVG implementation of\nthe Bar component, however it will have no effect on BarCanvas as it doesn't\nsupport it. The theme only drives the base style of the charts, for things\nsuch as symbol colors, patterns, legends, you'll have to use the dedicated\nproperties.\n`\n\nconst Theming = () => {\n    const [theme, setTheme] = useState(initialTheme)\n    const [mode, setMode] = useState('demo')\n\n    return (\n        <Layout>\n            <ComponentPage>\n                <SEO title=\"Theming Guide\" />\n                <ComponentHeader chartClass=\"Theming\" />\n                <Description>\n                    <Markdown source={description} />\n                </Description>\n                <Charts>\n                    <Nav>\n                        <NavItem isCurrent={mode === 'demo'} onClick={() => setMode('demo')}>\n                            demo\n                        </NavItem>\n                        <NavItem isCurrent={mode === 'code'} onClick={() => setMode('code')}>\n                            theme object\n                        </NavItem>\n                    </Nav>\n                    {mode === 'demo' && (\n                        <>\n                            <div>\n                                <ResponsiveBar\n                                    margin={{\n                                        top: 40,\n                                        right: 60,\n                                        bottom: 50,\n                                        left: 60,\n                                    }}\n                                    data={[\n                                        { id: 'A', value: 12 },\n                                        { id: 'B', value: 17 },\n                                        { id: 'C', value: 9 },\n                                        { id: 'D', value: 15 },\n                                        { id: 'E', value: 23 },\n                                    ]}\n                                    theme={theme}\n                                    animate={false}\n                                    axisBottom={{\n                                        legend: 'X axis legend',\n                                        legendPosition: 'middle',\n                                        legendOffset: 40,\n                                    }}\n                                    axisLeft={{\n                                        legend: 'Y axis',\n                                        legendPosition: 'middle',\n                                        legendOffset: -40,\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <ResponsiveLine\n                                    margin={{\n                                        top: 40,\n                                        right: 60,\n                                        bottom: 50,\n                                        left: 60,\n                                    }}\n                                    data={[\n                                        {\n                                            id: 'default',\n                                            data: [\n                                                { x: 'A', y: 12 },\n                                                { x: 'B', y: 17 },\n                                                { x: 'C', y: 9 },\n                                                { x: 'D', y: 15 },\n                                                { x: 'E', y: 23 },\n                                            ],\n                                        },\n                                    ]}\n                                    enableDots={true}\n                                    enableDotLabel={true}\n                                    theme={theme}\n                                    animate={false}\n                                    axisBottom={{\n                                        legend: 'X axis legend',\n                                        legendPosition: 'middle',\n                                        legendOffset: 40,\n                                    }}\n                                    axisLeft={{\n                                        legend: 'Y axis legend',\n                                        legendPosition: 'middle',\n                                        legendOffset: -40,\n                                    }}\n                                />\n                            </div>\n                        </>\n                    )}\n                    {mode === 'code' && (\n                        <Code>\n                            {`// You can pass this object to the \\`theme\\` property\\n`}\n                            {JSON.stringify(theme, null, '    ')}\n                        </Code>\n                    )}\n                </Charts>\n                <ComponentSettings\n                    component=\"theming\"\n                    settings={theme}\n                    onChange={setTheme}\n                    groups={controlGroups}\n                    flavors={[]}\n                    currentFlavor=\"svg\"\n                />\n            </ComponentPage>\n        </Layout>\n    )\n}\n\nexport default Theming\n\nconst Description = styled.div`\n    margin: 30px 0 50px;\n\n    ${media.desktopLarge`\n        & {\n            padding: 0 40px;\n        }\n    `}\n\n    ${media.desktop`\n        & {\n            padding: 0 30px;\n        }\n    `}\n\n    ${media.tablet`\n        & {\n            padding: 0 20px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            padding: 0 20px;\n            margin-bottom: 30px;\n        }\n    `}\n\n    code {\n        display: inline-block;\n        background: ${({ theme }) => theme.colors.cardBackground};\n        border-radius: 2px;\n        font-size: 0.9em;\n        padding: 5px 7px;\n        line-height: 1em;\n    }\n`\n\nconst Nav = styled.nav`\n    height: 46px;\n    background: ${({ theme }) => theme.colors.background};\n    font-size: 15px;\n    position: relative;\n    display: flex;\n\n    ${media.mobile`\n        & {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n        }\n    `}\n`\n\nconst NavItem = styled.span`\n    cursor: pointer;\n    height: 46px;\n    display: flex;\n    padding: 0 24px;\n    justify-content: center;\n    align-items: center;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n    color: ${({ isCurrent, theme }) => (isCurrent ? theme.colors.text : '#aaa')};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Charts = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    width: 60%;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    width: calc(var(--innerWidth) * 0.55);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: var(--innerHeight);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: flex;\n    flex-direction: column;\n\n    & > div:nth-child(2),\n    & > div:nth-child(3) {\n        height: calc(var(--innerHeight) / 2);\n    }\n\n    ${media.tablet`\n        & {\n            top: ${({ theme }) => theme.dimensions.headerHeight}px;\n            right: 0;\n            width: 55%;\n            height: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 520px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Code = styled.pre`\n    height: calc(100% - 46px);\n    margin: 0;\n    background-color: ${({ theme }) => theme.highlight.plain.backgroundColor};\n    color: ${({ theme }) => theme.highlight.plain.color};\n    font-size: 0.8rem;\n    line-height: 1.7;\n    padding: 12px 20px;\n`\n"],"sourceRoot":""}