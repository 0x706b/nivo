{"version":3,"sources":["webpack:///./src/pages/treemap/canvas.js"],"names":["initialProperties","identity","TreeMapCanvasDefaultProps","value","valueFormat","format","enabled","tile","leavesOnly","innerPadding","outerPadding","margin","top","right","bottom","left","pixelRatio","window","devicePixelRatio","enableLabel","label","TreeMapDefaultProps","labelSkipSize","labelTextColor","from","modifiers","orientLabel","colors","scheme","colorBy","nodeOpacity","borderWidth","borderColor","animate","motionConfig","isInteractive","TreeMapCanvas","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","generateData","generateHeavyDataSet","data","theme","logAction","root","onClick","node","type","id","formattedValue","color"],"mappings":"+FAAA,6HAqBMA,EAAoB,CACtBC,SAAUC,IAA0BD,SACpCE,MAAOD,IAA0BC,MACjCC,YAAa,CAAEC,OAAQ,OAAQC,SAAS,GACxCC,KAAML,IAA0BK,KAChCC,YAAY,EACZC,aAAc,EACdC,aAAc,EAEdC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAGVC,WACsB,oBAAXC,QAA0BA,OAAOC,iBAAmBD,OAAOC,iBAAmB,EAEzFC,aAAa,EACbC,MAAOC,IAAoBD,MAC3BE,cAAe,GACfC,eAAgB,CACZC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,KAE3BC,YAAaxB,IAA0BwB,YAEvCC,OAAQ,CAAEC,OAAQ,YAClBC,QAAS,KACTC,YAAa5B,IAA0B4B,YACvCC,YAAa7B,IAA0B6B,YACvCC,YAAa,CACTR,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3BQ,QAASZ,IAAoBY,QAC7BC,aAAcb,IAAoBa,aAElCC,cAAed,IAAoBc,eAsCxBC,UAnCO,WAClB,OACI,kBAAC,IAAD,CACIC,KAAK,gBACLC,KAAMA,IAAKF,cACXG,KAAK,UACLC,QAASF,IAAKE,QACdC,cAAc,SACdC,WAAYC,IACZ3C,kBAAmBA,EACnB4C,kBAAmB1C,IACnB2C,iBAAkBC,IAClBC,aAAcC,MAEb,SAACN,EAAYO,EAAMC,EAAOC,GACvB,OACI,kBAAC,IAAD,eACIF,KAAMA,EAAKG,MACPV,EAFR,CAGIQ,MAAOA,EACPG,QAAS,SAAAC,GACLH,EAAU,CACNI,KAAM,QACNnC,MAAM,UAAWkC,EAAKE,GAAjB,KAAwBF,EAAKG,eAClCC,MAAOJ,EAAKI,MACZT,KAAMK","file":"component---src-pages-treemap-canvas-js-09a48020f0e702409f37.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport omit from 'lodash/omit'\nimport {\n    ResponsiveTreeMapCanvas,\n    TreeMapCanvasDefaultProps,\n    TreeMapDefaultProps,\n} from '@nivo/treemap'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/treemap/meta.yml'\nimport mapper from '../../data/components/treemap/mapper'\nimport { groups } from '../../data/components/treemap/props'\nimport { generateHeavyDataSet } from '../../data/components/treemap/generator'\n\nconst initialProperties = {\n    identity: TreeMapCanvasDefaultProps.identity,\n    value: TreeMapCanvasDefaultProps.value,\n    valueFormat: { format: '.02s', enabled: true },\n    tile: TreeMapCanvasDefaultProps.tile,\n    leavesOnly: true,\n    innerPadding: 0,\n    outerPadding: 0,\n\n    margin: {\n        top: 10,\n        right: 10,\n        bottom: 10,\n        left: 10,\n    },\n\n    pixelRatio:\n        typeof window !== 'undefined' && window.devicePixelRatio ? window.devicePixelRatio : 1,\n\n    enableLabel: true,\n    label: TreeMapDefaultProps.label,\n    labelSkipSize: 18,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 3]],\n    },\n    orientLabel: TreeMapCanvasDefaultProps.orientLabel,\n\n    colors: { scheme: 'spectral' },\n    colorBy: 'id',\n    nodeOpacity: TreeMapCanvasDefaultProps.nodeOpacity,\n    borderWidth: TreeMapCanvasDefaultProps.borderWidth,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.8]],\n    },\n\n    animate: TreeMapDefaultProps.animate,\n    motionConfig: TreeMapDefaultProps.motionConfig,\n\n    isInteractive: TreeMapDefaultProps.isInteractive,\n}\n\nconst TreeMapCanvas = () => {\n    return (\n        <ComponentTemplate\n            name=\"TreeMapCanvas\"\n            meta={meta.TreeMapCanvas}\n            icon=\"treemap\"\n            flavors={meta.flavors}\n            currentFlavor=\"canvas\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={TreeMapCanvasDefaultProps}\n            propertiesMapper={mapper}\n            generateData={generateHeavyDataSet}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveTreeMapCanvas\n                        data={data.root}\n                        {...properties}\n                        theme={theme}\n                        onClick={node => {\n                            logAction({\n                                type: 'click',\n                                label: `[node] ${node.id}: ${node.formattedValue}`,\n                                color: node.color,\n                                data: node,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default TreeMapCanvas\n"],"sourceRoot":""}