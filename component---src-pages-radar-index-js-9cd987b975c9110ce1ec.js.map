{"version":3,"sources":["webpack:///./src/data/components/radar/mapper.js","webpack:///./src/pages/radar/index.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../src/RadarShapes.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/RadarGridLabels.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../src/RadarGridLevels.js","webpack:///../src/RadarGrid.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/RadarTooltipItem.js","webpack:///../src/RadarTooltip.js","webpack:///../src/RadarDots.js","webpack:///../src/props.js","webpack:///../src/Radar.js","webpack:///../src/ResponsiveRadar.js","webpack:///./src/data/components/radar/props.js"],"names":["settingsMapper","colorBy","value","d","color","markersLabel","key","index","initialProperties","indexBy","maxValue","margin","top","right","bottom","left","curve","borderWidth","borderColor","from","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","theme","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","colors","scheme","fillOpacity","blendMode","animate","motionConfig","isInteractive","legends","anchor","direction","translateX","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","onClick","alert","JSON","stringify","effects","on","style","Radar","name","meta","icon","flavors","currentFlavor","properties","groups","propertiesMapper","mapper","codePropertiesMapper","data","keys","generateData","generateWinesTastes","getTabData","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","test","_toConsumableArray","isArray","arrayWithoutHoles","iter","Symbol","iterator","iterableToArray","unsupportedIterableToArray","TypeError","nonIterableSpread","RadarShapes","memo","item","colorByKey","radiusScale","angleStep","curveInterpolator","useTheme","getBorderColor","useInheritedColor","lineGenerator","useMemo","useMotionConfig","springConfig","animatedPath","useAnimatedPath","animatedProps","useSpring","fill","stroke","config","immediate","strokeWidth","mixBlendMode","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","RadarGridLabels","radius","angles","indices","labelComponent","label","labelOffset","labels","_angle","angle","position","positionFromAngle","textAnchor","radiansToDegrees","id","useSprings","transform","dominantBaseline","React","renderLabel","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","RadarGridLevelCircular","r","Math","RadarGridLevelLinear","dataLength","radarLineGenerator","points","RadarGridLevels","shape","props","RadarGrid","levels","radii","x1","y1","x2","y2","y","_slicedToArray","arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","iterableToArrayLimit","nonIterableRest","RadarTooltipItem","datum","startAngle","endAngle","arcGenerator","tooltipFormat","useState","isHover","setIsHover","useTooltip","showTooltipFromEvent","hideTooltip","tooltipFormatter","useValueFormatter","tooltip","rows","a","b","title","showItemTooltip","useCallback","event","hideItemTooltip","path","tipX","tipY","line","onMouseEnter","onMouseMove","onMouseLeave","RadarTooltip","getIndex","arc","d3Arc","rootStartAngle","RadarDots","symbol","size","enableLabel","labelFormat","labelYOffset","fillColor","getInheritedColorGenerator","strokeColor","getLabel","getLabelGenerator","pointData","acc","point","x","PropTypes","closedCurvePropType","inheritedColorPropType","gridLabel","dotSymbol","dotLabelFormat","ordinalColorsPropType","blendModePropType","role","isRequired","RadarDefaultProps","motionDamping","motionStiffness","partialMargin","width","height","getAccessorFor","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","getColor","useOrdinalColorScale","mapping","computedMaxValue","scaleLinear","centerX","centerY","legendData","useCurveInterpolation","containerWidth","containerHeight","withContainer","ResponsiveRadar","dotsDefaults","defaultProps","group","help","description","type","required","defaultValue","defaults","controlType","controlOptions","disabledValue","min","max","choices","closedCurvePropKeys","map","enableControlForFlavors","unit","step","themeProperty","choice","dotDefaults","motionProperties","groupProperties"],"mappings":"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","file":"component---src-pages-radar-index-js-9cd987b975c9110ce1ec.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({\n    colorBy: value => {\n        if (value === 'd => d.color') return d => d.color\n        return value\n    },\n    markersLabel: value => {\n        if (value === `d => \\`\\${d.key}: \\${d.value}\\``) return d => `${d.key}: ${d.value}`\n        if (value === `d => \\`\\${d.index}: \\${d.value}\\``) return d => `${d.index}: ${d.value}`\n        return value\n    },\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { generateWinesTastes } from '@nivo/generators'\nimport { ResponsiveRadar } from '@nivo/radar'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/radar/meta.yml'\nimport mapper from '../../data/components/radar/mapper'\nimport { groups } from '../../data/components/radar/props'\n\nconst initialProperties = {\n    indexBy: 'taste',\n    maxValue: 'auto',\n\n    margin: {\n        top: 70,\n        right: 80,\n        bottom: 40,\n        left: 80,\n    },\n\n    curve: 'linearClosed',\n\n    borderWidth: 2,\n    borderColor: { from: 'color' },\n\n    gridLevels: 5,\n    gridShape: 'circular',\n    gridLabelOffset: 36,\n\n    enableDots: true,\n    dotSize: 10,\n    dotColor: { theme: 'background' },\n    dotBorderWidth: 2,\n    dotBorderColor: { from: 'color' },\n    enableDotLabel: true,\n    dotLabel: 'value',\n    dotLabelYOffset: -12,\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.25,\n    blendMode: 'multiply',\n\n    animate: true,\n    motionConfig: 'wobbly',\n\n    isInteractive: true,\n\n    legends: [\n        {\n            anchor: 'top-left',\n            direction: 'column',\n            translateX: -50,\n            translateY: -40,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemTextColor: '#999',\n            symbolSize: 12,\n            symbolShape: 'circle',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Radar = () => {\n    return (\n        <ComponentTemplate\n            name=\"Radar\"\n            meta={meta.Radar}\n            icon=\"radar\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            propertiesMapper={mapper}\n            codePropertiesMapper={(properties, data) => ({\n                keys: data.keys,\n                ...properties,\n            })}\n            generateData={generateWinesTastes}\n            getTabData={data => data.data}\n        >\n            {(properties, data, theme) => {\n                return (\n                    <ResponsiveRadar\n                        data={data.data}\n                        keys={data.keys}\n                        {...properties}\n                        theme={theme}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Radar\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { lineRadial } from 'd3-shape'\nimport { useMotionConfig, useTheme, useAnimatedPath, blendModePropType } from '@nivo/core'\nimport { useInheritedColor, inheritedColorPropType } from '@nivo/colors'\n\nconst RadarShapes = memo(\n    ({\n        data,\n        item: key,\n        colorByKey,\n        radiusScale,\n        angleStep,\n        curveInterpolator,\n        borderWidth,\n        borderColor,\n        fillOpacity,\n        blendMode,\n    }) => {\n        const theme = useTheme()\n        const getBorderColor = useInheritedColor(borderColor, theme)\n\n        const lineGenerator = useMemo(() => {\n            return lineRadial()\n                .radius(d => radiusScale(d))\n                .angle((d, i) => i * angleStep)\n                .curve(curveInterpolator)\n        }, [radiusScale, angleStep, curveInterpolator])\n\n        const { animate, config: springConfig } = useMotionConfig()\n        const animatedPath = useAnimatedPath(lineGenerator(data.map(d => d[key])))\n        const animatedProps = useSpring({\n            fill: colorByKey[key],\n            stroke: getBorderColor({ key, color: colorByKey[key] }),\n            config: springConfig,\n            immediate: !animate,\n        })\n\n        return (\n            <animated.path\n                key={key}\n                d={animatedPath}\n                fill={animatedProps.fill}\n                fillOpacity={fillOpacity}\n                stroke={animatedProps.stroke}\n                strokeWidth={borderWidth}\n                style={{ mixBlendMode: blendMode }}\n            />\n        )\n    }\n)\n\nRadarShapes.displayName = 'RadarShapes'\nRadarShapes.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    item: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    radiusScale: PropTypes.func.isRequired,\n    angleStep: PropTypes.number.isRequired,\n\n    curveInterpolator: PropTypes.func.isRequired,\n\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    fillOpacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n}\n\nexport default RadarShapes\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig, positionFromAngle, radiansToDegrees } from '@nivo/core'\n\nconst textAnchorFromAngle = _angle => {\n    const angle = radiansToDegrees(_angle) + 90\n    if (angle <= 10 || angle >= 350 || (angle >= 170 && angle <= 190)) return 'middle'\n    if (angle > 180) return 'end'\n    return 'start'\n}\n\nconst renderLabel = (label, theme, labelComponent) => {\n    if (labelComponent === undefined) {\n        return (\n            <text\n                style={theme.axis.ticks.text}\n                dominantBaseline=\"central\"\n                textAnchor={label.anchor}\n            >\n                {label.id}\n            </text>\n        )\n    }\n\n    return React.createElement(labelComponent, label)\n}\n\nconst RadarGridLabels = memo(({ radius, angles, indices, label: labelComponent, labelOffset }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = indices.map((index, i) => {\n        const position = positionFromAngle(angles[i], radius + labelOffset)\n        const textAnchor = textAnchorFromAngle(angles[i])\n\n        return {\n            id: index,\n            angle: radiansToDegrees(angles[i]),\n            anchor: textAnchor,\n            ...position,\n        }\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y})`,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.g key={label.id} transform={animatedProps.transform}>\n                {renderLabel(label, theme, labelComponent)}\n            </animated.g>\n        )\n    })\n})\n\nRadarGridLabels.displayName = 'RadarGridLabels'\nRadarGridLabels.propTypes = {\n    radius: PropTypes.number.isRequired,\n    angles: PropTypes.arrayOf(PropTypes.number).isRequired,\n    indices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n        .isRequired,\n    label: PropTypes.func,\n    labelOffset: PropTypes.number.isRequired,\n}\n\nexport default RadarGridLabels\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { lineRadial, curveLinearClosed } from 'd3-shape'\nimport { animated, useSpring } from 'react-spring'\nimport { useTheme, useAnimatedPath, useMotionConfig } from '@nivo/core'\n\nconst RadarGridLevelCircular = memo(({ radius }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        radius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            fill=\"none\"\n            r={animatedProps.radius.interpolate(value => Math.max(value, 0))}\n            {...theme.grid.line}\n        />\n    )\n})\n\nRadarGridLevelCircular.displayName = 'RadarGridLevelCircular'\nRadarGridLevelCircular.propTypes = {\n    radius: PropTypes.number.isRequired,\n}\n\nconst RadarGridLevelLinear = memo(({ radius, angleStep, dataLength }) => {\n    const theme = useTheme()\n\n    const radarLineGenerator = useMemo(\n        () =>\n            lineRadial()\n                .angle(i => i * angleStep)\n                .radius(radius)\n                .curve(curveLinearClosed),\n        [angleStep, radius]\n    )\n\n    const points = Array.from({ length: dataLength }, (_, i) => i)\n    const animatedPath = useAnimatedPath(radarLineGenerator(points))\n\n    return <animated.path fill=\"none\" d={animatedPath} {...theme.grid.line} />\n})\n\nRadarGridLevelLinear.displayName = 'RadarGridLevelLinear'\nRadarGridLevelLinear.propTypes = {\n    radius: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    dataLength: PropTypes.number.isRequired,\n}\n\nconst RadarGridLevels = memo(({ shape, ...props }) => {\n    return shape === 'circular' ? (\n        <RadarGridLevelCircular radius={props.radius} />\n    ) : (\n        <RadarGridLevelLinear {...props} />\n    )\n})\n\nRadarGridLevels.displayName = 'RadarGridLevels'\nRadarGridLevels.propTypes = {\n    shape: PropTypes.oneOf(['circular', 'linear']).isRequired,\n    radius: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    dataLength: PropTypes.number.isRequired,\n}\n\nexport default RadarGridLevels\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport RadialGridLabels from './RadarGridLabels'\nimport RadarGridLevels from './RadarGridLevels'\n\nconst RadarGrid = memo(({ indices, levels, shape, radius, angleStep, label, labelOffset }) => {\n    const theme = useTheme()\n    const { radii, angles } = useMemo(() => {\n        return {\n            radii: Array.from({ length: levels })\n                .map((_, i) => (radius / levels) * (i + 1))\n                .reverse(),\n            angles: Array.from({ length: indices.length }, (_, i) => i * angleStep - Math.PI / 2),\n        }\n    }, [indices, levels, radius, angleStep])\n\n    return (\n        <g>\n            {angles.map((angle, i) => {\n                const position = positionFromAngle(angle, radius)\n                return (\n                    <line\n                        key={`axis.${i}`}\n                        x1={0}\n                        y1={0}\n                        x2={position.x}\n                        y2={position.y}\n                        {...theme.grid}\n                    />\n                )\n            })}\n            {radii.map((radius, i) => (\n                <RadarGridLevels\n                    key={`level.${i}`}\n                    shape={shape}\n                    radius={radius}\n                    angleStep={angleStep}\n                    dataLength={indices.length}\n                />\n            ))}\n            <RadialGridLabels\n                radius={radius}\n                angles={angles}\n                indices={indices}\n                labelOffset={labelOffset}\n                label={label}\n            />\n        </g>\n    )\n})\n\nRadarGrid.displayName = 'RadarGrid'\nRadarGrid.propTypes = {\n    indices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n        .isRequired,\n    shape: PropTypes.oneOf(['circular', 'linear']).isRequired,\n    radius: PropTypes.number.isRequired,\n    levels: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    label: PropTypes.func,\n    labelOffset: PropTypes.number.isRequired,\n}\n\nexport default RadarGrid\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo, useState, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { positionFromAngle, useTheme, useValueFormatter } from '@nivo/core'\nimport { TableTooltip, Chip, useTooltip } from '@nivo/tooltip'\n\nconst RadarTooltipItem = memo(\n    ({\n        datum,\n        keys,\n        index,\n        colorByKey,\n        radius,\n        startAngle,\n        endAngle,\n        arcGenerator,\n        tooltipFormat,\n    }) => {\n        const [isHover, setIsHover] = useState(false)\n        const theme = useTheme()\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const tooltipFormatter = useValueFormatter(tooltipFormat)\n        const tooltip = useMemo(() => {\n            const rows = keys.map(key => [\n                <Chip key={key} color={colorByKey[key]} />,\n                key,\n                tooltipFormatter(datum[key], key),\n            ])\n            rows.sort((a, b) => a[2] - b[2])\n            rows.reverse()\n\n            return <TableTooltip title={<strong>{index}</strong>} rows={rows} theme={theme} />\n        }, [datum, keys, index, colorByKey, theme, tooltipFormatter])\n        const showItemTooltip = useCallback(\n            event => {\n                setIsHover(true)\n                showTooltipFromEvent(tooltip, event)\n            },\n            [showTooltipFromEvent, tooltip]\n        )\n        const hideItemTooltip = useCallback(() => {\n            setIsHover(false)\n            hideTooltip()\n        }, [hideTooltip, setIsHover])\n\n        const { path, tipX, tipY } = useMemo(() => {\n            const position = positionFromAngle(\n                startAngle + (endAngle - startAngle) * 0.5 - Math.PI / 2,\n                radius\n            )\n\n            return {\n                path: arcGenerator({ startAngle, endAngle }),\n                tipX: position.x,\n                tipY: position.y,\n            }\n        }, [startAngle, endAngle, radius, arcGenerator])\n\n        return (\n            <>\n                {isHover && <line x1={0} y1={0} x2={tipX} y2={tipY} style={theme.crosshair.line} />}\n                <path\n                    d={path}\n                    fill=\"#F00\"\n                    fillOpacity={0}\n                    onMouseEnter={showItemTooltip}\n                    onMouseMove={showItemTooltip}\n                    onMouseLeave={hideItemTooltip}\n                />\n            </>\n        )\n    }\n)\n\nRadarTooltipItem.displayName = 'RadarTooltipItem'\nRadarTooltipItem.propTypes = {\n    datum: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    startAngle: PropTypes.number.isRequired,\n    endAngle: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n\n    arcGenerator: PropTypes.func.isRequired,\n\n    tooltipFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n}\n\nexport default RadarTooltipItem\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { arc as d3Arc } from 'd3-shape'\nimport RadarTooltipItem from './RadarTooltipItem'\n\nconst RadarTooltip = memo(\n    ({ data, keys, getIndex, colorByKey, radius, angleStep, tooltipFormat }) => {\n        const arc = d3Arc().outerRadius(radius).innerRadius(0)\n\n        const halfAngleStep = angleStep * 0.5\n        let rootStartAngle = -halfAngleStep\n\n        return (\n            <g>\n                {data.map(d => {\n                    const index = getIndex(d)\n                    const startAngle = rootStartAngle\n                    const endAngle = startAngle + angleStep\n\n                    rootStartAngle += angleStep\n\n                    return (\n                        <RadarTooltipItem\n                            key={index}\n                            datum={d}\n                            keys={keys}\n                            index={index}\n                            colorByKey={colorByKey}\n                            startAngle={startAngle}\n                            endAngle={endAngle}\n                            radius={radius}\n                            arcGenerator={arc}\n                            tooltipFormat={tooltipFormat}\n                        />\n                    )\n                })}\n            </g>\n        )\n    }\n)\n\nRadarTooltip.displayName = 'RadarTooltip'\nRadarTooltip.propTypes = {\n    data: PropTypes.array.isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    getIndex: PropTypes.func.isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    radius: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n}\n\nexport default RadarTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, positionFromAngle, getLabelGenerator, DotsItem } from '@nivo/core'\nimport { getInheritedColorGenerator, inheritedColorPropType } from '@nivo/colors'\n\nconst RadarDots = ({\n    data,\n    keys,\n    getIndex,\n    colorByKey,\n    radiusScale,\n    angleStep,\n    symbol,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    label,\n    labelFormat,\n    labelYOffset,\n}) => {\n    const theme = useTheme()\n    const fillColor = getInheritedColorGenerator(color, theme)\n    const strokeColor = getInheritedColorGenerator(borderColor, theme)\n    const getLabel = getLabelGenerator(label, labelFormat)\n\n    const points = useMemo(\n        () =>\n            data.reduce((acc, datum, i) => {\n                const index = getIndex(datum)\n                keys.forEach(key => {\n                    const pointData = {\n                        index,\n                        key,\n                        value: datum[key],\n                        color: colorByKey[key],\n                    }\n                    acc.push({\n                        key: `${key}.${index}`,\n                        label: enableLabel ? getLabel(pointData) : null,\n                        style: {\n                            fill: fillColor(pointData),\n                            stroke: strokeColor(pointData),\n                            ...positionFromAngle(\n                                angleStep * i - Math.PI / 2,\n                                radiusScale(datum[key])\n                            ),\n                        },\n                        data: pointData,\n                    })\n                })\n\n                return acc\n            }, []),\n        [\n            data,\n            getIndex,\n            colorByKey,\n            enableLabel,\n            getLabel,\n            fillColor,\n            strokeColor,\n            angleStep,\n            radiusScale,\n        ]\n    )\n\n    return points.map(point => (\n        <DotsItem\n            key={point.key}\n            x={point.style.x}\n            y={point.style.y}\n            symbol={symbol}\n            size={size}\n            color={point.style.fill}\n            borderWidth={borderWidth}\n            borderColor={point.style.stroke}\n            label={point.label}\n            labelYOffset={labelYOffset}\n            theme={theme}\n            datum={point.data}\n        />\n    ))\n}\n\nRadarDots.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    getIndex: PropTypes.func.isRequired,\n    colorByKey: PropTypes.object.isRequired,\n    radiusScale: PropTypes.func.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.string,\n    labelYOffset: PropTypes.number,\n}\nRadarDots.defaultProps = {\n    size: 6,\n    color: { from: 'color' },\n    borderWidth: 0,\n    borderColor: { from: 'color' },\n    enableLabel: false,\n    label: 'value',\n}\n\nexport default RadarDots\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { LegendPropShape } from '@nivo/legends'\nimport { closedCurvePropType, motionPropTypes, blendModePropType } from '@nivo/core'\n\nexport const RadarPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    indexBy: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]).isRequired,\n    maxValue: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]).isRequired,\n\n    curve: closedCurvePropType.isRequired,\n\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    gridLevels: PropTypes.number,\n    gridShape: PropTypes.oneOf(['circular', 'linear']),\n    gridLabel: PropTypes.func,\n    gridLabelOffset: PropTypes.number,\n\n    enableDots: PropTypes.bool.isRequired,\n    dotSymbol: PropTypes.func,\n    dotSize: PropTypes.number,\n    dotColor: inheritedColorPropType,\n    dotBorderWidth: PropTypes.number,\n    dotBorderColor: inheritedColorPropType,\n    enableDotLabel: PropTypes.bool,\n    dotLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    dotLabelFormat: PropTypes.string,\n    dotLabelYOffset: PropTypes.number,\n\n    colors: ordinalColorsPropType.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n    role: PropTypes.string.isRequired,\n\n    ...motionPropTypes,\n}\n\nexport const RadarDefaultProps = {\n    maxValue: 'auto',\n\n    curve: 'linearClosed',\n\n    borderWidth: 2,\n    borderColor: { from: 'color' },\n\n    gridLevels: 5,\n    gridShape: 'circular',\n    gridLabelOffset: 16,\n\n    enableDots: true,\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.25,\n    blendMode: 'normal',\n\n    isInteractive: true,\n\n    legends: [],\n    role: 'img',\n\n    animate: true,\n    motionDamping: 13,\n    motionStiffness: 90,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport {\n    withContainer,\n    useTheme,\n    useCurveInterpolation,\n    useDimensions,\n    getAccessorFor,\n    SvgWrapper,\n} from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport RadarShapes from './RadarShapes'\nimport RadarGrid from './RadarGrid'\nimport RadarTooltip from './RadarTooltip'\nimport RadarDots from './RadarDots'\nimport { RadarDefaultProps, RadarPropTypes } from './props'\n\nconst Radar = memo(\n    ({\n        data,\n        keys,\n        indexBy,\n        maxValue,\n        curve,\n        margin: partialMargin,\n        width,\n        height,\n        borderWidth,\n        borderColor,\n        gridLevels,\n        gridShape,\n        gridLabel,\n        gridLabelOffset,\n        enableDots,\n        dotSymbol,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n        enableDotLabel,\n        dotLabel,\n        dotLabelFormat,\n        dotLabelYOffset,\n        colors,\n        fillOpacity,\n        blendMode,\n        isInteractive,\n        tooltipFormat,\n        legends,\n        role,\n    }) => {\n        const getIndex = useMemo(() => getAccessorFor(indexBy), [indexBy])\n        const indices = useMemo(() => data.map(getIndex), [data, getIndex])\n\n        const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const theme = useTheme()\n\n        const getColor = useOrdinalColorScale(colors, 'key')\n        const colorByKey = useMemo(\n            () =>\n                keys.reduce((mapping, key, index) => {\n                    mapping[key] = getColor({ key, index })\n                    return mapping\n                }, {}),\n            [keys, getColor]\n        )\n\n        const { radius, radiusScale, centerX, centerY, angleStep } = useMemo(() => {\n            const computedMaxValue =\n                maxValue !== 'auto'\n                    ? maxValue\n                    : Math.max(...data.reduce((acc, d) => [...acc, ...keys.map(key => d[key])], []))\n\n            const radius = Math.min(innerWidth, innerHeight) / 2\n            const radiusScale = scaleLinear().range([0, radius]).domain([0, computedMaxValue])\n\n            return {\n                radius,\n                radiusScale,\n                centerX: innerWidth / 2,\n                centerY: innerHeight / 2,\n                angleStep: (Math.PI * 2) / data.length,\n            }\n        }, [keys, indexBy, data, maxValue, innerWidth, innerHeight])\n\n        const legendData = keys.map(key => ({\n            id: key,\n            label: key,\n            color: colorByKey[key],\n        }))\n\n        const curveInterpolator = useCurveInterpolation(curve)\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                <g transform={`translate(${centerX}, ${centerY})`}>\n                    <RadarGrid\n                        levels={gridLevels}\n                        shape={gridShape}\n                        radius={radius}\n                        angleStep={angleStep}\n                        indices={indices}\n                        label={gridLabel}\n                        labelOffset={gridLabelOffset}\n                    />\n                    {keys.map(key => (\n                        <RadarShapes\n                            key={key}\n                            {...{\n                                data,\n                                item: key,\n                                colorByKey,\n                                radiusScale,\n                                angleStep,\n                                curveInterpolator,\n                                borderWidth,\n                                borderColor,\n                                fillOpacity,\n                                blendMode,\n                            }}\n                        />\n                    ))}\n                    {isInteractive && (\n                        <RadarTooltip\n                            data={data}\n                            keys={keys}\n                            getIndex={getIndex}\n                            colorByKey={colorByKey}\n                            radius={radius}\n                            angleStep={angleStep}\n                            tooltipFormat={tooltipFormat}\n                        />\n                    )}\n                    {enableDots && (\n                        <RadarDots\n                            data={data}\n                            keys={keys}\n                            getIndex={getIndex}\n                            radiusScale={radiusScale}\n                            angleStep={angleStep}\n                            symbol={dotSymbol}\n                            size={dotSize}\n                            colorByKey={colorByKey}\n                            color={dotColor}\n                            borderWidth={dotBorderWidth}\n                            borderColor={dotBorderColor}\n                            enableLabel={enableDotLabel}\n                            label={dotLabel}\n                            labelFormat={dotLabelFormat}\n                            labelYOffset={dotLabelYOffset}\n                        />\n                    )}\n                </g>\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                        data={legendData}\n                        theme={theme}\n                    />\n                ))}\n            </SvgWrapper>\n        )\n    }\n)\n\nRadar.displayName = 'Radar'\nRadar.propTypes = RadarPropTypes\nRadar.defaultProps = RadarDefaultProps\n\nexport default withContainer(Radar)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Radar from './Radar'\n\nconst ResponsiveRadar = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Radar width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveRadar\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { closedCurvePropKeys, DotsItemDefaultProps as dotDefaults } from '@nivo/core'\nimport { RadarDefaultProps as defaults, RadarDots } from '@nivo/radar'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst dotsDefaults = RadarDots.defaultProps\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data. If using objects indexBy & keys\n            should be strings, if using array they\n            should be numbers.\n            \n            For example, given this config:\n            \\`\\`\\`\n            [\n                { language: 'javascript', john: 12, sarah: 32, bob: 27 },\n                { language: 'golang', john: 25, sarah: 15, bob: 3 },\n                { language: 'python', john: 5, sarah: 22, bob: 31 },\n                { language: 'java', john: 19, sarah: 17, bob: 9 }\n            ]\n            keys: ['john', 'sarah', 'bob']\n            indexBy: 'language'\n            \\`\\`\\`\n            We'll have a radar chart representing programing\n            skills for each user by language\n            (3 layers and 4 dimensions).\n        `,\n        type: 'Array<object | Array>',\n        required: true,\n    },\n    {\n        key: 'indexBy',\n        group: 'Base',\n        help: 'Key to use to index the data.',\n        description: `\n            Key to use to index the data, this key\n            must exist in each data item.\n        `,\n        type: 'string | number',\n        required: false,\n        defaultValue: defaults.indexBy,\n    },\n    {\n        key: 'keys',\n        group: 'Base',\n        help: 'Keys to use to determine each serie.',\n        description: `\n            Keys to use to determine each serie.\n            Those keys should exist in each data item.\n        `,\n        type: 'Array<string | number>',\n        required: false,\n        defaultValue: defaults.keys,\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value, if 'auto',\n            will use max value from\n            the provided data.\n        `,\n        required: false,\n        defaultValue: defaults.maxValue,\n        type: 'number | string',\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 200,\n            min: 0,\n            max: 1000,\n        },\n    },\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use\n            for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: closedCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveRadar/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveRadar/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines how to compute slice color.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'fillOpacity',\n        help: 'Shape fill opacity.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.fillOpacity,\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    {\n        key: 'blendMode',\n        flavors: ['svg'],\n        help: 'Defines CSS mix-blend-mode property.',\n        description: `\n            Defines CSS \\`mix-blend-mode\\` property, see\n            [MDN documentation](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode).\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.blendMode,\n        controlType: 'blendMode',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Shape border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    {\n        key: 'gridLevels',\n        help: 'Number of levels to display for grid',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.gridLevels,\n        controlType: 'range',\n        group: 'Grid',\n        controlOptions: {\n            min: 1,\n            max: 12,\n        },\n    },\n    {\n        key: 'gridShape',\n        help: 'Determine shape of the grid.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.gridShape,\n        controlType: 'choices',\n        group: 'Grid',\n        controlOptions: {\n            choices: [\n                { label: 'circular', value: 'circular' },\n                { label: 'linear', value: 'linear' },\n            ],\n        },\n    },\n    {\n        key: 'gridLabel',\n        type: 'Function',\n        group: 'Grid',\n        help: 'Grid label.',\n        description: `\n            An optional function to override label rendering.\n            It must return a **valid SVG element** and will\n            receive the following props:\n            \\`\\`\\`\n            {\n                id:     string\n                # this can be used to determine the label layout,\n                # if the element should be centered, left/right aligned\n                anchor: 'start' | 'middle' | 'end'\n                # angle in degrees\n                angle:  number\n            }\n            \\`\\`\\`\n            The component will be wrapped inside\n            a \\`g\\` element **already positioned**\n            where the default label would have been placed.\n        `,\n    },\n    {\n        key: 'gridLabelOffset',\n        help: 'Label offset from outer radius.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.gridLabelOffset,\n        controlType: 'range',\n        group: 'Grid',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'enableDots',\n        help: 'Enable/disable dots.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableDots,\n        controlType: 'switch',\n        group: 'Dots',\n    },\n    {\n        key: 'dotSymbol',\n        group: 'Dots',\n        help: 'Overrides default dot circle.',\n        description: `\n            Overrides default dot circle.\n            The function will receive \\`size\\`,\n            \\`color\\`, \\`borderWidth\\` and \\`borderColor\\`\n            props and must return a valid SVG element.\n        `,\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'dotSize',\n        help: 'Size of the dots.',\n        type: 'number',\n        required: false,\n        defaultValue: dotsDefaults.size,\n        controlType: 'range',\n        group: 'Dots',\n        controlOptions: {\n            unit: 'px',\n            min: 2,\n            max: 64,\n        },\n    },\n    {\n        key: 'dotColor',\n        help: 'Method to compute dots color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: dotsDefaults.color,\n        controlType: 'inheritedColor',\n        group: 'Dots',\n    },\n    {\n        key: 'dotBorderWidth',\n        help: 'Width of the dots border.',\n        type: 'number',\n        required: false,\n        defaultValue: dotsDefaults.borderWidth,\n        controlType: 'range',\n        group: 'Dots',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 10,\n        },\n    },\n    {\n        key: 'dotBorderColor',\n        help: 'Method to compute dots border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: dotsDefaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Dots',\n    },\n    {\n        key: 'enableDotLabel',\n        help: 'Enable/disable dots label.',\n        type: 'boolean',\n        required: false,\n        defaultValue: dotsDefaults.enableLabel,\n        controlType: 'switch',\n        group: 'Dots',\n    },\n    {\n        key: 'dotLabel',\n        help: 'Dot label.',\n        description:\n            'Property to use to determine dot label. If a function is provided, it will receive current value and serie and must return a label.',\n        type: 'string',\n        required: false,\n        defaultValue: dotsDefaults.label,\n        controlType: 'choices',\n        group: 'Dots',\n        controlOptions: {\n            choices: [\n                'value',\n                'index',\n                'key',\n                `d => \\`\\${d.key}: \\${d.value}\\``,\n                `d => \\`\\${d.index}: \\${d.value}\\``,\n            ].map(choice => ({\n                label: choice,\n                value: choice,\n            })),\n        },\n    },\n    {\n        key: 'dotLabelYOffset',\n        help: 'Label Y offset from dot shape.',\n        type: 'number',\n        required: false,\n        defaultValue: dotDefaults.labelYOffset,\n        controlType: 'range',\n        group: 'Dots',\n        controlOptions: {\n            unit: 'px',\n            min: -24,\n            max: 24,\n        },\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n"],"sourceRoot":""}