{"version":3,"sources":["webpack:///./src/pages/geomap/canvas.js","webpack:///./src/data/components/geomap/props.js"],"names":["initialProperties","pixelRatio","window","devicePixelRatio","margin","top","right","bottom","left","projectionType","projectionScale","projectionTranslation","projectionRotation","fillColor","borderWidth","borderColor","enableGraticule","graticuleLineWidth","graticuleLineColor","isInteractive","GeoMapCanvas","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","GeoMapCanvasDefaultProps","propertiesMapper","mapper","codePropertiesMapper","features","hasData","data","theme","logAction","countries","onClick","feature","type","label","id","omit","props","geoProps","groupProperties"],"mappings":"4FAAA,sIAiBMA,EAAoB,CACtBC,WACsB,oBAAXC,QAA0BA,OAAOC,iBAAmBD,OAAOC,iBAAmB,EAEzFC,OAAQ,CACJC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAGVC,eAAgB,WAChBC,gBAAiB,IACjBC,sBAAuB,CAAC,GAAK,IAC7BC,mBAAoB,CAAC,EAAG,EAAG,GAE3BC,UAAW,UACXC,YAAa,GACbC,YAAa,UAEbC,iBAAiB,EACjBC,mBAAoB,GACpBC,mBAAoB,UAEpBC,eAAe,GAyCJC,UAtCM,WACjB,OACI,kBAAC,IAAD,CACIC,KAAK,eACLC,KAAMA,IAAKF,aACXG,KAAK,SACLC,QAASF,IAAKE,QACdC,cAAc,SACdC,WAAYC,IACZ3B,kBAAmBA,EACnB4B,kBAAmBC,IACnBC,iBAAkBC,IAClBC,qBAAsB,SAAAN,GAAU,sBAC5BO,SAAU,yDACPP,IAEPQ,SAAS,IAER,SAACR,EAAYS,EAAMC,EAAOC,GACvB,OACI,kBAAC,IAAD,eACIJ,SAAUK,EAAUL,UAChBP,EAFR,CAGIU,MAAOA,EACPG,QAAS,SAAAC,GACLH,EAAU,CACNI,KAAM,QACNC,MAAUF,EAAQd,WAAWL,KAAxB,KAAiCmB,EAAQG,GAAzC,IACLR,KAAMS,IAAKJ,EAAS,uB,4GC7D9CK,EAAK,YAAOC,KAELnB,EAASoB,YAAgBF","file":"component---src-pages-geomap-canvas-js-fb71c7bb3c86e186838b.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport omit from 'lodash/omit'\nimport { ResponsiveGeoMapCanvas, GeoMapCanvasDefaultProps } from '@nivo/geo'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/geomap/meta.yml'\nimport mapper from '../../data/components/geo/mapper'\nimport { groups } from '../../data/components/geomap/props'\nimport countries from '../../data/components/geo/world_countries'\n\nconst initialProperties = {\n    pixelRatio:\n        typeof window !== 'undefined' && window.devicePixelRatio ? window.devicePixelRatio : 1,\n\n    margin: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    fillColor: '#eeeeee',\n    borderWidth: 0.5,\n    borderColor: '#333333',\n\n    enableGraticule: true,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#666666',\n\n    isInteractive: true,\n}\n\nconst GeoMapCanvas = () => {\n    return (\n        <ComponentTemplate\n            name=\"GeoMapCanvas\"\n            meta={meta.GeoMapCanvas}\n            icon=\"geomap\"\n            flavors={meta.flavors}\n            currentFlavor=\"canvas\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={GeoMapCanvasDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={properties => ({\n                features: '/* please have a look at the description for usage */',\n                ...properties,\n            })}\n            hasData={false}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveGeoMapCanvas\n                        features={countries.features}\n                        {...properties}\n                        theme={theme}\n                        onClick={feature => {\n                            logAction({\n                                type: 'click',\n                                label: `${feature.properties.name} (${feature.id})`,\n                                data: omit(feature, 'geometry'),\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default GeoMapCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { groupProperties } from '../../../lib/componentProperties'\nimport { props as geoProps } from '../geo/props'\n\nconst props = [...geoProps]\n\nexport const groups = groupProperties(props)\n"],"sourceRoot":""}