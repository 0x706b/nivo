{"version":3,"sources":["webpack:///./src/pages/line/canvas.js"],"names":["xValues","yValues","initialProperties","omit","defaultSettings","useMesh","debugMesh","curve","margin","top","right","bottom","left","enableArea","colors","scheme","lineWidth","xScale","type","yScale","stacked","min","max","pointSize","pointBorderWidth","enableGridX","gridXValues","gridYValues","axisTop","enable","tickValues","tickSize","tickPadding","tickRotation","format","legend","legendOffset","axisRight","axisBottom","legendPosition","axisLeft","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","onClick","data","alert","JSON","stringify","effects","on","style","itemBackground","LineCanvas","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","LineCanvasDefaultProps","propertiesMapper","mapper","generateData","generateHeavyDataSet","getDataSize","length","theme","logAction","point","label","serieId","x","y","color"],"mappings":"4FAAA,kJAkBMA,EAAU,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,KACnCC,EAAU,CAAC,EAAG,IAAK,IAAM,KAAM,IAAM,MAErCC,EAAiB,iBAChBC,IAAKC,IAAiB,CAAC,QAAS,WADhB,CAEnBC,SAAS,EACTC,WAAW,EACXC,MAAO,YACPC,OAAQ,CACJC,IAAK,GACLC,MAAO,IACPC,OAAQ,GACRC,KAAM,IAEVC,YAAY,EACZC,OAAQ,CAAEC,OAAQ,YAClBC,UAAW,EACXC,OAAQ,CACJC,KAAM,UAEVC,OAAQ,CACJD,KAAM,SACNE,SAAS,EACTC,IAAK,EACLC,IAAK,MAETC,UAAW,EACXC,iBAAkB,EAClBC,aAAa,EACbC,YAAa1B,EACb2B,YAAa1B,EACb2B,QAAS,CACLC,QAAQ,EACRC,WAAY9B,EACZ+B,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,MACRC,OAAQ,GACRC,aAAc,IAElBC,UAAW,CACPR,QAAQ,EACRC,WAAY7B,EACZ8B,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,MACRC,OAAQ,GACRC,aAAc,GAElBE,WAAY,CACRT,QAAQ,EACRC,WAAY9B,EACZ+B,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,MACRC,OAAQ,QACRC,aAAc,GACdG,eAAgB,UAEpBC,SAAU,CACNX,QAAQ,EACRC,WAAY7B,EACZ8B,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,MACRC,OAAQ,SACRC,cAAe,GACfG,eAAgB,UAEpBE,QAAS,CACL,CACIC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,cAAe,gBACfC,UAAW,GACXC,WAAY,GACZC,YAAa,IACbC,WAAY,GACZC,YAAa,SACbC,kBAAmB,oBACnBC,QAAS,SAAAC,GACLC,MAAMC,KAAKC,UAAUH,EAAM,KAAM,UAErCI,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHC,eAAgB,qBAChBZ,YAAa,SA4CtBa,UApCI,WACf,OACI,kBAAC,IAAD,CACIC,KAAK,OACLC,KAAMA,IAAKF,WACXG,KAAK,OACLC,QAASF,IAAKE,QACdC,cAAc,SACdC,WAAYC,IACZrE,kBAAmBA,EACnBsE,kBAAmBC,IACnBC,iBAAkBC,IAClBC,aAAcC,IACdC,YAAa,SAAAtB,GAAI,OAAIA,EAAKuB,OAASvB,EAAK,GAAGA,KAAKuB,UAE/C,SAACT,EAAYd,EAAMwB,EAAOC,GACvB,OACI,kBAAC,IAAD,eACIzB,KAAMA,GACFc,EAFR,CAGIU,MAAOA,EACPzB,QAAS,SAAA2B,GACLD,EAAU,CACN/D,KAAM,QACNiE,MAAM,kBAAmBD,EAAME,QAA1B,QAAyCF,EAAM1B,KAAK6B,EAApD,QAA6DH,EAAM1B,KAAK8B,EAC7EC,MAAOL,EAAMK,MACb/B,KAAM0B","file":"component---src-pages-line-canvas-js-b03a727eed5668bfb809.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport omit from 'lodash/omit'\nimport { ResponsiveLineCanvas, LineCanvasDefaultProps } from '@nivo/line'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/line/meta.yml'\nimport mapper from '../../data/components/line/mapper'\nimport { groups } from '../../data/components/line/props'\nimport defaultSettings from '../../data/components/line/defaults'\nimport { generateHeavyDataSet } from '../../data/components/line/generator'\n\nconst xValues = [0, 20, 40, 60, 80, 100, 120]\nconst yValues = [0, 500, 1000, 1500, 2000, 2500]\n\nconst initialProperties = {\n    ...omit(defaultSettings, ['width', 'height']),\n    useMesh: true,\n    debugMesh: false,\n    curve: 'monotoneX',\n    margin: {\n        top: 50,\n        right: 160,\n        bottom: 50,\n        left: 60,\n    },\n    enableArea: false,\n    colors: { scheme: 'spectral' },\n    lineWidth: 1,\n    xScale: {\n        type: 'linear',\n    },\n    yScale: {\n        type: 'linear',\n        stacked: true,\n        min: 0,\n        max: 2500,\n    },\n    pointSize: 4,\n    pointBorderWidth: 1,\n    enableGridX: false,\n    gridXValues: xValues,\n    gridYValues: yValues,\n    axisTop: {\n        enable: false,\n        tickValues: xValues,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        format: '.2f',\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: true,\n        tickValues: yValues,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        format: '.2s',\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        tickValues: xValues,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        format: '.2f',\n        legend: 'price',\n        legendOffset: 36,\n        legendPosition: 'middle',\n    },\n    axisLeft: {\n        enable: true,\n        tickValues: yValues,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        format: '.2s',\n        legend: 'volume',\n        legendOffset: -40,\n        legendPosition: 'middle',\n    },\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 140,\n            translateY: 0,\n            itemsSpacing: 2,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 12,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n            symbolBorderColor: 'rgba(0, 0, 0, .5)',\n            onClick: data => {\n                alert(JSON.stringify(data, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemBackground: 'rgba(0, 0, 0, .03)',\n                        itemOpacity: 1,\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst LineCanvas = () => {\n    return (\n        <ComponentTemplate\n            name=\"Line\"\n            meta={meta.LineCanvas}\n            icon=\"line\"\n            flavors={meta.flavors}\n            currentFlavor=\"canvas\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={LineCanvasDefaultProps}\n            propertiesMapper={mapper}\n            generateData={generateHeavyDataSet}\n            getDataSize={data => data.length * data[0].data.length}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveLineCanvas\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={point => {\n                            logAction({\n                                type: 'click',\n                                label: `[point] serie: ${point.serieId}, x: ${point.data.x}, y: ${point.data.y}`,\n                                color: point.color,\n                                data: point,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default LineCanvas\n"],"sourceRoot":""}