(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{"0q84":function(e,t,o){"use strict";var r=o("nLLr");t.a=Object(r.c)({label:function(e){return"node => `${node.id} (${node.formattedValue})`"===e?function(e){return e.id+" ("+e.formattedValue+")"}:e},parentLabel:function(e){return"node => node.pathComponents.join(' / ')"===e?function(e){return e.pathComponents.join(" / ")}:e},valueFormat:r.b})},"0wvI":function(e,t,o){"use strict";o.d(t,"b",(function(){return u})),o.d(t,"a",(function(){return p}));var r=o("6zZa"),n=o("q8Y+"),a=o.n(n),l=o("JCgZ"),i=o.n(l),u=function(){return{root:Object(r.f)()}},p=function(){return{root:{id:"root",children:a()(600).map((function(e){return{id:"node."+e,value:i()(10,1e5)}}))},nodeCount:600}}},DAMa:function(e,t,o){"use strict";o.d(t,"a",(function(){return u}));var r=o("Eo5u"),n=o("myAg"),a=o("RQLE"),l=n.e,i=[{key:"data",group:"Base",help:"The hierarchical data object.",type:"object",required:!0},{key:"identity",group:"Base",help:"The key or function to use to retrieve nodes identity.",type:"string | Function",required:!1,defaultValue:l.identity},{key:"value",group:"Base",help:"The key or function to use to retrieve nodes value.",type:"string | Function",required:!1,defaultValue:"value"},{key:"valueFormat",help:"\n            Value format supporting d3-format notation, this formatted value\n            will then be used for labels and tooltips.\n        ",type:"string |Â Function",required:!1,controlType:"valueFormat",group:"Base"},{key:"tile",group:"Base",help:"Strategy used to compute nodes.",description:"\n            Strategy used to compute nodes, see\n            [official d3 documentation](https://github.com/mbostock/d3/wiki/Treemap-Layout#mode).\n        ",type:"string",required:!1,defaultValue:"squarify",controlType:"choices",controlOptions:{choices:[{label:"binary",value:"binary"},{label:"squarify",value:"squarify"},{label:"slice",value:"slice"},{label:"dice",value:"dice"},{label:"sliceDice",value:"sliceDice"},{label:"resquarify",value:"resquarify"}]}},{key:"leavesOnly",help:"Only render leaf nodes (no parent).",type:"boolean",required:!1,defaultValue:l.leavesOnly,controlType:"switch",group:"Base"},{key:"innerPadding",help:"Padding between parent and child node.",type:"number",required:!1,defaultValue:l.innerPadding,controlType:"range",group:"Base",controlOptions:{unit:"px",min:0,max:32}},{key:"outerPadding",help:"Padding between parent and child node.",type:"number",required:!1,defaultValue:l.outerPadding,controlType:"range",group:"Base",controlOptions:{unit:"px",min:0,max:32}},{key:"width",group:"Base",enableControlForFlavors:["api"],help:"Chart width.",description:"\n            not required if using responsive alternative\n            of the component `<Responsive*/>`.\n        ",type:"number",required:!0},{key:"height",group:"Base",enableControlForFlavors:["api"],help:"Chart height.",description:"\n            not required if using responsive alternative\n            of the component `<Responsive*/>`.\n        ",type:"number",required:!0},{key:"pixelRatio",flavors:["canvas"],help:"Adjust pixel ratio, useful for HiDPI screens.",required:!1,defaultValue:"Depends on device",type:"number",controlType:"range",group:"Base",controlOptions:{min:1,max:2}},{key:"margin",help:"Chart margin.",type:"object",required:!1,controlType:"margin",group:"Base"},{key:"colors",help:"Defines how to compute node color.",type:"string | Function | string[]",required:!1,defaultValue:l.colors,controlType:"ordinalColors",group:"Style"},{key:"nodeOpacity",help:"Node opacity (0~1).",required:!1,defaultValue:l.nodeOpacity,type:"number",controlType:"opacity",group:"Style"},{key:"borderWidth",help:"Control node border width.",type:"number",required:!1,defaultValue:l.borderWidth,controlType:"lineWidth",group:"Style"},{key:"borderColor",help:"Method to compute border color.",type:"string | object | Function",required:!1,defaultValue:l.borderColor,controlType:"inheritedColor",group:"Style"}].concat(Object(r.a)(Object(a.b)("Style",["svg"])),[{key:"enableLabel",help:"Enable/disable labels.",type:"boolean",required:!1,defaultValue:l.enableLabel,controlType:"switch",group:"Labels"},{key:"label",help:"Label accessor.",description:"Defines how to get label text, can be a string (used to access current node property) or a function which will receive the actual node and must return the desired label.",type:"string | Function",required:!1,controlType:"choices",group:"Labels",controlOptions:{choices:["formattedValue","id","node => `${node.id} (${node.formattedValue})`"].map((function(e){return{label:e,value:e}}))}},{key:"labelSkipSize",help:"Skip label rendering if node minimal side length is lower than given value, 0 to disable.",type:"number",required:!1,controlType:"range",group:"Labels",controlOptions:{unit:"px",min:0,max:100}},{key:"orientLabel",help:"Orient labels according to max node width/height.",type:"boolean",required:!1,defaultValue:l.orientLabel,controlType:"switch",group:"Labels"},{key:"labelTextColor",help:"Method to compute label text color.",type:"string | object | Function",required:!1,controlType:"inheritedColor",group:"Labels"},{key:"enableParentLabel",flavors:["svg","html","api"],help:"Enable/disable labels.",type:"boolean",required:!1,defaultValue:l.enableParentLabel,controlType:"switch",group:"Labels"},{key:"parentLabel",flavors:["svg","html","api"],help:"Parent label accessor.",description:"Defines how to get parent label text, can be a string (used to access current node property) or a function which will receive the actual node and must return the desired label.",type:"string | Function",required:!1,controlType:"choices",group:"Labels",controlOptions:{choices:["id","formattedValue","node => node.pathComponents.join(' / ')"].map((function(e){return{label:e,value:e}}))}},{key:"parentLabelSize",flavors:["svg","html","api"],help:"Parent label size.",required:!1,defaultValue:l.parentLabelSize,type:"number",controlType:"range",group:"Labels",controlOptions:{min:10,max:40}},{key:"parentLabelPosition",flavors:["svg","html","api"],help:"Parent label position.",type:"'top' | 'right' | 'bottom' | 'left'",required:!1,controlType:"choices",group:"Labels",defaultValue:l.parentLabelPosition,controlOptions:{choices:["top","right","bottom","left"].map((function(e){return{label:e,value:e}}))}},{key:"parentLabelPadding",flavors:["svg","html","api"],help:"Parent label padding.",required:!1,defaultValue:l.parentLabelPadding,type:"number",controlType:"range",group:"Labels",controlOptions:{min:0,max:20}},{key:"parentLabelTextColor",flavors:["svg","html","api"],help:"Method to compute parent label text color.",type:"string | object | Function",required:!1,controlType:"inheritedColor",group:"Labels"},{key:"isInteractive",flavors:["svg","html","canvas"],help:"Enable/disable interactivity.",type:"boolean",required:!1,defaultValue:l.isInteractive,controlType:"switch",group:"Interactivity"},{key:"onMouseEnter",flavors:["svg","html"],group:"Interactivity",type:"(node, event) => void",help:"onMouseEnter handler.",required:!1},{key:"onMouseMove",flavors:["svg","html","canvas"],group:"Interactivity",type:"(node, event) => void",help:"onMouseMove handler.",required:!1},{key:"onMouseLeave",flavors:["svg","html"],group:"Interactivity",type:"(node, event) => void",help:"onMouseLeave handler.",required:!1},{key:"onClick",flavors:["svg","html","canvas"],group:"Interactivity",type:"(node, event) => void",help:"onClick handler.",required:!1}],Object(r.a)(Object(a.e)(["svg","html","canvas"],l,"react-spring"))),u=Object(a.d)(i)},YA3f:function(e,t,o){"use strict";o.r(t);var r=o("mXGw"),n=o.n(r),a=o("myAg"),l=o("ZS2m"),i=o("wZ6/"),u=o.n(i),p=o("0q84"),d=o("DAMa"),s=o("0wvI"),c={identity:"name",value:"loc",valueFormat:{format:".02s",enabled:!0},tile:a.e.tile,leavesOnly:a.e.leavesOnly,innerPadding:a.e.innerPadding,outerPadding:a.e.outerPadding,margin:{top:10,right:10,bottom:10,left:10},enableLabel:!0,label:a.e.label,labelSkipSize:12,labelTextColor:{from:"color",modifiers:[["darker",2]]},orientLabel:a.e.orientLabel,enableParentLabel:a.e.enableParentLabel,parentLabel:a.e.parentLabel,parentLabelSize:a.e.parentLabelSize,parentLabelPosition:a.e.parentLabelPosition,parentLabelPadding:a.e.parentLabelPadding,parentLabelTextColor:{from:"color",modifiers:[["darker",3]]},colors:{scheme:"yellow_orange_red"},colorBy:a.e.colorBy,nodeOpacity:a.e.nodeOpacity,borderWidth:a.e.borderWidth,borderColor:{from:"color",modifiers:[["darker",.1]]},animate:a.e.animate,motionConfig:a.e.motionConfig,isInteractive:a.e.isInteractive};t.default=function(){return n.a.createElement(l.a,{name:"TreeMapHtml",meta:u.a.TreeMapHtml,icon:"treemap",flavors:u.a.flavors,currentFlavor:"html",properties:d.a,initialProperties:c,defaultProperties:a.e,propertiesMapper:p.a,generateData:s.b},(function(e,t,o,r){return n.a.createElement(a.c,Object.assign({data:t.root},e,{theme:o,onClick:function(e){r({type:"click",label:"[node] "+e.id+": "+e.formattedValue,color:e.color,data:e})}}))}))}}}]);
//# sourceMappingURL=component---src-pages-treemap-html-js-3271d0d0a867e9fe2d38.js.map