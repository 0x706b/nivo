{"version":3,"sources":["webpack:///../node_modules/lodash/_baseIsDate.js","webpack:///./src/pages/calendar/canvas.js","webpack:///./src/data/components/calendar/props.js","webpack:///../node_modules/lodash/isDate.js","webpack:///./src/data/components/calendar/mapper.js"],"names":["baseGetTag","isObjectLike","module","exports","value","from","Date","to","generateData","generateDayCounts","Tooltip","data","initialProperties","pixelRatio","window","devicePixelRatio","align","emptyColor","colors","minValue","maxValue","margin","top","right","bottom","left","direction","yearSpacing","yearLegendPosition","yearLegendOffset","monthSpacing","monthBorderWidth","monthBorderColor","monthLegendPosition","monthLegendOffset","daySpacing","dayBorderWidth","dayBorderColor","isInteractive","legends","anchor","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","CalendarCanvas","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","calendarCanvasDefaultProps","propertiesMapper","mapper","codePropertiesMapper","tooltip","undefined","theme","logAction","onClick","day","type","label","color","props","key","group","help","description","required","enableControlForFlavors","controlType","controlOptions","unit","min","max","step","defaultValue","defaults","choices","boxAlignments","map","disabledValue","themeProperty","groupProperties","baseIsDate","baseUnary","nodeUtil","nodeIsDate","isDate","TooltipWrapper","styled","div","TooltipKey","span","CustomTooltip","style","x","y","size","settingsMapper","values","exclude"],"mappings":"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","file":"component---src-pages-calendar-canvas-js-2b1f2844fc543e45a362.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveCalendarCanvas, calendarCanvasDefaultProps } from '@nivo/calendar'\nimport { generateDayCounts } from '@nivo/generators'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/calendar/meta.yml'\nimport mapper from '../../data/components/calendar/mapper'\nimport { groups } from '../../data/components/calendar/props'\n\nconst from = new Date(2013, 3, 1)\nconst to = new Date(2019, 7, 12)\nconst generateData = () => generateDayCounts(from, to)\n\nconst Tooltip = data => {\n    /* return custom tooltip */\n}\n\nconst initialProperties = {\n    pixelRatio:\n        typeof window !== 'undefined' && window.devicePixelRatio ? window.devicePixelRatio : 1,\n\n    from: '2013-03-01',\n    to: '2019-07-12',\n\n    align: 'center',\n    emptyColor: '#aa7942',\n    colors: ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560'],\n    minValue: 0,\n    maxValue: 'auto',\n\n    margin: {\n        top: 40,\n        right: 40,\n        bottom: 50,\n        left: 40,\n    },\n    direction: 'vertical',\n\n    yearSpacing: 30,\n    yearLegendPosition: 'before',\n    yearLegendOffset: 10,\n\n    monthSpacing: 0,\n    monthBorderWidth: 2,\n    monthBorderColor: '#ffffff',\n    monthLegendPosition: 'before',\n    monthLegendOffset: 10,\n\n    daySpacing: 0,\n    dayBorderWidth: 0,\n    dayBorderColor: '#ffffff',\n\n    isInteractive: true,\n    'custom tooltip example': false,\n\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'row',\n            translateY: 36,\n            itemCount: 4,\n            itemWidth: 42,\n            itemHeight: 36,\n            itemsSpacing: 14,\n            itemDirection: 'right-to-left',\n        },\n    ],\n}\n\nconst CalendarCanvas = () => {\n    return (\n        <ComponentTemplate\n            name=\"CalendarCanvas\"\n            meta={meta.CalendarCanvas}\n            icon=\"calendar\"\n            flavors={meta.flavors}\n            currentFlavor=\"canvas\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={calendarCanvasDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={properties => ({\n                ...properties,\n                tooltip: properties.tooltip ? Tooltip : undefined,\n            })}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveCalendarCanvas\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={day => {\n                            logAction({\n                                type: 'click',\n                                label: `[day] ${day.day}: ${day.value}`,\n                                color: day.color,\n                                data: day,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default CalendarCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { boxAlignments } from '@nivo/core'\nimport { calendarDefaultProps as defaults } from '@nivo/calendar'\nimport { themeProperty, groupProperties } from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                day:   string, // format must be YYYY-MM-DD\n                value: number\n            }>\n            \\`\\`\\`\n            You can also add arbitrary data to this structure\n            to be used in tooltips or event handlers.\n        `,\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'from',\n        group: 'Base',\n        help: 'start date',\n        type: 'string | Date',\n        required: true,\n    },\n    {\n        key: 'to',\n        group: 'Base',\n        help: 'end date',\n        type: 'string | Date',\n        required: true,\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative of\n            the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative of\n            the component \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'direction',\n        help: 'defines calendar layout direction.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.direction,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'align',\n        help: 'defines how calendar should be aligned inside chart container.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.align,\n        controlType: 'boxAnchor',\n        group: 'Base',\n        controlOptions: {\n            choices: boxAlignments.map(align => ({\n                label: align,\n                value: align,\n            })),\n        },\n    },\n    {\n        key: 'minValue',\n        help: 'Minimum value.',\n        description: `\n            Minimum value. If 'auto', will pick the lowest value\n            in the provided data set.\n            Should be overriden if your data set does not contain\n            desired lower bound value.\n        `,\n        required: false,\n        defaultValue: defaults.minValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 0,\n            min: -300,\n            max: 300,\n        },\n    },\n    {\n        key: 'maxValue',\n        help: 'Maximum value.',\n        description: `\n            Maximum value. If 'auto', will pick the highest value\n            in the provided data set.\n            Should be overriden if your data set does not contain\n            desired higher bound value.\n        `,\n        required: false,\n        defaultValue: defaults.maxValue,\n        type: `number | 'auto'`,\n        controlType: 'switchableRange',\n        group: 'Base',\n        controlOptions: {\n            disabledValue: 'auto',\n            defaultValue: 100,\n            min: 0,\n            max: 600,\n        },\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        group: 'Style',\n        help: 'Cell colors.',\n        description: `\n            An array of colors to be used in conjunction with\n            \\`domain\\` to compute days' color.\n            It applies to days having a value defined, otherwise,\n            \\`emptyColor\\` will be used.\n        `,\n        type: 'string[]',\n        required: false,\n        defaultValue: defaults.colors,\n    },\n    {\n        key: 'emptyColor',\n        help: 'color to use to fill days without available value.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.emptyColor,\n        controlType: 'colorPicker',\n        group: 'Style',\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    // Years\n    {\n        key: 'yearSpacing',\n        help: 'define spacing between each year row/column depending on the direction.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.yearSpacing,\n        controlType: 'range',\n        group: 'Years',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 160,\n            step: 5,\n        },\n    },\n    {\n        key: 'yearLegend',\n        group: 'Years',\n        help: `can be used to customize years label, returns 'YYYY' by default.`,\n        type: '(year: number) => string | number',\n        required: false,\n    },\n    {\n        key: 'yearLegendPosition',\n        help: 'defines year legends position.',\n        type: `'before' | 'after'`,\n        required: false,\n        defaultValue: defaults.yearLegendPosition,\n        controlType: 'radio',\n        group: 'Years',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'yearLegendOffset',\n        help: 'define offset from year edge to its label.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.yearLegendOffset,\n        controlType: 'range',\n        group: 'Years',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    // Months\n    {\n        key: 'monthSpacing',\n        help: 'define spacing between each month row/column depending on the direction.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.monthSpacing,\n        controlType: 'range',\n        group: 'Months',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 160,\n            step: 5,\n        },\n    },\n    {\n        key: 'monthBorderWidth',\n        flavors: ['svg', 'api'],\n        help: 'width of month borders.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.monthBorderWidth,\n        controlType: 'lineWidth',\n        group: 'Months',\n    },\n    {\n        key: 'monthBorderColor',\n        flavors: ['svg', 'api'],\n        help: 'color to use for months border.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.monthBorderColor,\n        controlType: 'colorPicker',\n        group: 'Months',\n    },\n    {\n        key: 'monthLegend',\n        help: `can be used to customize months label, returns abbreviated month name (english) by default. This can be used to use a different language`,\n        type: '(year: number, month: number, date: Date) => string | number',\n        required: false,\n        group: 'Months',\n    },\n    {\n        key: 'monthLegendPosition',\n        help: 'defines month legends position.',\n        type: `'before' | 'after'`,\n        required: false,\n        defaultValue: defaults.monthLegendPosition,\n        controlType: 'radio',\n        group: 'Months',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'monthLegendOffset',\n        help: 'define offset from month edge to its label.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.monthLegendOffset,\n        controlType: 'range',\n        group: 'Months',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 36,\n        },\n    },\n    // Days\n    {\n        key: 'daySpacing',\n        help: 'define spacing between each day cell.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.daySpacing,\n        controlType: 'range',\n        group: 'Days',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'dayBorderWidth',\n        help: 'width of days border.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.dayBorderWidth,\n        controlType: 'lineWidth',\n        group: 'Days',\n    },\n    {\n        key: 'dayBorderColor',\n        help: 'color to use for days border.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.dayBorderColor,\n        controlType: 'colorPicker',\n        group: 'Days',\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg', 'canvas'],\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: 'onClick handler, it receives clicked day data and mouse event.',\n        type: '(day, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation, it must return a valid HTML\n            element and will receive the following data:\n            \\`\\`\\`\n            {\n                day:   string,\n                date:  {Date},\n                value: number,\n                color: string,\n                x:     number,\n                y:     number,\n                size:  number\n            }\n            \\`\\`\\`\n            You can also customize the tooltip style\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        flavors: ['svg', 'canvas'],\n        help: 'Showcase custom tooltip.',\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n]\n\nexport const groups = groupProperties(props)\n","var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    background: #333;\n    padding: 10px;\n    border-radius: 4px;\n    grid-template-columns: 40px 1fr;\n    grid-column-gap: 12px;\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\n\nconst CustomTooltip = day => {\n    return (\n        <TooltipWrapper style={{ color: day.color }}>\n            <TooltipKey>day</TooltipKey>\n            <span>{day.day}</span>\n            <TooltipKey>value</TooltipKey>\n            <span>{day.value}</span>\n            <TooltipKey>x</TooltipKey>\n            <span>{day.x}</span>\n            <TooltipKey>y</TooltipKey>\n            <span>{day.y}</span>\n            <TooltipKey>size</TooltipKey>\n            <span>{day.size}</span>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n    },\n    {\n        exclude: ['custom tooltip example'],\n    }\n)\n"],"sourceRoot":""}