"use strict";(self.webpackChunknivo_website=self.webpackChunknivo_website||[]).push([[2413],{63470:function(e,o,r){var t=r(62370);o.Z=(0,t.h8)({valueFormat:t.Ld,dotLabel:function(e){return"p => `${p.key}: ${p.value}`"===e?function(e){return e.key+": "+e.value}:"p => `${p.index}: ${p.value}`"===e?function(e){return e.index+": "+e.value}:e}})},31312:function(e,o,r){r.d(o,{X:function(){return s}});var t=r(79201),a=r(52770),n=r(59873),l=r(80169),i=[{key:"data",group:"Base",type:"Datum[]",required:!0,help:"Chart data.",description:"\n            For example, given this config:\n            ```\n            [\n                { language: 'javascript', john: 12, sarah: 32, bob: 27 },\n                { language: 'golang', john: 25, sarah: 15, bob: 3 },\n                { language: 'python', john: 5, sarah: 22, bob: 31 },\n                { language: 'java', john: 19, sarah: 17, bob: 9 }\n            ]\n            keys: ['john', 'sarah', 'bob']\n            indexBy: 'language'\n            ```\n            We'll have a radar chart representing programing\n            skills for each user by language\n            (3 layers and 4 dimensions).\n        ",flavors:["svg","api"]},{key:"indexBy",group:"Base",type:"string",required:!0,help:"Key to use to index the data.",description:"\n            Key to use to index the data, this key\n            must exist in each data item.\n        ",flavors:["svg","api"]},{key:"keys",group:"Base",type:"string[]",required:!0,help:"Keys to use to determine each serie.",description:"\n            Keys to use to determine each serie.\n            Those keys should exist in each data item.\n        ",flavors:["svg","api"]},{key:"maxValue",group:"Base",type:"number | 'auto'",required:!1,help:"Maximum value.",description:"\n            Maximum value, if 'auto',\n            will use max value from\n            the provided data.\n        ",flavors:["svg","api"],defaultValue:n.XB.maxValue,controlType:"switchableRange",controlOptions:{disabledValue:"auto",defaultValue:200,min:0,max:1e3}},{key:"valueFormat",group:"Base",type:"string | (value: number) => string",required:!1,help:"Optional formatter for values.",description:"\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        ",flavors:["svg","api"],controlType:"valueFormat"},{key:"curve",group:"Base",type:"string",required:!1,help:"Curve interpolation.",description:"\n            Defines the curve factory to use\n            for the line generator.\n        ",defaultValue:n.XB.curve,flavors:["svg","api"],controlType:"choices",controlOptions:{choices:a.nL.map((function(e){return{label:e,value:e}}))}},{key:"width",group:"Base",type:"number",required:!0,help:"Chart width.",description:"\n            not required if using\n            `<ResponsiveRadar/>`.\n        ",flavors:["svg","api"],enableControlForFlavors:["api"],controlType:"range",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"height",group:"Base",type:"number",required:!0,help:"Chart height.",description:"\n            not required if using\n            `<ResponsiveRadar/>`.\n        ",flavors:["svg","api"],enableControlForFlavors:["api"],controlType:"range",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"margin",group:"Base",help:"Chart margin.",type:"object",required:!1,flavors:["svg","api"],controlType:"margin"},(0,l.JR)(["svg","api"]),{key:"colors",group:"Style",type:"string | Function | string[]",required:!1,help:"Defines how to compute colors.",defaultValue:n.XB.colors,flavors:["svg","api"],controlType:"ordinalColors"},{key:"fillOpacity",group:"Style",type:"number",required:!1,help:"Shape fill opacity.",flavors:["svg","api"],defaultValue:n.XB.fillOpacity,controlType:"opacity"},{key:"blendMode",group:"Style",type:"string",required:!1,help:"Defines CSS [mix-blend-mode](https://developer.mozilla.org/fr/docs/Web/CSS/mix-blend-mode) for shapes.",flavors:["svg"],defaultValue:n.XB.blendMode,controlType:"blendMode"},{key:"borderWidth",group:"Style",type:"number",required:!1,help:"Shape border width.",flavors:["svg","api"],defaultValue:n.XB.borderWidth,controlType:"lineWidth"},{key:"borderColor",group:"Style",type:"string | object | Function",required:!1,help:"Method to compute border color.",flavors:["svg","api"],defaultValue:n.XB.borderColor,controlType:"inheritedColor"},{key:"gridLevels",group:"Grid",type:"number",required:!1,help:"Number of levels to display for grid",flavors:["svg","api"],defaultValue:n.XB.gridLevels,controlType:"range",controlOptions:{min:1,max:12}},{key:"gridShape",group:"Grid",type:"string",required:!1,help:"Determine shape of the grid.",flavors:["svg","api"],defaultValue:n.XB.gridShape,controlType:"choices",controlOptions:{choices:[{label:"circular",value:"circular"},{label:"linear",value:"linear"}]}},{key:"gridLabel",group:"Grid",type:"Function",required:!1,help:"Grid label.",description:"\n            An optional function to override label rendering.\n            It must return a **valid SVG element** and will\n            receive the following props:\n            ```\n            {\n                id:     string\n                # this can be used to determine the label layout,\n                # if the element should be centered, left/right aligned\n                anchor: 'start' | 'middle' | 'end'\n                # angle in degrees\n                angle:  number\n            }\n            ```\n            The component will be wrapped inside\n            a `g` element **already positioned**\n            where the default label would have been placed.\n        ",flavors:["svg"]},{key:"gridLabelOffset",group:"Grid",type:"number",required:!1,help:"Label offset from outer radius.",flavors:["svg","api"],defaultValue:n.XB.gridLabelOffset,controlType:"range",controlOptions:{unit:"px",min:0,max:60}},{key:"enableDots",group:"Dots",type:"boolean",required:!1,help:"Enable/disable dots.",flavors:["svg","api"],defaultValue:n.XB.enableDots,controlType:"switch"},{key:"dotSymbol",group:"Dots",type:"Function",required:!1,help:"Overrides default dot circle.",description:"\n            Overrides default dot circle.\n            The function will receive `size`,\n            `color`, `borderWidth` and `borderColor`\n            props and must return a valid SVG element.\n        ",flavors:["svg"]},{key:"dotSize",group:"Dots",type:"number",required:!1,help:"Size of the dots.",flavors:["svg","api"],defaultValue:n.XB.dotSize,controlType:"range",controlOptions:{unit:"px",min:2,max:64}},{key:"dotColor",type:"string | object | Function",required:!1,help:"Method to compute dots color.",flavors:["svg","api"],defaultValue:n.XB.dotColor,controlType:"inheritedColor",group:"Dots"},{key:"dotBorderWidth",group:"Dots",type:"number",required:!1,help:"Width of the dots border.",flavors:["svg","api"],defaultValue:n.XB.dotBorderWidth,controlType:"range",controlOptions:{unit:"px",min:0,max:10}},{key:"dotBorderColor",group:"Dots",type:"string | object | Function",required:!1,help:"Method to compute dots border color.",flavors:["svg","api"],defaultValue:n.XB.dotBorderColor,controlType:"inheritedColor"},{key:"enableDotLabel",group:"Dots",help:"Enable/disable dots label.",type:"boolean",required:!1,flavors:["svg","api"],defaultValue:n.XB.enableDotLabel,controlType:"switch"},{key:"dotLabel",group:"Dots",type:"string | ((point: PointData) => string | number)",required:!1,help:"Dot label.",description:"Property to use to determine dot label. If a function is provided, it will receive current value and serie and must return a label.",flavors:["svg"],defaultValue:n.XB.dotLabel,controlType:"choices",controlOptions:{choices:["value","formattedValue","index","key","p => `${p.key}: ${p.value}`","p => `${p.index}: ${p.value}`"].map((function(e){return{label:e,value:e}}))}},{key:"dotLabelYOffset",group:"Dots",type:"number",required:!1,help:"Label Y offset from dot shape.",flavors:["svg","api"],defaultValue:n.XB.dotLabelYOffset,controlType:"range",controlOptions:{unit:"px",min:-24,max:24}},{key:"layers",group:"Customization",help:"Defines the order of layers and add custom layers.",description:"\n            You can also use this to insert extra layers\n            to the chart, the extra layer should be a component.\n            \n            The layer function which will receive the chart's\n            context & computed data and must return a valid SVG element.\n        ",required:!1,type:"(RadarLayerId | FunctionComponent<RadarCustomLayerProps>)[]",flavors:["svg"],defaultValue:n.XB.layers},{key:"isInteractive",group:"Interactivity",type:"boolean",required:!1,help:"Enable/disable interactivity.",flavors:["svg"],defaultValue:n.XB.isInteractive,controlType:"switch"},{key:"sliceTooltip",group:"Interactivity",type:"FunctionComponent<RadarSliceTooltipProps>",required:!1,help:"Override default slice tooltip.",flavors:["svg"]}].concat((0,t.Z)((0,l.$j)(["svg"],n.XB,"react-spring"))),s=(0,l.R2)(i)},62370:function(e,o,r){r.d(o,{h8:function(){return i},h6:function(){return s},Ld:function(){return u}});var t=r(48159),a=r.n(t),n=r(76744),l=r.n(n),i=function(e,o){var r=(void 0===o?{}:o).exclude,t=void 0===r?[]:r;return function(o,r){void 0===r&&(r={});var n={};return Object.keys(o).forEach((function(t){e[t]&&(n[t]=e[t](o[t],o,r))})),Object.assign({},a()(o,t),n)}},s=function(e){return function(o,r){return r["axis"+l()(e)].enable?a()(o,["enable"]):null}},u=function(e){var o=e.format;return e.enabled?o:void 0}},75285:function(e,o,r){r.r(o);var t=r(27378),a=r(38681),n=r(59873),l=r(69857),i=r(44063),s=r(63470),u=r(31312),d={indexBy:"taste",maxValue:"auto",valueFormat:{format:">-.2f",enabled:!0},margin:{top:70,right:80,bottom:40,left:80},curve:"linearClosed",borderWidth:2,borderColor:{from:"color"},gridLevels:5,gridShape:"circular",gridLabelOffset:36,enableDots:n.XB.enableDots,dotSize:10,dotColor:{theme:"background"},dotBorderWidth:2,dotBorderColor:n.XB.dotBorderColor,enableDotLabel:n.XB.enableDotLabel,dotLabel:n.XB.dotLabel,dotLabelYOffset:n.XB.dotLabelYOffset,colors:{scheme:"nivo"},fillOpacity:.25,blendMode:"multiply",animate:!0,motionConfig:"wobbly",isInteractive:!0,legends:[{anchor:"top-left",direction:"column",translateX:-50,translateY:-40,itemWidth:80,itemHeight:20,itemTextColor:"#999",symbolSize:12,symbolShape:"circle",onClick:function(e){alert(JSON.stringify(e,null,"    "))},effects:[{on:"hover",style:{itemTextColor:"#000"}}]}]};o.default=function(){return t.createElement(l.T,{name:"Radar",meta:i.F,icon:"radar",flavors:i.K,currentFlavor:"svg",properties:u.X,initialProperties:d,defaultProperties:n.XB,propertiesMapper:s.Z,codePropertiesMapper:function(e,o){return Object.assign({keys:o.keys},e)},generateData:a.zn,getTabData:function(e){return e.data}},(function(e,o,r){return t.createElement(n.qQ,Object.assign({data:o.data,keys:o.keys},e,{theme:r}))}))}}}]);
//# sourceMappingURL=component---src-pages-radar-index-tsx-a21b010d31c0db086ff6.js.map