{"version":3,"file":"component---src-pages-radar-index-tsx-51e825835f2a20291155.js","mappings":"0MAgBMA,EAAwC,CAC1CC,QAAS,QACTC,SAAU,OACVC,YAAa,CAAEC,OAAQ,QAASC,SAAS,GAEzCC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAGVC,MAAO,eAEPC,YAAa,EACbC,YAAa,CAAEC,KAAM,SAErBC,WAAY,EACZC,UAAW,WACXC,gBAAiB,GAEjBC,WAAYC,EAAAA,GAAAA,WACZC,QAAS,GACTC,SAAU,CAAEC,MAAO,cACnBC,eAAgB,EAChBC,eAAgBL,EAAAA,GAAAA,eAChBM,eAAgBN,EAAAA,GAAAA,eAChBO,SAAUP,EAAAA,GAAAA,SACVQ,gBAAiBR,EAAAA,GAAAA,gBAEjBS,OAAQ,CAAEC,OAAQ,QAClBC,YAAa,IACbC,UAAW,WAEXC,SAAS,EACTC,aAAc,SAEdC,eAAe,EAEfC,QAAS,CACL,CACIC,OAAQ,WACRC,UAAW,SACXC,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,WAAY,GACZC,cAAe,OACfC,WAAY,GACZC,YAAa,SACbC,QAAS,SAAAC,GACLC,MAAMC,KAAKC,UAAUH,EAAG,KAAM,UAElCI,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHV,cAAe,aAkCvC,UA1Bc,kBACV,gBAAC,IAAD,CACIW,KAAK,QACLC,KAAMA,EAAAA,EACNC,KAAK,QACLC,QAASF,EAAAA,EACTG,cAAc,MACdC,WAAYC,EAAAA,EACZ3D,kBAAmBA,EACnB4D,kBAAmBzC,EAAAA,GACnB0C,iBAAkBC,EAAAA,EAClBC,qBAAsB,SAACL,EAAiBM,GAAlB,sBAClBC,KAAMD,EAAKC,MACRP,IAEPQ,aAAcC,EAAAA,GACdC,WAAY,SAAAJ,GAAI,OAAIA,EAAKA,QAExB,SAACN,EAAYM,EAAM1C,GAChB,OACI,gBAAC,KAAD,eAAiB0C,KAAMA,EAAKA,KAAMC,KAAMD,EAAKC,MAAUP,EAAvD,CAAmEpC,MAAOA","sources":["webpack://nivo-website/./src/pages/radar/index.tsx"],"sourcesContent":["import React from 'react'\nimport { generateWinesTastes } from '@nivo/generators'\nimport { ResponsiveRadar, RadarSvgProps, svgDefaultProps } from '@nivo/radar'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/radar/meta.yml'\nimport mapper from '../../data/components/radar/mapper'\nimport { groups } from '../../data/components/radar/props'\n\ntype MappedRadarProps = Omit<RadarSvgProps<any>, 'data' | 'keys' | 'width' | 'height'>\ntype UnmappedRadarProps = Omit<MappedRadarProps, 'valueFormat'> & {\n    valueFormat: {\n        format: string\n        enabled: boolean\n    }\n}\n\nconst initialProperties: UnmappedRadarProps = {\n    indexBy: 'taste',\n    maxValue: 'auto',\n    valueFormat: { format: '>-.2f', enabled: true },\n\n    margin: {\n        top: 70,\n        right: 80,\n        bottom: 40,\n        left: 80,\n    },\n\n    curve: 'linearClosed',\n\n    borderWidth: 2,\n    borderColor: { from: 'color' },\n\n    gridLevels: 5,\n    gridShape: 'circular',\n    gridLabelOffset: 36,\n\n    enableDots: svgDefaultProps.enableDots,\n    dotSize: 10,\n    dotColor: { theme: 'background' },\n    dotBorderWidth: 2,\n    dotBorderColor: svgDefaultProps.dotBorderColor,\n    enableDotLabel: svgDefaultProps.enableDotLabel,\n    dotLabel: svgDefaultProps.dotLabel,\n    dotLabelYOffset: svgDefaultProps.dotLabelYOffset,\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.25,\n    blendMode: 'multiply',\n\n    animate: true,\n    motionConfig: 'wobbly',\n\n    isInteractive: true,\n\n    legends: [\n        {\n            anchor: 'top-left',\n            direction: 'column',\n            translateX: -50,\n            translateY: -40,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemTextColor: '#999',\n            symbolSize: 12,\n            symbolShape: 'circle',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Radar = () => (\n    <ComponentTemplate<UnmappedRadarProps, MappedRadarProps, any>\n        name=\"Radar\"\n        meta={meta.Radar}\n        icon=\"radar\"\n        flavors={meta.flavors}\n        currentFlavor=\"svg\"\n        properties={groups}\n        initialProperties={initialProperties}\n        defaultProperties={svgDefaultProps}\n        propertiesMapper={mapper}\n        codePropertiesMapper={(properties: any, data: any) => ({\n            keys: data.keys,\n            ...properties,\n        })}\n        generateData={generateWinesTastes}\n        getTabData={data => data.data}\n    >\n        {(properties, data, theme) => {\n            return (\n                <ResponsiveRadar data={data.data} keys={data.keys} {...properties} theme={theme} />\n            )\n        }}\n    </ComponentTemplate>\n)\n\nexport default Radar\n"],"names":["initialProperties","indexBy","maxValue","valueFormat","format","enabled","margin","top","right","bottom","left","curve","borderWidth","borderColor","from","gridLevels","gridShape","gridLabelOffset","enableDots","svgDefaultProps","dotSize","dotColor","theme","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","colors","scheme","fillOpacity","blendMode","animate","motionConfig","isInteractive","legends","anchor","direction","translateX","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","onClick","d","alert","JSON","stringify","effects","on","style","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","codePropertiesMapper","data","keys","generateData","generateWinesTastes","getTabData"],"sourceRoot":""}