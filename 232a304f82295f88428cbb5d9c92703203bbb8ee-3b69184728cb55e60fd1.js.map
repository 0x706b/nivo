{"version":3,"sources":["webpack:///../node_modules/lodash/_copySymbols.js","webpack:///../node_modules/lodash/_baseClone.js","webpack:///../node_modules/lodash/_initCloneArray.js","webpack:///../node_modules/lodash/_cloneDataView.js","webpack:///../node_modules/lodash/_cloneRegExp.js","webpack:///../node_modules/lodash/_parent.js","webpack:///../node_modules/lodash/_baseAssignIn.js","webpack:///../node_modules/lodash/_getSymbolsIn.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../src/SunburstLabels.tsx","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../src/SunburstArc.tsx","webpack:///../src/hooks.ts","webpack:///../src/props.ts","webpack:///../src/SunburstTooltip.tsx","webpack:///../src/Sunburst.tsx","webpack:///../src/ResponsiveSunburst.tsx","webpack:///../node_modules/lodash/isMap.js","webpack:///../node_modules/lodash/_copySymbolsIn.js","webpack:///../node_modules/lodash/_baseIsMap.js","webpack:///../node_modules/lodash/isSet.js","webpack:///./src/data/components/sunburst/props.js","webpack:///../node_modules/lodash/_cloneSymbol.js","webpack:///../node_modules/lodash/_baseUnset.js","webpack:///../node_modules/lodash/omit.js","webpack:///./src/data/components/sunburst/mapper.js","webpack:///../node_modules/lodash/_arrayEach.js","webpack:///../node_modules/lodash/_customOmitClone.js","webpack:///../node_modules/lodash/_initCloneByTag.js","webpack:///./src/lib/settings.js","webpack:///../node_modules/lodash/_baseAssign.js","webpack:///../node_modules/lodash/cloneDeep.js","webpack:///../node_modules/lodash/_getAllKeysIn.js","webpack:///../node_modules/lodash/_baseIsSet.js"],"names":["copyObject","getSymbols","module","exports","source","object","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","keys","cloneableTags","baseClone","value","bitmask","customizer","key","stack","result","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","forEach","subValue","add","keysFunc","keysIn","props","hasOwnProperty","Object","prototype","array","length","constructor","call","index","input","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","baseGet","baseSlice","path","arrayPush","getPrototype","stubArray","getSymbolsIn","getOwnPropertySymbols","_objectWithoutProperties","excluded","i","target","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","getOwnPropertyDescriptors","defineProperties","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","toString","slice","name","from","test","_slicedToArray","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","unsupportedIterableToArray","TypeError","nonIterableRest","sliceStyle","pointerEvents","SunburstLabels","label","nodes","skipAngle","textColor","theme","useTheme","getTextColor","useInheritedColor","useMotionConfig","animate","springConfig","getLabel","useMemo","getLabelGenerator","labelNodes","filteredNodes","node","innerRadius","Math","centerRadius","startAngle","endAngle","angle","angleDeg","radiansToDegrees","middleAngle","position","positionFromAngle","data","transition","useTransition","initial","opacity","transform","enter","update","leave","config","immediate","style","textAnchor","fill","_toConsumableArray","arrayWithoutHoles","iter","iterableToArray","nonIterableSpread","SunburstArc","arcGenerator","borderWidth","borderColor","handlers","isInteractive","onClickHandler","onClick","onMouseEnterHandler","onMouseEnter","onMouseLeaveHandler","onMouseLeave","onMouseMoveHandler","onMouseMove","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleTooltip","useCallback","createElement","useEventHandlers","useSpring","x0","x1","y0","y1","d","to","stroke","strokeWidth","defaultProps","id","cornerRadius","layers","colors","scheme","childColor","role","enableSliceLabels","sliceLabel","sliceLabelsSkipAngle","sliceLabelsTextColor","motionConfig","defs","color","formattedValue","enableChip","InnerSunburst","valueFormat","partialMargin","margin","width","height","useDimensions","innerHeight","innerWidth","outerHeight","outerWidth","radius","centerX","centerY","getColor","useOrdinalColorScale","getChildColor","getId","getAccessorFor","getValue","formatValue","useValueFormatter","partition","d3Partition","hierarchy","d3Hierarchy","descendants","cloneDeep","total","pick","descendant","percentage","depth","parent","acc","computed","useSunburst","boundDefs","bindDefs","dataKey","colorKey","targetKey","layerById","slices","sliceLabels","layerContext","useSunburstLayerContext","layer","Sunburst","otherProps","ResponsiveSunburst","baseIsMap","baseUnary","nodeUtil","nodeIsMap","isObjectLike","baseIsSet","nodeIsSet","enableControlForFlavors","description","help","type","required","controlType","group","controlOptions","unit","min","max","step","defaultValue","defsProperties","flavors","motionProperties","groups","groupProperties","symbolProto","symbolValueOf","valueOf","symbol","castPath","last","toKey","arrayMap","baseUnset","customOmitClone","flatRest","omit","paths","CLONE_DEEP_FLAG","TooltipWrapper","styled","div","TooltipKey","span","TooltipValue","CustomTooltip","round","settingsMapper","values","patternLinesDef","background","rotation","lineWidth","spacing","match","exclude","iteratee","isPlainObject","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","mapping","settings","options","overrides","mapAxis","upperFirst","enable","mapFormat","format","enabled","baseGetAllKeys"],"mappings":"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","file":"232a304f82295f88428cbb5d9c92703203bbb8ee-3b69184728cb55e60fd1.js","sourcesContent":["var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useMemo } from 'react'\nimport {\n    // @ts-ignore\n    midAngle,\n    // @ts-ignore\n    positionFromAngle,\n    // @ts-ignore\n    getLabelGenerator,\n    radiansToDegrees,\n    useTheme,\n    useMotionConfig,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { animated, useTransition } from 'react-spring'\nimport { SunburstLabelProps } from './types'\n\nconst sliceStyle = {\n    pointerEvents: 'none',\n} as const\n\nexport const SunburstLabels = <RawDatum,>({\n    label,\n    nodes,\n    skipAngle = 0,\n    textColor,\n}: SunburstLabelProps<RawDatum>) => {\n    const theme = useTheme()\n    const getTextColor = useInheritedColor(textColor, theme)\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const getLabel = useMemo(() => getLabelGenerator(label), [label])\n\n    const labelNodes = useMemo(() => {\n        const filteredNodes = nodes.filter(node => node.depth === 1)\n        const [node] = filteredNodes\n        const innerRadius = Math.sqrt(node.y0)\n        const outerRadius = Math.sqrt(node.y1)\n        const centerRadius = innerRadius + (outerRadius - innerRadius) / 2\n\n        return filteredNodes\n            .map(node => {\n                const startAngle = node.x0\n                const endAngle = node.x1\n                const angle = Math.abs(endAngle - startAngle)\n                const angleDeg = radiansToDegrees(angle)\n\n                const middleAngle = midAngle({ startAngle, endAngle }) - Math.PI / 2\n                const position = positionFromAngle(middleAngle, centerRadius)\n\n                return { angle, angleDeg, data: node.data, endAngle, middleAngle, position }\n            })\n            .filter(node => node.angleDeg > skipAngle)\n    }, [nodes, skipAngle])\n\n    const transition = useTransition(labelNodes, {\n        key: node => node.data.id,\n        initial: node => ({\n            opacity: 1,\n            transform: `translate(${node.position.x},${node.position.y})`,\n        }),\n        from: node => ({\n            opacity: 0,\n            transform: `translate(${node.position.x},${node.position.y})`,\n        }),\n        enter: node => ({\n            opacity: 1,\n            transform: `translate(${node.position.x},${node.position.y})`,\n        }),\n        update: node => ({\n            opacity: 1,\n            transform: `translate(${node.position.x},${node.position.y})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition(({ opacity, transform }, node) => (\n                <animated.g\n                    key={node.data.id}\n                    transform={transform}\n                    style={{ ...sliceStyle, opacity }}\n                >\n                    <text\n                        textAnchor=\"middle\"\n                        style={{\n                            ...theme.labels.text,\n                            fill: getTextColor(node.data),\n                        }}\n                    >\n                        {getLabel(node.data)}\n                    </text>\n                </animated.g>\n            ))}\n        </>\n    )\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\nimport { animated, to, useSpring } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { useEventHandlers } from './hooks'\nimport { SunburstArcProps } from './types'\n\nexport const SunburstArc = <RawDatum,>({\n    node,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    ...props\n}: SunburstArcProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const handlers = useEventHandlers({ data: node.data, ...props })\n\n    const { x0, x1, y0, y1 } = useSpring({\n        x0: node.x0,\n        x1: node.x1,\n        y0: node.y0,\n        y1: node.y1,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={to([x0, x1, y0, y1], (x0, x1, y0, y1) => arcGenerator({ ...node, x0, x1, y0, y1 }))}\n            fill={node.data.fill ?? node.data.color}\n            stroke={borderColor}\n            strokeWidth={borderWidth}\n            {...handlers}\n        />\n    )\n}\n","import pick from 'lodash/pick'\nimport sortBy from 'lodash/sortBy'\nimport cloneDeep from 'lodash/cloneDeep'\nimport React, { createElement, useCallback, useMemo } from 'react'\nimport { getAccessorFor, useTheme, useValueFormatter } from '@nivo/core'\nimport { arc, Arc } from 'd3-shape'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { partition as d3Partition, hierarchy as d3Hierarchy } from 'd3-hierarchy'\nimport {\n    CommonProps,\n    ComputedDatum,\n    DataProps,\n    NormalizedDatum,\n    MouseEventHandlers,\n    SunburstCustomLayerProps,\n} from './types'\n\ntype MaybeColor = { color?: string }\n\nexport const useEventHandlers = <RawDatum>({\n    data,\n    isInteractive,\n    onClick: onClickHandler,\n    onMouseEnter: onMouseEnterHandler,\n    onMouseLeave: onMouseLeaveHandler,\n    onMouseMove: onMouseMoveHandler,\n    tooltip,\n}: Pick<CommonProps<RawDatum>, 'isInteractive' | 'tooltip'> &\n    MouseEventHandlers<RawDatum, SVGPathElement> & {\n        data: NormalizedDatum<RawDatum>\n    }) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleTooltip = useCallback(\n        (event: React.MouseEvent<SVGPathElement>) =>\n            showTooltipFromEvent(createElement(tooltip, data), event),\n        [data, showTooltipFromEvent, tooltip]\n    )\n\n    const onClick = useCallback(\n        (event: React.MouseEvent<SVGPathElement>) => onClickHandler?.(data, event),\n        [data, onClickHandler]\n    )\n    const onMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGPathElement>) => {\n            onMouseEnterHandler?.(data, event)\n            handleTooltip(event)\n        },\n        [data, handleTooltip, onMouseEnterHandler]\n    )\n    const onMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGPathElement>) => {\n            onMouseLeaveHandler?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeaveHandler]\n    )\n    const onMouseMove = useCallback(\n        (event: React.MouseEvent<SVGPathElement>) => {\n            onMouseMoveHandler?.(data, event)\n            handleTooltip(event)\n        },\n        [data, handleTooltip, onMouseMoveHandler]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) {\n            return {\n                onClick: undefined,\n                onMouseEnter: undefined,\n                onMouseLeave: undefined,\n                onMouseMove: undefined,\n            }\n        }\n\n        return {\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseMove,\n        }\n    }, [isInteractive, onClick, onMouseEnter, onMouseLeave, onMouseMove])\n}\n\nexport const useSunburst = <RawDatum extends MaybeColor>({\n    childColor,\n    colors,\n    cornerRadius,\n    data,\n    id,\n    value,\n    valueFormat,\n    radius,\n}: {\n    childColor: CommonProps<RawDatum>['childColor']\n    colors: CommonProps<RawDatum>['colors']\n    cornerRadius: CommonProps<RawDatum>['cornerRadius']\n    data: DataProps<RawDatum>['data']\n    id: NonNullable<DataProps<RawDatum>['id']>\n    radius: number\n    value: NonNullable<DataProps<RawDatum>['value']>\n    valueFormat: DataProps<RawDatum>['valueFormat']\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<NormalizedDatum<RawDatum>>(colors, 'id')\n    const getChildColor = useInheritedColor(childColor, theme) as (\n        datum: NormalizedDatum<RawDatum>\n    ) => string\n\n    const getId = useMemo(() => getAccessorFor(id), [id])\n    const getValue = useMemo(() => getAccessorFor(value), [value])\n\n    const formatValue = useValueFormatter(valueFormat)\n\n    const nodes = useMemo(() => {\n        const partition = d3Partition<RawDatum>().size([2 * Math.PI, radius * radius])\n        const hierarchy = d3Hierarchy(data).sum(getValue)\n        const descendants = partition(cloneDeep(hierarchy)).descendants()\n        const total = hierarchy.value ?? 0\n\n        return sortBy(descendants, 'depth').reduce<Array<ComputedDatum<RawDatum>>>(\n            (acc, descendant) => {\n                // Maybe the types are wrong from d3, but value prop is always present, but types make it optional\n                const node = {\n                    value: 0,\n                    ...pick(descendant, [\n                        'x0',\n                        'y0',\n                        'x1',\n                        'y1',\n                        'depth',\n                        'height',\n                        'parent',\n                        'value',\n                    ]),\n                }\n\n                const { value } = node\n                const id = getId(descendant.data)\n                const percentage = (100 * value) / total\n                const data = {\n                    color: descendant.data.color,\n                    data: descendant.data,\n                    depth: node.depth,\n                    formattedValue: valueFormat ? formatValue(value) : `${percentage.toFixed(2)}%`,\n                    id,\n                    percentage,\n                    value,\n                }\n\n                const parent = acc.find(\n                    computed => node.parent && computed.data.id === getId(node.parent.data)\n                )\n\n                const color =\n                    node.depth === 1 || childColor === 'noinherit'\n                        ? getColor(data)\n                        : parent\n                        ? getChildColor(parent.data)\n                        : descendant.data.color\n\n                return [...acc, { ...node, data: { ...data, color, parent } }]\n            },\n            []\n        )\n    }, [\n        radius,\n        data,\n        getValue,\n        getId,\n        valueFormat,\n        formatValue,\n        childColor,\n        getColor,\n        getChildColor,\n    ])\n\n    const arcGenerator = useMemo(\n        () =>\n            arc<ComputedDatum<RawDatum>>()\n                .startAngle(d => d.x0)\n                .endAngle(d => d.x1)\n                .innerRadius(d => Math.sqrt(d.y0))\n                .outerRadius(d => Math.sqrt(d.y1))\n                .cornerRadius(cornerRadius),\n        [cornerRadius]\n    )\n\n    return { arcGenerator, nodes }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useSunburstLayerContext = <RawDatum>({\n    nodes,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n}: {\n    nodes: ComputedDatum<RawDatum>[]\n    arcGenerator: Arc<any, ComputedDatum<RawDatum>>\n    centerX: number\n    centerY: number\n    radius: number\n}): SunburstCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            nodes,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n        }),\n        [nodes, arcGenerator, centerX, centerY, radius]\n    )\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { SunburstTooltip } from './SunburstTooltip'\nimport { SunburstLayerId } from './types'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n\n    cornerRadius: 0,\n\n    layers: ['slices', 'sliceLabels'] as SunburstLayerId[],\n\n    colors: ({ scheme: 'nivo' } as unknown) as OrdinalColorScaleConfig,\n    borderWidth: 1,\n    borderColor: 'white',\n\n    childColor: { from: 'color' },\n    role: 'img',\n\n    // slices labels\n    enableSliceLabels: false,\n    sliceLabel: 'formattedValue',\n    sliceLabelsSkipAngle: 0,\n    sliceLabelsTextColor: { theme: 'labels.text.fill' },\n\n    isInteractive: true,\n    animate: false,\n    motionConfig: 'gentle',\n\n    defs: [],\n    fill: [],\n\n    tooltip: SunburstTooltip,\n}\n","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { NormalizedDatum } from './types'\n\nexport const SunburstTooltip = <RawDatum,>({\n    color,\n    id,\n    formattedValue,\n}: NormalizedDatum<RawDatum>) => (\n    <BasicTooltip id={id} value={formattedValue} enableChip={true} color={color} />\n)\n","import React, { Fragment, ReactNode, createElement, useMemo } from 'react'\n// @ts-ignore\nimport { Container, SvgWrapper, useDimensions, bindDefs } from '@nivo/core'\nimport { SunburstLabels } from './SunburstLabels'\nimport { SunburstArc } from './SunburstArc'\nimport { defaultProps } from './props'\nimport { useSunburst, useSunburstLayerContext } from './hooks'\nimport { SvgProps, SunburstLayerId, SunburstLayer } from './types'\n\nconst InnerSunburst = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n\n    layers = defaultProps.layers as SunburstLayer<RawDatum>[],\n\n    colors = defaultProps.colors,\n    childColor = defaultProps.childColor,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    cornerRadius = defaultProps.cornerRadius,\n\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor,\n\n    // slices labels\n    enableSliceLabels = defaultProps.enableSliceLabels,\n    sliceLabel = defaultProps.sliceLabel,\n    sliceLabelsSkipAngle = defaultProps.sliceLabelsSkipAngle,\n    sliceLabelsTextColor = defaultProps.sliceLabelsTextColor,\n\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    role = defaultProps.role,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    tooltip = defaultProps.tooltip,\n\n    // event handlers\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n}: SvgProps<RawDatum>) => {\n    const { innerHeight, innerWidth, margin, outerHeight, outerWidth } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { centerX, centerY, radius } = useMemo(() => {\n        const radius = Math.min(innerWidth, innerHeight) / 2\n\n        return { radius, centerX: innerWidth / 2, centerY: innerHeight / 2 }\n    }, [innerHeight, innerWidth])\n\n    const { arcGenerator, nodes } = useSunburst({\n        childColor,\n        colors,\n        cornerRadius,\n        data,\n        id,\n        radius,\n        value,\n        valueFormat,\n    })\n\n    const filteredNodes = useMemo(() => nodes.filter(node => node.depth > 0), [nodes])\n\n    const boundDefs = bindDefs(defs, nodes, fill, {\n        dataKey: 'data',\n        colorKey: 'data.color',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<SunburstLayerId, ReactNode> = {\n        slices: null,\n        sliceLabels: null,\n    }\n\n    if (layers.includes('slices')) {\n        layerById.slices = (\n            <g key=\"slices\" transform={`translate(${centerX},${centerY})`}>\n                {filteredNodes.map(node => (\n                    <SunburstArc<RawDatum>\n                        key={node.data.id}\n                        node={node}\n                        arcGenerator={arcGenerator}\n                        borderWidth={borderWidth}\n                        borderColor={borderColor}\n                        isInteractive={isInteractive}\n                        tooltip={tooltip}\n                        onClick={onClick}\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                        onMouseMove={onMouseMove}\n                    />\n                ))}\n            </g>\n        )\n    }\n\n    if (enableSliceLabels && layers.includes('sliceLabels')) {\n        layerById.sliceLabels = (\n            <SunburstLabels<RawDatum>\n                key=\"sliceLabels\"\n                nodes={nodes}\n                label={sliceLabel}\n                skipAngle={sliceLabelsSkipAngle}\n                textColor={sliceLabelsTextColor}\n            />\n        )\n    }\n\n    const layerContext = useSunburstLayerContext<RawDatum>({\n        nodes: filteredNodes,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            defs={boundDefs}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as SunburstLayerId] !== undefined) {\n                    return layerById[layer as SunburstLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Sunburst = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    ...otherProps\n}: SvgProps<RawDatum>) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme }}>\n        <InnerSunburst<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { Sunburst } from './Sunburst'\nimport { SvgProps } from './types'\n\nexport const ResponsiveSunburst = <RawDatum,>(\n    props: Omit<SvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: Required<Pick<SvgProps<RawDatum>, 'width' | 'height'>>) => (\n            <Sunburst width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { defaultProps } from '@nivo/sunburst'\nimport { groupProperties, defsProperties, motionProperties } from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveSunburst/>\\`.\n        `,\n        help: 'Chart width.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveSunburst/>\\`.\n        `,\n        help: 'Chart height.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'id',\n        group: 'Base',\n        help: 'Id accessor.',\n        description: `\n            define id accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            id (string | number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.id,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        help: 'Value accessor',\n        description: `\n            define value accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            value (number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.value,\n    },\n    {\n        key: 'colors',\n        help: 'Defines how to compute node color.',\n        required: false,\n        defaultValue: defaultProps.colors,\n        controlType: 'ordinalColors',\n        type: 'string | Function | string[]',\n        group: 'Base',\n    },\n    ...defsProperties('Style', ['svg', 'api']),\n    {\n        key: 'showcase pattern usage',\n        flavors: ['svg'],\n        help: 'Patterns.',\n        description: `\n            You can use \\`defs\\` and \\`fill\\` properties\n            to use patterns, see\n            [dedicated guide](self:/guides/patterns)\n            for further information.\n        `,\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Style',\n    },\n    {\n        key: 'childColor',\n        help: 'Defines how to compute child nodes color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.childColor,\n        controlType: 'inheritedColor',\n        group: 'Base',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Node border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Base',\n    },\n    {\n        key: 'cornerRadius',\n        help: 'Round node shape.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.cornerRadius,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 45,\n            step: 1,\n        },\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n\n            The layer component which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`Sunburst\\` component.\n\n            The context passed to layers has the following structure:\n\n            \\`\\`\\`\n            {\n                nodes:  ComputedDatum<RawDatum>[],\n                arcGenerator: Function\n                centerX:      number\n                centerY:      number\n                radius:       number\n            }\n            \\`\\`\\`\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaultProps.layers,\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        help: 'Enable/disable interactivity.',\n        type: '{boolean}',\n        required: false,\n        defaultValue: defaultProps.isInteractive,\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n    {\n        key: 'tooltip',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Tooltip custom component',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the following data:\n            \\`\\`\\`\n            {\n                id:         string | number,\n                value:      number,\n                depth:      number,\n                color:      string,\n                name:       string\n                loc:        number\n                percentage: number\n                // the parent datum\n                ancestor:   object\n            }\n            \\`\\`\\`\n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'Showcase custom tooltip component.',\n        type: 'boolean',\n        controlType: 'switch',\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'onClick handler',\n        description: `\n            onClick handler, will receive node data as first argument\n            & event as second one. The node data has the following shape:\n\n            \\`\\`\\`\n            {\n                id:         string | number,\n                value:      number,\n                depth:      number,\n                color:      string,\n                name:       string\n                loc:        number\n                percentage: number\n                // the parent datum\n                ancestor:   object\n            }\n            \\`\\`\\`\n        `,\n    },\n]\n\nexport const groups = groupProperties(props)\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { patternLinesDef } from '@nivo/core'\nimport { settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    background: #fff;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    font-size: 12px;\n    border-radius: 2px;\n    box-shadow: 1px 1px 0 rgba(0, 0, 0, 0.15);\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\nconst TooltipValue = styled.span``\n\nconst CustomTooltip = node => {\n    return (\n        <TooltipWrapper style={{ color: node.color }}>\n            <TooltipKey>id</TooltipKey>\n            <TooltipValue>{node.id}</TooltipValue>\n            <TooltipKey>value</TooltipKey>\n            <TooltipValue>{node.value}</TooltipValue>\n            <TooltipKey>percentage</TooltipKey>\n            <TooltipValue>{Math.round(node.percentage * 100) / 100}%</TooltipValue>\n            <TooltipKey>color</TooltipKey>\n            <TooltipValue>{node.color}</TooltipValue>\n        </TooltipWrapper>\n    )\n}\n\nexport default settingsMapper(\n    {\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n        defs: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                patternLinesDef('lines', {\n                    background: 'rgba(0, 0, 0, 0)',\n                    color: 'inherit',\n                    rotation: -45,\n                    lineWidth: 4,\n                    spacing: 8,\n                }),\n            ]\n        },\n        fill: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                { match: { id: 'set' }, id: 'lines' },\n                { match: { id: 'misc' }, id: 'lines' },\n            ]\n        },\n    },\n    {\n        exclude: ['custom tooltip example', 'showcase pattern usage'],\n    }\n)\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping, { exclude = [] } = {}) => (settings, options = {}) => {\n    const overrides = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = type => (value, settings) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }) => (enabled === true ? format : undefined)\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n"],"sourceRoot":""}