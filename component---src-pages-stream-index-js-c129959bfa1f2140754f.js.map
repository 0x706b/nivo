{"version":3,"file":"component---src-pages-stream-index-js-c129959bfa1f2140754f.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/area.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/../src/StreamLayer.tsx","webpack://nivo-website/../src/StreamLayers.tsx","webpack://nivo-website/../src/StreamDots.tsx","webpack://nivo-website/../src/StreamSlicesItem.tsx","webpack://nivo-website/../src/StreamSlices.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/StreamDotsItem.tsx","webpack://nivo-website/../src/LayerTooltip.tsx","webpack://nivo-website/../src/StackTooltip.tsx","webpack://nivo-website/../src/Stream.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveStream.tsx","webpack://nivo-website/./src/data/components/stream/mapper.ts","webpack://nivo-website/./src/data/components/stream/props.ts","webpack://nivo-website/./src/data/components/stream/generator.ts","webpack://nivo-website/./src/data/components/stream/defaults.ts","webpack://nivo-website/./src/pages/stream/index.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/random.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import { useCallback, createElement } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamLayerData } from './types'\n\ninterface StreamLayerProps<RawDatum extends StreamDatum> {\n    layer: StreamLayerData\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayer = <RawDatum extends StreamDatum>({\n    layer,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayerProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { layer }), event, 'left')\n        },\n        [showTooltipFromEvent, layer]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(layer.path)\n    const animatedProps = useSpring({\n        color: layer.color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={layer.fill ? layer.fill : animatedProps.color}\n            fillOpacity={fillOpacity}\n            stroke={getBorderColor(layer)}\n            strokeWidth={borderWidth}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? hideTooltip : undefined}\n        />\n    )\n}\n","import { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { StreamLayer } from './StreamLayer'\nimport { StreamCommonProps, StreamLayerData, StreamDatum } from './types'\n\ninterface StreamLayersProps<RawDatum extends StreamDatum> {\n    layers: StreamLayerData[]\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayers = <RawDatum extends StreamDatum>({\n    layers,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayersProps<RawDatum>) => (\n    <g>\n        {layers.map((layer, i) => (\n            <StreamLayer<RawDatum>\n                key={i}\n                layer={layer}\n                getBorderColor={getBorderColor}\n                borderWidth={borderWidth}\n                fillOpacity={fillOpacity}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { createElement } from 'react'\nimport { StreamSvgProps, StreamLayerDatum, StreamDatum } from './types'\n\ninterface StreamDotsProps<RawDatum extends StreamDatum> {\n    id: string | number\n    color: string\n    data: StreamLayerDatum[]\n    dotComponent: Exclude<StreamSvgProps<RawDatum>['dotComponent'], undefined>\n    position: 'start' | 'center' | 'end'\n    getSize: (datum: StreamLayerDatum) => number\n    getColor: (datum: StreamLayerDatum) => string\n    getBorderWidth: (datum: StreamLayerDatum) => number\n    getBorderColor: (datum: StreamLayerDatum) => string\n}\n\nconst getDotY = <RawDatum extends StreamDatum>(\n    datum: StreamLayerDatum,\n    position: StreamDotsProps<RawDatum>['position']\n) => {\n    let y = datum.y2\n    if (position === 'center') {\n        y = datum.y1 + (datum.y2 - datum.y1) / 2\n    } else if (position === 'start') {\n        y = datum.y1\n    }\n\n    return y\n}\n\nexport const StreamDots = <RawDatum extends StreamDatum>({\n    data,\n    dotComponent,\n    position,\n    getSize,\n    getColor,\n    getBorderWidth,\n    getBorderColor,\n}: StreamDotsProps<RawDatum>) => (\n    <>\n        {data.map((datum, i) => {\n            return createElement(dotComponent, {\n                key: i,\n                datum,\n                x: datum.x,\n                y: getDotY<RawDatum>(datum, position),\n                size: getSize(datum),\n                color: getColor(datum),\n                borderWidth: getBorderWidth(datum),\n                borderColor: getBorderColor(datum),\n            })\n        })}\n    </>\n)\n","import { createElement, useCallback, useState } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamSliceData } from './types'\n\ninterface StreamSlicesItemProps<RawDatum extends StreamDatum> {\n    slice: StreamSliceData\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlicesItem = <RawDatum extends StreamDatum>({\n    slice,\n    height,\n    tooltip,\n}: StreamSlicesItemProps<RawDatum>) => {\n    const [isHover, setIsHover] = useState(false)\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(createElement(tooltip, { slice }), event, 'left')\n        },\n        [setIsHover, showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [setIsHover, hideTooltip])\n\n    return (\n        <g transform={`translate(${slice.x}, 0)`}>\n            {isHover && (\n                <line\n                    x1={0}\n                    x2={0}\n                    y1={0}\n                    y2={height}\n                    stroke=\"#000\"\n                    strokeOpacity={0.35}\n                    strokeWidth={1}\n                />\n            )}\n            <rect\n                x={-20}\n                width={40}\n                height={height}\n                fill=\"#000\"\n                fillOpacity={0}\n                onMouseEnter={handleMouseHover}\n                onMouseMove={handleMouseHover}\n                onMouseLeave={handleMouseLeave}\n            />\n        </g>\n    )\n}\n","import { StreamSliceData, StreamDatum, StreamCommonProps } from './types'\nimport { StreamSlicesItem } from './StreamSlicesItem'\n\ninterface StreamSlicesProps<RawDatum extends StreamDatum> {\n    slices: StreamSliceData[]\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlices = <RawDatum extends StreamDatum>({\n    slices,\n    height,\n    tooltip,\n}: StreamSlicesProps<RawDatum>) => (\n    <g>\n        {slices.map(slice => (\n            <StreamSlicesItem<RawDatum>\n                key={slice.index}\n                slice={slice}\n                height={height}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { StackOrder, StackOffset, AreaCurve } from '@nivo/core'\nimport { StreamCommonProps, StreamLayerId } from './types'\nimport { StreamDotsItem } from './StreamDotsItem'\nimport { LayerTooltip } from './LayerTooltip'\nimport { StackTooltip } from './StackTooltip'\n\nexport const defaultProps = {\n    label: 'id',\n\n    order: 'none' as StackOrder,\n    offsetType: 'wiggle' as StackOffset,\n    curve: 'catmullRom' as AreaCurve,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    colors: { scheme: 'nivo' } as StreamCommonProps<any>['colors'],\n    fillOpacity: 1,\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    } as StreamCommonProps<any>['borderColor'],\n\n    enableDots: false,\n    dotPosition: 'center' as StreamCommonProps<any>['dotPosition'],\n    dotComponent: StreamDotsItem,\n    dotSize: 6,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 0,\n    dotBorderColor: { from: 'color' },\n\n    isInteractive: true,\n    tooltip: LayerTooltip,\n    enableStackTooltip: true,\n    stackTooltip: StackTooltip,\n\n    legends: [],\n    legendLabel: 'id',\n\n    role: 'application',\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'layers', 'dots', 'slices', 'legends'] as StreamLayerId[],\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\n\nexport interface StreamDotsItemProps {\n    x: number\n    y: number\n    size: number\n    color: string\n    borderWidth: number\n    borderColor: string\n}\n\nexport const StreamDotsItem = ({\n    x,\n    y,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n}: StreamDotsItemProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size * 0.5,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius}\n            fill={animatedProps.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nexport const LayerTooltip = ({ layer }: TooltipProps) => (\n    <BasicTooltip id={layer.label} enableChip={true} color={layer.color} />\n)\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { StackTooltipProps } from './types'\n\nexport const StackTooltip = ({ slice }: StackTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            slice.stack.map(p => [\n                <Chip key={p.layerId} color={p.color} />,\n                p.layerLabel,\n                p.formattedValue,\n            ]),\n        [slice]\n    )\n\n    return <TableTooltip rows={rows} />\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    Container,\n    SvgWrapper,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { StreamLayers } from './StreamLayers'\nimport { StreamDots } from './StreamDots'\nimport { StreamSlices } from './StreamSlices'\nimport { useStream } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { StreamDatum, StreamLayerId, StreamSvgProps } from './types'\n\ntype InnerStreamProps<RawDatum extends StreamDatum> = Omit<\n    StreamSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerStream = <RawDatum extends StreamDatum>({\n    data,\n    keys,\n    label,\n    valueFormat,\n\n    offsetType,\n    order,\n    curve,\n\n    layers: chartLayers = svgDefaultProps.layers,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n\n    colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n\n    enableDots = svgDefaultProps.enableDots,\n    dotPosition = svgDefaultProps.dotPosition,\n    dotComponent = svgDefaultProps.dotComponent,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    enableStackTooltip = svgDefaultProps.enableStackTooltip,\n    stackTooltip = svgDefaultProps.stackTooltip,\n\n    legends = svgDefaultProps.legends,\n\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerStreamProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        xScale,\n        yScale,\n        layers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    } = useStream<RawDatum>({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        keys,\n        label,\n        valueFormat,\n        offsetType,\n        order,\n        curve,\n        colors,\n        borderColor,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n    })\n\n    const boundDefs = bindDefs(defs, layers, fill)\n\n    const layerById: Record<StreamLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        layers: null,\n        dots: null,\n        slices: null,\n        legends: null,\n    }\n\n    if (chartLayers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n            />\n        )\n    }\n\n    if (chartLayers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (chartLayers.includes('layers')) {\n        layerById.layers = (\n            <StreamLayers<RawDatum>\n                key=\"layers\"\n                layers={layers}\n                fillOpacity={fillOpacity}\n                borderWidth={borderWidth}\n                getBorderColor={getBorderColor}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <Fragment key=\"dots\">\n                {layers.map(layer => (\n                    <StreamDots\n                        key={layer.id}\n                        id={layer.id}\n                        color={layer.color}\n                        data={layer.data}\n                        dotComponent={dotComponent}\n                        position={dotPosition}\n                        getSize={getDotSize}\n                        getColor={getDotColor}\n                        getBorderWidth={getDotBorderWidth}\n                        getBorderColor={getDotBorderColor}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (chartLayers.includes('slices') && isInteractive && enableStackTooltip) {\n        layerById.slices = (\n            <StreamSlices<RawDatum>\n                key=\"slices\"\n                slices={slices}\n                height={innerHeight}\n                tooltip={stackTooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => {\n                    const legendData = layers\n                        .map(layer => ({\n                            id: layer.id,\n                            label: layer.label,\n                            color: layer.color,\n                            fill: layer.fill,\n                        }))\n                        .reverse()\n\n                    return (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legend}\n                            containerWidth={innerWidth}\n                            containerHeight={innerHeight}\n                            data={legendData}\n                        />\n                    )\n                })}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {chartLayers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Stream = <RawDatum extends StreamDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: StreamSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerStream<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport { area, stack as d3Stack } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport {\n    useTheme,\n    usePropertyAccessor,\n    useValueFormatter,\n    useCurveInterpolation,\n    // @ts-ignore\n    stackOrderFromProp,\n    // @ts-ignore\n    stackOffsetFromProp,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    StreamCommonProps,\n    StreamCustomLayerProps,\n    StreamDataProps,\n    StreamDatum,\n    StreamLayerData,\n    StreamLayerDatum,\n    StreamSliceData,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useStream = <RawDatum extends StreamDatum>({\n    width,\n    height,\n    data,\n    keys,\n    label = defaultProps.label,\n    valueFormat,\n    offsetType = defaultProps.offsetType,\n    order = defaultProps.order,\n    curve = defaultProps.curve,\n    colors = defaultProps.colors,\n    borderColor = defaultProps.borderColor,\n    dotSize = defaultProps.dotSize,\n    dotColor = defaultProps.dotColor,\n    dotBorderWidth = defaultProps.dotBorderWidth,\n    dotBorderColor = defaultProps.dotBorderColor,\n}: {\n    width: number\n    height: number\n    data: StreamDataProps<RawDatum>['data']\n    keys: StreamDataProps<RawDatum>['keys']\n    label?: StreamCommonProps<RawDatum>['label']\n    valueFormat?: StreamCommonProps<RawDatum>['valueFormat']\n    offsetType?: StreamCommonProps<RawDatum>['offsetType']\n    order?: StreamCommonProps<RawDatum>['order']\n    curve?: StreamCommonProps<RawDatum>['curve']\n    colors?: StreamCommonProps<RawDatum>['colors']\n    dotSize?: StreamCommonProps<RawDatum>['dotSize']\n    dotColor?: StreamCommonProps<RawDatum>['dotColor']\n    dotBorderWidth?: StreamCommonProps<RawDatum>['dotBorderWidth']\n    dotBorderColor?: StreamCommonProps<RawDatum>['dotBorderColor']\n    borderColor?: StreamCommonProps<RawDatum>['borderColor']\n}) => {\n    const areaCurveFactory = useCurveInterpolation(curve)\n    const areaGenerator = useMemo(\n        () =>\n            area<StreamLayerDatum>()\n                .x(({ x }) => x)\n                .y0(({ y1 }) => y1)\n                .y1(({ y2 }) => y2)\n                .curve(areaCurveFactory),\n        [areaCurveFactory]\n    )\n\n    const stack = useMemo(\n        () =>\n            d3Stack<RawDatum, string | number>()\n                .keys(keys)\n                .offset(stackOffsetFromProp(offsetType))\n                .order(stackOrderFromProp(order)),\n        [keys, offsetType, order]\n    )\n\n    const [layers, xScale, yScale] = useMemo(() => {\n        const allMin: number[] = []\n        const allMax: number[] = []\n\n        const layers = stack(data).map(layer => {\n            return layer.map(point => {\n                allMin.push(point[0])\n                allMax.push(point[1])\n\n                return {\n                    ...point,\n                    value: point.data[layer.key] as number,\n                }\n            })\n        })\n\n        const minValue = Math.min(...allMin)\n        const maxValue = Math.max(...allMax)\n\n        return [\n            layers,\n            scalePoint<number>()\n                .domain(Array.from({ length: data.length }, (_, i) => i))\n                .range([0, width]),\n            scaleLinear().domain([minValue, maxValue]).range([height, 0]),\n        ]\n    }, [stack, data, width, height])\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<StreamLayerData, 'label' | 'color' | 'data'>>(\n        colors,\n        'id'\n    )\n    const getBorderColor = useInheritedColor<StreamLayerData>(borderColor, theme)\n\n    const getDotSize = useMemo(\n        () => (typeof dotSize === 'function' ? dotSize : () => dotSize),\n        [dotSize]\n    )\n    const getDotColor = useInheritedColor(dotColor, theme)\n    const getDotBorderWidth = useMemo(\n        () => (typeof dotBorderWidth === 'function' ? dotBorderWidth : () => dotBorderWidth),\n        [dotBorderWidth]\n    )\n    const getDotBorderColor = useInheritedColor(dotBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<\n        Omit<StreamLayerData, 'label' | 'color' | 'data'>,\n        string | number\n    >(label)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const enhancedLayers: StreamLayerData[] = useMemo(\n        () =>\n            layers.map((points, layerIndex) => {\n                const computedPoints: StreamLayerDatum[] = points.map((point, i) => ({\n                    layerId: keys[layerIndex],\n                    layerLabel: '',\n                    index: i,\n                    color: '',\n                    x: xScale(i) as number,\n                    value: point.value,\n                    formattedValue: formatValue(point.value),\n                    y1: yScale(point[0]),\n                    y2: yScale(point[1]),\n                }))\n\n                const layer: Omit<StreamLayerData, 'label' | 'color' | 'data'> = {\n                    id: keys[layerIndex] as string,\n                    path: areaGenerator(computedPoints) as string,\n                }\n\n                const layerWithComputedProperties: Omit<StreamLayerData, 'data'> = {\n                    ...layer,\n                    label: getLabel(layer),\n                    color: getColor(layer),\n                }\n\n                return {\n                    ...layerWithComputedProperties,\n                    data: computedPoints.map(point => {\n                        point.layerLabel = layerWithComputedProperties.label\n                        point.color = layerWithComputedProperties.color\n\n                        return point\n                    }),\n                }\n            }),\n        [layers, keys, getLabel, areaGenerator, getColor, xScale, yScale, formatValue]\n    )\n\n    const slices: StreamSliceData[] = useMemo(\n        () =>\n            Array.from({ length: data.length }, (_, i) => {\n                const sliceStack = enhancedLayers\n                    .map(layer => layer.data[i])\n                    .sort((a, b) => a.y2 - b.y2)\n\n                return {\n                    index: i,\n                    x: enhancedLayers[0].data[i].x,\n                    stack: sliceStack,\n                }\n            }),\n        [data.length, enhancedLayers]\n    )\n\n    const layerContext: StreamCustomLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            layers: enhancedLayers,\n            slices,\n        }),\n        [xScale, yScale, enhancedLayers, slices]\n    )\n\n    return {\n        xScale,\n        yScale,\n        layers: enhancedLayers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    }\n}\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { StreamDatum, StreamSvgProps } from './types'\nimport { Stream } from './Stream'\n\nexport const ResponsiveStream = <RawDatum extends StreamDatum>(\n    props: Omit<StreamSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Stream<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","// @ts-ignore: the core package should be migrated to TS\nimport { areaCurvePropKeys, stackOrderPropKeys, stackOffsetPropKeys } from '@nivo/core'\nimport { defaultProps, svgDefaultProps } from '@nivo/stream'\nimport {\n    themeProperty,\n    motionProperties,\n    defsProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    ordinalColors,\n    chartGrid,\n    axes,\n    isInteractive,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: 'object[]',\n        required: true,\n        help: 'Chart data.',\n        flavors: ['svg'],\n    },\n    {\n        key: 'keys',\n        group: 'Base',\n        type: 'string | number',\n        required: true,\n        help: 'Keys to use to build each layer.',\n        description: `\n            Keys to use to index the data,\n            those keys must exist in each data item.\n            \n            For example let's say you have this data:\n            \n            \\`\\`\\`\n            [{ A: 10, B: 20},\n             { A: 20, B: 10},\n             { A: 15, B: 15}]\n            \\`\\`\\`\n              \n            Then the keys should be: \\`['A', 'B']\\`.\n            \n            Also note that those keys are used by default to generate\n            the label of each layer, displayed in the legends and\n            the stack tooltip, this behaviour can be customized\n            via the \\`label\\` property, in case you want to display\n            something else.\n        `,\n        flavors: ['svg'],\n    },\n    {\n        key: 'label',\n        group: 'Base',\n        type: 'string | (layer) => string | number',\n        required: false,\n        help: 'Label accessor, used for legends.',\n        description: `\n            Define how to access the label of each layer,\n            by default, nivo will use the corresponding key defined\n            in \\`keys\\`, it is available under the \\`id\\` property\n            of the layer.\n        `,\n        defaultValue: defaultProps.label,\n        flavors: ['svg'],\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | (value: number) => string',\n        required: false,\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        flavors: ['svg'],\n        control: { type: 'valueFormat' },\n    },\n    {\n        key: 'offsetType',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Offset type.',\n        flavors: ['svg'],\n        control: {\n            type: 'choices',\n            choices: stackOffsetPropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'order',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Layers order.',\n        flavors: ['svg'],\n        control: {\n            type: 'choices',\n            choices: stackOrderPropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'curve',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use\n            for the area generator.\n        `,\n        defaultValue: defaultProps.curve,\n        flavors: ['svg'],\n        control: {\n            type: 'choices',\n            choices: areaCurvePropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    ...chartDimensions(allFlavors),\n    themeProperty(['svg']),\n    ordinalColors({\n        flavors: allFlavors,\n        defaultValue: defaultProps.colors,\n    }),\n    {\n        key: 'fillOpacity',\n        group: 'Style',\n        type: 'number',\n        required: false,\n        help: 'Layers fill opacity.',\n        flavors: ['svg'],\n        defaultValue: defaultProps.fillOpacity,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'borderWidth',\n        group: 'Style',\n        help: 'Width of layer border.',\n        type: 'number',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.borderWidth,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'borderColor',\n        group: 'Style',\n        type: 'string | object | Function',\n        required: false,\n        help: 'Method to compute layer border color.',\n        description: `\n            How to compute border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        flavors: ['svg'],\n        defaultValue: defaultProps.borderColor,\n        control: { type: 'inheritedColor' },\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'layers',\n        group: 'Customization',\n        type: 'Array<string | Function>',\n        required: false,\n        help: 'Defines the order of layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`grid\\`, \\`axes\\`, \\`layers\\`, \\`dots\\`, \\`slices\\`, \\`legends\\`.\n\n            You can also use this to insert extra layers to the chart,\n            this extra layer must be a function which will receive\n            the chart computed data and must return a valid SVG element.\n        `,\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.layers,\n    },\n    ...chartGrid({\n        flavors: allFlavors,\n        xDefault: defaultProps.enableGridX,\n        yDefault: defaultProps.enableGridY,\n    }),\n    ...axes({ flavors: allFlavors }),\n    {\n        key: 'enableDots',\n        group: 'Dots',\n        help: 'Enable/disable dots.',\n        type: 'boolean',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.enableDots,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'renderDot',\n        group: 'Dots',\n        flavors: ['svg'],\n        help: 'Custom rendering function for dots.',\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'dotSize',\n        group: 'Dots',\n        help: 'Size of the dots',\n        description:\n            'Size of the dots, it also accepts a function which can be used to make it vary according to the associated datum.',\n        type: 'number | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotSize,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 2,\n            max: 20,\n        },\n    },\n    {\n        key: 'dotColor',\n        group: 'Dots',\n        help: 'Method to compute dots color.',\n        type: 'string | object | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotColor,\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'dotBorderWidth',\n        group: 'Dots',\n        help: 'Width of the dots border.',\n        description:\n            'Width of the dots border, it also accepts a function which can be used to make it vary according to the associated datum.',\n        type: 'number | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotBorderWidth,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'dotBorderColor',\n        group: 'Dots',\n        help: 'Method to compute dots border color.',\n        type: 'string | object | Function',\n        required: false,\n        flavors: ['svg'],\n        defaultValue: defaultProps.dotBorderColor,\n        control: { type: 'inheritedColor' },\n    },\n    isInteractive({\n        flavors: ['svg'],\n        defaultValue: defaultProps.isInteractive,\n    }),\n    {\n        key: 'tooltip',\n        flavors: ['svg'],\n        help: `Tooltip custom component.`,\n        type: 'FunctionComponent',\n        required: false,\n        group: 'Interactivity',\n        description: `\n            Allows complete tooltip customisation, it must return\n            a valid HTML element and will receive the following data:\n            \n            \\`\\`\\`\n            {\n                layer: {\n                    id: string | number\n                    label: string | number\n                    color: string\n                    // populated when using patterns/gradients\n                    fill?: string\n                    path: string\n                    // computed data for each data point for this\n                    // specific layer\n                    data: StreamLayerDatum[]\n                }\n            }\n            \\`\\`\\`\n            \n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'enableStackTooltip',\n        flavors: ['svg'],\n        help: `Enable/disable stack tooltip ('isInteractive' must also be 'true').`,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.enableStackTooltip,\n        control: { type: 'switch' },\n        group: 'Interactivity',\n    },\n    {\n        key: 'stackTooltip',\n        flavors: ['svg'],\n        help: `Stack tooltip custom component.`,\n        type: 'FunctionComponent',\n        required: false,\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaultProps, 'react-spring'),\n    {\n        key: 'ariaLabel',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-label](https://www.w3.org/TR/wai-aria/#aria-label).',\n        type: 'string',\n        required: false,\n    },\n    {\n        key: 'ariaLabelledBy',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-labelledby](https://www.w3.org/TR/wai-aria/#aria-labelledby).',\n        type: 'string',\n        required: false,\n    },\n    {\n        key: 'ariaDescribedBy',\n        flavors: ['svg'],\n        group: 'Accessibility',\n        help: 'Main element [aria-describedby](https://www.w3.org/TR/wai-aria/#aria-describedby).',\n        type: 'string',\n        required: false,\n    },\n]\n\nexport const groups = groupProperties(props)\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\nconst names = [\n    'Raoul',\n    'Josiane',\n    'Marcel',\n    'René',\n    'Paul',\n    'Jacques',\n    'Jane',\n    'André',\n    'Guillaume',\n    'Lyu',\n    'Maki',\n    'Junko',\n    'Emi',\n    'Kae',\n    'Tomoko',\n    'Camille',\n    'Jared',\n    'Ibrahim',\n    'Mohamed',\n    'Claude',\n    'Jean',\n    'Leonard',\n    'David',\n]\n\nexport const generateLightDataSet = () => ({\n    data: range(9).map(() =>\n        names.slice(0, 6).reduce((layer, key) => {\n            layer[key] = random(10, 200)\n            return layer\n        }, {})\n    ),\n    keys: names.slice(0, 6),\n})\n\nexport const generateHeavyDataSet = () => ({\n    data: range(360).map(() =>\n        names.reduce((layer, key) => {\n            layer[key] = random(10, 200)\n            return layer\n        }, {})\n    ),\n    keys: names,\n})\n","import { patternDotsDef, patternSquaresDef } from '@nivo/core'\nimport { defaultProps, svgDefaultProps } from '@nivo/stream'\n\nexport default {\n    label: defaultProps.label,\n    valueFormat: { format: '', enabled: false },\n\n    margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60,\n    },\n\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: false,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: -40,\n    },\n    enableGridX: true,\n    enableGridY: false,\n\n    curve: 'catmullRom',\n    offsetType: 'silhouette',\n    order: 'none',\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.85,\n    borderWidth: 0,\n    borderColor: {\n        theme: 'background',\n    },\n\n    defs: [\n        patternDotsDef('dots', {\n            background: 'inherit',\n            color: '#2c998f',\n            size: 4,\n            padding: 2,\n            stagger: true,\n        }),\n        patternSquaresDef('squares', {\n            background: 'inherit',\n            color: '#e4c912',\n            size: 6,\n            padding: 2,\n            stagger: true,\n        }),\n    ],\n    fill: [\n        { match: { id: 'Paul' }, id: 'dots' },\n        { match: { id: 'Marcel' }, id: 'squares' },\n    ],\n\n    enableDots: defaultProps.enableDots,\n    dotSize: 8,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 2,\n    dotBorderColor: { from: 'color', modifiers: [['darker', 0.7]] },\n\n    animate: svgDefaultProps.animate,\n    motionConfig: svgDefaultProps.motionConfig,\n\n    isInteractive: defaultProps.isInteractive,\n    enableStackTooltip: true,\n}\n","import React from 'react'\nimport { ResponsiveStream, svgDefaultProps } from '@nivo/stream'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/stream/meta.yml'\nimport mapper from '../../data/components/stream/mapper'\nimport { groups } from '../../data/components/stream/props'\nimport { generateLightDataSet } from '../../data/components/stream/generator'\nimport defaultSettings from '../../data/components/stream/defaults'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst initialProperties = {\n    ...defaultSettings,\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            translateX: 100,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemTextColor: '#999999',\n            symbolSize: 12,\n            symbolShape: 'circle',\n            onClick: d => {\n                alert(JSON.stringify(d, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Stream = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/stream.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <ComponentTemplate\n            name=\"Stream\"\n            meta={meta.Stream}\n            icon=\"stream\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={svgDefaultProps}\n            propertiesMapper={mapper}\n            codePropertiesMapper={(properties, data) => ({\n                keys: data.keys,\n                ...properties,\n            })}\n            generateData={generateLightDataSet}\n            getTabData={data => data.data}\n            image={image}\n        >\n            {(properties, data, theme) => {\n                return (\n                    <ResponsiveStream\n                        data={data.data}\n                        keys={data.keys}\n                        {...properties}\n                        theme={theme}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Stream\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","area","data","i","j","k","d","buffer","n","length","defined0","x0z","Array","y0z","areaStart","lineStart","lineEnd","point","areaEnd","arealine","arguments","lineX0","lineY0","lineY1","lineX1","line","p","StreamLayer","layer","fillOpacity","borderWidth","getBorderColor","isInteractive","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","createElement","event","useMotionConfig","animate","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","color","immediate","_jsx","animated","fill","stroke","strokeWidth","onMouseMove","onMouseEnter","onMouseLeave","StreamLayers","layers","map","getDotY","datum","position","StreamDots","dotComponent","getSize","getColor","getBorderWidth","key","size","borderColor","StreamSlicesItem","slice","height","useState","isHover","setIsHover","handleMouseLeave","_jsxs","transform","strokeOpacity","width","StreamSlices","slices","index","defaultProps","label","order","offsetType","axisBottom","axisLeft","enableGridX","enableGridY","colors","scheme","from","modifiers","enableDots","dotPosition","radius","circle","cx","cy","dotSize","dotColor","dotBorderWidth","dotBorderColor","BasicTooltip","id","enableChip","enableStackTooltip","stackTooltip","rows","useMemo","stack","Chip","layerId","layerLabel","formattedValue","TableTooltip","legends","legendLabel","role","svgDefaultProps","defs","motionConfig","isFocusable","InnerStream","keys","valueFormat","chartLayers","partialMargin","margin","axisTop","axisRight","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","areaCurveFactory","useCurveInterpolation","areaGenerator","d3Stack","offset","stackOffsetFromProp","stackOrderFromProp","allMin","allMax","push","value","minValue","min","maxValue","max","scalePoint","domain","range","scaleLinear","xScale","yScale","theme","useTheme","useOrdinalColorScale","useInheritedColor","getDotSize","getDotColor","getDotBorderWidth","getDotBorderColor","getLabel","usePropertyAccessor","formatValue","useValueFormatter","enhancedLayers","points","layerIndex","computedPoints","layerWithComputedProperties","sliceStack","sort","a","b","layerContext","boundDefs","bindDefs","layerById","grid","axes","dots","includes","Grid","Axes","top","right","bottom","left","Fragment","legend","legendData","reverse","BoxLegendSvg","containerWidth","containerHeight","SvgWrapper","Stream","renderWrapper","otherProps","Container","ResponsiveStream","props","ResponsiveWrapper","settingsMapper","mapFormat","mapAxis","exclude","allFlavors","group","type","required","help","flavors","description","defaultValue","control","choices","stackOffsetPropKeys","stackOrderPropKeys","areaCurvePropKeys","chartDimensions","themeProperty","ordinalColors","defsProperties","chartGrid","xDefault","yDefault","unit","motionProperties","groups","groupProperties","names","generateLightDataSet","reduce","random","format","enabled","enable","orient","tickSize","tickPadding","tickRotation","legendOffset","patternDotsDef","background","padding","stagger","patternSquaresDef","match","initialProperties","defaultSettings","anchor","direction","translateX","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","onClick","alert","JSON","stringify","effects","on","style","image","useStaticQuery","childImageSharp","gatsbyImageData","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","codePropertiesMapper","generateData","getTabData","nativeFloor","floor","nativeRandom","module","exports","lower","upper","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","undefined","temp","rand"],"sourceRoot":""}