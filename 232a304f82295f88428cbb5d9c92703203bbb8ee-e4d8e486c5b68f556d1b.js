(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{BCZc:function(e,t,n){"use strict";n.d(t,"a",(function(){return C})),n.d(t,"b",(function(){return m}));n("UKgA");var r=n("mXGw"),o=n.n(r),a=n("5QYd"),i=n("tsrg"),l=n("56Mt"),c=n("mrMI"),u=n("yEOx"),s=n.n(u),d=n("As4l"),p=n.n(d),h=n("llhf");function b(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m={id:"id",value:"value",cornerRadius:0,layers:["arcs","arcLabels"],colors:{scheme:"nivo"},colorBy:"id",inheritColorFromParent:!0,childColor:{from:"color"},borderWidth:1,borderColor:"white",enableArcLabels:!1,arcLabel:"formattedValue",arcLabelsRadiusOffset:.5,arcLabelsSkipAngle:0,arcLabelsTextColor:{theme:"labels.text.fill"},animate:!0,motionConfig:"gentle",transitionMode:"innerRadius",isInteractive:!0,defs:[],fill:[],tooltip:function(e){var t=e.id,n=e.formattedValue,r=e.color;return o.a.createElement(l.a,{id:t,value:n,enableChip:!0,color:r})},role:"img"};function f(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function v(e){return function(e){if(Array.isArray(e))return f(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return f(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?f(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var g=function(e){var t=e.center,n=e.data,a=e.arcGenerator,c=e.borderWidth,u=e.borderColor,s=e.isInteractive,d=e.onClick,p=e.onMouseEnter,h=e.onMouseMove,b=e.onMouseLeave,m=e.tooltip,f=e.transitionMode,v=Object(l.i)(),g=v.showTooltipFromEvent,y=v.hideTooltip,w=Object(r.useMemo)((function(){if(s)return function(e,t){null==d||d(e,t)}}),[s,d]),C=Object(r.useMemo)((function(){if(s)return function(e,t){g(Object(r.createElement)(m,e),t),null==p||p(e,t)}}),[s,g,m,p]),O=Object(r.useMemo)((function(){if(s)return function(e,t){g(Object(r.createElement)(m,e),t),null==h||h(e,t)}}),[s,g,m,h]),k=Object(r.useMemo)((function(){if(s)return function(e,t){y(),null==b||b(e,t)}}),[s,y,b]);return o.a.createElement(i.c,{center:t,data:n,arcGenerator:a,borderWidth:c,borderColor:u,transitionMode:f,onClick:w,onMouseEnter:C,onMouseMove:O,onMouseLeave:k})},y=function(e){var t=e.data,n=e.id,l=void 0===n?m.id:n,u=e.value,d=void 0===u?m.value:u,b=e.valueFormat,f=e.cornerRadius,y=void 0===f?m.cornerRadius:f,w=e.layers,C=void 0===w?m.layers:w,O=e.colors,k=void 0===O?m.colors:O,j=e.colorBy,M=void 0===j?m.colorBy:j,x=e.inheritColorFromParent,L=void 0===x?m.inheritColorFromParent:x,T=e.childColor,E=void 0===T?m.childColor:T,F=e.borderWidth,q=void 0===F?m.borderWidth:F,A=e.borderColor,I=void 0===A?m.borderColor:A,S=e.margin,V=e.width,R=e.height,B=e.enableArcLabels,W=void 0===B?m.enableArcLabels:B,G=e.arcLabel,P=void 0===G?m.arcLabel:G,D=e.arcLabelsRadiusOffset,Y=void 0===D?m.arcLabelsRadiusOffset:D,X=e.arcLabelsSkipAngle,_=void 0===X?m.arcLabelsSkipAngle:X,K=e.arcLabelsTextColor,$=void 0===K?m.arcLabelsTextColor:K,z=e.arcLabelsComponent,N=e.defs,U=void 0===N?m.defs:N,H=e.fill,Q=void 0===H?m.fill:H,J=e.transitionMode,Z=void 0===J?m.transitionMode:J,ee=e.isInteractive,te=void 0===ee?m.isInteractive:ee,ne=e.onClick,re=e.onMouseEnter,oe=e.onMouseLeave,ae=e.onMouseMove,ie=e.tooltip,le=void 0===ie?m.tooltip:ie,ce=e.role,ue=void 0===ce?m.role:ce,se=Object(a.ob)(V,R,S),de=se.innerHeight,pe=se.innerWidth,he=se.margin,be=se.outerHeight,me=se.outerWidth,fe=Object(r.useMemo)((function(){return{radius:Math.min(pe,de)/2,centerX:pe/2,centerY:de/2}}),[de,pe]),ve=fe.centerX,ge=fe.centerY,ye=fe.radius,we=function(e){var t=e.data,n=e.id,o=void 0===n?m.id:n,l=e.value,u=void 0===l?m.value:l,d=e.valueFormat,b=e.radius,f=e.cornerRadius,g=void 0===f?m.cornerRadius:f,y=e.colors,w=void 0===y?m.colors:y,C=e.colorBy,O=void 0===C?m.colorBy:C,k=e.inheritColorFromParent,j=void 0===k?m.inheritColorFromParent:k,M=e.childColor,x=void 0===M?m.childColor:M,L=Object(a.sb)(),T=Object(h.s)(w,O),E=Object(h.r)(x,L),F=Object(a.rb)(o),q=Object(a.rb)(u),A=Object(a.tb)(d),I=Object(r.useMemo)((function(){var e,n=s()(t),r=Object(c.a)(n).sum(q),o=Object(c.c)().size([2*Math.PI,b*b])(r).descendants().slice(1),a=null!==(e=r.value)&&void 0!==e?e:0;return p()(o,"depth").reduce((function(e,t){var n,r=F(t.data),o=t.value,i=100*o/a,l=t.ancestors().map((function(e){return F(e.data)})),c={startAngle:t.x0,endAngle:t.x1,innerRadius:Math.sqrt(t.y0),outerRadius:Math.sqrt(t.y1)};t.parent&&(n=e.find((function(e){return e.id===F(t.parent.data)})));var u={id:r,path:l,value:o,percentage:i,formattedValue:d?A(o):"".concat(i.toFixed(2),"%"),color:"",arc:c,data:t.data,depth:t.depth,height:t.height};return j&&n&&u.depth>1?u.color=E(n,u):u.color=T(u),[].concat(v(e),[u])}),[])}),[t,b,q,F,d,A,T,j,E]);return{arcGenerator:Object(i.i)({cornerRadius:g}),nodes:I}}({data:t,id:l,value:d,valueFormat:b,radius:ye,cornerRadius:y,colors:k,colorBy:M,inheritColorFromParent:L,childColor:E}),Ce=we.arcGenerator,Oe=we.nodes,ke=Object(a.r)(U,Oe,Q,{dataKey:".",colorKey:"color",targetKey:"fill"}),je={arcs:null,arcLabels:null};C.includes("arcs")&&(je.arcs=o.a.createElement(g,{key:"arcs",center:[ve,ge],data:Oe,arcGenerator:Ce,borderWidth:q,borderColor:I,transitionMode:Z,isInteractive:te,tooltip:le,onClick:ne,onMouseEnter:re,onMouseLeave:oe,onMouseMove:ae})),W&&C.includes("arcLabels")&&(je.arcLabels=o.a.createElement(i.a,{key:"arcLabels",center:[ve,ge],data:Oe,label:P,radiusOffset:Y,skipAngle:_,textColor:$,transitionMode:Z,component:z}));var Me=function(e){var t=e.nodes,n=e.arcGenerator,o=e.centerX,a=e.centerY,i=e.radius;return Object(r.useMemo)((function(){return{nodes:t,arcGenerator:n,centerX:o,centerY:a,radius:i}}),[t,n,o,a,i])}({nodes:Oe,arcGenerator:Ce,centerX:ve,centerY:ge,radius:ye});return o.a.createElement(a.l,{width:me,height:be,defs:ke,margin:he,role:ue},C.map((function(e,t){return void 0!==je[e]?je[e]:"function"==typeof e?o.a.createElement(r.Fragment,{key:t},Object(r.createElement)(e,Me)):null})))},w=function(e){var t=e.isInteractive,n=void 0===t?m.isInteractive:t,r=e.animate,i=void 0===r?m.animate:r,l=e.motionConfig,c=void 0===l?m.motionConfig:l,u=e.theme,s=b(e,["isInteractive","animate","motionConfig","theme"]);return o.a.createElement(a.b,{isInteractive:n,animate:i,motionConfig:c,theme:u},o.a.createElement(y,Object.assign({isInteractive:n},s)))},C=function(e){return o.a.createElement(a.k,null,(function(t){var n=t.width,r=t.height;return o.a.createElement(w,Object.assign({width:n,height:r},e))}))}},FItm:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n("Eo5u"),o=n("BCZc"),a=n("tsrg"),i=n("RQLE"),l=[{key:"data",group:"Base",help:"Chart data, which should be immutable.",description:"\n            Chart data, which must conform to this structure\n            if using the default `id` and `value` accessors:\n\n            ```\n            {\n                // must be unique for the whole dataset\n                id: string | number\n                value: number\n                children: {\n                    id: string | number\n                    value: number\n                    children: ...\n                }[]\n            }\n            ```\n\n            If using a different data structure, you must make sure\n            to adjust both `id` and `value`. Meaning you can provide\n            a completely different data structure as long as `id` and `value`\n            return the appropriate values.\n\n            Immutability of the data is important as re-computations\n            depends on it.\n        ",type:"object",required:!0},{key:"id",group:"Base",help:"Id accessor.",description:"\n            define id accessor, if string given,\n            will use `node[value]`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            id (string | number).\n        ",type:"string | Function",required:!1,defaultValue:o.b.id},{key:"value",group:"Base",help:"Value accessor",description:"\n            define value accessor, if string given,\n            will use `node[value]`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            value (number).\n        ",type:"string | Function",required:!1,defaultValue:o.b.value},{key:"valueFormat",group:"Base",help:"Optional formatter for values.",description:"\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        ",required:!1,type:"string | (value: number) => string | number",controlType:"valueFormat"},{key:"cornerRadius",help:"Round node shape.",type:"number",required:!1,defaultValue:o.b.cornerRadius,controlType:"range",group:"Base",controlOptions:{unit:"px",min:0,max:45,step:1}},{key:"width",enableControlForFlavors:["api"],description:"\n            not required if using\n            `<ResponsiveSunburst/>`.\n        ",help:"Chart width.",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"height",enableControlForFlavors:["api"],description:"\n            not required if using\n            `<ResponsiveSunburst/>`.\n        ",help:"Chart height.",type:"number",required:!0,controlType:"range",group:"Base",controlOptions:{unit:"px",min:100,max:1e3,step:5}},{key:"margin",help:"Chart margin.",type:"object",required:!1,controlType:"margin",group:"Base"},i.f,{key:"colors",help:"Defines how to compute node color.",required:!1,defaultValue:o.b.colors,controlType:"ordinalColors",type:"string | Function | string[]",group:"Style"},{key:"colorBy",help:"Define the property to use to assign a color to arcs.",description:"\n            When using `id`, each node will get a new color,\n            and when using `depth` the nodes' color will depend on their depth.\n        ",type:"'id' | 'depth'",required:!1,defaultValue:o.b.colorBy,controlType:"radio",group:"Style",controlOptions:{choices:[{label:"id",value:"id"},{label:"depth",value:"depth"}]}},{key:"inheritColorFromParent",help:"Inherit color from parent node starting from 2nd level.",type:"boolean",required:!1,defaultValue:o.b.inheritColorFromParent,controlType:"switch",group:"Style"},{key:"childColor",help:"Defines how to compute child nodes color.",type:"string | object | Function",required:!1,defaultValue:o.b.childColor,controlType:"inheritedColor",group:"Style"},{key:"borderWidth",help:"Node border width.",type:"number",required:!1,defaultValue:o.b.borderWidth,controlType:"lineWidth",group:"Style"},{key:"borderColor",help:"Defines how to compute arcs color.",type:"string | object | Function",required:!1,defaultValue:o.b.borderColor,controlType:"inheritedColor",group:"Style"}].concat(Object(r.a)(Object(i.b)("Style",["svg","api"])),[{key:"showcase pattern usage",flavors:["svg"],help:"Patterns.",description:"\n            You can use `defs` and `fill` properties\n            to use patterns, see\n            [dedicated guide](self:/guides/patterns)\n            for further information.\n        ",type:"boolean",controlType:"switch",group:"Style"},{key:"enableArcLabels",help:"Enable/disable arc labels.",type:"boolean",required:!1,defaultValue:o.b.enableArcLabels,controlType:"switch",group:"Arc labels"},{key:"arcLabel",help:"Defines how to get label text, can be a string (used to access current node data property) or a function which will receive the actual node data.",type:"string | Function",required:!1,defaultValue:o.b.arcLabel,controlType:"choices",group:"Arc labels",controlOptions:{choices:["id","value","formattedValue","d => `${d.id} (${d.value})`"].map((function(e){return{label:e,value:e}}))}},{key:"arcLabelsRadiusOffset",help:"\n            Define the radius to use to determine the label position, starting from inner radius,\n            this is expressed as a ratio.\n        ",type:"number",required:!1,defaultValue:o.b.arcLabelsRadiusOffset,controlType:"range",group:"Arc labels",controlOptions:{min:0,max:2,step:.05}},{key:"arcLabelsSkipAngle",help:"Skip label if corresponding arc's angle is lower than provided value.",type:"number",required:!1,defaultValue:o.b.arcLabelsSkipAngle,controlType:"range",group:"Arc labels",controlOptions:{unit:"°",min:0,max:45,step:1}},{key:"arcLabelsTextColor",help:"Defines how to compute arc label text color.",type:"string | object | Function",required:!1,defaultValue:o.b.arcLabelsTextColor,controlType:"inheritedColor",group:"Arc labels"},{key:"layers",group:"Customization",help:"Defines the order of layers and add custom layers.",description:"\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a function.\n\n            The layer component which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the `Sunburst` component.\n\n            The context passed to layers has the following structure:\n\n            ```\n            {\n                nodes:  ComputedDatum<RawDatum>[],\n                arcGenerator: Function\n                centerX:      number\n                centerY:      number\n                radius:       number\n            }\n            ```\n        ",required:!1,type:"Array<string | Function>",defaultValue:o.b.layers},{key:"isInteractive",flavors:["svg"],help:"Enable/disable interactivity.",type:"{boolean}",required:!1,defaultValue:o.b.isInteractive,controlType:"switch",group:"Interactivity"}],Object(r.a)(Object(i.e)(["svg"],o.b,"react-spring")),[{key:"transitionMode",flavors:["svg"],help:"Define how transitions behave.",type:"string",required:!1,defaultValue:o.b.transitionMode,controlType:"choices",group:"Motion",controlOptions:{choices:a.d.map((function(e){return{label:e,value:e}}))}},{key:"tooltip",flavors:["svg"],group:"Interactivity",type:"Function",required:!1,help:"Tooltip custom component",description:"\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the following data:\n            ```\n            {\n                id:         string | number,\n                value:      number,\n                depth:      number,\n                color:      string,\n                name:       string\n                loc:        number\n                percentage: number\n                // the parent datum\n                ancestor:   object\n            }\n            ```\n            You can also customize the style of the tooltip\n            using the `theme.tooltip` object.\n        "},{key:"custom tooltip example",flavors:["svg"],group:"Interactivity",help:"Showcase custom tooltip component.",type:"boolean",controlType:"switch"},{key:"onClick",flavors:["svg"],group:"Interactivity",type:"Function",required:!1,help:"onClick handler",description:"\n            onClick handler, will receive node data as first argument\n            & event as second one. The node data has the following shape:\n\n            ```\n            {\n                id:         string | number,\n                value:      number,\n                depth:      number,\n                color:      string,\n                name:       string\n                loc:        number\n                percentage: number\n                // the parent datum\n                ancestor:   object\n            }\n            ```\n        "}]),c=Object(i.d)(l)},ROqr:function(e,t,n){"use strict";var r=n("mXGw"),o=n.n(r),a=n("UutA"),i=n("5QYd"),l=n("nLLr"),c=a.d.div.withConfig({displayName:"mapper__TooltipWrapper",componentId:"sc-1y9jta-0"})(["display:grid;background:#fff;grid-template-columns:1fr 1fr;grid-column-gap:12px;font-size:12px;border-radius:2px;box-shadow:1px 1px 0 rgba(0,0,0,0.15);"]),u=a.d.span.withConfig({displayName:"mapper__TooltipKey",componentId:"sc-1y9jta-1"})(["font-weight:600;"]),s=a.d.span.withConfig({displayName:"mapper__TooltipValue",componentId:"sc-1y9jta-2"})([""]),d=function(e){return o.a.createElement(c,{style:{color:e.color}},o.a.createElement(u,null,"id"),o.a.createElement(s,null,e.id),o.a.createElement(u,null,"value"),o.a.createElement(s,null,e.value),o.a.createElement(u,null,"percentage"),o.a.createElement(s,null,Math.round(100*e.percentage)/100,"%"),o.a.createElement(u,null,"color"),o.a.createElement(s,null,e.color))};t.a=Object(l.c)({valueFormat:l.b,arcLabel:function(e){return"d => `${d.id} (${d.value})`"===e?function(e){return e.id+" ("+e.value+")"}:e},tooltip:function(e,t){if(t["custom tooltip example"])return d},defs:function(e,t){if(t["showcase pattern usage"])return[Object(i.W)("lines",{background:"rgba(0, 0, 0, 0)",color:"inherit",rotation:-45,lineWidth:4,spacing:8})]},fill:function(e,t){if(t["showcase pattern usage"])return[{match:{id:"set"},id:"lines"},{match:{id:"misc"},id:"lines"}]}},{exclude:["custom tooltip example","showcase pattern usage"]})},yEOx:function(e,t,n){var r=n("0711");e.exports=function(e){return r(e,5)}}}]);
//# sourceMappingURL=232a304f82295f88428cbb5d9c92703203bbb8ee-e4d8e486c5b68f556d1b.js.map