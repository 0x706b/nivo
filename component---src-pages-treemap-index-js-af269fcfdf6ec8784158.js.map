{"version":3,"sources":["webpack:///./src/pages/treemap/index.js"],"names":["initialProperties","identity","value","valueFormat","format","enabled","tile","TreeMapDefaultProps","leavesOnly","innerPadding","outerPadding","margin","top","right","bottom","left","enableLabel","label","labelSkipSize","labelTextColor","from","modifiers","orientLabel","enableParentLabel","parentLabel","parentLabelSize","parentLabelPosition","parentLabelPadding","parentLabelTextColor","colors","colorBy","nodeOpacity","borderWidth","borderColor","animate","motionConfig","isInteractive","TreeMap","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","generateData","generateLightDataSet","data","theme","logAction","root","onClick","node","type","pathComponents","join","formattedValue","color"],"mappings":"6FAAA,iHAgBMA,EAAoB,CACtBC,SAAU,OACVC,MAAO,MACPC,YAAa,CAAEC,OAAQ,OAAQC,SAAS,GACxCC,KAAMC,IAAoBD,KAC1BE,WAAYD,IAAoBC,WAChCC,aAAcF,IAAoBE,aAClCC,aAAcH,IAAoBG,aAElCC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAGVC,aAAa,EACbC,MAAOV,IAAoBU,MAC3BC,cAAe,GACfC,eAAgB,CACZC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,OAE3BC,YAAaf,IAAoBe,YACjCC,kBAAmBhB,IAAoBgB,kBACvCC,YAAajB,IAAoBiB,YACjCC,gBAAiBlB,IAAoBkB,gBACrCC,oBAAqBnB,IAAoBmB,oBACzCC,mBAAoBpB,IAAoBoB,mBACxCC,qBAAsB,CAClBR,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,KAG3BQ,OAAQtB,IAAoBsB,OAC5BC,QAASvB,IAAoBuB,QAC7BC,YAAaxB,IAAoBwB,YACjCC,YAAazB,IAAoByB,YACjCC,YAAa,CACTb,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3Ba,QAAS3B,IAAoB2B,QAC7BC,aAAc5B,IAAoB4B,aAElCC,cAAe7B,IAAoB6B,eAwCxBC,UArCC,WACZ,OACI,kBAAC,IAAD,CACIC,KAAK,UACLC,KAAMA,IAAKF,QACXG,KAAK,UACLC,QAASF,IAAKE,QACdC,cAAc,MACdC,WAAYC,IACZ5C,kBAAmBA,EACnB6C,kBAAmBtC,IACnBuC,iBAAkBC,IAClBC,aAAcC,MAEb,SAACN,EAAYO,EAAMC,EAAOC,GACvB,OACI,kBAAC,IAAD,eACIF,KAAMA,EAAKG,MACPV,EAFR,CAGIQ,MAAOA,EACPG,QAAS,SAAAC,GACLH,EAAU,CACNI,KAAM,QACNvC,MAAM,UAAWsC,EAAKE,eAAeC,KAAK,OAArC,KACDH,EAAKI,eAETC,MAAOL,EAAKK,MACZV,KAAMK","file":"component---src-pages-treemap-index-js-af269fcfdf6ec8784158.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, RaphaÃ«l Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveTreeMap, TreeMapDefaultProps } from '@nivo/treemap'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/treemap/meta.yml'\nimport mapper from '../../data/components/treemap/mapper'\nimport { groups } from '../../data/components/treemap/props'\nimport { generateLightDataSet } from '../../data/components/treemap/generator'\n\nconst initialProperties = {\n    identity: 'name',\n    value: 'loc',\n    valueFormat: { format: '.02s', enabled: true },\n    tile: TreeMapDefaultProps.tile,\n    leavesOnly: TreeMapDefaultProps.leavesOnly,\n    innerPadding: TreeMapDefaultProps.innerPadding,\n    outerPadding: TreeMapDefaultProps.outerPadding,\n\n    margin: {\n        top: 10,\n        right: 10,\n        bottom: 10,\n        left: 10,\n    },\n\n    enableLabel: true,\n    label: TreeMapDefaultProps.label,\n    labelSkipSize: 12,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1.2]],\n    },\n    orientLabel: TreeMapDefaultProps.orientLabel,\n    enableParentLabel: TreeMapDefaultProps.enableParentLabel,\n    parentLabel: TreeMapDefaultProps.parentLabel,\n    parentLabelSize: TreeMapDefaultProps.parentLabelSize,\n    parentLabelPosition: TreeMapDefaultProps.parentLabelPosition,\n    parentLabelPadding: TreeMapDefaultProps.parentLabelPadding,\n    parentLabelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 2]],\n    },\n\n    colors: TreeMapDefaultProps.colors,\n    colorBy: TreeMapDefaultProps.colorBy,\n    nodeOpacity: TreeMapDefaultProps.nodeOpacity,\n    borderWidth: TreeMapDefaultProps.borderWidth,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.1]],\n    },\n\n    animate: TreeMapDefaultProps.animate,\n    motionConfig: TreeMapDefaultProps.motionConfig,\n\n    isInteractive: TreeMapDefaultProps.isInteractive,\n}\n\nconst TreeMap = () => {\n    return (\n        <ComponentTemplate\n            name=\"TreeMap\"\n            meta={meta.TreeMap}\n            icon=\"treemap\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={TreeMapDefaultProps}\n            propertiesMapper={mapper}\n            generateData={generateLightDataSet}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveTreeMap\n                        data={data.root}\n                        {...properties}\n                        theme={theme}\n                        onClick={node => {\n                            logAction({\n                                type: 'click',\n                                label: `[node] ${node.pathComponents.join(' / ')}: ${\n                                    node.formattedValue\n                                }`,\n                                color: node.color,\n                                data: node,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default TreeMap\n"],"sourceRoot":""}