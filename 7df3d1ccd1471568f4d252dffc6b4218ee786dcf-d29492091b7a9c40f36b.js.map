{"version":3,"file":"7df3d1ccd1471568f4d252dffc6b4218ee786dcf-d29492091b7a9c40f36b.js","mappings":"yLAAe,SAAS,EAACA,EAAOC,EAAMC,GACpCF,GAASA,EAAOC,GAAQA,EAAMC,GAAQC,EAAIC,UAAUC,QAAU,GAAKJ,EAAOD,EAAOA,EAAQ,EAAG,GAAKG,EAAI,EAAI,GAAKD,EAK9G,IAJA,IAAII,GAAK,EACLH,EAAoD,EAAhDI,KAAKC,IAAI,EAAGD,KAAKE,MAAMR,EAAOD,GAASE,IAC3CQ,EAAQ,IAAIC,MAAMR,KAEbG,EAAIH,GACXO,EAAMJ,GAAKN,EAAQM,EAAIJ,EAGzB,OAAOQ,E,0BCNM,SAASE,IACtB,IAKIV,EACAW,EANAC,GAAQ,EAAAC,EAAA,KAAUC,aAAQC,GAC1BC,EAASJ,EAAMI,OACfC,EAAeL,EAAMJ,MACrBU,EAAK,EACLC,EAAK,EAGLC,GAAQ,EACRC,EAAe,EACfC,EAAe,EACfC,EAAQ,GAGZ,SAASC,IACP,IAAIvB,EAAIe,IAASb,OACbsB,EAAUN,EAAKD,EACfpB,EAAQ2B,EAAUN,EAAKD,EACvBnB,EAAO0B,EAAUP,EAAKC,EAC1BnB,GAAQD,EAAOD,GAASO,KAAKC,IAAI,EAAGL,EAAIoB,EAA8B,EAAfC,GACnDF,IAAOpB,EAAOK,KAAKqB,MAAM1B,IAC7BF,IAAUC,EAAOD,EAAQE,GAAQC,EAAIoB,IAAiBE,EACtDZ,EAAYX,GAAQ,EAAIqB,GACpBD,IAAOtB,EAAQO,KAAKe,MAAMtB,GAAQa,EAAYN,KAAKe,MAAMT,IAC7D,IAAIgB,EAAS,EAAS1B,GAAG2B,KAAI,SAAUxB,GACrC,OAAON,EAAQE,EAAOI,KAExB,OAAOa,EAAaQ,EAAUE,EAAOF,UAAYE,GAmDnD,cAlEOf,EAAME,QAkBbF,EAAMI,OAAS,SAAUa,GACvB,OAAO3B,UAAUC,QAAUa,EAAOa,GAAIL,KAAaR,KAGrDJ,EAAMJ,MAAQ,SAAUqB,GACtB,IAAIC,EAAMC,EAEV,OAAO7B,UAAUC,QAAW2B,EAAOD,EAAGE,GAAQ,OAAeD,EAAM,GAAIZ,EAAKa,EAAM,GAAIZ,EAAKY,EAAM,GAAWb,GAAMA,EAAIC,GAAMA,EAAIK,KAAa,CAACN,EAAIC,IAGpJP,EAAMoB,WAAa,SAAUH,GAC3B,IAAII,EAAOC,EAEX,OAAQD,EAAQJ,EAAGK,GAAQ,OAAeD,EAAO,GAAIf,EAAKgB,EAAM,GAAIf,EAAKe,EAAM,GAAYhB,GAAMA,EAAIC,GAAMA,EAAIC,GAAQ,EAAMI,KAG/HZ,EAAMD,UAAY,WAChB,OAAOA,GAGTC,EAAMZ,KAAO,WACX,OAAOA,GAGTY,EAAMQ,MAAQ,SAAUS,GACtB,OAAO3B,UAAUC,QAAUiB,IAAUS,EAAGL,KAAaJ,GAGvDR,EAAMuB,QAAU,SAAUN,GACxB,OAAO3B,UAAUC,QAAUkB,EAAehB,KAAK+B,IAAI,EAAGd,GAAgBO,GAAIL,KAAaH,GAGzFT,EAAMS,aAAe,SAAUQ,GAC7B,OAAO3B,UAAUC,QAAUkB,EAAehB,KAAK+B,IAAI,EAAGP,GAAIL,KAAaH,GAGzET,EAAMU,aAAe,SAAUO,GAC7B,OAAO3B,UAAUC,QAAUmB,GAAgBO,EAAGL,KAAaF,GAG7DV,EAAMW,MAAQ,SAAUM,GACtB,OAAO3B,UAAUC,QAAUoB,EAAQlB,KAAKC,IAAI,EAAGD,KAAK+B,IAAI,EAAGP,IAAKL,KAAaD,GAG/EX,EAAMyB,KAAO,WACX,OAAO3B,EAAKM,IAAU,CAACE,EAAIC,IAAKC,MAAMA,GAAOC,aAAaA,GAAcC,aAAaA,GAAcC,MAAMA,IAGpGe,EAAA,QAAgBd,IAAWtB,WAGpC,SAASqC,EAAS3B,GAChB,IAAIyB,EAAOzB,EAAMyB,KASjB,OARAzB,EAAMuB,QAAUvB,EAAMU,oBACfV,EAAMS,oBACNT,EAAMU,aAEbV,EAAMyB,KAAO,WACX,OAAOE,EAASF,MAGXzB,EAGF,SAAS4B,IACd,OAAOD,EAAS7B,EAAK+B,MAAM,KAAMvC,WAAWmB,aAAa,M,oKCnGpD,IAAIqB,EAAiB,IACjBC,EAAiB,IACjBC,EAAe,KACfC,EAAc,MACdC,EAAe,Q,mECJ1B,IAAIC,EAAK,IAAIC,KACTC,EAAK,IAAID,KACE,SAASE,EAAYC,EAAQC,EAASC,EAAOC,GAC1D,SAASC,EAASC,GAChB,OAAOL,EAAOK,EAA4B,IAArBtD,UAAUC,OAAe,IAAI6C,KAAS,IAAIA,MAAMQ,IAAQA,EAsE/E,OAnEAD,EAAS7B,MAAQ,SAAU8B,GACzB,OAAOL,EAAOK,EAAO,IAAIR,MAAMQ,IAAQA,GAGzCD,EAAShD,KAAO,SAAUiD,GACxB,OAAOL,EAAOK,EAAO,IAAIR,KAAKQ,EAAO,IAAKJ,EAAQI,EAAM,GAAIL,EAAOK,GAAOA,GAG5ED,EAASnC,MAAQ,SAAUoC,GACzB,IAAIC,EAAKF,EAASC,GACdE,EAAKH,EAAShD,KAAKiD,GACvB,OAAOA,EAAOC,EAAKC,EAAKF,EAAOC,EAAKC,GAGtCH,EAASI,OAAS,SAAUH,EAAMxD,GAChC,OAAOoD,EAAQI,EAAO,IAAIR,MAAMQ,GAAe,MAARxD,EAAe,EAAIK,KAAKqB,MAAM1B,IAAQwD,GAG/ED,EAAS/C,MAAQ,SAAUV,EAAOC,EAAMC,GACtC,IACI4D,EADApD,EAAQ,GAIZ,GAFAV,EAAQyD,EAAShD,KAAKT,GACtBE,EAAe,MAARA,EAAe,EAAIK,KAAKqB,MAAM1B,KAC/BF,EAAQC,GAAWC,EAAO,GAAI,OAAOQ,EAE3C,GACEA,EAAMqD,KAAKD,EAAW,IAAIZ,MAAMlD,IAASsD,EAAQtD,EAAOE,GAAOmD,EAAOrD,SAC/D8D,EAAW9D,GAASA,EAAQC,GAErC,OAAOS,GAGT+C,EAASO,OAAS,SAAUC,GAC1B,OAAOb,GAAY,SAAUM,GAC3B,GAAIA,GAAQA,EAAM,KAAOL,EAAOK,IAAQO,EAAKP,IAC3CA,EAAKQ,QAAQR,EAAO,MAErB,SAAUA,EAAMxD,GACjB,GAAIwD,GAAQA,EACV,GAAIxD,EAAO,EAAG,OAASA,GAAQ,GAC7B,KAAOoD,EAAQI,GAAO,IAAKO,EAAKP,UAE3B,OAASxD,GAAQ,GACtB,KAAOoD,EAAQI,EAAM,IAAMO,EAAKP,UAOpCH,IACFE,EAASF,MAAQ,SAAUvD,EAAOmE,GAGhC,OAFAlB,EAAGiB,SAASlE,GAAQmD,EAAGe,SAASC,GAChCd,EAAOJ,GAAKI,EAAOF,GACZ5C,KAAKqB,MAAM2B,EAAMN,EAAIE,KAG9BM,EAASW,MAAQ,SAAUlE,GAEzB,OADAA,EAAOK,KAAKqB,MAAM1B,GACVmE,SAASnE,IAAWA,EAAO,EAAcA,EAAO,EAAgBuD,EAASO,OAAOR,EAAQ,SAAUc,GACxG,OAAOd,EAAMc,GAAKpE,GAAS,GACzB,SAAUoE,GACZ,OAAOb,EAASF,MAAM,EAAGe,GAAKpE,GAAS,IAHoBuD,EAArB,OAQrCA,I,uECzELc,GAAQ,E,SAAA,IAAS,SAAUb,GAC7BA,EAAKc,QAAQ,GACbd,EAAKe,SAAS,EAAG,EAAG,EAAG,MACtB,SAAUf,EAAMxD,GACjBwD,EAAKgB,SAAShB,EAAKiB,WAAazE,MAC/B,SAAUF,EAAOmE,GAClB,OAAOA,EAAIQ,WAAa3E,EAAM2E,WAAyD,IAA3CR,EAAIS,cAAgB5E,EAAM4E,kBACrE,SAAUlB,GACX,OAAOA,EAAKiB,cAEd,MACO,IAAIE,EAASN,EAAM7D,O,qQCT1B,SAASoE,EAAQxE,GACf,OAAO,QAAS,SAAUoD,GACxBA,EAAKc,QAAQd,EAAKqB,WAAarB,EAAKsB,SAAW,EAAI1E,GAAK,GACxDoD,EAAKe,SAAS,EAAG,EAAG,EAAG,MACtB,SAAUf,EAAMxD,GACjBwD,EAAKc,QAAQd,EAAKqB,UAAmB,EAAP7E,MAC7B,SAAUF,EAAOmE,GAClB,OAAQA,EAAMnE,GAASmE,EAAIc,oBAAsBjF,EAAMiF,qBAAuB,MAAkB,QAI7F,IAAIC,EAASJ,EAAQ,GACjBK,EAASL,EAAQ,GACjBM,EAAUN,EAAQ,GAClBO,EAAYP,EAAQ,GACpBQ,EAAWR,EAAQ,GACnBS,EAAST,EAAQ,GACjBU,EAAWV,EAAQ,GACnBW,EAAUP,EAAOxE,MACPyE,EAAOzE,MACN0E,EAAQ1E,MACN2E,EAAU3E,MACX4E,EAAS5E,MACX6E,EAAO7E,MACL8E,EAAS9E,O,kDC1B5BgF,GAAO,QAAS,SAAUhC,GAC5BA,EAAKgB,SAAS,EAAG,GACjBhB,EAAKe,SAAS,EAAG,EAAG,EAAG,MACtB,SAAUf,EAAMxD,GACjBwD,EAAKiC,YAAYjC,EAAKkB,cAAgB1E,MACrC,SAAUF,EAAOmE,GAClB,OAAOA,EAAIS,cAAgB5E,EAAM4E,iBAChC,SAAUlB,GACX,OAAOA,EAAKkB,iBAGdc,EAAKtB,MAAQ,SAAUwB,GACrB,OAAQvB,SAASuB,EAAIrF,KAAKqB,MAAMgE,KAASA,EAAI,GAAY,QAAS,SAAUlC,GAC1EA,EAAKiC,YAAYpF,KAAKqB,MAAM8B,EAAKkB,cAAgBgB,GAAKA,GACtDlC,EAAKgB,SAAS,EAAG,GACjBhB,EAAKe,SAAS,EAAG,EAAG,EAAG,MACtB,SAAUf,EAAMxD,GACjBwD,EAAKiC,YAAYjC,EAAKkB,cAAgB1E,EAAO0F,MALG,MASpD,MACmBF,EAAKhF,O,gaCvBbkC,EAAiB,IACjBC,EAAiBD,IACjBE,EAAeD,KACfE,EAAcD,MACdE,EAAeD,OACf8C,EAAgB9C,OAChB+C,EAAe/C,QCNtBE,EAAK,IAAIC,KACTC,EAAK,IAAID,KACE,SAASE,EAAYC,EAAQC,EAASC,EAAOC,GAC1D,SAASC,EAASC,GAChB,OAAOL,EAAOK,EAA4B,IAArBtD,UAAUC,OAAe,IAAI6C,KAAS,IAAIA,MAAMQ,IAAQA,EAsE/E,OAnEAD,EAAS7B,MAAQ,SAAU8B,GACzB,OAAOL,EAAOK,EAAO,IAAIR,MAAMQ,IAAQA,GAGzCD,EAAShD,KAAO,SAAUiD,GACxB,OAAOL,EAAOK,EAAO,IAAIR,KAAKQ,EAAO,IAAKJ,EAAQI,EAAM,GAAIL,EAAOK,GAAOA,GAG5ED,EAASnC,MAAQ,SAAUoC,GACzB,IAAIC,EAAKF,EAASC,GACdE,EAAKH,EAAShD,KAAKiD,GACvB,OAAOA,EAAOC,EAAKC,EAAKF,EAAOC,EAAKC,GAGtCH,EAASI,OAAS,SAAUH,EAAMxD,GAChC,OAAOoD,EAAQI,EAAO,IAAIR,MAAMQ,GAAe,MAARxD,EAAe,EAAIK,KAAKqB,MAAM1B,IAAQwD,GAG/ED,EAAS/C,MAAQ,SAAUV,EAAOC,EAAMC,GACtC,IACI4D,EADApD,EAAQ,GAIZ,GAFAV,EAAQyD,EAAShD,KAAKT,GACtBE,EAAe,MAARA,EAAe,EAAIK,KAAKqB,MAAM1B,KAC/BF,EAAQC,GAAWC,EAAO,GAAI,OAAOQ,EAE3C,GACEA,EAAMqD,KAAKD,EAAW,IAAIZ,MAAMlD,IAASsD,EAAQtD,EAAOE,GAAOmD,EAAOrD,SAC/D8D,EAAW9D,GAASA,EAAQC,GAErC,OAAOS,GAGT+C,EAASO,OAAS,SAAUC,GAC1B,OAAOb,GAAY,SAAUM,GAC3B,GAAIA,GAAQA,EAAM,KAAOL,EAAOK,IAAQO,EAAKP,IAC3CA,EAAKQ,QAAQR,EAAO,MAErB,SAAUA,EAAMxD,GACjB,GAAIwD,GAAQA,EACV,GAAIxD,EAAO,EAAG,OAASA,GAAQ,GAC7B,KAAOoD,EAAQI,GAAO,IAAKO,EAAKP,UAE3B,OAASxD,GAAQ,GACtB,KAAOoD,EAAQI,EAAM,IAAMO,EAAKP,UAOpCH,IACFE,EAASF,MAAQ,SAAUvD,EAAOmE,GAGhC,OAFAlB,EAAGiB,SAASlE,GAAQmD,EAAGe,SAASC,GAChCd,EAAOJ,GAAKI,EAAOF,GACZ5C,KAAKqB,MAAM2B,EAAMN,EAAIE,KAG9BM,EAASW,MAAQ,SAAUlE,GAEzB,OADAA,EAAOK,KAAKqB,MAAM1B,GACVmE,SAASnE,IAAWA,EAAO,EAAcA,EAAO,EAAgBuD,EAASO,OAAOR,EAAQ,SAAUc,GACxG,OAAOd,EAAMc,GAAKpE,GAAS,GACzB,SAAUoE,GACZ,OAAOb,EAASF,MAAM,EAAGe,GAAKpE,GAAS,IAHoBuD,EAArB,OAQrCA,ECzET,IAAIsC,EAAc,GAAS,eACxB,SAAUrC,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,MACpB,SAAUF,EAAOmE,GAClB,OAAOA,EAAMnE,KAGf+F,EAAY3B,MAAQ,SAAUwB,GAE5B,OADAA,EAAIrF,KAAKqB,MAAMgE,GACVvB,SAASuB,IAAQA,EAAI,EACpBA,EAAI,EACH,GAAS,SAAUlC,GACxBA,EAAKQ,QAAQ3D,KAAKqB,MAAM8B,EAAOkC,GAAKA,MACnC,SAAUlC,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAO0F,MAC3B,SAAU5F,EAAOmE,GAClB,OAAQA,EAAMnE,GAAS4F,KANJG,EADgB,MAWvC,QCnBIC,GDoBsBD,EAAYrF,MCpBzB,GAAS,SAAUgD,GAC9BA,EAAKQ,QAAQR,EAAOA,EAAKuC,sBACxB,SAAUvC,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAO0C,MAC3B,SAAU5C,EAAOmE,GAClB,OAAQA,EAAMnE,GAAS4C,KACtB,SAAUc,GACX,OAAOA,EAAKwC,oBAEd,ICTIC,GDUiBH,EAAOtF,MCVf,GAAS,SAAUgD,GAC9BA,EAAKQ,QAAQR,EAAOA,EAAKuC,kBAAoBvC,EAAK0C,aAAexD,MAChE,SAAUc,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAO2C,MAC3B,SAAU7C,EAAOmE,GAClB,OAAQA,EAAMnE,GAAS6C,KACtB,SAAUa,GACX,OAAOA,EAAK2C,iBAEd,ICTIC,GDUiBH,EAAOzF,MCVjB,GAAS,SAAUgD,GAC5BA,EAAKQ,QAAQR,EAAOA,EAAKuC,kBAAoBvC,EAAK0C,aAAexD,EAAiBc,EAAK2C,aAAexD,MACrG,SAAUa,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAO4C,MAC3B,SAAU9C,EAAOmE,GAClB,OAAQA,EAAMnE,GAAS8C,KACtB,SAAUY,GACX,OAAOA,EAAK6C,eAEd,ICTIC,GDUeF,EAAK5F,MCVd,GAAS,SAAUgD,GAC3B,OAAOA,EAAKe,SAAS,EAAG,EAAG,EAAG,MAC7B,SAAUf,EAAMxD,GACjB,OAAOwD,EAAKc,QAAQd,EAAKqB,UAAY7E,MACpC,SAAUF,EAAOmE,GAClB,OAAQA,EAAMnE,GAASmE,EAAIc,oBAAsBjF,EAAMiF,qBAAuBpC,GAAkBE,KAC/F,SAAUW,GACX,OAAOA,EAAKqB,UAAY,MAE1B,IACkByB,EAAI9F,MCTtB,SAASoE,EAAQxE,GACf,OAAO,GAAS,SAAUoD,GACxBA,EAAKc,QAAQd,EAAKqB,WAAarB,EAAKsB,SAAW,EAAI1E,GAAK,GACxDoD,EAAKe,SAAS,EAAG,EAAG,EAAG,MACtB,SAAUf,EAAMxD,GACjBwD,EAAKc,QAAQd,EAAKqB,UAAmB,EAAP7E,MAC7B,SAAUF,EAAOmE,GAClB,OAAQA,EAAMnE,GAASmE,EAAIc,oBAAsBjF,EAAMiF,qBAAuBpC,GAAkBG,KAI7F,IAAIkC,EAASJ,EAAQ,GACjBK,EAASL,EAAQ,GACjBM,EAAUN,EAAQ,GAClBO,EAAYP,EAAQ,GACpBQ,EAAWR,EAAQ,GACnBS,EAAST,EAAQ,GACjBU,EAAWV,EAAQ,GCnB1BP,GDoBiBW,EAAOxE,MACPyE,EAAOzE,MACN0E,EAAQ1E,MACN2E,EAAU3E,MACX4E,EAAS5E,MACX6E,EAAO7E,MACL8E,EAAS9E,MC1BpB,GAAS,SAAUgD,GAC7BA,EAAKc,QAAQ,GACbd,EAAKe,SAAS,EAAG,EAAG,EAAG,MACtB,SAAUf,EAAMxD,GACjBwD,EAAKgB,SAAShB,EAAKiB,WAAazE,MAC/B,SAAUF,EAAOmE,GAClB,OAAOA,EAAIQ,WAAa3E,EAAM2E,WAAyD,IAA3CR,EAAIS,cAAgB5E,EAAM4E,kBACrE,SAAUlB,GACX,OAAOA,EAAKiB,eAEd,ICVIe,GDWgBnB,EAAM7D,MCXf,GAAS,SAAUgD,GAC5BA,EAAKgB,SAAS,EAAG,GACjBhB,EAAKe,SAAS,EAAG,EAAG,EAAG,MACtB,SAAUf,EAAMxD,GACjBwD,EAAKiC,YAAYjC,EAAKkB,cAAgB1E,MACrC,SAAUF,EAAOmE,GAClB,OAAOA,EAAIS,cAAgB5E,EAAM4E,iBAChC,SAAUlB,GACX,OAAOA,EAAKkB,kBAGdc,EAAKtB,MAAQ,SAAUwB,GACrB,OAAQvB,SAASuB,EAAIrF,KAAKqB,MAAMgE,KAASA,EAAI,EAAY,GAAS,SAAUlC,GAC1EA,EAAKiC,YAAYpF,KAAKqB,MAAM8B,EAAKkB,cAAgBgB,GAAKA,GACtDlC,EAAKgB,SAAS,EAAG,GACjBhB,EAAKe,SAAS,EAAG,EAAG,EAAG,MACtB,SAAUf,EAAMxD,GACjBwD,EAAKiC,YAAYjC,EAAKkB,cAAgB1E,EAAO0F,MALG,MASpD,QCpBIa,GDqBef,EAAKhF,MCrBR,GAAS,SAAUgD,GACjCA,EAAKgD,cAAc,EAAG,MACrB,SAAUhD,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAO2C,MAC3B,SAAU7C,EAAOmE,GAClB,OAAQA,EAAMnE,GAAS6C,KACtB,SAAUa,GACX,OAAOA,EAAKiD,oBAEd,ICTIC,GDUoBH,EAAU/F,MCVpB,GAAS,SAAUgD,GAC/BA,EAAKmD,cAAc,EAAG,EAAG,MACxB,SAAUnD,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAO4C,MAC3B,SAAU9C,EAAOmE,GAClB,OAAQA,EAAMnE,GAAS8C,KACtB,SAAUY,GACX,OAAOA,EAAKoD,kBAEd,ICTIC,GDUkBH,EAAQlG,MCVjB,GAAS,SAAUgD,GAC9BA,EAAKsD,YAAY,EAAG,EAAG,EAAG,MACzB,SAAUtD,EAAMxD,GACjBwD,EAAKuD,WAAWvD,EAAKwD,aAAehH,MACnC,SAAUF,EAAOmE,GAClB,OAAQA,EAAMnE,GAAS+C,KACtB,SAAUW,GACX,OAAOA,EAAKwD,aAAe,MAE7B,KACqBH,EAAOrG,MCT5B,SAASyG,GAAW7G,GAClB,OAAO,GAAS,SAAUoD,GACxBA,EAAKuD,WAAWvD,EAAKwD,cAAgBxD,EAAK0D,YAAc,EAAI9G,GAAK,GACjEoD,EAAKsD,YAAY,EAAG,EAAG,EAAG,MACzB,SAAUtD,EAAMxD,GACjBwD,EAAKuD,WAAWvD,EAAKwD,aAAsB,EAAPhH,MACnC,SAAUF,EAAOmE,GAClB,OAAQA,EAAMnE,GAASgD,KAIpB,IAAIqE,GAAYF,GAAW,GACvBG,GAAYH,GAAW,GACvBI,GAAaJ,GAAW,GACxBK,GAAeL,GAAW,GAC1BM,GAAcN,GAAW,GACzBO,GAAYP,GAAW,GACvBQ,GAAcR,GAAW,GCnBhCS,IDoBoBP,GAAU3G,MACV4G,GAAU5G,MACT6G,GAAW7G,MACT8G,GAAa9G,MACd+G,GAAY/G,MACdgH,GAAUhH,MACRiH,GAAYjH,MC1BvB,GAAS,SAAUgD,GAChCA,EAAKuD,WAAW,GAChBvD,EAAKsD,YAAY,EAAG,EAAG,EAAG,MACzB,SAAUtD,EAAMxD,GACjBwD,EAAKmE,YAAYnE,EAAKoE,cAAgB5H,MACrC,SAAUF,EAAOmE,GAClB,OAAOA,EAAI2D,cAAgB9H,EAAM8H,cAAkE,IAAjD3D,EAAI4D,iBAAmB/H,EAAM+H,qBAC9E,SAAUrE,GACX,OAAOA,EAAKoE,kBAEd,MCVIE,IDWmBJ,GAASlH,MCXlB,GAAS,SAAUgD,GAC/BA,EAAKmE,YAAY,EAAG,GACpBnE,EAAKsD,YAAY,EAAG,EAAG,EAAG,MACzB,SAAUtD,EAAMxD,GACjBwD,EAAKuE,eAAevE,EAAKqE,iBAAmB7H,MAC3C,SAAUF,EAAOmE,GAClB,OAAOA,EAAI4D,iBAAmB/H,EAAM+H,oBACnC,SAAUrE,GACX,OAAOA,EAAKqE,qBAGdC,GAAQ5D,MAAQ,SAAUwB,GACxB,OAAQvB,SAASuB,EAAIrF,KAAKqB,MAAMgE,KAASA,EAAI,EAAY,GAAS,SAAUlC,GAC1EA,EAAKuE,eAAe1H,KAAKqB,MAAM8B,EAAKqE,iBAAmBnC,GAAKA,GAC5DlC,EAAKmE,YAAY,EAAG,GACpBnE,EAAKsD,YAAY,EAAG,EAAG,EAAG,MACzB,SAAUtD,EAAMxD,GACjBwD,EAAKuE,eAAevE,EAAKqE,iBAAmB7H,EAAO0F,MALH,MASpD,UACsBoC,GAAQtH,MCL9B,SAASwH,GAAOxC,EAAMnB,EAAO4D,EAAM3B,EAAKF,EAAMH,GAC5C,IAAIiC,EAAgB,CAAC,CAAC,EAAQ,EAAGxF,GAAiB,CAAC,EAAQ,EAAG,KAAqB,CAAC,EAAQ,GAAI,MAAsB,CAAC,EAAQ,GAAI,KAAsB,CAACuD,EAAQ,EAAGtD,GAAiB,CAACsD,EAAQ,EAAG,KAAqB,CAACA,EAAQ,GAAI,KAAsB,CAACA,EAAQ,GAAI,MAAsB,CAACG,EAAM,EAAGxD,GAAe,CAACwD,EAAM,EAAG,OAAmB,CAACA,EAAM,EAAG,OAAmB,CAACA,EAAM,GAAI,OAAoB,CAACE,EAAK,EAAGzD,GAAc,CAACyD,EAAK,EAAG,QAAkB,CAAC2B,EAAM,EAAGnF,GAAe,CAACuB,EAAO,EAAGsB,GAAgB,CAACtB,EAAO,EAAG,QAAoB,CAACmB,EAAM,EAAGI,IAiB9hB,SAASuC,EAAarI,EAAOC,EAAMsD,GACjC,IAAI+E,EAAS/H,KAAKgI,IAAItI,EAAOD,GAASuD,EAClCjD,GAAI,EAAAkI,EAAA,IAAS,SAAUvG,GAIzB,OAHY,OAAeA,EAAO,GACjB,MAGhBwG,MAAML,EAAeE,GACxB,GAAIhI,IAAM8H,EAAc/H,OAAQ,OAAOqF,EAAKtB,OAAM,QAASpE,EAAQ8F,EAAc7F,EAAO6F,EAAcvC,IACtG,GAAU,IAANjD,EAAS,OAAO,QAAkBC,KAAKC,KAAI,QAASR,EAAOC,EAAMsD,GAAQ,IAE7E,IAAImF,GAAiB,OAAeN,EAAcE,EAASF,EAAc9H,EAAI,GAAG,GAAK8H,EAAc9H,GAAG,GAAKgI,EAAShI,EAAI,EAAIA,GAAI,GAC5HqI,EAAID,EAAe,GACnBxI,EAAOwI,EAAe,GAE1B,OAAOC,EAAEvE,MAAMlE,GAGjB,MAAO,CAjCP,SAAeF,EAAOC,EAAMsD,GAC1B,IAAI5B,EAAU1B,EAAOD,EAErB,GAAI2B,EAAS,CACX,IAAIK,EAAO,CAAC/B,EAAMD,GAClBA,EAAQgC,EAAK,GACb/B,EAAO+B,EAAK,GAGd,IAAIyB,EAAWF,GAAgC,mBAAhBA,EAAM7C,MAAuB6C,EAAQ8E,EAAarI,EAAOC,EAAMsD,GAC1FqF,EAAQnF,EAAWA,EAAS/C,MAAMV,GAAQC,EAAO,GAAK,GAE1D,OAAO0B,EAAUiH,EAAMjH,UAAYiH,GAqBtBP,GAGjB,IAAIQ,GAAUX,GAAO,GAAS,GAAU,GAAS,GAAQ,EAAS,GAC9DY,IAAW,OAAeD,GAAS,GACnCE,GAAWD,GAAS,GACpBE,GAAkBF,GAAS,GAE3BG,GAAWf,GAAO,EAAM,EAAO,EAAM,EAAK,EAAM,GAChDgB,IAAW,OAAeD,GAAU,GACpCE,GAAYD,GAAS,GACrBE,GAAmBF,GAAS,G,wBCjEjB,SAASG,GAAKnI,EAAQuC,GAEnC,IAIIkF,EAJAW,EAAK,EACLC,GAFJrI,EAASA,EAAOsI,SAEAnJ,OAAS,EACrBoJ,EAAKvI,EAAOoI,GACZI,EAAKxI,EAAOqI,GAUhB,OAPIG,EAAKD,IACPd,EAAIW,EAAIA,EAAKC,EAAIA,EAAKZ,EACtBA,EAAIc,EAAIA,EAAKC,EAAIA,EAAKf,GAGxBzH,EAAOoI,GAAM7F,EAAS7B,MAAM6H,GAC5BvI,EAAOqI,GAAM9F,EAAShD,KAAKiJ,GACpBxI,ECTT,SAASwC,GAAKiF,GACZ,OAAO,IAAIzF,KAAKyF,GAGlB,SAASgB,GAAOhB,GACd,OAAOA,aAAazF,MAAQyF,GAAK,IAAIzF,MAAMyF,GAGtC,SAASiB,GAAShB,EAAOP,EAAc3C,EAAMnB,EAAO4D,EAAM3B,EAAKF,EAAMH,EAAQH,EAAQ6D,GAC1F,IAAI/I,GAAQ,EAAAgJ,GAAA,MACRC,EAASjJ,EAAMiJ,OACf7I,EAASJ,EAAMI,OACf8I,EAAoBH,EAAO,OAC3BI,EAAeJ,EAAO,OACtBK,EAAeL,EAAO,SACtBM,EAAaN,EAAO,SACpBO,EAAYP,EAAO,SACnBQ,EAAaR,EAAO,SACpBS,EAAcT,EAAO,MACrBU,EAAaV,EAAO,MAExB,SAASW,EAAW9G,GAClB,OAAQsC,EAAOtC,GAAQA,EAAOsG,EAAoB7D,EAAOzC,GAAQA,EAAOuG,EAAe3D,EAAK5C,GAAQA,EAAOwG,EAAe1D,EAAI9C,GAAQA,EAAOyG,EAAa5F,EAAMb,GAAQA,EAAOyE,EAAKzE,GAAQA,EAAO0G,EAAYC,EAAa3E,EAAKhC,GAAQA,EAAO4G,EAAcC,GAAY7G,GA8B5Q,OA3BA5C,EAAMiJ,OAAS,SAAUU,GACvB,OAAO,IAAIvH,KAAK6G,EAAOU,KAGzB3J,EAAMI,OAAS,SAAUa,GACvB,OAAO3B,UAAUC,OAASa,EAAOP,MAAM+J,KAAK3I,EAAG4H,KAAWzI,IAASY,IAAI4B,KAGzE5C,EAAM8H,MAAQ,SAAUnF,GACtB,IAAIa,EAAIpD,IACR,OAAO0H,EAAMtE,EAAE,GAAIA,EAAEA,EAAEjE,OAAS,GAAgB,MAAZoD,EAAmB,GAAKA,IAG9D3C,EAAM0J,WAAa,SAAUjH,EAAOoH,GAClC,OAAoB,MAAbA,EAAoBH,EAAaX,EAAOc,IAGjD7J,EAAMuI,KAAO,SAAU5F,GACrB,IAAIa,EAAIpD,IAER,OADKuC,GAAsC,mBAAnBA,EAAS/C,QAAsB+C,EAAW4E,EAAa/D,EAAE,GAAIA,EAAEA,EAAEjE,OAAS,GAAgB,MAAZoD,EAAmB,GAAKA,IACvHA,EAAWvC,EAAOmI,GAAK/E,EAAGb,IAAa3C,GAGhDA,EAAMyB,KAAO,WACX,OAAO,SAAKzB,EAAO8I,GAAShB,EAAOP,EAAc3C,EAAMnB,EAAO4D,EAAM3B,EAAKF,EAAMH,EAAQH,EAAQ6D,KAG1F/I,E,gBCpDT,SAAS8J,GAAaC,GACpB,OAAOtK,KAAKuK,IAAID,GAGlB,SAASE,GAAaF,GACpB,OAAOtK,KAAKyK,IAAIH,GAGlB,SAASI,GAAcJ,GACrB,OAAQtK,KAAKuK,KAAKD,GAGpB,SAASK,GAAcL,GACrB,OAAQtK,KAAKyK,KAAKH,GAGpB,SAASM,GAAMN,GACb,OAAOxG,SAASwG,KAAO,KAAOA,GAAKA,EAAI,EAAI,EAAIA,EAejD,SAASO,GAAQC,GACf,OAAO,SAAUR,GACf,OAAQQ,GAAGR,IAIR,SAASS,GAAQC,GACtB,IAGIC,EACAC,EAJA3K,EAAQyK,EAAUX,GAAcG,IAChC7J,EAASJ,EAAMI,OACfwK,EAAO,GAIX,SAAShK,IAUP,OATA8J,EApBJ,SAAcE,GACZ,OAAOA,IAASnL,KAAKoL,EAAIpL,KAAKuK,IAAe,KAATY,GAAenL,KAAKqL,OAAkB,IAATF,GAAcnL,KAAKsL,OAASH,EAAOnL,KAAKuK,IAAIY,GAAO,SAAUb,GAC5H,OAAOtK,KAAKuK,IAAID,GAAKa,IAkBdI,CAAKJ,GAAOD,EA1BvB,SAAcC,GACZ,OAAgB,KAATA,EAAcP,GAAQO,IAASnL,KAAKoL,EAAIpL,KAAKyK,IAAM,SAAUH,GAClE,OAAOtK,KAAKwL,IAAIL,EAAMb,IAwBImB,CAAKN,GAE3BxK,IAAS,GAAK,GAChBsK,EAAOJ,GAAQI,GAAOC,EAAOL,GAAQK,GACrCF,EAAUN,GAAeC,KAEzBK,EAAUX,GAAcG,IAGnBjK,EA2ET,OAxEAA,EAAM4K,KAAO,SAAU3J,GACrB,OAAO3B,UAAUC,QAAUqL,GAAQ3J,EAAGL,KAAagK,GAGrD5K,EAAMI,OAAS,SAAUa,GACvB,OAAO3B,UAAUC,QAAUa,EAAOa,GAAIL,KAAaR,KAGrDJ,EAAM8H,MAAQ,SAAUrF,GACtB,IAGI0I,EAHA3H,EAAIpD,IACJgL,EAAI5H,EAAE,GACN6H,EAAI7H,EAAEA,EAAEjE,OAAS,IAEjB4L,EAAIE,EAAID,KAAG5L,EAAI4L,EAAGA,EAAIC,EAAGA,EAAI7L,GACjC,IAEI8L,EACAxG,EACA+C,EAJArI,EAAIkL,EAAKU,GACTG,EAAIb,EAAKW,GAIThM,EAAa,MAAToD,EAAgB,IAAMA,EAC1B+I,EAAI,GAER,KAAMZ,EAAO,IAAMW,EAAI/L,EAAIH,EAAG,CAE5B,GADAG,EAAIC,KAAKqB,MAAMtB,GAAI+L,EAAI9L,KAAKE,KAAK4L,GAC7BH,EAAI,GAAG,KAAO5L,GAAK+L,IAAK/L,EAC1B,IAAKsF,EAAI,EAAGwG,EAAIX,EAAKnL,GAAIsF,EAAI8F,IAAQ9F,EAEnC,MADA+C,EAAIyD,EAAIxG,GACAsG,GAAR,CACA,GAAIvD,EAAIwD,EAAG,MACXG,EAAEvI,KAAK4E,SAEJ,KAAOrI,GAAK+L,IAAK/L,EACtB,IAAKsF,EAAI8F,EAAO,EAAGU,EAAIX,EAAKnL,GAAIsF,GAAK,IAAKA,EAExC,MADA+C,EAAIyD,EAAIxG,GACAsG,GAAR,CACA,GAAIvD,EAAIwD,EAAG,MACXG,EAAEvI,KAAK4E,GAGI,EAAX2D,EAAEjM,OAAaF,IAAGmM,GAAI,QAAMJ,EAAGC,EAAGhM,SAEtCmM,GAAI,QAAMhM,EAAG+L,EAAG9L,KAAK+B,IAAI+J,EAAI/L,EAAGH,IAAI2B,IAAI2J,GAG1C,OAAOQ,EAAIK,EAAE3K,UAAY2K,GAG3BxL,EAAM0J,WAAa,SAAUjH,EAAOoH,GAGlC,GAFiB,MAAbA,IAAmBA,EAAqB,KAATe,EAAc,MAAQ,KAChC,mBAAdf,IAA0BA,GAAY,SAAOA,IACpDpH,IAAUgJ,EAAAA,EAAU,OAAO5B,EAClB,MAATpH,IAAeA,EAAQ,IAC3B,IAAIqC,EAAIrF,KAAKC,IAAI,EAAGkL,EAAOnI,EAAQzC,EAAM8H,QAAQvI,QAEjD,OAAO,SAAUiE,GACf,IAAIhE,EAAIgE,EAAImH,EAAKlL,KAAKe,MAAMkK,EAAKlH,KAEjC,OADIhE,EAAIoL,EAAOA,EAAO,KAAKpL,GAAKoL,GACzBpL,GAAKsF,EAAI+E,EAAUrG,GAAK,KAInCxD,EAAMuI,KAAO,WACX,OAAOnI,EAAOmI,GAAKnI,IAAU,CAC3BU,MAAO,SAAeiJ,GACpB,OAAOY,EAAKlL,KAAKqB,MAAM4J,EAAKX,MAE9BpK,KAAM,SAAcoK,GAClB,OAAOY,EAAKlL,KAAKE,KAAK+K,EAAKX,UAK1B/J,EAEM,SAASgK,KACtB,IAAIhK,EAAQwK,IAAQ,YAAepK,OAAO,CAAC,EAAG,KAO9C,OALAJ,EAAMyB,KAAO,WACX,OAAO,SAAKzB,EAAOgK,MAAOY,KAAK5K,EAAM4K,SAGvClJ,GAAA,QAAgB1B,EAAOV,WAChBU,E,eC9IT,SAAS0L,GAAgBC,GACvB,OAAO,SAAU5B,GACf,OAAOtK,KAAKmM,KAAK7B,GAAKtK,KAAKoM,MAAMpM,KAAKgI,IAAIsC,EAAI4B,KAIlD,SAASG,GAAgBH,GACvB,OAAO,SAAU5B,GACf,OAAOtK,KAAKmM,KAAK7B,GAAKtK,KAAKsM,MAAMtM,KAAKgI,IAAIsC,IAAM4B,GAI7C,SAASK,GAAUvB,GACxB,IAAIkB,EAAI,EACJ3L,EAAQyK,EAAUiB,GAAgBC,GAAIG,GAAgBH,IAM1D,OAJA3L,EAAMiM,SAAW,SAAUhL,GACzB,OAAO3B,UAAUC,OAASkL,EAAUiB,GAAgBC,GAAK1K,GAAI6K,GAAgBH,IAAMA,IAG9E,EAAAO,GAAA,GAAUlM,GAEJ,SAASmM,KACtB,IAAInM,EAAQgM,IAAU,YAMtB,OAJAhM,EAAMyB,KAAO,WACX,OAAO,SAAKzB,EAAOmM,MAAUF,SAASjM,EAAMiM,aAGvCvK,GAAA,QAAgB1B,EAAOV,W,4BChC5B,IAAc,EAAAqD,GAAA,IAAS,eACxB,SAAUC,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,MACpB,SAAUF,EAAOmE,GAClB,OAAOA,EAAMnE,KAGf,GAAYoE,MAAQ,SAAUwB,GAE5B,OADAA,EAAIrF,KAAKqB,MAAMgE,GACVvB,SAASuB,IAAQA,EAAI,EACpBA,EAAI,GACH,EAAAnC,GAAA,IAAS,SAAUC,GACxBA,EAAKQ,QAAQ3D,KAAKqB,MAAM8B,EAAOkC,GAAKA,MACnC,SAAUlC,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAO0F,MAC3B,SAAU5F,EAAOmE,GAClB,OAAQA,EAAMnE,GAAS4F,KANJ,GADgB,MAWvC,U,IAC0B,GAAYlF,M,UCpBlC,IAAS,EAAA+C,GAAA,IAAS,SAAUC,GAC9BA,EAAKQ,QAAQR,EAAOA,EAAKuC,sBACxB,SAAUvC,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAOgN,GAAA,OAC3B,SAAUlN,EAAOmE,GAClB,OAAQA,EAAMnE,GAASkN,GAAA,MACtB,SAAUxJ,GACX,OAAOA,EAAKwC,mBAEd,MCTI,IDUiB,GAAOxF,OCVf,EAAA+C,GAAA,IAAS,SAAUC,GAC9BA,EAAKQ,QAAQR,EAAOA,EAAKuC,kBAAoBvC,EAAK0C,aAAe8G,GAAA,OAChE,SAAUxJ,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAOgN,GAAA,OAC3B,SAAUlN,EAAOmE,GAClB,OAAQA,EAAMnE,GAASkN,GAAA,MACtB,SAAUxJ,GACX,OAAOA,EAAK2C,iBAEd,MCTI,IDUiB,GAAO3F,OCVZ,EAAA+C,GAAA,IAAS,SAAUC,GACjCA,EAAKgD,cAAc,EAAG,MACrB,SAAUhD,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAOgN,GAAA,OAC3B,SAAUlN,EAAOmE,GAClB,OAAQA,EAAMnE,GAASkN,GAAA,MACtB,SAAUxJ,GACX,OAAOA,EAAKiD,oBAEd,MCTI,IDUoB,GAAUjG,OCVvB,EAAA+C,GAAA,IAAS,SAAUC,GAC5BA,EAAKQ,QAAQR,EAAOA,EAAKuC,kBAAoBvC,EAAK0C,aAAe8G,GAAA,GAAiBxJ,EAAK2C,aAAe6G,GAAA,OACrG,SAAUxJ,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAOgN,GAAA,OAC3B,SAAUlN,EAAOmE,GAClB,OAAQA,EAAMnE,GAASkN,GAAA,MACtB,SAAUxJ,GACX,OAAOA,EAAK6C,eAEd,MCTI,IDUe,GAAK7F,OCVV,EAAA+C,GAAA,IAAS,SAAUC,GAC/BA,EAAKmD,cAAc,EAAG,EAAG,MACxB,SAAUnD,EAAMxD,GACjBwD,EAAKQ,SAASR,EAAOxD,EAAOgN,GAAA,OAC3B,SAAUlN,EAAOmE,GAClB,OAAQA,EAAMnE,GAASkN,GAAA,MACtB,SAAUxJ,GACX,OAAOA,EAAKoD,kBAEd,MACsB,GAAQpG,MCT9B,SAAS,GAAWJ,GAClB,OAAO,EAAAmD,GAAA,IAAS,SAAUC,GACxBA,EAAKuD,WAAWvD,EAAKwD,cAAgBxD,EAAK0D,YAAc,EAAI9G,GAAK,GACjEoD,EAAKsD,YAAY,EAAG,EAAG,EAAG,MACzB,SAAUtD,EAAMxD,GACjBwD,EAAKuD,WAAWvD,EAAKwD,aAAsB,EAAPhH,MACnC,SAAUF,EAAOmE,GAClB,OAAQA,EAAMnE,GAASkN,GAAA,MAIpB,IAAI,GAAY,GAAW,GACvB,GAAY,GAAW,GACvB,GAAa,GAAW,GACxB,GAAe,GAAW,GAC1B,GAAc,GAAW,GACzB,GAAY,GAAW,GACvB,GAAc,GAAW,GCnBhC,IDoBoB,GAAUxM,MACV,GAAUA,MACT,GAAWA,MACT,GAAaA,MACd,GAAYA,MACd,GAAUA,MACR,GAAYA,OC1BvB,EAAA+C,GAAA,IAAS,SAAUC,GAChCA,EAAKuD,WAAW,GAChBvD,EAAKsD,YAAY,EAAG,EAAG,EAAG,MACzB,SAAUtD,EAAMxD,GACjBwD,EAAKmE,YAAYnE,EAAKoE,cAAgB5H,MACrC,SAAUF,EAAOmE,GAClB,OAAOA,EAAI2D,cAAgB9H,EAAM8H,cAAkE,IAAjD3D,EAAI4D,iBAAmB/H,EAAM+H,qBAC9E,SAAUrE,GACX,OAAOA,EAAKoE,kBAEd,MCVI,IDWmB,GAASpH,OCXlB,EAAA+C,GAAA,IAAS,SAAUC,GAC/BA,EAAKmE,YAAY,EAAG,GACpBnE,EAAKsD,YAAY,EAAG,EAAG,EAAG,MACzB,SAAUtD,EAAMxD,GACjBwD,EAAKuE,eAAevE,EAAKqE,iBAAmB7H,MAC3C,SAAUF,EAAOmE,GAClB,OAAOA,EAAI4D,iBAAmB/H,EAAM+H,oBACnC,SAAUrE,GACX,OAAOA,EAAKqE,qBAGd,GAAQ3D,MAAQ,SAAUwB,GACxB,OAAQvB,SAASuB,EAAIrF,KAAKqB,MAAMgE,KAASA,EAAI,GAAY,EAAAnC,GAAA,IAAS,SAAUC,GAC1EA,EAAKuE,eAAe1H,KAAKqB,MAAM8B,EAAKqE,iBAAmBnC,GAAKA,GAC5DlC,EAAKmE,YAAY,EAAG,GACpBnE,EAAKsD,YAAY,EAAG,EAAG,EAAG,MACzB,SAAUtD,EAAMxD,GACjBwD,EAAKuE,eAAevE,EAAKqE,iBAAmB7H,EAAO0F,MALH,MASpD,U,IACsB,GAAQlF,M,wPCTjByM,GAA6C,CACtD,mBAAQzJ,EAAK0J,gBAAgB,IAC7B,mBAAQ1J,EAAK2J,WAAW,IACxB,mBAAQ3J,EAAK4J,WAAW,IACxB,mBAAQ5J,EAAKe,SAAS,IACtB,mBAAQf,EAAKc,QAAQ,IACrB,mBAAQd,EAAKgB,SAAS,KAGb6I,GAA2E,CACpFxH,YAAa,GACbC,OAAQmH,GAAiB3D,MAAM,EAAG,GAClCrD,OAAQgH,GAAiB3D,MAAM,EAAG,GAClClD,KAAM6G,GAAiB3D,MAAM,EAAG,GAChChD,IAAK2G,GAAiB3D,MAAM,EAAG,GAC/BjF,MAAO4I,GAAiB3D,MAAM,EAAG,GACjC9D,KAAMyH,GAAiB3D,MAAM,EAAG,IAWvBgE,GAAuB,SAAC,GAAD,QAChC3D,OAAAA,OAAAA,IAAAA,EAAS,eACT4D,UAAAA,OAAAA,IAAAA,EAAY,oBACZC,OAAAA,OAAAA,IAAAA,GAAAA,EAMMC,EAjB2B,SAACF,GAAAA,OAA8B,SAAC/J,GAAAA,OACjE6J,GAAuBE,GAAWG,SAAQ,YACtCC,EAAOnK,MAGJA,GAYaoK,CAAsBL,GAAAA,OAEnC,SAACM,GAAAA,QAAAA,IACAA,EAAAA,OACOA,EAAAA,GAGI,WAAXlE,GAAuBkE,aAAiB7K,KAAAA,OACjCyK,EAAYI,GAAAA,IAGjBC,EAAYN,GAASO,EAAAA,EAAAA,IAASpE,IAAUqE,EAAAA,EAAAA,IAAUrE,GAAAA,OACjD8D,EAAYK,EAAUD,MC3DxBI,GAAoB,WAS7BC,EACAC,EACAC,GAAAA,IAEIC,EAAAA,EAOAC,EAAAA,EAAAA,EAAAA,EAlBAlM,IAAAA,OAAAA,IAAAA,EAAM,QACN9B,IAAAA,OAAAA,IAAAA,EAAM,aACNiO,QAAAA,OAAAA,IAAAA,GAAAA,EAAAA,EAAAA,EACA9M,QAAAA,OAAAA,IAAAA,GAAAA,EAAAA,EAAAA,EACA+M,MAAAA,OAAAA,IAAAA,GAAAA,EAAAA,EAAAA,EACArF,KAAAA,OAAAA,IAAAA,GAAAA,EAQAkF,EADQ,SAARjM,GACAiM,IAAWE,EAAAA,OAAAA,EAAmBL,EAAKO,YAAAA,EAAc,EAAIP,EAAK9L,IAE/CA,EAKXkM,EADQ,SAARhO,GACAgO,IAAWC,EAAAA,OAAAA,EAAmBL,EAAKQ,YAAAA,EAAc,EAAIR,EAAK5N,IAE/CA,EAAAA,IAGTM,GAAQ+N,EAAAA,GAAAA,KACT3M,WAAoB,MAAToM,EAAe,CAAC,EAAGD,GAAQ,CAACA,EAAM,IAC7CnN,OAAOS,EAAU,CAAC6M,EAAUD,GAAY,CAACA,EAAUC,IACnDE,MAAMA,GAAAA,OAAAA,IAEPrF,EAAevI,EAAMuI,OACA,iBAATA,GAAmBvI,EAAMuI,KAAKA,GAEvCyF,GAAgChO,EAAO2N,IAGrCK,GAAkB,SAC3BhO,EACA2N,QAAAA,IAAAA,IAAAA,GAAAA,GAAU,IAEJM,EAAajO,EAAAA,OACnBiO,EAAWC,KAAO,SAClBD,EAAWN,QAAUA,EAEdM,GChCEE,GAAgB,SAAQnO,GAAAA,IAC3BiO,EAAajO,EAAAA,OACnBiO,EAAWC,KAAO,OAEXD,GCjBEG,GAAkB,WAS3Bd,EACAC,GAAAA,IAIIE,EASAC,EAAAA,EAAAA,EArBA3E,OAAAA,OAAAA,IAAAA,EAAS,eACT4D,UAAAA,OAAAA,IAAAA,EAAY,oBACZnL,IAAAA,OAAAA,IAAAA,EAAM,aACN9B,IAAAA,OAAAA,IAAAA,EAAM,aACNkN,OAAAA,OAAAA,IAAAA,GAAAA,EAAAA,EAAAA,EACArE,KAAAA,OAAAA,IAAAA,GAAAA,EAKE8F,EAAY3B,GAAqB,CAAE3D,OAAAA,EAAQ4D,UAAAA,EAAWC,OAAAA,IAIxDa,EADQ,SAARjM,EACW6M,EAAUf,EAAK9L,KACR,WAAXuH,EACIsF,EAAU7M,GAEVA,EAKXkM,EADQ,SAARhO,EACW2O,EAAUf,EAAK5N,KACR,WAAXqJ,EACIsF,EAAU3O,GAEVA,EAAAA,IAGTM,EAAQ4M,EChCH,WACb,OAAOlL,GAAA,QAAgBoH,GAASb,GAAUC,GAAiB,GAAS,GAAU,GAAS,GAAQ,EAAS,EAAW,EAAW,MAAW9H,OAAO,CAACgC,KAAKkM,IAAI,IAAM,EAAG,GAAIlM,KAAKkM,IAAI,IAAM,EAAG,KAAMhP,WD+BtKiP,GfwBZ,WACb,OAAO7M,GAAA,QAAgBoH,GAAST,GAAWC,GAAkB,EAAU,EAAW,EAAU,EAAS,EAAU,EAAY,EAAY,MAAYlI,OAAO,CAAC,IAAIgC,KAAK,IAAM,EAAG,GAAI,IAAIA,KAAK,IAAM,EAAG,KAAM9C,WezBnKkP,GAEpCxO,EAAMJ,MAAM,CAAC,EAAG2N,IAEZE,GAAYC,GAAU1N,EAAMI,OAAO,CAACqN,EAAUC,KAAAA,IAE9CnF,EAAevI,EAAMuI,OACA,iBAATA,GAAqC,iBAATA,GAAmBvI,EAAMuI,KAAKA,GAAAA,IAEpE0F,EAAajO,EAAAA,OAEnBiO,EAAWC,KAAO,OAClBD,EAAWrB,OAASA,EAEbqB,GE/CEQ,GAAiB,SAAC,EAE3BnB,EACAC,EACAC,GAAAA,IAOI5B,EAAAA,EAAAA,EAVFhB,KAAAA,OAAAA,IAAAA,EAAO,SAAIpJ,IAAAA,OAAAA,IAAAA,EAAM,aAAQ9B,IAAAA,OAAAA,IAAAA,EAAM,YAKjB4N,EAAKoB,IAAIC,MAAK,mBAAW,IAANtD,KAAAA,MAEzB,IAAIuD,MAAAA,qDAAAA,IAoBVnB,EAOAC,EAvBAmB,GAAAA,EAAe,GACnBvB,EAAKoB,IACAxL,QAAO,mBAAU,MAALmI,KACZyB,SAAQ,YACD+B,SAAAA,IACAjD,EACAA,EAAOnM,KAAKmM,KAAKP,GACV5L,KAAKmM,KAAKP,KAAOO,IACxBiD,GAAAA,OAIRA,EAAAA,MACM,IAAID,MAAAA,qEAKVnB,EADQ,SAARjM,EACW8L,EAAK9L,IAELA,EAKXkM,EADQ,SAARhO,EACW4N,EAAK5N,IAELA,EAAAA,IAGTM,EAAQ8O,KACT1O,OAAO,CAACqN,EAAUC,IAClBtM,WAAoB,MAAToM,EAAe,CAAC,EAAGD,GAAQ,CAACA,EAAM,IAC7C3C,KAAKA,GACLrC,OAAAA,OAEcvI,EACRkO,KAAO,MAEXlO,GCnDE+O,GAAoB,SAAC,EAE9BzB,EACAC,EACAC,GAAAA,IAEIC,EAOAC,EAAAA,EAAAA,EAZFzB,SAAAA,OAAAA,IAAAA,EAAW,QAAGzK,IAAAA,OAAAA,IAAAA,EAAM,aAAQ9B,IAAAA,OAAAA,IAAAA,EAAM,aAAQmB,QAAAA,OAAAA,IAAAA,GAAAA,EAOxC4M,EADQ,SAARjM,EACW8L,EAAK9L,IAELA,EAKXkM,EADQ,SAARhO,EACW4N,EAAK5N,IAELA,EAAAA,IAGTM,EAAQgP,KACT/C,SAASA,GACT7K,WAAoB,MAAToM,EAAe,CAAC,EAAGD,GAAQ,CAACA,EAAM,IAC7ChF,QAAAA,IAED1H,EAAkBb,EAAMI,OAAO,CAACsN,EAAUD,IACzCzN,EAAMI,OAAO,CAACqN,EAAUC,IAAAA,IAEvBO,EAAajO,EAAAA,OACnBiO,EAAWC,KAAO,SAEXD,GCsBEgB,GAAgB,SAACC,EAAoBC,GAAAA,OAAuBD,IAAMC,GAClEC,GAAoB,SAACF,EAASC,GAAAA,OAAYD,EAAEG,YAAcF,EAAEE,WAElE,SAASC,GACZC,EACAjC,EACAC,EACAC,GAAAA,OAEQ+B,EAAKrB,MAAAA,IACJ,gBACMb,GAAkBkC,EAAMjC,EAAMC,EAAMC,GAAAA,IAC1C,eCjEmB,SAC5BgC,EACAlC,EACAC,GAAAA,IAIMU,GAFQwB,EAAAA,GAAAA,KAAoB7P,MAAM,CAAC,EAAG2N,IAAOnN,OAAOkN,EAAKoB,KAAAA,OAG/DT,EAAWC,KAAO,QAEXD,EDwDQyB,CAAwBH,EAAMjC,EAAMC,GAAAA,IAC1C,cLnEkB,WAE3BD,EACAC,EACAC,GAAAA,IAAAA,EAAAA,EAHEhN,MAAAA,OAAAA,IAAAA,GAAAA,EAKIR,GAAQ2P,EAAAA,GAAAA,KACT/P,MAAe,MAAT4N,EAAe,CAAC,EAAGD,GAAQ,CAACA,EAAM,IACxCnN,OAAOkN,EAAKoB,KACZlO,MAAMA,GAAAA,OAEJ2N,GAAqBnO,GKyDb4P,CAAuBL,EAAMjC,EAAMC,EAAMC,GAAAA,IAC/C,cACMY,GAAgBmB,EAAMjC,EAAMC,GAAAA,IAClC,aACMkB,GAAec,EAAMjC,EAAMC,EAAMC,GAAAA,IACvC,gBACMuB,GAAkBQ,EAAMjC,EAAMC,EAAMC,GAAAA,QAAAA,MAErC,IAAIoB,MAAM,uBAW5B,IAOMiB,GAAuB,SACzBC,EACAtC,EACAxN,GAAAA,IAAAA,EAAAA,GAEI,YAAaA,GAASA,EAAM2N,QAAS,CAAC,IAChCoC,EAAeD,EAAMxC,KAAc,MAATE,EAAe,WAAa,mBACxDuC,MAAAA,EACO,KAGJ/P,EAAM+P,GAAAA,OAAAA,OAAAA,EAGV/P,EAAM8P,EAAMxC,KAAKE,KAAAA,EAAU,MAUzBwC,GAA2B,SACpCC,EACAC,EACAC,EACAC,EACAC,GAAAA,IAGMC,EAAeL,EAAOjP,KAAI,mBAvCd,SAClBuP,GAAAA,OAAAA,GAAAA,GAEGA,EAAAA,CACHjD,KAAMiD,EAAMjD,KAAKtM,KAAI,kBAAM,CAAEsM,KAAAA,GAAAA,GAAW9J,SAJtB,CAuC2C+M,MAGvDC,EAAKC,GAAuBH,EAAcJ,EAAYC,GAGxD,YAAaD,IAAAA,IAAcA,EAAWvC,SACtC+C,GAAaF,EAAiBF,GAI9B,YAAaH,IAAAA,IAAcA,EAAWxC,SACtCgD,GAAaH,EAAiBF,GAAAA,IAI5BM,EAAStB,GAAqBY,EAAYM,EAAGzG,EAAGqG,EAAO,KACvDS,EAASvB,GAAqBa,EAAYK,EAAG7G,EAAG0G,EAAQ,KAGxDS,EAAwCR,EAAatP,KAAI,yBACxDuP,EAAAA,CACHjD,KAAMiD,EAAMjD,KAAKtM,KAAI,yBACd8O,EAAAA,CACHiB,SAAU,CACNhH,EAAG8F,GAAqBC,EAAO,IAAKc,GACpCjH,EAAGkG,GAAqBC,EAAO,IAAKe,cAAAA,OAAAA,GAAAA,GAMzCL,EAAAA,CACHP,OAAQa,EACRF,OAAAA,EACAC,OAAAA,KAIKJ,GAAmB,SAC5BR,EACAC,EACAC,GAAAA,MACE,CACFpG,EAAGiH,GAAgCf,EAAQ,IAAKC,GAChDvG,EAAGqH,GAAgCf,EAAQ,IAAKE,KAOvCa,GAAqB,SAC9Bf,EACAzC,EACAyD,EAAAA,GAAAA,IAAAA,OAAAA,IAAAA,EASI,SAPAC,SAAAA,OAAAA,IAAAA,EAAW,mBAAK1N,EAAE8J,KAAKE,IAAAA,EAAAA,EAAAA,EACvB2D,SAAAA,OAAAA,IAAAA,EAAW,SAAC3N,EAAG6H,GACX7H,EAAE8J,KAAKE,GAAQnC,GAAAA,EAAAA,GAOA,WAAnB4F,EAAU/C,KACV+B,EAAOnD,SAAQ,YACXyD,EAAMjD,KAAKR,SAAQ,gBACTG,EAAQiE,EAAS1N,GAEnByJ,GACAkE,EAAS3N,EAAG4N,WAAWC,OAAOpE,gBAIvC,GAAuB,SAAnBgE,EAAU/C,MAAwC,WAArB+C,EAAUlI,OAAqB,CAAC,IAG9DmE,EAAYR,GAAqBuE,GAEvChB,EAAOnD,SAAQ,YACXyD,EAAMjD,KAAKR,SAAQ,gBACTG,EAAQiE,EAAS1N,GAEnByJ,GACAkE,EAAS3N,EAAG0J,EAAUD,UAAAA,IAMhClM,EAAoB,UAE1BkP,EAAOnD,SAAQ,YACXyD,EAAMjD,KAAKR,SAAQ,YACf/L,EAAOkC,KAAKiO,EAAS1N,UAIrByN,EAAU/C,MAAAA,IACT,aACKQ,EAAM4C,GAAAA,CAERC,GAAAA,CAAKxQ,GAAoBmC,QAAO,mBAAW,OAANmI,MACrC,mBAAKA,KAAAA,MAGF,CAAEqD,IAAAA,EAAKlN,IAAK/B,KAAK+B,IAAAA,MAAL/B,KAAYiP,GAAMhP,IAAKD,KAAKC,IAAAA,MAALD,KAAYiP,IAAAA,IAErD,WACKA,EAAM8C,GAAAA,CAAOzQ,GAAkB,mBAAKsK,EAAEgE,aACvC3G,MAAM,GACN+I,MAAK,SAACvC,EAAGC,GAAAA,OAAMA,EAAEE,UAAYH,EAAEG,aAC/BxO,UAAAA,MAEE,CAAE6N,IAAAA,EAAKlN,IAAKkN,EAAI,GAAIhP,IAAKgS,GAAAA,CAAKhD,IAAAA,QAAAA,IAG/BA,EAAM6C,GAAAA,CAAKxQ,GAAAA,MAEV,CAAE2N,IAAAA,EAAKlN,IAAKkN,EAAI,GAAIhP,IAAKgS,GAAAA,CAAKhD,MAKpCiD,GAAY,SACrBnE,EACAgD,EACAP,GAAAA,IAEM2B,EA9MkB,SAACpE,GAAAA,MAAyC,MAATA,EAAe,IAAM,IA8M5DqE,CAAarE,GACzBkB,EAAgB,GAEtB8B,EAAGoB,GAAWlD,IAAI5B,SAAQ,gBAChBgF,EAAWC,GAAAA,CAAO1G,GAAK+D,GAAoBH,GAC3C+C,EAA8B,GAEpC/B,EAAOnD,SAAQ,gBACLgD,EAAQS,EAAMjD,KAAK2E,MAAK,mBAAKH,EAAQtO,EAAE8J,KAAKsE,GAAYvG,MAC1D4B,EAAQ,KACRiF,EAAa,iBAEbpC,EAAqB,CAAC,GAGR,QADd7C,EAAQ6C,EAAMxC,KAAKE,IACC,CAAC,IACX2E,EAAOT,GAAAA,CAAKM,QAAAA,IACdG,EACAD,EAAajF,EACG,OAATkF,IACPD,EAAaC,EAAOlF,GAI5B6C,EAAMxC,KAAc,MAATE,EAAe,WAAa,YAAc0E,EAGzDF,EAAM/O,KAAKiP,GAEQ,OAAfA,GACAxD,EAAIzL,KAAKiP,SAKrB1B,EAAGhD,GAAMK,WAAapO,KAAK+B,IAAAA,MAAL/B,KAAYiP,GAClC8B,EAAGhD,GAAMM,WAAarO,KAAKC,IAAAA,MAALD,KAAYiP,IAGhCgC,GAAS,SACXF,EACAP,GAAAA,OACC0B,GAAgB,IAAKnB,EAAIP,IAExBU,GAAS,SACXH,EACAP,GAAAA,OACC0B,GAAgB,IAAKnB,EAAIP,IEjRjBmC,GAAc,SAAQpS,GAAAA,IACzBD,EAAYC,EAAMD,YAAAA,GAEN,IAAdA,EAAiB,OAAOC,EAAAA,IAExB+C,EAAShD,EAAY,SACrBC,EAAMQ,UACNuC,EAAStD,KAAKe,MAAMuC,IAGjB,SAAkBS,GAAAA,IAAAA,EAAAA,OAAAA,OAAAA,EAAUxD,EAAMwD,IAAAA,EAAM,GAAKT,IAiBlDsP,GAA6E,CAC/EpN,YAAa,CAACqN,GAAiBC,IAC/BrN,OAAQ,CAACsN,GAAYC,IACrBpN,OAAQ,CAACqN,GAAY/M,IACrBH,KAAM,CAACmN,GAAU7M,IACjBJ,IAAK,EAnBOkN,EAAAA,GAAAA,IACZ,mBAAQhQ,EAAKe,SAAS,EAAG,EAAG,EAAG,MAC/B,SAACf,EAAMxD,GAAAA,OAASwD,EAAKc,QAAQd,EAAKqB,UAAY7E,MAC9C,SAACF,EAAOmE,GAAAA,OAASA,EAAIgM,UAAYnQ,EAAMmQ,WAAa,SACpD,mBAAQ5P,KAAKqB,MAAM8B,EAAKyM,UAAY,WAGzBuD,EAAAA,GAAAA,IACX,mBAAQhQ,EAAKsD,YAAY,EAAG,EAAG,EAAG,MAClC,SAACtD,EAAMxD,GAAAA,OAASwD,EAAKuD,WAAWvD,EAAKwD,aAAehH,MACpD,SAACF,EAAOmE,GAAAA,OAASA,EAAIgM,UAAYnQ,EAAMmQ,WAAa,SACpD,mBAAQ5P,KAAKqB,MAAM8B,EAAKyM,UAAY,WASpChI,KAAM,CAACwL,GAAAA,GAAUC,IACjB1O,OAAQ,CAAC2O,GAAAA,GAAYxM,IACrBlC,OAAQ,CAAC2O,GAAAA,GAAYxM,IACrBlC,QAAS,CAAC2O,GAAAA,GAAaxM,IACvBlC,UAAW,CAAC2O,GAAAA,GAAexM,IAC3BlC,SAAU,CAAC2O,GAAAA,GAAcxM,IACzBlC,OAAQ,CAAC2O,GAAAA,GAAYxM,IACrBlC,SAAU,CAAC2O,GAAAA,GAAcxM,IACzBpD,MAAO,CAAC6P,GAAAA,EAAWxM,IACnBlC,KAAM,CAAC2O,GAAAA,EAAUrM,KAGfsM,GAAYC,OAAOC,KAAKrB,IACxBsB,GAAqB,IAAIC,OAAAA,yBAAgCJ,GAAUK,KAAK,YAAY,KAK7EC,GAAgB,SACzB9T,EACAuP,GAAAA,GAGI1P,MAAMkU,QAAQxE,GAAAA,OACPA,EAAAA,GAGS,iBAATA,GAAqB,WAAYvP,EAAO,CAAC,IAE1CgU,EAAUzE,EAAK0E,MAAMN,IAAAA,GAEvBK,EAAS,CAAC,IACDE,EAAgBF,EAAAA,GAAR9F,EAAQ8F,EAAAA,GAInBG,EAAW9B,GAAWnE,GAAMlO,EAAM4M,OAAS,EAAI,MAExC,QAATsB,EAAgB,CAAC,IAAD,MACclO,EAAMI,SAA7BlB,EAAAA,EAAAA,GAAOkV,EAAAA,EAAAA,GACRjV,EAAO,IAAIiD,KAAKgS,GAAAA,OAGtBjV,EAAKuE,QAAQvE,EAAK8E,UAAY,qBAEvBkQ,EAAS7Q,MAAM+Q,OAAAA,MAAOH,EAAAA,EAAU,YAAhCC,EAAqCvU,MAAMV,EAAOC,IAAAA,EAAS,eAGlE+U,EAAAA,OACOlU,EAAM8H,MAAMqM,GAAAA,IAGjBxR,EAAWwR,EAAS7Q,MAAM+Q,OAAOH,IAAAA,GAEnCvR,EAAAA,OACO3C,EAAM8H,MAAMnF,GAAAA,MAIrB,IAAIiM,MAAAA,uBAA6BW,GAAAA,GAIvC,UAAWvP,EAAO,CAAC,QAAD,IAEduP,EAAAA,OACOvP,EAAM8H,QAAAA,GAlDJ,iBADFmF,EAuDGsC,IAtDWhM,SAAS0J,IAAUxN,KAAKqB,MAAMmM,KAAWA,EAAAA,OAuDvDjN,EAAM8H,MAAMyH,GAxDb,IAACtC,EAAAA,OA6DRjN,EAAMI,W,sBC/IjB,IAAIkU,EAAa,EAAQ,OACrBC,EAAe,EAAQ,OAgB3BC,EAAOC,QAJP,SAAoBxH,GAClB,OAAOsH,EAAatH,IAVR,iBAUkBqH,EAAWrH,K,sBCd3C,IAAIyH,EAAa,EAAQ,OACrBC,EAAY,EAAQ,OACpBC,EAAW,EAAQ,OAGnBC,EAAaD,GAAYA,EAAS7C,OAmBlCA,EAAS8C,EAAaF,EAAUE,GAAcH,EAElDF,EAAOC,QAAU1C,G,sBC1BjB,IAAI+C,EAAe,EAAQ,OACvBC,EAAW,EAAQ,OA6BvBP,EAAOC,QAJP,SAAgBO,EAAOC,GACrB,OAAQD,GAASA,EAAMzV,OAAUwV,EAASC,EAAOF,EAAaG,EAAU,IAAM","sources":["webpack://nivo-website/../node_modules/d3-array/src/range.js","webpack://nivo-website/../node_modules/d3-scale/src/band.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/../node_modules/d3-time/src/month.js","webpack://nivo-website/../node_modules/d3-time/src/week.js","webpack://nivo-website/../node_modules/d3-time/src/year.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/interval.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/millisecond.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/second.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/minute.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/hour.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/day.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/week.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/month.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/year.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/utcMinute.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/utcHour.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/utcDay.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/utcWeek.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/utcMonth.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/utcYear.js","webpack://nivo-website/../node_modules/d3-scale/node_modules/d3-time/src/ticks.js","webpack://nivo-website/../node_modules/d3-scale/src/nice.js","webpack://nivo-website/../node_modules/d3-scale/src/time.js","webpack://nivo-website/../node_modules/d3-scale/src/log.js","webpack://nivo-website/../node_modules/d3-scale/src/symlog.js","webpack://nivo-website/../node_modules/d3-time/src/millisecond.js","webpack://nivo-website/../node_modules/d3-time/src/second.js","webpack://nivo-website/../node_modules/d3-time/src/minute.js","webpack://nivo-website/../node_modules/d3-time/src/utcMinute.js","webpack://nivo-website/../node_modules/d3-time/src/hour.js","webpack://nivo-website/../node_modules/d3-time/src/utcHour.js","webpack://nivo-website/../node_modules/d3-time/src/utcWeek.js","webpack://nivo-website/../node_modules/d3-time/src/utcMonth.js","webpack://nivo-website/../node_modules/d3-time/src/utcYear.js","webpack://nivo-website/../src/timeHelpers.ts","webpack://nivo-website/../src/linearScale.ts","webpack://nivo-website/../src/bandScale.ts","webpack://nivo-website/../src/timeScale.ts","webpack://nivo-website/../node_modules/d3-scale/src/utcTime.js","webpack://nivo-website/../src/logScale.ts","webpack://nivo-website/../src/symlogScale.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/pointScale.ts","webpack://nivo-website/../src/ticks.ts","webpack://nivo-website/../node_modules/lodash/_baseIsDate.js","webpack://nivo-website/../node_modules/lodash/isDate.js","webpack://nivo-website/../node_modules/lodash/uniqBy.js"],"sourcesContent":["export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","import _slicedToArray from \"/Users/raph/projects/plouc/nivo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { range as sequence } from \"d3-array\";\nimport { initRange } from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function (i) {\n      return start + step * i;\n    });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function (_) {\n    var _ref, _ref2;\n\n    return arguments.length ? ((_ref = _, _ref2 = _slicedToArray(_ref, 2), r0 = _ref2[0], r1 = _ref2[1], _ref), r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function (_) {\n    var _ref3, _ref4;\n\n    return (_ref3 = _, _ref4 = _slicedToArray(_ref3, 2), r0 = _ref4[0], r1 = _ref4[1], _ref3), r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n\n  scale.step = function () {\n    return step;\n  };\n\n  scale.round = function (_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function (_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function (_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function () {\n    return band(domain(), [r0, r1]).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function () {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import interval from \"./interval.js\";\nvar month = interval(function (date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function (start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function (date) {\n  return date.getMonth();\n});\nexport default month;\nexport var months = month.range;","import interval from \"./interval.js\";\nimport { durationMinute, durationWeek } from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function (date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;","import interval from \"./interval.js\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","export var durationSecond = 1000;\nexport var durationMinute = durationSecond * 60;\nexport var durationHour = durationMinute * 60;\nexport var durationDay = durationHour * 24;\nexport var durationWeek = durationDay * 7;\nexport var durationMonth = durationDay * 30;\nexport var durationYear = durationDay * 365;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import interval from \"./interval.js\";\nvar millisecond = interval(function () {// noop\n}, function (date, step) {\n  date.setTime(+date + step);\n}, function (start, end) {\n  return end - start;\n}); // An optimized implementation for this simple case.\n\nmillisecond.every = function (k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function (date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function (date, step) {\n    date.setTime(+date + step * k);\n  }, function (start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;","import interval from \"./interval.js\";\nimport { durationSecond } from \"./duration.js\";\nvar second = interval(function (date) {\n  date.setTime(date - date.getMilliseconds());\n}, function (date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function (start, end) {\n  return (end - start) / durationSecond;\n}, function (date) {\n  return date.getUTCSeconds();\n});\nexport default second;\nexport var seconds = second.range;","import interval from \"./interval.js\";\nimport { durationMinute, durationSecond } from \"./duration.js\";\nvar minute = interval(function (date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getMinutes();\n});\nexport default minute;\nexport var minutes = minute.range;","import interval from \"./interval.js\";\nimport { durationHour, durationMinute, durationSecond } from \"./duration.js\";\nvar hour = interval(function (date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getHours();\n});\nexport default hour;\nexport var hours = hour.range;","import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  return date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  return date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import interval from \"./interval.js\";\nimport { durationMinute, durationWeek } from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function (date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;","import interval from \"./interval.js\";\nvar month = interval(function (date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function (start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function (date) {\n  return date.getMonth();\n});\nexport default month;\nexport var months = month.range;","import interval from \"./interval.js\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","import interval from \"./interval.js\";\nimport { durationMinute } from \"./duration.js\";\nvar utcMinute = interval(function (date) {\n  date.setUTCSeconds(0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getUTCMinutes();\n});\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;","import interval from \"./interval.js\";\nimport { durationHour } from \"./duration.js\";\nvar utcHour = interval(function (date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getUTCHours();\n});\nexport default utcHour;\nexport var utcHours = utcHour.range;","import interval from \"./interval.js\";\nimport { durationDay } from \"./duration.js\";\nvar utcDay = interval(function (date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function (start, end) {\n  return (end - start) / durationDay;\n}, function (date) {\n  return date.getUTCDate() - 1;\n});\nexport default utcDay;\nexport var utcDays = utcDay.range;","import interval from \"./interval.js\";\nimport { durationWeek } from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function (date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function (start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;","import interval from \"./interval.js\";\nvar utcMonth = interval(function (date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function (start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function (date) {\n  return date.getUTCMonth();\n});\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;","import interval from \"./interval.js\";\nvar utcYear = interval(function (date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function (start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function (date) {\n  return date.getUTCFullYear();\n}); // An optimized implementation for this simple case.\n\nutcYear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;","import _slicedToArray from \"/Users/raph/projects/plouc/nivo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { bisector, tickStep } from \"d3-array\";\nimport { durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear } from \"./duration.js\";\nimport millisecond from \"./millisecond.js\";\nimport second from \"./second.js\";\nimport minute from \"./minute.js\";\nimport hour from \"./hour.js\";\nimport day from \"./day.js\";\nimport { sunday as week } from \"./week.js\";\nimport month from \"./month.js\";\nimport year from \"./year.js\";\nimport utcMinute from \"./utcMinute.js\";\nimport utcHour from \"./utcHour.js\";\nimport utcDay from \"./utcDay.js\";\nimport { utcSunday as utcWeek } from \"./utcWeek.js\";\nimport utcMonth from \"./utcMonth.js\";\nimport utcYear from \"./utcYear.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];\n\n  function ticks(start, stop, count) {\n    var reverse = stop < start;\n\n    if (reverse) {\n      var _ref = [stop, start];\n      start = _ref[0];\n      stop = _ref[1];\n    }\n\n    var interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    var ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    var target = Math.abs(stop - start) / count;\n    var i = bisector(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 3),\n          step = _ref3[2];\n\n      return step;\n    }).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n\n    var _tickIntervals = _slicedToArray(tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i], 2),\n        t = _tickIntervals[0],\n        step = _tickIntervals[1];\n\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nvar _ticker = ticker(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute),\n    _ticker2 = _slicedToArray(_ticker, 2),\n    utcTicks = _ticker2[0],\n    utcTickInterval = _ticker2[1];\n\nvar _ticker3 = ticker(year, month, week, day, hour, minute),\n    _ticker4 = _slicedToArray(_ticker3, 2),\n    timeTicks = _ticker4[0],\n    timeTickInterval = _ticker4[1];\n\nexport { utcTicks, utcTickInterval, timeTicks, timeTickInterval };","export default function nice(domain, interval) {\n  domain = domain.slice();\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}","import { timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeTicks, timeTickInterval } from \"d3-time\";\nimport { timeFormat } from \"d3-time-format\";\nimport continuous, { copy } from \"./continuous.js\";\nimport { initRange } from \"./init.js\";\nimport nice from \"./nice.js\";\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);\n  }\n\n  scale.invert = function (y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function (interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function (interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function () {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\nexport default function time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}","import { ticks } from \"d3-array\";\nimport { format } from \"d3-format\";\nimport nice from \"./nice.js\";\nimport { copy, transformer } from \"./continuous.js\";\nimport { initRange } from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {\n    return Math.pow(base, x);\n  };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {\n    return Math.log(x) / base;\n  });\n}\n\nfunction reflect(f) {\n  return function (x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n\n    return scale;\n  }\n\n  scale.base = function (_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function (count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n    if (r = v < u) i = u, u = v, v = i;\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\n    return function (d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function () {\n    return domain(nice(domain(), {\n      floor: function floor(x) {\n        return pows(Math.floor(logs(x)));\n      },\n      ceil: function ceil(x) {\n        return pows(Math.ceil(logs(x)));\n      }\n    }));\n  };\n\n  return scale;\n}\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function () {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n  return scale;\n}","import { linearish } from \"./linear.js\";\nimport { copy, transformer } from \"./continuous.js\";\nimport { initRange } from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function (x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function (x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1,\n      scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function (_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function () {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}","import interval from \"./interval.js\";\nvar millisecond = interval(function () {// noop\n}, function (date, step) {\n  date.setTime(+date + step);\n}, function (start, end) {\n  return end - start;\n}); // An optimized implementation for this simple case.\n\nmillisecond.every = function (k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function (date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function (date, step) {\n    date.setTime(+date + step * k);\n  }, function (start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;","import interval from \"./interval.js\";\nimport { durationSecond } from \"./duration.js\";\nvar second = interval(function (date) {\n  date.setTime(date - date.getMilliseconds());\n}, function (date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function (start, end) {\n  return (end - start) / durationSecond;\n}, function (date) {\n  return date.getUTCSeconds();\n});\nexport default second;\nexport var seconds = second.range;","import interval from \"./interval.js\";\nimport { durationMinute, durationSecond } from \"./duration.js\";\nvar minute = interval(function (date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getMinutes();\n});\nexport default minute;\nexport var minutes = minute.range;","import interval from \"./interval.js\";\nimport { durationMinute } from \"./duration.js\";\nvar utcMinute = interval(function (date) {\n  date.setUTCSeconds(0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getUTCMinutes();\n});\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;","import interval from \"./interval.js\";\nimport { durationHour, durationMinute, durationSecond } from \"./duration.js\";\nvar hour = interval(function (date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getHours();\n});\nexport default hour;\nexport var hours = hour.range;","import interval from \"./interval.js\";\nimport { durationHour } from \"./duration.js\";\nvar utcHour = interval(function (date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getUTCHours();\n});\nexport default utcHour;\nexport var utcHours = utcHour.range;","import interval from \"./interval.js\";\nimport { durationWeek } from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function (date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function (start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;","import interval from \"./interval.js\";\nvar utcMonth = interval(function (date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function (start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function (date) {\n  return date.getUTCMonth();\n});\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;","import interval from \"./interval.js\";\nvar utcYear = interval(function (date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function (start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function (date) {\n  return date.getUTCFullYear();\n}); // An optimized implementation for this simple case.\n\nutcYear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;","import { timeParse, utcParse } from 'd3-time-format'\n\nexport const timePrecisions = [\n    'millisecond',\n    'second',\n    'minute',\n    'hour',\n    'day',\n    'month',\n    'year',\n] as const\n\nexport type TIME_PRECISION = typeof timePrecisions[number]\n\nexport const precisionCutOffs: ((date: Date) => void)[] = [\n    date => date.setMilliseconds(0),\n    date => date.setSeconds(0),\n    date => date.setMinutes(0),\n    date => date.setHours(0),\n    date => date.setDate(1),\n    date => date.setMonth(0),\n]\n\nexport const precisionCutOffsByType: Record<TIME_PRECISION, ((date: Date) => void)[]> = {\n    millisecond: [],\n    second: precisionCutOffs.slice(0, 1),\n    minute: precisionCutOffs.slice(0, 2),\n    hour: precisionCutOffs.slice(0, 3),\n    day: precisionCutOffs.slice(0, 4),\n    month: precisionCutOffs.slice(0, 5),\n    year: precisionCutOffs.slice(0, 6),\n}\n\nexport const createPrecisionMethod = (precision: TIME_PRECISION) => (date: Date) => {\n    precisionCutOffsByType[precision].forEach(cutOff => {\n        cutOff(date)\n    })\n\n    return date\n}\n\nexport const createDateNormalizer = ({\n    format = 'native',\n    precision = 'millisecond',\n    useUTC = true,\n}: {\n    format?: 'native' | string\n    precision?: TIME_PRECISION\n    useUTC?: boolean\n}) => {\n    const precisionFn = createPrecisionMethod(precision)\n\n    return (value: Date | string | undefined) => {\n        if (value === undefined) {\n            return value\n        }\n\n        if (format === 'native' || value instanceof Date) {\n            return precisionFn(value as Date)\n        }\n\n        const parseTime = useUTC ? utcParse(format) : timeParse(format)\n        return precisionFn(parseTime(value as string) as Date)\n    }\n}\n","import { NumberValue, scaleLinear, ScaleLinear as D3ScaleLinear } from 'd3-scale'\nimport { ScaleLinearSpec, ScaleLinear, ComputedSerieAxis, ScaleAxis } from './types'\n\nexport const createLinearScale = <Output extends NumberValue>(\n    {\n        min = 0,\n        max = 'auto',\n        stacked = false,\n        reverse = false,\n        clamp = false,\n        nice = false,\n    }: ScaleLinearSpec,\n    data: ComputedSerieAxis<Output>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: NumberValue\n    if (min === 'auto') {\n        minValue = stacked === true ? data.minStacked ?? 0 : data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: NumberValue\n    if (max === 'auto') {\n        maxValue = stacked === true ? data.maxStacked ?? 0 : data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLinear<number, Output>()\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .domain(reverse ? [maxValue, minValue] : [minValue, maxValue])\n        .clamp(clamp)\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'number') scale.nice(nice)\n\n    return castLinearScale<number, Output>(scale, stacked)\n}\n\nexport const castLinearScale = <Range, Output>(\n    scale: D3ScaleLinear<Range, Output>,\n    stacked = false\n) => {\n    const typedScale = scale as unknown as ScaleLinear<number>\n    typedScale.type = 'linear'\n    typedScale.stacked = stacked\n\n    return typedScale\n}\n","import { scaleBand, ScaleBand as D3ScaleBand } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleBand, ScaleBandSpec, StringValue, ScaleAxis } from './types'\n\nexport const createBandScale = <Input extends StringValue>(\n    { round = true }: ScaleBandSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const scale = scaleBand<Input>()\n        .range(axis === 'x' ? [0, size] : [size, 0])\n        .domain(data.all)\n        .round(round)\n\n    return castBandScale<Input>(scale)\n}\n\nexport const castBandScale = <Input>(scale: D3ScaleBand<Input>) => {\n    const typedScale = scale as ScaleBand<Input>\n    typedScale.type = 'band'\n\n    return typedScale\n}\n","import { NumberValue, scaleTime, scaleUtc } from 'd3-scale'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ComputedSerieAxis, ScaleTime, ScaleTimeSpec } from './types'\n\nexport const createTimeScale = <Input extends Date | NumberValue>(\n    {\n        format = 'native',\n        precision = 'millisecond',\n        min = 'auto',\n        max = 'auto',\n        useUTC = true,\n        nice = false,\n    }: ScaleTimeSpec,\n    data: ComputedSerieAxis<string | Date>,\n    size: number\n) => {\n    const normalize = createDateNormalizer({ format, precision, useUTC })\n\n    let minValue: Date | undefined\n    if (min === 'auto') {\n        minValue = normalize(data.min)\n    } else if (format !== 'native') {\n        minValue = normalize(min)\n    } else {\n        minValue = min as Date\n    }\n\n    let maxValue: Date | undefined\n    if (max === 'auto') {\n        maxValue = normalize(data.max)\n    } else if (format !== 'native') {\n        maxValue = normalize(max)\n    } else {\n        maxValue = max as Date\n    }\n\n    const scale = useUTC ? scaleUtc() : scaleTime()\n\n    scale.range([0, size])\n\n    if (minValue && maxValue) scale.domain([minValue, maxValue])\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'object' || typeof nice === 'number') scale.nice(nice)\n\n    const typedScale = scale as unknown as ScaleTime<Input>\n\n    typedScale.type = 'time'\n    typedScale.useUTC = useUTC\n\n    return typedScale\n}\n","import { utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcTicks, utcTickInterval } from \"d3-time\";\nimport { utcFormat } from \"d3-time-format\";\nimport { calendar } from \"./time.js\";\nimport { initRange } from \"./init.js\";\nexport default function utcTime() {\n  return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}","import { scaleLog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleLog, ScaleLogSpec } from './types'\n\nexport const createLogScale = (\n    { base = 10, min = 'auto', max = 'auto' }: ScaleLogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const hasZero = data.all.some(v => v === 0)\n    if (hasZero) {\n        throw new Error(`a log scale domain must not include or cross zero`)\n    }\n\n    let sign: number\n    let hasMixedSign = false\n    data.all\n        .filter(v => v != null)\n        .forEach(v => {\n            if (hasMixedSign) return\n            if (sign === undefined) {\n                sign = Math.sign(v)\n            } else if (Math.sign(v) !== sign) {\n                hasMixedSign = true\n            }\n        })\n\n    if (hasMixedSign) {\n        throw new Error(`a log scale domain must be strictly-positive or strictly-negative`)\n    }\n\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLog<number, number>()\n        .domain([minValue, maxValue])\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .base(base)\n        .nice()\n\n    const typedScale = scale as ScaleLog\n    typedScale.type = 'log'\n\n    return scale\n}\n","import { scaleSymlog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleSymlog, ScaleSymlogSpec } from './types'\n\nexport const createSymlogScale = (\n    { constant = 1, min = 'auto', max = 'auto', reverse = false }: ScaleSymlogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleSymlog<number, number>()\n        .constant(constant)\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .nice()\n\n    if (reverse === true) scale.domain([maxValue, minValue])\n    else scale.domain([minValue, maxValue])\n\n    const typedScale = scale as ScaleSymlog\n    typedScale.type = 'symlog'\n\n    return typedScale\n}\n","import uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport sortBy from 'lodash/sortBy'\nimport last from 'lodash/last'\nimport isDate from 'lodash/isDate'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ScaleAxis, ScaleSpec, ScaleValue, SerieAxis, ComputedSerieAxis } from './types'\nimport { createLinearScale } from './linearScale'\nimport { createPointScale } from './pointScale'\nimport { createBandScale } from './bandScale'\nimport { createTimeScale } from './timeScale'\nimport { createLogScale } from './logScale'\nimport { createSymlogScale } from './symlogScale'\n\ntype XY = ReturnType<typeof generateSeriesXY>\n\ntype StackedXY = {\n    [K in keyof XY]: XY[K] & {\n        maxStacked: number\n        minStacked: number\n    }\n}\n\ninterface SerieDatum {\n    x: number | string | Date\n    // only numbers can be stacked\n    xStacked?: number | null\n    y: number | string | Date\n    // only numbers can be stacked\n    yStacked?: number | null\n}\n\ntype Serie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: D[]\n}\n\ntype NestedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n    }[]\n}\n\nexport type ComputedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n        position: {\n            x: number | null\n            y: number | null\n        }\n    }[]\n}\n\ntype Compare = <T>(a: T, b: T) => boolean\n\nexport const getOtherAxis = (axis: ScaleAxis): ScaleAxis => (axis === 'x' ? 'y' : 'x')\n\nexport const compareValues = (a: string | number, b: string | number) => a === b\nexport const compareDateValues = (a: Date, b: Date) => a.getTime() === b.getTime()\n\nexport function computeScale<Input extends ScaleValue>(\n    spec: ScaleSpec,\n    data: ComputedSerieAxis<any>,\n    size: number,\n    axis: ScaleAxis\n) {\n    switch (spec.type) {\n        case 'linear':\n            return createLinearScale(spec, data, size, axis)\n        case 'point':\n            return createPointScale<Input>(spec, data, size)\n        case 'band':\n            return createBandScale<Input>(spec, data, size, axis)\n        case 'time':\n            return createTimeScale(spec, data, size)\n        case 'log':\n            return createLogScale(spec, data, size, axis)\n        case 'symlog':\n            return createSymlogScale(spec, data, size, axis)\n        default:\n            throw new Error('invalid scale spec')\n    }\n}\n\n/**\n * Convert serie data to have the original data stored in a nested prop.\n *\n * We do this in order to avoid conflicts between raw & computed properties.\n * <- { data: { x: 1, y: 3 }[] }\n * -> { data: { data: { x: 1, y: 3 } }[] }\n */\nconst nestSerieData = <S = never, D extends SerieDatum = SerieDatum>(\n    serie: Serie<S, D>\n): NestedSerie<S, D> => ({\n    ...serie,\n    data: serie.data.map(d => ({ data: { ...d } })),\n})\n\nconst getDatumAxisPosition = <D extends SerieDatum = SerieDatum>(\n    datum: { data: D },\n    axis: ScaleAxis,\n    scale: any\n): number | null => {\n    if ('stacked' in scale && scale.stacked) {\n        const stackedValue = datum.data[axis === 'x' ? 'xStacked' : 'yStacked']\n        if (stackedValue === null || stackedValue === undefined) {\n            return null\n        }\n\n        return scale(stackedValue)\n    }\n\n    return scale(datum.data[axis]) ?? null\n}\n\n/**\n * Compute x/y d3 scales from an array of data series, and scale specifications.\n *\n * We use generics as it's not uncommon to have extra properties such as an id\n * added to the series, or extra props on data, in such case, you should override\n * the default types.\n */\nexport const computeXYScalesForSeries = <S = never, D extends SerieDatum = SerieDatum>(\n    series: Serie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec,\n    width: number,\n    height: number\n) => {\n    // first nest series to avoid property conflicts\n    const nestedSeries = series.map(serie => nestSerieData<S, D>(serie))\n\n    // then compute data for each axis: all, min, max values\n    const xy = generateSeriesXY<S, D>(nestedSeries, xScaleSpec, yScaleSpec)\n\n    // stack x values depending on xScale\n    if ('stacked' in xScaleSpec && xScaleSpec.stacked === true) {\n        stackX<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // stack y values depending on yScale\n    if ('stacked' in yScaleSpec && yScaleSpec.stacked === true) {\n        stackY<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // computes scales\n    const xScale = computeScale<D['x']>(xScaleSpec, xy.x, width, 'x')\n    const yScale = computeScale<D['y']>(yScaleSpec, xy.y, height, 'y')\n\n    // assign position to each datum in every scale\n    const computedSeries: ComputedSerie<S, D>[] = nestedSeries.map(serie => ({\n        ...serie,\n        data: serie.data.map(datum => ({\n            ...datum,\n            position: {\n                x: getDatumAxisPosition(datum, 'x', xScale),\n                y: getDatumAxisPosition(datum, 'y', yScale),\n            },\n        })),\n    }))\n\n    return {\n        ...xy,\n        series: computedSeries,\n        xScale,\n        yScale,\n    }\n}\n\nexport const generateSeriesXY = <S = never, D extends SerieDatum = SerieDatum>(\n    series: NestedSerie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec\n) => ({\n    x: generateSeriesAxis<'x', D['x']>(series, 'x', xScaleSpec),\n    y: generateSeriesAxis<'y', D['y']>(series, 'y', yScaleSpec),\n})\n\n/**\n * Normalize data according to scale type, (time => Date, linear => Number)\n * compute sorted unique values and min/max.\n */\nexport const generateSeriesAxis = <Axis extends ScaleAxis, Value extends ScaleValue>(\n    series: SerieAxis<Axis, Value>,\n    axis: Axis,\n    scaleSpec: ScaleSpec,\n    {\n        getValue = d => d.data[axis],\n        setValue = (d, v) => {\n            d.data[axis] = v\n        },\n    }: {\n        getValue?: (d: { data: Record<Axis, Value | null> }) => Value | null\n        setValue?: (d: { data: Record<Axis, Value | null> }, v: Value) => void\n    } = {}\n) => {\n    if (scaleSpec.type === 'linear') {\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseFloat(String(value)) as unknown as Value)\n                }\n            })\n        })\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        // `native` means we already have Date instances,\n        // otherwise we have to convert the values to Date.\n        const parseTime = createDateNormalizer(scaleSpec)\n\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseTime(value as Date) as unknown as Value)\n                }\n            })\n        })\n    }\n\n    const values: unknown[] = []\n\n    series.forEach(serie => {\n        serie.data.forEach(d => {\n            values.push(getValue(d))\n        })\n    })\n\n    switch (scaleSpec.type) {\n        case 'linear': {\n            const all = sortBy(\n                // filer null values to deal with holes in linechart\n                uniq(values as number[]).filter(v => v !== null),\n                v => v\n            )\n\n            return { all, min: Math.min(...all), max: Math.max(...all) }\n        }\n        case 'time': {\n            const all = uniqBy(values as Date[], v => v.getTime())\n                .slice(0)\n                .sort((a, b) => b.getTime() - a.getTime())\n                .reverse()\n\n            return { all, min: all[0], max: last(all) }\n        }\n        default: {\n            const all = uniq(values)\n\n            return { all, min: all[0], max: last(all) }\n        }\n    }\n}\n\nexport const stackAxis = <S = never, D extends SerieDatum = SerieDatum>(\n    axis: ScaleAxis,\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => {\n    const otherAxis = getOtherAxis(axis)\n    const all: number[] = []\n\n    xy[otherAxis].all.forEach(v => {\n        const compare = (isDate(v) ? compareDateValues : compareValues) as Compare\n        const stack: Array<number | null> = []\n\n        series.forEach(serie => {\n            const datum = serie.data.find(d => compare(d.data[otherAxis], v))\n            let value = null\n            let stackValue = null\n\n            if (datum !== undefined) {\n                // stacked values only support numbers\n                value = datum.data[axis] as number\n                if (value !== null) {\n                    const head = last(stack)\n                    if (head === undefined) {\n                        stackValue = value\n                    } else if (head !== null) {\n                        stackValue = head + value\n                    }\n                }\n\n                datum.data[axis === 'x' ? 'xStacked' : 'yStacked'] = stackValue\n            }\n\n            stack.push(stackValue)\n\n            if (stackValue !== null) {\n                all.push(stackValue)\n            }\n        })\n    })\n\n    xy[axis].minStacked = Math.min(...all)\n    xy[axis].maxStacked = Math.max(...all)\n}\n\nconst stackX = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('x', xy, series)\n\nconst stackY = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('y', xy, series)\n","import { scalePoint } from 'd3-scale'\nimport { ComputedSerieAxis, ScalePoint, ScalePointSpec, StringValue } from './types'\n\nexport const createPointScale = <Input extends StringValue>(\n    _spec: ScalePointSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number\n) => {\n    const scale = scalePoint<Input>().range([0, size]).domain(data.all)\n\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n","import {\n    CountableTimeInterval,\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n    timeInterval,\n} from 'd3-time'\nimport { ScaleValue, TicksSpec, AnyScale, ScaleWithBandwidth } from './types'\n\nexport const centerScale = <Value>(scale: ScaleWithBandwidth) => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return <T extends Value>(d: T) => (scale(d) ?? 0) + offset\n}\n\nconst timeDay = timeInterval(\n    date => date.setHours(0, 0, 0, 0),\n    (date, step) => date.setDate(date.getDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst utcDay = timeInterval(\n    date => date.setUTCHours(0, 0, 0, 0),\n    (date, step) => date.setUTCDate(date.getUTCDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst timeByType: Record<string, [CountableTimeInterval, CountableTimeInterval]> = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = (value: unknown): value is number =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = <Value extends ScaleValue>(\n    scale: AnyScale,\n    spec?: TicksSpec<Value>\n) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    if (typeof spec === 'string' && 'useUTC' in scale) {\n        // time interval\n        const matches = spec.match(timeIntervalRegexp)\n\n        if (matches) {\n            const [, amount, type] = matches\n            // UTC is used as it's more predictable\n            // however local time could be used too\n            // let's see how it fits users' requirements\n            const timeType = timeByType[type][scale.useUTC ? 1 : 0]\n\n            if (type === 'day') {\n                const [start, originalStop] = scale.domain()\n                const stop = new Date(originalStop)\n\n                // Set range to include last day in the domain since `interval.range` function is exclusive stop\n                stop.setDate(stop.getDate() + 1)\n\n                return timeType.every(Number(amount ?? 1))?.range(start, stop) ?? []\n            }\n\n            if (amount === undefined) {\n                return scale.ticks(timeType)\n            }\n\n            const interval = timeType.every(Number(amount))\n\n            if (interval) {\n                return scale.ticks(interval)\n            }\n        }\n\n        throw new Error(`Invalid tickValues: ${spec}`)\n    }\n\n    // continuous scales\n    if ('ticks' in scale) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n","var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"names":["start","stop","step","n","arguments","length","i","Math","max","ceil","range","Array","band","bandwidth","scale","ordinal","unknown","undefined","domain","ordinalRange","r0","r1","round","paddingInner","paddingOuter","align","rescale","reverse","floor","values","map","_","_ref","_ref2","rangeRound","_ref3","_ref4","padding","min","copy","init","pointish","point","apply","durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","d0","d1","offset","previous","push","filter","test","setTime","end","every","isFinite","d","month","setDate","setHours","setMonth","getMonth","getFullYear","months","weekday","getDate","getDay","getTimezoneOffset","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","year","setFullYear","k","durationMonth","durationYear","millisecond","second","getMilliseconds","getUTCSeconds","minute","getSeconds","getMinutes","hour","getHours","day","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","ticker","week","tickIntervals","tickInterval","target","abs","bisector","right","_tickIntervals","t","ticks","_ticker","_ticker2","utcTicks","utcTickInterval","_ticker3","_ticker4","timeTicks","timeTickInterval","nice","i0","i1","slice","x0","x1","number","calendar","format","continuous","invert","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickFormat","y","from","specifier","transformLog","x","log","transformExp","exp","transformLogn","transformExpn","pow10","reflect","f","loggish","transform","logs","pows","base","E","log10","log2","logp","pow","powp","r","u","v","p","j","z","Infinity","transformSymlog","c","sign","log1p","transformSymexp","expm1","symlogish","constant","linear","symlog","duration","precisionCutOffs","setMilliseconds","setSeconds","setMinutes","precisionCutOffsByType","createDateNormalizer","precision","useUTC","precisionFn","forEach","cutOff","createPrecisionMethod","value","parseTime","utcParse","timeParse","createLinearScale","data","size","axis","minValue","maxValue","stacked","clamp","minStacked","maxStacked","scaleLinear","castLinearScale","typedScale","type","castBandScale","createTimeScale","normalize","UTC","scaleUtc","scaleTime","createLogScale","all","some","Error","hasMixedSign","scaleLog","createSymlogScale","scaleSymlog","compareValues","a","b","compareDateValues","getTime","computeScale","spec","_spec","scalePoint","createPointScale","scaleBand","createBandScale","getDatumAxisPosition","datum","stackedValue","computeXYScalesForSeries","series","xScaleSpec","yScaleSpec","width","height","nestedSeries","serie","xy","generateSeriesXY","stackX","stackY","xScale","yScale","computedSeries","position","generateSeriesAxis","scaleSpec","getValue","setValue","parseFloat","String","sortBy","uniq","uniqBy","sort","last","stackAxis","otherAxis","getOtherAxis","compare","isDate","stack","find","stackValue","head","centerScale","timeByType","timeMillisecond","utcMillisecond","timeSecond","utcSecond","timeMinute","timeHour","timeInterval","timeWeek","utcWeek","timeSunday","timeMonday","timeTuesday","timeWednesday","timeThursday","timeFriday","timeSaturday","timeMonth","timeYear","timeTypes","Object","keys","timeIntervalRegexp","RegExp","join","getScaleTicks","isArray","matches","match","amount","timeType","originalStop","Number","baseGetTag","isObjectLike","module","exports","baseIsDate","baseUnary","nodeUtil","nodeIsDate","baseIteratee","baseUniq","array","iteratee"],"sourceRoot":""}