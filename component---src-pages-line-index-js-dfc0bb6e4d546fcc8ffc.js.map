{"version":3,"file":"component---src-pages-line-index-js-dfc0bb6e4d546fcc8ffc.js","mappings":"yOAUMA,EAAiB,iBAChBC,GAAAA,CAAKC,EAAAA,EAAiB,CAAC,QAAS,WADhB,CAEnBC,SAAS,EACTC,WAAW,EACXC,QAAS,CACL,CACIC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,cAAe,gBACfC,UAAW,GACXC,WAAY,GACZC,YAAa,IACbC,WAAY,GACZC,YAAa,SACbC,kBAAmB,oBACnBC,QAAS,SAAAC,GACLC,MAAMC,KAAKC,UAAUH,EAAM,KAAM,UAErCI,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHC,eAAgB,qBAChBZ,YAAa,OAMjCa,QAASC,EAAAA,GAAAA,QACTC,aAAcD,EAAAA,GAAAA,eAGZE,EAAa,CACf,CACIC,GAAI,eACJZ,KAAM,CACF,CAAEa,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,EAAGC,EAAG,OAwCvB,UAnCa,WACT,OACI,gBAAC,IAAD,CACIC,KAAK,OACLC,KAAMA,EAAAA,GACNC,KAAK,OACLC,QAASF,EAAAA,GACTG,cAAc,MACdC,WAAYC,EAAAA,EACZzC,kBAAmBA,EACnB0C,kBAAmBb,EAAAA,GACnBc,iBAAkBC,EAAAA,EAClBC,aAAcC,EAAAA,IAEb,SAACN,EAAYpB,EAAM2B,EAAOC,GACvB,OACI,gBAAC,KAAD,eACI5B,KAAiC,WAA3BoB,EAAWS,OAAOC,KAAoBnB,EAAaX,GACrDoB,EAFR,CAGIO,MAAOA,EACP5B,QAAS,SAAAgC,GACLH,EAAU,CACNE,KAAM,QACNE,MAAM,kBAAmBD,EAAME,QAA1B,QAAyCF,EAAM/B,KAAKa,EAApD,QAA6DkB,EAAM/B,KAAKc,EAC7EoB,MAAOH,EAAMI,WACbnC,KAAM+B","sources":["webpack://nivo-website/./src/pages/line/index.js"],"sourcesContent":["import React from 'react'\nimport omit from 'lodash/omit'\nimport { ResponsiveLine, LineDefaultProps } from '@nivo/line'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/line/meta.yml'\nimport mapper from '../../data/components/line/mapper'\nimport { groups } from '../../data/components/line/props'\nimport defaultSettings from '../../data/components/line/defaults'\nimport { generateLightDataSet } from '../../data/components/line/generator'\n\nconst initialProperties = {\n    ...omit(defaultSettings, ['width', 'height']),\n    useMesh: true,\n    debugMesh: false,\n    legends: [\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 100,\n            translateY: 0,\n            itemsSpacing: 0,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n            symbolBorderColor: 'rgba(0, 0, 0, .5)',\n            onClick: data => {\n                alert(JSON.stringify(data, null, '    '))\n            },\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemBackground: 'rgba(0, 0, 0, .03)',\n                        itemOpacity: 1,\n                    },\n                },\n            ],\n        },\n    ],\n    animate: LineDefaultProps.animate,\n    motionConfig: LineDefaultProps.motionConfig,\n}\n\nconst linearData = [\n    {\n        id: 'fake corp. A',\n        data: [\n            { x: 0, y: 7 },\n            { x: 1, y: 5 },\n            { x: 2, y: 11 },\n            { x: 3, y: 9 },\n            { x: 4, y: 13 },\n            { x: 7, y: 16 },\n            { x: 9, y: 12 },\n        ],\n    },\n]\n\nconst Line = () => {\n    return (\n        <ComponentTemplate\n            name=\"Line\"\n            meta={meta.Line}\n            icon=\"line\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={LineDefaultProps}\n            propertiesMapper={mapper}\n            generateData={generateLightDataSet}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveLine\n                        data={properties.xScale.type === 'linear' ? linearData : data}\n                        {...properties}\n                        theme={theme}\n                        onClick={point => {\n                            logAction({\n                                type: 'click',\n                                label: `[point] serie: ${point.serieId}, x: ${point.data.x}, y: ${point.data.y}`,\n                                color: point.serieColor,\n                                data: point,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Line\n"],"names":["initialProperties","omit","defaultSettings","useMesh","debugMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","onClick","data","alert","JSON","stringify","effects","on","style","itemBackground","animate","LineDefaultProps","motionConfig","linearData","id","x","y","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","generateData","generateLightDataSet","theme","logAction","xScale","type","point","label","serieId","color","serieColor"],"sourceRoot":""}