{"version":3,"file":"b276a4b74ec6c7f3d9d321f2bdee5b26e655f43e-ffcaaafe7d9f449a6d2f.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/bump/compute.js","webpack://nivo-website/../src/bump/hooks.js","webpack://nivo-website/../src/bump/LineTooltip.js","webpack://nivo-website/../src/bump/Point.js","webpack://nivo-website/../src/bump/props.js","webpack://nivo-website/../src/bump/Line.js","webpack://nivo-website/../src/bump/LinesLabels.js","webpack://nivo-website/../src/bump/Points.js","webpack://nivo-website/../src/bump/Bump.js","webpack://nivo-website/../src/bump/ResponsiveBump.js","webpack://nivo-website/../src/area-bump/AreaTooltip.js","webpack://nivo-website/../src/area-bump/props.js","webpack://nivo-website/../src/area-bump/hooks.js","webpack://nivo-website/../src/area-bump/compute.js","webpack://nivo-website/../src/area-bump/Area.js","webpack://nivo-website/../src/area-bump/AreasLabels.js","webpack://nivo-website/../src/area-bump/AreaBump.js","webpack://nivo-website/../src/area-bump/ResponsiveAreaBump.js"],"sourcesContent":["export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint } from 'd3-scale'\n\nexport const computeSeries = ({ width, height, data, xPadding, xOuterPadding, yOuterPadding }) => {\n    let xValues = new Set()\n    let yValues = new Set()\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!xValues.has(datum.x)) {\n                xValues.add(datum.x)\n            }\n            if (!yValues.has(datum.y) && datum.y !== null) {\n                yValues.add(datum.y)\n            }\n        })\n    })\n    xValues = Array.from(xValues)\n    yValues = Array.from(yValues).sort((a, b) => a - b)\n\n    const xScale = scalePoint().domain(xValues).range([0, width]).padding(xOuterPadding)\n\n    const yScale = scalePoint().domain(yValues).range([0, height]).padding(yOuterPadding)\n\n    const linePointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(rawSerie => {\n        const serie = {\n            ...rawSerie,\n            points: [],\n            linePoints: [],\n        }\n\n        rawSerie.data.forEach((datum, i) => {\n            let x = null\n            let y = null\n            if (datum.y !== null && datum.y !== undefined) {\n                x = xScale(datum.x)\n                y = yScale(datum.y)\n            }\n            const point = {\n                id: `${rawSerie.id}.${i}`,\n                serie: rawSerie,\n                data: datum,\n                x,\n                y,\n            }\n            serie.points.push(point)\n\n            // only add pre transition point if the datum is not empty\n            if (x !== null) {\n                if (i === 0) {\n                    serie.linePoints.push([0, point.y])\n                } else {\n                    serie.linePoints.push([point.x - linePointPadding, point.y])\n                }\n            }\n\n            serie.linePoints.push([point.x, point.y])\n\n            // only add post transition point if the datum is not empty\n            if (x !== null) {\n                if (i === rawSerie.data.length - 1 && x) {\n                    serie.linePoints.push([width, point.y])\n                } else {\n                    serie.linePoints.push([point.x + linePointPadding, point.y])\n                }\n            }\n\n            // remove points having null coordinates\n            serie.points = serie.points.filter(point => point.x !== null)\n        })\n\n        return serie\n    })\n\n    return {\n        series,\n        xScale,\n        yScale,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useMemo, useCallback } from 'react'\nimport { line as d3Line, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { computeSeries } from './compute'\n\nexport const useLineGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Line()\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n                .defined(d => d[0] !== null && d[1] !== null),\n\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getLineWidth = useSerieDerivedProp(lineWidth)\n    const getActiveLineWidth = useSerieDerivedProp(activeLineWidth)\n    const getInactiveLineWidth = useSerieDerivedProp(inactiveLineWidth)\n\n    const getOpacity = useSerieDerivedProp(opacity)\n    const getActiveOpacity = useSerieDerivedProp(activeOpacity)\n    const getInactiveOpacity = useSerieDerivedProp(inactiveOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            lineWidth: getLineWidth(serie),\n            opacity: getOpacity(serie),\n        }),\n        [getLineWidth, getOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getActiveLineWidth(serie),\n            opacity: getActiveOpacity(serie),\n        }),\n        [getActiveLineWidth, getActiveOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getInactiveLineWidth(serie),\n            opacity: getInactiveOpacity(serie),\n        }),\n        [getInactiveLineWidth, getInactiveOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (currentSerie === null) return getNormalStyle(serie)\n            if (serie.id === currentSerie) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const usePointStyle = ({\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getSize = useSerieDerivedProp(pointSize)\n    const getActiveSize = useSerieDerivedProp(activePointSize)\n    const getInactiveSize = useSerieDerivedProp(inactivePointSize)\n\n    const getBorderWidth = useSerieDerivedProp(pointBorderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activePointBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactivePointBorderWidth)\n\n    const getNormalStyle = useMemo(\n        () => point => ({\n            size: getSize(point),\n            borderWidth: getBorderWidth(point),\n        }),\n        [getSize, getBorderWidth]\n    )\n    const getActiveStyle = useMemo(\n        () => point => ({\n            size: getActiveSize(point),\n            borderWidth: getActiveBorderWidth(point),\n        }),\n        [getActiveSize, getActiveBorderWidth]\n    )\n    const getInactiveStyle = useMemo(\n        () => point => ({\n            size: getInactiveSize(point),\n            borderWidth: getInactiveBorderWidth(point),\n        }),\n        [getInactiveSize, getInactiveBorderWidth]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return point => {\n            if (currentSerie === null) return getNormalStyle(point)\n            if (point.serieId === currentSerie) return getActiveStyle(point)\n            return getInactiveStyle(point)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const useBump = ({\n    width,\n    height,\n    data,\n    interpolation,\n    xPadding,\n    xOuterPadding,\n    yOuterPadding,\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    colors,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointColor,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    pointBorderColor,\n    isInteractive,\n    currentSerie,\n}) => {\n    const {\n        series: rawSeries,\n        xScale,\n        yScale,\n    } = useMemo(\n        () =>\n            computeSeries({\n                width,\n                height,\n                data,\n                xPadding,\n                xOuterPadding,\n                yOuterPadding,\n            }),\n        [width, height, data, xPadding, xOuterPadding, yOuterPadding]\n    )\n\n    const lineGenerator = useLineGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        isInteractive,\n        currentSerie,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                const nextSerie = { ...serie }\n                nextSerie.color = getColor(nextSerie)\n                nextSerie.style = getSerieStyle(nextSerie)\n                return nextSerie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const getPointStyle = usePointStyle({\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        isInteractive,\n        currentSerie,\n    })\n    const points = useMemo(() => {\n        const pts = []\n        series.forEach(serie => {\n            serie.points.forEach(rawPoint => {\n                const point = {\n                    ...rawPoint,\n                    serie,\n                    serieId: serie.id,\n                    isActive: currentSerie === serie.id,\n                    isInactive: currentSerie !== null && currentSerie !== serie.id,\n                }\n                point.color = getPointColor(point)\n                point.borderColor = getPointBorderColor(point)\n                point.style = getPointStyle({ ...point, serie })\n                pts.push(point)\n            })\n        })\n\n        return pts\n    }, [series, getPointColor, getPointBorderColor, getPointStyle, currentSerie])\n\n    return {\n        xScale,\n        yScale,\n        series,\n        points,\n        lineGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color, getLabel }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        const labels = []\n        series.forEach(serie => {\n            let label = serie.id\n            if (typeof getLabel === 'function') {\n                label = getLabel(serie)\n            }\n\n            const point =\n                position === 'start'\n                    ? serie.linePoints[0]\n                    : serie.linePoints[serie.linePoints.length - 1]\n\n            // exclude labels for series having missing data at the beginning/end\n            if (point[0] === null || point[1] === null) {\n                return\n            }\n\n            labels.push({\n                id: serie.id,\n                label,\n                x: point[0] + signedPadding,\n                y: point[1],\n                color: getColor(serie),\n                opacity: serie.style.opacity,\n                serie,\n                textAnchor,\n            })\n        })\n\n        return labels\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LineTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nLineTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(LineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated, to } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\n\nconst pointStyle = { pointerEvents: 'none' }\n\nconst Point = ({ x, y, size, color, borderColor, borderWidth }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        color,\n        borderWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={to(animatedProps.radius, v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            strokeWidth={animatedProps.borderWidth}\n            stroke={borderColor}\n            style={pointStyle}\n        />\n    )\n}\n\nPoint.propTypes = {\n    data: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    isActive: PropTypes.bool.isRequired,\n    isInactive: PropTypes.bool.isRequired,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n}\n\nexport default memo(Point)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport LineTooltip from './LineTooltip'\nimport Point from './Point'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['grid', 'axes', 'labels', 'lines', 'points']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    xPadding: PropTypes.number.isRequired,\n    xOuterPadding: PropTypes.number.isRequired,\n    yOuterPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    lineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    opacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    pointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointColor: inheritedColorPropType.isRequired,\n    pointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointBorderColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const BumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    layers: ['grid', 'axes', 'labels', 'lines', 'points'],\n\n    interpolation: 'smooth',\n    xPadding: 0.6,\n    xOuterPadding: 0.5,\n    yOuterPadding: 0.5,\n\n    colors: { scheme: 'nivo' },\n    lineWidth: 2,\n    activeLineWidth: 4,\n    inactiveLineWidth: 1,\n    opacity: 1,\n    activeOpacity: 1,\n    inactiveOpacity: 0.3,\n\n    startLabel: false,\n    startLabelPadding: 16,\n    startLabelTextColor: { from: 'color' },\n    endLabel: 'id',\n    endLabelPadding: 16,\n    endLabelTextColor: { from: 'color' },\n\n    pointSize: 6,\n    activePointSize: 8,\n    inactivePointSize: 4,\n    pointColor: { from: 'serie.color' },\n    pointBorderWidth: 0,\n    activePointBorderWidth: 0,\n    inactivePointBorderWidth: 0,\n    pointBorderColor: { from: 'serie.color', modifiers: [['darker', 1.4]] },\n\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {},\n    axisBottom: {},\n    axisLeft: {},\n\n    isInteractive: true,\n    tooltip: LineTooltip,\n}\n\nexport const BumpDefaultProps = {\n    ...commonDefaultProps,\n    pointComponent: Point,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useSerieHandlers } from './hooks'\n\nconst Line = ({\n    serie,\n    lineGenerator,\n    yStep,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const linePath = lineGenerator(serie.linePoints)\n\n    const animatedPath = useAnimatedPath(linePath)\n    const animatedProps = useSpring({\n        color: serie.color,\n        opacity: serie.style.opacity,\n        lineWidth: serie.style.lineWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            <animated.path\n                fill=\"none\"\n                d={animatedPath}\n                stroke={animatedProps.color}\n                strokeWidth={animatedProps.lineWidth}\n                strokeLinecap=\"round\"\n                strokeOpacity={animatedProps.opacity}\n                style={{ pointerEvents: 'none' }}\n            />\n            {isInteractive && (\n                <path\n                    fill=\"none\"\n                    stroke=\"red\"\n                    strokeOpacity={0}\n                    strokeWidth={yStep}\n                    d={linePath}\n                    strokeLinecap=\"butt\"\n                    onMouseEnter={handlers.onMouseEnter}\n                    onMouseMove={handlers.onMouseMove}\n                    onMouseLeave={handlers.onMouseLeave}\n                    onClick={handlers.onClick}\n                />\n            )}\n        </>\n    )\n}\n\nLine.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        linePoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            lineWidth: PropTypes.number.isRequired,\n            opacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    yStep: PropTypes.number.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { useSeriesLabels } from './hooks'\n\nconst LinesLabels = ({ series, getLabel, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        getLabel,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.label}\n            </animated.text>\n        )\n    })\n}\n\nLinesLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    getLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(LinesLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Points = ({ pointComponent, points }) => {\n    return points.map(point => {\n        return createElement(pointComponent, {\n            key: point.id,\n            data: point.data,\n            x: point.x,\n            y: point.y,\n            isActive: point.isActive,\n            isInactive: point.isInactive,\n            size: point.style.size,\n            color: point.color,\n            borderColor: point.borderColor,\n            borderWidth: point.style.borderWidth,\n        })\n    })\n}\n\nPoints.propTypes = {\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.object.isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            isActive: PropTypes.bool.isRequired,\n            isInactive: PropTypes.bool.isRequired,\n            color: PropTypes.string.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            style: PropTypes.shape({\n                size: PropTypes.number.isRequired,\n                borderWidth: PropTypes.number.isRequired,\n            }).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useMemo, useState, Fragment } from 'react'\nimport { withContainer, useDimensions, SvgWrapper } from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { useBump } from './hooks'\nimport { BumpPropTypes, BumpDefaultProps } from './props'\nimport Line from './Line'\nimport LinesLabels from './LinesLabels'\nimport Points from './Points'\n\nconst Bump = props => {\n    const {\n        data,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n\n        colors,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        pointComponent,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { series, points, xScale, yScale, lineGenerator } = useBump({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        colors,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n        startLabel,\n        endLabel,\n        isInteractive,\n        currentSerie,\n    })\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        labels: [],\n        lines: (\n            <Fragment key=\"lines\">\n                {series.map(serie => (\n                    <Line\n                        key={serie.id}\n                        serie={serie}\n                        currentSerie={currentSerie}\n                        setCurrentSerie={setCurrentSerie}\n                        lineGenerator={lineGenerator}\n                        yStep={yScale.step()}\n                        margin={margin}\n                        isInteractive={isInteractive}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n        points: <Points key=\"points\" pointComponent={pointComponent} points={points} />,\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"start\"\n                series={series}\n                getLabel={startLabel}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"end\"\n                series={series}\n                getLabel={endLabel}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    const bumpLayerContext = useMemo(\n        () => ({\n            currentSerie,\n            innerHeight,\n            innerWidth,\n            lineGenerator,\n            points,\n            series,\n            setCurrentSerie,\n            xScale,\n            yScale,\n        }),\n        [currentSerie, innerHeight, innerWidth, lineGenerator, points, series, xScale, yScale]\n    )\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, bumpLayerContext)}</Fragment>\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nBump.propTypes = BumpPropTypes\nBump.defaultProps = BumpDefaultProps\n\nexport default memo(withContainer(Bump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Bump from './Bump'\n\nconst ResponsiveBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveBump\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst AreaTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nAreaTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(AreaTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes, blendModePropType } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport AreaTooltip from './AreaTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.number.isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    align: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['grid', 'axes', 'labels', 'areas']), PropTypes.func])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    spacing: PropTypes.number.isRequired,\n    xPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    blendMode: blendModePropType.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    activeFillOpacity: PropTypes.number.isRequired,\n    inactiveFillOpacity: PropTypes.number.isRequired,\n    defs: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    fill: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            match: PropTypes.oneOfType([PropTypes.oneOf(['*']), PropTypes.object, PropTypes.func])\n                .isRequired,\n        })\n    ).isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    activeBorderWidth: PropTypes.number.isRequired,\n    inactiveBorderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    borderOpacity: PropTypes.number.isRequired,\n    activeBorderOpacity: PropTypes.number.isRequired,\n    inactiveBorderOpacity: PropTypes.number.isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisBottom: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const AreaBumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    align: 'middle',\n\n    layers: ['grid', 'axes', 'labels', 'areas'],\n\n    interpolation: 'smooth',\n    spacing: 0,\n    xPadding: 0.6,\n\n    colors: { scheme: 'nivo' },\n    blendMode: 'normal',\n    fillOpacity: 0.8,\n    activeFillOpacity: 1,\n    inactiveFillOpacity: 0.15,\n    defs: [],\n    fill: [],\n    borderWidth: 1,\n    activeBorderWidth: 1,\n    inactiveBorderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 0.4]] },\n    borderOpacity: 1,\n    activeBorderOpacity: 1,\n    inactiveBorderOpacity: 0,\n\n    startLabel: false,\n    startLabelPadding: 12,\n    startLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    endLabel: 'id',\n    endLabelPadding: 12,\n    endLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    enableGridX: true,\n    axisTop: {},\n    axisBottom: {},\n\n    isInteractive: true,\n    tooltip: AreaTooltip,\n}\n\nexport const AreaBumpDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useMemo, useCallback } from 'react'\nimport { area as d3Area, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { computeSeries } from './compute'\n\nexport const useAreaBumpSeries = ({ data, width, height, align, spacing, xPadding }) =>\n    useMemo(\n        () => computeSeries({ data, width, height, align, spacing, xPadding }),\n        [data, width, height, align, spacing, xPadding]\n    )\n\nexport const useAreaGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Area()\n                .x(d => d.x)\n                .y0(d => d.y0)\n                .y1(d => d.y1)\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const getFillOpacity = useSerieDerivedProp(fillOpacity)\n    const getActiveFillOpacity = useSerieDerivedProp(activeFillOpacity)\n    const getInactiveFillOpacity = useSerieDerivedProp(inactiveFillOpacity)\n\n    const getBorderWidth = useSerieDerivedProp(borderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activeBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactiveBorderWidth)\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getBorderOpacity = useSerieDerivedProp(borderOpacity)\n    const getActiveBorderOpacity = useSerieDerivedProp(activeBorderOpacity)\n    const getInactiveBorderOpacity = useSerieDerivedProp(inactiveBorderOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getFillOpacity(serie),\n            borderWidth: getBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getBorderOpacity(serie),\n        }),\n        [getFillOpacity, getBorderWidth, getBorderColor, getBorderOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getActiveFillOpacity(serie),\n            borderWidth: getActiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getActiveBorderOpacity(serie),\n        }),\n        [getActiveFillOpacity, getActiveBorderWidth, getBorderColor, getActiveBorderOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getInactiveFillOpacity(serie),\n            borderWidth: getInactiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getInactiveBorderOpacity(serie),\n        }),\n        [getInactiveFillOpacity, getInactiveBorderWidth, getBorderColor, getInactiveBorderOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (current === null) return getNormalStyle(serie)\n            if (serie.id === current) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, current])\n}\n\nexport const useAreaBump = ({\n    data,\n    width,\n    height,\n    align,\n    spacing,\n    xPadding,\n    interpolation,\n    colors,\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const {\n        series: rawSeries,\n        xScale,\n        heightScale,\n    } = useAreaBumpSeries({\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    })\n\n    const areaGenerator = useAreaGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                const nextSerie = { ...serie }\n                nextSerie.color = getColor(nextSerie)\n                nextSerie.style = getSerieStyle(nextSerie)\n                return nextSerie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    return {\n        series,\n        xScale,\n        heightScale,\n        areaGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        return series.map(serie => {\n            const point =\n                position === 'start' ? serie.points[0] : serie.points[serie.points.length - 1]\n\n            return {\n                id: serie.id,\n                x: point.x + signedPadding,\n                y: point.y,\n                color: getColor(serie),\n                opacity: serie.style.fillOpacity,\n                serie,\n                textAnchor,\n            }\n        })\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint, scaleLinear } from 'd3-scale'\n\nexport const computeSeries = ({ data, width, height, align, spacing, xPadding }) => {\n    const slices = new Map()\n\n    let maxSum = null\n    let maxValues = null\n\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!slices.has(datum.x)) {\n                slices.set(datum.x, {\n                    id: datum.x,\n                    total: 0,\n                    values: new Map(),\n                })\n            }\n\n            const slice = slices.get(datum.x)\n\n            const total = slice.total + datum.y\n            slice.total = total\n\n            slice.values.set(serie.id, {\n                serieId: serie.id,\n                value: datum.y,\n            })\n\n            if (total === null || total > maxSum) {\n                maxSum = total\n                maxValues = slice.values.size\n            }\n        })\n    })\n\n    const xScale = scalePoint().domain(Array.from(slices.keys())).range([0, width])\n\n    const heightScale = scaleLinear()\n        .domain([0, maxSum])\n        .range([0, height - maxValues * spacing])\n\n    slices.forEach((slice, x) => {\n        slice.x = xScale(x)\n        const sliceHeight = heightScale(slice.total) + slice.values.size * spacing\n\n        let offset = 0\n        if (align === 'middle') {\n            offset = (height - sliceHeight) / 2\n        } else if (align === 'end') {\n            offset = height - sliceHeight\n        }\n\n        Array.from(slice.values.values())\n            .sort((a, b) => b.value - a.value)\n            .forEach((value, position, all) => {\n                const previousValues = all.filter((i, pos) => pos < position)\n                const beforeValue = previousValues.reduce((t, v) => t + v.value, 0)\n\n                const sliceValue = slice.values.get(value.serieId)\n                sliceValue.position = position\n                sliceValue.height = heightScale(value.value)\n                sliceValue.beforeHeight =\n                    heightScale(beforeValue) + offset + spacing * (previousValues.length + 0.5)\n            })\n    })\n\n    const areaPointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(serie => {\n        const serieCopy = { ...serie }\n        serieCopy.points = []\n        serieCopy.areaPoints = []\n        serie.data.forEach((datum, i) => {\n            const slice = slices.get(datum.x)\n            const position = slice.values.get(serie.id)\n\n            const x = slice.x\n            const { beforeHeight, height } = position\n            const y = beforeHeight + height / 2\n            const y0 = beforeHeight\n            const y1 = beforeHeight + height\n\n            serieCopy.points.push({\n                x,\n                y,\n                height,\n                data: { ...datum },\n            })\n            if (i > 0) {\n                serieCopy.areaPoints.push({ x: x - areaPointPadding, y0, y1 })\n            }\n            serieCopy.areaPoints.push({ x, y0, y1 })\n            if (i < serie.data.length - 1) {\n                serieCopy.areaPoints.push({ x: x + areaPointPadding, y0, y1 })\n            }\n        })\n\n        return serieCopy\n    })\n\n    return {\n        xScale,\n        heightScale,\n        series,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\nimport { useSerieHandlers } from './hooks'\n\nconst Area = ({\n    serie,\n    areaGenerator,\n    blendMode,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(areaGenerator(serie.areaPoints))\n    const animatedProps = useSpring({\n        color: serie.color,\n        fillOpacity: serie.style.fillOpacity,\n        stroke: serie.style.borderColor,\n        strokeOpacity: serie.style.borderOpacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={serie.fill ? serie.fill : animatedProps.color}\n            fillOpacity={animatedProps.fillOpacity}\n            stroke={animatedProps.stroke}\n            strokeWidth={serie.style.borderWidth}\n            strokeOpacity={animatedProps.strokeOpacity}\n            style={{ mixBlendMode: blendMode }}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n\nArea.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        fill: PropTypes.string,\n        areaPoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            fillOpacity: PropTypes.number.isRequired,\n            borderWidth: PropTypes.number.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            borderOpacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    areaGenerator: PropTypes.func.isRequired,\n    blendMode: blendModePropType.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Area)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { useSeriesLabels } from './hooks'\n\nconst AreasLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.id}\n            </animated.text>\n        )\n    })\n}\n\nAreasLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(AreasLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useState, Fragment, useMemo } from 'react'\nimport { bindDefs, withContainer, useDimensions, SvgWrapper } from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { AreaBumpPropTypes, AreaBumpDefaultProps } from './props'\nimport { useAreaBump } from './hooks'\nimport Area from './Area'\nimport AreasLabels from './AreasLabels'\n\nconst AreaBump = props => {\n    const {\n        data,\n        align,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        spacing,\n        xPadding,\n\n        colors,\n        blendMode,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        defs,\n        fill,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        enableGridX,\n        axisTop,\n        axisBottom,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { series, xScale, areaGenerator } = useAreaBump({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        align,\n        spacing,\n        xPadding,\n        interpolation,\n        colors,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current: currentSerie,\n    })\n\n    const boundDefs = useMemo(\n        () => bindDefs(defs, series, fill, { targetKey: 'fill' }),\n        [defs, series, fill]\n    )\n\n    const layerById = {\n        grid: enableGridX && (\n            <Grid key=\"grid\" width={innerWidth} height={innerHeight} xScale={xScale} />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                bottom={axisBottom}\n            />\n        ),\n        labels: [],\n        areas: (\n            <Fragment key=\"areas\">\n                {series.map(serie => (\n                    <Area\n                        key={serie.id}\n                        areaGenerator={areaGenerator}\n                        serie={serie}\n                        blendMode={blendMode}\n                        isInteractive={isInteractive}\n                        setCurrentSerie={setCurrentSerie}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"start\"\n                series={series}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"end\"\n                series={series}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                outerWidth,\n                                outerHeight,\n                                series,\n                                xScale,\n                                areaGenerator,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nAreaBump.propTypes = AreaBumpPropTypes\nAreaBump.defaultProps = AreaBumpDefaultProps\n\nexport default memo(withContainer(AreaBump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport AreaBump from './AreaBump'\n\nconst ResponsiveAreaBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <AreaBump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveAreaBump\n"],"names":["durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","arguments","length","floor","ceil","round","d0","d1","offset","step","Math","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","d","_arrayLikeToArray","arr","len","i","arr2","Array","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","unsupportedIterableToArray","TypeError","nonIterableRest","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","source","forEach","getOwnPropertyDescriptors","defineProperties","useSerieDerivedProp","instruction","useMemo","useBump","width","height","data","interpolation","xPadding","xOuterPadding","yOuterPadding","lineWidth","activeLineWidth","inactiveLineWidth","colors","opacity","activeOpacity","inactiveOpacity","pointSize","activePointSize","inactivePointSize","pointColor","pointBorderWidth","activePointBorderWidth","inactivePointBorderWidth","pointBorderColor","isInteractive","currentSerie","xValues","yValues","serie","datum","a","xScale","scalePoint","yScale","linePointPadding","series","rawSerie","points","linePoints","x","y","point","id","computeSeries","rawSeries","lineGenerator","useLineGenerator","getColor","useOrdinalColorScale","getSerieStyle","getLineWidth","getActiveLineWidth","getInactiveLineWidth","getOpacity","getActiveOpacity","getInactiveOpacity","getNormalStyle","getActiveStyle","getInactiveStyle","useSerieStyle","nextSerie","theme","useTheme","getPointColor","useInheritedColor","getPointBorderColor","getPointStyle","getSize","getActiveSize","getInactiveSize","getBorderWidth","getActiveBorderWidth","getInactiveBorderWidth","size","borderWidth","usePointStyle","pts","rawPoint","serieId","isActive","isInactive","LineTooltip","enableChip","color","memo","pointStyle","pointerEvents","Point","borderColor","useMotionConfig","animate","springConfig","animatedProps","useSpring","radius","config","immediate","cx","cy","r","to","v","fill","strokeWidth","stroke","style","BumpDefaultProps","PropTypes","isRequired","layers","ordinalColorsPropType","startLabel","startLabelPadding","startLabelTextColor","inheritedColorPropType","endLabel","endLabelPadding","endLabelTextColor","pointComponent","enableGridX","enableGridY","axisTop","axisRight","axisBottom","axisLeft","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","role","scheme","modifiers","motionConfig","Line","yStep","handlers","setCurrent","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","createElement","handleMouseMove","handleMouseLeave","handleClick","useSerieHandlers","setCurrentSerie","linePath","animatedPath","useAnimatedPath","strokeLinecap","strokeOpacity","LinesLabels","getLabel","position","padding","labels","textAnchor","signedPadding","label","useSeriesLabels","useSprings","dominantBaseline","Points","Bump","props","partialMargin","useDimensions","margin","innerWidth","innerHeight","outerWidth","outerHeight","useState","layerById","grid","axes","top","right","bottom","left","lines","bumpLayerContext","layer","withContainer","ResponsiveBump","AreaTooltip","AreaBumpDefaultProps","align","spacing","blendMode","blendModePropType","fillOpacity","activeFillOpacity","inactiveFillOpacity","defs","match","activeBorderWidth","inactiveBorderWidth","borderOpacity","activeBorderOpacity","inactiveBorderOpacity","useAreaBumpSeries","slices","maxSum","maxValues","total","values","Map","heightScale","scaleLinear","sliceHeight","b","previousValues","all","pos","beforeValue","t","sliceValue","areaPointPadding","serieCopy","beforeHeight","y0","y1","useAreaBump","current","areaGenerator","useAreaGenerator","getFillOpacity","getActiveFillOpacity","getInactiveFillOpacity","getBorderColor","getBorderOpacity","getActiveBorderOpacity","getInactiveBorderOpacity","Area","mixBlendMode","AreasLabels","AreaBump","boundDefs","bindDefs","targetKey","areas","ResponsiveAreaBump"],"sourceRoot":""}