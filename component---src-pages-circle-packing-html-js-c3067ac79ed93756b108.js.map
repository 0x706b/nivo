{"version":3,"file":"component---src-pages-circle-packing-html-js-c3067ac79ed93756b108.js","mappings":"2MAQMA,EAAe,kBAAMC,EAAAA,EAAAA,OAErBC,EAAoB,CACtBC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAEVC,SAAU,OACVC,MAAO,MACPC,YAAa,CAAEC,OAAQ,GAAIC,SAAS,GACpCC,OAAQ,CAAEC,OAAQ,YAClBC,QAAS,QACTC,wBAAwB,EACxBC,WAAY,CACRC,KAAM,QACNC,UAAW,CAAC,CAAC,WAAY,MAE7BC,QAAS,EACTC,YAAY,EACZC,cAAc,EACdC,MAAO,KACPC,aAAc,SAAAD,GAAK,OAAyB,IAArBA,EAAME,KAAKC,OAClCC,iBAAkB,GAClBC,eAAgB,UAChBC,YAAa,EACbC,YAAa,CACTZ,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAE3BY,SAAS,EACTC,aAAc,SACdC,eAAe,GAuCnB,UApC0B,WACtB,OACI,gBAAC,IAAD,CACIC,KAAK,oBACLC,KAAMA,EAAAA,GACNC,KAAK,iBACLC,QAASF,EAAAA,GACTG,cAAc,OACdC,WAAYC,EAAAA,EACZtC,kBAAmBA,EACnBuC,kBAAmBC,EAAAA,GACnBC,iBAAkBC,EAAAA,EAClB5C,aAAcA,EACd6C,QAAQ,SAEP,SAACN,EAAYO,EAAMC,EAAOC,GACvB,OACI,gBAAC,KAAD,eACIC,KAAMH,GACFP,EAFR,CAGIQ,MAAOA,EACPG,QAAS,SAAAzB,GACLuB,EAAU,CACNG,KAAM,QACN5B,MAAUE,EAAK2B,GAAV,KAAiB3B,EAAKhB,MAC3B4C,MAAO5B,EAAK4B,MACZP,KAAMrB","sources":["webpack://nivo-website/./src/pages/circle-packing/html.js"],"sourcesContent":["import React from 'react'\nimport { ResponsiveCirclePackingHtml, defaultProps } from '@nivo/circle-packing'\nimport { generateLibTree } from '@nivo/generators'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/circle-packing/meta.yml'\nimport mapper from '../../data/components/circle-packing/mapper'\nimport { groups } from '../../data/components/circle-packing/props'\n\nconst generateData = () => generateLibTree()\n\nconst initialProperties = {\n    margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20,\n    },\n    identity: 'name',\n    value: 'loc',\n    valueFormat: { format: '', enabled: false },\n    colors: { scheme: 'spectral' },\n    colorBy: 'depth',\n    inheritColorFromParent: false,\n    childColor: {\n        from: 'color',\n        modifiers: [['brighter', 0.4]],\n    },\n    padding: 2,\n    leavesOnly: false,\n    enableLabels: true,\n    label: 'id',\n    labelsFilter: label => label.node.depth === 2,\n    labelsSkipRadius: 10,\n    labelTextColor: '#000000',\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.3]],\n    },\n    animate: true,\n    motionConfig: 'gentle',\n    isInteractive: true,\n}\n\nconst CirclePackingHtml = () => {\n    return (\n        <ComponentTemplate\n            name=\"CirclePackingHtml\"\n            meta={meta.CirclePackingHtml}\n            icon=\"circle-packing\"\n            flavors={meta.flavors}\n            currentFlavor=\"html\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={defaultProps}\n            propertiesMapper={mapper}\n            generateData={generateData}\n            dataKey=\"root\"\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveCirclePackingHtml\n                        root={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={node => {\n                            logAction({\n                                type: 'click',\n                                label: `${node.id}: ${node.value}`,\n                                color: node.color,\n                                data: node,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default CirclePackingHtml\n"],"names":["generateData","generateLibTree","initialProperties","margin","top","right","bottom","left","identity","value","valueFormat","format","enabled","colors","scheme","colorBy","inheritColorFromParent","childColor","from","modifiers","padding","leavesOnly","enableLabels","label","labelsFilter","node","depth","labelsSkipRadius","labelTextColor","borderWidth","borderColor","animate","motionConfig","isInteractive","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","defaultProps","propertiesMapper","mapper","dataKey","data","theme","logAction","root","onClick","type","id","color"],"sourceRoot":""}