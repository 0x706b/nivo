{"version":3,"file":"component---src-pages-guides-gradients-js-e67cd3e0d3890ff4aa62.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/area.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/./src/components/PageContent.ts","webpack://nivo-website/./src/components/styled.ts","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/../src/StreamLayer.tsx","webpack://nivo-website/../src/StreamLayers.tsx","webpack://nivo-website/../src/StreamDots.tsx","webpack://nivo-website/../src/StreamSlicesItem.tsx","webpack://nivo-website/../src/StreamSlices.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/StreamDotsItem.tsx","webpack://nivo-website/../src/LayerTooltip.tsx","webpack://nivo-website/../src/StackTooltip.tsx","webpack://nivo-website/../src/Stream.tsx","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/ResponsiveStream.tsx","webpack://nivo-website/./src/components/guides/gradients/GradientsIllustrations.js","webpack://nivo-website/./src/components/guides/gradients/GradientsExample.js","webpack://nivo-website/./src/pages/guides/gradients.js","webpack://nivo-website/../node_modules/lodash/_arrayReduce.js","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_asciiToArray.js","webpack://nivo-website/../node_modules/lodash/_asciiWords.js","webpack://nivo-website/../node_modules/lodash/_basePropertyOf.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_castSlice.js","webpack://nivo-website/../node_modules/lodash/_createCaseFirst.js","webpack://nivo-website/../node_modules/lodash/_createCompounder.js","webpack://nivo-website/../node_modules/lodash/_deburrLetter.js","webpack://nivo-website/../node_modules/lodash/_hasUnicode.js","webpack://nivo-website/../node_modules/lodash/_hasUnicodeWord.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/_stringToArray.js","webpack://nivo-website/../node_modules/lodash/_unicodeToArray.js","webpack://nivo-website/../node_modules/lodash/_unicodeWords.js","webpack://nivo-website/../node_modules/lodash/deburr.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/upperFirst.js","webpack://nivo-website/../node_modules/lodash/values.js","webpack://nivo-website/../node_modules/lodash/words.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport default styled.div`\n    margin: 0 50px;\n    position: relative;\n\n    ${media.tablet`\n        & {\n            margin: 0 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px;\n        }\n    `}\n`\n","import styled from 'styled-components'\nimport media from '../theming/mediaQueries'\n\nexport const FullWidthBanner = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    margin-bottom: 40px;\n    padding: 20px;\n`\n\nexport const DescriptionBlock = styled.div`\n    max-width: 800px;\n    margin: 0 auto 50px;\n\n    ${media.tablet`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0 15px 50px;\n        }\n    `}\n`\n\nexport const Card = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    box-shadow: ${({ theme }) => theme.cardShadow};\n`\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    distance: number\n    source: string\n    target: string\n}\n\ntype ExtraNode = {\n    color: string\n    depth: number\n    id: string\n    radius: number\n}\n\nexport const generateNetworkData = ({\n    rootNodeRadius = 12,\n    minMidNodes = 6,\n    maxMidNodes = 16,\n    midNodeRadius = 8,\n    minLeaves = 4,\n    maxLeaves = 16,\n    leafRadius = 4,\n} = {}) => {\n    const rootNode = {\n        id: '0',\n        radius: rootNodeRadius,\n        depth: 0,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `${k + 1}`,\n        radius: midNodeRadius,\n        depth: 1,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: '0',\n            target: source.id,\n            distance: 50,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 70,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                radius: leafRadius,\n                depth: 2,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 30,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit?: number | null, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: Record<string, unknown> = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","import { useCallback, createElement } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamLayerData } from './types'\n\ninterface StreamLayerProps<RawDatum extends StreamDatum> {\n    layer: StreamLayerData\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayer = <RawDatum extends StreamDatum>({\n    layer,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayerProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { layer }), event, 'left')\n        },\n        [showTooltipFromEvent, layer]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(layer.path)\n    const animatedProps = useSpring({\n        color: layer.color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={layer.fill ? layer.fill : animatedProps.color}\n            fillOpacity={fillOpacity}\n            stroke={getBorderColor(layer)}\n            strokeWidth={borderWidth}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? hideTooltip : undefined}\n        />\n    )\n}\n","import { InheritedColorConfigCustomFunction } from '@nivo/colors'\nimport { StreamLayer } from './StreamLayer'\nimport { StreamCommonProps, StreamLayerData, StreamDatum } from './types'\n\ninterface StreamLayersProps<RawDatum extends StreamDatum> {\n    layers: StreamLayerData[]\n    fillOpacity: number\n    borderWidth: number\n    getBorderColor: InheritedColorConfigCustomFunction<StreamLayerData>\n    isInteractive: boolean\n    tooltip: StreamCommonProps<RawDatum>['tooltip']\n}\n\nexport const StreamLayers = <RawDatum extends StreamDatum>({\n    layers,\n    fillOpacity,\n    borderWidth,\n    getBorderColor,\n    isInteractive,\n    tooltip,\n}: StreamLayersProps<RawDatum>) => (\n    <g>\n        {layers.map((layer, i) => (\n            <StreamLayer<RawDatum>\n                key={i}\n                layer={layer}\n                getBorderColor={getBorderColor}\n                borderWidth={borderWidth}\n                fillOpacity={fillOpacity}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { createElement } from 'react'\nimport { StreamSvgProps, StreamLayerDatum, StreamDatum } from './types'\n\ninterface StreamDotsProps<RawDatum extends StreamDatum> {\n    id: string | number\n    color: string\n    data: StreamLayerDatum[]\n    dotComponent: Exclude<StreamSvgProps<RawDatum>['dotComponent'], undefined>\n    position: 'start' | 'center' | 'end'\n    getSize: (datum: StreamLayerDatum) => number\n    getColor: (datum: StreamLayerDatum) => string\n    getBorderWidth: (datum: StreamLayerDatum) => number\n    getBorderColor: (datum: StreamLayerDatum) => string\n}\n\nconst getDotY = <RawDatum extends StreamDatum>(\n    datum: StreamLayerDatum,\n    position: StreamDotsProps<RawDatum>['position']\n) => {\n    let y = datum.y2\n    if (position === 'center') {\n        y = datum.y1 + (datum.y2 - datum.y1) / 2\n    } else if (position === 'start') {\n        y = datum.y1\n    }\n\n    return y\n}\n\nexport const StreamDots = <RawDatum extends StreamDatum>({\n    data,\n    dotComponent,\n    position,\n    getSize,\n    getColor,\n    getBorderWidth,\n    getBorderColor,\n}: StreamDotsProps<RawDatum>) => (\n    <>\n        {data.map((datum, i) => {\n            return createElement(dotComponent, {\n                key: i,\n                datum,\n                x: datum.x,\n                y: getDotY<RawDatum>(datum, position),\n                size: getSize(datum),\n                color: getColor(datum),\n                borderWidth: getBorderWidth(datum),\n                borderColor: getBorderColor(datum),\n            })\n        })}\n    </>\n)\n","import { createElement, useCallback, useState } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { StreamCommonProps, StreamDatum, StreamSliceData } from './types'\n\ninterface StreamSlicesItemProps<RawDatum extends StreamDatum> {\n    slice: StreamSliceData\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlicesItem = <RawDatum extends StreamDatum>({\n    slice,\n    height,\n    tooltip,\n}: StreamSlicesItemProps<RawDatum>) => {\n    const [isHover, setIsHover] = useState(false)\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            setIsHover(true)\n            showTooltipFromEvent(createElement(tooltip, { slice }), event, 'left')\n        },\n        [setIsHover, showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setIsHover(false)\n        hideTooltip()\n    }, [setIsHover, hideTooltip])\n\n    return (\n        <g transform={`translate(${slice.x}, 0)`}>\n            {isHover && (\n                <line\n                    x1={0}\n                    x2={0}\n                    y1={0}\n                    y2={height}\n                    stroke=\"#000\"\n                    strokeOpacity={0.35}\n                    strokeWidth={1}\n                />\n            )}\n            <rect\n                x={-20}\n                width={40}\n                height={height}\n                fill=\"#000\"\n                fillOpacity={0}\n                onMouseEnter={handleMouseHover}\n                onMouseMove={handleMouseHover}\n                onMouseLeave={handleMouseLeave}\n            />\n        </g>\n    )\n}\n","import { StreamSliceData, StreamDatum, StreamCommonProps } from './types'\nimport { StreamSlicesItem } from './StreamSlicesItem'\n\ninterface StreamSlicesProps<RawDatum extends StreamDatum> {\n    slices: StreamSliceData[]\n    height: number\n    tooltip: StreamCommonProps<RawDatum>['stackTooltip']\n}\n\nexport const StreamSlices = <RawDatum extends StreamDatum>({\n    slices,\n    height,\n    tooltip,\n}: StreamSlicesProps<RawDatum>) => (\n    <g>\n        {slices.map(slice => (\n            <StreamSlicesItem<RawDatum>\n                key={slice.index}\n                slice={slice}\n                height={height}\n                tooltip={tooltip}\n            />\n        ))}\n    </g>\n)\n","import { StackOrder, StackOffset, AreaCurve } from '@nivo/core'\nimport { StreamCommonProps, StreamLayerId } from './types'\nimport { StreamDotsItem } from './StreamDotsItem'\nimport { LayerTooltip } from './LayerTooltip'\nimport { StackTooltip } from './StackTooltip'\n\nexport const defaultProps = {\n    label: 'id',\n\n    order: 'none' as StackOrder,\n    offsetType: 'wiggle' as StackOffset,\n    curve: 'catmullRom' as AreaCurve,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    colors: { scheme: 'nivo' } as StreamCommonProps<any>['colors'],\n    fillOpacity: 1,\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    } as StreamCommonProps<any>['borderColor'],\n\n    enableDots: false,\n    dotPosition: 'center' as StreamCommonProps<any>['dotPosition'],\n    dotComponent: StreamDotsItem,\n    dotSize: 6,\n    dotColor: { from: 'color' },\n    dotBorderWidth: 0,\n    dotBorderColor: { from: 'color' },\n\n    isInteractive: true,\n    tooltip: LayerTooltip,\n    enableStackTooltip: true,\n    stackTooltip: StackTooltip,\n\n    legends: [],\n    legendLabel: 'id',\n\n    role: 'application',\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'layers', 'dots', 'slices', 'legends'] as StreamLayerId[],\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\n\nexport interface StreamDotsItemProps {\n    x: number\n    y: number\n    size: number\n    color: string\n    borderWidth: number\n    borderColor: string\n}\n\nexport const StreamDotsItem = ({\n    x,\n    y,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n}: StreamDotsItemProps) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size * 0.5,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius}\n            fill={animatedProps.color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n        />\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nexport const LayerTooltip = ({ layer }: TooltipProps) => (\n    <BasicTooltip id={layer.label} enableChip={true} color={layer.color} />\n)\n","import { useMemo } from 'react'\nimport { TableTooltip, Chip } from '@nivo/tooltip'\nimport { StackTooltipProps } from './types'\n\nexport const StackTooltip = ({ slice }: StackTooltipProps) => {\n    const rows = useMemo(\n        () =>\n            slice.stack.map(p => [\n                <Chip key={p.layerId} color={p.color} />,\n                p.layerLabel,\n                p.formattedValue,\n            ]),\n        [slice]\n    )\n\n    return <TableTooltip rows={rows} />\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    Container,\n    SvgWrapper,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { StreamLayers } from './StreamLayers'\nimport { StreamDots } from './StreamDots'\nimport { StreamSlices } from './StreamSlices'\nimport { useStream } from './hooks'\nimport { svgDefaultProps } from './props'\nimport { StreamDatum, StreamLayerId, StreamSvgProps } from './types'\n\ntype InnerStreamProps<RawDatum extends StreamDatum> = Omit<\n    StreamSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerStream = <RawDatum extends StreamDatum>({\n    data,\n    keys,\n    label,\n    valueFormat,\n\n    offsetType,\n    order,\n    curve,\n\n    layers: chartLayers = svgDefaultProps.layers,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n\n    colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n\n    enableDots = svgDefaultProps.enableDots,\n    dotPosition = svgDefaultProps.dotPosition,\n    dotComponent = svgDefaultProps.dotComponent,\n    dotSize,\n    dotColor,\n    dotBorderWidth,\n    dotBorderColor,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    enableStackTooltip = svgDefaultProps.enableStackTooltip,\n    stackTooltip = svgDefaultProps.stackTooltip,\n\n    legends = svgDefaultProps.legends,\n\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerStreamProps<RawDatum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        xScale,\n        yScale,\n        layers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    } = useStream<RawDatum>({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        keys,\n        label,\n        valueFormat,\n        offsetType,\n        order,\n        curve,\n        colors,\n        borderColor,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n    })\n\n    const boundDefs = bindDefs(defs, layers, fill)\n\n    const layerById: Record<StreamLayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        layers: null,\n        dots: null,\n        slices: null,\n        legends: null,\n    }\n\n    if (chartLayers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n            />\n        )\n    }\n\n    if (chartLayers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (chartLayers.includes('layers')) {\n        layerById.layers = (\n            <StreamLayers<RawDatum>\n                key=\"layers\"\n                layers={layers}\n                fillOpacity={fillOpacity}\n                borderWidth={borderWidth}\n                getBorderColor={getBorderColor}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('dots') && enableDots) {\n        layerById.dots = (\n            <Fragment key=\"dots\">\n                {layers.map(layer => (\n                    <StreamDots\n                        key={layer.id}\n                        id={layer.id}\n                        color={layer.color}\n                        data={layer.data}\n                        dotComponent={dotComponent}\n                        position={dotPosition}\n                        getSize={getDotSize}\n                        getColor={getDotColor}\n                        getBorderWidth={getDotBorderWidth}\n                        getBorderColor={getDotBorderColor}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (chartLayers.includes('slices') && isInteractive && enableStackTooltip) {\n        layerById.slices = (\n            <StreamSlices<RawDatum>\n                key=\"slices\"\n                slices={slices}\n                height={innerHeight}\n                tooltip={stackTooltip}\n            />\n        )\n    }\n\n    if (chartLayers.includes('legends')) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, i) => {\n                    const legendData = layers\n                        .map(layer => ({\n                            id: layer.id,\n                            label: layer.label,\n                            color: layer.color,\n                            fill: layer.fill,\n                        }))\n                        .reverse()\n\n                    return (\n                        <BoxLegendSvg\n                            key={i}\n                            {...legend}\n                            containerWidth={innerWidth}\n                            containerHeight={innerHeight}\n                            data={legendData}\n                        />\n                    )\n                })}\n            </Fragment>\n        )\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {chartLayers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Stream = <RawDatum extends StreamDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: StreamSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerStream<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { useMemo } from 'react'\nimport { area, stack as d3Stack } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport {\n    useTheme,\n    usePropertyAccessor,\n    useValueFormatter,\n    useCurveInterpolation,\n    // @ts-ignore\n    stackOrderFromProp,\n    // @ts-ignore\n    stackOffsetFromProp,\n} from '@nivo/core'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    StreamCommonProps,\n    StreamCustomLayerProps,\n    StreamDataProps,\n    StreamDatum,\n    StreamLayerData,\n    StreamLayerDatum,\n    StreamSliceData,\n} from './types'\nimport { defaultProps } from './props'\n\nexport const useStream = <RawDatum extends StreamDatum>({\n    width,\n    height,\n    data,\n    keys,\n    label = defaultProps.label,\n    valueFormat,\n    offsetType = defaultProps.offsetType,\n    order = defaultProps.order,\n    curve = defaultProps.curve,\n    colors = defaultProps.colors,\n    borderColor = defaultProps.borderColor,\n    dotSize = defaultProps.dotSize,\n    dotColor = defaultProps.dotColor,\n    dotBorderWidth = defaultProps.dotBorderWidth,\n    dotBorderColor = defaultProps.dotBorderColor,\n}: {\n    width: number\n    height: number\n    data: StreamDataProps<RawDatum>['data']\n    keys: StreamDataProps<RawDatum>['keys']\n    label?: StreamCommonProps<RawDatum>['label']\n    valueFormat?: StreamCommonProps<RawDatum>['valueFormat']\n    offsetType?: StreamCommonProps<RawDatum>['offsetType']\n    order?: StreamCommonProps<RawDatum>['order']\n    curve?: StreamCommonProps<RawDatum>['curve']\n    colors?: StreamCommonProps<RawDatum>['colors']\n    dotSize?: StreamCommonProps<RawDatum>['dotSize']\n    dotColor?: StreamCommonProps<RawDatum>['dotColor']\n    dotBorderWidth?: StreamCommonProps<RawDatum>['dotBorderWidth']\n    dotBorderColor?: StreamCommonProps<RawDatum>['dotBorderColor']\n    borderColor?: StreamCommonProps<RawDatum>['borderColor']\n}) => {\n    const areaCurveFactory = useCurveInterpolation(curve)\n    const areaGenerator = useMemo(\n        () =>\n            area<StreamLayerDatum>()\n                .x(({ x }) => x)\n                .y0(({ y1 }) => y1)\n                .y1(({ y2 }) => y2)\n                .curve(areaCurveFactory),\n        [areaCurveFactory]\n    )\n\n    const stack = useMemo(\n        () =>\n            d3Stack<RawDatum, string | number>()\n                .keys(keys)\n                .offset(stackOffsetFromProp(offsetType))\n                .order(stackOrderFromProp(order)),\n        [keys, offsetType, order]\n    )\n\n    const [layers, xScale, yScale] = useMemo(() => {\n        const allMin: number[] = []\n        const allMax: number[] = []\n\n        const layers = stack(data).map(layer => {\n            return layer.map(point => {\n                allMin.push(point[0])\n                allMax.push(point[1])\n\n                return {\n                    ...point,\n                    value: point.data[layer.key] as number,\n                }\n            })\n        })\n\n        const minValue = Math.min(...allMin)\n        const maxValue = Math.max(...allMax)\n\n        return [\n            layers,\n            scalePoint<number>()\n                .domain(Array.from({ length: data.length }, (_, i) => i))\n                .range([0, width]),\n            scaleLinear().domain([minValue, maxValue]).range([height, 0]),\n        ]\n    }, [stack, data, width, height])\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<Omit<StreamLayerData, 'label' | 'color' | 'data'>>(\n        colors,\n        'id'\n    )\n    const getBorderColor = useInheritedColor<StreamLayerData>(borderColor, theme)\n\n    const getDotSize = useMemo(\n        () => (typeof dotSize === 'function' ? dotSize : () => dotSize),\n        [dotSize]\n    )\n    const getDotColor = useInheritedColor(dotColor, theme)\n    const getDotBorderWidth = useMemo(\n        () => (typeof dotBorderWidth === 'function' ? dotBorderWidth : () => dotBorderWidth),\n        [dotBorderWidth]\n    )\n    const getDotBorderColor = useInheritedColor(dotBorderColor, theme)\n\n    const getLabel = usePropertyAccessor<\n        Omit<StreamLayerData, 'label' | 'color' | 'data'>,\n        string | number\n    >(label)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const enhancedLayers: StreamLayerData[] = useMemo(\n        () =>\n            layers.map((points, layerIndex) => {\n                const computedPoints: StreamLayerDatum[] = points.map((point, i) => ({\n                    layerId: keys[layerIndex],\n                    layerLabel: '',\n                    index: i,\n                    color: '',\n                    x: xScale(i) as number,\n                    value: point.value,\n                    formattedValue: formatValue(point.value),\n                    y1: yScale(point[0]),\n                    y2: yScale(point[1]),\n                }))\n\n                const layer: Omit<StreamLayerData, 'label' | 'color' | 'data'> = {\n                    id: keys[layerIndex] as string,\n                    path: areaGenerator(computedPoints) as string,\n                }\n\n                const layerWithComputedProperties: Omit<StreamLayerData, 'data'> = {\n                    ...layer,\n                    label: getLabel(layer),\n                    color: getColor(layer),\n                }\n\n                return {\n                    ...layerWithComputedProperties,\n                    data: computedPoints.map(point => {\n                        point.layerLabel = layerWithComputedProperties.label\n                        point.color = layerWithComputedProperties.color\n\n                        return point\n                    }),\n                }\n            }),\n        [layers, keys, getLabel, areaGenerator, getColor, xScale, yScale, formatValue]\n    )\n\n    const slices: StreamSliceData[] = useMemo(\n        () =>\n            Array.from({ length: data.length }, (_, i) => {\n                const sliceStack = enhancedLayers\n                    .map(layer => layer.data[i])\n                    .sort((a, b) => a.y2 - b.y2)\n\n                return {\n                    index: i,\n                    x: enhancedLayers[0].data[i].x,\n                    stack: sliceStack,\n                }\n            }),\n        [data.length, enhancedLayers]\n    )\n\n    const layerContext: StreamCustomLayerProps = useMemo(\n        () => ({\n            xScale,\n            yScale,\n            layers: enhancedLayers,\n            slices,\n        }),\n        [xScale, yScale, enhancedLayers, slices]\n    )\n\n    return {\n        xScale,\n        yScale,\n        layers: enhancedLayers,\n        slices,\n        getBorderColor,\n        getDotSize,\n        getDotColor,\n        getDotBorderWidth,\n        getDotBorderColor,\n        layerContext,\n    }\n}\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { StreamDatum, StreamSvgProps } from './types'\nimport { Stream } from './Stream'\n\nexport const ResponsiveStream = <RawDatum extends StreamDatum>(\n    props: Omit<StreamSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Stream<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import React from 'react'\nimport { linearGradientDef } from '@nivo/core'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsiveStream } from '@nivo/stream'\nimport { ResponsiveTreeMap } from '@nivo/treemap'\nimport { generateCountriesData } from '@nivo/generators'\nimport { FullWidthBanner } from '../../styled'\nimport { useTheme } from '../../../theming/context'\n\nconst GradientsIllustrations = () => {\n    const theme = useTheme()\n\n    return (\n        <FullWidthBanner>\n            <div className=\"guide__illustrations\">\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveStream\n                        margin={{ top: -2, right: -2, bottom: -2, left: -2 }}\n                        data={generateCountriesData(['a', 'b', 'c'], { size: 9 })}\n                        indexBy=\"country\"\n                        keys={['a', 'b', 'c']}\n                        offsetType=\"expand\"\n                        axisLeft={null}\n                        axisBottom={null}\n                        enableGridX={false}\n                        defs={[\n                            linearGradientDef('example1A', [\n                                { offset: 0, color: '#faed94' },\n                                { offset: 30, color: '#faf047' },\n                                { offset: 100, color: '#e4b400' },\n                            ]),\n                            linearGradientDef('example1B', [\n                                { offset: 0, color: '#a8f9eb' },\n                                { offset: 30, color: '#97e3d5' },\n                                { offset: 100, color: '#458a7d' },\n                            ]),\n                            linearGradientDef('example1C', [\n                                { offset: 0, color: '#f9804e' },\n                                { offset: 30, color: '#f96a3d' },\n                                { offset: 100, color: '#a84f35' },\n                            ]),\n                        ]}\n                        fill={[\n                            { match: { id: 'a' }, id: 'example1A' },\n                            { match: { id: 'b' }, id: 'example1B' },\n                            { match: { id: 'c' }, id: 'example1C' },\n                        ]}\n                        isInteractive={false}\n                        animate={false}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveBar\n                        margin={{ top: 15, right: 10, bottom: -2, left: 10 }}\n                        data={generateCountriesData(['a', 'b', 'c'], { size: 7 })}\n                        indexBy=\"country\"\n                        keys={['a', 'b', 'c']}\n                        colors={{ scheme: 'spectral' }}\n                        padding={0.2}\n                        axisLeft={null}\n                        axisBottom={null}\n                        enableGridY={false}\n                        enableLabel={false}\n                        defs={[\n                            linearGradientDef('example2', [\n                                { offset: 0, color: 'inherit' },\n                                { offset: 40, color: 'inherit' },\n                                { offset: 100, color: 'inherit', opacity: 0.6 },\n                            ]),\n                        ]}\n                        fill={[{ match: '*', id: 'example2' }]}\n                        borderWidth={1}\n                        borderColor=\"inherit:darker(0.2)\"\n                        isInteractive={false}\n                        animate={false}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__item\">\n                    <ResponsiveTreeMap\n                        margin={{ top: -2, right: -2, bottom: -2, left: -2 }}\n                        data={{\n                            country: 'root',\n                            children: generateCountriesData(['value'], { size: 9 }),\n                        }}\n                        colors={{ scheme: 'spectral' }}\n                        colorBy=\"path\"\n                        identity=\"country\"\n                        leavesOnly={false}\n                        borderWidth={1}\n                        nodeOpacity={1}\n                        borderColor={{ theme: 'background' }}\n                        outerPadding={10}\n                        innerPadding={4}\n                        enableParentLabel={false}\n                        isInteractive={false}\n                        animate={false}\n                        enableLabel={false}\n                        defs={[\n                            linearGradientDef('example2', [\n                                { offset: 0, color: 'inherit' },\n                                { offset: 40, color: 'inherit' },\n                                { offset: 100, color: 'inherit', opacity: 0.3 },\n                            ]),\n                        ]}\n                        fill={[{ match: '*', id: 'example2' }]}\n                        theme={theme.nivo}\n                    />\n                </div>\n                <div className=\"guide__illustrations__legend\">\n                    gradients applied to various nivo components.\n                </div>\n            </div>\n        </FullWidthBanner>\n    )\n}\n\nexport default GradientsIllustrations\n","import React from 'react'\nimport { Highlight } from '../../Highlight'\n\nconst code = `\nimport { linearGradientDef } from '@nivo/core'\nimport { Stream } from '@nivo/stream'\n\nconst MyChart = () => (\n    <Stream\n        data={[/*…*/]}\n        keys={['react', 'vue', 'elm']}\n        // 1. defining gradients\n        defs={[\n            // using helpers\n            // will inherit colors from current element\n            linearGradientDef('gradientA', [\n                { offset: 0, color: 'inherit' },\n                { offset: 100, color: 'inherit', opacity: 0 },\n            ]),\n            linearGradientDef('gradientB', [\n                { offset: 0, color: '#000' },\n                { offset: 100, color: 'inherit' },\n            ],\n            // you may specify transforms for your gradients, e.g. rotations and skews,\n            // following the transform attribute format.\n            // For instance here we rotate 90 degrees relative to the center of the object.\n            {\n                gradientTransform: 'rotate(90 0.5 0.5)'\n            }),\n            // using plain object\n            {\n                id: 'gradientC',\n                type: 'linearGradient',\n                colors: [\n                    { offset: 0, color: '#faf047' },\n                    { offset: 100, color: '#e4b400' },\n                ],\n            },\n        ]}\n        // 2. defining rules to apply those gradients\n        fill={[\n            // match using object query\n            { match: { id: 'react' }, id: 'gradientA' },\n            // match using function\n            { match: d => d.id === 'vue', id: 'gradientB' },\n            // match all, will only affect 'elm', because once a rule match,\n            // others are skipped, so now it acts as a fallback\n            { match: '*', id: 'gradientC' },\n        ]}\n    />\n)\n`.trim()\n\nconst GradientsExample = () => <Highlight code={code} language=\"jsx\" />\n\nexport default GradientsExample\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport { Seo } from '../../components/Seo'\nimport PageContent from '../../components/PageContent'\nimport GradientsIllustrations from '../../components/guides/gradients/GradientsIllustrations'\nimport GradientsExample from '../../components/guides/gradients/GradientsExample'\nimport { DescriptionBlock } from '../../components/styled'\n\nexport default class Gradients extends Component {\n    render() {\n        return (\n            <Layout>\n                <Seo title=\"Gradients Guide\" />\n                <PageContent>\n                    <div className=\"guide__header\">\n                        <h1>Gradients</h1>\n                    </div>\n                </PageContent>\n                <DescriptionBlock>\n                    <p>\n                        While gradients rarely add meaning to your data, it's an easy way to enhance\n                        the look of your charts.\n                    </p>\n                    <h2>Using gradients in nivo</h2>\n                    <p>\n                        Defining gradients in nivo is a <strong>2 steps process</strong>, first\n                        you'll have to declare available definitions (the same goes for{' '}\n                        <Link to=\"/guides/patterns\">patterns</Link>) using dedicated helpers or\n                        providing plain objects.\n                        <br />\n                        Then you must define the rules to apply those definitions using the{' '}\n                        <code>fill</code> property.\n                    </p>\n                </DescriptionBlock>\n                <GradientsIllustrations />\n                <DescriptionBlock>\n                    <p>\n                        <strong>Separating gradient definitions from application</strong> allows us\n                        to reuse those in various places, like fills and borders, and while\n                        maintaining a direct mapping for a bar chart with 5 items can be simple\n                        enough, when you're dealing with a complex heatmap with tens of nodes it can\n                        quickly become cumbersome. Doing so also provides the ability to{' '}\n                        <strong>use a gradient depending on chart element value</strong>. Last but\n                        not least, <strong>gradient colors can be inherited</strong> from current\n                        node ones.\n                    </p>\n                    <h2>Example</h2>\n                    <GradientsExample />\n                    <h2>Known limitations</h2>\n                    <p>\n                        Please be aware that gradient usage has some limitations, it's{' '}\n                        <strong>not supported for canvas</strong> chart implementations for now, and\n                        tooltips involving colored chips will use plain element color.\n                    </p>\n                </DescriptionBlock>\n            </Layout>\n        )\n    }\n}\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","area","data","i","j","k","d","buffer","n","length","defined0","x0z","Array","y0z","areaStart","lineStart","lineEnd","point","areaEnd","arealine","arguments","lineX0","lineY0","lineY1","lineX1","line","p","day","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","days","range","styled","media","FullWidthBanner","theme","colors","cardBackground","DescriptionBlock","Card","cardShadow","randColor","round","random","countryCodes","names","programmingLanguages","generateBulletData","id","max","title","subtitle","rangeCount","measureCount","markerCount","float","ranges","reduce","remaining","acc","measures","markers","map","generateChordData","keys","size","minValue","maxValue","maxSize","min","selectedKeys","slice","matrix","generateNetworkData","rootNodeRadius","minMidNodes","maxMidNodes","midNodeRadius","minLeaves","maxLeaves","leafRadius","rootNode","radius","depth","color","nodes","from","links","extraNodes","forEach","push","source","target","distance","concat","generateParallelCoordinatesData","key","shuffle","value","availableNodes","name","getNodeTargets","currentPath","targets","filter","includes","join","targetId","getNodesTargets","targetsById","link","generateSankeyData","nodeCount","maxIterations","Object","assign","node","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","groups","categoryCount","group","groupIndex","price","index","datum","volume","categories","randomizeSwarmPlotData","previousData","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","label","language","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","types","country","find","generateSeries","ids","xKeys","generateDayCounts","to","timeDays","dayFormat","timeFormat","generateOrderedDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","StreamLayer","layer","fillOpacity","borderWidth","getBorderColor","isInteractive","tooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","createElement","event","useMotionConfig","animate","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","_jsx","animated","fill","stroke","strokeWidth","onMouseMove","onMouseEnter","onMouseLeave","StreamLayers","layers","getDotY","position","StreamDots","dotComponent","getSize","getColor","getBorderWidth","borderColor","StreamSlicesItem","height","useState","isHover","setIsHover","handleMouseLeave","_jsxs","transform","strokeOpacity","width","StreamSlices","slices","defaultProps","order","offsetType","axisBottom","axisLeft","enableGridX","enableGridY","scheme","modifiers","enableDots","dotPosition","circle","cx","cy","dotSize","dotColor","dotBorderWidth","dotBorderColor","BasicTooltip","enableChip","enableStackTooltip","stackTooltip","rows","useMemo","stack","Chip","layerId","layerLabel","formattedValue","TableTooltip","legends","legendLabel","role","svgDefaultProps","defs","motionConfig","isFocusable","InnerStream","valueFormat","chartLayers","partialMargin","margin","axisTop","axisRight","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","areaCurveFactory","useCurveInterpolation","areaGenerator","d3Stack","offset","stackOffsetFromProp","stackOrderFromProp","allMin","allMax","scalePoint","domain","scaleLinear","xScale","yScale","useTheme","useOrdinalColorScale","useInheritedColor","getDotSize","getDotColor","getDotBorderWidth","getDotBorderColor","getLabel","usePropertyAccessor","formatValue","useValueFormatter","enhancedLayers","points","layerIndex","computedPoints","layerWithComputedProperties","sliceStack","sort","a","b","layerContext","boundDefs","bindDefs","layerById","grid","axes","dots","Grid","Axes","top","right","bottom","left","Fragment","legend","legendData","reverse","BoxLegendSvg","containerWidth","containerHeight","SvgWrapper","Stream","renderWrapper","otherProps","Container","ResponsiveStream","props","ResponsiveWrapper","className","indexBy","linearGradientDef","match","nivo","padding","enableLabel","opacity","colorBy","identity","leavesOnly","nodeOpacity","outerPadding","innerPadding","enableParentLabel","code","trim","Highlight","Gradients","render","Layout","Seo","PageContent","Link","Component","module","exports","array","iteratee","accumulator","initAccum","copyArray","shuffleSelf","string","split","reAsciiWord","object","undefined","nativeFloor","floor","nativeRandom","lower","upper","values","collection","arrayMap","baseSlice","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","arrayReduce","deburr","words","reApos","RegExp","callback","replace","deburrLetter","basePropertyOf","reHasUnicode","test","reHasUnicodeWord","baseRandom","lastIndex","rand","asciiToArray","unicodeToArray","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","rsModifier","rsEmoji","reUnicodeWord","reLatin","reComboMark","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","isArray","upperFirst","createCaseFirst","baseValues","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard"],"sourceRoot":""}