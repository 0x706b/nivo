{"version":3,"file":"component---src-pages-area-bump-index-tsx-766ecce1d756544022f8.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/area.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/./src/data/components/area-bump/props.ts","webpack://nivo-website/./src/data/components/area-bump/mapper.ts","webpack://nivo-website/./src/pages/area-bump/index.tsx","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/random.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function (_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function (_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function (_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function (_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 = area.lineY0 = function () {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function () {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function () {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] }: { exclude?: string[] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","import { areaBumpSvgDefaultProps as defaults } from '@nivo/bump'\nimport {\n    themeProperty,\n    defsProperties,\n    groupProperties,\n    motionProperties,\n} from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    ordinalColors,\n    blendMode,\n    chartGrid,\n    axes,\n    isInteractive,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n\n            \\`\\`\\`\n            {\n                id:   string\n                data: {\n                    x: number | string\n                    y: number\n                }[]\n            }[]\n            \\`\\`\\`\n\n            This component assumes that every serie contains all\n            x values sorted the same way they should appear on the chart.\n            \n            As this component is a TypeScript generic, it is possible to customize\n            the datum using the \\`Datum\\` arg, and it's also possible to add\n            some extra properties to the series by passing \\`ExtraProps\\`.\n        `,\n        required: true,\n        type: 'AreaBumpSerie<Datum, ExtraProps>[]',\n        flavors: allFlavors,\n    },\n    ...chartDimensions(allFlavors),\n    {\n        key: 'align',\n        group: 'Base',\n        help: `Chart alignment.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.align,\n        flavors: allFlavors,\n        control: {\n            type: 'choices',\n            choices: [\n                { label: 'start', value: 'start' },\n                { label: 'middle', value: 'middle' },\n                { label: 'end', value: 'end' },\n            ],\n        },\n    },\n    {\n        key: 'interpolation',\n        group: 'Base',\n        type: 'string',\n        help: `Area interpolation.`,\n        required: false,\n        defaultValue: defaults.interpolation,\n        flavors: allFlavors,\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'smooth', value: 'smooth' },\n                { label: 'linear', value: 'linear' },\n            ],\n        },\n    },\n    {\n        key: 'spacing',\n        group: 'Base',\n        type: 'number',\n        help: 'Spacing.',\n        required: false,\n        flavors: allFlavors,\n        defaultValue: defaults.spacing,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'xPadding',\n        help: 'X padding.',\n        group: 'Base',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.xPadding,\n        flavors: allFlavors,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    themeProperty(allFlavors),\n    ordinalColors({ flavors: allFlavors, defaultValue: defaults.colors }),\n    blendMode({\n        target: 'areas',\n        flavors: ['svg'],\n        defaultValue: defaults.blendMode,\n    }),\n    {\n        key: 'fillOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area fill opacity.',\n        defaultValue: defaults.fillOpacity,\n        flavors: allFlavors,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'activeFillOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area fill opacity for active series.',\n        defaultValue: defaults.activeFillOpacity,\n        flavors: allFlavors,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'inactiveFillOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area fill opacity for inactive series.',\n        defaultValue: defaults.inactiveFillOpacity,\n        flavors: allFlavors,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'borderWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border width.',\n        defaultValue: defaults.borderWidth,\n        flavors: allFlavors,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'activeBorderWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border width for active series.',\n        defaultValue: defaults.activeBorderWidth,\n        flavors: allFlavors,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'inactiveBorderWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border width for inactive series.',\n        defaultValue: defaults.inactiveBorderWidth,\n        flavors: allFlavors,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'borderColor',\n        group: 'Style',\n        type: 'string | object | Function',\n        required: false,\n        help: 'Method to compute area border color.',\n        defaultValue: defaults.borderColor,\n        flavors: allFlavors,\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'borderOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border opacity.',\n        flavors: allFlavors,\n        defaultValue: defaults.borderOpacity,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'activeBorderOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border opacity for active series.',\n        defaultValue: defaults.activeBorderOpacity,\n        flavors: allFlavors,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'inactiveBorderOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        required: false,\n        help: 'Area border opacity for inactive series.',\n        defaultValue: defaults.inactiveBorderOpacity,\n        flavors: allFlavors,\n        control: { type: 'opacity' },\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'startLabel',\n        group: 'Labels',\n        type: 'boolean | (serie: AreaBumpSerie) => string',\n        required: false,\n        help: 'Start label, use a boolean to enable/disable, or a function to customize its text.',\n        defaultValue: defaults.startLabel,\n        flavors: allFlavors,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'startLabelPadding',\n        group: 'Labels',\n        type: 'number',\n        required: false,\n        help: 'Define area start label padding.',\n        defaultValue: defaults.startLabelPadding,\n        flavors: allFlavors,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'startLabelTextColor',\n        group: 'Labels',\n        type: 'InheritedColorConfig<AreaBumpComputedSerie>',\n        required: false,\n        help: 'Method to compute start label text color.',\n        flavors: allFlavors,\n        defaultValue: defaults.startLabelTextColor,\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'endLabel',\n        group: 'Labels',\n        type: 'boolean | (serie: AreaBumpSerie) => string',\n        required: false,\n        help: 'End label, use a boolean to enable/disable, or a function to customize its text.',\n        defaultValue: defaults.endLabel,\n        flavors: allFlavors,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'endLabelPadding',\n        group: 'Labels',\n        type: 'number',\n        required: false,\n        help: 'Define area end label padding.',\n        defaultValue: defaults.endLabelPadding,\n        flavors: allFlavors,\n        control: {\n            type: 'range',\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'endLabelTextColor',\n        help: 'Method to compute end label text color.',\n        type: 'InheritedColorConfig<AreaBumpComputedSerie>',\n        required: false,\n        defaultValue: defaults.endLabelTextColor,\n        group: 'Labels',\n        flavors: allFlavors,\n        control: { type: 'inheritedColor' },\n    },\n    ...chartGrid({\n        flavors: allFlavors,\n        xDefault: defaults.enableGridX,\n        y: false,\n    }),\n    ...axes({ flavors: allFlavors, exclude: ['right', 'left'] }),\n    isInteractive({\n        flavors: ['svg'],\n        defaultValue: defaults.isInteractive,\n    }),\n    {\n        key: 'defaultActiveSerieIds',\n        group: 'Interactivity',\n        type: 'string[]',\n        help: 'Default active serie ids.',\n        required: false,\n        flavors: allFlavors,\n    },\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        type: '(serie: AreaBumpComputedSerie, event: MouseEvent) => void',\n        help: 'onMouseEnter handler.',\n        required: false,\n        flavors: allFlavors,\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        type: '(serie: AreaBumpComputedSerie, event: MouseEvent) => void',\n        help: 'onMouseMove handler.',\n        required: false,\n        flavors: allFlavors,\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        type: '(serie: AreaBumpComputedSerie, event: MouseEvent) => void',\n        help: 'onMouseLeave handler.',\n        required: false,\n        flavors: allFlavors,\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        type: '(serie: AreaBumpComputedSerie, event: MouseEvent) => void',\n        help: 'onClick handler.',\n        required: false,\n        flavors: allFlavors,\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        flavors: allFlavors,\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the series's data.\n        `,\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import { settingsMapper, mapAxis } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        axisTop: mapAxis('top'),\n        axisBottom: mapAxis('bottom'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisBottom'],\n    }\n)\n","import React from 'react'\nimport range from 'lodash/range'\nimport random from 'lodash/random'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { patternDotsDef, patternLinesDef } from '@nivo/core'\nimport { ResponsiveAreaBump, areaBumpSvgDefaultProps as defaults } from '@nivo/bump'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/area-bump/meta.yml'\nimport { groups } from '../../data/components/area-bump/props'\nimport mapper from '../../data/components/area-bump/mapper'\n\nconst serieIds = ['JavaScript', 'ReasonML', 'TypeScript', 'Elm', 'CoffeeScript']\nconst generateData = () => {\n    const years = range(2000, 2006)\n\n    return serieIds.map(id => ({\n        id,\n        data: years.map(year => ({\n            x: year,\n            y: random(10, 30),\n        })),\n    }))\n}\n\nconst initialProperties = {\n    margin: {\n        top: 40,\n        right: 100,\n        bottom: 40,\n        left: 100,\n    },\n\n    align: defaults.align,\n    interpolation: defaults.interpolation,\n    spacing: 8,\n    xPadding: defaults.xPadding,\n\n    colors: { scheme: 'nivo' },\n    blendMode: 'multiply',\n    fillOpacity: defaults.fillOpacity,\n    activeFillOpacity: defaults.activeFillOpacity,\n    inactiveFillOpacity: defaults.inactiveFillOpacity,\n    defs: [\n        patternDotsDef('dots', {\n            background: 'inherit',\n            color: '#38bcb2',\n            size: 4,\n            padding: 1,\n            stagger: true,\n        }),\n        patternLinesDef('lines', {\n            background: 'inherit',\n            color: '#eed312',\n            rotation: -45,\n            lineWidth: 6,\n            spacing: 10,\n        }),\n    ],\n    fill: [\n        { match: { id: 'CoffeeScript' }, id: 'dots' },\n        { match: { id: 'TypeScript' }, id: 'lines' },\n    ],\n    borderWidth: defaults.borderWidth,\n    activeBorderWidth: defaults.activeBorderWidth,\n    inactiveBorderWidth: defaults.inactiveBorderWidth,\n    borderColor: defaults.borderColor,\n    borderOpacity: defaults.borderOpacity,\n    activeBorderOpacity: defaults.activeBorderOpacity,\n    inactiveBorderOpacity: defaults.inactiveBorderOpacity,\n\n    startLabel: 'id',\n    startLabelPadding: defaults.startLabelPadding,\n    startLabelTextColor: defaults.startLabelTextColor,\n    endLabel: 'id',\n    endLabelPadding: defaults.endLabelPadding,\n    endLabelTextColor: defaults.endLabelTextColor,\n\n    enableGridX: defaults.enableGridX,\n    axisTop: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: -36,\n    },\n    axisBottom: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: 32,\n    },\n\n    isInteractive: true,\n\n    animate: defaults.animate,\n    motionConfig: defaults.motionConfig,\n}\n\nconst AreaBump = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/area-bump.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <ComponentTemplate\n            name=\"AreaBump\"\n            meta={meta.AreaBump}\n            icon=\"area-bump\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            defaultProperties={defaults}\n            initialProperties={initialProperties}\n            propertiesMapper={mapper}\n            generateData={generateData}\n            image={image}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveAreaBump<{ x: number; y: number }>\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={serie =>\n                            logAction({\n                                type: 'click',\n                                label: `[serie] ${serie.id}`,\n                                color: serie.color,\n                                data: serie,\n                            })\n                        }\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default AreaBump\n","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","area","data","i","j","k","d","buffer","n","length","defined0","x0z","Array","y0z","areaStart","lineStart","lineEnd","point","areaEnd","arealine","arguments","lineX0","lineY0","lineY1","lineX1","line","p","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","key","omit","mapAxis","type","value","upperFirst","enable","mapFormat","format","enabled","undefined","allFlavors","props","group","help","description","required","flavors","chartDimensions","defaultValue","defaults","control","choices","label","min","max","step","themeProperty","ordinalColors","blendMode","target","defsProperties","chartGrid","xDefault","axes","isInteractive","motionProperties","groups","groupProperties","axisTop","axisBottom","serieIds","generateData","years","range","map","id","year","random","initialProperties","margin","top","right","bottom","left","align","interpolation","spacing","xPadding","colors","scheme","fillOpacity","activeFillOpacity","inactiveFillOpacity","defs","patternDotsDef","background","color","size","padding","stagger","patternLinesDef","rotation","lineWidth","fill","match","borderWidth","activeBorderWidth","inactiveBorderWidth","borderColor","borderOpacity","activeBorderOpacity","inactiveBorderOpacity","startLabel","startLabelPadding","startLabelTextColor","endLabel","endLabelPadding","endLabelTextColor","enableGridX","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","animate","motionConfig","image","useStaticQuery","childImageSharp","gatsbyImageData","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","theme","logAction","onClick","serie","computeCartesianTicks","translate","axis","scale","ticksPosition","tickValues","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","lineX","lineY","text","textX","textY","isRTL","document","dir","textAlign","center","textBaseline","baseline","ticks","v","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","isArray","lines","memoizedAxisTick","memo","_value","textAnchor","animatedProps","useTheme","useMemo","style","opacity","cursor","event","_jsxs","animated","g","transform","_jsx","dominantBaseline","textTransform","memoizedAxis","renderTick","AxisTick","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","t","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","React","rotate","domain","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","isXAxis","Axis","GridLine","grid","GridLines","_createElement","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","ctx","_format","save","font","fontWeight","fontSize","fontFamily","strokeWidth","Number","lineCap","stroke","strokeStyle","beginPath","degreesToRadians","fillStyle","fillText","String","restore","renderAxesToCanvas","renderGridLinesToCanvas","nativeFloor","floor","nativeRandom","module","exports","lower","upper","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","rand"],"sourceRoot":""}