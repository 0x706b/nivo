{"version":3,"sources":["webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/bump/compute.js","webpack:///../src/bump/hooks.js","webpack:///../src/bump/LineTooltip.js","webpack:///../src/bump/Point.js","webpack:///../src/bump/props.js","webpack:///../src/bump/Line.js","webpack:///../src/bump/LinesLabels.js","webpack:///../src/bump/Points.js","webpack:///../src/bump/Bump.js","webpack:///../src/bump/ResponsiveBump.js","webpack:///../src/area-bump/AreaTooltip.js","webpack:///../src/area-bump/props.js","webpack:///../src/area-bump/hooks.js","webpack:///../src/area-bump/compute.js","webpack:///../src/area-bump/Area.js","webpack:///../src/area-bump/AreasLabels.js","webpack:///../src/area-bump/AreaBump.js","webpack:///../src/area-bump/ResponsiveAreaBump.js","webpack:///../src/compute.js","webpack:///../src/props.js","webpack:///../src/components/AxisTick.js","webpack:///../src/components/Axis.js","webpack:///../src/components/Axes.js","webpack:///../src/components/GridLine.js","webpack:///../src/components/GridLines.js","webpack:///../src/components/Grid.js","webpack:///../src/utils.js","webpack:///../src/canvas.js","webpack:///./src/data/components/bump/props.js","webpack:///./src/data/components/bump/mapper.js","webpack:///./src/pages/bump/index.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","unsupportedIterableToArray","TypeError","nonIterableRest","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","useSerieDerivedProp","instruction","useMemo","useBump","width","height","data","interpolation","xPadding","xOuterPadding","yOuterPadding","lineWidth","activeLineWidth","inactiveLineWidth","colors","opacity","activeOpacity","inactiveOpacity","pointSize","activePointSize","inactivePointSize","pointColor","pointBorderWidth","activePointBorderWidth","inactivePointBorderWidth","pointBorderColor","isInteractive","currentSerie","xValues","serie","datum","xScale","scalePoint","yScale","linePointPadding","Math","series","rawSerie","points","linePoints","x","y","point","id","computeSeries","rawSeries","lineGenerator","d","useLineGenerator","getColor","useOrdinalColorScale","getSerieStyle","getLineWidth","getActiveLineWidth","getInactiveLineWidth","getOpacity","getActiveOpacity","getInactiveOpacity","getNormalStyle","getActiveStyle","getInactiveStyle","useSerieStyle","theme","useTheme","getPointColor","useInheritedColor","getPointBorderColor","getPointStyle","getSize","getActiveSize","getInactiveSize","getBorderWidth","getActiveBorderWidth","getInactiveBorderWidth","size","borderWidth","usePointStyle","pts","rawPoint","serieId","isActive","isInactive","memo","enableChip","color","pointStyle","pointerEvents","borderColor","useMotionConfig","animate","springConfig","animatedProps","useSpring","radius","config","immediate","cx","cy","r","v","fill","strokeWidth","stroke","style","BumpDefaultProps","PropTypes","isRequired","layers","ordinalColorsPropType","startLabel","startLabelPadding","startLabelTextColor","inheritedColorPropType","endLabel","endLabelPadding","endLabelTextColor","pointComponent","enableGridX","enableGridY","axisTop","axisRight","axisBottom","axisLeft","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","role","scheme","modifiers","LineTooltip","motionConfig","yStep","handlers","setCurrent","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","handleMouseMove","handleMouseLeave","handleClick","useSerieHandlers","setCurrentSerie","linePath","animatedPath","useAnimatedPath","strokeLinecap","strokeOpacity","getLabel","position","padding","labels","textAnchor","signedPadding","label","useSeriesLabels","useSprings","dominantBaseline","Bump","props","partialMargin","useDimensions","margin","innerWidth","innerHeight","outerWidth","outerHeight","useState","layerById","grid","axes","top","right","bottom","left","lines","layer","withContainer","ResponsiveBump","AreaBumpDefaultProps","align","spacing","blendMode","blendModePropType","fillOpacity","activeFillOpacity","inactiveFillOpacity","defs","match","activeBorderWidth","inactiveBorderWidth","borderOpacity","activeBorderOpacity","inactiveBorderOpacity","AreaTooltip","useAreaBumpSeries","slices","maxSum","maxValues","total","values","Map","heightScale","scaleLinear","sliceHeight","offset","b","a","previousValues","all","pos","beforeValue","t","sliceValue","areaPointPadding","serieCopy","beforeHeight","y0","y1","useAreaBump","current","areaGenerator","useAreaGenerator","getFillOpacity","getActiveFillOpacity","getInactiveFillOpacity","getBorderColor","getBorderOpacity","getActiveBorderOpacity","getInactiveBorderOpacity","mixBlendMode","AreaBump","boundDefs","bindDefs","targetKey","areas","ResponsiveAreaBump","centerScale","scale","bandwidth","timeByType","millisecond","second","minute","hour","day","week","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month","year","timeTypes","timeIntervalRegexp","RegExp","isInteger","isFinite","getScaleTicks","spec","matches","timeType","Number","computeCartesianTicks","axis","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","textProps","textPropsByEngine","line","lineX","lineY","text","textX","textY","textAlign","textBaseline","translate","ticks","getFormatter","f","timeFormat","Date","d3Format","computeGridLines","_values","lineValues","lineCount","x1","x2","y2","axisPropTypes","format","renderTick","legend","legendPosition","legendOffset","ariaHidden","bool","axisPropType","AxisTick","_value","gStyle","transform","e","rotate","Axis","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transitions","useTransition","tick","initial","textTransform","enter","update","leave","aria-hidden","item","transitionProps","tickIndex","positions","isXAxis","GridLine","yValues","xLines","yLines","type","degreesToRadians","degrees","renderAxisToCanvas","ctx","renderAxesToCanvas","renderGridLinesToCanvas","group","help","description","required","enableControlForFlavors","controlType","controlOptions","unit","min","max","step","defaultValue","defaults","choices","themeProperty","inheritableProperties","axesProperties","motionProperties","groups","groupProperties","settingsMapper","mapAxis","exclude","generateData","years","range","ranks","map","rank","shuffle","initialProperties","enable","ComponentTemplate","meta","icon","flavors","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","logAction"],"mappings":"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","file":"component---src-pages-bump-index-js-bcbf382c431633554096.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint } from 'd3-scale'\n\nexport const computeSeries = ({ width, height, data, xPadding, xOuterPadding, yOuterPadding }) => {\n    let xValues = new Set()\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!xValues.has(datum.x)) {\n                xValues.add(datum.x)\n            }\n        })\n    })\n    xValues = Array.from(xValues)\n\n    const xScale = scalePoint().domain(xValues).range([0, width]).padding(xOuterPadding)\n\n    const yScale = scalePoint()\n        .domain(data.map((serie, i) => i + 1))\n        .range([0, height])\n        .padding(yOuterPadding)\n\n    const linePointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(rawSerie => {\n        const serie = {\n            ...rawSerie,\n            points: [],\n            linePoints: [],\n        }\n\n        rawSerie.data.forEach((datum, i) => {\n            let x = null\n            let y = null\n            if (datum.y !== null && datum.y !== undefined) {\n                x = xScale(datum.x)\n                y = yScale(datum.y)\n            }\n            const point = {\n                id: `${rawSerie.id}.${i}`,\n                serie: rawSerie,\n                data: datum,\n                x,\n                y,\n            }\n            serie.points.push(point)\n\n            // only add pre transition point if the datum is not empty\n            if (x !== null) {\n                if (i === 0) {\n                    serie.linePoints.push([0, point.y])\n                } else {\n                    serie.linePoints.push([point.x - linePointPadding, point.y])\n                }\n            }\n\n            serie.linePoints.push([point.x, point.y])\n\n            // only add post transition point if the datum is not empty\n            if (x !== null) {\n                if (i === rawSerie.data.length - 1 && x) {\n                    serie.linePoints.push([width, point.y])\n                } else {\n                    serie.linePoints.push([point.x + linePointPadding, point.y])\n                }\n            }\n\n            // remove points having null coordinates\n            serie.points = serie.points.filter(point => point.x !== null)\n        })\n\n        return serie\n    })\n\n    return {\n        series,\n        xScale,\n        yScale,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport { line as d3Line, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { computeSeries } from './compute'\n\nexport const useLineGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Line()\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n                .defined(d => d[0] !== null && d[1] !== null),\n\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getLineWidth = useSerieDerivedProp(lineWidth)\n    const getActiveLineWidth = useSerieDerivedProp(activeLineWidth)\n    const getInactiveLineWidth = useSerieDerivedProp(inactiveLineWidth)\n\n    const getOpacity = useSerieDerivedProp(opacity)\n    const getActiveOpacity = useSerieDerivedProp(activeOpacity)\n    const getInactiveOpacity = useSerieDerivedProp(inactiveOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            lineWidth: getLineWidth(serie),\n            opacity: getOpacity(serie),\n        }),\n        [getLineWidth, getOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getActiveLineWidth(serie),\n            opacity: getActiveOpacity(serie),\n        }),\n        [getActiveLineWidth, getActiveOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getInactiveLineWidth(serie),\n            opacity: getInactiveOpacity(serie),\n        }),\n        [getInactiveLineWidth, getInactiveOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (currentSerie === null) return getNormalStyle(serie)\n            if (serie.id === currentSerie) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const usePointStyle = ({\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getSize = useSerieDerivedProp(pointSize)\n    const getActiveSize = useSerieDerivedProp(activePointSize)\n    const getInactiveSize = useSerieDerivedProp(inactivePointSize)\n\n    const getBorderWidth = useSerieDerivedProp(pointBorderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activePointBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactivePointBorderWidth)\n\n    const getNormalStyle = useMemo(\n        () => point => ({\n            size: getSize(point),\n            borderWidth: getBorderWidth(point),\n        }),\n        [getSize, getBorderWidth]\n    )\n    const getActiveStyle = useMemo(\n        () => point => ({\n            size: getActiveSize(point),\n            borderWidth: getActiveBorderWidth(point),\n        }),\n        [getActiveSize, getActiveBorderWidth]\n    )\n    const getInactiveStyle = useMemo(\n        () => point => ({\n            size: getInactiveSize(point),\n            borderWidth: getInactiveBorderWidth(point),\n        }),\n        [getInactiveSize, getInactiveBorderWidth]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return point => {\n            if (currentSerie === null) return getNormalStyle(point)\n            if (point.serieId === currentSerie) return getActiveStyle(point)\n            return getInactiveStyle(point)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const useBump = ({\n    width,\n    height,\n    data,\n    interpolation,\n    xPadding,\n    xOuterPadding,\n    yOuterPadding,\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    colors,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointColor,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    pointBorderColor,\n    isInteractive,\n    currentSerie,\n}) => {\n    const { series: rawSeries, xScale, yScale } = useMemo(\n        () =>\n            computeSeries({\n                width,\n                height,\n                data,\n                xPadding,\n                xOuterPadding,\n                yOuterPadding,\n            }),\n        [width, height, data, xPadding, xOuterPadding, yOuterPadding]\n    )\n\n    const lineGenerator = useLineGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        isInteractive,\n        currentSerie,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                serie.color = getColor(serie)\n                serie.style = getSerieStyle(serie)\n\n                return serie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const getPointStyle = usePointStyle({\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        isInteractive,\n        currentSerie,\n    })\n    const points = useMemo(() => {\n        const pts = []\n        series.forEach(serie => {\n            serie.points.forEach(rawPoint => {\n                const point = {\n                    ...rawPoint,\n                    serie,\n                    serieId: serie.id,\n                    isActive: currentSerie === serie.id,\n                    isInactive: currentSerie !== null && currentSerie !== serie.id,\n                }\n                point.color = getPointColor(point)\n                point.borderColor = getPointBorderColor(point)\n                point.style = getPointStyle({ ...point, serie })\n                pts.push(point)\n            })\n        })\n\n        return pts\n    }, [series, getPointColor, getPointBorderColor, getPointStyle, currentSerie])\n\n    return {\n        xScale,\n        yScale,\n        series,\n        points,\n        lineGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color, getLabel }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        const labels = []\n        series.forEach(serie => {\n            let label = serie.id\n            if (typeof getLabel === 'function') {\n                label = getLabel(serie)\n            }\n\n            const point =\n                position === 'start'\n                    ? serie.linePoints[0]\n                    : serie.linePoints[serie.linePoints.length - 1]\n\n            // exclude labels for series having missing data at the beginning/end\n            if (point[0] === null || point[1] === null) {\n                return\n            }\n\n            labels.push({\n                id: serie.id,\n                label,\n                x: point[0] + signedPadding,\n                y: point[1],\n                color: getColor(serie),\n                opacity: serie.style.opacity,\n                serie,\n                textAnchor,\n            })\n        })\n\n        return labels\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LineTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nLineTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(LineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\n\nconst pointStyle = { pointerEvents: 'none' }\n\nconst Point = ({ x, y, size, color, borderColor, borderWidth }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        color,\n        borderWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={animatedProps.radius.interpolate(v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            strokeWidth={animatedProps.borderWidth}\n            stroke={borderColor}\n            style={pointStyle}\n        />\n    )\n}\n\nPoint.propTypes = {\n    data: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    isActive: PropTypes.bool.isRequired,\n    isInactive: PropTypes.bool.isRequired,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n}\n\nexport default memo(Point)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport LineTooltip from './LineTooltip'\nimport Point from './Point'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['grid', 'axes', 'labels', 'lines', 'points']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    xPadding: PropTypes.number.isRequired,\n    xOuterPadding: PropTypes.number.isRequired,\n    yOuterPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    lineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    opacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    pointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointColor: inheritedColorPropType.isRequired,\n    pointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointBorderColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const BumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    layers: ['grid', 'axes', 'labels', 'lines', 'points'],\n\n    interpolation: 'smooth',\n    xPadding: 0.6,\n    xOuterPadding: 0.5,\n    yOuterPadding: 0.5,\n\n    colors: { scheme: 'nivo' },\n    lineWidth: 2,\n    activeLineWidth: 4,\n    inactiveLineWidth: 1,\n    opacity: 1,\n    activeOpacity: 1,\n    inactiveOpacity: 0.3,\n\n    startLabel: false,\n    startLabelPadding: 16,\n    startLabelTextColor: { from: 'color' },\n    endLabel: 'id',\n    endLabelPadding: 16,\n    endLabelTextColor: { from: 'color' },\n\n    pointSize: 6,\n    activePointSize: 8,\n    inactivePointSize: 4,\n    pointColor: { from: 'serie.color' },\n    pointBorderWidth: 0,\n    activePointBorderWidth: 0,\n    inactivePointBorderWidth: 0,\n    pointBorderColor: { from: 'serie.color', modifiers: [['darker', 1.4]] },\n\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {},\n    axisBottom: {},\n    axisLeft: {},\n\n    isInteractive: true,\n    tooltip: LineTooltip,\n}\n\nexport const BumpDefaultProps = {\n    ...commonDefaultProps,\n    pointComponent: Point,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useSerieHandlers } from './hooks'\n\nconst Line = ({\n    serie,\n    lineGenerator,\n    yStep,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const linePath = lineGenerator(serie.linePoints)\n\n    const animatedPath = useAnimatedPath(linePath)\n    const animatedProps = useSpring({\n        color: serie.color,\n        opacity: serie.style.opacity,\n        lineWidth: serie.style.lineWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            <animated.path\n                fill=\"none\"\n                d={animatedPath}\n                stroke={animatedProps.color}\n                strokeWidth={animatedProps.lineWidth}\n                strokeLinecap=\"round\"\n                strokeOpacity={animatedProps.opacity}\n                style={{ pointerEvents: 'none' }}\n            />\n            {isInteractive && (\n                <path\n                    fill=\"none\"\n                    stroke=\"red\"\n                    strokeOpacity={0}\n                    strokeWidth={yStep}\n                    d={linePath}\n                    strokeLinecap=\"butt\"\n                    onMouseEnter={handlers.onMouseEnter}\n                    onMouseMove={handlers.onMouseMove}\n                    onMouseLeave={handlers.onMouseLeave}\n                    onClick={handlers.onClick}\n                />\n            )}\n        </>\n    )\n}\n\nLine.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        linePoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            lineWidth: PropTypes.number.isRequired,\n            opacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    yStep: PropTypes.number.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { useSeriesLabels } from './hooks'\n\nconst LinesLabels = ({ series, getLabel, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        getLabel,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.label}\n            </animated.text>\n        )\n    })\n}\n\nLinesLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    getLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(LinesLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Points = ({ pointComponent, points }) => {\n    return points.map(point => {\n        return React.createElement(pointComponent, {\n            key: point.id,\n            data: point.data,\n            x: point.x,\n            y: point.y,\n            isActive: point.isActive,\n            isInactive: point.isInactive,\n            size: point.style.size,\n            color: point.color,\n            borderColor: point.borderColor,\n            borderWidth: point.style.borderWidth,\n        })\n    })\n}\n\nPoints.propTypes = {\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.object.isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            isActive: PropTypes.bool.isRequired,\n            isInactive: PropTypes.bool.isRequired,\n            color: PropTypes.string.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            style: PropTypes.shape({\n                size: PropTypes.number.isRequired,\n                borderWidth: PropTypes.number.isRequired,\n            }).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useState, Fragment } from 'react'\nimport { withContainer, useDimensions, SvgWrapper } from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { useBump } from './hooks'\nimport { BumpPropTypes, BumpDefaultProps } from './props'\nimport Line from './Line'\nimport LinesLabels from './LinesLabels'\nimport Points from './Points'\n\nconst Bump = props => {\n    const {\n        data,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n\n        colors,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        pointComponent,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { series, points, xScale, yScale, lineGenerator } = useBump({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        colors,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n        startLabel,\n        endLabel,\n        isInteractive,\n        currentSerie,\n    })\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        labels: [],\n        lines: (\n            <Fragment key=\"lines\">\n                {series.map(serie => (\n                    <Line\n                        key={serie.id}\n                        serie={serie}\n                        currentSerie={currentSerie}\n                        setCurrentSerie={setCurrentSerie}\n                        lineGenerator={lineGenerator}\n                        yStep={yScale.step()}\n                        margin={margin}\n                        isInteractive={isInteractive}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n        points: <Points key=\"points\" pointComponent={pointComponent} points={points} />,\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"start\"\n                series={series}\n                getLabel={startLabel}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"end\"\n                series={series}\n                getLabel={endLabel}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                innerWidth,\n                                innerHeight,\n                                xScale,\n                                yScale,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nBump.propTypes = BumpPropTypes\nBump.defaultProps = BumpDefaultProps\n\nexport default memo(withContainer(Bump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Bump from './Bump'\n\nconst ResponsiveBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveBump\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst AreaTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nAreaTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(AreaTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes, blendModePropType } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport AreaTooltip from './AreaTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.number.isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    align: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['grid', 'axes', 'labels', 'areas']), PropTypes.func])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    spacing: PropTypes.number.isRequired,\n    xPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    blendMode: blendModePropType.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    activeFillOpacity: PropTypes.number.isRequired,\n    inactiveFillOpacity: PropTypes.number.isRequired,\n    defs: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    fill: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            match: PropTypes.oneOfType([PropTypes.oneOf(['*']), PropTypes.object, PropTypes.func])\n                .isRequired,\n        })\n    ).isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    activeBorderWidth: PropTypes.number.isRequired,\n    inactiveBorderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    borderOpacity: PropTypes.number.isRequired,\n    activeBorderOpacity: PropTypes.number.isRequired,\n    inactiveBorderOpacity: PropTypes.number.isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisBottom: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const AreaBumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    align: 'middle',\n\n    layers: ['grid', 'axes', 'labels', 'areas'],\n\n    interpolation: 'smooth',\n    spacing: 0,\n    xPadding: 0.6,\n\n    colors: { scheme: 'nivo' },\n    blendMode: 'normal',\n    fillOpacity: 0.8,\n    activeFillOpacity: 1,\n    inactiveFillOpacity: 0.15,\n    defs: [],\n    fill: [],\n    borderWidth: 1,\n    activeBorderWidth: 1,\n    inactiveBorderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 0.4]] },\n    borderOpacity: 1,\n    activeBorderOpacity: 1,\n    inactiveBorderOpacity: 0,\n\n    startLabel: false,\n    startLabelPadding: 12,\n    startLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    endLabel: 'id',\n    endLabelPadding: 12,\n    endLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    enableGridX: true,\n    axisTop: {},\n    axisBottom: {},\n\n    isInteractive: true,\n    tooltip: AreaTooltip,\n}\n\nexport const AreaBumpDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport { area as d3Area, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { computeSeries } from './compute'\n\nexport const useAreaBumpSeries = ({ data, width, height, align, spacing, xPadding }) =>\n    useMemo(() => computeSeries({ data, width, height, align, spacing, xPadding }), [\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    ])\n\nexport const useAreaGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Area()\n                .x(d => d.x)\n                .y0(d => d.y0)\n                .y1(d => d.y1)\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const getFillOpacity = useSerieDerivedProp(fillOpacity)\n    const getActiveFillOpacity = useSerieDerivedProp(activeFillOpacity)\n    const getInactiveFillOpacity = useSerieDerivedProp(inactiveFillOpacity)\n\n    const getBorderWidth = useSerieDerivedProp(borderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activeBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactiveBorderWidth)\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getBorderOpacity = useSerieDerivedProp(borderOpacity)\n    const getActiveBorderOpacity = useSerieDerivedProp(activeBorderOpacity)\n    const getInactiveBorderOpacity = useSerieDerivedProp(inactiveBorderOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getFillOpacity(serie),\n            borderWidth: getBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getBorderOpacity(serie),\n        }),\n        [getFillOpacity, getBorderWidth, getBorderColor, getBorderOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getActiveFillOpacity(serie),\n            borderWidth: getActiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getActiveBorderOpacity(serie),\n        }),\n        [getActiveFillOpacity, getActiveBorderWidth, getBorderColor, getActiveBorderOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getInactiveFillOpacity(serie),\n            borderWidth: getInactiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getInactiveBorderOpacity(serie),\n        }),\n        [getInactiveFillOpacity, getInactiveBorderWidth, getBorderColor, getInactiveBorderOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (current === null) return getNormalStyle(serie)\n            if (serie.id === current) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, current])\n}\n\nexport const useAreaBump = ({\n    data,\n    width,\n    height,\n    align,\n    spacing,\n    xPadding,\n    interpolation,\n    colors,\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const { series: rawSeries, xScale, heightScale } = useAreaBumpSeries({\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    })\n\n    const areaGenerator = useAreaGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                serie.color = getColor(serie)\n                serie.style = getSerieStyle(serie)\n\n                return serie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    return {\n        series,\n        xScale,\n        heightScale,\n        areaGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        return series.map(serie => {\n            const point =\n                position === 'start' ? serie.points[0] : serie.points[serie.points.length - 1]\n\n            return {\n                id: serie.id,\n                x: point.x + signedPadding,\n                y: point.y,\n                color: getColor(serie),\n                opacity: serie.style.fillOpacity,\n                serie,\n                textAnchor,\n            }\n        })\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint, scaleLinear } from 'd3-scale'\n\nexport const computeSeries = ({ data, width, height, align, spacing, xPadding }) => {\n    const slices = new Map()\n\n    let maxSum = null\n    let maxValues = null\n\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!slices.has(datum.x)) {\n                slices.set(datum.x, {\n                    id: datum.x,\n                    total: 0,\n                    values: new Map(),\n                })\n            }\n\n            const slice = slices.get(datum.x)\n\n            const total = slice.total + datum.y\n            slice.total = total\n\n            slice.values.set(serie.id, {\n                serieId: serie.id,\n                value: datum.y,\n            })\n\n            if (total === null || total > maxSum) {\n                maxSum = total\n                maxValues = slice.values.size\n            }\n        })\n    })\n\n    const xScale = scalePoint().domain(Array.from(slices.keys())).range([0, width])\n\n    const heightScale = scaleLinear()\n        .domain([0, maxSum])\n        .range([0, height - maxValues * spacing])\n\n    slices.forEach((slice, x) => {\n        slice.x = xScale(x)\n        const sliceHeight = heightScale(slice.total) + slice.values.size * spacing\n\n        let offset = 0\n        if (align === 'middle') {\n            offset = (height - sliceHeight) / 2\n        } else if (align === 'end') {\n            offset = height - sliceHeight\n        }\n\n        Array.from(slice.values.values())\n            .sort((a, b) => b.value - a.value)\n            .forEach((value, position, all) => {\n                const previousValues = all.filter((i, pos) => pos < position)\n                const beforeValue = previousValues.reduce((t, v) => t + v.value, 0)\n\n                const sliceValue = slice.values.get(value.serieId)\n                sliceValue.position = position\n                sliceValue.height = heightScale(value.value)\n                sliceValue.beforeHeight =\n                    heightScale(beforeValue) + offset + spacing * (previousValues.length + 0.5)\n            })\n    })\n\n    const areaPointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(serie => {\n        const serieCopy = { ...serie }\n        serieCopy.points = []\n        serieCopy.areaPoints = []\n        serie.data.forEach((datum, i) => {\n            const slice = slices.get(datum.x)\n            const position = slice.values.get(serie.id)\n\n            const x = slice.x\n            const { beforeHeight, height } = position\n            const y = beforeHeight + height / 2\n            const y0 = beforeHeight\n            const y1 = beforeHeight + height\n\n            serieCopy.points.push({\n                x,\n                y,\n                height,\n                data: { ...datum },\n            })\n            if (i > 0) {\n                serieCopy.areaPoints.push({ x: x - areaPointPadding, y0, y1 })\n            }\n            serieCopy.areaPoints.push({ x, y0, y1 })\n            if (i < serie.data.length - 1) {\n                serieCopy.areaPoints.push({ x: x + areaPointPadding, y0, y1 })\n            }\n        })\n\n        return serieCopy\n    })\n\n    return {\n        xScale,\n        heightScale,\n        series,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\nimport { useSerieHandlers } from './hooks'\n\nconst Area = ({\n    serie,\n    areaGenerator,\n    blendMode,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(areaGenerator(serie.areaPoints))\n    const animatedProps = useSpring({\n        color: serie.color,\n        fillOpacity: serie.style.fillOpacity,\n        stroke: serie.style.borderColor,\n        strokeOpacity: serie.style.borderOpacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={serie.fill ? serie.fill : animatedProps.color}\n            fillOpacity={animatedProps.fillOpacity}\n            stroke={animatedProps.stroke}\n            strokeWidth={serie.style.borderWidth}\n            strokeOpacity={animatedProps.strokeOpacity}\n            style={{ mixBlendMode: blendMode }}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n\nArea.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        fill: PropTypes.string,\n        areaPoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            fillOpacity: PropTypes.number.isRequired,\n            borderWidth: PropTypes.number.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            borderOpacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    areaGenerator: PropTypes.func.isRequired,\n    blendMode: blendModePropType.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Area)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { useSeriesLabels } from './hooks'\n\nconst AreasLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.id}\n            </animated.text>\n        )\n    })\n}\n\nAreasLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(AreasLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useState, Fragment, useMemo } from 'react'\nimport { bindDefs, withContainer, useDimensions, SvgWrapper } from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { AreaBumpPropTypes, AreaBumpDefaultProps } from './props'\nimport { useAreaBump } from './hooks'\nimport Area from './Area'\nimport AreasLabels from './AreasLabels'\n\nconst AreaBump = props => {\n    const {\n        data,\n        align,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        spacing,\n        xPadding,\n\n        colors,\n        blendMode,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        defs,\n        fill,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        enableGridX,\n        axisTop,\n        axisBottom,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { series, xScale, areaGenerator } = useAreaBump({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        align,\n        spacing,\n        xPadding,\n        interpolation,\n        colors,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current: currentSerie,\n    })\n\n    const boundDefs = useMemo(() => bindDefs(defs, series, fill, { targetKey: 'fill' }), [\n        defs,\n        series,\n        fill,\n    ])\n\n    const layerById = {\n        grid: enableGridX && (\n            <Grid key=\"grid\" width={innerWidth} height={innerHeight} xScale={xScale} />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                bottom={axisBottom}\n            />\n        ),\n        labels: [],\n        areas: (\n            <Fragment key=\"areas\">\n                {series.map(serie => (\n                    <Area\n                        key={serie.id}\n                        areaGenerator={areaGenerator}\n                        serie={serie}\n                        blendMode={blendMode}\n                        isInteractive={isInteractive}\n                        setCurrentSerie={setCurrentSerie}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"start\"\n                series={series}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"end\"\n                series={series}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                outerWidth,\n                                outerHeight,\n                                series,\n                                xScale,\n                                areaGenerator,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nAreaBump.propTypes = AreaBumpPropTypes\nAreaBump.defaultProps = AreaBumpDefaultProps\n\nexport default memo(withContainer(AreaBump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport AreaBump from './AreaBump'\n\nconst ResponsiveAreaBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <AreaBump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveAreaBump\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\nimport { textPropsByEngine } from '@nivo/core'\n\nexport const centerScale = scale => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return d => scale(d) + offset\n}\n\nconst timeByType = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = value =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = (scale, spec) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    // continuous scales\n    if (scale.ticks) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n\n        if (typeof spec === 'string') {\n            // time interval\n            const matches = spec.match(timeIntervalRegexp)\n            if (matches) {\n                // UTC is used as it's more predictible\n                // however local time could be used too\n                // let's see how it fits users' requirements\n                const timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0]\n                if (matches[1] === undefined) {\n                    return scale.ticks(timeType)\n                }\n\n                return scale.ticks(timeType.every(Number(matches[1])))\n            }\n\n            throw new Error(`Invalid tickValues: ${spec}`)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n\nexport const computeCartesianTicks = ({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}) => {\n    const values = getScaleTicks(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    let translate\n    let textAlign = textProps.align.center\n    let textBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d), y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align.right\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align.left\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: value,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = (format, scale) => {\n    if (!format || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const f = timeFormat(format)\n        return d => f(new Date(d))\n    }\n\n    return d3Format(format)\n}\n\nexport const computeGridLines = ({ width, height, scale, axis, values: _values }) => {\n    const lineValues = Array.isArray(_values) ? _values : undefined\n    const lineCount = isInteger(_values) ? _values : undefined\n\n    const values = lineValues || getScaleTicks(scale, lineCount)\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n\n    let lines\n    if (axis === 'x') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: position(v),\n            x2: position(v),\n            y1: 0,\n            y2: height,\n        }))\n    } else if (axis === 'y') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: 0,\n            x2: width,\n            y1: position(v),\n            y2: position(v),\n        }))\n    }\n\n    return lines\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport { animated } from 'react-spring'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\n\nconst AxisTick = ({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}) => {\n    const theme = useTheme()\n\n    let value = _value\n    if (format !== undefined) {\n        value = format(value)\n    }\n\n    let gStyle = { opacity: animatedProps.opacity }\n    if (onClick) {\n        gStyle['cursor'] = 'pointer'\n    }\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            {...(onClick ? { onClick: e => onClick(e, value) } : {})}\n            style={gStyle}\n        >\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nAxisTick.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        .isRequired,\n    format: PropTypes.func,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    lineX: PropTypes.number.isRequired,\n    lineY: PropTypes.number.isRequired,\n    textX: PropTypes.number.isRequired,\n    textY: PropTypes.number.isRequired,\n    textBaseline: PropTypes.string.isRequired,\n    textAnchor: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    rotate: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    animatedProps: PropTypes.object.isRequired,\n}\nAxisTick.defaultProps = {\n    opacity: 1,\n    rotate: 0,\n}\n\nexport default memo(AxisTick)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, useTransition, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { axisPropTypes } from '../props'\nimport AxisTick from './AxisTick'\n\nconst defaultTickRenderer = props => <AxisTick {...props} />\n\nconst Axis = ({\n    axis,\n    scale,\n    x,\n    y,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    format,\n    renderTick,\n    legend,\n    legendPosition,\n    legendOffset,\n    onClick,\n    ariaHidden,\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transitions = useTransition(ticks, tick => tick.key, {\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transitions.map(({ item: tick, props: transitionProps, key }, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                    key,\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nAxis.propTypes = {\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    scale: PropTypes.func.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    length: PropTypes.number.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    tickValues: axisPropTypes.tickValues,\n    tickSize: PropTypes.number.isRequired,\n    tickPadding: PropTypes.number.isRequired,\n    tickRotation: PropTypes.number.isRequired,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func.isRequired,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n    legendOffset: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    ariaHidden: PropTypes.bool,\n}\nAxis.defaultProps = {\n    x: 0,\n    y: 0,\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    renderTick: defaultTickRenderer,\n    legendPosition: 'end',\n    legendOffset: 0,\n}\n\nexport default memo(Axis)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Axis from './Axis'\nimport { axisPropType } from '../props'\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nconst Axes = ({ xScale, yScale, width, height, top, right, bottom, left }) => {\n    const axes = { top, right, bottom, left }\n\n    return positions.map(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n\n        return (\n            <Axis\n                key={position}\n                {...axis}\n                axis={isXAxis ? 'x' : 'y'}\n                x={position === 'right' ? width : 0}\n                y={position === 'bottom' ? height : 0}\n                scale={isXAxis ? xScale : yScale}\n                length={isXAxis ? width : height}\n                ticksPosition={ticksPosition}\n            />\n        )\n    })\n}\n\nAxes.propTypes = {\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    top: axisPropType,\n    right: axisPropType,\n    bottom: axisPropType,\n    left: axisPropType,\n}\n\nexport default memo(Axes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nconst GridLine = ({ animatedProps }) => {\n    const theme = useTheme()\n\n    return <animated.line {...animatedProps} {...theme.grid.line} />\n}\n\nGridLine.propTypes = {\n    x1: PropTypes.number.isRequired,\n    x2: PropTypes.number.isRequired,\n    y1: PropTypes.number.isRequired,\n    y2: PropTypes.number.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n}\nGridLine.defaultProps = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n}\n\nexport default memo(GridLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport GridLine from './GridLine'\n\nconst GridLines = ({ lines }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transitions = useTransition(lines, line => line.key, {\n        initial: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        from: line => ({\n            opacity: 0,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        enter: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        update: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <g>\n            {transitions.map(({ item: line, props: animatedProps, key }) => (\n                <GridLine {...line} key={key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n}\n\nGridLines.propTypes = {\n    type: PropTypes.oneOf(['x', 'y']).isRequired,\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            x1: PropTypes.number,\n            x2: PropTypes.number,\n            y1: PropTypes.number,\n            y2: PropTypes.number,\n        })\n    ).isRequired,\n}\n\nexport default memo(GridLines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport GridLines from './GridLines'\nimport { computeGridLines } from '../compute'\n\nconst Grid = ({ width, height, xScale, yScale, xValues, yValues }) => {\n    const xLines = useMemo(() => {\n        if (!xScale) return false\n\n        return computeGridLines({\n            width,\n            height,\n            scale: xScale,\n            axis: 'x',\n            values: xValues,\n        })\n    }, [xScale, xValues])\n\n    const yLines = yScale\n        ? computeGridLines({\n              width,\n              height,\n              scale: yScale,\n              axis: 'y',\n              values: yValues,\n          })\n        : false\n\n    return (\n        <>\n            {xLines && <GridLines type=\"x\" lines={xLines} />}\n            {yLines && <GridLines type=\"y\" lines={yLines} />}\n        </>\n    )\n}\n\nGrid.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    xValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    yValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n}\n\nexport default memo(Grid)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const degreesToRadians = degrees => (degrees * Math.PI) / 180\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { degreesToRadians } from './utils'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\n\nexport const renderAxisToCanvas = (\n    ctx,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontSize}px ${theme.axis.ticks.text.fontFamily}`\n\n    if (theme.axis.domain.line.strokeWidth > 0) {\n        ctx.lineWidth = theme.axis.domain.line.strokeWidth\n        ctx.lineCap = 'square'\n        ctx.strokeStyle = theme.axis.domain.line.stroke\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    ticks.forEach(tick => {\n        if (theme.axis.ticks.line.strokeWidth > 0) {\n            ctx.lineWidth = theme.axis.ticks.line.strokeWidth\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.axis.ticks.line.stroke\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format !== undefined ? format(tick.value) : tick.value\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n        ctx.fillStyle = theme.axis.ticks.text.fill\n        ctx.fillText(value, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n        ctx.fillStyle = theme.axis.legend.text.fill\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nexport const renderAxesToCanvas = (\n    ctx,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = (ctx, { width, height, scale, axis, values }) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { BumpDefaultProps as defaults } from '@nivo/bump'\nimport {\n    themeProperty,\n    motionProperties,\n    axesProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:   string\n                data: Array<{\n                    x: number | string\n                    y: number | string\n                }>\n            }>\n            \\`\\`\\`\n            This component assumes that every serie contains all\n            x values sorted the same way they should appear on the chart.\n        `,\n        required: true,\n        type: 'object[]',\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveChord/>\\`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveChord/>\\`.\n            Also note that width does not include labels,\n            so you should add enough margin to display them.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        group: 'Base',\n        help: 'Chart margin.',\n        type: 'object',\n        controlType: 'margin',\n    },\n    {\n        key: 'interpolation',\n        group: 'Base',\n        type: 'string',\n        help: `Line interpolation.`,\n        required: false,\n        defaultValue: defaults.interpolation,\n        controlType: 'radio',\n        controlOptions: {\n            choices: [\n                { label: 'smooth', value: 'smooth' },\n                { label: 'linear', value: 'linear' },\n            ],\n        },\n    },\n    {\n        key: 'xPadding',\n        group: 'Base',\n        type: 'number',\n        help: 'X padding.',\n        defaultValue: defaults.xPadding,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'xOuterPadding',\n        group: 'Base',\n        type: 'number',\n        help: 'X outer padding.',\n        defaultValue: defaults.xOuterPadding,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'yOuterPadding',\n        group: 'Base',\n        type: 'number',\n        help: 'Y outer padding.',\n        defaultValue: defaults.yOuterPadding,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'lineWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Line width.',\n        defaultValue: defaults.lineWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'activeLineWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Line width for active series.',\n        defaultValue: defaults.activeLineWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'inactiveLineWidth',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Line width for inactive series.',\n        defaultValue: defaults.inactiveLineWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'opacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Opacity.',\n        defaultValue: defaults.opacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'activeOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Opacity for active series.',\n        defaultValue: defaults.activeOpacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'inactiveOpacity',\n        group: 'Style',\n        type: 'number | (serie: Serie) => number',\n        help: 'Opacity for inactive series.',\n        defaultValue: defaults.inactiveOpacity,\n        controlType: 'opacity',\n    },\n    {\n        key: 'startLabel',\n        group: 'Labels',\n        type: 'false | string | (serie: Serie) => string',\n        defaultValue: defaults.startLabel,\n    },\n    {\n        key: 'startLabelPadding',\n        group: 'Labels',\n        type: 'number',\n        defaultValue: defaults.startLabelPadding,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'startLabelTextColor',\n        help: 'Method to compute start label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.startLabelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'endLabel',\n        group: 'Labels',\n        type: 'false | string | (serie: Serie) => string',\n        defaultValue: defaults.endLabel,\n    },\n    {\n        key: 'endLabelPadding',\n        group: 'Labels',\n        type: 'number',\n        defaultValue: defaults.endLabelPadding,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 30,\n        },\n    },\n    {\n        key: 'endLabelTextColor',\n        help: 'Method to compute end label text color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.endLabelTextColor,\n        controlType: 'inheritedColor',\n        group: 'Labels',\n    },\n    {\n        key: 'pointSize',\n        group: 'Points',\n        help: 'Point size.',\n        type: 'number | Function',\n        defaultValue: defaults.pointSize,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 24,\n        },\n    },\n    {\n        key: 'activePointSize',\n        group: 'Points',\n        help: 'Point size for active series.',\n        type: 'number | Function',\n        defaultValue: defaults.activePointSize,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 24,\n        },\n    },\n    {\n        key: 'inactivePointSize',\n        group: 'Points',\n        help: 'Point size for inactive series.',\n        type: 'number | Function',\n        defaultValue: defaults.inactivePointSize,\n        controlType: 'range',\n        controlOptions: {\n            min: 0,\n            max: 24,\n        },\n    },\n    {\n        key: 'pointColor',\n        group: 'Points',\n        type: 'string | object | Function',\n        help: 'Method to compute point fill color.',\n        defaultValue: defaults.pointColor,\n        controlType: 'inheritedColor',\n        controlOptions: {\n            inheritableProperties: ['serie.color'],\n        },\n    },\n    {\n        key: 'pointBorderWidth',\n        group: 'Points',\n        help: 'Point border width.',\n        type: 'number | Function',\n        defaultValue: defaults.pointBorderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'activePointBorderWidth',\n        group: 'Points',\n        help: 'Point border width for active series.',\n        type: 'number | Function',\n        defaultValue: defaults.activePointBorderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'inactivePointBorderWidth',\n        group: 'Points',\n        help: 'Point border width for inactive series.',\n        type: 'number | Function',\n        defaultValue: defaults.inactivePointBorderWidth,\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'pointBorderColor',\n        group: 'Points',\n        type: 'string | object | Function',\n        help: 'Method to compute point border color.',\n        defaultValue: defaults.pointBorderColor,\n        controlType: 'inheritedColor',\n        controlOptions: {\n            inheritableProperties: ['color', 'serie.color'],\n        },\n    },\n    {\n        key: 'enableGridX',\n        group: 'Grid & Axes',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n    },\n    {\n        key: 'enableGridY',\n        group: 'Grid & Axes',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridY,\n        controlType: 'switch',\n    },\n    ...axesProperties(),\n    {\n        key: 'isInteractive',\n        group: 'Interactivity',\n        type: 'boolean',\n        help: 'Enable/disable interactivity.',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n    },\n    {\n        key: 'onMouseEnter',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onMouseEnter handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onMouseMove handler.',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onMouseLeave handler.',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        type: '(serie, event) => void',\n        help: 'onClick handler.',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component.',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML\n            element and will receive the series's data.\n        `,\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper, mapAxis } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\nimport { ResponsiveBump, BumpDefaultProps } from '@nivo/bump'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/bump/meta.yml'\nimport { groups } from '../../data/components/bump/props'\nimport mapper from '../../data/components/bump/mapper'\n\nconst generateData = () => {\n    const years = range(2000, 2005)\n    const ranks = range(1, 13)\n\n    const series = ranks.map(rank => {\n        return {\n            id: `Serie ${rank}`,\n            data: [],\n        }\n    })\n\n    years.forEach(year => {\n        shuffle(ranks).forEach((rank, i) => {\n            series[i].data.push({\n                x: year,\n                y: rank,\n            })\n        })\n    })\n\n    return series\n}\n\nconst initialProperties = {\n    margin: {\n        top: 40,\n        right: 100,\n        bottom: 40,\n        left: 60,\n    },\n\n    interpolation: BumpDefaultProps.interpolation,\n    xPadding: BumpDefaultProps.xPadding,\n    xOuterPadding: BumpDefaultProps.xOuterPadding,\n    yOuterPadding: BumpDefaultProps.yOuterPadding,\n\n    colors: { scheme: 'spectral' },\n    lineWidth: 3,\n    activeLineWidth: 6,\n    inactiveLineWidth: 3,\n    opacity: BumpDefaultProps.opacity,\n    activeOpacity: BumpDefaultProps.activeOpacity,\n    inactiveOpacity: 0.15,\n\n    startLabel: false,\n    startLabelPadding: BumpDefaultProps.startLabelPadding,\n    startLabelTextColor: BumpDefaultProps.startLabelTextColor,\n    endLabel: 'id',\n    endLabelPadding: BumpDefaultProps.endLabelPadding,\n    endLabelTextColor: BumpDefaultProps.endLabelTextColor,\n\n    pointSize: 10,\n    activePointSize: 16,\n    inactivePointSize: 0,\n    pointColor: { theme: 'background' },\n    pointBorderWidth: 3,\n    activePointBorderWidth: 3,\n    inactivePointBorderWidth: 0,\n    pointBorderColor: { from: 'serie.color' },\n\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: -36,\n    },\n    axisRight: {\n        enable: false,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        format: v => `#${v}`,\n        legend: 'ranking',\n        legendPosition: 'middle',\n        legendOffset: 40,\n    },\n    axisBottom: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: 32,\n    },\n    axisLeft: {\n        enable: true,\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        format: v => `#${v}`,\n        legend: 'ranking',\n        legendPosition: 'middle',\n        legendOffset: -40,\n    },\n\n    isInteractive: true,\n\n    animate: BumpDefaultProps.animate,\n    motionConfig: BumpDefaultProps.motionConfig,\n}\n\nconst Bump = () => {\n    return (\n        <ComponentTemplate\n            name=\"Bump\"\n            meta={meta.Bump}\n            icon=\"chord\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            defaultProperties={BumpDefaultProps}\n            initialProperties={initialProperties}\n            propertiesMapper={mapper}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveBump\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={serie =>\n                            logAction({\n                                type: 'click',\n                                label: `[serie] ${serie.id}`,\n                                color: serie.color,\n                                data: serie,\n                            })\n                        }\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Bump\n"],"sourceRoot":""}