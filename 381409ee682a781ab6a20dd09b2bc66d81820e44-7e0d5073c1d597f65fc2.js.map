{"version":3,"file":"381409ee682a781ab6a20dd09b2bc66d81820e44-7e0d5073c1d597f65fc2.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/./src/data/components/sankey/mapper.ts","webpack://nivo-website/./src/data/components/sankey/props.ts","webpack://nivo-website/../src/svg/symbols/SymbolTriangle.tsx","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/svg/LegendSvgItem.tsx","webpack://nivo-website/../src/svg/symbols/SymbolCircle.tsx","webpack://nivo-website/../src/svg/symbols/SymbolDiamond.tsx","webpack://nivo-website/../src/svg/symbols/SymbolSquare.tsx","webpack://nivo-website/../src/svg/LegendSvg.tsx","webpack://nivo-website/../src/svg/BoxLegendSvg.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../node_modules/lodash/cloneDeep.js"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import { settingsMapper, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper({\n    valueFormat: mapFormat,\n})\n","import { svgDefaultProps, sankeyAlignmentPropKeys } from '@nivo/sankey'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    ordinalColors,\n    blendMode,\n    isInteractive,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg', 'api']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        type: '{ nodes: object[], links: object[] }',\n        required: true,\n        help: 'Chart data defining nodes and links.',\n        flavors: allFlavors,\n        description: `\n            Chart data, which must conform to this structure:\n\n            \\`\\`\\`\n            {\n                nodes: {\n                    id: string\n                }[],\n                links: {\n                    source: string, // ref to node id\n                    target: string, // ref to node id\n                    value:  number\n                }[]\n            }\n            \\`\\`\\`\n        `,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        type: 'string | (value: number) => string',\n        required: false,\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        flavors: allFlavors,\n        control: { type: 'valueFormat' },\n    },\n    {\n        key: 'layout',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: `Control sankey layout direction.`,\n        defaultValue: svgDefaultProps.layout,\n        flavors: allFlavors,\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'align',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: 'Node alignment method.',\n        description: `\n            Defines node alignment method.\n            Please have a look at the\n            [official d3 documentation](https://github.com/d3/d3-sankey#sankey_nodeAlign)\n            for further information.\n        `,\n        defaultValue: svgDefaultProps.align,\n        flavors: allFlavors,\n        control: {\n            type: 'choices',\n            choices: sankeyAlignmentPropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'sort',\n        group: 'Base',\n        type: 'string | Function',\n        required: false,\n        help: 'Node sorting method.',\n        description: `\n            Defines node sorting method. Must be one of:\n\n            - **'auto'** order of nodes within each\n              column is determined automatically by the layout.\n            - **'input'** order is fixed by the input.\n            - **'ascending'** node with lower values on top.\n            - **'descending'** node with higher values on top.\n            - \\`(nodeA, nodeB) => number\\` user defined function.\n\n            Please have a look at the\n            [official d3 documentation](https://github.com/d3/d3-sankey#sankey_nodeSort)\n            for further information.\n        `,\n        defaultValue: svgDefaultProps.sort,\n        flavors: allFlavors,\n        control: {\n            type: 'choices',\n            choices: ['auto', 'input', 'ascending', 'descending'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    ...chartDimensions(allFlavors),\n    themeProperty(allFlavors),\n    ordinalColors({\n        flavors: allFlavors,\n        defaultValue: svgDefaultProps.colors,\n    }),\n    {\n        key: 'nodeThickness',\n        group: 'Nodes',\n        type: 'number',\n        required: false,\n        help: 'Node thickness.',\n        defaultValue: svgDefaultProps.nodeThickness,\n        flavors: allFlavors,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 2,\n            max: 100,\n        },\n    },\n    {\n        key: 'nodeOpacity',\n        group: 'Nodes',\n        help: 'Node opacity (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.nodeOpacity,\n        type: 'number',\n        flavors: allFlavors,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'nodeHoverOpacity',\n        group: 'Nodes',\n        flavors: ['svg'],\n        help: 'Node opacity on hover (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.nodeHoverOpacity,\n        type: 'number',\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'nodeHoverOthersOpacity',\n        flavors: ['svg'],\n        help: 'Other nodes opacity on hover (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.nodeHoverOthersOpacity,\n        type: 'number',\n        control: { type: 'opacity' },\n        group: 'Nodes',\n    },\n    {\n        key: 'nodeSpacing',\n        group: 'Nodes',\n        help: 'Spacing between nodes at an identical level.',\n        required: false,\n        defaultValue: svgDefaultProps.nodeSpacing,\n        type: 'number',\n        flavors: allFlavors,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'nodeInnerPadding',\n        group: 'Nodes',\n        help: 'Node inner padding, distance from link, substracted from nodeThickness.',\n        required: false,\n        defaultValue: svgDefaultProps.nodeInnerPadding,\n        type: 'number',\n        flavors: allFlavors,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 20,\n        },\n    },\n    {\n        key: 'nodeBorderWidth',\n        group: 'Nodes',\n        help: 'Node border width.',\n        required: false,\n        defaultValue: svgDefaultProps.nodeBorderWidth,\n        type: 'number',\n        flavors: allFlavors,\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'nodeBorderColor',\n        group: 'Nodes',\n        description: `\n            how to compute node border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        help: 'Method to compute node border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: svgDefaultProps.nodeBorderColor,\n        flavors: allFlavors,\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'nodeBorderRadius',\n        group: 'Nodes',\n        help: 'Node border radius.',\n        type: 'number',\n        required: false,\n        defaultValue: svgDefaultProps.nodeBorderRadius,\n        flavors: allFlavors,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 12,\n        },\n    },\n    {\n        key: 'linkOpacity',\n        group: 'Links',\n        help: 'Link opacity (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.linkOpacity,\n        type: 'number',\n        flavors: allFlavors,\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'linkHoverOpacity',\n        group: 'Links',\n        flavors: ['svg'],\n        help: 'Link opacity on hover(0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.linkHoverOpacity,\n        type: 'number',\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'linkHoverOthersOpacity',\n        group: 'Links',\n        flavors: ['svg'],\n        help: 'Other links opacity on hover (0~1).',\n        required: false,\n        defaultValue: svgDefaultProps.linkHoverOthersOpacity,\n        type: 'number',\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'linkContract',\n        group: 'Links',\n        help: 'Contract link width.',\n        required: false,\n        defaultValue: svgDefaultProps.linkContract,\n        type: 'number',\n        flavors: allFlavors,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    blendMode({\n        key: 'linkBlendMode',\n        target: 'links',\n        flavors: ['svg'],\n        group: 'Links',\n        defaultValue: svgDefaultProps.linkBlendMode,\n    }),\n    {\n        key: 'enableLinkGradient',\n        group: 'Links',\n        help: 'Enable/disable gradient from source/target nodes instead of plain color.',\n        type: 'boolean',\n        required: false,\n        defaultValue: svgDefaultProps.enableLinkGradient,\n        flavors: allFlavors,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'enableLabels',\n        group: 'Labels',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        required: false,\n        defaultValue: svgDefaultProps.enableLabels,\n        flavors: allFlavors,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'labelPosition',\n        group: 'Labels',\n        help: 'Label position.',\n        type: 'string',\n        required: false,\n        defaultValue: svgDefaultProps.labelPosition,\n        flavors: allFlavors,\n        control: {\n            type: 'radio',\n            choices: ['inside', 'outside'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'labelPadding',\n        group: 'Labels',\n        help: 'Label padding from node.',\n        required: false,\n        defaultValue: svgDefaultProps.labelPadding,\n        type: 'number',\n        flavors: allFlavors,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 60,\n        },\n    },\n    {\n        key: 'labelTextColor',\n        group: 'Labels',\n        help: 'Method to compute label text color.',\n        description: `\n            how to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: svgDefaultProps.labelTextColor,\n        flavors: allFlavors,\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'labelOrientation',\n        group: 'Labels',\n        help: 'Label orientation.',\n        type: 'string',\n        required: false,\n        defaultValue: svgDefaultProps.labelOrientation,\n        flavors: allFlavors,\n        control: {\n            type: 'radio',\n            choices: ['horizontal', 'vertical'].map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    isInteractive({\n        flavors: ['svg'],\n        defaultValue: svgDefaultProps.isInteractive,\n    }),\n    {\n        key: 'nodeTooltip',\n        flavors: ['svg'],\n        help: `Tooltip custom component for nodes.`,\n        type: 'FunctionComponent<{ node: SankeyNodeDatum }>',\n        required: false,\n        group: 'Interactivity',\n        description: `\n            Allows complete node tooltip customisation, it must return\n            a valid HTML element and will receive the node as a property.\n                        \n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'linkTooltip',\n        flavors: ['svg'],\n        help: `Tooltip custom component for links.`,\n        type: 'FunctionComponent<{ link: SankeyLinkDatum }>',\n        required: false,\n        group: 'Interactivity',\n        description: `\n            Allows complete link tooltip customisation, it must return\n            a valid HTML element and will receive the link as a property.\n                        \n            You can also customize the style of the tooltip\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onClick handler, it receives target node or link data and mouse event.',\n        type: '(target: SankeyNodeDatum | SankeyLinkDatum, event) => void',\n        required: false,\n    },\n    ...motionProperties(['svg'], svgDefaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { BoxLegendSvgProps, LegendAnchor, LegendItemDirection } from './types'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","import { computeDimensions, computePositionFromAnchor, computeItemLayout } from './compute'\nimport { LegendCanvasProps } from './types'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n","import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n        if (reverse === true) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse])\n}\n","import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","line","data","i","d","buffer","n","length","defined0","lineStart","lineEnd","point","arguments","p","durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","floor","ceil","round","d0","d1","offset","step","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","settingsMapper","valueFormat","mapFormat","allFlavors","props","key","group","type","required","help","flavors","description","control","defaultValue","svgDefaultProps","choices","label","value","sankeyAlignmentPropKeys","map","chartDimensions","themeProperty","ordinalColors","unit","min","max","blendMode","target","isInteractive","motionProperties","groups","groupProperties","zeroPadding","top","right","bottom","left","computeDimensions","item","direction","itemsSpacing","_padding","padding","itemCount","itemWidth","itemHeight","Array","isArray","horizontalPadding","verticalPadding","width","height","spacing","computePositionFromAnchor","anchor","translateX","translateY","containerWidth","containerHeight","computeItemLayout","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","justify","symbolSize","symbolSpacing","symbolByShape","circle","size","fill","opacity","borderWidth","borderColor","_jsx","cx","cy","strokeWidth","stroke","style","pointerEvents","diamond","transform","square","triangle","LegendSvgItem","textColor","background","symbolShape","symbolBorderWidth","symbolBorderColor","onClick","onMouseEnter","onMouseLeave","toggleSerie","effects","useState","setStyle","theme","useTheme","handleMouseEnter","useCallback","event","on","reduce","acc","effect","handleMouseLeave","some","handler","SymbolShape","_jsxs","itemOpacity","itemBackground","cursor","e","id","React","color","hidden","legends","symbol","textAnchor","text","itemTextColor","dominantBaseline","userSelect","LegendSvg","itemDirection","xStep","yStep","BoxLegendSvg","textAlignMapping","middle","renderLegendToCanvas","ctx","save","translate","font","fontSize","fontFamily","forEach","itemX","itemY","fillStyle","fillRect","textAlign","textBaseline","fillText","String","restore","useQuantizeColorScaleLegendData","scale","overriddenDomain","domain","reverse","v","separator","useMemo","items","domainValue","index","invertExtent","extent","LegendPropShape","PropTypes","isRequired","baseClone","module","exports","CLONE_DEEP_FLAG"],"sourceRoot":""}