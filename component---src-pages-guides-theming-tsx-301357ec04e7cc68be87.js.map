{"version":3,"file":"component---src-pages-guides-theming-tsx-301357ec04e7cc68be87.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/./src/components/components/ComponentHeader.tsx","webpack://nivo-website/./src/components/components/ComponentPage.tsx","webpack://nivo-website/./src/components/components/ComponentSettings.tsx","webpack://nivo-website/./src/components/guides/theming/defaults.ts","webpack://nivo-website/./src/components/guides/theming/props.ts","webpack://nivo-website/./src/components/guides/theming/ThemedBar.tsx","webpack://nivo-website/./src/components/guides/theming/ThemedHeatMap.tsx","webpack://nivo-website/./src/components/guides/theming/ThemedLine.tsx","webpack://nivo-website/./src/components/guides/theming/ThemedRadialBar.tsx","webpack://nivo-website/./src/pages/guides/theming.tsx","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/xySeries.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseForOwn.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import React, { memo } from 'react'\nimport styled from 'styled-components'\nimport media from '../../theming/mediaQueries'\n\ninterface ComponentHeaderProps {\n    chartClass: string\n    tags?: string[]\n}\n\nexport const ComponentHeader = memo(({ chartClass, tags = [] }: ComponentHeaderProps) => {\n    return (\n        <Container>\n            <Title>{chartClass}</Title>\n            <Tags>\n                {tags.map(tag => (\n                    <Tag key={tag}>{tag}</Tag>\n                ))}\n            </Tags>\n        </Container>\n    )\n})\n\nconst Container = styled.div`\n    flex-direction: column;\n    color: #fff;\n    margin-bottom: 10px;\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-end;\n    position: relative;\n    height: 130px;\n    padding: 0 30px;\n\n    ${media.desktopLarge`\n        & {\n            padding: 0 40px;\n        }\n    `}\n\n    ${media.desktop`\n        & {\n            padding: 0 30px;\n        }\n    `}\n\n    ${media.tablet`\n        & {\n            padding: 0 20px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            padding: 0 20px;\n        }\n    `}\n`\n\nconst Title = styled.h1`\n    margin: 0 0 10px;\n    padding: 0;\n`\n\nconst Tags = styled.div``\n\nconst Tag = styled.span`\n    display: inline-block;\n    background: ${({ theme }) => theme.colors.background};\n    color: ${({ theme }) => theme.colors.accent};\n    font-size: 0.8rem;\n    font-weight: 500;\n    padding: 3px 11px;\n    border-radius: 2px;\n    margin-right: 7px;\n    margin-bottom: 7px;\n`\n","import styled from 'styled-components'\nimport media from '../../theming/mediaQueries'\n\nexport const ComponentPage = styled.div`\n    margin-right: 55%;\n\n    &:after {\n        content: ' ';\n        position: fixed;\n        top: ${({ theme }) => theme.dimensions.headerHeight}px;\n        box-shadow: ${({ theme }) => theme.topCardShadow};\n        right: 0;\n        bottom: 0;\n        --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n        width: calc(var(--innerWidth) * 0.55);\n        background: rgba(0, 0, 0, 0);\n    }\n\n    ${media.tablet`\n        & {\n            margin-right: 55%;\n            &:after {\n                width: 55%;\n            }\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            margin: 0;\n            &:after {\n                display: none;\n            }\n        }\n    `}\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport media from '../../theming/mediaQueries'\nimport { Flavor, ChartPropertiesGroup } from '../../types'\nimport { ControlsGroup } from '../controls/ControlsGroup'\n\ninterface ComponentSettingsProps<Settings = any> {\n    flavors: Flavor[]\n    currentFlavor: Flavor\n    settings: Settings\n    onChange: (settings: Settings) => void\n    groups: ChartPropertiesGroup[]\n}\n\nexport function ComponentSettings<Settings = any>({\n    flavors,\n    currentFlavor,\n    settings,\n    onChange,\n    groups,\n}: ComponentSettingsProps<Settings>) {\n    return (\n        <Container>\n            {groups.map(group => {\n                return (\n                    <Group key={group.name}>\n                        <Title>{group.name}</Title>\n                        <ControlsGroup\n                            name={group.name}\n                            flavors={flavors}\n                            currentFlavor={currentFlavor}\n                            controls={group.properties}\n                            settings={settings}\n                            onChange={onChange}\n                        />\n                    </Group>\n                )\n            })}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    background: ${({ theme }) => theme.colors.cardBackground};\n    color: ${({ theme }) => theme.colors.text};\n`\n\nconst Group = styled.div`\n    &:first-child {\n        border-top-width: 0;\n    }\n`\n\nconst Title = styled.div`\n    padding: 16px 30px;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 13px;\n    line-height: 1em;\n    color: white;\n    background: ${({ theme }) => theme.colors.accent};\n    background-image: linear-gradient(\n        -90deg,\n        ${({ theme }) => theme.colors.gradientColor0},\n        ${({ theme }) => theme.colors.gradientColor1}\n    );\n    background-size: 200% 100%;\n    background-repeat: no-repeat;\n    background-position: top left;\n\n    ${media.tablet`\n        & {\n            padding: 16px 20px 16px 30px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            padding: 16px 20px 16px 30px;\n        }\n    `}\n`\n","import {\n    // @ts-ignore\n    defaultTheme as baseDefaultTheme,\n    // @ts-ignore\n    extendDefaultTheme,\n    CompleteTheme,\n} from '@nivo/core'\n\nconst extendedTheme: CompleteTheme = extendDefaultTheme(baseDefaultTheme)\n\nconst axisDefaults: CompleteTheme['axis'] = {\n    domain: {\n        line: {\n            stroke: '#777777', // defaultTheme.axis.domain.line.stroke,\n            strokeWidth: extendedTheme.axis.domain.line.strokeWidth,\n        },\n    },\n    legend: {\n        text: {\n            fontSize: extendedTheme.axis.legend.text.fontSize,\n            fill: extendedTheme.axis.legend.text.fill,\n        },\n    },\n    ticks: {\n        line: {\n            stroke: extendedTheme.axis.ticks.line.stroke,\n            strokeWidth: extendedTheme.axis.ticks.line.strokeWidth,\n        },\n        text: {\n            fontSize: extendedTheme.axis.ticks.text.fontSize,\n            fill: extendedTheme.axis.ticks.text.fill,\n        },\n    },\n}\n\nconst gridDefaults: CompleteTheme['grid'] = {\n    line: {\n        stroke: extendedTheme.grid.line.stroke,\n        strokeWidth: extendedTheme.grid.line.strokeWidth,\n    },\n}\n\nconst legendsDefaults: CompleteTheme['legends'] = {\n    title: {\n        text: {\n            fontSize: extendedTheme.legends.title.text.fontSize,\n            fill: extendedTheme.legends.title.text.fill,\n        },\n    },\n    text: {\n        fontSize: extendedTheme.legends.text.fontSize,\n        fill: extendedTheme.legends.text.fill,\n    },\n    ticks: {\n        line: {},\n        text: {\n            fontSize: extendedTheme.legends.ticks.text.fontSize,\n            fill: extendedTheme.legends.ticks.text.fill,\n        },\n    },\n}\n\nconst annotationsDefaults: CompleteTheme['annotations'] = {\n    text: {\n        fontSize: extendedTheme.annotations.text.fontSize,\n        fill: extendedTheme.annotations.text.fill,\n        outlineWidth: extendedTheme.annotations.text.outlineWidth,\n        outlineColor: extendedTheme.annotations.text.outlineColor,\n        outlineOpacity: extendedTheme.annotations.text.outlineOpacity,\n    },\n    link: {\n        stroke: extendedTheme.annotations.link.stroke,\n        strokeWidth: extendedTheme.annotations.link.strokeWidth,\n        outlineWidth: extendedTheme.annotations.link.outlineWidth,\n        outlineColor: extendedTheme.annotations.link.outlineColor,\n        outlineOpacity: extendedTheme.annotations.link.outlineOpacity,\n    },\n    outline: {\n        stroke: extendedTheme.annotations.outline.stroke,\n        strokeWidth: extendedTheme.annotations.outline.strokeWidth,\n        outlineWidth: extendedTheme.annotations.outline.outlineWidth,\n        outlineColor: extendedTheme.annotations.outline.outlineColor,\n        outlineOpacity: extendedTheme.annotations.outline.outlineOpacity,\n    },\n    symbol: {\n        fill: extendedTheme.annotations.symbol.fill,\n        outlineWidth: extendedTheme.annotations.symbol.outlineWidth,\n        outlineColor: extendedTheme.annotations.symbol.outlineColor,\n        outlineOpacity: extendedTheme.annotations.symbol.outlineOpacity,\n    },\n}\n\nconst tooltipDefaults: CompleteTheme['tooltip'] = {\n    container: {\n        background: '#ffffff',\n        color: extendedTheme.textColor,\n        fontSize: 12,\n    },\n    basic: {},\n    chip: {},\n    table: {},\n    tableCell: {},\n    tableCellValue: {},\n}\n\nexport const defaultTheme: CompleteTheme = {\n    background: '#ffffff', // defaultTheme.background,\n    textColor: extendedTheme.textColor,\n    fontSize: extendedTheme.fontSize,\n    axis: axisDefaults,\n    grid: gridDefaults,\n    legends: legendsDefaults,\n    annotations: annotationsDefaults,\n    tooltip: tooltipDefaults,\n}\n","import { ChartPropertiesGroup, ChartProperty } from '../../../types'\n\n// expands all object properties by default if true,\n// this can be useful for debugging.\nconst OPEN_ALL_BY_DEFAULTS = false\n\nconst fontSizeProp: ChartProperty = {\n    key: 'fontSize',\n    group: 'Theme',\n    type: 'number',\n    help: 'If unspecified, use the root `fontSize` value',\n    control: {\n        type: 'range',\n        min: 6,\n        max: 36,\n    },\n}\n\nconst textColorProp: ChartProperty = {\n    key: 'fill',\n    group: 'Theme',\n    type: 'string',\n    help: 'If unspecified, use the root `textColor` value',\n    control: { type: 'colorPicker' },\n}\n\nconst textProp: ChartProperty = {\n    key: 'text',\n    group: 'Theme',\n    type: 'object',\n    control: {\n        type: 'object',\n        isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n        props: [fontSizeProp, textColorProp],\n    },\n}\n\nconst baseProps: ChartPropertiesGroup = {\n    name: 'Base',\n    properties: [\n        {\n            group: 'Theme',\n            key: 'background',\n            name: 'background',\n            type: 'string',\n            help: 'main background color.',\n            control: { type: 'colorPicker' },\n        },\n        {\n            group: 'Theme',\n            key: 'textColor',\n            name: 'textColor',\n            type: 'string',\n            help: 'Main text color, used as a default value when unspecified in nested properties.',\n        },\n        {\n            group: 'Theme',\n            key: 'fontSize',\n            name: 'fontSize',\n            type: 'number',\n            help: 'Main font size, used as a default value when unspecified in nested properties.',\n        },\n    ],\n}\n\nconst axesAndGridProps: ChartPropertiesGroup = {\n    name: 'Axes & Grid',\n    properties: [\n        {\n            group: 'Theme',\n            key: 'axis',\n            name: 'axis',\n            type: 'object',\n            control: {\n                type: 'object',\n                isOpenedByDefault: true,\n                props: [\n                    {\n                        key: 'ticks',\n                        type: 'object',\n                        control: {\n                            type: 'object',\n                            isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                            props: [\n                                {\n                                    key: 'line',\n                                    type: 'object',\n                                    control: {\n                                        type: 'object',\n                                        isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                                        props: [\n                                            {\n                                                key: 'strokeWidth',\n                                                type: 'number',\n                                                control: { type: 'lineWidth' },\n                                            },\n                                            {\n                                                key: 'stroke',\n                                                type: 'string',\n                                                control: { type: 'colorPicker' },\n                                            },\n                                        ],\n                                    },\n                                },\n                                textProp,\n                            ],\n                        },\n                    },\n                    {\n                        key: 'domain',\n                        type: 'object',\n                        control: {\n                            type: 'object',\n                            isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                            props: [\n                                {\n                                    key: 'line',\n                                    type: 'object',\n                                    control: {\n                                        type: 'object',\n                                        isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                                        props: [\n                                            {\n                                                key: 'strokeWidth',\n                                                type: 'number',\n                                                control: { type: 'lineWidth' },\n                                            },\n                                            {\n                                                key: 'stroke',\n                                                type: 'string',\n                                                control: { type: 'colorPicker' },\n                                            },\n                                        ],\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                    {\n                        key: 'legend',\n                        type: 'object',\n                        control: {\n                            type: 'object',\n                            isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                            props: [textProp],\n                        },\n                    },\n                ],\n            },\n        },\n        {\n            group: 'Theme',\n            key: 'grid',\n            name: 'grid',\n            type: 'object',\n            control: {\n                type: 'object',\n                isOpenedByDefault: true,\n                props: [\n                    {\n                        key: 'line',\n                        type: 'object',\n                        control: {\n                            type: 'object',\n                            isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                            props: [\n                                {\n                                    key: 'stroke',\n                                    type: 'string',\n                                    control: { type: 'colorPicker' },\n                                },\n                                {\n                                    key: 'strokeWidth',\n                                    type: 'number',\n                                    control: { type: 'lineWidth' },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        },\n    ],\n}\n\nconst legendsProps: ChartPropertiesGroup = {\n    name: 'Legends',\n    properties: [\n        {\n            group: 'Theme',\n            key: 'legends',\n            name: 'legends',\n            type: 'object',\n            control: {\n                type: 'object',\n                isOpenedByDefault: true,\n                props: [\n                    {\n                        key: 'title',\n                        type: 'object',\n                        control: {\n                            type: 'object',\n                            isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                            props: [textProp],\n                        },\n                    },\n                    textProp,\n                    {\n                        key: 'ticks',\n                        type: 'object',\n                        control: {\n                            type: 'object',\n                            isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                            props: [],\n                        },\n                    },\n                ],\n            },\n        },\n    ],\n}\n\nconst annotationsProps: ChartPropertiesGroup = {\n    name: 'Annotations',\n    properties: [\n        {\n            group: 'Theme',\n            key: 'annotations',\n            name: 'annotations',\n            type: 'object',\n            control: {\n                type: 'object',\n                isOpenedByDefault: true,\n                props: [\n                    {\n                        key: 'text',\n                        type: 'object',\n                        control: {\n                            type: 'object',\n                            isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                            props: [\n                                fontSizeProp,\n                                {\n                                    key: 'outlineWidth',\n                                    type: 'number',\n                                    control: { type: 'lineWidth' },\n                                },\n                                {\n                                    key: 'outlineColor',\n                                    type: 'string',\n                                    control: { type: 'colorPicker' },\n                                },\n                                {\n                                    key: 'outlineOpacity',\n                                    type: 'number',\n                                    control: { type: 'opacity' },\n                                },\n                            ],\n                        },\n                    },\n                    {\n                        key: 'link',\n                        type: 'object',\n                        control: {\n                            type: 'object',\n                            isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                            props: [\n                                {\n                                    key: 'stroke',\n                                    type: 'string',\n                                    control: { type: 'colorPicker' },\n                                },\n                                {\n                                    key: 'strokeWidth',\n                                    type: 'number',\n                                    control: { type: 'lineWidth' },\n                                },\n                                {\n                                    key: 'outlineWidth',\n                                    type: 'number',\n                                    control: { type: 'lineWidth' },\n                                },\n                                {\n                                    key: 'outlineColor',\n                                    type: 'string',\n                                    control: { type: 'colorPicker' },\n                                },\n                                {\n                                    key: 'outlineOpacity',\n                                    type: 'number',\n                                    control: { type: 'opacity' },\n                                },\n                            ],\n                        },\n                    },\n                    {\n                        key: 'outline',\n                        type: 'object',\n                        control: {\n                            type: 'object',\n                            isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                            props: [\n                                {\n                                    key: 'stroke',\n                                    type: 'string',\n                                    control: { type: 'colorPicker' },\n                                },\n                                {\n                                    key: 'strokeWidth',\n                                    type: 'number',\n                                    control: { type: 'lineWidth' },\n                                },\n                                {\n                                    key: 'outlineWidth',\n                                    type: 'number',\n                                    control: { type: 'lineWidth' },\n                                },\n                                {\n                                    key: 'outlineColor',\n                                    type: 'string',\n                                    control: { type: 'colorPicker' },\n                                },\n                                {\n                                    key: 'outlineOpacity',\n                                    type: 'number',\n                                    control: { type: 'opacity' },\n                                },\n                            ],\n                        },\n                    },\n                    {\n                        key: 'symbol',\n                        type: 'object',\n                        control: {\n                            type: 'object',\n                            isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                            props: [\n                                {\n                                    key: 'fill',\n                                    type: 'string',\n                                    control: { type: 'colorPicker' },\n                                },\n                                {\n                                    key: 'outlineWidth',\n                                    type: 'number',\n                                    control: { type: 'lineWidth' },\n                                },\n                                {\n                                    key: 'outlineColor',\n                                    type: 'string',\n                                    control: { type: 'colorPicker' },\n                                },\n                                {\n                                    key: 'outlineOpacity',\n                                    type: 'number',\n                                    control: { type: 'opacity' },\n                                },\n                            ],\n                        },\n                    },\n                ],\n            },\n        },\n    ],\n}\n\nconst tooltipProps: ChartPropertiesGroup = {\n    name: 'Tooltip',\n    properties: [\n        {\n            group: 'Theme',\n            key: 'tooltip',\n            name: 'tooltip',\n            type: 'object',\n            control: {\n                type: 'object',\n                isOpenedByDefault: true,\n                props: [\n                    {\n                        key: 'container',\n                        type: 'object',\n                        control: {\n                            type: 'object',\n                            isOpenedByDefault: OPEN_ALL_BY_DEFAULTS,\n                            props: [\n                                {\n                                    key: 'background',\n                                    type: 'string',\n                                    control: { type: 'colorPicker' },\n                                },\n                                {\n                                    key: 'color',\n                                    type: 'string',\n                                    control: { type: 'colorPicker' },\n                                },\n                                fontSizeProp,\n                            ],\n                        },\n                    },\n                ],\n            },\n        },\n    ],\n}\n\nexport const themeProps: ChartPropertiesGroup[] = [\n    baseProps,\n    axesAndGridProps,\n    legendsProps,\n    annotationsProps,\n    tooltipProps,\n]\n","import React from 'react'\nimport { CompleteTheme } from '@nivo/core'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { colorSchemes } from '@nivo/colors'\n\nexport const ThemedBar = ({ theme }: { theme: CompleteTheme }) => {\n    return (\n        <ResponsiveBar\n            margin={{\n                top: 40,\n                right: 20,\n                bottom: 50,\n                left: 50,\n            }}\n            data={[\n                { id: 'A', value: 12 },\n                { id: 'B', value: 17 },\n                { id: 'C', value: 9 },\n                { id: 'D', value: 15 },\n                { id: 'E', value: 23 },\n            ]}\n            theme={theme}\n            colorBy=\"indexValue\"\n            animate={false}\n            enableGridX={true}\n            axisBottom={{\n                legend: 'X axis legend',\n                legendPosition: 'middle',\n                legendOffset: 34,\n            }}\n            axisLeft={{\n                legend: 'Y axis legend',\n                legendPosition: 'middle',\n                legendOffset: -36,\n            }}\n            legends={[\n                {\n                    anchor: 'top',\n                    translateY: -28,\n                    itemWidth: 40,\n                    itemHeight: 12,\n                    symbolSize: 12,\n                    direction: 'row',\n                    data: [\n                        {\n                            id: 'A',\n                            label: 'A',\n                            color: colorSchemes.nivo[0],\n                        },\n                        {\n                            id: 'B',\n                            label: 'B',\n                            color: colorSchemes.nivo[1],\n                        },\n                        {\n                            id: 'C',\n                            label: 'C',\n                            color: colorSchemes.nivo[2],\n                        },\n                        {\n                            id: 'D',\n                            label: 'D',\n                            color: colorSchemes.nivo[3],\n                        },\n                        {\n                            id: 'E',\n                            label: 'E',\n                            color: colorSchemes.nivo[4],\n                        },\n                    ],\n                },\n            ]}\n        />\n    )\n}\n","import React, { useMemo } from 'react'\nimport { CompleteTheme } from '@nivo/core'\nimport { ResponsiveHeatMap } from '@nivo/heatmap'\nimport { generateXYSeries } from '@nivo/generators'\n\nexport const ThemedHeatMap = ({ theme }: { theme: CompleteTheme }) => {\n    const data = useMemo(\n        () =>\n            generateXYSeries({\n                serieIds: ['A', 'B', 'C', 'D', 'E'],\n                x: { values: ['A', 'B', 'C', 'D', 'E'] },\n                y: {\n                    length: NaN,\n                    min: -100,\n                    max: 100,\n                    round: true,\n                },\n            }),\n        []\n    )\n\n    return (\n        <ResponsiveHeatMap\n            data={data}\n            margin={{\n                top: 40,\n                right: 70,\n                bottom: 50,\n                left: 50,\n            }}\n            theme={theme}\n            colors={{\n                type: 'diverging',\n                scheme: 'red_yellow_blue',\n                minValue: -100,\n                maxValue: 100,\n            }}\n            inactiveOpacity={0.35}\n            animate={false}\n            xOuterPadding={0.1}\n            yOuterPadding={0.1}\n            axisTop={null}\n            axisBottom={{\n                legend: 'X axis legend',\n                legendPosition: 'middle',\n                legendOffset: 34,\n            }}\n            axisLeft={{\n                legend: 'Y axis legend',\n                legendPosition: 'middle',\n                legendOffset: -36,\n            }}\n            legends={[\n                {\n                    anchor: 'right',\n                    direction: 'column',\n                    translateX: 32,\n                    length: 140,\n                    thickness: 10,\n                    ticks: [-100, -75, -50, -25, 0, 25, 50, 75, 100],\n                    title: 'Legend Title →',\n                },\n            ]}\n            annotations={[\n                {\n                    match: { id: 'B.B' },\n                    type: 'rect',\n                    offset: 3,\n                    borderRadius: 3,\n                    noteX: 20,\n                    noteY: { abs: -10 },\n                    note: 'Sample annotation',\n                },\n            ]}\n        />\n    )\n}\n","import React from 'react'\nimport { CompleteTheme } from '@nivo/core'\nimport { ResponsiveLine } from '@nivo/line'\n\nexport const ThemedLine = ({ theme }: { theme: CompleteTheme }) => {\n    return (\n        <ResponsiveLine\n            margin={{\n                top: 40,\n                right: 20,\n                bottom: 50,\n                left: 50,\n            }}\n            data={[\n                {\n                    id: 'Serie 0',\n                    data: [\n                        { x: 'A', y: 12 },\n                        { x: 'B', y: 17 },\n                        { x: 'C', y: 9 },\n                        { x: 'D', y: 15 },\n                        { x: 'E', y: 23 },\n                    ],\n                },\n                {\n                    id: 'Serie 1',\n                    data: [\n                        { x: 'A', y: 3 },\n                        { x: 'B', y: 7 },\n                        { x: 'C', y: 6 },\n                        { x: 'D', y: 12 },\n                        { x: 'E', y: 16 },\n                    ],\n                },\n                {\n                    id: 'Serie 2',\n                    data: [\n                        { x: 'A', y: 1 },\n                        { x: 'B', y: 2 },\n                        { x: 'C', y: 2 },\n                        { x: 'D', y: 5 },\n                        { x: 'E', y: 7 },\n                    ],\n                },\n            ]}\n            enablePoints\n            enablePointLabel\n            pointSize={10}\n            theme={theme}\n            animate={false}\n            axisBottom={{\n                legend: 'X axis legend',\n                legendPosition: 'middle',\n                legendOffset: 34,\n            }}\n            axisLeft={{\n                legend: 'Y axis legend',\n                legendPosition: 'middle',\n                legendOffset: -36,\n            }}\n        />\n    )\n}\n","import React, { useMemo } from 'react'\nimport { CompleteTheme } from '@nivo/core'\nimport { ResponsiveRadialBar } from '@nivo/radial-bar'\n\nexport const ThemedRadialBar = ({ theme }: { theme: CompleteTheme }) => {\n    const data = useMemo(\n        () => [\n            {\n                id: 'Supermarket',\n                data: [\n                    {\n                        x: 'Vegetables',\n                        y: 60,\n                    },\n                    {\n                        x: 'Fruits',\n                        y: 22,\n                    },\n                    {\n                        x: 'Meat',\n                        y: 46,\n                    },\n                ],\n            },\n            {\n                id: 'Combini',\n                data: [\n                    {\n                        x: 'Vegetables',\n                        y: 264,\n                    },\n                    {\n                        x: 'Fruits',\n                        y: 148,\n                    },\n                    {\n                        x: 'Meat',\n                        y: 246,\n                    },\n                ],\n            },\n            {\n                id: 'Online',\n                data: [\n                    {\n                        x: 'Vegetables',\n                        y: 98,\n                    },\n                    {\n                        x: 'Fruits',\n                        y: 224,\n                    },\n                    {\n                        x: 'Meat',\n                        y: 83,\n                    },\n                ],\n            },\n        ],\n        []\n    )\n    return (\n        <ResponsiveRadialBar\n            margin={{\n                top: 36,\n                bottom: 36,\n            }}\n            data={data}\n            theme={theme}\n            animate={false}\n        />\n    )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Layout from '../../components/Layout'\nimport { Seo } from '../../components/Seo'\nimport { ComponentPage } from '../../components/components/ComponentPage'\nimport { ComponentHeader } from '../../components/components/ComponentHeader'\nimport { Markdown } from '../../components/Markdown'\nimport { ComponentSettings } from '../../components/components/ComponentSettings'\nimport media from '../../theming/mediaQueries'\nimport {\n    themeProps,\n    defaultTheme,\n    ThemedBar,\n    ThemedHeatMap,\n    ThemedLine,\n    ThemedRadialBar,\n} from '../../components/guides/theming'\n\nconst description = `\n**nivo** supports theming via the \\`theme\\` property, this property\nmust contain an object which defines various styles to be applied to your\ncharts. If you don't provide a theme, the default theme will be used. When\nyou provide a theme, you don't have to provide all properties as it will get\nmerged with the default theme.\n\nThere are a few things to notice while theming your components. Values for\nfont-size, borders… are **unitless** as nivo supports several\nimplementations (SVG, HTML, Canvas), however you can pass extra CSS\nattributes when using a specific implementation, for example, you might add\na stroke-dasharray to the grid lines when using the SVG implementation of\nthe Bar component, however it will have no effect on BarCanvas as it doesn't\nsupport it. The theme only drives the base style of the charts, for things\nsuch as symbol colors, patterns, legends, you'll have to use the dedicated\nproperties.\n`\n\nconst Theming = () => {\n    const [theme, setTheme] = useState(defaultTheme)\n    const [mode, setMode] = useState('demo')\n\n    return (\n        <Layout>\n            <ComponentPage>\n                <Seo title=\"Theming Guide\" />\n                <ComponentHeader chartClass=\"Theming\" />\n                <Description>\n                    <Markdown source={description} />\n                </Description>\n                <Charts>\n                    <Nav>\n                        <NavItem isCurrent={mode === 'demo'} onClick={() => setMode('demo')}>\n                            demo\n                        </NavItem>\n                        <NavItem isCurrent={mode === 'code'} onClick={() => setMode('code')}>\n                            theme object\n                        </NavItem>\n                    </Nav>\n                    {mode === 'demo' && (\n                        <>\n                            <ThemedBar theme={theme} />\n                            <ThemedLine theme={theme} />\n                            <ThemedRadialBar theme={theme} />\n                            <ThemedHeatMap theme={theme} />\n                        </>\n                    )}\n                    {mode === 'code' && (\n                        <Code>\n                            {`// You can pass this object to the \\`theme\\` property\\n`}\n                            {JSON.stringify(theme, null, '    ')}\n                        </Code>\n                    )}\n                </Charts>\n                <ComponentSettings\n                    settings={theme}\n                    onChange={setTheme}\n                    groups={themeProps}\n                    flavors={[]}\n                    currentFlavor=\"svg\"\n                />\n            </ComponentPage>\n        </Layout>\n    )\n}\n\nexport default Theming\n\nconst Description = styled.div`\n    margin: 30px 0 50px;\n\n    ${media.desktopLarge`\n        & {\n            padding: 0 40px;\n        }\n    `}\n\n    ${media.desktop`\n        & {\n            padding: 0 30px;\n        }\n    `}\n\n    ${media.tablet`\n        & {\n            padding: 0 20px;\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            padding: 0 20px;\n            margin-bottom: 30px;\n        }\n    `}\n\n    code {\n        display: inline-block;\n        background: ${({ theme }) => theme.colors.cardBackground};\n        border-radius: 2px;\n        font-size: 0.9em;\n        padding: 5px 7px;\n        line-height: 1em;\n    }\n`\n\nconst Charts = styled.div`\n    position: fixed;\n    top: ${({ theme }) => theme.dimensions.headerHeight}px;\n    right: 0;\n    --innerWidth: calc(100% - ${({ theme }) => theme.dimensions.miniNavWidth}px);\n    --innerInnerWidth: calc(var(--innerWidth) * 0.55);\n    width: var(--innerInnerWidth);\n    --innerHeight: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n    height: var(--innerHeight);\n    z-index: 10;\n    overflow: hidden;\n    background: ${({ theme }) => theme.colors.cardBackground};\n    display: grid;\n    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n    grid-template-rows: 46px minmax(0, 1fr) minmax(0, 1fr);\n\n    ${media.tablet`\n        & {\n            width: 55%;\n            height: calc(100% - ${({ theme }) => theme.dimensions.headerHeight}px);\n        }\n    `}\n\n    ${media.mobile`\n        & {\n            position: relative;\n            top: auto;\n            right: auto;\n            width: auto;\n            height: 500px;\n            z-index: 0;\n            border-top: 1px solid ${({ theme }) => theme.colors.border};\n        }\n    `}\n`\n\nconst Nav = styled.nav`\n    grid-column-start: 1;\n    grid-column-end: 3;\n    background: ${({ theme }) => theme.colors.background};\n    font-size: 15px;\n    position: relative;\n    display: flex;\n\n    ${media.mobile`\n        & {\n            display: grid;\n            grid-template-columns: repeat(2, 1fr);\n        }\n    `}\n`\n\nconst NavItem = styled.span<{\n    isCurrent: boolean\n}>`\n    cursor: pointer;\n    height: 46px;\n    display: flex;\n    padding: 0 24px;\n    justify-content: center;\n    align-items: center;\n    background: ${({ isCurrent, theme }) =>\n        isCurrent ? theme.colors.cardBackground : 'transparent'};\n    color: ${({ isCurrent, theme }) => (isCurrent ? theme.colors.text : '#aaa')};\n\n    &:hover {\n        color: ${({ theme }) => theme.colors.text};\n    }\n`\n\nconst Code = styled.pre`\n    margin: 0;\n    background-color: ${({ theme }) => theme.highlight.plain.backgroundColor};\n    color: ${({ theme }) => theme.highlight.plain.color};\n    font-size: 0.8rem;\n    line-height: 1.7;\n    padding: 12px 20px;\n    overflow-y: auto;\n    grid-column-start: 1;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 4;\n`\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    source: string\n    target: string\n    distance: number\n}\n\ntype ExtraNode = {\n    id: string\n    height: number\n    color: string\n    size: number\n}\n\nexport const generateNetworkData = ({\n    rootSize = 32,\n    midSize = 24,\n    leafSize = 12,\n    minMidNodes = 5,\n    maxMidNodes = 11,\n    minLeaves = 3,\n    maxLeaves = 9,\n}: {\n    rootSize?: number\n    midSize?: number\n    leafSize?: number\n    minMidNodes?: number\n    maxMidNodes?: number\n    minLeaves?: number\n    maxLeaves?: number\n} = {}) => {\n    const rootNode = {\n        id: 'Node 0',\n        height: 2,\n        size: rootSize,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `Node ${k + 1}`,\n        height: 1,\n        size: midSize,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: 'Node 0',\n            target: source.id,\n            distance: 80,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 80,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                height: 0,\n                size: leafSize,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 50,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","interface XYRangeStaticValues {\n    values: string[] | number[]\n}\n\ninterface XYRandomNumericValues {\n    length: number\n    min: number\n    max: number\n    round?: boolean\n}\n\ntype XYRangeValues = XYRangeStaticValues | XYRandomNumericValues\n\nconst getValueGenerator = (config: XYRangeValues) => {\n    let generator: (index: number) => string | number\n\n    if ('values' in config) {\n        generator = (index: number) => config.values[index]\n    } else {\n        generator = () => {\n            let value = config.min + Math.random() * (config.max - config.min)\n            if (config.round) {\n                value = Math.round(value)\n            }\n\n            return value\n        }\n    }\n\n    return generator\n}\n\nexport const generateXYSeries = ({\n    serieIds,\n    x,\n    y,\n}: {\n    serieIds: string[]\n    x: XYRangeValues\n    y: XYRangeValues\n}) => {\n    const xLength = 'length' in x ? x.length : x.values.length\n\n    const getX = getValueGenerator(x)\n    const getY = getValueGenerator(y)\n\n    return serieIds.map(serieId => {\n        return {\n            id: serieId,\n            data: Array.from({ length: xLength }).map((_, index) => {\n                return {\n                    x: getX(index),\n                    y: getY(index),\n                }\n            }),\n        }\n    })\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\ninterface LibTreeDatum {\n    name: string\n    loc?: number\n    color: string\n    children?: LibTreeDatum[]\n}\n\nexport const generateLibTree = (\n    name = 'nivo',\n    limit?: number | null,\n    children = libTreeItems\n): LibTreeDatum => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: LibTreeDatum = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\nexport * from './xySeries'\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["day","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","days","range","ComponentHeader","memo","chartClass","tags","Container","Title","Tags","map","tag","Tag","styled","media","theme","colors","background","accent","ComponentPage","dimensions","headerHeight","topCardShadow","miniNavWidth","ComponentSettings","flavors","currentFlavor","settings","onChange","groups","group","Group","name","controls","properties","cardBackground","text","gradientColor0","gradientColor1","extendedTheme","extendDefaultTheme","baseDefaultTheme","axisDefaults","domain","line","stroke","strokeWidth","axis","legend","fontSize","fill","ticks","gridDefaults","grid","legendsDefaults","title","legends","annotationsDefaults","annotations","outlineWidth","outlineColor","outlineOpacity","link","outline","symbol","tooltipDefaults","container","color","textColor","basic","chip","table","tableCell","tableCellValue","defaultTheme","tooltip","OPEN_ALL_BY_DEFAULTS","fontSizeProp","key","type","help","control","min","max","textProp","isOpenedByDefault","props","themeProps","ThemedBar","margin","top","right","bottom","left","data","id","value","colorBy","animate","enableGridX","axisBottom","legendPosition","legendOffset","axisLeft","anchor","translateY","itemWidth","itemHeight","symbolSize","direction","label","colorSchemes","ThemedHeatMap","useMemo","generateXYSeries","serieIds","x","values","y","length","NaN","round","scheme","minValue","maxValue","inactiveOpacity","xOuterPadding","yOuterPadding","axisTop","translateX","thickness","match","offset","borderRadius","noteX","noteY","abs","note","ThemedLine","enablePoints","enablePointLabel","pointSize","ThemedRadialBar","useState","setTheme","mode","setMode","Layout","Seo","Description","Markdown","source","Charts","Nav","NavItem","isCurrent","onClick","Code","JSON","stringify","border","highlight","plain","backgroundColor","randColor","Math","random","countryCodes","names","programmingLanguages","generateBulletData","subtitle","rangeCount","measureCount","markerCount","float","ranges","reduce","remaining","acc","measures","markers","generateChordData","keys","size","maxSize","selectedKeys","slice","matrix","generateNetworkData","rootSize","midSize","leafSize","minMidNodes","maxMidNodes","minLeaves","maxLeaves","rootNode","height","nodes","Array","from","_","k","links","extraNodes","forEach","push","target","distance","concat","generateParallelCoordinatesData","shuffle","availableNodes","n","getNodeTargets","currentPath","targets","filter","Error","includes","join","targetId","getNodesTargets","targetsById","generateSankeyData","nodeCount","maxIterations","Object","assign","node","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","categoryCount","groupIndex","price","index","datum","volume","categories","randomizeSwarmPlotData","previousData","d","getValueGenerator","config","generator","xLength","getX","getY","serieId","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","language","uniqRand","used","randCountryCode","generateDrinkStats","xSize","types","country","find","generateSeries","ids","xKeys","generateDayCounts","to","timeDays","dayFormat","timeFormat","generateOrderedDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","i","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","copyArray","shuffleSelf","module","exports","array","baseFor","object","iteratee","nativeFloor","floor","nativeRandom","lower","upper","collection","arrayMap","baseRandom","lastIndex","undefined","rand","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","isArray","baseValues"],"sourceRoot":""}