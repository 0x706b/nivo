{"version":3,"file":"component---src-pages-treemap-api-js-9607a784fdaecddf1c4b.js","mappings":"6NASMA,GAAOC,EAAAA,EAAAA,KAAuBC,KAiEpC,UA/DmB,WACf,OACI,gCACI,gBAAC,IAAD,CAAKC,MAAM,mBAAmBC,SAAQ,kBAAMC,EAAAA,GAAAA,MAAN,CAAyB,eAC/D,gBAAC,IAAD,CACIC,cAAc,UACdC,WAAW,UACXC,QAAQ,kBACRC,QAASJ,EAAAA,GACTK,aAAa,OACbC,cAAeC,EAAAA,EACfC,YAAaC,EAAAA,EACbC,aAAc,CACVf,KAAMgB,KAAKC,UAAUjB,EAAM,KAAM,MACjCkB,SAAU,OACVC,MAAO,MACPC,YAAa,CAAEC,OAAQ,OAAQC,SAAS,GACxCC,KAAMC,EAAAA,GAAAA,KACNC,WAAYD,EAAAA,GAAAA,WACZE,aAAcF,EAAAA,GAAAA,aACdG,aAAcH,EAAAA,GAAAA,aAEdI,MAAO,IACPC,OAAQ,IACRC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAGVC,YAAaX,EAAAA,GAAAA,YACbY,MAAOZ,EAAAA,GAAAA,MACPa,cAAe,GACfC,eAAgB,CACZC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,OAE3BC,YAAajB,EAAAA,GAAAA,YACbkB,kBAAmBlB,EAAAA,GAAAA,kBACnBmB,YAAanB,EAAAA,GAAAA,YACboB,gBAAiBpB,EAAAA,GAAAA,gBACjBqB,oBAAqBrB,EAAAA,GAAAA,oBACrBsB,mBAAoBtB,EAAAA,GAAAA,mBACpBuB,qBAAsB,CAClBR,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,KAG3BQ,OAAQxB,EAAAA,GAAAA,OACRyB,QAASzB,EAAAA,GAAAA,QACT0B,YAAa1B,EAAAA,GAAAA,YACb2B,YAAa3B,EAAAA,GAAAA,YACb4B,YAAa,CACTb,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU","sources":["webpack://nivo-website/./src/pages/treemap/api.js"],"sourcesContent":["import React from 'react'\nimport { TreeMapDefaultProps } from '@nivo/treemap'\nimport { Seo } from '../../components/Seo'\nimport ApiClient from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/treemap/props'\nimport mapper from '../../data/components/treemap/mapper'\nimport { generateLightDataSet } from '../../data/components/treemap/generator'\nimport meta from '../../data/components/treemap/meta.yml'\n\nconst data = generateLightDataSet().root\n\nconst TreeMapApi = () => {\n    return (\n        <>\n            <Seo title=\"TreeMap HTTP API\" keywords={[...meta.TreeMap.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"TreeMap\"\n                chartClass=\"treemap\"\n                apiPath=\"/charts/treemap\"\n                flavors={meta.flavors}\n                dataProperty=\"data\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    data: JSON.stringify(data, null, '  '),\n                    identity: 'name',\n                    value: 'loc',\n                    valueFormat: { format: '.02s', enabled: true },\n                    tile: TreeMapDefaultProps.tile,\n                    leavesOnly: TreeMapDefaultProps.leavesOnly,\n                    innerPadding: TreeMapDefaultProps.innerPadding,\n                    outerPadding: TreeMapDefaultProps.outerPadding,\n\n                    width: 800,\n                    height: 560,\n                    margin: {\n                        top: 10,\n                        right: 10,\n                        bottom: 10,\n                        left: 10,\n                    },\n\n                    enableLabel: TreeMapDefaultProps.enableLabel,\n                    label: TreeMapDefaultProps.label,\n                    labelSkipSize: 12,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1.2]],\n                    },\n                    orientLabel: TreeMapDefaultProps.orientLabel,\n                    enableParentLabel: TreeMapDefaultProps.enableParentLabel,\n                    parentLabel: TreeMapDefaultProps.parentLabel,\n                    parentLabelSize: TreeMapDefaultProps.parentLabelSize,\n                    parentLabelPosition: TreeMapDefaultProps.parentLabelPosition,\n                    parentLabelPadding: TreeMapDefaultProps.parentLabelPadding,\n                    parentLabelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 2]],\n                    },\n\n                    colors: TreeMapDefaultProps.colors,\n                    colorBy: TreeMapDefaultProps.colorBy,\n                    nodeOpacity: TreeMapDefaultProps.nodeOpacity,\n                    borderWidth: TreeMapDefaultProps.borderWidth,\n                    borderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.1]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default TreeMapApi\n"],"names":["data","generateLightDataSet","root","title","keywords","meta","componentName","chartClass","apiPath","flavors","dataProperty","controlGroups","groups","propsMapper","mapper","defaultProps","JSON","stringify","identity","value","valueFormat","format","enabled","tile","TreeMapDefaultProps","leavesOnly","innerPadding","outerPadding","width","height","margin","top","right","bottom","left","enableLabel","label","labelSkipSize","labelTextColor","from","modifiers","orientLabel","enableParentLabel","parentLabel","parentLabelSize","parentLabelPosition","parentLabelPadding","parentLabelTextColor","colors","colorBy","nodeOpacity","borderWidth","borderColor"],"sourceRoot":""}