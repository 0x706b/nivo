{"version":3,"file":"component---src-pages-voronoi-index-js-648d6976bc64290e1be2.js","mappings":"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","sources":["webpack://nivo-website/./src/data/components/voronoi/props.ts","webpack://nivo-website/./src/pages/voronoi/index.js"],"sourcesContent":["import { defaultVoronoiProps } from '@nivo/voronoi'\nimport { groupProperties } from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array.<{\n                id: string | number,\n                x:  number,\n                y:  number\n            }>\n            \\`\\`\\`\n        `,\n        type: 'object[]',\n        required: true,\n    },\n    {\n        key: 'xDomain',\n        group: 'Base',\n        help: 'Defines the x values domain.',\n        type: '[number, number]',\n        required: false,\n        defaultValue: defaultVoronoiProps.xDomain,\n    },\n    {\n        key: 'yDomain',\n        group: 'Base',\n        help: 'Defines the y values domain.',\n        type: '[number, number]',\n        required: false,\n        defaultValue: defaultVoronoiProps.yDomain,\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveVoronoi/>\\`.\n        `,\n        help: 'Chart width.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        description: `\n            not required if using\n            \\`<ResponsiveVoronoi/>\\`.\n        `,\n        help: 'Chart height.',\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    {\n        key: 'layers',\n        flavors: ['svg'],\n        group: 'Base',\n        help: 'Defines the order of layers.',\n        description: `\n            Defines the order of layers, available layers are:\n            \\`links\\`, \\`cells\\`, \\`points\\`, \\`bounds\\`.\n\n            You can also use this to insert extra layers\n            to the chart, this extra layer must be\n            a function which will receive the chart computed\n            data and must return a valid SVG element.\n        `,\n        required: false,\n        defaultValue: defaultVoronoiProps.layers,\n    },\n    {\n        key: 'enableLinks',\n        help: 'Enable/disable links.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultVoronoiProps.enableLinks,\n        controlType: 'switch',\n        group: 'Links',\n    },\n    {\n        key: 'linkLineWidth',\n        help: 'Links line width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultVoronoiProps.linkLineWidth,\n        controlType: 'lineWidth',\n        group: 'Links',\n    },\n    {\n        key: 'linkLineColor',\n        help: 'Links color.',\n        type: 'string',\n        required: false,\n        defaultValue: defaultVoronoiProps.linkLineColor,\n        controlType: 'colorPicker',\n        group: 'Links',\n    },\n    {\n        key: 'enableCells',\n        help: 'Enable/disable cells.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultVoronoiProps.enableCells,\n        controlType: 'switch',\n        group: 'Cells',\n    },\n    {\n        key: 'cellLineWidth',\n        help: 'Border width for cells.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultVoronoiProps.cellLineWidth,\n        controlType: 'lineWidth',\n        group: 'Cells',\n    },\n    {\n        key: 'cellLineColor',\n        help: 'Border color for cells.',\n        type: 'string',\n        required: false,\n        defaultValue: defaultVoronoiProps.cellLineColor,\n        controlType: 'colorPicker',\n        group: 'Cells',\n    },\n    {\n        key: 'enablePoints',\n        help: 'Enable/disable points.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultVoronoiProps.enablePoints,\n        controlType: 'switch',\n        group: 'Points',\n    },\n    {\n        key: 'pointSize',\n        help: 'Size of points.',\n        type: 'number',\n        required: false,\n        defaultValue: defaultVoronoiProps.pointSize,\n        controlType: 'range',\n        group: 'Points',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 12,\n            step: 1,\n        },\n    },\n    {\n        key: 'pointColor',\n        help: 'Points color.',\n        type: 'string',\n        required: false,\n        defaultValue: defaultVoronoiProps.pointColor,\n        controlType: 'colorPicker',\n        group: 'Points',\n    },\n]\n\nexport const groups = groupProperties(props)\n","import React from 'react'\nimport range from 'lodash/range'\nimport { ResponsiveVoronoi, defaultVoronoiProps } from '@nivo/voronoi'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/voronoi/meta.yml'\nimport { groups } from '../../data/components/voronoi/props'\n\nconst xDomain = [0, 100]\nconst yDomain = [0, 100]\n\nconst generateData = () =>\n    range(100).map(id => ({ id, x: Math.random() * xDomain[1], y: Math.random() * yDomain[1] }))\n\nconst initialProperties = {\n    ...defaultVoronoiProps,\n\n    xDomain,\n    yDomain,\n\n    margin: {\n        top: 1,\n        right: 1,\n        bottom: 1,\n        left: 1,\n    },\n\n    enableLinks: true,\n    linkLineWidth: 1,\n    linkLineColor: '#cccccc',\n\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#c6432d',\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: '#c6432d',\n}\n\nconst Voronoi = () => {\n    return (\n        <ComponentTemplate\n            name=\"Voronoi\"\n            meta={meta.Voronoi}\n            icon=\"voronoi\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={defaultVoronoiProps}\n            generateData={generateData}\n        >\n            {(properties, data, theme) => {\n                return (\n                    <ResponsiveVoronoi\n                        data={data}\n                        xDomain={xDomain}\n                        yDomain={yDomain}\n                        {...properties}\n                        theme={theme}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Voronoi\n"],"names":["props","key","group","help","description","type","required","defaultValue","defaultVoronoiProps","enableControlForFlavors","controlType","controlOptions","unit","min","max","step","flavors","groups","groupProperties","xDomain","yDomain","generateData","range","map","id","x","Math","random","y","initialProperties","margin","top","right","bottom","left","enableLinks","linkLineWidth","linkLineColor","enableCells","cellLineWidth","cellLineColor","enablePoints","pointSize","pointColor","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","data","theme"],"sourceRoot":""}