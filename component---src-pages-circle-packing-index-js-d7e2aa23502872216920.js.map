{"version":3,"file":"component---src-pages-circle-packing-index-js-d7e2aa23502872216920.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-hierarchy/src/accessors.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/constant.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://nivo-website/../node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/./src/data/components/circle-packing/mapper.ts","webpack://nivo-website/./src/data/components/circle-packing/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/./src/pages/circle-packing/index.js","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/cloneDeep.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["export function optional(f) {\n  return f == null ? null : required(f);\n}\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error();\n  return f;\n}","export function constantZero() {\n  return 0;\n}\nexport default function (x) {\n  return function () {\n    return x;\n  };\n}","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;else while (--i >= 0) {\n    sum += children[i].value;\n  }\n  node.value = sum;\n}\n\nexport default function () {\n  return this.eachAfter(count);\n}","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n\n  do {\n    node.height = height;\n  } while ((node = node.parent) && node.height < ++height);\n}\nexport function Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};","export default function (callback) {\n  var node = this,\n      current,\n      next = [node],\n      children,\n      i,\n      n;\n\n  do {\n    current = next.reverse(), next = [];\n\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      next = [],\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  while (node = next.pop()) {\n    callback(node);\n  }\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      children,\n      i;\n\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  return this;\n}","export default function (value) {\n  return this.eachAfter(function (node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n\n    while (--i >= 0) {\n      sum += children[i].value;\n    }\n\n    node.value = sum;\n  });\n}","export default function (compare) {\n  return this.eachBefore(function (node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}","export default function (end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n\n  var k = nodes.length;\n\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n\n  return c;\n}","export default function () {\n  var node = this,\n      nodes = [node];\n\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n\n  return nodes;\n}","export default function () {\n  var nodes = [];\n  this.each(function (node) {\n    nodes.push(node);\n  });\n  return nodes;\n}","export default function () {\n  var leaves = [];\n  this.eachBefore(function (node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}","export default function () {\n  var root = this,\n      links = [];\n  root.each(function (node) {\n    if (node !== root) {\n      // Don’t include the root’s parent, if any.\n      links.push({\n        source: node.parent,\n        target: node\n      });\n    }\n  });\n  return links;\n}","import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import { mapFormat, settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({\n    valueFormat: mapFormat,\n    label: value => {\n        if (value === `d => \\`\\${d.id}: \\${d.value}\\``) return d => `${d.id}: ${d.value}`\n        return value\n    },\n})\n","import { defaultProps } from '@nivo/circle-packing'\nimport {\n    themeProperty,\n    motionProperties,\n    defsProperties,\n    groupProperties,\n} from '../../../lib/componentProperties'\nimport { chartDimensions, ordinalColors, isInteractive } from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg', 'html', 'canvas', 'api']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data, which should be immutable.',\n        flavors: allFlavors,\n        description: `\n            Chart data, which must conform to this structure\n            if using the default \\`id\\` and \\`value\\` accessors:\n\n            \\`\\`\\`\n            {\n                // must be unique for the whole dataset\n                id: string | number\n                value: number\n                children: {\n                    id: string | number\n                    value: number\n                    children: ...\n                }[]\n            }\n            \\`\\`\\`\n\n            If using a different data structure, you must make sure\n            to adjust both \\`id\\` and \\`value\\`. Meaning you can provide\n            a completely different data structure as long as \\`id\\` and \\`value\\`\n            return the appropriate values.\n\n            Immutability of the data is important as re-computations\n            depends on it.\n        `,\n        type: 'object',\n        required: true,\n    },\n    {\n        key: 'id',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Id accessor.',\n        description: `\n            define id accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            id (string | number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.id,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Value accessor',\n        description: `\n            define value accessor, if string given,\n            will use \\`node[value]\\`,\n            if function given, it will be invoked\n            for each node and will receive the node as\n            first argument, it must return the node\n            value (number).\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.value,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'string | (value: number) => string | number',\n        control: { type: 'valueFormat' },\n    },\n    {\n        key: 'padding',\n        help: 'Padding between each circle.',\n        flavors: allFlavors,\n        description: `\n            Padding between adjacent circles.\n            Please be aware that when zoomed\n            this value will be affected by the zooming factor\n            and is expressed in pixels. See the\n            [official d3 documentation](https://github.com/d3/d3-hierarchy#pack_padding).\n        `,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.padding,\n        group: 'Base',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'leavesOnly',\n        help: 'Only render leaf nodes (skip parent nodes).',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.leavesOnly,\n        group: 'Base',\n        control: { type: 'switch' },\n    },\n    ...chartDimensions(allFlavors),\n    themeProperty(['svg', 'html', 'canvas']),\n    ordinalColors({\n        flavors: allFlavors,\n        defaultValue: { scheme: 'nivo' },\n    }),\n    {\n        key: 'colorBy',\n        help: `Define the property to use to assign a color to circles.`,\n        description: `\n            When using \\`id\\`, each node will get a new color,\n            and when using \\`depth\\` the nodes' color will depend on their depth.\n        `,\n        type: `'id' | 'depth'`,\n        required: false,\n        defaultValue: defaultProps.colorBy,\n        flavors: allFlavors,\n        group: 'Style',\n        control: {\n            type: 'radio',\n            choices: [\n                { label: 'id', value: 'id' },\n                { label: 'depth', value: 'depth' },\n            ],\n        },\n    },\n    {\n        key: 'inheritColorFromParent',\n        help: 'Inherit color from parent node starting from 2nd level.',\n        type: 'boolean',\n        required: false,\n        flavors: allFlavors,\n        defaultValue: defaultProps.inheritColorFromParent,\n        control: { type: 'switch' },\n        group: 'Style',\n    },\n    {\n        key: 'childColor',\n        help: 'Defines how to compute child nodes color, only used when inheritColorFromParent is enabled.',\n        flavors: allFlavors,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.childColor,\n        control: { type: 'inheritedColor' },\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Width of circle border.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaultProps.borderWidth,\n        control: { type: 'lineWidth' },\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        flavors: allFlavors,\n        description: `\n            how to compute border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.borderColor,\n        control: { type: 'inheritedColor' },\n        group: 'Style',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'circleComponent',\n        help: 'Custom circle component.',\n        type: 'Component',\n        flavors: ['svg'],\n        group: 'Style',\n        required: false,\n    },\n    {\n        key: 'enableLabels',\n        help: 'Enable/disable labels.',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaultProps.enableLabels,\n        control: { type: 'switch' },\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        help: 'Label accessor.',\n        flavors: allFlavors,\n        description: `\n            Defines how to get label text,\n            can be a string (used to access current node data property)\n            or a function which will receive the actual node data.\n        `,\n        type: 'string | Function',\n        required: false,\n        defaultValue: defaultProps.label,\n        group: 'Labels',\n        control: {\n            type: 'choices',\n            choices: ['id', 'value', 'formattedValue', `d => \\`\\${d.id}: \\${d.value}\\``].map(\n                choice => ({\n                    label: choice,\n                    value: choice,\n                })\n            ),\n        },\n    },\n    {\n        key: 'labelsFilter',\n        help: 'Filter labels using custom conditions.',\n        flavors: allFlavors,\n        description: `\n            Please note that at this stage, nodes are already excluded\n            according to \\`labelsSkipRadius\\`.\n            \n            This can be used to only show labels at a certain depth for example:\n            \n            \\`\\`\\`\n            <CirclePacking\n                labelsFilter={label => label.node.depth == 2}\n                {...props}\n            />\n            \\`\\`\\`\n        `,\n        type: '(label) => boolean',\n        required: false,\n        group: 'Labels',\n    },\n    {\n        key: 'labelsSkipRadius',\n        help: 'Skip label rendering if node radius is lower than given value, 0 to disable.',\n        type: 'number',\n        required: false,\n        flavors: allFlavors,\n        defaultValue: defaultProps.labelsSkipRadius,\n        group: 'Labels',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 0,\n            max: 32,\n        },\n    },\n    {\n        key: 'labelTextColor',\n        help: 'Method to compute label text color.',\n        flavors: allFlavors,\n        description: `\n            how to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaultProps.labelTextColor,\n        control: { type: 'inheritedColor' },\n        group: 'Labels',\n    },\n    {\n        key: 'labelComponent',\n        help: 'Custom label component.',\n        type: 'Component',\n        flavors: allFlavors,\n        group: 'Labels',\n        required: false,\n    },\n    isInteractive({\n        flavors: ['svg', 'html', 'canvas'],\n        defaultValue: defaultProps.isInteractive,\n    }),\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        help: 'onMouseEnter handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        help: 'onMouseMove handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg', 'html'],\n        group: 'Interactivity',\n        help: 'onMouseLeave handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'html', 'canvas'],\n        group: 'Interactivity',\n        help: 'onClick handler, it receives target node data and mouse event.',\n        type: '(node, event) => void',\n        required: false,\n    },\n    {\n        key: 'zoomedId',\n        flavors: ['svg', 'html', 'canvas'],\n        help: `Zoom on a specific node.`,\n        description: `\n            If provided, zoom on the node having the provided ID,\n            this can be used to build a zoomable circle packing chart\n            when used in conjunction with the \\`onClick\\` property.  \n        `,\n        type: 'string | null',\n        required: false,\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg', 'html'], defaultProps, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] }: { exclude?: string[] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    source: string\n    target: string\n    distance: number\n}\n\ntype ExtraNode = {\n    id: string\n    height: number\n    color: string\n    size: number\n}\n\nexport const generateNetworkData = ({\n    rootSize = 32,\n    midSize = 24,\n    leafSize = 12,\n    minMidNodes = 5,\n    maxMidNodes = 11,\n    minLeaves = 3,\n    maxLeaves = 9,\n}: {\n    rootSize?: number\n    midSize?: number\n    leafSize?: number\n    minMidNodes?: number\n    maxMidNodes?: number\n    minLeaves?: number\n    maxLeaves?: number\n} = {}) => {\n    const rootNode = {\n        id: 'Node 0',\n        height: 2,\n        size: rootSize,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `Node ${k + 1}`,\n        height: 1,\n        size: midSize,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: 'Node 0',\n            target: source.id,\n            distance: 80,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 80,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                height: 0,\n                size: leafSize,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 50,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\ninterface LibTreeDatum {\n    name: string\n    loc?: number\n    color: string\n    children?: LibTreeDatum[]\n}\n\nexport const generateLibTree = (\n    name = 'nivo',\n    limit?: number | null,\n    children = libTreeItems\n): LibTreeDatum => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: LibTreeDatum = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","import React from 'react'\nimport { patternLinesDef } from '@nivo/core'\nimport { ResponsiveCirclePacking, defaultProps } from '@nivo/circle-packing'\nimport { generateLibTree } from '@nivo/generators'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/circle-packing/meta.yml'\nimport mapper from '../../data/components/circle-packing/mapper'\nimport { groups } from '../../data/components/circle-packing/props'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst initialProperties = {\n    margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20,\n    },\n    id: 'name',\n    value: 'loc',\n    valueFormat: { format: '', enabled: false },\n    colors: { scheme: 'nivo' },\n    colorBy: 'depth',\n    inheritColorFromParent: false,\n    childColor: {\n        from: 'color',\n        modifiers: [['brighter', 0.4]],\n    },\n    padding: 4,\n    leavesOnly: false,\n    enableLabels: true,\n    label: 'id',\n    labelsFilter: label => label.node.depth === 2,\n    labelsSkipRadius: 10,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 2]],\n    },\n    borderWidth: 1,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.5]],\n    },\n    defs: [\n        patternLinesDef('lines', {\n            background: 'none',\n            color: 'inherit',\n            rotation: -45,\n            lineWidth: 5,\n            spacing: 8,\n        }),\n    ],\n    fill: [{ match: { depth: 1 }, id: 'lines' }],\n    animate: true,\n    motionConfig: 'gentle',\n    isInteractive: true,\n}\n\nconst generateData = () => generateLibTree()\n\nconst CirclePacking = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/circle-packing.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <ComponentTemplate\n            name=\"CirclePacking\"\n            meta={meta.CirclePacking}\n            icon=\"circle-packing\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={defaultProps}\n            propertiesMapper={mapper}\n            generateData={generateData}\n            image={image}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveCirclePacking\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={node => {\n                            logAction({\n                                type: 'click',\n                                label: `${node.id}: ${node.value}`,\n                                color: node.color,\n                                data: node,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default CirclePacking\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["optional","f","required","Error","constantZero","x","count","node","sum","children","i","length","value","hierarchy","data","child","childs","n","root","Node","valued","nodes","defaultChildren","pop","Array","push","parent","depth","eachBefore","computeHeight","d","copyData","height","this","prototype","constructor","eachAfter","each","callback","current","next","reverse","sort","compare","path","end","start","ancestor","a","b","aNodes","ancestors","bNodes","c","leastCommonAncestor","k","splice","descendants","leaves","links","source","target","copy","day","date","setHours","step","setDate","getDate","getTimezoneOffset","days","range","durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","field","interval","arguments","floor","ceil","round","d0","d1","offset","Math","stop","previous","filter","test","setTime","every","isFinite","settingsMapper","valueFormat","mapFormat","label","id","allFlavors","props","key","group","help","flavors","description","type","defaultValue","defaultProps","control","unit","min","max","chartDimensions","themeProperty","ordinalColors","scheme","choices","defsProperties","map","choice","isInteractive","motionProperties","groups","groupProperties","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","format","enabled","undefined","randColor","random","countryCodes","names","programmingLanguages","generateBulletData","title","subtitle","rangeCount","measureCount","markerCount","float","ranges","reduce","remaining","acc","measures","markers","generateChordData","size","minValue","maxValue","maxSize","selectedKeys","slice","matrix","generateNetworkData","rootSize","midSize","leafSize","minMidNodes","maxMidNodes","minLeaves","maxLeaves","rootNode","color","from","_","extraNodes","distance","concat","generateParallelCoordinatesData","shuffle","availableNodes","name","getNodeTargets","currentPath","targets","includes","join","targetId","getNodesTargets","targetsById","link","generateSankeyData","nodeCount","maxIterations","assign","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","categoryCount","groupIndex","price","index","datum","volume","categories","randomizeSwarmPlotData","previousData","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","language","uniqRand","generator","used","randCountryCode","generateDrinkStats","xSize","types","country","find","y","generateSeries","ids","xKeys","generateDayCounts","to","timeDays","dayFormat","timeFormat","generateOrderedDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","tree","leaf","loc","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","initialProperties","margin","top","right","bottom","left","colors","colorBy","inheritColorFromParent","childColor","modifiers","padding","leavesOnly","enableLabels","labelsFilter","labelsSkipRadius","labelTextColor","borderWidth","borderColor","defs","patternLinesDef","background","rotation","lineWidth","spacing","fill","match","animate","motionConfig","generateData","image","useStaticQuery","childImageSharp","gatsbyImageData","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","theme","logAction","onClick","copyArray","shuffleSelf","module","exports","array","nativeFloor","nativeRandom","lower","upper","values","collection","arrayMap","object","baseRandom","lastIndex","rand","baseClone","CLONE_DEEP_FLAG","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","isArray","baseValues"],"sourceRoot":""}