{"version":3,"file":"component---src-pages-waffle-html-js-c0332f663e838275093b.js","mappings":"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","sources":["webpack://nivo-website/./src/data/components/waffle/props.ts","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/./src/data/components/waffle/CustomTooltip.js","webpack://nivo-website/./src/data/components/waffle/mapper.js","webpack://nivo-website/./src/pages/waffle/html.js"],"sourcesContent":["import { WaffleDefaultProps } from '@nivo/waffle'\nimport {\n    themeProperty,\n    motionProperties,\n    defsProperties,\n    getLegendsProps,\n    groupProperties,\n} from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst defaults = WaffleDefaultProps\n\nconst props: ChartProperty[] = [\n    {\n        key: 'total',\n        group: 'Base',\n        type: 'number',\n        required: true,\n        help: 'Max value.',\n        description: 'Max value, ratio will be computed against this value for each datum.',\n        flavors: ['svg', 'html', 'canvas'],\n    },\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:    string | number\n                value: number\n                label: string | number\n            }>\n            \\`\\`\\`\n        `,\n        type: 'object[]',\n        required: true,\n        flavors: ['svg', 'html', 'canvas'],\n    },\n    // {\n    //     key: 'hiddenIds',\n    //     type: 'Array<string | number>',\n    //     help: 'Hide parts of the data by id',\n    //     description: `\n    //         Hide parts of the data by id, this can be used\n    //         to implement toggle. Note that the datum will\n    //         still be visible in legends, if you want\n    //         to completely remove a datum from the data set,\n    //         you'll have to filter the data before passing\n    //         it to the component.\n    //     `,\n    //     required: false,\n    //     defaultValue: defaults.hiddenIds,\n    // },\n    {\n        key: 'rows',\n        group: 'Base',\n        type: 'number',\n        help: 'Number of rows.',\n        required: true,\n        flavors: ['svg', 'html', 'canvas'],\n        controlType: 'range',\n        controlOptions: {\n            min: 1,\n            max: 100,\n        },\n    },\n    {\n        key: 'columns',\n        group: 'Base',\n        type: 'number',\n        help: 'Number of columns.',\n        required: true,\n        flavors: ['svg', 'html', 'canvas'],\n        controlType: 'range',\n        controlOptions: {\n            min: 1,\n            max: 100,\n        },\n    },\n    {\n        key: 'fillDirection',\n        group: 'Base',\n        type: 'string',\n        required: false,\n        help: `How to fill the waffle.`,\n        flavors: ['svg', 'html', 'canvas'],\n        defaultValue: defaults.fillDirection,\n        controlType: 'choices',\n        controlOptions: {\n            choices: [\n                { label: 'top', value: 'top' },\n                { label: 'right', value: 'right' },\n                { label: 'bottom', value: 'bottom' },\n                { label: 'left', value: 'left' },\n            ],\n        },\n    },\n    {\n        key: 'padding',\n        group: 'Base',\n        type: 'number',\n        help: 'Padding between each cell.',\n        required: true,\n        flavors: ['svg', 'html', 'canvas'],\n        controlType: 'range',\n        controlOptions: {\n            unit: 'px',\n            min: 0,\n            max: 10,\n        },\n    },\n    {\n        key: 'width',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        flavors: ['svg', 'html', 'canvas'],\n        help: 'Chart width.',\n        description: `\n            not required if using responsive alternative\n            of the component\n            \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'height',\n        group: 'Base',\n        enableControlForFlavors: ['api'],\n        flavors: ['svg', 'html', 'canvas'],\n        help: 'Chart height.',\n        description: `\n            not required if using responsive alternative\n            of the component\n            \\`<Responsive*/>\\`.\n        `,\n        type: 'number',\n        required: true,\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        group: 'Base',\n        type: 'object',\n        required: false,\n        help: 'Chart margin.',\n        flavors: ['svg', 'html', 'canvas'],\n        controlType: 'margin',\n    },\n    themeProperty(['svg', 'html', 'canvas']),\n    {\n        key: 'cellComponent',\n        flavors: ['svg', 'html'],\n        help: 'Override default cell component.',\n        type: 'Function',\n        required: false,\n        controlType: 'choices',\n        group: 'Style',\n        controlOptions: {\n            choices: ['default', 'Custom(props) => (…)'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'colors',\n        group: 'Style',\n        type: 'string | Function | string[]',\n        required: false,\n        help: 'Defines how to compute node color.',\n        defaultValue: defaults.colors,\n        flavors: ['svg', 'html', 'canvas'],\n        controlType: 'ordinalColors',\n    },\n    {\n        key: 'emptyColor',\n        group: 'Style',\n        help: 'Defines empty cells color.',\n        type: 'string',\n        required: false,\n        defaultValue: defaults.emptyColor,\n        flavors: ['svg', 'html', 'canvas'],\n        controlType: 'colorPicker',\n    },\n    {\n        key: 'emptyOpacity',\n        group: 'Style',\n        help: 'Empty cells opacity.',\n        required: false,\n        defaultValue: defaults.emptyOpacity,\n        type: 'number',\n        flavors: ['svg', 'html', 'canvas'],\n        controlType: 'opacity',\n    },\n    {\n        key: 'borderWidth',\n        group: 'Style',\n        type: 'number',\n        required: false,\n        help: 'Control cell border width.',\n        defaultValue: defaults.borderWidth,\n        flavors: ['svg', 'html', 'canvas'],\n        controlType: 'lineWidth',\n    },\n    {\n        key: 'borderColor',\n        group: 'Style',\n        type: 'string | object | Function',\n        required: false,\n        help: 'Method to compute cell border color.',\n        defaultValue: defaults.borderColor,\n        flavors: ['svg', 'html', 'canvas'],\n        controlType: 'inheritedColor',\n    },\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'isInteractive',\n        group: 'Interactivity',\n        type: 'boolean',\n        required: false,\n        help: 'Enable/disable interactivity.',\n        defaultValue: defaults.isInteractive,\n        flavors: ['svg', 'html', 'canvas'],\n        controlType: 'switch',\n    },\n    {\n        key: 'onClick',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'onClick handler, it receives clicked node data and style plus mouse event.',\n        flavors: ['svg', 'html', 'canvas'],\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Function',\n        required: false,\n        help: 'Custom tooltip component',\n        flavors: ['svg', 'html', 'canvas'],\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will\n            receive the following data:\n            \\`\\`\\`\n            {\n                id:         {string|number},\n                value:      number,\n                label:      {string|number},\n                color:      string,\n                position:   number,\n                row:        number,\n                column:     number,\n                groupIndex: number,\n                startAt:    number,\n                endAt:      number,\n            }\n            \\`\\`\\`\n            You can customize the tooltip style\n            using the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        group: 'Interactivity',\n        type: 'boolean',\n        required: false,\n        controlType: 'switch',\n        help: 'Showcase custom tooltip.',\n        flavors: ['svg', 'html', 'canvas'],\n    },\n    {\n        key: 'legends',\n        group: 'Legends',\n        type: 'object[]',\n        required: false,\n        help: `Optional chart's legends.`,\n        flavors: ['svg', 'canvas'],\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            defaults: {\n                anchor: 'left',\n                direction: 'column',\n                justify: false,\n                translateX: -100,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 4,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                itemTextColor: '#777',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemTextColor: '#000',\n                            itemBackground: '#f7fafb',\n                        },\n                    },\n                ],\n            },\n        },\n    },\n    ...motionProperties(['svg', 'html'], defaults),\n]\n\nexport const groups = groupProperties(props)\n","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper = (mapping: any, { exclude = [] } = {}) => (\n    settings: any,\n    options: any = {}\n) => {\n    const overrides: any = {}\n\n    Object.keys(settings).forEach(key => {\n        if (mapping[key]) {\n            overrides[key] = mapping[key](settings[key], settings, options)\n        }\n    })\n\n    return {\n        ...omit(settings, exclude),\n        ...overrides,\n    }\n}\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n`\nconst TooltipKey = styled.span`\n    font-weight: 600;\n`\nconst TooltipValue = styled.span``\n\nconst CustomTooltip = node => (\n    <TooltipWrapper style={{ color: node.color }}>\n        <TooltipKey>label</TooltipKey>\n        <TooltipValue>{node.label}</TooltipValue>\n        <TooltipKey>id</TooltipKey>\n        <TooltipValue>{node.id}</TooltipValue>\n        <TooltipKey>value</TooltipKey>\n        <TooltipValue>{node.value}</TooltipValue>\n        <TooltipKey>position</TooltipKey>\n        <TooltipValue>{node.position}</TooltipValue>\n        <TooltipKey>groupIndex</TooltipKey>\n        <TooltipValue>{node.groupIndex}</TooltipValue>\n        <TooltipKey>row</TooltipKey>\n        <TooltipValue>{node.row}</TooltipValue>\n        <TooltipKey>column</TooltipKey>\n        <TooltipValue>{node.column}</TooltipValue>\n        <TooltipKey>color</TooltipKey>\n        <TooltipValue>{node.color}</TooltipValue>\n    </TooltipWrapper>\n)\n\nexport default CustomTooltip\n","import React from 'react'\nimport { settingsMapper } from '../../../lib/settings'\nimport CustomTooltip from './CustomTooltip'\n\nconst CustomSvgCell = ({\n    position,\n    size,\n    x,\n    y,\n    color,\n    fill,\n    opacity,\n    borderWidth,\n    borderColor,\n    data,\n    onHover,\n    onLeave,\n    onClick,\n}) => (\n    <circle\n        r={size / 2}\n        cx={x + size / 2}\n        cy={y + size / 2}\n        fill={fill || color}\n        strokeWidth={borderWidth}\n        stroke={borderColor}\n        opacity={opacity}\n        onMouseEnter={onHover}\n        onMouseMove={onHover}\n        onMouseLeave={onLeave}\n        onClick={event => {\n            onClick({ position, color, x, y, data }, event)\n        }}\n    />\n)\n\nconst CustomHtmlCell = ({\n    position,\n    size,\n    x,\n    y,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    data,\n    onHover,\n    onLeave,\n    onClick,\n}) => (\n    <div\n        style={{\n            borderRadius: `${size / 2}px 0 ${size / 2}px 0`,\n            position: 'absolute',\n            top: y,\n            left: x,\n            width: size,\n            height: size,\n            background: color,\n            opacity,\n            boxSizing: 'content-box',\n            borderStyle: 'solid',\n            borderWidth: `${borderWidth}px`,\n            borderColor,\n        }}\n        onMouseEnter={onHover}\n        onMouseMove={onHover}\n        onMouseLeave={onLeave}\n        onClick={event => {\n            onClick({ position, color, x, y, data }, event)\n        }}\n    />\n)\n\nexport default settingsMapper(\n    {\n        cellComponent: (value, values, options) => {\n            if (value === `Custom(props) => (…)`) {\n                if (options.component === 'Waffle') return CustomSvgCell\n                return CustomHtmlCell\n            }\n            return undefined\n        },\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return null\n\n            return CustomTooltip\n        },\n    },\n    {\n        exclude: ['custom tooltip example'],\n    }\n)\n","import React from 'react'\nimport { ResponsiveWaffleHtml, WaffleDefaultProps } from '@nivo/waffle'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/waffle/meta.yml'\nimport { groups } from '../../data/components/waffle/props'\nimport mapper from '../../data/components/waffle/mapper'\n\nconst generateData = () => [\n    {\n        id: 'men',\n        label: 'men',\n        value: Math.random() * 33,\n        color: '#468df3',\n    },\n    {\n        id: 'women',\n        label: 'women',\n        value: Math.random() * 33,\n        color: '#ba72ff',\n    },\n    {\n        id: 'children',\n        label: 'children',\n        value: Math.random() * 33,\n        color: '#a1cfff',\n    },\n]\n\nconst initialProperties = {\n    total: 100,\n\n    rows: 18,\n    columns: 14,\n    fillDirection: 'bottom',\n    padding: 1,\n\n    margin: {\n        top: 10,\n        right: 10,\n        bottom: 10,\n        left: 10,\n    },\n\n    cellComponent: 'default',\n    emptyColor: '#cccccc',\n    emptyOpacity: 1,\n    colors: { scheme: 'set2' },\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        gamma: [['darker', 0.3]],\n    },\n\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 11,\n\n    isInteractive: true,\n    'custom tooltip example': false,\n    tooltip: null,\n}\n\nconst WaffleHtml = () => {\n    return (\n        <ComponentTemplate\n            name=\"WaffleHtml\"\n            meta={meta.WaffleHtml}\n            icon=\"waffle\"\n            flavors={meta.flavors}\n            currentFlavor=\"html\"\n            properties={groups}\n            propertiesMapper={mapper}\n            initialProperties={initialProperties}\n            defaultProperties={WaffleDefaultProps}\n            codePropertiesMapper={properties => ({\n                ...properties,\n                cellComponent: properties.cellComponent ? 'CustomCell(props) => (…)' : undefined,\n                tooltip: properties.tooltip ? 'CustomTooltip(props) => (…)' : undefined,\n            })}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveWaffleHtml\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={node => {\n                            let label\n                            if (node.data.value !== undefined) {\n                                label = `${node.data.label}: ${node.data.value} (position: ${node.position})`\n                            } else {\n                                label = `empty at position: ${node.position}`\n                            }\n                            logAction({\n                                type: 'click',\n                                label: `[cell] ${label}`,\n                                color: node.color,\n                                data: node,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default WaffleHtml\n"],"names":["defaults","WaffleDefaultProps","props","key","group","type","required","help","description","flavors","controlType","controlOptions","min","max","defaultValue","fillDirection","choices","label","value","unit","enableControlForFlavors","themeProperty","map","colors","emptyColor","emptyOpacity","borderWidth","borderColor","defsProperties","isInteractive","getLegendsProps","shouldCreate","addLabel","shouldRemove","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","itemDirection","itemTextColor","onClick","data","alert","JSON","stringify","effects","on","style","itemBackground","motionProperties","groups","groupProperties","settingsMapper","mapping","exclude","settings","options","overrides","Object","keys","forEach","omit","mapAxis","upperFirst","enable","mapFormat","format","enabled","undefined","TooltipWrapper","styled","TooltipKey","TooltipValue","node","color","id","position","groupIndex","row","column","CustomSvgCell","size","x","y","fill","opacity","onHover","onLeave","r","cx","cy","strokeWidth","stroke","onMouseEnter","onMouseMove","onMouseLeave","event","CustomHtmlCell","borderRadius","top","left","width","height","background","boxSizing","borderStyle","cellComponent","values","component","tooltip","CustomTooltip","generateData","Math","random","initialProperties","total","rows","columns","padding","margin","right","bottom","scheme","from","gamma","animate","motionStiffness","motionDamping","name","meta","icon","currentFlavor","properties","propertiesMapper","mapper","defaultProperties","codePropertiesMapper","theme","logAction"],"sourceRoot":""}