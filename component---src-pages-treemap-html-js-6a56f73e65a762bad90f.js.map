{"version":3,"file":"component---src-pages-treemap-html-js-6a56f73e65a762bad90f.js","mappings":"wMAQMA,EAAoB,CACtBC,SAAU,OACVC,MAAO,MACPC,YAAa,CAAEC,OAAQ,OAAQC,SAAS,GACxCC,KAAMC,EAAAA,GAAAA,KACNC,WAAYD,EAAAA,GAAAA,WACZE,aAAcF,EAAAA,GAAAA,aACdG,aAAcH,EAAAA,GAAAA,aAEdI,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAGVC,aAAa,EACbC,MAAOV,EAAAA,GAAAA,MACPW,cAAe,GACfC,eAAgB,CACZC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,KAE3BC,YAAaf,EAAAA,GAAAA,YACbgB,kBAAmBhB,EAAAA,GAAAA,kBACnBiB,YAAajB,EAAAA,GAAAA,YACbkB,gBAAiBlB,EAAAA,GAAAA,gBACjBmB,oBAAqBnB,EAAAA,GAAAA,oBACrBoB,mBAAoBpB,EAAAA,GAAAA,mBACpBqB,qBAAsB,CAClBR,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,KAG3BQ,OAAQ,CAAEC,OAAQ,qBAClBC,QAASxB,EAAAA,GAAAA,QACTyB,YAAazB,EAAAA,GAAAA,YACb0B,YAAa1B,EAAAA,GAAAA,YACb2B,YAAa,CACTd,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3Bc,QAAS5B,EAAAA,GAAAA,QACT6B,aAAc7B,EAAAA,GAAAA,aAEd8B,cAAe9B,EAAAA,GAAAA,eAsCnB,UAnCoB,WAChB,OACI,gBAAC,IAAD,CACI+B,KAAK,cACLC,KAAMA,EAAAA,GACNC,KAAK,UACLC,QAASF,EAAAA,GACTG,cAAc,OACdC,WAAYC,EAAAA,EACZ5C,kBAAmBA,EACnB6C,kBAAmBtC,EAAAA,GACnBuC,iBAAkBC,EAAAA,EAClBC,aAAcC,EAAAA,IAEb,SAACN,EAAYO,EAAMC,EAAOC,GACvB,OACI,gBAAC,KAAD,eACIF,KAAMA,EAAKG,MACPV,EAFR,CAGIQ,MAAOA,EACPG,QAAS,SAAAC,GACLH,EAAU,CACNI,KAAM,QACNvC,MAAM,UAAWsC,EAAKE,GAAjB,KAAwBF,EAAKG,eAClCC,MAAOJ,EAAKI,MACZT,KAAMK","sources":["webpack://nivo-website/./src/pages/treemap/html.js"],"sourcesContent":["import React from 'react'\nimport { ResponsiveTreeMapHtml, TreeMapDefaultProps } from '@nivo/treemap'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/treemap/meta.yml'\nimport mapper from '../../data/components/treemap/mapper'\nimport { groups } from '../../data/components/treemap/props'\nimport { generateLightDataSet } from '../../data/components/treemap/generator'\n\nconst initialProperties = {\n    identity: 'name',\n    value: 'loc',\n    valueFormat: { format: '.02s', enabled: true },\n    tile: TreeMapDefaultProps.tile,\n    leavesOnly: TreeMapDefaultProps.leavesOnly,\n    innerPadding: TreeMapDefaultProps.innerPadding,\n    outerPadding: TreeMapDefaultProps.outerPadding,\n\n    margin: {\n        top: 10,\n        right: 10,\n        bottom: 10,\n        left: 10,\n    },\n\n    enableLabel: true,\n    label: TreeMapDefaultProps.label,\n    labelSkipSize: 12,\n    labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 2]],\n    },\n    orientLabel: TreeMapDefaultProps.orientLabel,\n    enableParentLabel: TreeMapDefaultProps.enableParentLabel,\n    parentLabel: TreeMapDefaultProps.parentLabel,\n    parentLabelSize: TreeMapDefaultProps.parentLabelSize,\n    parentLabelPosition: TreeMapDefaultProps.parentLabelPosition,\n    parentLabelPadding: TreeMapDefaultProps.parentLabelPadding,\n    parentLabelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 3]],\n    },\n\n    colors: { scheme: 'yellow_orange_red' },\n    colorBy: TreeMapDefaultProps.colorBy,\n    nodeOpacity: TreeMapDefaultProps.nodeOpacity,\n    borderWidth: TreeMapDefaultProps.borderWidth,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.1]],\n    },\n\n    animate: TreeMapDefaultProps.animate,\n    motionConfig: TreeMapDefaultProps.motionConfig,\n\n    isInteractive: TreeMapDefaultProps.isInteractive,\n}\n\nconst TreeMapHtml = () => {\n    return (\n        <ComponentTemplate\n            name=\"TreeMapHtml\"\n            meta={meta.TreeMapHtml}\n            icon=\"treemap\"\n            flavors={meta.flavors}\n            currentFlavor=\"html\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={TreeMapDefaultProps}\n            propertiesMapper={mapper}\n            generateData={generateLightDataSet}\n        >\n            {(properties, data, theme, logAction) => {\n                return (\n                    <ResponsiveTreeMapHtml\n                        data={data.root}\n                        {...properties}\n                        theme={theme}\n                        onClick={node => {\n                            logAction({\n                                type: 'click',\n                                label: `[node] ${node.id}: ${node.formattedValue}`,\n                                color: node.color,\n                                data: node,\n                            })\n                        }}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default TreeMapHtml\n"],"names":["initialProperties","identity","value","valueFormat","format","enabled","tile","TreeMapDefaultProps","leavesOnly","innerPadding","outerPadding","margin","top","right","bottom","left","enableLabel","label","labelSkipSize","labelTextColor","from","modifiers","orientLabel","enableParentLabel","parentLabel","parentLabelSize","parentLabelPosition","parentLabelPadding","parentLabelTextColor","colors","scheme","colorBy","nodeOpacity","borderWidth","borderColor","animate","motionConfig","isInteractive","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","generateData","generateLightDataSet","data","theme","logAction","root","onClick","node","type","id","formattedValue","color"],"sourceRoot":""}