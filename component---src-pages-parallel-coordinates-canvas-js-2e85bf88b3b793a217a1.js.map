{"version":3,"sources":["webpack:///./src/pages/parallel-coordinates/canvas.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/props.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///../src/hooks.js","webpack:///../src/ParallelCoordinatesLineTooltip.js","webpack:///../src/ParallelCoordinatesLine.js","webpack:///../src/ParallelCoordinates.js","webpack:///../src/ResponsiveParallelCoordinates.js","webpack:///../src/ParallelCoordinatesCanvas.js","webpack:///../src/ResponsiveParallelCoordinatesCanvas.js","webpack:///./src/data/components/parallel-coordinates/props.js","webpack:///./src/data/components/parallel-coordinates/mapper.js","webpack:///./src/data/components/parallel-coordinates/variables.js","webpack:///../src/compute.js","webpack:///../src/components/AxisTick.js","webpack:///../src/components/Axis.js","webpack:///../src/components/Axes.js","webpack:///../src/components/GridLine.js","webpack:///../src/components/GridLines.js","webpack:///../src/components/Grid.js","webpack:///../src/utils.js","webpack:///../src/canvas.js"],"names":["initialProperties","variables","margin","top","right","bottom","left","layout","commonDefaultProps","curve","colors","colorBy","strokeWidth","lineOpacity","axesPlan","axesTicksPosition","pixelRatio","window","devicePixelRatio","generateData","generateParallelCoordinatesData","size","ParallelCoordinatesCanvas","name","meta","icon","flavors","currentFlavor","properties","groups","defaultProperties","propertiesMapper","mapper","getDataSize","data","theme","merge","axis","ticks","line","strokeLinecap","domain","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","commonVariablePropTypes","PropTypes","ticksPosition","tickSize","tickPadding","tickRotation","format","legend","legendPosition","legendOffset","number","commonPropTypes","type","padding","values","tickValues","min","max","lineCurvePropType","ordinalColorsPropType","isRequired","role","scheme","animate","motionConfig","svgDefaultProps","_arrayLikeToArray","arr","len","arr2","Array","_toConsumableArray","isArray","arrayLikeToArray","arrayWithoutHoles","iter","Symbol","iterator","from","iterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","test","unsupportedIterableToArray","TypeError","nonIterableSpread","useParallelCoordinates","width","height","getLineColor","useOrdinalColorScale","lineGenerator","useMemo","d","curveFromProp","variablesScale","range","variablesWithScale","variable","allValues","Math","scale","scaleLinear","scalePoint","dataWithPoints","points","x","datum","y","index","computeParallelCoordinatesLayout","memo","rows","color","opacity","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseHover","useCallback","event","useMotionConfig","springConfig","animatedProps","useSpring","path","config","immediate","stroke","fill","onMouseEnter","onMouseMove","onMouseLeave","WrappedParallelCoordinates","withContainer","partialMargin","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","axes","ResponsiveParallelCoordinates","props","WrappedParallelCoordinatesCanvas","canvasEl","useRef","useTheme","useEffect","ctx","renderAxisToCanvas","ref","style","global","ResponsiveParallelCoordinatesCanvas","group","help","required","description","controlType","controlOptions","shouldCreate","shouldRemove","getItemTitle","disabled","when","disabledValue","defaultValue","defaults","choices","label","lineCurvePropKeys","map","enableControlForFlavors","unit","step","themeProperty","motionProperties","groupProperties","settingsMapper","centerScale","bandwidth","offset","timeByType","millisecond","second","minute","hour","day","week","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month","year","timeTypes","timeIntervalRegexp","RegExp","isInteger","isFinite","getScaleTicks","spec","matches","timeType","Number","computeCartesianTicks","engine","textProps","textPropsByEngine","position","lineX","lineY","text","textX","textY","textAlign","textBaseline","translate","getFormatter","f","timeFormat","Date","d3Format","computeGridLines","_values","lineValues","lineCount","lines","v","x1","x2","y1","y2","axisPropTypes","renderTick","ariaHidden","bool","axisPropType","AxisTick","_value","onClick","textAnchor","gStyle","transform","e","dominantBaseline","rotate","Axis","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transitions","useTransition","tick","initial","textTransform","enter","update","leave","aria-hidden","item","transitionProps","tickIndex","positions","xScale","yScale","isXAxis","GridLine","xValues","yValues","xLines","yLines","degreesToRadians","degrees","renderAxesToCanvas","renderGridLinesToCanvas"],"mappings":"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","file":"component---src-pages-parallel-coordinates-canvas-js-2e85bf88b3b793a217a1.js","sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState, useCallback } from 'react'\nimport merge from 'lodash/merge'\nimport { ResponsiveParallelCoordinatesCanvas, commonDefaultProps } from '@nivo/parallel-coordinates'\nimport { generateParallelCoordinatesData } from '@nivo/generators'\nimport ComponentTemplate from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/parallel-coordinates/meta.yml'\nimport mapper from '../../data/components/parallel-coordinates/mapper'\nimport { groups } from '../../data/components/parallel-coordinates/props'\nimport variables from '../../data/components/parallel-coordinates/variables'\n\nconst lineCount = 320\n\nconst initialProperties = {\n    variables,\n    margin: {\n        top: 50,\n        right: 60,\n        bottom: 50,\n        left: 60,\n    },\n    layout: commonDefaultProps.layout,\n    curve: commonDefaultProps.curve,\n    colors: commonDefaultProps.colors,\n    colorBy: commonDefaultProps.colorBy,\n    strokeWidth: 1,\n    lineOpacity: 0.2,\n    axesPlan: commonDefaultProps.axesPlan,\n    axesTicksPosition: commonDefaultProps.axesTicksPosition,\n    pixelRatio:\n        typeof window !== 'undefined' && window.devicePixelRatio ? window.devicePixelRatio : 1,\n}\n\nconst generateData = () => generateParallelCoordinatesData({ size: lineCount })\n\nconst ParallelCoordinatesCanvas = () => {\n    return (\n        <ComponentTemplate\n            name=\"ParallelCoordinatesCanvas\"\n            meta={meta.ParallelCoordinatesCanvas}\n            icon=\"parallel-coordinates\"\n            flavors={meta.flavors}\n            currentFlavor=\"canvas\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={commonDefaultProps}\n            propertiesMapper={mapper}\n            generateData={generateData}\n            getDataSize={() => lineCount}\n        >\n            {(properties, data, theme) => {\n                return (\n                    <ResponsiveParallelCoordinatesCanvas\n                        data={data}\n                        {...properties}\n                        theme={merge({}, theme, {\n                            axis: {\n                                ticks: {\n                                    line: {\n                                        strokeWidth: 2,\n                                        strokeLinecap: 'square',\n                                    },\n                                },\n                                domain: {\n                                    line: {\n                                        strokeWidth: 2,\n                                        strokeLinecap: 'square',\n                                    },\n                                },\n                            },\n                        })}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default ParallelCoordinatesCanvas\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useMemo } from 'react'\nimport { line } from 'd3-shape'\nimport { scaleLinear, scalePoint } from 'd3-scale'\nimport { curveFromProp } from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\n\nexport const computeParallelCoordinatesLayout = ({ width, height, data, variables, layout }) => {\n    const variablesScale = scalePoint()\n        .range(layout === 'horizontal' ? [0, width] : [height, 0])\n        .domain(variables.map(({ key }) => key))\n\n    const range = layout === 'horizontal' ? [height, 0] : [0, width]\n    const variablesWithScale = variables.map(variable => {\n        const allValues = new Set()\n        data.forEach(d => allValues.add(d[variable.key]))\n\n        let scale\n        if (variable.type === 'linear') {\n            const min =\n                variable.min !== undefined && variable.min !== 'auto'\n                    ? variable.min\n                    : Math.min(...Array.from(allValues))\n            const max =\n                variable.max !== undefined && variable.max !== 'auto'\n                    ? variable.max\n                    : Math.max(...Array.from(allValues))\n\n            scale = scaleLinear().rangeRound(range).domain([min, max])\n        }\n\n        if (variable.type === 'point') {\n            scale = scalePoint()\n                .range(range)\n                .domain(variable.values || allValues)\n\n            if (variable.padding !== undefined) {\n                scale.padding(variable.padding)\n            }\n        }\n\n        return {\n            ...variable,\n            scale,\n            values: Array.from(allValues),\n        }\n    })\n\n    const dataWithPoints = data.map((datum, index) => {\n        const points = variablesWithScale.map(variable => ({\n            x:\n                layout === 'horizontal'\n                    ? variablesScale(variable.key)\n                    : variable.scale(datum[variable.key]),\n            y:\n                layout === 'horizontal'\n                    ? variable.scale(datum[variable.key])\n                    : variablesScale(variable.key),\n        }))\n\n        return { index, ...datum, points }\n    })\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n    }\n}\n\nexport const computeAxisDensity = (variable, data) => {\n    let kernels\n    if (variable.type === 'point') {\n        kernels = data.reduce((acc, datum) => {\n            const value = datum[variable.key]\n            let kernel = acc.find(k => k.id === value)\n            if (kernel === undefined) {\n                kernel = { id: value, count: 0 }\n                acc.push(kernel)\n            }\n            kernel.count++\n\n            return acc\n        }, [])\n        kernels = variable.scale\n            .domain()\n            .map(d => kernels.find(k => k.id === d))\n            .filter(k => k !== undefined)\n    } else if (variable.type === 'linear') {\n        kernels = variable.scale.ticks(5).map((id, index, ticks) => {\n            if (index === 0) {\n                return {\n                    id,\n                    count: variable.values.filter(v => v <= id).length,\n                }\n            }\n\n            return {\n                id,\n                count: variable.values.filter(v => v > ticks[index - 1] && v <= id).length,\n            }\n        })\n    }\n\n    if (kernels !== undefined) {\n        const scale = scaleLinear()\n            .rangeRound([0, 60])\n            .domain([0, Math.max(...kernels.map(k => k.count))])\n\n        return kernels.map(k => ({\n            id: k.id,\n            position: variable.scale(k.id),\n            size: scale(k.count),\n        }))\n    }\n\n    return []\n}\n\nexport const useParallelCoordinates = ({\n    width,\n    height,\n    data,\n    variables,\n    layout,\n    colors,\n    curve,\n}) => {\n    const getLineColor = useOrdinalColorScale(colors, 'index')\n\n    const lineGenerator = useMemo(\n        () =>\n            line()\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n\n    const { variablesScale, variablesWithScale, dataWithPoints } = useMemo(\n        () =>\n            computeParallelCoordinatesLayout({\n                width,\n                height,\n                data,\n                variables,\n                layout,\n            }),\n        [width, height, data, variables, layout]\n    )\n\n    return {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        getLineColor,\n        lineGenerator,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { TableTooltip } from '@nivo/tooltip'\n\nconst ParallelCoordinatesLineTooltip = ({ data, variables }) => {\n    return (\n        <TableTooltip\n            rows={variables.map(variable => [\n                variable.key,\n                <strong>{data[variable.key]}</strong>, // eslint-disable-line react/jsx-key\n            ])}\n        />\n    )\n}\n\nParallelCoordinatesLineTooltip.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(ParallelCoordinatesLineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport ParallelCoordinatesLineTooltip from './ParallelCoordinatesLineTooltip'\n\nconst ParallelCoordinatesLine = ({\n    data,\n    variables,\n    lineGenerator,\n    points,\n    strokeWidth,\n    color,\n    opacity,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseHover = useCallback(\n        event => {\n            showTooltipFromEvent(\n                <ParallelCoordinatesLineTooltip data={data} variables={variables} />,\n                event\n            )\n        },\n        [data, variables]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        path: lineGenerator(points),\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedProps.path}\n            stroke={animatedProps.color}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            opacity={animatedProps.opacity}\n            fill=\"none\"\n            onMouseEnter={handleMouseHover}\n            onMouseMove={handleMouseHover}\n            onMouseLeave={hideTooltip}\n        />\n    )\n}\n\nParallelCoordinatesLine.propTypes = {\n    data: PropTypes.object.isRequired,\n    variables: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        })\n    ).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n}\n\nexport default memo(ParallelCoordinatesLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { SvgWrapper, useDimensions, withContainer } from '@nivo/core'\nimport { Axis } from '@nivo/axes'\nimport { svgPropTypes, svgDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\nimport ParallelCoordinatesLine from './ParallelCoordinatesLine'\n\nconst ParallelCoordinates = ({\n    data,\n    variables,\n    layout,\n    width,\n    height,\n    margin: partialMargin,\n    axesPlan,\n    axesTicksPosition,\n    strokeWidth,\n    lineOpacity,\n    curve,\n    colors,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        lineGenerator,\n        getLineColor,\n    } = useParallelCoordinates({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        variables,\n        layout,\n        colors,\n        curve,\n    })\n\n    const axes = variablesWithScale.map(variable => (\n        <Axis\n            key={variable.key}\n            axis={layout === 'horizontal' ? 'y' : 'x'}\n            length={layout === 'horizontal' ? innerHeight : innerWidth}\n            x={layout === 'horizontal' ? variablesScale(variable.key) : 0}\n            y={layout === 'horizontal' ? 0 : variablesScale(variable.key)}\n            scale={variable.scale}\n            ticksPosition={variable.ticksPosition || axesTicksPosition}\n            tickValues={variable.tickValues}\n            tickSize={variable.tickSize}\n            tickPadding={variable.tickPadding}\n            tickRotation={variable.tickRotation}\n            format={variable.tickFormat}\n            legend={variable.legend}\n            legendPosition={variable.legendPosition}\n            legendOffset={variable.legendOffset}\n        />\n    ))\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {axesPlan === 'background' && axes}\n            {dataWithPoints.map(datum => (\n                <ParallelCoordinatesLine\n                    key={datum.index}\n                    data={datum}\n                    variables={variables}\n                    lineGenerator={lineGenerator}\n                    points={datum.points}\n                    strokeWidth={strokeWidth}\n                    opacity={lineOpacity}\n                    color={getLineColor(datum)}\n                />\n            ))}\n            {axesPlan === 'foreground' && axes}\n        </SvgWrapper>\n    )\n}\n\nParallelCoordinates.propTypes = svgPropTypes\n\nconst WrappedParallelCoordinates = withContainer(ParallelCoordinates)\nWrappedParallelCoordinates.defaultProps = svgDefaultProps\n\nexport default WrappedParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinates from './ParallelCoordinates'\n\nconst ResponsiveParallelCoordinates = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ParallelCoordinates width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinates\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDimensions, useTheme, withContainer } from '@nivo/core'\nimport { renderAxisToCanvas } from '@nivo/axes'\nimport { commonPropTypes, commonDefaultProps } from './props'\nimport { useParallelCoordinates } from './hooks'\n\nconst ParallelCoordinatesCanvas = ({\n    data,\n    layout,\n    variables,\n    width,\n    height,\n    margin: partialMargin,\n    curve,\n    colors,\n    lineOpacity,\n    strokeWidth,\n    axesTicksPosition,\n    pixelRatio,\n}) => {\n    const canvasEl = useRef(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        variablesScale,\n        variablesWithScale,\n        dataWithPoints,\n        lineGenerator,\n        getLineColor,\n    } = useParallelCoordinates({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        variables,\n        layout,\n        colors,\n        curve,\n    })\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        lineGenerator.context(ctx)\n        dataWithPoints.forEach(datum => {\n            ctx.save()\n            ctx.globalAlpha = lineOpacity\n\n            ctx.beginPath()\n            lineGenerator(datum.points)\n            ctx.strokeStyle = getLineColor(datum)\n            ctx.lineWidth = strokeWidth\n            ctx.stroke()\n\n            ctx.restore()\n        })\n\n        variablesWithScale.map(variable => {\n            renderAxisToCanvas(ctx, {\n                axis: layout === 'horizontal' ? 'y' : 'x',\n                scale: variable.scale,\n                x: layout === 'horizontal' ? variablesScale(variable.key) : 0,\n                y: layout === 'horizontal' ? 0 : variablesScale(variable.key),\n                length: layout === 'horizontal' ? innerHeight : innerWidth,\n                ticksPosition: axesTicksPosition,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        lineGenerator,\n        getLineColor,\n        lineOpacity,\n        strokeWidth,\n        dataWithPoints,\n        variablesWithScale,\n        layout,\n        axesTicksPosition,\n        theme,\n        pixelRatio,\n    ])\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        />\n    )\n}\n\nParallelCoordinatesCanvas.propTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nconst WrappedParallelCoordinatesCanvas = withContainer(ParallelCoordinatesCanvas)\nWrappedParallelCoordinatesCanvas.defaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n\nexport default WrappedParallelCoordinatesCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ParallelCoordinatesCanvas from './ParallelCoordinatesCanvas'\n\nconst ResponsiveParallelCoordinatesCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => (\n            <ParallelCoordinatesCanvas width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveParallelCoordinatesCanvas\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { lineCurvePropKeys } from '@nivo/core'\nimport { commonDefaultProps as defaults } from '@nivo/parallel-coordinates'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\n\nconst props = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        type: 'Array<object | Array>',\n        required: true,\n    },\n    {\n        key: 'variables',\n        type: 'object[]',\n        help: 'Variables configuration.',\n        description: `\n            Variables configuration, define accessor (\\`key\\`)\n            and variable type. Type must be one of\n            \\`linear\\` or \\`point\\`, \\`linear\\`\n            variables are suitable for continuous numerical\n            data such as age or cost while\n            \\`point\\` variables are suitable for\n            discrete values such as gender.\n        `,\n        group: 'Variables',\n        controlType: 'array',\n        controlOptions: {\n            shouldCreate: false,\n            shouldRemove: false,\n            getItemTitle: (index, values) => `${values.key} (${values.type})`,\n            props: [\n                {\n                    key: 'key',\n                    help: 'Variable key, used to access to corresponding datum value.',\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'type',\n                    help: `Variable type, must be one of: 'linear', 'point'.`,\n                    controlType: 'text',\n                    controlOptions: {\n                        disabled: true,\n                    },\n                },\n                {\n                    key: 'min',\n                    help: 'Min value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Max value of linear scale.',\n                    type: `number | 'auto'`,\n                    controlType: 'switchableRange',\n                    controlOptions: {\n                        when: ({ type }) => type === 'linear',\n                        disabledValue: 'auto',\n                        defaultValue: 1000,\n                        min: -100,\n                        max: 100,\n                    },\n                },\n                // {\n                //     key: 'padding',\n                //     help: 'Outer padding (0~1).',\n                //     type: `number`,\n                //     controlType: 'range',\n                //     controlOptions: {\n                //         when: ({ type }) => type === 'point',\n                //         min: 0,\n                //         max: 1,\n                //         step: 0.01,\n                //     },\n                // },\n            ],\n        },\n    },\n    {\n        key: 'layout',\n        help: `Chart layout.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.layout,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        description: `\n            Defines the curve factory to use for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        controlType: 'choices',\n        group: 'Base',\n        controlOptions: {\n            choices: lineCurvePropKeys.map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'axesPlan',\n        help: `Axes plan.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesPlan,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'foreground', value: 'foreground' },\n                { label: 'background', value: 'background' },\n            ],\n        },\n    },\n    {\n        key: 'axesTicksPosition',\n        help: `Axes ticks position.`,\n        type: `string`,\n        required: false,\n        defaultValue: defaults.axesTicksPosition,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'before', value: 'before' },\n                { label: 'after', value: 'after' },\n            ],\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`ResponsiveParallelCoords\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'pixelRatio',\n        flavors: ['canvas'],\n        help: `Adjust pixel ratio, useful for HiDPI screens.`,\n        required: false,\n        defaultValue: 'Depends on device',\n        type: `number`,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 1,\n            max: 2,\n        },\n    },\n    {\n        key: 'margin',\n        help: 'Chart margin.',\n        type: 'object',\n        required: false,\n        controlType: 'margin',\n        group: 'Base',\n    },\n    themeProperty,\n    {\n        key: 'colors',\n        help: 'Defines color range.',\n        type: 'string | Function | string[]',\n        required: false,\n        defaultValue: defaults.colors,\n        controlType: 'ordinalColors',\n        group: 'Style',\n    },\n    {\n        key: 'strokeWidth',\n        help: 'Lines stroke width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.strokeWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'lineOpacity',\n        help: 'Lines opacity.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.lineOpacity,\n        controlType: 'opacity',\n        group: 'Style',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { settingsMapper } from '../../../lib/settings'\n\nexport default settingsMapper({})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport default [\n    {\n        key: 'temp',\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'temperature',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'cost',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        ticksPosition: 'before',\n        legend: 'cost',\n        legendPosition: 'start',\n        legendOffset: 20,\n    },\n    {\n        key: 'color',\n        type: 'point',\n        padding: 1,\n        values: ['red', 'yellow', 'green'],\n        legend: 'color',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'target',\n        type: 'point',\n        padding: 0,\n        values: ['A', 'B', 'C', 'D', 'E'],\n        legend: 'target',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n    {\n        key: 'volume',\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n        legend: 'volume',\n        legendPosition: 'start',\n        legendOffset: -20,\n    },\n]\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\nimport { textPropsByEngine } from '@nivo/core'\n\nexport const centerScale = scale => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return d => scale(d) + offset\n}\n\nconst timeByType = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = value =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = (scale, spec) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    // continuous scales\n    if (scale.ticks) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n\n        if (typeof spec === 'string') {\n            // time interval\n            const matches = spec.match(timeIntervalRegexp)\n            if (matches) {\n                // UTC is used as it's more predictible\n                // however local time could be used too\n                // let's see how it fits users' requirements\n                const timeType = timeByType[matches[2]][scale.useUTC ? 1 : 0]\n                if (matches[1] === undefined) {\n                    return scale.ticks(timeType)\n                }\n\n                return scale.ticks(timeType.every(Number(matches[1])))\n            }\n\n            throw new Error(`Invalid tickValues: ${spec}`)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n\nexport const computeCartesianTicks = ({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}) => {\n    const values = getScaleTicks(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    let translate\n    let textAlign = textProps.align.center\n    let textBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d), y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align.right\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align.left\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: value,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = (format, scale) => {\n    if (!format || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const f = timeFormat(format)\n        return d => f(new Date(d))\n    }\n\n    return d3Format(format)\n}\n\nexport const computeGridLines = ({ width, height, scale, axis, values: _values }) => {\n    const lineValues = Array.isArray(_values) ? _values : undefined\n    const lineCount = isInteger(_values) ? _values : undefined\n\n    const values = lineValues || getScaleTicks(scale, lineCount)\n\n    const position = scale.bandwidth ? centerScale(scale) : scale\n\n    let lines\n    if (axis === 'x') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: position(v),\n            x2: position(v),\n            y1: 0,\n            y2: height,\n        }))\n    } else if (axis === 'y') {\n        lines = values.map(v => ({\n            key: `${v}`,\n            x1: 0,\n            x2: width,\n            y1: position(v),\n            y2: position(v),\n        }))\n    }\n\n    return lines\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport { animated } from 'react-spring'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\n\nconst AxisTick = ({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}) => {\n    const theme = useTheme()\n\n    let value = _value\n    if (format !== undefined) {\n        value = format(value)\n    }\n\n    let gStyle = { opacity: animatedProps.opacity }\n    if (onClick) {\n        gStyle['cursor'] = 'pointer'\n    }\n\n    return (\n        <animated.g\n            transform={animatedProps.transform}\n            {...(onClick ? { onClick: e => onClick(e, value) } : {})}\n            style={gStyle}\n        >\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nAxisTick.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        .isRequired,\n    format: PropTypes.func,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    lineX: PropTypes.number.isRequired,\n    lineY: PropTypes.number.isRequired,\n    textX: PropTypes.number.isRequired,\n    textY: PropTypes.number.isRequired,\n    textBaseline: PropTypes.string.isRequired,\n    textAnchor: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    rotate: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    animatedProps: PropTypes.object.isRequired,\n}\nAxisTick.defaultProps = {\n    opacity: 1,\n    rotate: 0,\n}\n\nexport default memo(AxisTick)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, useTransition, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { axisPropTypes } from '../props'\nimport AxisTick from './AxisTick'\n\nconst defaultTickRenderer = props => <AxisTick {...props} />\n\nconst Axis = ({\n    axis,\n    scale,\n    x,\n    y,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    format,\n    renderTick,\n    legend,\n    legendPosition,\n    legendOffset,\n    onClick,\n    ariaHidden,\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transitions = useTransition(ticks, tick => tick.key, {\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transitions.map(({ item: tick, props: transitionProps, key }, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                    key,\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nAxis.propTypes = {\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    scale: PropTypes.func.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    length: PropTypes.number.isRequired,\n    ticksPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    tickValues: axisPropTypes.tickValues,\n    tickSize: PropTypes.number.isRequired,\n    tickPadding: PropTypes.number.isRequired,\n    tickRotation: PropTypes.number.isRequired,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func.isRequired,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n    legendOffset: PropTypes.number.isRequired,\n    onClick: PropTypes.func,\n    ariaHidden: PropTypes.bool,\n}\nAxis.defaultProps = {\n    x: 0,\n    y: 0,\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    renderTick: defaultTickRenderer,\n    legendPosition: 'end',\n    legendOffset: 0,\n}\n\nexport default memo(Axis)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Axis from './Axis'\nimport { axisPropType } from '../props'\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nconst Axes = ({ xScale, yScale, width, height, top, right, bottom, left }) => {\n    const axes = { top, right, bottom, left }\n\n    return positions.map(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n\n        return (\n            <Axis\n                key={position}\n                {...axis}\n                axis={isXAxis ? 'x' : 'y'}\n                x={position === 'right' ? width : 0}\n                y={position === 'bottom' ? height : 0}\n                scale={isXAxis ? xScale : yScale}\n                length={isXAxis ? width : height}\n                ticksPosition={ticksPosition}\n            />\n        )\n    })\n}\n\nAxes.propTypes = {\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    top: axisPropType,\n    right: axisPropType,\n    bottom: axisPropType,\n    left: axisPropType,\n}\n\nexport default memo(Axes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from 'react-spring'\nimport { useTheme } from '@nivo/core'\n\nconst GridLine = ({ animatedProps }) => {\n    const theme = useTheme()\n\n    return <animated.line {...animatedProps} {...theme.grid.line} />\n}\n\nGridLine.propTypes = {\n    x1: PropTypes.number.isRequired,\n    x2: PropTypes.number.isRequired,\n    y1: PropTypes.number.isRequired,\n    y2: PropTypes.number.isRequired,\n    animatedProps: PropTypes.object.isRequired,\n}\nGridLine.defaultProps = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n}\n\nexport default memo(GridLine)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTransition } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport GridLine from './GridLine'\n\nconst GridLines = ({ lines }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transitions = useTransition(lines, line => line.key, {\n        initial: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        from: line => ({\n            opacity: 0,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        enter: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        update: line => ({\n            opacity: 1,\n            x1: line.x1,\n            x2: line.x2,\n            y1: line.y1,\n            y2: line.y2,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <g>\n            {transitions.map(({ item: line, props: animatedProps, key }) => (\n                <GridLine {...line} key={key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n}\n\nGridLines.propTypes = {\n    type: PropTypes.oneOf(['x', 'y']).isRequired,\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            x1: PropTypes.number,\n            x2: PropTypes.number,\n            y1: PropTypes.number,\n            y2: PropTypes.number,\n        })\n    ).isRequired,\n}\n\nexport default memo(GridLines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport GridLines from './GridLines'\nimport { computeGridLines } from '../compute'\n\nconst Grid = ({ width, height, xScale, yScale, xValues, yValues }) => {\n    const xLines = useMemo(() => {\n        if (!xScale) return false\n\n        return computeGridLines({\n            width,\n            height,\n            scale: xScale,\n            axis: 'x',\n            values: xValues,\n        })\n    }, [xScale, xValues])\n\n    const yLines = yScale\n        ? computeGridLines({\n              width,\n              height,\n              scale: yScale,\n              axis: 'y',\n              values: yValues,\n          })\n        : false\n\n    return (\n        <>\n            {xLines && <GridLines type=\"x\" lines={xLines} />}\n            {yLines && <GridLines type=\"y\" lines={yLines} />}\n        </>\n    )\n}\n\nGrid.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    xValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    yValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n}\n\nexport default memo(Grid)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const degreesToRadians = degrees => (degrees * Math.PI) / 180\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { degreesToRadians } from './utils'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\n\nexport const renderAxisToCanvas = (\n    ctx,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontSize}px ${theme.axis.ticks.text.fontFamily}`\n\n    if (theme.axis.domain.line.strokeWidth > 0) {\n        ctx.lineWidth = theme.axis.domain.line.strokeWidth\n        ctx.lineCap = 'square'\n        ctx.strokeStyle = theme.axis.domain.line.stroke\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    ticks.forEach(tick => {\n        if (theme.axis.ticks.line.strokeWidth > 0) {\n            ctx.lineWidth = theme.axis.ticks.line.strokeWidth\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.axis.ticks.line.stroke\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format !== undefined ? format(tick.value) : tick.value\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n        ctx.fillStyle = theme.axis.ticks.text.fill\n        ctx.fillText(value, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n        ctx.fillStyle = theme.axis.legend.text.fill\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nconst positions = ['top', 'right', 'bottom', 'left']\n\nexport const renderAxesToCanvas = (\n    ctx,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position]\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = (ctx, { width, height, scale, axis, values }) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"sourceRoot":""}