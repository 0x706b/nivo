{"version":3,"file":"37919912ee6cbf0110551767ec6467a5c97ab2a4-eafd1611be03832708f3.js","mappings":"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","sources":["webpack://nivo-website/./src/data/components/heatmap/generator.ts","webpack://nivo-website/./src/data/components/heatmap/mapper.ts","webpack://nivo-website/./src/data/components/heatmap/props.ts","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/utils.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/AnnotationNote.tsx","webpack://nivo-website/../src/AnnotationLink.tsx","webpack://nivo-website/../src/CircleAnnotationOutline.tsx","webpack://nivo-website/../src/DotAnnotationOutline.tsx","webpack://nivo-website/../src/RectAnnotationOutline.tsx","webpack://nivo-website/../src/Annotation.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/HeatMapTooltip.tsx","webpack://nivo-website/../src/defaults.ts","webpack://nivo-website/../src/HeatMapCellRect.tsx","webpack://nivo-website/../src/HeatMapCellCircle.tsx","webpack://nivo-website/../src/HeatMapCells.tsx","webpack://nivo-website/../src/HeatMapCellAnnotations.tsx","webpack://nivo-website/../src/HeatMap.tsx","webpack://nivo-website/../src/ResponsiveHeatMap.tsx","webpack://nivo-website/../src/canvas.tsx","webpack://nivo-website/../src/HeatMapCanvas.tsx","webpack://nivo-website/../src/ResponsiveHeatMapCanvas.tsx","webpack://nivo-website/../src/svg/symbols/SymbolTriangle.tsx","webpack://nivo-website/../src/svg/ContinuousColorsLegendSvg.tsx","webpack://nivo-website/../src/svg/AnchoredContinuousColorsLegendSvg.tsx","webpack://nivo-website/../src/svg/LegendSvgItem.tsx","webpack://nivo-website/../src/svg/symbols/SymbolCircle.tsx","webpack://nivo-website/../src/svg/symbols/SymbolDiamond.tsx","webpack://nivo-website/../src/svg/symbols/SymbolSquare.tsx","webpack://nivo-website/../src/svg/LegendSvg.tsx","webpack://nivo-website/../src/svg/BoxLegendSvg.tsx","webpack://nivo-website/../node_modules/lodash/_baseFilter.js","webpack://nivo-website/../node_modules/lodash/filter.js"],"sourcesContent":["import { generateXYSeries, sets } from '@nivo/generators'\nimport { Data } from './types'\n\nexport const getLightData = () =>\n    generateXYSeries({\n        serieIds: ['Japan', 'France', 'US', 'Germany', 'Norway', 'Iceland', 'UK', 'Vietnam'],\n        x: {\n            values: ['Train', 'Subway', 'Bus', 'Car', 'Boat', 'Moto', 'Moped', 'Bicycle', 'Others'],\n        },\n        y: {\n            length: NaN,\n            min: -100_000,\n            max: 100_000,\n            round: true,\n        },\n    }) as Data\n\nexport const getHeavyData = () =>\n    generateXYSeries({\n        serieIds: sets.countryCodes.slice(0, 26),\n        x: {\n            values: sets.names,\n        },\n        y: {\n            length: NaN,\n            min: -100_000,\n            max: 100_000,\n            round: true,\n        },\n    }) as Data\n","import { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\nimport { SvgUnmappedProps, SvgMappedProps } from './types'\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n        legends: (legends: SvgUnmappedProps['legends'][number][]): SvgMappedProps['legends'] => {\n            return legends.map(legend => ({\n                ...legend,\n                tickFormat: mapFormat(legend.tickFormat),\n            }))\n        },\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","import { commonDefaultProps as defaults, svgDefaultProps as svgDefaults } from '@nivo/heatmap'\nimport { themeProperty, motionProperties, groupProperties } from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    chartGrid,\n    axes,\n    isInteractive,\n    commonAccessibilityProps,\n    annotations,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg', 'canvas', 'api']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data.',\n        type: 'HeatMapSerie<Datum, ExtraProps>[]',\n        required: true,\n        description: `\n        The default expected type is:\n        \n        \\`\\`\\`\n        {\n            id: string\n            data: {\n                x: string | number\n                y: number | null\n            }[]\n        }[]\n        \\`\\`\\`\n        \n        Please note that each serie **MUST** have the same length.\n        `,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        type: 'string | (value: number) => string | number',\n        control: { type: 'valueFormat' },\n    },\n    ...chartDimensions(allFlavors),\n    {\n        key: 'forceSquare',\n        help: 'Force square cells (width = height), please note that **padding is ignored**.',\n        defaultValue: defaults.forceSquare,\n        type: 'boolean',\n        control: { type: 'switch' },\n        group: 'Base',\n    },\n    {\n        key: 'xOuterPadding',\n        defaultValue: defaults.xOuterPadding,\n        type: 'number',\n        group: 'Base',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'xInnerPadding',\n        defaultValue: defaults.xInnerPadding,\n        type: 'number',\n        group: 'Base',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'yOuterPadding',\n        flavors: allFlavors,\n        defaultValue: defaults.yOuterPadding,\n        type: 'number',\n        group: 'Base',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'yInnerPadding',\n        defaultValue: defaults.yInnerPadding,\n        type: 'number',\n        group: 'Base',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: 0.05,\n        },\n    },\n    {\n        key: 'sizeVariation',\n        help: 'Optionally make the size of the cells vary depending on their value.',\n        description: `\n        To enable this feature, you can use the following config:\n        \n        \\`\\`\\`\n        interface SizeVariationConfig {\n            // use auto min/max values if unspecified\n            values?: [min: number, max: number]\n            // expressed as a range from 0~1\n            sizes: [min: number, max: number]\n        }\n        \\`\\`\\`\n        `,\n        defaultValue: defaults.sizeVariation,\n        type: 'false | SizeVariationConfig',\n        group: 'Base',\n    },\n    themeProperty(allFlavors),\n    {\n        key: 'colors',\n        group: 'Style',\n        type: 'ContinuousColorScaleConfig | ((datum) => string)',\n        defaultValue: defaults.colors,\n        control: {\n            type: 'continuous_colors',\n        },\n    },\n    {\n        key: 'emptyColor',\n        group: 'Style',\n        help: 'Color to use for cells not having a value.',\n        type: 'string',\n        defaultValue: defaults.emptyColor,\n        control: { type: 'colorPicker' },\n    },\n    {\n        key: 'opacity',\n        group: 'Style',\n        defaultValue: defaults.opacity,\n        type: 'number',\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'activeOpacity',\n        group: 'Style',\n        flavors: ['svg', 'canvas'],\n        defaultValue: defaults.activeOpacity,\n        type: 'number',\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'inactiveOpacity',\n        group: 'Style',\n        flavors: ['svg', 'canvas'],\n        defaultValue: defaults.inactiveOpacity,\n        type: 'number',\n        control: { type: 'opacity' },\n    },\n    {\n        key: 'borderRadius',\n        group: 'Style',\n        help: 'Cell border radius, when using `rect`.',\n        flavors: ['svg', 'api'],\n        defaultValue: svgDefaults.borderRadius,\n        type: 'number',\n        control: { type: 'range', min: 0, max: 16 },\n    },\n    {\n        key: 'borderWidth',\n        group: 'Style',\n        defaultValue: defaults.borderWidth,\n        type: 'number',\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'borderColor',\n        group: 'Style',\n        description: `\n            how to compute cell border color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'InheritedColorConfig<ComputedCell>',\n        defaultValue: defaults.borderColor,\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'enableLabels',\n        help: 'Enable/disable labels.',\n        type: 'boolean',\n        defaultValue: defaults.enableLabels,\n        control: { type: 'switch' },\n        group: 'Labels',\n    },\n    {\n        key: 'label',\n        help: 'Define what to use as a label.',\n        type: 'PropertyAccessor',\n        defaultValue: defaults.label,\n        group: 'Labels',\n    },\n    {\n        key: 'labelTextColor',\n        description: `\n            how to compute label text color,\n            [see dedicated documentation](self:/guides/colors).\n        `,\n        type: 'string | object | Function',\n        defaultValue: defaults.labelTextColor,\n        control: { type: 'inheritedColor' },\n        group: 'Labels',\n    },\n    ...chartGrid({\n        flavors: allFlavors,\n        xDefault: defaults.enableGridX,\n        yDefault: defaults.enableGridY,\n    }),\n    ...axes({ flavors: allFlavors }),\n    {\n        key: 'legends',\n        group: 'Legends',\n        help: 'Please note that **legends are ignored when using a custom function** for `colors`.',\n        type: `ContinuousColorsLegendProps[]`,\n        control: {\n            type: 'array',\n            shouldCreate: true,\n            shouldRemove: true,\n            defaults: {\n                anchor: 'center',\n                translateX: 0,\n                translateY: 0,\n                length: 320,\n                thickness: 8,\n                direction: 'row',\n                tickPosition: 'after',\n                tickSize: 3,\n                tickSpacing: 4,\n                tickOverlap: false,\n                tickFormat: { format: '>-.2s', enabled: true },\n                title: 'New Legend',\n                titleAlign: 'start',\n                titleOffset: 4,\n            },\n            props: [\n                {\n                    key: 'anchor',\n                    type: 'LegendAnchor',\n                    control: { type: 'boxAnchor' },\n                },\n                {\n                    key: 'translateX',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: -200,\n                        max: 200,\n                    },\n                },\n                {\n                    key: 'translateY',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: -200,\n                        max: 200,\n                    },\n                },\n                {\n                    key: 'length',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: 60,\n                        max: 500,\n                    },\n                },\n                {\n                    key: 'thickness',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: 6,\n                        max: 32,\n                    },\n                },\n                {\n                    key: 'direction',\n                    type: `'row' | 'column'`,\n                    control: {\n                        type: 'radio',\n                        choices: [\n                            {\n                                label: 'row',\n                                value: 'row',\n                            },\n                            {\n                                label: 'column',\n                                value: 'column',\n                            },\n                        ],\n                    },\n                },\n                {\n                    key: 'tickPosition',\n                    type: `'before' | 'after'`,\n                    control: {\n                        type: 'radio',\n                        choices: [\n                            {\n                                label: 'before',\n                                value: 'before',\n                            },\n                            {\n                                label: 'after',\n                                value: 'after',\n                            },\n                        ],\n                    },\n                },\n                {\n                    key: 'tickSize',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: 0,\n                        max: 12,\n                    },\n                },\n                {\n                    key: 'tickSpacing',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: 0,\n                        max: 12,\n                    },\n                },\n                {\n                    key: 'tickOverlap',\n                    type: 'boolean',\n                    control: { type: 'switch' },\n                },\n                {\n                    key: 'tickFormat',\n                    type: 'string | (value: number) => string | number',\n                    control: { type: 'valueFormat' },\n                },\n                {\n                    key: 'title',\n                    type: 'string',\n                    control: { type: 'text' },\n                },\n                {\n                    key: 'titleAlign',\n                    type: `'start' | 'middle' | 'end'`,\n                    control: {\n                        type: 'radio',\n                        columns: 3,\n                        choices: [\n                            {\n                                label: 'start',\n                                value: 'start',\n                            },\n                            {\n                                label: 'middle',\n                                value: 'middle',\n                            },\n                            {\n                                label: 'end',\n                                value: 'end',\n                            },\n                        ],\n                    },\n                },\n                {\n                    key: 'titleOffset',\n                    type: 'number',\n                    control: {\n                        type: 'range',\n                        min: 0,\n                        max: 12,\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'layers',\n        type: `('grid' | 'axes' | 'cells' | CustomLayer | CustomCanvasLayer)[]`,\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers, please use the appropriate variant for custom layers.',\n        defaultValue: defaults.layers,\n        flavors: ['svg', 'canvas'],\n    },\n    {\n        key: 'cellComponent',\n        group: 'Customization',\n        type: `'rect' | 'circle' | CellComponent`,\n        help: 'Cell component, the API does not support `CellComponent`.',\n        flavors: ['svg', 'api'],\n        defaultValue: 'rect',\n        control: {\n            type: 'choices',\n            choices: ['rect', 'circle'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'renderCell',\n        group: 'Customization',\n        type: `'rect' | 'circle' | CellCanvasRenderer`,\n        help: 'Cell renderer for canvas implementation.',\n        flavors: ['canvas'],\n        defaultValue: 'rect',\n        control: {\n            type: 'choices',\n            choices: ['rect', 'circle', 'customRenderCell'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    isInteractive({\n        flavors: ['svg', 'canvas'],\n        defaultValue: defaults.isInteractive,\n    }),\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'TooltipComponent',\n        help: 'Custom tooltip component.',\n        flavors: ['svg', 'canvas'],\n        description: `\n            An optional component allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the cell's data as a property.\n        `,\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: '(cell: ComputedCell, event: MouseEvent) => void',\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: '(cell: ComputedCell, event: MouseEvent) => void',\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        type: '(cell: ComputedCell, event: MouseEvent) => void',\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        type: '(cell: ComputedCell, event: MouseEvent) => void',\n    },\n    {\n        key: 'hoverTarget',\n        flavors: ['svg', 'canvas'],\n        help: 'Defines hover behavior.',\n        description: `\n            Defines hover behavior:\n\n            - **cell**: highlight the current cell\n            - **row**: highlight the current cell's row\n            - **column**: highlight the current cell's column\n            - **rowColumn**: highlight the current cell's row & column\n        `,\n        defaultValue: defaults.hoverTarget,\n        type: 'string',\n        group: 'Interactivity',\n        control: {\n            type: 'choices',\n            choices: ['cell', 'row', 'column', 'rowColumn'].map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    annotations({\n        target: 'nodes',\n        flavors: allFlavors,\n        createDefaults: {\n            type: 'rect',\n            match: { id: 'Germany.Bus' },\n            note: 'Bus in Germany',\n            noteX: 120,\n            noteY: -130,\n            offset: 6,\n            noteTextOffset: 5,\n        },\n    }),\n    ...commonAccessibilityProps(allFlavors),\n    ...motionProperties(['svg', 'canvas'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 13,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { HeatMapDatum, TooltipProps } from './types'\n\nconst NonMemoizedHeatMapTooltip = <Datum extends HeatMapDatum>({ cell }: TooltipProps<Datum>) => {\n    if (cell.formattedValue === null) return null\n\n    return (\n        <BasicTooltip\n            id={`${cell.serieId} - ${cell.data.x}`}\n            value={cell.formattedValue}\n            enableChip={true}\n            color={cell.color}\n        />\n    )\n}\n\nexport const HeatMapTooltip = memo(NonMemoizedHeatMapTooltip) as typeof NonMemoizedHeatMapTooltip\n","import { DefaultHeatMapDatum, HeatMapCommonProps, LayerId } from './types'\nimport { HeatMapTooltip } from './HeatMapTooltip'\n\nexport const commonDefaultProps: Omit<\n    HeatMapCommonProps<DefaultHeatMapDatum>,\n    | 'margin'\n    | 'theme'\n    | 'valueFormat'\n    | 'onClick'\n    | 'renderWrapper'\n    | 'role'\n    | 'ariaLabel'\n    | 'ariaLabelledBy'\n    | 'ariaDescribedBy'\n> & {\n    layers: LayerId[]\n} = {\n    layers: ['grid', 'axes', 'cells', 'legends', 'annotations'],\n\n    forceSquare: false,\n    xInnerPadding: 0,\n    xOuterPadding: 0,\n    yInnerPadding: 0,\n    yOuterPadding: 0,\n    sizeVariation: false,\n\n    opacity: 1,\n    activeOpacity: 1,\n    inactiveOpacity: 0.15,\n    borderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 0.8]] },\n\n    enableGridX: false,\n    enableGridY: false,\n\n    enableLabels: true,\n    label: 'formattedValue',\n    labelTextColor: { from: 'color', modifiers: [['darker', 2]] },\n\n    colors: {\n        type: 'sequential',\n        scheme: 'brown_blueGreen',\n    },\n    emptyColor: '#000000',\n\n    legends: [],\n    annotations: [],\n\n    isInteractive: true,\n    hoverTarget: 'rowColumn',\n    tooltip: HeatMapTooltip,\n\n    animate: true,\n    motionConfig: 'gentle' as const,\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n    axisTop: {},\n    axisRight: null,\n    axisBottom: null,\n    axisLeft: {},\n    borderRadius: 0,\n    cellComponent: 'rect' as const,\n}\n\nexport const canvasDefaultProps = {\n    ...commonDefaultProps,\n    axisTop: {},\n    axisRight: null,\n    axisBottom: null,\n    axisLeft: {},\n    renderCell: 'rect' as const,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","import { memo, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { CellComponentProps, HeatMapDatum } from './types'\n\nconst NonMemoizedHeatMapCellRect = <Datum extends HeatMapDatum>({\n    cell,\n    borderWidth,\n    borderRadius,\n    animatedProps,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    enableLabels,\n}: CellComponentProps<Datum>) => {\n    const theme = useTheme()\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: onMouseEnter ? onMouseEnter(cell) : undefined,\n            onMouseMove: onMouseMove ? onMouseMove(cell) : undefined,\n            onMouseLeave: onMouseLeave ? onMouseLeave(cell) : undefined,\n            onClick: onClick ? onClick(cell) : undefined,\n        }),\n        [cell, onMouseEnter, onMouseMove, onMouseLeave, onClick]\n    )\n\n    return (\n        <animated.g\n            data-testid={`cell.${cell.id}`}\n            style={{ cursor: 'pointer' }}\n            opacity={animatedProps.opacity}\n            {...handlers}\n            transform={to(\n                [animatedProps.x, animatedProps.y, animatedProps.scale],\n                (x, y, scale) => `translate(${x}, ${y}) scale(${scale})`\n            )}\n        >\n            <animated.rect\n                transform={to(\n                    [animatedProps.width, animatedProps.height],\n                    (width, height) => `translate(${width * -0.5}, ${height * -0.5})`\n                )}\n                key={cell.id}\n                fill={animatedProps.color}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                stroke={animatedProps.borderColor}\n                strokeWidth={borderWidth}\n                rx={borderRadius}\n                ry={borderRadius}\n            />\n            {enableLabels && (\n                <animated.text\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fill={animatedProps.labelTextColor}\n                    style={{\n                        ...theme.labels.text,\n                        fill: undefined,\n                        userSelect: 'none',\n                    }}\n                >\n                    {cell.label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n\nexport const HeatMapCellRect = memo(NonMemoizedHeatMapCellRect) as typeof NonMemoizedHeatMapCellRect\n","import { memo, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { HeatMapDatum, CellComponentProps } from './types'\n\nconst NonMemoizedHeatMapCellCircle = <Datum extends HeatMapDatum>({\n    cell,\n    borderWidth,\n    animatedProps,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    enableLabels,\n}: CellComponentProps<Datum>) => {\n    const theme = useTheme()\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: onMouseEnter ? onMouseEnter(cell) : undefined,\n            onMouseMove: onMouseMove ? onMouseMove(cell) : undefined,\n            onMouseLeave: onMouseLeave ? onMouseLeave(cell) : undefined,\n            onClick: onClick ? onClick(cell) : undefined,\n        }),\n        [cell, onMouseEnter, onMouseMove, onMouseLeave, onClick]\n    )\n\n    return (\n        <animated.g\n            data-testid={`cell.${cell.id}`}\n            style={{ cursor: 'pointer' }}\n            opacity={animatedProps.opacity}\n            {...handlers}\n            transform={to([animatedProps.x, animatedProps.y], (x, y) => `translate(${x}, ${y})`)}\n        >\n            <animated.circle\n                r={to(\n                    [animatedProps.width, animatedProps.height],\n                    (width, height) => Math.min(width, height) / 2\n                )}\n                fill={animatedProps.color}\n                fillOpacity={animatedProps.opacity}\n                strokeWidth={borderWidth}\n                stroke={animatedProps.borderColor}\n            />\n            {enableLabels && (\n                <animated.text\n                    dominantBaseline=\"central\"\n                    textAnchor=\"middle\"\n                    fill={animatedProps.labelTextColor}\n                    style={{\n                        ...theme.labels.text,\n                        fill: undefined,\n                    }}\n                >\n                    {cell.label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n\nexport const HeatMapCellCircle = memo(\n    NonMemoizedHeatMapCellCircle\n) as typeof NonMemoizedHeatMapCellCircle\n","import { createElement, MouseEvent, useMemo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    CellComponent,\n    ComputedCell,\n    HeatMapDatum,\n    HeatMapSvgProps,\n    CellAnimatedProps,\n} from './types'\nimport { HeatMapCellRect } from './HeatMapCellRect'\nimport { HeatMapCellCircle } from './HeatMapCellCircle'\n\ninterface HeatMapCellsProps<Datum extends HeatMapDatum, ExtraProps extends object> {\n    cells: ComputedCell<Datum>[]\n    cellComponent: NonNullable<HeatMapSvgProps<Datum, ExtraProps>['cellComponent']>\n    borderRadius: NonNullable<HeatMapSvgProps<Datum, ExtraProps>['borderRadius']>\n    borderWidth: NonNullable<HeatMapSvgProps<Datum, ExtraProps>['borderWidth']>\n    isInteractive: NonNullable<HeatMapSvgProps<Datum, ExtraProps>['isInteractive']>\n    setActiveCell: (cell: ComputedCell<Datum> | null) => void\n    onMouseEnter: HeatMapSvgProps<Datum, ExtraProps>['onMouseEnter']\n    onMouseMove: HeatMapSvgProps<Datum, ExtraProps>['onMouseMove']\n    onMouseLeave: HeatMapSvgProps<Datum, ExtraProps>['onMouseLeave']\n    onClick: HeatMapSvgProps<Datum, ExtraProps>['onClick']\n    tooltip: NonNullable<HeatMapSvgProps<Datum, ExtraProps>['tooltip']>\n    enableLabels: NonNullable<HeatMapSvgProps<Datum, ExtraProps>['enableLabels']>\n}\n\nconst enterTransition = <Datum extends HeatMapDatum>(cell: ComputedCell<Datum>) => ({\n    x: cell.x,\n    y: cell.y,\n    width: cell.width,\n    height: cell.height,\n    color: cell.color,\n    opacity: 0,\n    borderColor: cell.borderColor,\n    labelTextColor: cell.labelTextColor,\n    scale: 0,\n})\n\nconst regularTransition = <Datum extends HeatMapDatum>(cell: ComputedCell<Datum>) => ({\n    x: cell.x,\n    y: cell.y,\n    width: cell.width,\n    height: cell.height,\n    color: cell.color,\n    opacity: cell.opacity,\n    borderColor: cell.borderColor,\n    labelTextColor: cell.labelTextColor,\n    scale: 1,\n})\n\nconst exitTransition = <Datum extends HeatMapDatum>(cell: ComputedCell<Datum>) => ({\n    x: cell.x,\n    y: cell.y,\n    width: cell.width,\n    height: cell.height,\n    color: cell.color,\n    opacity: 0,\n    borderColor: cell.borderColor,\n    labelTextColor: cell.labelTextColor,\n    scale: 0,\n})\n\nexport const HeatMapCells = <Datum extends HeatMapDatum, ExtraProps extends object>({\n    cells,\n    cellComponent,\n    borderRadius,\n    borderWidth,\n    isInteractive,\n    setActiveCell,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    enableLabels,\n}: HeatMapCellsProps<Datum, ExtraProps>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<ComputedCell<Datum>, CellAnimatedProps>(cells, {\n        keys: (cell: ComputedCell<Datum>) => cell.id,\n        initial: regularTransition,\n        from: enterTransition,\n        enter: regularTransition,\n        update: regularTransition,\n        leave: exitTransition,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (cell: ComputedCell<Datum>) => (event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, { cell }), event)\n            setActiveCell(cell)\n            onMouseEnter?.(cell, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, setActiveCell, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (cell: ComputedCell<Datum>) => (event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, { cell }), event)\n            onMouseMove?.(cell, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, tooltip, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (cell: ComputedCell<Datum>) => (event: MouseEvent) => {\n            hideTooltip()\n            setActiveCell(null)\n            onMouseLeave?.(cell, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveCell, onMouseLeave])\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (cell: ComputedCell<Datum>) => (event: MouseEvent) => {\n            onClick?.(cell, event)\n        }\n    }, [isInteractive, onClick])\n\n    let Cell: CellComponent<Datum>\n    if (cellComponent === 'rect') {\n        Cell = HeatMapCellRect\n    } else if (cellComponent === 'circle') {\n        Cell = HeatMapCellCircle\n    } else {\n        Cell = cellComponent\n    }\n\n    return (\n        <>\n            {transition((animatedProps, cell) =>\n                createElement(Cell, {\n                    cell,\n                    borderRadius,\n                    borderWidth,\n                    animatedProps,\n                    enableLabels,\n                    onMouseEnter: handleMouseEnter,\n                    onMouseMove: handleMouseMove,\n                    onMouseLeave: handleMouseLeave,\n                    onClick: handleClick,\n                })\n            )}\n        </>\n    )\n}\n","import { Annotation } from '@nivo/annotations'\nimport { ComputedCell, HeatMapCommonProps, HeatMapDatum } from './types'\nimport { useCellAnnotations } from './hooks'\n\ninterface HeatMapCellAnnotationsProps<Datum extends HeatMapDatum> {\n    cells: ComputedCell<Datum>[]\n    annotations: NonNullable<HeatMapCommonProps<Datum>['annotations']>\n}\n\nexport const HeatMapCellAnnotations = <Datum extends HeatMapDatum>({\n    cells,\n    annotations,\n}: HeatMapCellAnnotationsProps<Datum>) => {\n    const boundAnnotations = useCellAnnotations<Datum>(cells, annotations)\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { ReactNode, Fragment, createElement, useMemo } from 'react'\nimport { SvgWrapper, Container, useDimensions } from '@nivo/core'\nimport { Axes, Grid } from '@nivo/axes'\nimport { AnchoredContinuousColorsLegendSvg } from '@nivo/legends'\nimport {\n    DefaultHeatMapDatum,\n    HeatMapDatum,\n    HeatMapCommonProps,\n    HeatMapSvgProps,\n    LayerId,\n    CustomLayerProps,\n} from './types'\nimport { useHeatMap } from './hooks'\nimport { svgDefaultProps } from './defaults'\nimport { HeatMapCells } from './HeatMapCells'\nimport { HeatMapCellAnnotations } from './HeatMapCellAnnotations'\n\ntype InnerHeatMapProps<Datum extends HeatMapDatum, ExtraProps extends object> = Omit<\n    HeatMapSvgProps<Datum, ExtraProps>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerHeatMap = <Datum extends HeatMapDatum, ExtraProps extends object>({\n    data,\n    layers = svgDefaultProps.layers,\n    valueFormat,\n    width,\n    height,\n    margin: partialMargin,\n    forceSquare = svgDefaultProps.forceSquare,\n    xInnerPadding = svgDefaultProps.xInnerPadding,\n    xOuterPadding = svgDefaultProps.xOuterPadding,\n    yInnerPadding = svgDefaultProps.yInnerPadding,\n    yOuterPadding = svgDefaultProps.yOuterPadding,\n    sizeVariation = svgDefaultProps.sizeVariation,\n    cellComponent = svgDefaultProps.cellComponent as NonNullable<\n        HeatMapSvgProps<Datum, ExtraProps>['cellComponent']\n    >,\n    opacity = svgDefaultProps.opacity,\n    activeOpacity = svgDefaultProps.activeOpacity,\n    inactiveOpacity = svgDefaultProps.inactiveOpacity,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor as HeatMapCommonProps<Datum>['borderColor'],\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    axisTop = svgDefaultProps.axisTop,\n    axisRight = svgDefaultProps.axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableLabels = svgDefaultProps.enableLabels,\n    label = svgDefaultProps.label as HeatMapCommonProps<Datum>['label'],\n    labelTextColor = svgDefaultProps.labelTextColor as HeatMapCommonProps<Datum>['labelTextColor'],\n    colors = svgDefaultProps.colors as HeatMapCommonProps<Datum>['colors'],\n    emptyColor = svgDefaultProps.emptyColor,\n    legends = svgDefaultProps.legends,\n    annotations = svgDefaultProps.annotations as HeatMapCommonProps<Datum>['annotations'],\n    isInteractive = svgDefaultProps.isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    hoverTarget = svgDefaultProps.hoverTarget,\n    tooltip = svgDefaultProps.tooltip as HeatMapCommonProps<Datum>['tooltip'],\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerHeatMapProps<Datum, ExtraProps>) => {\n    const {\n        margin: _margin,\n        innerWidth: _innerWidth,\n        innerHeight: _innerHeight,\n        outerWidth,\n        outerHeight,\n    } = useDimensions(width, height, partialMargin)\n\n    const {\n        width: innerWidth,\n        height: innerHeight,\n        offsetX,\n        offsetY,\n        xScale,\n        yScale,\n        cells,\n        colorScale,\n        activeCell,\n        setActiveCell,\n    } = useHeatMap<Datum, ExtraProps>({\n        data,\n        valueFormat,\n        width: _innerWidth,\n        height: _innerHeight,\n        forceSquare,\n        xInnerPadding,\n        xOuterPadding,\n        yInnerPadding,\n        yOuterPadding,\n        sizeVariation,\n        colors,\n        emptyColor,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        hoverTarget,\n    })\n\n    const margin = useMemo(\n        () => ({\n            ..._margin,\n            top: _margin.top + offsetY,\n            left: _margin.left + offsetX,\n        }),\n        [_margin, offsetX, offsetY]\n    )\n\n    const layerById: Record<LayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        cells: null,\n        legends: null,\n        annotations: null,\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth} // - offsetX * 2\n                height={innerHeight} // - offsetY * 2\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n            />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth} // - offsetX * 2\n                height={innerHeight} // - offsetY * 2\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('cells')) {\n        layerById.cells = (\n            <Fragment key=\"cells\">\n                <HeatMapCells<Datum, ExtraProps>\n                    cells={cells}\n                    cellComponent={cellComponent}\n                    borderRadius={borderRadius}\n                    borderWidth={borderWidth}\n                    isInteractive={isInteractive}\n                    setActiveCell={setActiveCell}\n                    onMouseEnter={onMouseEnter}\n                    onMouseMove={onMouseMove}\n                    onMouseLeave={onMouseLeave}\n                    onClick={onClick}\n                    tooltip={tooltip}\n                    enableLabels={enableLabels}\n                />\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('legends') && colorScale !== null) {\n        layerById.legends = (\n            <Fragment key=\"legends\">\n                {legends.map((legend, index) => (\n                    <AnchoredContinuousColorsLegendSvg\n                        {...legend}\n                        key={index}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        scale={colorScale}\n                    />\n                ))}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('annotations') && annotations.length > 0) {\n        layerById.annotations = (\n            <HeatMapCellAnnotations<Datum>\n                key=\"annotations\"\n                cells={cells}\n                annotations={annotations}\n            />\n        )\n    }\n\n    const customLayerProps: CustomLayerProps<Datum> = {\n        cells,\n        activeCell,\n        setActiveCell,\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={Object.assign({}, margin, {\n                top: margin.top, //+ offsetY,\n                left: margin.left, // + offsetX,\n            })}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const HeatMap = <\n    Datum extends HeatMapDatum = DefaultHeatMapDatum,\n    ExtraProps extends object = Record<string, never>\n>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: HeatMapSvgProps<Datum, ExtraProps>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerHeatMap<Datum, ExtraProps> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { DefaultHeatMapDatum, HeatMapDatum, HeatMapSvgProps } from './types'\nimport { HeatMap } from './HeatMap'\n\nexport const ResponsiveHeatMap = <\n    Datum extends HeatMapDatum = DefaultHeatMapDatum,\n    ExtraProps extends object = Record<string, never>\n>(\n    props: Omit<HeatMapSvgProps<Datum, ExtraProps>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => (\n            <HeatMap<Datum, ExtraProps> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { CellCanvasRendererProps, HeatMapDatum } from './types'\n\nexport const renderRect = <Datum extends HeatMapDatum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        cell: { x, y, width, height, color, borderColor, opacity, labelTextColor, label },\n        borderWidth,\n        enableLabels,\n        theme,\n    }: CellCanvasRendererProps<Datum>\n) => {\n    ctx.save()\n    ctx.globalAlpha = opacity\n\n    ctx.fillStyle = color\n    if (borderWidth > 0) {\n        ctx.strokeStyle = borderColor\n        ctx.lineWidth = borderWidth\n    }\n\n    ctx.fillRect(x - width / 2, y - height / 2, width, height)\n    if (borderWidth > 0) {\n        ctx.strokeRect(x - width / 2, y - height / 2, width, height)\n    }\n\n    if (enableLabels) {\n        ctx.fillStyle = labelTextColor\n        ctx.font = `${theme.labels.text.fontWeight ? `${theme.labels.text.fontWeight} ` : ''}${\n            theme.labels.text.fontSize\n        }px ${theme.labels.text.fontFamily}`\n        ctx.textAlign = 'center'\n        ctx.textBaseline = 'middle'\n        ctx.fillText(label, x, y)\n    }\n\n    ctx.restore()\n}\n\nexport const renderCircle = <Datum extends HeatMapDatum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        cell: { x, y, width, height, color, borderColor, opacity, labelTextColor, label },\n        borderWidth,\n        enableLabels,\n        theme,\n    }: CellCanvasRendererProps<Datum>\n) => {\n    ctx.save()\n    ctx.globalAlpha = opacity\n\n    const radius = Math.min(width, height) / 2\n\n    ctx.fillStyle = color\n    if (borderWidth > 0) {\n        ctx.strokeStyle = borderColor\n        ctx.lineWidth = borderWidth\n    }\n\n    ctx.beginPath()\n    ctx.arc(x, y, radius, 0, 2 * Math.PI)\n\n    ctx.fill()\n    if (borderWidth > 0) {\n        ctx.stroke()\n    }\n\n    if (enableLabels) {\n        ctx.fillStyle = labelTextColor\n        ctx.font = `${theme.labels.text.fontWeight ? `${theme.labels.text.fontWeight} ` : ''}${\n            theme.labels.text.fontSize\n        }px ${theme.labels.text.fontFamily}`\n        ctx.textAlign = 'center'\n        ctx.textBaseline = 'middle'\n        ctx.fillText(label, x, y)\n    }\n\n    ctx.restore()\n}\n","import { useEffect, useRef, useCallback, createElement, useMemo } from 'react'\nimport { getRelativeCursor, isCursorInRect, useDimensions, useTheme, Container } from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { useTooltip } from '@nivo/tooltip'\nimport { renderContinuousColorLegendToCanvas } from '@nivo/legends'\nimport { renderAnnotationsToCanvas, useComputedAnnotations } from '@nivo/annotations'\nimport { useHeatMap, useCellAnnotations } from './hooks'\nimport { renderRect, renderCircle } from './canvas'\nimport { canvasDefaultProps } from './defaults'\nimport {\n    CellCanvasRenderer,\n    DefaultHeatMapDatum,\n    HeatMapCanvasProps,\n    HeatMapCommonProps,\n    HeatMapDatum,\n    CellShape,\n    CustomLayerProps,\n} from './types'\n\ntype InnerNetworkCanvasProps<Datum extends HeatMapDatum, ExtraProps extends object> = Omit<\n    HeatMapCanvasProps<Datum, ExtraProps>,\n    'renderWrapper' | 'theme'\n>\n\nconst InnerHeatMapCanvas = <Datum extends HeatMapDatum, ExtraProps extends object>({\n    data,\n    layers = canvasDefaultProps.layers,\n    valueFormat,\n    width,\n    height,\n    margin: partialMargin,\n    xInnerPadding = canvasDefaultProps.xInnerPadding,\n    xOuterPadding = canvasDefaultProps.xOuterPadding,\n    yInnerPadding = canvasDefaultProps.yInnerPadding,\n    yOuterPadding = canvasDefaultProps.yOuterPadding,\n    forceSquare = canvasDefaultProps.forceSquare,\n    sizeVariation = canvasDefaultProps.sizeVariation,\n    renderCell: _renderCell = canvasDefaultProps.renderCell as CellShape,\n    opacity = canvasDefaultProps.opacity,\n    activeOpacity = canvasDefaultProps.activeOpacity,\n    inactiveOpacity = canvasDefaultProps.inactiveOpacity,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor = canvasDefaultProps.borderColor as HeatMapCommonProps<Datum>['borderColor'],\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    axisTop = canvasDefaultProps.axisTop,\n    axisRight = canvasDefaultProps.axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableLabels = canvasDefaultProps.enableLabels,\n    label = canvasDefaultProps.label as HeatMapCommonProps<Datum>['label'],\n    labelTextColor = canvasDefaultProps.labelTextColor as HeatMapCommonProps<Datum>['labelTextColor'],\n    colors = canvasDefaultProps.colors as HeatMapCommonProps<Datum>['colors'],\n    emptyColor = canvasDefaultProps.emptyColor,\n    legends = canvasDefaultProps.legends,\n    annotations = canvasDefaultProps.annotations as HeatMapCommonProps<Datum>['annotations'],\n    isInteractive = canvasDefaultProps.isInteractive,\n    onClick,\n    hoverTarget = canvasDefaultProps.hoverTarget,\n    tooltip = canvasDefaultProps.tooltip as HeatMapCommonProps<Datum>['tooltip'],\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    pixelRatio = canvasDefaultProps.pixelRatio,\n}: InnerNetworkCanvasProps<Datum, ExtraProps>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const {\n        margin: _margin,\n        innerWidth: _innerWidth,\n        innerHeight: _innerHeight,\n        outerWidth,\n        outerHeight,\n    } = useDimensions(width, height, partialMargin)\n\n    const {\n        width: innerWidth,\n        height: innerHeight,\n        offsetX,\n        offsetY,\n        xScale,\n        yScale,\n        cells,\n        colorScale,\n        activeCell,\n        setActiveCell,\n    } = useHeatMap<Datum, ExtraProps>({\n        data,\n        valueFormat,\n        width: _innerWidth,\n        height: _innerHeight,\n        xInnerPadding,\n        xOuterPadding,\n        yInnerPadding,\n        yOuterPadding,\n        forceSquare,\n        sizeVariation,\n        colors,\n        emptyColor,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        hoverTarget,\n    })\n\n    const margin = useMemo(\n        () => ({\n            ..._margin,\n            top: _margin.top + offsetY,\n            left: _margin.left + offsetX,\n        }),\n        [_margin, offsetX, offsetY]\n    )\n\n    const boundAnnotations = useCellAnnotations(cells, annotations)\n    const computedAnnotations = useComputedAnnotations({\n        annotations: boundAnnotations,\n    })\n\n    let renderCell: CellCanvasRenderer<Datum>\n    if (typeof _renderCell === 'function') {\n        renderCell = _renderCell\n    } else if (_renderCell === 'circle') {\n        renderCell = renderCircle\n    } else {\n        renderCell = renderRect\n    }\n\n    const theme = useTheme()\n\n    const customLayerProps: CustomLayerProps<Datum> = useMemo(\n        () => ({\n            cells,\n            activeCell,\n            setActiveCell,\n        }),\n        [cells, activeCell, setActiveCell]\n    )\n\n    useEffect(() => {\n        if (canvasEl.current === null) return\n\n        const ctx = canvasEl.current.getContext('2d')\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top) // + offsetX, margin.top + offsetY)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                ctx.lineWidth = theme.grid.line.strokeWidth as number\n                ctx.strokeStyle = theme.grid.line.stroke as string\n\n                if (enableGridX) {\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                    })\n                }\n                if (enableGridY) {\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                    })\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth, // - offsetX * 2,\n                    height: innerHeight, // - offsetY * 2,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'cells') {\n                ctx.textAlign = 'center'\n                ctx.textBaseline = 'middle'\n\n                cells.forEach(cell => {\n                    renderCell(ctx, { cell, borderWidth, enableLabels, theme })\n                })\n            } else if (layer === 'legends' && colorScale !== null) {\n                legends.forEach(legend => {\n                    renderContinuousColorLegendToCanvas(ctx, {\n                        ...legend,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        scale: colorScale,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, {\n                    annotations: computedAnnotations,\n                    theme,\n                })\n            } else if (typeof layer === 'function') {\n                layer(ctx, customLayerProps)\n            }\n        })\n    }, [\n        canvasEl,\n        pixelRatio,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        layers,\n        customLayerProps,\n        cells,\n        renderCell,\n        enableGridX,\n        enableGridY,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        xScale,\n        yScale,\n        theme,\n        borderWidth,\n        enableLabels,\n        colorScale,\n        legends,\n        computedAnnotations,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            if (canvasEl.current === null) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n            const cell = cells.find(c =>\n                isCursorInRect(\n                    c.x + margin.left - c.width / 2, // + offsetX - c.width / 2,\n                    c.y + margin.top - c.height / 2, //+ offsetY - c.height / 2,\n                    c.width,\n                    c.height,\n                    x,\n                    y\n                )\n            )\n            if (cell !== undefined) {\n                setActiveCell(cell)\n                showTooltipFromEvent(createElement(tooltip, { cell }), event)\n            } else {\n                setActiveCell(null)\n                hideTooltip()\n            }\n        },\n        [\n            canvasEl,\n            cells,\n            margin,\n            // offsetX,\n            // offsetY,\n            setActiveCell,\n            showTooltipFromEvent,\n            hideTooltip,\n            tooltip,\n        ]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setActiveCell(null)\n        hideTooltip()\n    }, [setActiveCell, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            if (activeCell === null) return\n\n            onClick?.(activeCell, event)\n        },\n        [activeCell, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n            role={role}\n            aria-label={ariaLabel}\n            aria-labelledby={ariaLabelledBy}\n            aria-describedby={ariaDescribedBy}\n        />\n    )\n}\n\nexport const HeatMapCanvas = <\n    Datum extends HeatMapDatum = DefaultHeatMapDatum,\n    ExtraProps extends object = Record<string, never>\n>({\n    theme,\n    isInteractive = canvasDefaultProps.isInteractive,\n    animate = canvasDefaultProps.animate,\n    motionConfig = canvasDefaultProps.motionConfig,\n    renderWrapper,\n    ...otherProps\n}: HeatMapCanvasProps<Datum, ExtraProps>) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme, renderWrapper }}>\n        <InnerHeatMapCanvas<Datum, ExtraProps> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { DefaultHeatMapDatum, HeatMapCanvasProps, HeatMapDatum } from './types'\nimport { HeatMapCanvas } from './HeatMapCanvas'\n\nexport const ResponsiveHeatMapCanvas = <\n    Datum extends HeatMapDatum = DefaultHeatMapDatum,\n    ExtraProps extends object = Record<string, never>\n>(\n    props: Omit<HeatMapCanvasProps<Datum, ExtraProps>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => (\n            <HeatMapCanvas<Datum, ExtraProps> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { Fragment } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { computeContinuousColorsLegend } from '../compute'\nimport { ContinuousColorsLegendProps } from '../types'\nimport { continuousColorsLegendDefaults } from '../defaults'\n\nexport const ContinuousColorsLegendSvg = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        ticks: computedTicks,\n        colorStops,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const theme = useTheme()\n\n    const id = `ContinuousColorsLegendSvgGradient.${direction}.${colorStops\n        .map(stop => stop.offset)\n        .join('_')}`\n\n    return (\n        <g>\n            <defs>\n                <linearGradient\n                    id={id}\n                    x1={gradientX1}\n                    y1={gradientY1}\n                    x2={gradientX2}\n                    y2={gradientY2}\n                >\n                    {colorStops.map(colorStop => (\n                        <stop {...colorStop} />\n                    ))}\n                </linearGradient>\n            </defs>\n            {titleText && (\n                <text\n                    transform={`translate(${titleX}, ${titleY}) rotate(${titleRotation})`}\n                    textAnchor={titleHorizontalAlign}\n                    dominantBaseline={titleVerticalAlign}\n                    style={theme.legends.title.text}\n                >\n                    {titleText}\n                </text>\n            )}\n            <rect width={width} height={height} fill={`url(#${id}`} />\n            {computedTicks.map((tick, index) => (\n                <Fragment key={index}>\n                    <line\n                        x1={tick.x1}\n                        y1={tick.y1}\n                        x2={tick.x2}\n                        y2={tick.y2}\n                        style={theme.legends.ticks.line}\n                    />\n                    <text\n                        x={tick.textX}\n                        y={tick.textY}\n                        textAnchor={tick.textHorizontalAlign}\n                        dominantBaseline={tick.textVerticalAlign}\n                        style={theme.legends.ticks.text}\n                    >\n                        {tick.text}\n                    </text>\n                </Fragment>\n            ))}\n        </g>\n    )\n}\n","import { AnchoredContinuousColorsLegendProps } from '../types'\nimport { computePositionFromAnchor } from '../compute'\nimport { continuousColorsLegendDefaults } from '../defaults'\nimport { ContinuousColorsLegendSvg } from './ContinuousColorsLegendSvg'\n\nexport const AnchoredContinuousColorsLegendSvg = ({\n    containerWidth,\n    containerHeight,\n    anchor,\n    translateX = 0,\n    translateY = 0,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    ...legendProps\n}: AnchoredContinuousColorsLegendProps) => {\n    let width: number\n    let height: number\n    if (direction === 'row') {\n        width = length\n        height = thickness\n    } else {\n        width = thickness\n        height = length\n    }\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <ContinuousColorsLegendSvg\n                length={length}\n                thickness={thickness}\n                direction={direction}\n                {...legendProps}\n            />\n        </g>\n    )\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n"],"names":["getLightData","generateXYSeries","serieIds","x","values","y","length","NaN","min","max","round","getHeavyData","sets","settingsMapper","valueFormat","mapFormat","axisTop","mapAxis","axisRight","axisBottom","axisLeft","legends","map","legend","tickFormat","exclude","allFlavors","props","key","group","help","type","required","description","control","chartDimensions","defaultValue","defaults","step","flavors","themeProperty","svgDefaults","chartGrid","xDefault","yDefault","axes","shouldCreate","shouldRemove","anchor","translateX","translateY","thickness","direction","tickPosition","tickSize","tickSpacing","tickOverlap","format","enabled","title","titleAlign","titleOffset","choices","label","value","columns","isInteractive","annotations","target","createDefaults","match","id","note","noteX","noteY","offset","noteTextOffset","commonAccessibilityProps","motionProperties","groups","groupProperties","defaultProps","isCircleAnnotation","annotationSpec","isDotAnnotation","isRectAnnotation","computeAnnotation","annotation","computedNoteX","computedNoteY","noteWidth","_isNumber","abs","Error","computedX","computedY","angle","sourceX","sourceY","targetX","targetY","Math","atan2","absoluteAngleDegrees","radiansToDegrees","getLinkAngle","position","positionFromAngle","degreesToRadians","size","eighth","height","width","textX","noteLineX","points","text","useAnnotations","data","getPosition","getDimensions","useMemo","reduce","acc","_filter","datum","dimensions","_omit","bindAnnotations","useComputedAnnotations","computed","AnnotationNote","theme","useTheme","useMotionConfig","animate","springConfig","config","animatedProps","useSpring","immediate","createElement","_jsxs","outlineWidth","_jsx","animated","style","strokeLinejoin","strokeWidth","stroke","outlineColor","omit","AnnotationLink","isOutline","path","firstPoint","animatedPath","useAnimatedPath","link","strokeLinecap","opacity","outlineOpacity","fill","d","CircleAnnotationOutline","radius","outline","circle","cx","cy","r","DotAnnotationOutline","dotSize","symbol","RectAnnotationOutline","borderRadius","rect","rx","ry","Annotation","useComputedAnnotation","noteType","isValidElement","isSvgNote","drawPoints","ctx","forEach","index","moveTo","lineTo","renderAnnotationsToCanvas","save","isCanvasNote","lineCap","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","font","fontSize","fontFamily","textAlign","textBaseline","lineJoin","strokeText","fillText","restore","computeCartesianTicks","translate","axis","scale","ticksPosition","tickValues","tickPadding","tickRotation","engine","getScaleTicks","textProps","textPropsByEngine","centerScale","line","lineX","lineY","textY","isRTL","document","dir","align","center","baseline","top","bottom","left","right","ticks","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","_values","Array","isArray","lines","x1","x2","y1","y2","memoizedAxisTick","memo","_value","onClick","textAnchor","cursor","event","g","transform","dominantBaseline","textTransform","memoizedAxis","renderTick","AxisTick","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","lineX2","lineY2","transition","useTransition","keys","t","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","React","rotate","domain","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","isXAxis","Axis","GridLine","grid","GridLines","_createElement","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","fontWeight","Number","String","renderAxesToCanvas","renderGridLinesToCanvas","commonDefaultProps","layers","forceSquare","xInnerPadding","xOuterPadding","yInnerPadding","yOuterPadding","sizeVariation","activeOpacity","inactiveOpacity","borderWidth","borderColor","modifiers","enableGridX","enableGridY","enableLabels","labelTextColor","colors","scheme","emptyColor","hoverTarget","tooltip","cell","formattedValue","BasicTooltip","serieId","enableChip","color","motionConfig","svgDefaultProps","cellComponent","canvasDefaultProps","renderCell","pixelRatio","window","devicePixelRatio","computeCells","_width","_height","xValuesSet","Set","allValues","cells","push","serie","add","rows","offsetX","offsetY","cellWidth","cellHeight","cellSize","computeLayout","castBandScale","scaleBand","range","paddingOuter","paddingInner","bandwidth","cellsWithPosition","minValue","maxValue","getCellAnnotationPosition","getCellAnnotationDimensions","useComputeCells","isHoverTargetByType","current","row","column","rowColumn","useCellsStyle","activeIds","getSize","scaleLinear","sizes","computeSizeScale","colorScale","getContinuousColorScale","getColor","useCallback","getBorderColor","useInheritedColor","getLabelTextColor","useValueFormatter","getLabel","usePropertyAccessor","computedOpacity","includes","sizeMultiplier","computedCell","useHeatMap","useState","activeCell","setActiveCell","isHoverTarget","filter","useCellAnnotations","HeatMapCellRect","onMouseEnter","onMouseMove","onMouseLeave","handlers","to","labels","userSelect","HeatMapCellCircle","fillOpacity","undefined","enterTransition","regularTransition","exitTransition","HeatMapCells","Cell","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","handleMouseMove","handleMouseLeave","handleClick","HeatMapCellAnnotations","boundAnnotations","i","InnerHeatMap","partialMargin","margin","role","ariaLabel","ariaLabelledBy","ariaDescribedBy","useDimensions","_margin","_innerWidth","innerWidth","_innerHeight","innerHeight","outerWidth","outerHeight","layerById","Fragment","AnchoredContinuousColorsLegendSvg","containerWidth","containerHeight","customLayerProps","SvgWrapper","Object","assign","layer","HeatMap","renderWrapper","otherProps","Container","ResponsiveHeatMap","ResponsiveWrapper","renderRect","globalAlpha","fillRect","strokeRect","renderCircle","InnerHeatMapCanvas","_renderCell","canvasEl","useRef","computedAnnotations","useEffect","getContext","background","renderContinuousColorLegendToCanvas","handleMouseHover","e","getRelativeCursor","find","isCursorInRect","c","ref","HeatMapCanvas","ResponsiveHeatMapCanvas","continuousColorsLegendDefaults","zeroPadding","computeDimensions","item","itemsSpacing","_padding","padding","itemCount","itemWidth","itemHeight","horizontalPadding","verticalPadding","spacing","computePositionFromAnchor","computeItemLayout","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","justify","symbolSize","symbolSpacing","computeContinuousColorsLegend","reverse","positionScale","thresholds","titleX","titleY","titleRotation","titleVerticalAlign","textVerticalAlign","textHorizontalAlign","colorStops","computeContinuousColorScaleColorStops","getValueFormatter","computedTicks","gradientY1","gradientX2","gradientX1","gradientY2","titleText","titleHorizontalAlign","ContinuousColorsLegendSvg","stop","join","colorStop","legendProps","symbolByShape","pointerEvents","diamond","square","triangle","LegendSvgItem","textColor","symbolShape","symbolBorderWidth","symbolBorderColor","toggleSerie","effects","setStyle","on","effect","some","handler","SymbolShape","itemOpacity","itemBackground","hidden","itemTextColor","LegendSvg","itemDirection","xStep","yStep","BoxLegendSvg","textAlignMapping","start","middle","end","renderLegendToCanvas","itemX","itemY","_ticks","initialStyles","gradient","createLinearGradient","addColorStop","stopColor","useQuantizeColorScaleLegendData","overriddenDomain","v","separator","items","domainValue","invertExtent","extent","LegendPropShape","isRequired","baseEach","module","exports","collection","predicate","result","arrayFilter","baseFilter","baseIteratee"],"sourceRoot":""}