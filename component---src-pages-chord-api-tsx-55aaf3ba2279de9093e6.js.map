{"version":3,"file":"component---src-pages-chord-api-tsx-55aaf3ba2279de9093e6.js","mappings":"+NAWMA,GAAOC,EAAAA,EAAAA,IAAkB,CAAEC,KAFb,IA2EpB,UAvEiB,WACb,IAE4CC,GAExCC,EAAAA,EAAAA,gBAAe,cAHfD,MACIE,gBAAmBC,gBAY3B,OACI,iCACI,SAAC,IAAD,CAAKC,MAAM,iBAAiBJ,MAAOA,EAAOK,SAAQ,UAAMC,EAAAA,GAAAA,KAAN,CAAuB,gBACzE,SAAC,IAAD,CACIC,cAAc,QACdC,WAAW,QACXC,QAAQ,gBACRC,QAASJ,EAAAA,GAETK,cAAeC,EAAAA,EACfC,YAAaC,EAAAA,EACbC,aAAc,CACVC,MAAO,IACPC,OAAQ,IACRpB,KAAMqB,KAAKC,UAAUtB,EAAKuB,OAAQ,KAAM,MACxCC,KAAMxB,EAAKwB,KACXC,OAAQ,CACJC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAEVC,SAAU,IACVC,iBAAkB,IAClBC,kBAAmB,IAEnBC,OAAQ,CAAEC,OAAQ,QAElBC,WAAY,EACZC,eAAgB,EAChBC,eAAgB,CACZC,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3BC,cAAe,GACfC,kBAAmB,EACnBC,kBAAmB,CACfJ,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU,MAG3BI,aAAa,EACbC,MAAO,KACPC,YAAa,GACbC,eAAgB,GAChBC,eAAgB,CACZT,KAAM,QACNC,UAAW,CAAC,CAAC,SAAU","sources":["webpack://nivo-website/./src/pages/chord/api.tsx"],"sourcesContent":["import React from 'react'\nimport { generateChordData } from '@nivo/generators'\nimport { Seo } from '../../components/Seo'\nimport { ApiClient } from '../../components/components/api-client/ApiClient'\nimport { groups } from '../../data/components/chord/props'\nimport mapper from '../../data/components/chord/mapper'\nimport meta from '../../data/components/chord/meta.yml'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst MATRIX_SIZE = 5\n\nconst data = generateChordData({ size: MATRIX_SIZE })\n\nconst ChordApi = () => {\n    const {\n        image: {\n            childImageSharp: { gatsbyImageData: image },\n        },\n    } = useStaticQuery(graphql`\n        query {\n            image: file(absolutePath: { glob: \"**/src/assets/captures/chord.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, width: 700, quality: 100)\n                }\n            }\n        }\n    `)\n\n    return (\n        <>\n            <Seo title=\"Chord HTTP API\" image={image} keywords={[...meta.Chord.tags, 'HTTP API']} />\n            <ApiClient\n                componentName=\"Chord\"\n                chartClass=\"chord\"\n                apiPath=\"/charts/chord\"\n                flavors={meta.flavors}\n                //dataProperty=\"matrix\"\n                controlGroups={groups}\n                propsMapper={mapper}\n                defaultProps={{\n                    width: 800,\n                    height: 800,\n                    data: JSON.stringify(data.matrix, null, '  '),\n                    keys: data.keys,\n                    margin: {\n                        top: 40,\n                        right: 40,\n                        bottom: 40,\n                        left: 40,\n                    },\n                    padAngle: 0.02,\n                    innerRadiusRatio: 0.96,\n                    innerRadiusOffset: 0.01,\n\n                    colors: { scheme: 'nivo' },\n\n                    arcOpacity: 1,\n                    arcBorderWidth: 1,\n                    arcBorderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.4]],\n                    },\n\n                    ribbonOpacity: 0.5,\n                    ribbonBorderWidth: 1,\n                    ribbonBorderColor: {\n                        from: 'color',\n                        modifiers: [['darker', 0.4]],\n                    },\n\n                    enableLabel: true,\n                    label: 'id',\n                    labelOffset: 12,\n                    labelRotation: -90,\n                    labelTextColor: {\n                        from: 'color',\n                        modifiers: [['darker', 1]],\n                    },\n                }}\n            />\n        </>\n    )\n}\n\nexport default ChordApi\n"],"names":["data","generateChordData","size","image","useStaticQuery","childImageSharp","gatsbyImageData","title","keywords","meta","componentName","chartClass","apiPath","flavors","controlGroups","groups","propsMapper","mapper","defaultProps","width","height","JSON","stringify","matrix","keys","margin","top","right","bottom","left","padAngle","innerRadiusRatio","innerRadiusOffset","colors","scheme","arcOpacity","arcBorderWidth","arcBorderColor","from","modifiers","ribbonOpacity","ribbonBorderWidth","ribbonBorderColor","enableLabel","label","labelOffset","labelRotation","labelTextColor"],"sourceRoot":""}