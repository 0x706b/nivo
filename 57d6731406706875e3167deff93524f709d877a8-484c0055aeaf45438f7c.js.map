{"version":3,"file":"57d6731406706875e3167deff93524f709d877a8-484c0055aeaf45438f7c.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-path/src/path.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/line.js","webpack://nivo-website/../node_modules/d3-shape/src/point.js","webpack://nivo-website/./src/data/components/line/defaults.ts","webpack://nivo-website/./src/data/components/line/generator.ts","webpack://nivo-website/./src/data/components/line/mapper.ts","webpack://nivo-website/./src/data/components/line/props.ts","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../src/svg/symbols/SymbolCircle.tsx","webpack://nivo-website/../src/svg/symbols/SymbolSquare.tsx","webpack://nivo-website/../src/svg/symbols/SymbolTriangle.tsx","webpack://nivo-website/../src/defaults.ts","webpack://nivo-website/../src/svg/ContinuousColorsLegendSvg.tsx","webpack://nivo-website/../src/svg/AnchoredContinuousColorsLegendSvg.tsx","webpack://nivo-website/../src/svg/LegendSvgItem.tsx","webpack://nivo-website/../src/svg/symbols/SymbolDiamond.tsx","webpack://nivo-website/../src/svg/LegendSvg.tsx","webpack://nivo-website/../src/svg/BoxLegendSvg.tsx","webpack://nivo-website/../src/hooks.ts"],"sourcesContent":["var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import { LineDefaultProps } from '@nivo/line'\n\nexport default {\n    width: 600,\n    height: 400,\n\n    margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60,\n    },\n\n    xScale: {\n        type: 'point',\n    },\n    xFormat: { format: '', enabled: false },\n    yScale: {\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        stacked: true,\n        reverse: false,\n    },\n    yFormat: { format: ' >-.2f', enabled: true },\n\n    curve: LineDefaultProps.curve,\n\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: false,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'transportation',\n        legendOffset: 36,\n        legendPosition: 'middle',\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'count',\n        legendOffset: -40,\n        legendPosition: 'middle',\n    },\n\n    enableGridX: LineDefaultProps.enableGridX,\n    enableGridY: LineDefaultProps.enableGridY,\n\n    colors: LineDefaultProps.colors,\n    lineWidth: 2,\n\n    enablePoints: true,\n    pointSize: 10,\n    pointColor: { theme: 'background' },\n    pointBorderWidth: 2,\n    pointBorderColor: { from: 'serieColor' },\n    enablePointLabel: LineDefaultProps.enablePointLabel,\n    pointLabel: LineDefaultProps.pointLabel,\n    pointLabelYOffset: -12,\n\n    enableArea: LineDefaultProps.enableArea,\n    areaBlendMode: LineDefaultProps.areaBlendMode,\n    areaBaselineValue: LineDefaultProps.areaBaselineValue,\n    areaOpacity: LineDefaultProps.areaOpacity,\n\n    isInteractive: LineDefaultProps.isInteractive,\n    enableSlices: false,\n    debugSlices: false,\n\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n","import range from 'lodash/range'\nimport { generateSeries } from '@nivo/generators'\n\nexport const generateLightDataSet = () => {\n    return generateSeries(\n        ['japan', 'france', 'us', 'germany', 'norway'],\n        [\n            'plane',\n            'helicopter',\n            'boat',\n            'train',\n            'subway',\n            'bus',\n            'car',\n            'moto',\n            'bicycle',\n            'horse',\n            'skateboard',\n            'others',\n        ]\n    )\n}\n\nexport const generateHeavyDataSet = () => {\n    return generateSeries(\n        [\n            'japan',\n            'brazil',\n            'france',\n            'us',\n            'germany',\n            'norway',\n            'china',\n            'algeria',\n            'mexico',\n            'finland',\n            'australia',\n        ],\n        range(121)\n    )\n}\n","import { settingsMapper, mapAxis, mapFormat } from '../../../lib/settings'\n\nexport default settingsMapper(\n    {\n        pointLabel: value => {\n            if (value === `d => \\`\\${d.x}: \\${d.y}\\``) return d => `${d.x}: ${d.y}`\n            return value\n        },\n        xFormat: mapFormat,\n        yFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n    },\n    {\n        exclude: ['enable axisTop', 'enable axisRight', 'enable axisBottom', 'enable axisLeft'],\n    }\n)\n","// @ts-ignore\nimport { lineCurvePropKeys } from '@nivo/core'\n// @ts-ignore\nimport { LineDefaultProps as defaults } from '@nivo/line'\nimport {\n    themeProperty,\n    motionProperties,\n    getLegendsProps,\n    groupProperties,\n    defsProperties,\n} from '../../../lib/componentProperties'\nimport {\n    chartDimensions,\n    ordinalColors,\n    blendMode,\n    chartGrid,\n    axes,\n    isInteractive,\n} from '../../../lib/chart-properties'\nimport { ChartProperty, Flavor } from '../../../types'\n\nconst allFlavors: Flavor[] = ['svg', 'canvas', 'api']\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Chart data.',\n        description: `\n            Chart data, which must conform to this structure:\n            \\`\\`\\`\n            Array<{\n                id:   string | number\n                data: Array<{\n                    x: number | string | Date\n                    y: number | string | Date\n                }>\n            }>\n            \\`\\`\\`\n        `,\n        required: true,\n        type: 'object[]',\n    },\n    {\n        key: 'xScale',\n        type: 'object',\n        flavors: allFlavors,\n        group: 'Base',\n        help: `X scale configuration.`,\n        required: false,\n        control: {\n            type: 'object',\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type.`,\n                    type: 'string',\n                    required: true,\n                    flavors: allFlavors,\n                    control: {\n                        type: 'choices',\n                        disabled: true,\n                        choices: ['linear', 'point'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'xFormat',\n        group: 'Base',\n        help: 'Optional formatter for x values.',\n        flavors: allFlavors,\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'Function | string',\n        control: { type: 'valueFormat' },\n    },\n    {\n        key: 'yScale',\n        type: 'object',\n        help: `Y scale configuration.`,\n        flavors: allFlavors,\n        group: 'Base',\n        required: false,\n        control: {\n            type: 'object',\n            props: [\n                {\n                    key: 'type',\n                    help: `Scale type.`,\n                    type: 'string',\n                    flavors: allFlavors,\n                    required: true,\n                    control: {\n                        type: 'choices',\n                        disabled: true,\n                        choices: ['linear', 'point'].map(v => ({\n                            label: v,\n                            value: v,\n                        })),\n                    },\n                },\n                {\n                    key: 'stacked',\n                    help: 'Enable/disable stacked mode.',\n                    flavors: allFlavors,\n                    type: 'boolean',\n                    required: false,\n                    control: { type: 'switch' },\n                },\n                {\n                    key: 'min',\n                    help: 'Minimum scale value.',\n                    flavors: allFlavors,\n                    required: false,\n                    type: `number | 'auto'`,\n                    control: {\n                        type: 'switchableRange',\n                        disabledValue: 'auto',\n                        defaultValue: 0,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n                {\n                    key: 'max',\n                    help: 'Maximum scale value.',\n                    flavors: allFlavors,\n                    required: false,\n                    type: `number | 'auto'`,\n                    control: {\n                        type: 'switchableRange',\n                        disabledValue: 'auto',\n                        defaultValue: 1200,\n                        min: -2000,\n                        max: 2000,\n                    },\n                },\n            ],\n        },\n    },\n    {\n        key: 'yFormat',\n        group: 'Base',\n        flavors: allFlavors,\n        help: 'Optional formatter for y values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n\n            If you use a time scale, you must provide a time format\n            as values are converted to Date objects.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'Function | string',\n        control: { type: 'valueFormat' },\n    },\n    ...chartDimensions(allFlavors),\n    {\n        key: 'curve',\n        help: 'Curve interpolation.',\n        flavors: allFlavors,\n        description: `\n            Defines the curve factory to use for the line generator.\n        `,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.curve,\n        group: 'Style',\n        control: {\n            type: 'choices',\n            choices: lineCurvePropKeys.map((key: string) => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    themeProperty(['svg', 'canvas', 'api']),\n    ordinalColors({\n        flavors: allFlavors,\n        defaultValue: defaults.colors,\n    }),\n    {\n        key: 'lineWidth',\n        help: 'Line width.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.lineWidth,\n        control: { type: 'lineWidth' },\n        group: 'Style',\n    },\n    {\n        key: 'enableArea',\n        help: 'Enable/disable area below each line.',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableArea,\n        control: { type: 'switch' },\n        group: 'Style',\n    },\n    {\n        key: 'areaBaselineValue',\n        help: 'Define the value to be used for area baseline.',\n        flavors: allFlavors,\n        description: `\n            Define the value to be used for area baseline.\n            Please note that this value isn't the\n            position of the baseline but the value used\n            to compute it.\n        `,\n        type: 'number | string | Date',\n        required: false,\n        defaultValue: defaults.areaBaselineValue,\n        group: 'Style',\n        control: {\n            type: 'range',\n            min: 0,\n            max: 200,\n            step: 10,\n        },\n    },\n    {\n        key: 'areaOpacity',\n        help: 'Area opacity (0~1), depends on enableArea.',\n        flavors: allFlavors,\n        required: false,\n        defaultValue: defaults.areaOpacity,\n        type: 'number',\n        control: { type: 'opacity' },\n        group: 'Style',\n    },\n    blendMode({\n        key: 'areaBlendMode',\n        target: 'areas',\n        flavors: ['svg'],\n        defaultValue: defaults.areaBlendMode,\n    }),\n    ...defsProperties('Style', ['svg']),\n    {\n        key: 'layers',\n        group: 'Customization',\n        type: '(string | Component)[]',\n        flavors: allFlavors,\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this property to insert extra layers\n            to the chart, this extra layer must be\n            a function which will receive the chart\n            computed data and must return a valid SVG element.\n        `,\n        required: false,\n        defaultValue: defaults.layers,\n    },\n    {\n        key: 'enablePoints',\n        help: 'Enable/disable points.',\n        flavors: allFlavors,\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enablePoints,\n        control: { type: 'switch' },\n        group: 'Points',\n    },\n    {\n        key: 'pointSymbol',\n        flavors: ['svg'],\n        help: 'Overrides default point circle. The function will receive `size`, `color`, `borderWidth` and `borderColor` props and must return a valid SVG element.',\n        type: 'Function',\n        required: false,\n        group: 'Points',\n    },\n    {\n        key: 'pointSize',\n        help: 'Size of the points.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.pointSize,\n        group: 'Points',\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: 2,\n            max: 20,\n        },\n    },\n    {\n        key: 'pointColor',\n        help: 'Method to compute points color.',\n        type: 'string | object | Function',\n        flavors: allFlavors,\n        required: false,\n        defaultValue: defaults.pointColor,\n        group: 'Points',\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'pointBorderWidth',\n        help: 'Width of the points border.',\n        flavors: allFlavors,\n        type: 'number',\n        required: false,\n        defaultValue: defaults.pointBorderWidth,\n        group: 'Points',\n        control: { type: 'lineWidth' },\n    },\n    {\n        key: 'pointBorderColor',\n        help: 'Method to compute points border color.',\n        flavors: allFlavors,\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.pointBorderColor,\n        group: 'Points',\n        control: { type: 'inheritedColor' },\n    },\n    {\n        key: 'enablePointLabel',\n        flavors: ['svg', 'api'],\n        group: 'Points',\n        help: 'Enable/disable points label.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enablePointLabel,\n        control: { type: 'switch' },\n    },\n    {\n        key: 'pointLabel',\n        flavors: ['svg', 'api'],\n        group: 'Points',\n        help: 'Property to use to determine point label. If a function is provided, it will receive current point data and should return the desired label.',\n        type: 'string',\n        required: false,\n        control: {\n            type: 'choices',\n            choices: ['y', 'yFormatted', 'x', 'xFormatted', `d => \\`\\${d.x}: \\${d.y}\\``].map(\n                choice => ({\n                    label: choice,\n                    value: choice,\n                })\n            ),\n        },\n    },\n    {\n        key: 'pointLabelYOffset',\n        flavors: ['svg', 'api'],\n        group: 'Points',\n        help: 'Label Y offset from point shape.',\n        type: 'number',\n        required: false,\n        defaultValue: -12,\n        control: {\n            type: 'range',\n            unit: 'px',\n            min: -24,\n            max: 24,\n        },\n    },\n    ...chartGrid({\n        flavors: allFlavors,\n        values: true,\n        xDefault: defaults.enableGridX,\n        yDefault: defaults.enableGridY,\n    }),\n    ...axes({ flavors: allFlavors }),\n    isInteractive({\n        flavors: ['svg', 'canvas'],\n        defaultValue: defaults.isInteractive,\n    }),\n    {\n        key: 'useMesh',\n        flavors: ['svg'],\n        help: 'Use a voronoi mesh to detect mouse interactions, enableSlices must be disabled',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.useMesh,\n        control: { type: 'switch' },\n        group: 'Interactivity',\n    },\n    {\n        key: 'debugMesh',\n        flavors: ['svg', 'canvas'],\n        help: 'Display mesh used to detect mouse interactions (voronoi cells).',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.debugMesh,\n        control: { type: 'switch' },\n        group: 'Interactivity',\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: `onMouseEnter handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: `onMouseMove handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `onMouseLeave handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `onClick handler, doesn't work with slice tooltip.`,\n        type: '(point, event) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `Custom point tooltip`,\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'enableSlices',\n        group: 'Interactivity',\n        flavors: ['svg'],\n        help: `Enable/disable slices tooltip for x or y axis, automatically disable mesh.`,\n        type: `'x' | 'y' | false`,\n        required: false,\n        defaultValue: defaults.enableSlicesTooltip,\n        control: {\n            type: 'choices',\n            choices: [\n                {\n                    label: 'false',\n                    value: false,\n                },\n                {\n                    label: 'x',\n                    value: 'x',\n                },\n                {\n                    label: 'y',\n                    value: 'y',\n                },\n            ],\n        },\n    },\n    {\n        key: 'debugSlices',\n        flavors: ['svg'],\n        help: 'Display area used to detect mouse interactions for slices.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.debugSlices,\n        control: { type: 'switch' },\n        group: 'Interactivity',\n    },\n    {\n        key: 'sliceTooltip',\n        flavors: ['svg', 'canvas'],\n        group: 'Interactivity',\n        help: `Custom slice tooltip`,\n        type: 'Function',\n        required: false,\n    },\n    {\n        key: 'enableCrosshair',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'Enable/disable crosshair.',\n        type: 'boolean',\n        required: false,\n        control: { type: 'switch' },\n        defaultValue: defaults.enableCrosshair,\n    },\n    {\n        key: 'crosshairType',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        required: false,\n        defaultValue: defaults.crosshairType,\n        help: `Crosshair type, forced to slices axis if enabled.`,\n        type: 'string',\n        control: {\n            type: 'choices',\n            disabled: true,\n            choices: [\n                'x',\n                'y',\n                'top-left',\n                'top',\n                'top-right',\n                'right',\n                'bottom-right',\n                'bottom',\n                'bottom-left',\n                'left',\n                'cross',\n            ].map(v => ({\n                label: v,\n                value: v,\n            })),\n        },\n    },\n    {\n        key: 'legends',\n        flavors: ['svg', 'canvas'],\n        type: 'object[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        required: false,\n        control: {\n            type: 'array',\n            props: getLegendsProps(['svg', 'canvas']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend: any) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                anchor: 'left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 4,\n                symbolSize: 20,\n                symbolShape: 'circle',\n                itemDirection: 'left-to-right',\n                itemTextColor: '#777',\n                onClick: (data: any) => {\n                    console.log(JSON.stringify(data, null, '    '))\n                },\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1,\n                        },\n                    },\n                ],\n            },\n        },\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n]\n\nexport const groups = groupProperties(props)\n","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { ContinuousColorsLegendProps } from './types'\n\nexport const continuousColorsLegendDefaults: {\n    length: NonNullable<ContinuousColorsLegendProps['length']>\n    thickness: NonNullable<ContinuousColorsLegendProps['thickness']>\n    direction: NonNullable<ContinuousColorsLegendProps['direction']>\n    tickPosition: NonNullable<ContinuousColorsLegendProps['tickPosition']>\n    tickSize: NonNullable<ContinuousColorsLegendProps['tickSize']>\n    tickSpacing: NonNullable<ContinuousColorsLegendProps['tickSpacing']>\n    tickOverlap: NonNullable<ContinuousColorsLegendProps['tickOverlap']>\n    tickFormat: NonNullable<ContinuousColorsLegendProps['tickFormat']>\n    titleAlign: NonNullable<ContinuousColorsLegendProps['titleAlign']>\n    titleOffset: NonNullable<ContinuousColorsLegendProps['titleOffset']>\n} = {\n    length: 200,\n    thickness: 16,\n    direction: 'row',\n    tickPosition: 'after',\n    tickSize: 4,\n    tickSpacing: 3,\n    tickOverlap: false,\n    tickFormat: (value: number) => `${value}`,\n    titleAlign: 'start',\n    titleOffset: 4,\n}\n","import { Fragment } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { computeContinuousColorsLegend } from '../compute'\nimport { ContinuousColorsLegendProps } from '../types'\nimport { continuousColorsLegendDefaults } from '../defaults'\n\nexport const ContinuousColorsLegendSvg = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        ticks: computedTicks,\n        colorStops,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const theme = useTheme()\n\n    const id = `ContinuousColorsLegendSvgGradient.${direction}.${colorStops\n        .map(stop => stop.offset)\n        .join('_')}`\n\n    return (\n        <g>\n            <defs>\n                <linearGradient\n                    id={id}\n                    x1={gradientX1}\n                    y1={gradientY1}\n                    x2={gradientX2}\n                    y2={gradientY2}\n                >\n                    {colorStops.map(colorStop => (\n                        <stop {...colorStop} />\n                    ))}\n                </linearGradient>\n            </defs>\n            {titleText && (\n                <text\n                    transform={`translate(${titleX}, ${titleY}) rotate(${titleRotation})`}\n                    textAnchor={titleHorizontalAlign}\n                    dominantBaseline={titleVerticalAlign}\n                    style={theme.legends.title.text}\n                >\n                    {titleText}\n                </text>\n            )}\n            <rect width={width} height={height} fill={`url(#${id}`} />\n            {computedTicks.map((tick, index) => (\n                <Fragment key={index}>\n                    <line\n                        x1={tick.x1}\n                        y1={tick.y1}\n                        x2={tick.x2}\n                        y2={tick.y2}\n                        style={theme.legends.ticks.line}\n                    />\n                    <text\n                        x={tick.textX}\n                        y={tick.textY}\n                        textAnchor={tick.textHorizontalAlign}\n                        dominantBaseline={tick.textVerticalAlign}\n                        style={theme.legends.ticks.text}\n                    >\n                        {tick.text}\n                    </text>\n                </Fragment>\n            ))}\n        </g>\n    )\n}\n","import { AnchoredContinuousColorsLegendProps } from '../types'\nimport { computePositionFromAnchor } from '../compute'\nimport { continuousColorsLegendDefaults } from '../defaults'\nimport { ContinuousColorsLegendSvg } from './ContinuousColorsLegendSvg'\n\nexport const AnchoredContinuousColorsLegendSvg = ({\n    containerWidth,\n    containerHeight,\n    anchor,\n    translateX = 0,\n    translateY = 0,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    ...legendProps\n}: AnchoredContinuousColorsLegendProps) => {\n    let width: number\n    let height: number\n    if (direction === 'row') {\n        width = length\n        height = thickness\n    } else {\n        width = thickness\n        height = length\n    }\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <ContinuousColorsLegendSvg\n                length={length}\n                thickness={thickness}\n                direction={direction}\n                {...legendProps}\n            />\n        </g>\n    )\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n\n        if (reverse) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse, separator, valueFormat])\n}\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","prototype","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","defined","context","curve","output","line","data","i","d","buffer","n","length","defined0","lineStart","lineEnd","point","arguments","p","width","height","margin","top","right","bottom","left","xScale","type","xFormat","format","enabled","yScale","min","max","stacked","reverse","yFormat","LineDefaultProps","axisTop","enable","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","axisRight","axisBottom","legendPosition","axisLeft","enableGridX","enableGridY","colors","lineWidth","enablePoints","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","enablePointLabel","pointLabel","pointLabelYOffset","enableArea","areaBlendMode","areaBaselineValue","areaOpacity","isInteractive","enableSlices","debugSlices","enableCrosshair","crosshairType","generateLightDataSet","generateSeries","generateHeavyDataSet","range","settingsMapper","value","mapFormat","mapAxis","exclude","allFlavors","props","key","group","flavors","help","description","required","control","disabled","choices","map","v","label","disabledValue","defaultValue","chartDimensions","defaults","lineCurvePropKeys","themeProperty","ordinalColors","step","blendMode","target","defsProperties","unit","choice","chartGrid","values","xDefault","yDefault","axes","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","index","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","symbolShape","itemDirection","itemTextColor","onClick","console","log","JSON","stringify","effects","on","style","itemBackground","itemOpacity","motionProperties","groups","groupProperties","computeCartesianTicks","axis","scale","ticksPosition","tickValues","engine","getScaleTicks","textProps","textPropsByEngine","position","centerScale","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","ticks","getFormatter","formatter","timeFormat","Date","d3Format","computeGridLines","_values","isArray","Array","lines","AxisTick","_value","textAnchor","animatedProps","useTheme","useMemo","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","keys","tick","initial","textTransform","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","isXAxis","GridLine","_jsx","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","ctx","Number","degreesToRadians","String","renderAxesToCanvas","renderGridLinesToCanvas","continuousColorsLegendDefaults","thickness","tickPosition","tickSpacing","tickOverlap","tickFormat","titleAlign","titleOffset","zeroPadding","computeDimensions","item","_padding","padding","itemCount","horizontalPadding","verticalPadding","spacing","computePositionFromAnchor","containerWidth","containerHeight","computeItemLayout","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","symbolSpacing","computeContinuousColorsLegend","title","domain","positionScale","scaleLinear","thresholds","titleX","titleY","titleRotation","titleVerticalAlign","textVerticalAlign","textHorizontalAlign","colorStops","computeContinuousColorScaleColorStops","getValueFormatter","computedTicks","gradientY1","gradientX2","forEach","push","gradientX1","gradientY2","titleText","titleHorizontalAlign","ContinuousColorsLegendSvg","id","stop","offset","join","_jsxDEV","colorStop","legends","fill","Fragment","AnchoredContinuousColorsLegendSvg","legendProps","symbolByShape","circle","size","borderWidth","borderColor","cx","cy","strokeWidth","stroke","pointerEvents","diamond","square","triangle","LegendSvgItem","textColor","background","symbolBorderWidth","symbolBorderColor","onMouseEnter","onMouseLeave","toggleSerie","useState","setStyle","handleMouseEnter","useCallback","filter","reduce","acc","effect","handleMouseLeave","some","handler","SymbolShape","e","React","color","hidden","symbol","userSelect","LegendSvg","xStep","yStep","BoxLegendSvg","textAlignMapping","start","middle","end","renderLegendToCanvas","save","font","fontSize","fontFamily","itemX","itemY","fillStyle","fillRect","fillText","restore","renderContinuousColorLegendToCanvas","_ticks","initialStyles","gradient","createLinearGradient","addColorStop","stopColor","fontWeight","strokeStyle","lineCap","beginPath","useQuantizeColorScaleLegendData","overriddenDomain","valueFormat","separator","items","domainValue","invertExtent","extent","LegendPropShape","isRequired"],"sourceRoot":""}