{"version":3,"sources":["webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../src/bump/compute.js","webpack:///../src/bump/hooks.js","webpack:///../src/bump/LineTooltip.js","webpack:///../src/bump/Point.js","webpack:///../src/bump/props.js","webpack:///../src/bump/Line.js","webpack:///../src/bump/LinesLabels.js","webpack:///../src/bump/Points.js","webpack:///../src/bump/Bump.js","webpack:///../src/bump/ResponsiveBump.js","webpack:///../src/area-bump/AreaTooltip.js","webpack:///../src/area-bump/props.js","webpack:///../src/area-bump/hooks.js","webpack:///../src/area-bump/compute.js","webpack:///../src/area-bump/Area.js","webpack:///../src/area-bump/AreasLabels.js","webpack:///../src/area-bump/AreaBump.js","webpack:///../src/area-bump/ResponsiveAreaBump.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","unsupportedIterableToArray","TypeError","nonIterableRest","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","useSerieDerivedProp","instruction","useMemo","useBump","width","height","data","interpolation","xPadding","xOuterPadding","yOuterPadding","lineWidth","activeLineWidth","inactiveLineWidth","colors","opacity","activeOpacity","inactiveOpacity","pointSize","activePointSize","inactivePointSize","pointColor","pointBorderWidth","activePointBorderWidth","inactivePointBorderWidth","pointBorderColor","isInteractive","currentSerie","xValues","serie","datum","xScale","scalePoint","yScale","linePointPadding","Math","series","rawSerie","points","linePoints","x","y","point","id","computeSeries","rawSeries","lineGenerator","d","useLineGenerator","getColor","useOrdinalColorScale","getSerieStyle","getLineWidth","getActiveLineWidth","getInactiveLineWidth","getOpacity","getActiveOpacity","getInactiveOpacity","getNormalStyle","getActiveStyle","getInactiveStyle","useSerieStyle","theme","useTheme","getPointColor","useInheritedColor","getPointBorderColor","getPointStyle","getSize","getActiveSize","getInactiveSize","getBorderWidth","getActiveBorderWidth","getInactiveBorderWidth","size","borderWidth","usePointStyle","pts","rawPoint","serieId","isActive","isInactive","LineTooltip","enableChip","color","memo","pointStyle","pointerEvents","Point","borderColor","useMotionConfig","animate","springConfig","animatedProps","useSpring","radius","config","immediate","cx","cy","r","to","v","fill","strokeWidth","stroke","style","BumpDefaultProps","PropTypes","isRequired","layers","ordinalColorsPropType","startLabel","startLabelPadding","startLabelTextColor","inheritedColorPropType","endLabel","endLabelPadding","endLabelTextColor","pointComponent","enableGridX","enableGridY","axisTop","axisRight","axisBottom","axisLeft","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","role","scheme","modifiers","motionConfig","Line","yStep","handlers","setCurrent","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","useCallback","event","handleMouseMove","handleMouseLeave","handleClick","useSerieHandlers","setCurrentSerie","linePath","animatedPath","useAnimatedPath","strokeLinecap","strokeOpacity","LinesLabels","getLabel","position","padding","labels","textAnchor","signedPadding","label","useSeriesLabels","useSprings","dominantBaseline","Points","Bump","props","partialMargin","useDimensions","margin","innerWidth","innerHeight","outerWidth","outerHeight","useState","layerById","grid","axes","top","right","bottom","left","lines","layer","withContainer","ResponsiveBump","AreaTooltip","AreaBumpDefaultProps","align","spacing","blendMode","blendModePropType","fillOpacity","activeFillOpacity","inactiveFillOpacity","defs","match","activeBorderWidth","inactiveBorderWidth","borderOpacity","activeBorderOpacity","inactiveBorderOpacity","useAreaBumpSeries","slices","maxSum","maxValues","total","values","Map","heightScale","scaleLinear","sliceHeight","offset","b","a","previousValues","all","pos","beforeValue","t","sliceValue","areaPointPadding","serieCopy","beforeHeight","y0","y1","useAreaBump","current","areaGenerator","useAreaGenerator","getFillOpacity","getActiveFillOpacity","getInactiveFillOpacity","getBorderColor","getBorderOpacity","getActiveBorderOpacity","getInactiveBorderOpacity","Area","mixBlendMode","AreasLabels","AreaBump","boundDefs","bindDefs","targetKey","areas","ResponsiveAreaBump"],"mappings":"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","file":"b276a4b74ec6c7f3d9d321f2bdee5b26e655f43e-3009af244fdb5717fcea.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint } from 'd3-scale'\n\nexport const computeSeries = ({ width, height, data, xPadding, xOuterPadding, yOuterPadding }) => {\n    let xValues = new Set()\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!xValues.has(datum.x)) {\n                xValues.add(datum.x)\n            }\n        })\n    })\n    xValues = Array.from(xValues)\n\n    const xScale = scalePoint().domain(xValues).range([0, width]).padding(xOuterPadding)\n\n    const yScale = scalePoint()\n        .domain(data.map((serie, i) => i + 1))\n        .range([0, height])\n        .padding(yOuterPadding)\n\n    const linePointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(rawSerie => {\n        const serie = {\n            ...rawSerie,\n            points: [],\n            linePoints: [],\n        }\n\n        rawSerie.data.forEach((datum, i) => {\n            let x = null\n            let y = null\n            if (datum.y !== null && datum.y !== undefined) {\n                x = xScale(datum.x)\n                y = yScale(datum.y)\n            }\n            const point = {\n                id: `${rawSerie.id}.${i}`,\n                serie: rawSerie,\n                data: datum,\n                x,\n                y,\n            }\n            serie.points.push(point)\n\n            // only add pre transition point if the datum is not empty\n            if (x !== null) {\n                if (i === 0) {\n                    serie.linePoints.push([0, point.y])\n                } else {\n                    serie.linePoints.push([point.x - linePointPadding, point.y])\n                }\n            }\n\n            serie.linePoints.push([point.x, point.y])\n\n            // only add post transition point if the datum is not empty\n            if (x !== null) {\n                if (i === rawSerie.data.length - 1 && x) {\n                    serie.linePoints.push([width, point.y])\n                } else {\n                    serie.linePoints.push([point.x + linePointPadding, point.y])\n                }\n            }\n\n            // remove points having null coordinates\n            serie.points = serie.points.filter(point => point.x !== null)\n        })\n\n        return serie\n    })\n\n    return {\n        series,\n        xScale,\n        yScale,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport { line as d3Line, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { computeSeries } from './compute'\n\nexport const useLineGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Line()\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n                .defined(d => d[0] !== null && d[1] !== null),\n\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getLineWidth = useSerieDerivedProp(lineWidth)\n    const getActiveLineWidth = useSerieDerivedProp(activeLineWidth)\n    const getInactiveLineWidth = useSerieDerivedProp(inactiveLineWidth)\n\n    const getOpacity = useSerieDerivedProp(opacity)\n    const getActiveOpacity = useSerieDerivedProp(activeOpacity)\n    const getInactiveOpacity = useSerieDerivedProp(inactiveOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            lineWidth: getLineWidth(serie),\n            opacity: getOpacity(serie),\n        }),\n        [getLineWidth, getOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getActiveLineWidth(serie),\n            opacity: getActiveOpacity(serie),\n        }),\n        [getActiveLineWidth, getActiveOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            lineWidth: getInactiveLineWidth(serie),\n            opacity: getInactiveOpacity(serie),\n        }),\n        [getInactiveLineWidth, getInactiveOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (currentSerie === null) return getNormalStyle(serie)\n            if (serie.id === currentSerie) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const usePointStyle = ({\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    isInteractive,\n    currentSerie,\n}) => {\n    const getSize = useSerieDerivedProp(pointSize)\n    const getActiveSize = useSerieDerivedProp(activePointSize)\n    const getInactiveSize = useSerieDerivedProp(inactivePointSize)\n\n    const getBorderWidth = useSerieDerivedProp(pointBorderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activePointBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactivePointBorderWidth)\n\n    const getNormalStyle = useMemo(\n        () => point => ({\n            size: getSize(point),\n            borderWidth: getBorderWidth(point),\n        }),\n        [getSize, getBorderWidth]\n    )\n    const getActiveStyle = useMemo(\n        () => point => ({\n            size: getActiveSize(point),\n            borderWidth: getActiveBorderWidth(point),\n        }),\n        [getActiveSize, getActiveBorderWidth]\n    )\n    const getInactiveStyle = useMemo(\n        () => point => ({\n            size: getInactiveSize(point),\n            borderWidth: getInactiveBorderWidth(point),\n        }),\n        [getInactiveSize, getInactiveBorderWidth]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return point => {\n            if (currentSerie === null) return getNormalStyle(point)\n            if (point.serieId === currentSerie) return getActiveStyle(point)\n            return getInactiveStyle(point)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, currentSerie])\n}\n\nexport const useBump = ({\n    width,\n    height,\n    data,\n    interpolation,\n    xPadding,\n    xOuterPadding,\n    yOuterPadding,\n    lineWidth,\n    activeLineWidth,\n    inactiveLineWidth,\n    colors,\n    opacity,\n    activeOpacity,\n    inactiveOpacity,\n    pointSize,\n    activePointSize,\n    inactivePointSize,\n    pointColor,\n    pointBorderWidth,\n    activePointBorderWidth,\n    inactivePointBorderWidth,\n    pointBorderColor,\n    isInteractive,\n    currentSerie,\n}) => {\n    const { series: rawSeries, xScale, yScale } = useMemo(\n        () =>\n            computeSeries({\n                width,\n                height,\n                data,\n                xPadding,\n                xOuterPadding,\n                yOuterPadding,\n            }),\n        [width, height, data, xPadding, xOuterPadding, yOuterPadding]\n    )\n\n    const lineGenerator = useLineGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        isInteractive,\n        currentSerie,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                serie.color = getColor(serie)\n                serie.style = getSerieStyle(serie)\n\n                return serie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const getPointStyle = usePointStyle({\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        isInteractive,\n        currentSerie,\n    })\n    const points = useMemo(() => {\n        const pts = []\n        series.forEach(serie => {\n            serie.points.forEach(rawPoint => {\n                const point = {\n                    ...rawPoint,\n                    serie,\n                    serieId: serie.id,\n                    isActive: currentSerie === serie.id,\n                    isInactive: currentSerie !== null && currentSerie !== serie.id,\n                }\n                point.color = getPointColor(point)\n                point.borderColor = getPointBorderColor(point)\n                point.style = getPointStyle({ ...point, serie })\n                pts.push(point)\n            })\n        })\n\n        return pts\n    }, [series, getPointColor, getPointBorderColor, getPointStyle, currentSerie])\n\n    return {\n        xScale,\n        yScale,\n        series,\n        points,\n        lineGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color, getLabel }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        const labels = []\n        series.forEach(serie => {\n            let label = serie.id\n            if (typeof getLabel === 'function') {\n                label = getLabel(serie)\n            }\n\n            const point =\n                position === 'start'\n                    ? serie.linePoints[0]\n                    : serie.linePoints[serie.linePoints.length - 1]\n\n            // exclude labels for series having missing data at the beginning/end\n            if (point[0] === null || point[1] === null) {\n                return\n            }\n\n            labels.push({\n                id: serie.id,\n                label,\n                x: point[0] + signedPadding,\n                y: point[1],\n                color: getColor(serie),\n                opacity: serie.style.opacity,\n                serie,\n                textAnchor,\n            })\n        })\n\n        return labels\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LineTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nLineTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(LineTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated, to } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\n\nconst pointStyle = { pointerEvents: 'none' }\n\nconst Point = ({ x, y, size, color, borderColor, borderWidth }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        color,\n        borderWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            r={to(animatedProps.radius, v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            strokeWidth={animatedProps.borderWidth}\n            stroke={borderColor}\n            style={pointStyle}\n        />\n    )\n}\n\nPoint.propTypes = {\n    data: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    isActive: PropTypes.bool.isRequired,\n    isInactive: PropTypes.bool.isRequired,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n}\n\nexport default memo(Point)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport LineTooltip from './LineTooltip'\nimport Point from './Point'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['grid', 'axes', 'labels', 'lines', 'points']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    xPadding: PropTypes.number.isRequired,\n    xOuterPadding: PropTypes.number.isRequired,\n    yOuterPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    lineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    opacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activeOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactiveOpacity: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    pointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointColor: inheritedColorPropType.isRequired,\n    pointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    activePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    inactivePointBorderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    pointBorderColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const BumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    layers: ['grid', 'axes', 'labels', 'lines', 'points'],\n\n    interpolation: 'smooth',\n    xPadding: 0.6,\n    xOuterPadding: 0.5,\n    yOuterPadding: 0.5,\n\n    colors: { scheme: 'nivo' },\n    lineWidth: 2,\n    activeLineWidth: 4,\n    inactiveLineWidth: 1,\n    opacity: 1,\n    activeOpacity: 1,\n    inactiveOpacity: 0.3,\n\n    startLabel: false,\n    startLabelPadding: 16,\n    startLabelTextColor: { from: 'color' },\n    endLabel: 'id',\n    endLabelPadding: 16,\n    endLabelTextColor: { from: 'color' },\n\n    pointSize: 6,\n    activePointSize: 8,\n    inactivePointSize: 4,\n    pointColor: { from: 'serie.color' },\n    pointBorderWidth: 0,\n    activePointBorderWidth: 0,\n    inactivePointBorderWidth: 0,\n    pointBorderColor: { from: 'serie.color', modifiers: [['darker', 1.4]] },\n\n    enableGridX: true,\n    enableGridY: true,\n    axisTop: {},\n    axisBottom: {},\n    axisLeft: {},\n\n    isInteractive: true,\n    tooltip: LineTooltip,\n}\n\nexport const BumpDefaultProps = {\n    ...commonDefaultProps,\n    pointComponent: Point,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { useSerieHandlers } from './hooks'\n\nconst Line = ({\n    serie,\n    lineGenerator,\n    yStep,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const linePath = lineGenerator(serie.linePoints)\n\n    const animatedPath = useAnimatedPath(linePath)\n    const animatedProps = useSpring({\n        color: serie.color,\n        opacity: serie.style.opacity,\n        lineWidth: serie.style.lineWidth,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            <animated.path\n                fill=\"none\"\n                d={animatedPath}\n                stroke={animatedProps.color}\n                strokeWidth={animatedProps.lineWidth}\n                strokeLinecap=\"round\"\n                strokeOpacity={animatedProps.opacity}\n                style={{ pointerEvents: 'none' }}\n            />\n            {isInteractive && (\n                <path\n                    fill=\"none\"\n                    stroke=\"red\"\n                    strokeOpacity={0}\n                    strokeWidth={yStep}\n                    d={linePath}\n                    strokeLinecap=\"butt\"\n                    onMouseEnter={handlers.onMouseEnter}\n                    onMouseMove={handlers.onMouseMove}\n                    onMouseLeave={handlers.onMouseLeave}\n                    onClick={handlers.onClick}\n                />\n            )}\n        </>\n    )\n}\n\nLine.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        linePoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            lineWidth: PropTypes.number.isRequired,\n            opacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n    yStep: PropTypes.number.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { useSeriesLabels } from './hooks'\n\nconst LinesLabels = ({ series, getLabel, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        getLabel,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.label}\n            </animated.text>\n        )\n    })\n}\n\nLinesLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    getLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(LinesLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Points = ({ pointComponent, points }) => {\n    return points.map(point => {\n        return React.createElement(pointComponent, {\n            key: point.id,\n            data: point.data,\n            x: point.x,\n            y: point.y,\n            isActive: point.isActive,\n            isInactive: point.isInactive,\n            size: point.style.size,\n            color: point.color,\n            borderColor: point.borderColor,\n            borderWidth: point.style.borderWidth,\n        })\n    })\n}\n\nPoints.propTypes = {\n    pointComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.object.isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            isActive: PropTypes.bool.isRequired,\n            isInactive: PropTypes.bool.isRequired,\n            color: PropTypes.string.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            style: PropTypes.shape({\n                size: PropTypes.number.isRequired,\n                borderWidth: PropTypes.number.isRequired,\n            }).isRequired,\n        })\n    ).isRequired,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useState, Fragment } from 'react'\nimport { withContainer, useDimensions, SvgWrapper } from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { useBump } from './hooks'\nimport { BumpPropTypes, BumpDefaultProps } from './props'\nimport Line from './Line'\nimport LinesLabels from './LinesLabels'\nimport Points from './Points'\n\nconst Bump = props => {\n    const {\n        data,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n\n        colors,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        pointComponent,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { series, points, xScale, yScale, lineGenerator } = useBump({\n        width: innerWidth,\n        height: innerHeight,\n        data,\n        interpolation,\n        xPadding,\n        xOuterPadding,\n        yOuterPadding,\n        lineWidth,\n        activeLineWidth,\n        inactiveLineWidth,\n        colors,\n        opacity,\n        activeOpacity,\n        inactiveOpacity,\n        pointSize,\n        activePointSize,\n        inactivePointSize,\n        pointColor,\n        pointBorderWidth,\n        activePointBorderWidth,\n        inactivePointBorderWidth,\n        pointBorderColor,\n        startLabel,\n        endLabel,\n        isInteractive,\n        currentSerie,\n    })\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        labels: [],\n        lines: (\n            <Fragment key=\"lines\">\n                {series.map(serie => (\n                    <Line\n                        key={serie.id}\n                        serie={serie}\n                        currentSerie={currentSerie}\n                        setCurrentSerie={setCurrentSerie}\n                        lineGenerator={lineGenerator}\n                        yStep={yScale.step()}\n                        margin={margin}\n                        isInteractive={isInteractive}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n        points: <Points key=\"points\" pointComponent={pointComponent} points={points} />,\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"start\"\n                series={series}\n                getLabel={startLabel}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <LinesLabels\n                key=\"end\"\n                series={series}\n                getLabel={endLabel}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                innerWidth,\n                                innerHeight,\n                                xScale,\n                                yScale,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nBump.propTypes = BumpPropTypes\nBump.defaultProps = BumpDefaultProps\n\nexport default memo(withContainer(Bump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Bump from './Bump'\n\nconst ResponsiveBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveBump\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst AreaTooltip = ({ serie }) => {\n    return <BasicTooltip id={serie.id} enableChip={true} color={serie.color} />\n}\n\nAreaTooltip.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n}\n\nexport default memo(AreaTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { motionPropTypes, blendModePropType } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport AreaTooltip from './AreaTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.number.isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    align: PropTypes.oneOf(['start', 'middle', 'end']).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['grid', 'axes', 'labels', 'areas']), PropTypes.func])\n    ).isRequired,\n\n    interpolation: PropTypes.oneOf(['linear', 'smooth']).isRequired,\n    spacing: PropTypes.number.isRequired,\n    xPadding: PropTypes.number.isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n    blendMode: blendModePropType.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    activeFillOpacity: PropTypes.number.isRequired,\n    inactiveFillOpacity: PropTypes.number.isRequired,\n    defs: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    fill: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            match: PropTypes.oneOfType([PropTypes.oneOf(['*']), PropTypes.object, PropTypes.func])\n                .isRequired,\n        })\n    ).isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    activeBorderWidth: PropTypes.number.isRequired,\n    inactiveBorderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    borderOpacity: PropTypes.number.isRequired,\n    activeBorderOpacity: PropTypes.number.isRequired,\n    inactiveBorderOpacity: PropTypes.number.isRequired,\n\n    startLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    startLabelPadding: PropTypes.number.isRequired,\n    startLabelTextColor: inheritedColorPropType.isRequired,\n    endLabel: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.string, PropTypes.func])\n        .isRequired,\n    endLabelPadding: PropTypes.number.isRequired,\n    endLabelTextColor: inheritedColorPropType.isRequired,\n\n    enableGridX: PropTypes.bool.isRequired,\n    axisTop: axisPropType,\n    axisBottom: axisPropType,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport const AreaBumpPropTypes = {\n    ...commonPropTypes,\n    ...motionPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nconst commonDefaultProps = {\n    align: 'middle',\n\n    layers: ['grid', 'axes', 'labels', 'areas'],\n\n    interpolation: 'smooth',\n    spacing: 0,\n    xPadding: 0.6,\n\n    colors: { scheme: 'nivo' },\n    blendMode: 'normal',\n    fillOpacity: 0.8,\n    activeFillOpacity: 1,\n    inactiveFillOpacity: 0.15,\n    defs: [],\n    fill: [],\n    borderWidth: 1,\n    activeBorderWidth: 1,\n    inactiveBorderWidth: 0,\n    borderColor: { from: 'color', modifiers: [['darker', 0.4]] },\n    borderOpacity: 1,\n    activeBorderOpacity: 1,\n    inactiveBorderOpacity: 0,\n\n    startLabel: false,\n    startLabelPadding: 12,\n    startLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    endLabel: 'id',\n    endLabelPadding: 12,\n    endLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    enableGridX: true,\n    axisTop: {},\n    axisBottom: {},\n\n    isInteractive: true,\n    tooltip: AreaTooltip,\n}\n\nexport const AreaBumpDefaultProps = {\n    ...commonDefaultProps,\n    animate: true,\n    motionConfig: 'gentle',\n    role: 'img',\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo, useCallback } from 'react'\nimport { area as d3Area, curveBasis, curveLinear } from 'd3-shape'\nimport { useTheme } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { computeSeries } from './compute'\n\nexport const useAreaBumpSeries = ({ data, width, height, align, spacing, xPadding }) =>\n    useMemo(() => computeSeries({ data, width, height, align, spacing, xPadding }), [\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    ])\n\nexport const useAreaGenerator = interpolation =>\n    useMemo(\n        () =>\n            d3Area()\n                .x(d => d.x)\n                .y0(d => d.y0)\n                .y1(d => d.y1)\n                .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n        [interpolation]\n    )\n\nexport const useSerieDerivedProp = instruction =>\n    useMemo(() => {\n        if (typeof instruction === 'function') return instruction\n        return () => instruction\n    }, [instruction])\n\nexport const useSerieStyle = ({\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const getFillOpacity = useSerieDerivedProp(fillOpacity)\n    const getActiveFillOpacity = useSerieDerivedProp(activeFillOpacity)\n    const getInactiveFillOpacity = useSerieDerivedProp(inactiveFillOpacity)\n\n    const getBorderWidth = useSerieDerivedProp(borderWidth)\n    const getActiveBorderWidth = useSerieDerivedProp(activeBorderWidth)\n    const getInactiveBorderWidth = useSerieDerivedProp(inactiveBorderWidth)\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getBorderOpacity = useSerieDerivedProp(borderOpacity)\n    const getActiveBorderOpacity = useSerieDerivedProp(activeBorderOpacity)\n    const getInactiveBorderOpacity = useSerieDerivedProp(inactiveBorderOpacity)\n\n    const getNormalStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getFillOpacity(serie),\n            borderWidth: getBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getBorderOpacity(serie),\n        }),\n        [getFillOpacity, getBorderWidth, getBorderColor, getBorderOpacity]\n    )\n    const getActiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getActiveFillOpacity(serie),\n            borderWidth: getActiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getActiveBorderOpacity(serie),\n        }),\n        [getActiveFillOpacity, getActiveBorderWidth, getBorderColor, getActiveBorderOpacity]\n    )\n    const getInactiveStyle = useMemo(\n        () => serie => ({\n            fillOpacity: getInactiveFillOpacity(serie),\n            borderWidth: getInactiveBorderWidth(serie),\n            borderColor: getBorderColor(serie),\n            borderOpacity: getInactiveBorderOpacity(serie),\n        }),\n        [getInactiveFillOpacity, getInactiveBorderWidth, getBorderColor, getInactiveBorderOpacity]\n    )\n\n    return useMemo(() => {\n        if (!isInteractive) return getNormalStyle\n\n        return serie => {\n            if (current === null) return getNormalStyle(serie)\n            if (serie.id === current) return getActiveStyle(serie)\n            return getInactiveStyle(serie)\n        }\n    }, [getNormalStyle, getActiveStyle, getInactiveStyle, isInteractive, current])\n}\n\nexport const useAreaBump = ({\n    data,\n    width,\n    height,\n    align,\n    spacing,\n    xPadding,\n    interpolation,\n    colors,\n    fillOpacity,\n    activeFillOpacity,\n    inactiveFillOpacity,\n    borderWidth,\n    activeBorderWidth,\n    inactiveBorderWidth,\n    borderColor,\n    borderOpacity,\n    activeBorderOpacity,\n    inactiveBorderOpacity,\n    isInteractive,\n    current,\n}) => {\n    const { series: rawSeries, xScale, heightScale } = useAreaBumpSeries({\n        data,\n        width,\n        height,\n        align,\n        spacing,\n        xPadding,\n    })\n\n    const areaGenerator = useAreaGenerator(interpolation)\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getSerieStyle = useSerieStyle({\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current,\n    })\n\n    const series = useMemo(\n        () =>\n            rawSeries.map(serie => {\n                serie.color = getColor(serie)\n                serie.style = getSerieStyle(serie)\n\n                return serie\n            }),\n        [rawSeries, getColor, getSerieStyle]\n    )\n\n    return {\n        series,\n        xScale,\n        heightScale,\n        areaGenerator,\n    }\n}\n\nexport const useSerieHandlers = ({\n    serie,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrent,\n    tooltip,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            setCurrent(serie.id)\n            onMouseEnter && onMouseEnter(serie, event)\n        },\n        [serie, onMouseEnter, showTooltipFromEvent, setCurrent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(React.createElement(tooltip, { serie }), event)\n            onMouseMove && onMouseMove(serie, event)\n        },\n        [serie, onMouseMove, showTooltipFromEvent]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(serie, event)\n        },\n        [serie, onMouseLeave, hideTooltip, setCurrent]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(serie, event)\n        },\n        [serie, onClick]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n            onMouseMove: isInteractive ? handleMouseMove : undefined,\n            onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n            onClick: isInteractive ? handleClick : undefined,\n        }),\n        [isInteractive, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n\n    return handlers\n}\n\nexport const useSeriesLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const getColor = useInheritedColor(color, theme)\n\n    return useMemo(() => {\n        let textAnchor\n        let signedPadding\n        if (position === 'start') {\n            textAnchor = 'end'\n            signedPadding = padding * -1\n        } else {\n            textAnchor = 'start'\n            signedPadding = padding\n        }\n\n        return series.map(serie => {\n            const point =\n                position === 'start' ? serie.points[0] : serie.points[serie.points.length - 1]\n\n            return {\n                id: serie.id,\n                x: point.x + signedPadding,\n                y: point.y,\n                color: getColor(serie),\n                opacity: serie.style.fillOpacity,\n                serie,\n                textAnchor,\n            }\n        })\n    }, [series, position, padding, getColor])\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { scalePoint, scaleLinear } from 'd3-scale'\n\nexport const computeSeries = ({ data, width, height, align, spacing, xPadding }) => {\n    const slices = new Map()\n\n    let maxSum = null\n    let maxValues = null\n\n    data.forEach(serie => {\n        serie.data.forEach(datum => {\n            if (!slices.has(datum.x)) {\n                slices.set(datum.x, {\n                    id: datum.x,\n                    total: 0,\n                    values: new Map(),\n                })\n            }\n\n            const slice = slices.get(datum.x)\n\n            const total = slice.total + datum.y\n            slice.total = total\n\n            slice.values.set(serie.id, {\n                serieId: serie.id,\n                value: datum.y,\n            })\n\n            if (total === null || total > maxSum) {\n                maxSum = total\n                maxValues = slice.values.size\n            }\n        })\n    })\n\n    const xScale = scalePoint().domain(Array.from(slices.keys())).range([0, width])\n\n    const heightScale = scaleLinear()\n        .domain([0, maxSum])\n        .range([0, height - maxValues * spacing])\n\n    slices.forEach((slice, x) => {\n        slice.x = xScale(x)\n        const sliceHeight = heightScale(slice.total) + slice.values.size * spacing\n\n        let offset = 0\n        if (align === 'middle') {\n            offset = (height - sliceHeight) / 2\n        } else if (align === 'end') {\n            offset = height - sliceHeight\n        }\n\n        Array.from(slice.values.values())\n            .sort((a, b) => b.value - a.value)\n            .forEach((value, position, all) => {\n                const previousValues = all.filter((i, pos) => pos < position)\n                const beforeValue = previousValues.reduce((t, v) => t + v.value, 0)\n\n                const sliceValue = slice.values.get(value.serieId)\n                sliceValue.position = position\n                sliceValue.height = heightScale(value.value)\n                sliceValue.beforeHeight =\n                    heightScale(beforeValue) + offset + spacing * (previousValues.length + 0.5)\n            })\n    })\n\n    const areaPointPadding = xScale.step() * Math.min(xPadding * 0.5, 0.5)\n\n    const series = data.map(serie => {\n        const serieCopy = { ...serie }\n        serieCopy.points = []\n        serieCopy.areaPoints = []\n        serie.data.forEach((datum, i) => {\n            const slice = slices.get(datum.x)\n            const position = slice.values.get(serie.id)\n\n            const x = slice.x\n            const { beforeHeight, height } = position\n            const y = beforeHeight + height / 2\n            const y0 = beforeHeight\n            const y1 = beforeHeight + height\n\n            serieCopy.points.push({\n                x,\n                y,\n                height,\n                data: { ...datum },\n            })\n            if (i > 0) {\n                serieCopy.areaPoints.push({ x: x - areaPointPadding, y0, y1 })\n            }\n            serieCopy.areaPoints.push({ x, y0, y1 })\n            if (i < serie.data.length - 1) {\n                serieCopy.areaPoints.push({ x: x + areaPointPadding, y0, y1 })\n            }\n        })\n\n        return serieCopy\n    })\n\n    return {\n        xScale,\n        heightScale,\n        series,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\nimport { useSerieHandlers } from './hooks'\n\nconst Area = ({\n    serie,\n    areaGenerator,\n    blendMode,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentSerie,\n    tooltip,\n}) => {\n    const handlers = useSerieHandlers({\n        serie,\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrent: setCurrentSerie,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(areaGenerator(serie.areaPoints))\n    const animatedProps = useSpring({\n        color: serie.color,\n        fillOpacity: serie.style.fillOpacity,\n        stroke: serie.style.borderColor,\n        strokeOpacity: serie.style.borderOpacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={serie.fill ? serie.fill : animatedProps.color}\n            fillOpacity={animatedProps.fillOpacity}\n            stroke={animatedProps.stroke}\n            strokeWidth={serie.style.borderWidth}\n            strokeOpacity={animatedProps.strokeOpacity}\n            style={{ mixBlendMode: blendMode }}\n            onMouseEnter={handlers.onMouseEnter}\n            onMouseMove={handlers.onMouseMove}\n            onMouseLeave={handlers.onMouseLeave}\n            onClick={handlers.onClick}\n        />\n    )\n}\n\nArea.propTypes = {\n    serie: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired,\n        fill: PropTypes.string,\n        areaPoints: PropTypes.array.isRequired,\n        style: PropTypes.shape({\n            fillOpacity: PropTypes.number.isRequired,\n            borderWidth: PropTypes.number.isRequired,\n            borderColor: PropTypes.string.isRequired,\n            borderOpacity: PropTypes.number.isRequired,\n        }).isRequired,\n    }).isRequired,\n    areaGenerator: PropTypes.func.isRequired,\n    blendMode: blendModePropType.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    setCurrentSerie: PropTypes.func.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n}\n\nexport default memo(Area)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { useSeriesLabels } from './hooks'\n\nconst AreasLabels = ({ series, position, padding, color }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = useSeriesLabels({\n        series,\n        position,\n        padding,\n        color,\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            x: label.x,\n            y: label.y,\n            opacity: label.opacity,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                x={animatedProps.x}\n                y={animatedProps.y}\n                textAnchor={label.textAnchor}\n                dominantBaseline=\"central\"\n                opacity={animatedProps.opacity}\n                style={{\n                    ...theme.labels.text,\n                    fill: label.color,\n                }}\n            >\n                {label.id}\n            </animated.text>\n        )\n    })\n}\n\nAreasLabels.propTypes = {\n    series: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                    y: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    position: PropTypes.oneOf(['start', 'end']).isRequired,\n    padding: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n}\n\nexport default memo(AreasLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useState, Fragment, useMemo } from 'react'\nimport { bindDefs, withContainer, useDimensions, SvgWrapper } from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { AreaBumpPropTypes, AreaBumpDefaultProps } from './props'\nimport { useAreaBump } from './hooks'\nimport Area from './Area'\nimport AreasLabels from './AreasLabels'\n\nconst AreaBump = props => {\n    const {\n        data,\n        align,\n\n        width,\n        height,\n        margin: partialMargin,\n\n        layers,\n\n        interpolation,\n        spacing,\n        xPadding,\n\n        colors,\n        blendMode,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        defs,\n        fill,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n\n        startLabel,\n        startLabelPadding,\n        startLabelTextColor,\n        endLabel,\n        endLabelPadding,\n        endLabelTextColor,\n\n        enableGridX,\n        axisTop,\n        axisBottom,\n\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n        role,\n    } = props\n\n    const [currentSerie, setCurrentSerie] = useState(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { series, xScale, areaGenerator } = useAreaBump({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        align,\n        spacing,\n        xPadding,\n        interpolation,\n        colors,\n        fillOpacity,\n        activeFillOpacity,\n        inactiveFillOpacity,\n        borderWidth,\n        activeBorderWidth,\n        inactiveBorderWidth,\n        borderColor,\n        borderOpacity,\n        activeBorderOpacity,\n        inactiveBorderOpacity,\n        isInteractive,\n        current: currentSerie,\n    })\n\n    const boundDefs = useMemo(() => bindDefs(defs, series, fill, { targetKey: 'fill' }), [\n        defs,\n        series,\n        fill,\n    ])\n\n    const layerById = {\n        grid: enableGridX && (\n            <Grid key=\"grid\" width={innerWidth} height={innerHeight} xScale={xScale} />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                bottom={axisBottom}\n            />\n        ),\n        labels: [],\n        areas: (\n            <Fragment key=\"areas\">\n                {series.map(serie => (\n                    <Area\n                        key={serie.id}\n                        areaGenerator={areaGenerator}\n                        serie={serie}\n                        blendMode={blendMode}\n                        isInteractive={isInteractive}\n                        setCurrentSerie={setCurrentSerie}\n                        onMouseEnter={onMouseEnter}\n                        onMouseMove={onMouseMove}\n                        onMouseLeave={onMouseLeave}\n                        onClick={onClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </Fragment>\n        ),\n    }\n\n    if (startLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"start\"\n                series={series}\n                position=\"start\"\n                padding={startLabelPadding}\n                color={startLabelTextColor}\n            />\n        )\n    }\n    if (endLabel !== false) {\n        layerById.labels.push(\n            <AreasLabels\n                key=\"end\"\n                series={series}\n                position=\"end\"\n                padding={endLabelPadding}\n                color={endLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                outerWidth,\n                                outerHeight,\n                                series,\n                                xScale,\n                                areaGenerator,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nAreaBump.propTypes = AreaBumpPropTypes\nAreaBump.defaultProps = AreaBumpDefaultProps\n\nexport default memo(withContainer(AreaBump))\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport AreaBump from './AreaBump'\n\nconst ResponsiveAreaBump = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <AreaBump width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveAreaBump\n"],"sourceRoot":""}