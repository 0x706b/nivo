{"version":3,"file":"component---src-pages-marimekko-index-js-4501a8f75d6b59190a0e.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-shape/src/array.js","webpack://nivo-website/../node_modules/d3-shape/src/constant.js","webpack://nivo-website/../node_modules/d3-shape/src/stack.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/./src/lib/settings.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/compute.ts","webpack://nivo-website/../src/components/AxisTick.tsx","webpack://nivo-website/../src/components/Axis.tsx","webpack://nivo-website/../src/props.ts","webpack://nivo-website/../src/components/Axes.tsx","webpack://nivo-website/../src/components/GridLine.tsx","webpack://nivo-website/../src/components/GridLines.tsx","webpack://nivo-website/../src/components/Grid.tsx","webpack://nivo-website/../src/canvas.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nivo-website/../src/types.ts","webpack://nivo-website/../src/hooks.ts","webpack://nivo-website/../src/Bar.tsx","webpack://nivo-website/../src/Bars.tsx","webpack://nivo-website/../src/BarTooltip.tsx","webpack://nivo-website/../src/Marimekko.tsx","webpack://nivo-website/../src/ResponsiveMarimekko.tsx","webpack://nivo-website/./src/data/components/marimekko/mapper.js","webpack://nivo-website/./src/data/components/marimekko/props.ts","webpack://nivo-website/./src/pages/marimekko/index.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/random.js"],"sourcesContent":["export var slice = Array.prototype.slice;","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","import { slice } from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function () {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function (_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function (_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function (_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import omit from 'lodash/omit'\nimport upperFirst from 'lodash/upperFirst'\n\nexport const settingsMapper =\n    (mapping: any, { exclude = [] } = {}) =>\n    (settings: any, options: any = {}) => {\n        const overrides: any = {}\n\n        Object.keys(settings).forEach(key => {\n            if (mapping[key]) {\n                overrides[key] = mapping[key](settings[key], settings, options)\n            }\n        })\n\n        return {\n            ...omit(settings, exclude),\n            ...overrides,\n        }\n    }\n\nexport const mapAxis = (type: string) => (value: any, settings: any) =>\n    settings[`axis${upperFirst(type)}`].enable ? omit(value, ['enable']) : null\n\nexport const mapFormat = ({ format, enabled }: { format: any; enabled: boolean }) =>\n    enabled ? format : undefined\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import * as React from 'react'\nimport {\n    stackOffsetDiverging,\n    stackOffsetExpand,\n    stackOffsetNone,\n    stackOffsetSilhouette,\n    stackOffsetWiggle,\n} from 'd3-shape'\nimport { ScaleLinear } from 'd3-scale'\nimport { Box, Dimensions, Theme, SvgDefsAndFill, ModernMotionProps, ValueFormat } from '@nivo/core'\nimport { AxisProps } from '@nivo/axes'\nimport { OrdinalColorScaleConfig, InheritedColorConfig } from '@nivo/colors'\nimport { LegendProps } from '@nivo/legends'\n\nexport type DatumId = string | number\nexport type DatumValue = number\nexport type DatumFormattedValue = string | number\n\nexport type DatumPropertyAccessor<RawDatum, T> = (datum: RawDatum) => T\n\nexport interface DataProps<RawDatum> {\n    data: RawDatum[]\n    id: string | number | DatumPropertyAccessor<RawDatum, DatumId>\n    value: string | number | DatumPropertyAccessor<RawDatum, DatumValue>\n    dimensions: {\n        id: string\n        value: string | number | DatumPropertyAccessor<RawDatum, DatumValue>\n    }[]\n    valueFormat?: ValueFormat<number>\n}\n\nexport interface NormalizedDatum<RawDatum> {\n    index: number\n    id: DatumId\n    value: DatumValue\n    data: RawDatum\n}\n\nexport interface DimensionDatum<RawDatum> {\n    id: string\n    value: number\n    formattedValue: string | number\n    color: string\n    x: number\n    y: number\n    width: number\n    height: number\n    datum: ComputedDatum<RawDatum>\n}\n\nexport interface ComputedDatum<RawDatum> extends NormalizedDatum<RawDatum> {\n    x: number\n    y: number\n    width: number\n    height: number\n    dimensions: DimensionDatum<RawDatum>[]\n}\n\nexport interface BarDatum<RawDatum> extends DimensionDatum<RawDatum> {\n    key: string\n    fill?: string\n    borderColor: string\n    borderWidth: number\n}\n\nexport type LabelAccessorFunction<RawDatum> = (datum: ComputedDatum<RawDatum>) => string | number\n\nexport type LayerId = 'grid' | 'axes' | 'bars' | 'legends'\n\nexport interface CustomLayerProps<RawDatum> {\n    data: ComputedDatum<RawDatum>[]\n    bars: BarDatum<RawDatum>[]\n    thicknessScale: ScaleLinear<number, number>\n    dimensionsScale: ScaleLinear<number, number>\n}\n\nexport type CustomLayer<RawDatum> = React.FC<CustomLayerProps<RawDatum>>\n\nexport type Layer<RawDatum> = LayerId | CustomLayer<RawDatum>\n\nexport interface TooltipProps<RawDatum> {\n    bar: BarDatum<RawDatum>\n}\n\nexport type BarTooltipType<RawDatum> = (props: TooltipProps<RawDatum>) => JSX.Element\n\nexport type Layout = 'horizontal' | 'vertical'\n\nexport const offsetById = {\n    // Applies a zero baseline and normalizes the values\n    // for each point such that the topline is always one.\n    expand: stackOffsetExpand,\n    // Positive values are stacked above zero, negative values\n    // are stacked below zero, and zero values are stacked at zero.\n    diverging: stackOffsetDiverging,\n    // Applies a zero baseline.\n    none: stackOffsetNone,\n    // Shifts the baseline down such that the center of the streamgraph\n    // is always at zero.\n    silouhette: stackOffsetSilhouette,\n    // Shifts the baseline so as to minimize the weighted wiggle of layers.\n    // This offset is recommended for streamgraphs in conjunction with the inside-out order.\n    // See Stacked Graphs—Geometry & Aesthetics by Bryon & Wattenberg for more information.\n    wiggle: stackOffsetWiggle,\n}\n\nexport type OffsetId = keyof typeof offsetById\n\nexport type CommonProps<RawDatum> = {\n    margin: Box\n    layout: Layout\n    offset: OffsetId\n    outerPadding: number\n    innerPadding: number\n\n    // axes and grid\n    axisTop?: AxisProps | null\n    axisRight?: AxisProps | null\n    axisBottom?: AxisProps | null\n    axisLeft?: AxisProps | null\n    enableGridX: boolean\n    gridXValues?: number[]\n    enableGridY: boolean\n    gridYValues?: number[]\n\n    // colors, theme and border\n    colors: OrdinalColorScaleConfig<Omit<DimensionDatum<RawDatum>, 'color' | 'fill'>>\n    theme: Theme\n    borderWidth: number\n    borderColor: InheritedColorConfig<DimensionDatum<RawDatum>>\n\n    // labels\n    enableLabels: boolean\n    label: string | LabelAccessorFunction<RawDatum>\n    labelSkipWidth: number\n    labelSkipHeight: number\n    labelTextColor: InheritedColorConfig<DimensionDatum<RawDatum>>\n\n    // interactivity\n    isInteractive: boolean\n    tooltip: BarTooltipType<RawDatum>\n\n    legends: LegendProps[]\n\n    role: string\n}\n\nexport type MouseEventHandler<RawDatum, ElementType> = (\n    datum: BarDatum<RawDatum>,\n    event: React.MouseEvent<ElementType>\n) => void\n\nexport type MouseEventHandlers<RawDatum, ElementType> = Partial<{\n    onClick: MouseEventHandler<RawDatum, ElementType>\n    onMouseEnter: MouseEventHandler<RawDatum, ElementType>\n    onMouseMove: MouseEventHandler<RawDatum, ElementType>\n    onMouseLeave: MouseEventHandler<RawDatum, ElementType>\n}>\n\nexport type SvgProps<RawDatum> = DataProps<RawDatum> &\n    Dimensions &\n    Partial<CommonProps<RawDatum>> &\n    ModernMotionProps &\n    SvgDefsAndFill<BarDatum<RawDatum>> &\n    MouseEventHandlers<RawDatum, SVGRectElement> & {\n        layers?: Layer<RawDatum>[]\n    }\n","import { useMemo } from 'react'\nimport { get } from 'lodash'\nimport { stack as d3Stack, Stack, Series } from 'd3-shape'\nimport { ScaleLinear, scaleLinear } from 'd3-scale'\nimport { useValueFormatter, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    NormalizedDatum,\n    ComputedDatum,\n    DataProps,\n    DatumPropertyAccessor,\n    Layout,\n    DimensionDatum,\n    CommonProps,\n    CustomLayerProps,\n    BarDatum,\n    OffsetId,\n    offsetById,\n} from './types'\n\n// d3 stack does not support defining `.keys()` using\n// a mix of keys and custom value accessors, so we're\n// building a map of accessors in any case, we're gonna\n// use it later for `stack.value()`.\nexport const useDataDimensions = <RawDatum>(rawDimensions: DataProps<RawDatum>['dimensions']) =>\n    useMemo(() => {\n        const dimensions: Record<string, (datum: RawDatum) => number> = {}\n        const dimensionIds: string[] = []\n        rawDimensions.forEach(dimension => {\n            dimensionIds.push(dimension.id)\n            dimensions[dimension.id] =\n                typeof dimension.value === 'function'\n                    ? dimension.value\n                    : (datum: RawDatum) => get(datum, dimension.value as string, 0)\n        })\n\n        return { dimensionIds, dimensions }\n    }, [rawDimensions])\n\nexport const useStack = <RawDatum>(\n    dimensionIds: string[],\n    dimensions: Record<string, (datum: RawDatum) => number>,\n    offset: OffsetId\n) =>\n    useMemo(() => {\n        const offsetFunction = offsetById[offset]\n\n        return d3Stack<RawDatum>()\n            .keys(dimensionIds)\n            .value((datum, key) => dimensions[key](datum))\n            .offset(offsetFunction)\n    }, [dimensionIds, dimensions, offset])\n\nexport const useStackedData = <RawDatum>(\n    stack: Stack<any, RawDatum, string>,\n    data: DataProps<RawDatum>['data']\n) =>\n    useMemo(() => {\n        const stacked = stack(data)\n\n        const allValues: number[] = []\n        stacked.forEach(dimension => {\n            dimension.forEach(datum => {\n                allValues.push(datum[0])\n                allValues.push(datum[1])\n            })\n        })\n\n        const min = Math.min(...allValues)\n        const max = Math.max(...allValues)\n\n        return {\n            stacked,\n            min,\n            max,\n        }\n    }, [stack, data])\n\nexport const useDimensionsScale = (\n    min: number,\n    max: number,\n    width: number,\n    height: number,\n    layout: Layout\n) =>\n    useMemo(() => {\n        if (layout === 'vertical') {\n            return scaleLinear().domain([max, min]).range([0, height])\n        }\n\n        return scaleLinear().domain([min, max]).range([0, width])\n    }, [min, max, width, height, layout])\n\nexport const useNormalizedData = <RawDatum>(\n    data: DataProps<RawDatum>['data'],\n    id: DataProps<RawDatum>['id'],\n    value: DataProps<RawDatum>['value']\n) => {\n    const getId: DatumPropertyAccessor<RawDatum, string | number> =\n        typeof id === 'function' ? id : (datum: RawDatum) => get(datum, id)\n    const getValue: DatumPropertyAccessor<RawDatum, number> =\n        typeof value === 'function' ? value : (datum: RawDatum) => get(datum, value, 0)\n\n    return useMemo(() => {\n        const normalized: NormalizedDatum<RawDatum>[] = []\n        data.forEach((datum, index) => {\n            const datumId = getId(datum)\n            const datumValue = getValue(datum)\n\n            normalized.push({\n                index,\n                id: datumId,\n                value: datumValue,\n                data: datum,\n            })\n        })\n\n        return normalized\n    }, [data, getId, getValue])\n}\n\nexport const useThicknessScale = <RawDatum>({\n    data,\n    width,\n    height,\n    layout,\n    outerPadding,\n    innerPadding,\n}: {\n    data: NormalizedDatum<RawDatum>[]\n    width: number\n    height: number\n    layout: Layout\n    outerPadding: number\n    innerPadding: number\n}) =>\n    useMemo(() => {\n        const totalValue = data.reduce((acc, datum) => acc + datum.value, 0)\n\n        const thicknessScale = scaleLinear().domain([0, totalValue])\n\n        const totalPadding = 2 * outerPadding + (data.length - 1) * innerPadding\n\n        if (layout === 'vertical') {\n            thicknessScale.range([0, width - totalPadding])\n        } else {\n            thicknessScale.range([0, height - totalPadding])\n        }\n\n        return thicknessScale\n    }, [data, width, height, layout])\n\nexport const useComputedData = <RawDatum>({\n    data,\n    stacked,\n    dimensionIds,\n    valueFormat,\n    thicknessScale,\n    dimensionsScale,\n    colors,\n    layout,\n    outerPadding,\n    innerPadding,\n}: {\n    data: NormalizedDatum<RawDatum>[]\n    stacked: Series<RawDatum, string>[]\n    dimensionIds: string[]\n    valueFormat: DataProps<RawDatum>['valueFormat']\n    thicknessScale: ScaleLinear<number, number>\n    dimensionsScale: ScaleLinear<number, number>\n    colors: CommonProps<RawDatum>['colors']\n    layout: Layout\n    outerPadding: number\n    innerPadding: number\n}) => {\n    const getColor = useOrdinalColorScale<Omit<DimensionDatum<RawDatum>, 'color'>>(colors, 'id')\n\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    return useMemo(() => {\n        const computedData: ComputedDatum<RawDatum>[] = []\n\n        let position = outerPadding\n\n        data.forEach(datum => {\n            const thickness = thicknessScale(datum.value)\n\n            const computedDatum: ComputedDatum<RawDatum> = {\n                ...datum,\n                x: layout === 'vertical' ? position : 0,\n                y: layout === 'vertical' ? 0 : position,\n                width: layout === 'vertical' ? thickness : 0,\n                height: layout === 'vertical' ? 0 : thickness,\n                dimensions: [],\n            }\n\n            const allPositions: number[] = []\n            let totalSize = 0\n\n            position += thickness + innerPadding\n\n            dimensionIds.forEach(dimensionId => {\n                const dimension = stacked.find(stack => stack.key === dimensionId)\n                if (dimension) {\n                    const dimensionPoint = dimension[datum.index]\n                    const dimensionDatum: DimensionDatum<RawDatum> = {\n                        id: dimensionId,\n                        datum: computedDatum,\n                        value: dimensionPoint[1] - dimensionPoint[0],\n                        formattedValue: formatValue(dimensionPoint[1] - dimensionPoint[0]),\n                        color: 'rgba(0, 0, 0, 0)',\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    }\n\n                    const position0 = dimensionsScale(dimensionPoint[0])\n                    const position1 = dimensionsScale(dimensionPoint[1])\n\n                    if (layout === 'vertical') {\n                        dimensionDatum.x = computedDatum.x\n                        dimensionDatum.y = Math.min(position0, position1)\n                        dimensionDatum.width = computedDatum.width\n                        dimensionDatum.height = Math.max(position0, position1) - dimensionDatum.y\n\n                        allPositions.push(dimensionDatum.y)\n                        totalSize += dimensionDatum.height\n                    } else {\n                        dimensionDatum.x = Math.min(position0, position1)\n                        dimensionDatum.y = computedDatum.y\n                        dimensionDatum.width = Math.max(position0, position1) - dimensionDatum.x\n                        dimensionDatum.height = computedDatum.height\n\n                        allPositions.push(dimensionDatum.x)\n                        totalSize += dimensionDatum.width\n                    }\n\n                    dimensionDatum.color = getColor(dimensionDatum)\n\n                    computedDatum.dimensions.push(dimensionDatum)\n                }\n\n                if (layout === 'vertical') {\n                    computedDatum.y = Math.min(...allPositions)\n                    computedDatum.height = totalSize\n                } else {\n                    computedDatum.x = Math.min(...allPositions)\n                    computedDatum.width = totalSize\n                }\n            })\n\n            computedData.push(computedDatum)\n        })\n\n        return computedData\n    }, [\n        data,\n        stacked,\n        dimensionIds,\n        thicknessScale,\n        dimensionsScale,\n        layout,\n        outerPadding,\n        innerPadding,\n        getColor,\n        formatValue,\n    ])\n}\n\nexport const useBars = <RawDatum>(\n    data: ComputedDatum<RawDatum>[],\n    borderColor: InheritedColorConfig<DimensionDatum<RawDatum>>,\n    borderWidth: number\n) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<DimensionDatum<RawDatum>>(borderColor, theme)\n\n    return useMemo(() => {\n        const all: BarDatum<RawDatum>[] = []\n        data.forEach(datum => {\n            datum.dimensions.forEach(dimension => {\n                all.push({\n                    key: `${datum.id}-${dimension.id}`,\n                    ...dimension,\n                    borderColor: getBorderColor(dimension),\n                    borderWidth,\n                })\n            })\n        })\n\n        return all\n    }, [data, borderWidth, getBorderColor])\n}\n\nexport const useMarimekko = <RawDatum>({\n    data,\n    id,\n    value,\n    valueFormat,\n    dimensions: rawDimensions,\n    layout,\n    offset,\n    outerPadding,\n    innerPadding,\n    colors,\n    borderColor,\n    borderWidth,\n    width,\n    height,\n}: {\n    data: DataProps<RawDatum>['data']\n    id: DataProps<RawDatum>['id']\n    value: DataProps<RawDatum>['value']\n    valueFormat: DataProps<RawDatum>['valueFormat']\n    dimensions: DataProps<RawDatum>['dimensions']\n    layout: Layout\n    offset: OffsetId\n    outerPadding: number\n    innerPadding: number\n    colors: CommonProps<RawDatum>['colors']\n    borderColor: InheritedColorConfig<DimensionDatum<RawDatum>>\n    borderWidth: number\n    width: number\n    height: number\n}) => {\n    const { dimensionIds, dimensions } = useDataDimensions<RawDatum>(rawDimensions)\n    const stack = useStack<RawDatum>(dimensionIds, dimensions, offset)\n    const { stacked, min, max } = useStackedData<RawDatum>(stack, data)\n    const normalizedData = useNormalizedData<RawDatum>(data, id, value)\n    const thicknessScale = useThicknessScale({\n        data: normalizedData,\n        width,\n        height,\n        layout,\n        outerPadding,\n        innerPadding,\n    })\n    const dimensionsScale = useDimensionsScale(min, max, width, height, layout)\n    const computedData = useComputedData<RawDatum>({\n        data: normalizedData,\n        stacked,\n        dimensionIds,\n        valueFormat,\n        thicknessScale,\n        dimensionsScale,\n        colors,\n        layout,\n        outerPadding,\n        innerPadding,\n    })\n    const bars = useBars<RawDatum>(computedData, borderColor, borderWidth)\n\n    return {\n        computedData,\n        bars,\n        thicknessScale,\n        dimensionsScale,\n        dimensionIds,\n    }\n}\n\nexport const useLayerContext = <RawDatum>({\n    data,\n    bars,\n    thicknessScale,\n    dimensionsScale,\n}: {\n    data: ComputedDatum<RawDatum>[]\n    bars: BarDatum<RawDatum>[]\n    thicknessScale: ScaleLinear<number, number>\n    dimensionsScale: ScaleLinear<number, number>\n}): CustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            data,\n            bars,\n            thicknessScale,\n            dimensionsScale,\n        }),\n        [data, bars, thicknessScale, dimensionsScale]\n    )\n\nexport const useLegendData = <RawDatum>(dimensionIds: string[], bars: BarDatum<RawDatum>[]) => {\n    const legendData: {\n        id: string\n        label: string\n        color: string\n        fill?: string\n    }[] = []\n\n    dimensionIds.forEach(dimensionId => {\n        const bar = bars.find(bar => bar.id === dimensionId)\n        if (bar) {\n            legendData.push({\n                id: dimensionId,\n                label: dimensionId,\n                color: bar.color,\n                fill: bar.fill,\n            })\n        }\n    })\n\n    return legendData\n}\n","import { createElement, MouseEvent, useCallback } from 'react'\nimport { animated, SpringValues, to } from '@react-spring/web'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, CommonProps, MouseEventHandlers } from './types'\n\ninterface BarProps<RawDatum> extends MouseEventHandlers<RawDatum, SVGRectElement> {\n    bar: BarDatum<RawDatum>\n    animatedProps: SpringValues<{\n        x: number\n        y: number\n        width: number\n        height: number\n        opacity: number\n        color: string\n        borderColor: string\n    }>\n    isInteractive: boolean\n    tooltip: CommonProps<RawDatum>['tooltip']\n}\n\nexport const Bar = <RawDatum,>({\n    bar,\n    animatedProps,\n    isInteractive,\n    tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: BarProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        event => showTooltipFromEvent(createElement(tooltip, { bar }), event),\n        [showTooltipFromEvent, tooltip, bar]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.(bar, event)\n        },\n        [onClick, bar]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(bar, event)\n            showTooltip(event)\n        },\n        [showTooltip, bar]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseMove?.(bar, event)\n            showTooltip(event)\n        },\n        [showTooltip, bar]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(bar, event)\n            hideTooltip()\n        },\n        [onMouseLeave, bar, hideTooltip]\n    )\n\n    return (\n        <animated.rect\n            x={animatedProps.x}\n            y={animatedProps.y}\n            width={to(animatedProps.width, value => Math.max(value, 0))}\n            height={to(animatedProps.height, value => Math.max(value, 0))}\n            fill={bar.fill ?? animatedProps.color}\n            stroke={animatedProps.borderColor}\n            strokeWidth={bar.borderWidth}\n            onClick={isInteractive ? handleClick : undefined}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { BarDatum, CommonProps, MouseEventHandlers } from './types'\nimport { Bar } from './Bar'\n\ninterface BarsProps<RawDatum> extends MouseEventHandlers<RawDatum, SVGRectElement> {\n    isInteractive: boolean\n    bars: BarDatum<RawDatum>[]\n    tooltip: CommonProps<RawDatum>['tooltip']\n}\n\nexport const Bars = <RawDatum,>({\n    bars,\n    isInteractive,\n    tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: BarsProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<\n        BarDatum<RawDatum>,\n        {\n            x: number\n            y: number\n            width: number\n            height: number\n            color: string\n            opacity: number\n            borderColor: string\n        }\n    >(bars, {\n        keys: bar => bar.key,\n        initial: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 1,\n            borderColor: bar.borderColor,\n        }),\n        from: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 0,\n            borderColor: bar.borderColor,\n        }),\n        enter: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 1,\n            borderColor: bar.borderColor,\n        }),\n        update: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 1,\n            borderColor: bar.borderColor,\n        }),\n        leave: bar => ({\n            opacity: 0,\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((style, bar) => (\n                <Bar<RawDatum>\n                    key={bar.key}\n                    bar={bar}\n                    animatedProps={style}\n                    isInteractive={isInteractive}\n                    tooltip={tooltip}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseMove={onMouseMove}\n                    onMouseLeave={onMouseLeave}\n                />\n            ))}\n        </>\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { BarDatum } from './types'\n\nexport const BarTooltip = <RawDatum,>({ bar }: { bar: BarDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={`${bar.datum.id} - ${bar.id}`}\n        value={bar.formattedValue}\n        enableChip={true}\n        color={bar.color}\n    />\n)\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    Container,\n    SvgWrapper,\n    useDimensions,\n} from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { SvgProps, LayerId, DimensionDatum } from './types'\nimport { defaultProps } from './props'\nimport { useMarimekko, useLayerContext, useLegendData } from './hooks'\nimport { Bars } from './Bars'\nimport { BarTooltip } from './BarTooltip'\n\nconst InnerMarimekko = <RawDatum,>({\n    data,\n    id,\n    value,\n    valueFormat,\n    dimensions,\n    width,\n    height,\n    margin: partialMargin,\n    layout = defaultProps.layout,\n    offset = defaultProps.offset,\n    outerPadding = defaultProps.outerPadding,\n    innerPadding = defaultProps.innerPadding,\n    layers = defaultProps.layers,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n    enableGridX = defaultProps.enableGridX,\n    gridXValues,\n    enableGridY = defaultProps.enableGridY,\n    gridYValues,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<DimensionDatum<RawDatum>, 'color'>\n    >,\n    defs = [],\n    fill = [],\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<DimensionDatum<RawDatum>>,\n    isInteractive = defaultProps.isInteractive,\n    tooltip = BarTooltip,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    legends = [],\n    role,\n}: SvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { computedData, bars, thicknessScale, dimensionsScale, dimensionIds } =\n        useMarimekko<RawDatum>({\n            data,\n            id,\n            value,\n            dimensions,\n            valueFormat,\n            layout,\n            offset,\n            outerPadding,\n            innerPadding,\n            colors,\n            borderColor,\n            borderWidth,\n            width: innerWidth,\n            height: innerHeight,\n        })\n\n    const layerById: Record<LayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        bars: null,\n        legends: null,\n    }\n\n    const boundDefs = bindDefs(defs, bars, fill)\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Bars<RawDatum>\n                key=\"bars\"\n                bars={bars}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n            />\n        )\n    }\n\n    const xScale = layout === 'vertical' ? thicknessScale : dimensionsScale\n    const yScale = layout === 'vertical' ? dimensionsScale : thicknessScale\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                xScale={enableGridX ? (xScale as any) : undefined}\n                yScale={enableGridY ? (yScale as any) : undefined}\n                width={innerWidth}\n                height={innerHeight}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    const legendData = useLegendData<RawDatum>(dimensionIds, bars)\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <g key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                    />\n                ))}\n            </g>\n        )\n    }\n\n    const layerContext = useLayerContext<RawDatum>({\n        data: computedData,\n        bars,\n        thicknessScale,\n        dimensionsScale,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as LayerId] !== undefined) {\n                    return layerById[layer as LayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Marimekko = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    ...otherProps\n}: SvgProps<RawDatum>) => (\n    <Container\n        theme={otherProps.theme}\n        isInteractive={isInteractive}\n        animate={animate}\n        motionConfig={motionConfig}\n    >\n        <InnerMarimekko<RawDatum>\n            isInteractive={isInteractive}\n            animate={animate}\n            motionConfig={motionConfig}\n            {...otherProps}\n        />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Marimekko } from './Marimekko'\nimport { SvgProps } from './types'\n\nexport const ResponsiveMarimekko = <RawDatum,>(\n    props: Omit<SvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Marimekko<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { patternDotsDef, patternLinesDef } from '@nivo/core'\nimport { mapAxis, mapFormat, settingsMapper } from '../../../lib/settings'\n\nconst TooltipWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 12px;\n    background: #333;\n    padding: 12px 16px;\n    font-size: 12px;\n    border-radius: 2px;\n`\nconst TooltipKey = styled.span``\nconst TooltipValue = styled.span`\n    font-weight: 600;\n`\n\nconst CustomTooltip = ({ bar }) => (\n    <TooltipWrapper style={{ color: bar.color }}>\n        <TooltipKey>datum.id</TooltipKey>\n        <TooltipValue>{bar.datum.id}</TooltipValue>\n        <TooltipKey>id</TooltipKey>\n        <TooltipValue>{bar.id}</TooltipValue>\n        <TooltipKey>value</TooltipKey>\n        <TooltipValue>{bar.value}</TooltipValue>\n        <TooltipKey>color</TooltipKey>\n        <TooltipValue>{bar.color}</TooltipValue>\n        <TooltipKey>thickness</TooltipKey>\n        <TooltipValue>{bar.datum.thickness}</TooltipValue>\n    </TooltipWrapper>\n)\n\nexport default settingsMapper(\n    {\n        valueFormat: mapFormat,\n        axisTop: mapAxis('top'),\n        axisRight: mapAxis('right'),\n        axisBottom: mapAxis('bottom'),\n        axisLeft: mapAxis('left'),\n        tooltip: (value, values) => {\n            if (!values['custom tooltip example']) return undefined\n\n            return CustomTooltip\n        },\n        defs: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                patternLinesDef('lines', {\n                    background: 'rgba(0, 0, 0, 0)',\n                    color: 'inherit',\n                    rotation: -45,\n                    lineWidth: 4,\n                    spacing: 8,\n                }),\n            ]\n        },\n        fill: (value, values) => {\n            if (!values['showcase pattern usage']) return\n\n            return [\n                { match: { id: 'agree strongly' }, id: 'lines' },\n                { match: { id: 'disagree strongly' }, id: 'lines' },\n            ]\n        },\n    },\n    {\n        exclude: ['custom tooltip example', 'showcase pattern usage'],\n    }\n)\n","import { defaultProps as defaults, offsetById } from '@nivo/marimekko'\nimport {\n    themeProperty,\n    defsProperties,\n    groupProperties,\n    getLegendsProps,\n    motionProperties,\n    axesProperties,\n} from '../../../lib/componentProperties'\nimport { ChartProperty } from '../../../types'\n\nconst props: ChartProperty[] = [\n    {\n        key: 'data',\n        group: 'Base',\n        help: 'Chart data, which should be immutable.',\n        description: `\n            The data doesn't have to conform to a specific schema,\n            it's gonna depend on how you configure \\`id\\`, \\`value\\`\n            and \\`dimensions\\`.\n        `,\n        type: 'RawDatum[]',\n        required: true,\n    },\n    {\n        key: 'id',\n        group: 'Base',\n        help: 'ID accessor.',\n        description: `\n            Define how to access the ID of each datum,\n            by default, nivo will look for the \\`id\\` property.\n        `,\n        type: 'string | (datum: RawDatum): string | number',\n        required: true,\n    },\n    {\n        key: 'value',\n        group: 'Base',\n        help: 'Value accessor.',\n        description: `\n            Define how to access the value of each datum,\n            which will dictate the thickness of the bars,\n            by default, nivo will look for the \\`value\\` property.\n        `,\n        type: 'string | (datum: RawDatum): number',\n        required: true,\n    },\n    {\n        key: 'dimensions',\n        group: 'Base',\n        help: 'Data dimensions configuration.',\n        type: '{ id: string, value: string | (datum: RawDatum) => number }',\n        required: true,\n    },\n    {\n        key: 'valueFormat',\n        group: 'Base',\n        help: 'Optional formatter for values.',\n        description: `\n            The formatted value can then be used for labels & tooltips.\n            \n            Under the hood, nivo uses [d3-format](https://github.com/d3/d3-format),\n            please have a look at it for available formats, you can also pass a function\n            which will receive the raw value and should return the formatted one.\n        `,\n        required: false,\n        type: 'string | (value: number) => string | number',\n        controlType: 'valueFormat',\n    },\n    {\n        key: 'layout',\n        help: `How to display bars.`,\n        type: 'string',\n        required: false,\n        defaultValue: defaults.layout,\n        controlType: 'radio',\n        group: 'Base',\n        controlOptions: {\n            choices: [\n                { label: 'horizontal', value: 'horizontal' },\n                { label: 'vertical', value: 'vertical' },\n            ],\n        },\n    },\n    {\n        key: 'offset',\n        help: 'Offset type.',\n        type: 'OffsetId',\n        required: false,\n        controlType: 'choices',\n        group: 'Base',\n        defaultValue: defaults.offset,\n        controlOptions: {\n            choices: Object.keys(offsetById).map(key => ({\n                label: key,\n                value: key,\n            })),\n        },\n    },\n    {\n        key: 'outerPadding',\n        help: 'Space before the first bar and after the last one.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.outerPadding,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 20,\n            unit: 'px',\n        },\n    },\n    {\n        key: 'innerPadding',\n        help: 'Space between bars.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.innerPadding,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            min: 0,\n            max: 20,\n            unit: 'px',\n        },\n    },\n    {\n        key: 'width',\n        enableControlForFlavors: ['api'],\n        help: 'Chart width.',\n        description: `\n            not required if using\n            \\`<ResponsiveMarimekko />\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'height',\n        enableControlForFlavors: ['api'],\n        help: 'Chart height.',\n        description: `\n            not required if using\n            \\`<ResponsiveMarimekko />\\`.\n        `,\n        type: 'number',\n        required: true,\n        controlType: 'range',\n        group: 'Base',\n        controlOptions: {\n            unit: 'px',\n            min: 100,\n            max: 1000,\n            step: 5,\n        },\n    },\n    {\n        key: 'margin',\n        group: 'Base',\n        type: 'object',\n        required: false,\n        help: 'Chart margin.',\n        flavors: ['svg', 'api'],\n        controlType: 'margin',\n    },\n    themeProperty(['svg', 'api']),\n    {\n        key: 'colors',\n        group: 'Style',\n        type: 'string | Function | string[]',\n        required: false,\n        help: 'Defines color range.',\n        defaultValue: defaults.colors,\n        flavors: ['svg', 'api'],\n        controlType: 'ordinalColors',\n    },\n    ...defsProperties('Style', ['svg', 'api']),\n    {\n        key: 'showcase pattern usage',\n        flavors: ['svg'],\n        help: 'Patterns.',\n        description: `\n            You can use \\`defs\\` and \\`fill\\` properties\n            to use patterns, see\n            [dedicated guide](self:/guides/patterns)\n            for further information.\n        `,\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Style',\n    },\n    {\n        key: 'borderWidth',\n        help: 'Slices border width.',\n        type: 'number',\n        required: false,\n        defaultValue: defaults.borderWidth,\n        controlType: 'lineWidth',\n        group: 'Style',\n    },\n    {\n        key: 'borderColor',\n        help: 'Method to compute border color.',\n        type: 'string | object | Function',\n        required: false,\n        defaultValue: defaults.borderColor,\n        controlType: 'inheritedColor',\n        group: 'Style',\n    },\n    ...axesProperties(),\n    {\n        key: 'enableGridX',\n        help: 'Enable/disable x grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridX,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    {\n        key: 'gridXValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for vertical grid lines.',\n        type: 'number[]',\n        required: false,\n    },\n    {\n        key: 'enableGridY',\n        help: 'Enable/disable y grid.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.enableGridY,\n        controlType: 'switch',\n        group: 'Grid & Axes',\n    },\n    {\n        key: 'gridYValues',\n        group: 'Grid & Axes',\n        help: 'Specify values to use for horizontal grid lines.',\n        type: 'number[]',\n        required: false,\n    },\n    {\n        key: 'layers',\n        group: 'Customization',\n        help: 'Defines the order of layers and add custom layers.',\n        description: `\n            You can also use this to insert extra layers\n            to the chart, the extra layer must be a component.\n            \n            The layer component which will receive the chart's\n            context & computed data and must return a valid SVG element\n            for the \\`Marimekko\\` component.\n            \n            The props passed to layers have the following structure:\n            \n            \\`\\`\\`\n            {\n                data: ComputedDatum<RawDatum>[]\n                bars: BarDatum<RawDatum>[]\n                thicknessScale: ScaleLinear<number, number>\n                dimensionsScale: ScaleLinear<number, number>\n            }\n            \\`\\`\\`\n        `,\n        required: false,\n        type: 'Array<string | Function>',\n        defaultValue: defaults.layers,\n    },\n    {\n        key: 'isInteractive',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'Enable/disable interactivity.',\n        type: 'boolean',\n        required: false,\n        defaultValue: defaults.isInteractive,\n        controlType: 'switch',\n    },\n    {\n        key: 'onClick',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onClick handler, it receives target bar data and mouse event.',\n        type: '(bar: BarDatum<RawDatum>, event: MouseEvent) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseEnter',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseEnter handler, it receives target bar data and mouse event.',\n        type: '(bar: BarDatum<RawDatum>, event: MouseEvent) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseMove',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseMove handler, it receives target bar data and mouse event.',\n        type: '(bar: BarDatum<RawDatum>, event: MouseEvent) => void',\n        required: false,\n    },\n    {\n        key: 'onMouseLeave',\n        flavors: ['svg'],\n        group: 'Interactivity',\n        help: 'onMouseLeave handler, it receives target bar data and mouse event.',\n        type: '(bar: BarDatum<RawDatum>, event: MouseEvent) => void',\n        required: false,\n    },\n    {\n        key: 'tooltip',\n        group: 'Interactivity',\n        type: 'Component',\n        required: false,\n        help: 'Custom tooltip component',\n        description: `\n            A function allowing complete tooltip customisation,\n            it must return a valid HTML element and will receive\n            the following props:\n            \n            \\`\\`\\`\n            {\n                bar: BarDatum<RawDatum>\n            }\n            \\`\\`\\`\n            \n            You can also customize the style of the tooltip using\n            the \\`theme.tooltip\\` object.\n        `,\n    },\n    {\n        key: 'custom tooltip example',\n        help: 'Showcase custom tooltip.',\n        type: 'boolean',\n        controlType: 'switch',\n        group: 'Interactivity',\n    },\n    ...motionProperties(['svg'], defaults, 'react-spring'),\n    {\n        key: 'legends',\n        flavors: ['svg'],\n        type: 'Legend[]',\n        help: `Optional chart's legends.`,\n        group: 'Legends',\n        controlType: 'array',\n        controlOptions: {\n            props: getLegendsProps(['svg']),\n            shouldCreate: true,\n            addLabel: 'add legend',\n            shouldRemove: true,\n            getItemTitle: (index, legend) =>\n                `legend[${index}]: ${legend.anchor}, ${legend.direction}`,\n            defaults: {\n                anchor: 'top-left',\n                direction: 'column',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemsSpacing: 0,\n                symbolSize: 20,\n                itemDirection: 'left-to-right',\n                onClick: data => {\n                    alert(JSON.stringify(data, null, '    '))\n                },\n            },\n        },\n    },\n]\n\nexport const groups = groupProperties(props)\n","import React from 'react'\nimport { ResponsiveMarimekko, defaultProps } from '@nivo/marimekko'\nimport { random, omit } from 'lodash'\nimport { ComponentTemplate } from '../../components/components/ComponentTemplate'\nimport meta from '../../data/components/marimekko/meta.yml'\nimport mapper from '../../data/components/marimekko/mapper'\nimport { groups } from '../../data/components/marimekko/props'\n\nconst getRandomValue = () => random(0, 32)\n\nconst generateData = () =>\n    [`it's good`, `it's sweet`, `it's spicy`, 'worth eating', 'worth buying'].map(statement => ({\n        statement,\n        participation: getRandomValue(),\n        stronglyAgree: getRandomValue(),\n        agree: getRandomValue(),\n        disagree: getRandomValue(),\n        stronglyDisagree: getRandomValue(),\n    }))\n\nconst initialProperties = {\n    id: 'statement',\n    value: 'participation',\n    dimensions: [\n        {\n            id: 'disagree strongly',\n            value: 'stronglyDisagree',\n        },\n        {\n            id: 'disagree',\n            value: 'disagree',\n        },\n        {\n            id: 'agree',\n            value: 'agree',\n        },\n        {\n            id: 'agree strongly',\n            value: 'stronglyAgree',\n        },\n    ],\n    layout: defaultProps.layout,\n    offset: defaultProps.offset,\n    outerPadding: defaultProps.outerPadding,\n    innerPadding: 9,\n\n    axisTop: {\n        enable: false,\n        orient: 'top',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 36,\n    },\n    axisRight: {\n        enable: true,\n        orient: 'right',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendOffset: 0,\n    },\n    axisBottom: {\n        enable: true,\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'participation',\n        legendOffset: 36,\n        legendPosition: 'middle',\n    },\n    axisLeft: {\n        enable: true,\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'opinions',\n        legendOffset: -40,\n        legendPosition: 'middle',\n    },\n    enableGridX: defaultProps.enableGridX,\n    enableGridY: defaultProps.enableGridY,\n\n    margin: {\n        top: 40,\n        right: 80,\n        bottom: 100,\n        left: 80,\n    },\n\n    valueFormat: { format: '', enabled: false },\n\n    colors: { scheme: 'spectral' },\n\n    borderWidth: 1,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.2]],\n    },\n\n    isInteractive: true,\n    'custom tooltip example': false,\n    tooltip: null,\n    'showcase pattern usage': true,\n\n    defs: [],\n    fill: [],\n\n    animate: defaultProps.animate,\n    motionConfig: defaultProps.motionConfig,\n\n    legends: [\n        {\n            anchor: 'bottom',\n            direction: 'row',\n            justify: false,\n            translateX: 0,\n            translateY: 80,\n            itemsSpacing: 0,\n            itemWidth: 140,\n            itemHeight: 18,\n            itemTextColor: '#999',\n            itemDirection: 'right-to-left',\n            itemOpacity: 1,\n            symbolSize: 18,\n            symbolShape: 'square',\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemTextColor: '#000',\n                    },\n                },\n            ],\n        },\n    ],\n}\n\nconst Marimekko = () => {\n    return (\n        <ComponentTemplate\n            name=\"Marimekko\"\n            meta={meta.Marimekko}\n            icon=\"marimekko\"\n            flavors={meta.flavors}\n            currentFlavor=\"svg\"\n            properties={groups}\n            initialProperties={initialProperties}\n            defaultProperties={defaultProps}\n            propertiesMapper={mapper}\n            generateData={generateData}\n        >\n            {(properties, data, theme, logAction) => {\n                const handleClick = bar => {\n                    logAction({\n                        type: 'click',\n                        label: `[bar] ${bar.datum.id} - ${bar.id}: ${bar.value}`,\n                        color: bar.color,\n                        // prevent cyclic dependency\n                        data: {\n                            ...omit(bar, ['datum']),\n                            datum: omit(bar.datum, ['dimensions']),\n                        },\n                    })\n                }\n\n                return (\n                    <ResponsiveMarimekko\n                        data={data}\n                        {...properties}\n                        theme={theme}\n                        onClick={handleClick}\n                        legends={properties.legends.map(legend => ({\n                            ...legend,\n                        }))}\n                    />\n                )\n            }}\n        </ComponentTemplate>\n    )\n}\n\nexport default Marimekko\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"names":["slice","Array","prototype","x","stackValue","d","key","keys","order","offset","value","stack","data","i","oz","kz","apply","this","arguments","m","length","n","sz","sij","ki","si","j","index","_","durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","date","floor","ceil","round","d0","d1","step","Math","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","settingsMapper","mapping","exclude","settings","options","overrides","Object","forEach","omit","mapAxis","type","upperFirst","enable","mapFormat","format","enabled","undefined","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","textAlign","textBaseline","translate","y","ticks","getFormatter","formatter","timeFormat","d3Format","computeGridLines","width","height","_values","isArray","lines","x1","x2","y1","y2","AxisTick","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","transform","dominantBaseline","memoizedAxisTick","memo","Axis","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","useMotionConfig","animate","springConfig","useSpring","lineX2","lineY2","config","immediate","transition","useTransition","tick","initial","textTransform","from","enter","update","leave","tickIndex","rotate","transitionProps","memoizedAxis","axisPropTypes","PropTypes","axisPropType","positions","Axes","xScale","yScale","axes","top","right","bottom","left","isXAxis","GridLine","_jsx","GridLines","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","_format","ctx","Number","degreesToRadians","String","renderAxesToCanvas","renderGridLinesToCanvas","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","call","defaultProps","layout","outerPadding","innerPadding","layers","enableGridX","enableGridY","colors","scheme","borderWidth","borderColor","modifiers","isInteractive","motionConfig","offsetById","expand","diverging","none","silouhette","wiggle","stackOffsetWiggle","useMarimekko","id","valueFormat","rawDimensions","dimensions","dimensionIds","dimension","useDataDimensions","offsetFunction","useStack","stacked","allValues","datum","min","max","useStackedData","normalizedData","getId","getValue","normalized","datumId","datumValue","useNormalizedData","thicknessScale","totalValue","acc","scaleLinear","totalPadding","useThicknessScale","dimensionsScale","useDimensionsScale","computedData","getColor","useOrdinalColorScale","useValueFormatter","thickness","computedDatum","allPositions","totalSize","dimensionId","dimensionPoint","dimensionDatum","formattedValue","color","position0","position1","useComputedData","bars","getBorderColor","useInheritedColor","all","useBars","Bar","bar","tooltip","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","showTooltip","useCallback","createElement","handleClick","handleMouseEnter","handleMouseMove","handleMouseLeave","to","fill","stroke","strokeWidth","Bars","BarTooltip","enableChip","InnerMarimekko","partialMargin","margin","axisTop","axisRight","axisBottom","axisLeft","gridXValues","gridYValues","defs","legends","role","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","layerById","grid","boundDefs","bindDefs","legendData","label","useLegendData","containerWidth","containerHeight","layerContext","useLayerContext","layer","Marimekko","otherProps","ResponsiveMarimekko","TooltipWrapper","styled","TooltipKey","TooltipValue","CustomTooltip","patternLinesDef","background","rotation","lineWidth","spacing","match","group","help","description","required","controlType","defaultValue","defaults","controlOptions","choices","map","unit","enableControlForFlavors","flavors","themeProperty","defsProperties","axesProperties","motionProperties","getLegendsProps","shouldCreate","addLabel","shouldRemove","getItemTitle","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","itemDirection","alert","JSON","stringify","groups","groupProperties","getRandomValue","generateData","statement","participation","stronglyAgree","agree","disagree","stronglyDisagree","initialProperties","orient","itemTextColor","itemOpacity","symbolShape","effects","on","ComponentTemplate","name","meta","icon","currentFlavor","properties","defaultProperties","propertiesMapper","mapper","logAction","nativeFloor","nativeRandom","random","module","exports","lower","upper","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","rand"],"sourceRoot":""}