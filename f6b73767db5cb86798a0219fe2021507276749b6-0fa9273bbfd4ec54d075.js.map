{"version":3,"file":"f6b73767db5cb86798a0219fe2021507276749b6-0fa9273bbfd4ec54d075.js","mappings":"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","sources":["webpack://nivo-website/../node_modules/d3-time/src/day.js","webpack://nivo-website/../node_modules/d3-time/src/duration.js","webpack://nivo-website/../node_modules/d3-time/src/interval.js","webpack://nivo-website/../src/color.ts","webpack://nivo-website/../src/sets/countryCodes.ts","webpack://nivo-website/../src/sets/names.ts","webpack://nivo-website/../src/sets/programmingLanguages.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://nivo-website/../src/bullet.ts","webpack://nivo-website/../src/chord.ts","webpack://nivo-website/../src/network.ts","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://nivo-website/../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://nivo-website/../src/parallelCoordinates.ts","webpack://nivo-website/../src/sankey.ts","webpack://nivo-website/../src/swarmplot.ts","webpack://nivo-website/../src/index.ts","webpack://nivo-website/../node_modules/lodash/_arrayShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseRandom.js","webpack://nivo-website/../node_modules/lodash/_baseShuffle.js","webpack://nivo-website/../node_modules/lodash/_baseValues.js","webpack://nivo-website/../node_modules/lodash/_shuffleSelf.js","webpack://nivo-website/../node_modules/lodash/random.js","webpack://nivo-website/../node_modules/lodash/shuffle.js","webpack://nivo-website/../node_modules/lodash/values.js"],"sourcesContent":["import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","export const randColor = () => `hsl(${Math.round(Math.random() * 360)}, 70%, 50%)`\n","export const countryCodes = [\n    'AD',\n    'AE',\n    'AF',\n    'AG',\n    'AI',\n    'AL',\n    'AM',\n    'AO',\n    'AQ',\n    'AR',\n    'AS',\n    'AT',\n    'AU',\n    'AW',\n    'AX',\n    'AZ',\n    'BA',\n    'BB',\n    'BD',\n    'BE',\n    'BF',\n    'BG',\n    'BH',\n    'BI',\n    'BJ',\n    'BL',\n    'BM',\n    'BN',\n    'BO',\n    'BQ',\n    'BQ',\n    'BR',\n    'BS',\n    'BT',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'CA',\n    'CC',\n    'CD',\n    'CF',\n    'CG',\n    'CH',\n    'CI',\n    'CK',\n    'CL',\n    'CM',\n    'CN',\n    'CO',\n    'CR',\n    'CU',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CZ',\n    'DE',\n    'DJ',\n    'DK',\n    'DM',\n    'DO',\n    'DZ',\n    'EC',\n    'EE',\n    'EG',\n    'EH',\n    'ER',\n    'ES',\n    'ET',\n    'FI',\n    'FJ',\n    'FK',\n    'FM',\n    'FO',\n    'FR',\n    'GA',\n    'GB',\n    'GD',\n    'GE',\n    'GF',\n    'GG',\n    'GH',\n    'GI',\n    'GL',\n    'GM',\n    'GN',\n    'GP',\n    'GQ',\n    'GR',\n    'GS',\n    'GT',\n    'GU',\n    'GW',\n    'GY',\n    'HK',\n    'HM',\n    'HN',\n    'HR',\n    'HT',\n    'HU',\n    'ID',\n    'IE',\n    'IL',\n    'IM',\n    'IN',\n    'IO',\n    'IQ',\n    'IR',\n    'IS',\n    'IT',\n    'JE',\n    'JM',\n    'JO',\n    'JP',\n    'KE',\n    'KG',\n    'KH',\n    'KI',\n    'KM',\n    'KN',\n    'KP',\n    'KR',\n    'KW',\n    'KY',\n    'KZ',\n    'LA',\n    'LB',\n    'LC',\n    'LI',\n    'LK',\n    'LR',\n    'LS',\n    'LT',\n    'LU',\n    'LV',\n    'LY',\n    'MA',\n    'MC',\n    'MD',\n    'ME',\n    'MF',\n    'MG',\n    'MH',\n    'MK',\n    'ML',\n    'MM',\n    'MN',\n    'MO',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MT',\n    'MU',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NC',\n    'NE',\n    'NF',\n    'NG',\n    'NI',\n    'NL',\n    'NO',\n    'NP',\n    'NR',\n    'NU',\n    'NZ',\n    'OM',\n    'PA',\n    'PE',\n    'PF',\n    'PG',\n    'PH',\n    'PK',\n    'PL',\n    'PM',\n    'PN',\n    'PR',\n    'PS',\n    'PT',\n    'PW',\n    'PY',\n    'QA',\n    'RE',\n    'RO',\n    'RS',\n    'RU',\n    'RW',\n    'SA',\n    'SB',\n    'SC',\n    'SD',\n    'SE',\n    'SG',\n    'SH',\n    'SI',\n    'SJ',\n    'SK',\n    'SL',\n    'SM',\n    'SN',\n    'SO',\n    'SR',\n    'SS',\n    'ST',\n    'SV',\n    'SX',\n    'SY',\n    'SZ',\n    'TC',\n    'TD',\n    'TF',\n    'TG',\n    'TH',\n    'TJ',\n    'TK',\n    'TL',\n    'TM',\n    'TN',\n    'TO',\n    'TR',\n    'TT',\n    'TV',\n    'TW',\n    'TZ',\n    'UA',\n    'UG',\n    'UM',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VC',\n    'VE',\n    'VG',\n    'VI',\n    'VN',\n    'VU',\n    'WF',\n    'WS',\n    'YE',\n    'YT',\n    'ZA',\n    'ZM',\n    'ZW',\n]\n","export const names = [\n    'John',\n    'Raoul',\n    'Jane',\n    'Marcel',\n    'Ibrahim',\n    'Junko',\n    'Lyu',\n    'André',\n    'Maki',\n    'Véronique',\n    'Thibeau',\n    'Josiane',\n    'Raphaël',\n    'Mathéo',\n    'Margot',\n    'Hugo',\n    'Christian',\n    'Louis',\n    'Ella',\n    'Alton',\n    'Jimmy',\n    'Guillaume',\n    'Sébastien',\n    'Alfred',\n    'Bon',\n    'Solange',\n    'Kendrick',\n    'Jared',\n    'Satoko',\n    'Tomoko',\n    'Line',\n    'Delphine',\n    'Leonard',\n    'Alphonse',\n    'Lisa',\n    'Bart',\n    'Benjamin',\n    'Homer',\n    'Jack',\n]\n","export const programmingLanguages = [\n    'php',\n    'make',\n    'javascript',\n    'go',\n    'erlang',\n    'elixir',\n    'lisp',\n    'haskell',\n    'python',\n    'ruby',\n    'hack',\n    'scala',\n    'java',\n    'rust',\n    'c',\n    'css',\n    'sass',\n    'stylus',\n]\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import range from 'lodash/range'\nimport random from 'lodash/random'\n\ntype Options = Partial<{\n    float: boolean\n    markerCount: number\n    measureCount: number\n    rangeCount: number\n    subtitle: string\n    title: string\n}>\n\nexport const generateBulletData = (\n    id: string,\n    max: number,\n    {\n        title,\n        subtitle,\n        rangeCount = 5,\n        measureCount = 1,\n        markerCount = 1,\n        float = false,\n    }: Options = {}\n) => {\n    const ranges = range(rangeCount - 1).reduce(\n        acc => {\n            const remaining = max - acc[0]\n            return [random(remaining, float), ...acc]\n        },\n        [max]\n    )\n\n    const measures = range(measureCount).reduce<number[]>(acc => {\n        if (acc.length === 0) return [random(max, float)]\n        return [random(acc[0], float), ...acc]\n    }, [])\n\n    const markers = range(markerCount).map(() => max * 0.6 + random(max * 0.4))\n\n    return {\n        id,\n        title,\n        subtitle,\n        ranges,\n        measures,\n        markers,\n    }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport { names } from './sets'\n\nexport const generateChordData = ({\n    keys = names,\n    size = 7,\n    minValue = 0,\n    maxValue = 2000,\n} = {}) => {\n    const maxSize = Math.min(keys.length, size)\n    const selectedKeys = keys.slice(0, maxSize)\n\n    const matrix = range(maxSize).map(() =>\n        range(maxSize).map(() => {\n            if (Math.random() < 0.66) return random(minValue, maxValue / 4)\n            return random(minValue, maxValue)\n        })\n    )\n\n    return { matrix, keys: selectedKeys }\n}\n","import random from 'lodash/random'\n\ntype Link = {\n    distance: number\n    source: string\n    target: string\n}\n\ntype ExtraNode = {\n    color: string\n    depth: number\n    id: string\n    radius: number\n}\n\nexport const generateNetworkData = ({\n    rootNodeRadius = 12,\n    minMidNodes = 6,\n    maxMidNodes = 16,\n    midNodeRadius = 8,\n    minLeaves = 4,\n    maxLeaves = 16,\n    leafRadius = 4,\n} = {}) => {\n    const rootNode = {\n        id: '0',\n        radius: rootNodeRadius,\n        depth: 0,\n        color: 'rgb(244, 117, 96)',\n    }\n    let nodes = Array.from({ length: random(minMidNodes, maxMidNodes) }, (_, k) => ({\n        id: `${k + 1}`,\n        radius: midNodeRadius,\n        depth: 1,\n        color: 'rgb(97, 205, 187)',\n    }))\n\n    const links: Link[] = []\n    const extraNodes: ExtraNode[] = []\n    nodes.forEach(source => {\n        links.push({\n            source: '0',\n            target: source.id,\n            distance: 50,\n        })\n        nodes.forEach(target => {\n            if (Math.random() < 0.04) {\n                links.push({\n                    source: source.id,\n                    target: target.id,\n                    distance: 70,\n                })\n            }\n        })\n        Array.from({ length: random(minLeaves, maxLeaves) }, (_, k) => {\n            extraNodes.push({\n                id: `${source.id}.${k}`,\n                radius: leafRadius,\n                depth: 2,\n                color: 'rgb(232, 193, 160)',\n            })\n            links.push({\n                source: source.id,\n                target: `${source.id}.${k}`,\n                distance: 30,\n            })\n\n            return null\n        })\n    })\n\n    nodes.push(rootNode)\n    nodes = nodes.concat(extraNodes)\n\n    return { nodes, links }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import random from 'lodash/random'\nimport range from 'lodash/range'\nimport shuffle from 'lodash/shuffle'\n\ntype Options = Partial<{\n    size: number\n    keys: Array<{\n        key: string\n        random?: [number, number]\n        shuffle?: string[]\n    }>\n}>\n\nexport const generateParallelCoordinatesData = ({\n    size = 26,\n    keys = [\n        { key: 'temp', random: [-10, 40] },\n        { key: 'cost', random: [200, 400000] },\n        { key: 'color', shuffle: ['red', 'yellow', 'green'] },\n        { key: 'target', shuffle: ['A', 'B', 'C', 'D', 'E'] },\n        { key: 'volume', random: [0.2, 7.6] },\n    ],\n}: Options = {}) => {\n    const datumGenerator = () =>\n        keys.reduce((acc, key) => {\n            let value\n            if (key.random !== undefined) {\n                value = random(...key.random)\n            } else if (key.shuffle !== undefined) {\n                value = shuffle(key.shuffle)[0]\n            }\n\n            return { ...acc, [key.key]: value }\n        }, {})\n\n    return range(size).map(datumGenerator)\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { randColor } from './color'\nimport { names } from './sets'\n\ntype Link = {\n    source: string\n    target: string\n    value: number\n}\n\nconst availableNodes = names.map(name => ({ id: name }))\n\nconst getNodeTargets = (id: string, links: Link[], currentPath?: string[]): string[] => {\n    const targets = links\n        .filter(({ source }) => source === id)\n        .map(({ target }) => {\n            if (target === id) {\n                throw new Error(\n                    `[sankey] a node cannot be linked on itself:\\n  link: ${id} —> ${id}`\n                )\n            }\n            if (currentPath?.includes(target)) {\n                throw new Error(\n                    `[sankey] found cyclic dependency:\\n  link: ${currentPath.join(\n                        ' —> '\n                    )} —> ${target}`\n                )\n            }\n            return target\n        })\n\n    return targets.reduce(\n        (acc, targetId) =>\n            acc.concat(\n                getNodeTargets(\n                    targetId,\n                    links,\n                    currentPath ? [...currentPath, targetId] : [id, targetId]\n                )\n            ),\n        targets\n    )\n}\n\nconst getNodesTargets = (links: Link[]) =>\n    links.reduce<Record<string, string[]>>((targetsById, link) => {\n        if (!targetsById[link.source]) {\n            targetsById[link.source] = getNodeTargets(link.source, links)\n        }\n\n        return targetsById\n    }, {})\n\nexport const generateSankeyData = ({\n    nodeCount,\n    maxIterations = 3,\n}: {\n    nodeCount?: number\n    maxIterations?: number\n} = {}) => {\n    const nodes = availableNodes.slice(0, nodeCount).map(node =>\n        Object.assign({}, node, {\n            nodeColor: randColor(),\n        })\n    )\n\n    const links: Link[] = []\n    shuffle(nodes).forEach(({ id }) => {\n        range(random(1, maxIterations)).forEach(() => {\n            const targetsById = getNodesTargets(links)\n            const randId = shuffle(nodes.filter(n => n.id !== id).map(n => n.id))[0]\n            if (\n                (!targetsById[randId] || !targetsById[randId].includes(id)) &&\n                (!targetsById[id] || !targetsById[id].includes(randId))\n            ) {\n                links.push({\n                    source: id,\n                    target: randId,\n                    value: random(5, 200),\n                })\n            }\n        })\n    })\n\n    return { nodes, links }\n}\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\n\ntype SwarmPlotDatum = {\n    id: string\n    categories?: number[]\n    group: string\n    price: number\n    volume: number\n}\n\nconst randomPrice = () => random(0, 500)\nconst randomVolume = () => random(4, 20)\nconst randomCategory = () => random(3, 17)\n\nexport const generateSwarmPlotData = (\n    groups: string[],\n    { min = 60, max = 100, categoryCount = 0 }\n) => ({\n    groups,\n    data: groups.reduce<SwarmPlotDatum[]>(\n        (acc, group, groupIndex) => [\n            ...acc,\n            ...range(random(min, max))\n                .map(() => randomPrice())\n                .map((price, index) => {\n                    const datum: SwarmPlotDatum = {\n                        id: `${groupIndex}.${index}`,\n                        group,\n                        price,\n                        volume: randomVolume(),\n                    }\n\n                    if (categoryCount > 0) {\n                        datum.categories = range(categoryCount).map(randomCategory)\n                    }\n\n                    return datum\n                }),\n        ],\n        []\n    ),\n})\n\nexport const randomizeSwarmPlotData = (previousData: ReturnType<typeof generateSwarmPlotData>) => ({\n    groups: previousData.groups,\n    data: previousData.data.map(d => {\n        const datum = {\n            ...d,\n            group: shuffle(previousData.groups)[0],\n            price: randomPrice(),\n            volume: randomVolume(),\n        }\n\n        if (d.categories !== undefined) {\n            datum.categories = range(3).map(randomCategory)\n        }\n\n        return datum\n    }),\n})\n","import range from 'lodash/range'\nimport random from 'lodash/random'\nimport shuffle from 'lodash/shuffle'\nimport { timeDays } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport * as color from './color'\nimport * as sets from './sets'\n\nexport { sets }\nexport const randColor = color.randColor\n\nexport const generateProgrammingLanguageStats = (shouldShuffle = true, limit = -1) => {\n    let langs = sets.programmingLanguages\n    if (shouldShuffle) {\n        langs = shuffle(langs)\n    }\n    if (limit < 1) {\n        limit = 1 + Math.round(Math.random() * (sets.programmingLanguages.length - 1))\n    }\n\n    return langs.slice(0, limit).map(language => ({\n        label: language,\n        value: Math.round(Math.random() * 600),\n        color: randColor(),\n    }))\n}\n\nexport const uniqRand = <T>(generator: (...args: unknown[]) => T) => {\n    const used: T[] = []\n\n    return (...args: unknown[]) => {\n        let value\n        do {\n            value = generator(...args)\n        } while (used.includes(value))\n\n        used.push(value)\n\n        return value\n    }\n}\n\nexport const randCountryCode = () => shuffle(sets.countryCodes)[0]\n\ntype DrinkDatum = {\n    id: string\n    color: string\n    data: Array<{\n        color: string\n        x: string\n        y: number\n    }>\n}\n\nexport const generateDrinkStats = (xSize = 16) => {\n    const rand = () => random(0, 60)\n    const types = ['whisky', 'rhum', 'gin', 'vodka', 'cognac']\n    const country = uniqRand(randCountryCode)\n\n    const data: DrinkDatum[] = types.map(id => ({\n        id,\n        color: randColor(),\n        data: [],\n    }))\n\n    range(xSize).forEach(() => {\n        const x = country()\n        types.forEach(id => {\n            data.find(d => d.id === id)?.data.push({\n                color: randColor(),\n                x,\n                y: rand(),\n            })\n        })\n    })\n\n    return data\n}\n\nexport const generateSerie = (xSize = 20) => {\n    const max = 100 + Math.random() * (Math.random() * 600)\n\n    return range(xSize).map(() => Math.round(Math.random() * max))\n}\n\nexport const generateSeries = (ids: string[], xKeys: string[]) =>\n    ids.map(id => ({\n        id,\n        color: randColor(),\n        data: xKeys.map(x => ({ x, y: Math.round(Math.random() * 300) })),\n    }))\n\nexport const generateStackData = (size = 3) => {\n    const length = 16\n    return range(size).map(() => generateSerie(length).map((v, i) => ({ x: i, y: v })))\n}\n\nexport const generateCountriesPopulation = (size: number) => {\n    const countryCode = uniqRand(randCountryCode)\n\n    return range(size).map(() => ({\n        country: countryCode(),\n        population: 200 + Math.round(Math.random() * Math.random() * 1000000),\n    }))\n}\n\nexport const generateOrderedDayCounts = (from: Date, to: Date) => {\n    const days = timeDays(from, to)\n    const dayFormat = timeFormat('%Y-%m-%d')\n\n    return days.map(day => {\n        return {\n            value: Math.round(Math.random() * 400),\n            day: dayFormat(day),\n        }\n    })\n}\n\nexport const generateDayCounts = (from: Date, to: Date, maxSize = 0.9) => {\n    const days = generateOrderedDayCounts(from, to)\n\n    const size =\n        Math.round(days.length * (maxSize * 0.4)) +\n        Math.round(Math.random() * (days.length * (maxSize * 0.6)))\n\n    return shuffle(days).slice(0, size)\n}\n\nexport const generateCountriesData = (\n    keys: string[],\n    { size = 12, min = 0, max = 200, withColors = true } = {}\n) =>\n    sets.countryCodes.slice(0, size).map(country => {\n        const d: Record<string, unknown> = {\n            country,\n        }\n        keys.forEach(key => {\n            d[key] = random(min, max)\n            if (withColors === true) {\n                d[`${key}Color`] = randColor()\n            }\n        })\n\n        return d\n    })\n\nconst libTreeItems = [\n    [\n        'viz',\n        [\n            ['stack', [['cchart'], ['xAxis'], ['yAxis'], ['layers']]],\n            [\n                'ppie',\n                [\n                    ['chart', [['pie', [['outline'], ['slices'], ['bbox']]], ['donut'], ['gauge']]],\n                    ['legends'],\n                ],\n            ],\n        ],\n    ],\n    ['colors', [['rgb'], ['hsl']]],\n    [\n        'utils',\n        [['randomize'], ['resetClock'], ['noop'], ['tick'], ['forceGC'], ['stackTrace'], ['dbg']],\n    ],\n    ['generators', [['address'], ['city'], ['animal'], ['movie'], ['user']]],\n    [\n        'set',\n        [\n            ['clone'],\n            ['intersect'],\n            ['merge'],\n            ['reverse'],\n            ['toArray'],\n            ['toObject'],\n            ['fromCSV'],\n            ['slice'],\n            ['append'],\n            ['prepend'],\n            ['shuffle'],\n            ['pick'],\n            ['plouc'],\n        ],\n    ],\n    [\n        'text',\n        [\n            ['trim'],\n            ['slugify'],\n            ['snakeCase'],\n            ['camelCase'],\n            ['repeat'],\n            ['padLeft'],\n            ['padRight'],\n            ['sanitize'],\n            ['ploucify'],\n        ],\n    ],\n    [\n        'misc',\n        [\n            ['greetings', [['hey'], ['HOWDY'], ['aloha'], ['AHOY']]],\n            ['other'],\n            [\n                'path',\n                [\n                    ['pathA'],\n                    ['pathB', [['pathB1'], ['pathB2'], ['pathB3'], ['pathB4']]],\n                    [\n                        'pathC',\n                        [\n                            ['pathC1'],\n                            ['pathC2'],\n                            ['pathC3'],\n                            ['pathC4'],\n                            ['pathC5'],\n                            ['pathC6'],\n                            ['pathC7'],\n                            ['pathC8'],\n                            ['pathC9'],\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n]\n\nexport const generateLibTree = (name = 'nivo', limit?: number | null, children = libTreeItems) => {\n    limit = limit || children.length\n    if (limit > children.length) {\n        limit = children.length\n    }\n\n    const tree: Record<string, unknown> = {\n        name,\n        color: randColor(),\n    }\n    if (children?.length > 0) {\n        tree.children = range(limit).map((_, i) => {\n            const leaf = children[i]\n\n            // full path `${name}.${leaf[0]}`\n            return generateLibTree(leaf[0] as string, null, (leaf[1] ?? []) as any)\n        })\n    } else {\n        tree.loc = Math.round(Math.random() * 200000)\n    }\n\n    return tree\n}\n\nconst wines = ['chardonay', 'carmenere', 'syrah']\nconst wineTastes = ['fruity', 'bitter', 'heavy', 'strong', 'sunny']\n\nexport const generateWinesTastes = ({ randMin = 20, randMax = 120 } = {}) => {\n    const data = wineTastes.map(taste => {\n        const d: Record<string, unknown> = { taste }\n        wines.forEach(wine => {\n            d[wine] = random(randMin, randMax)\n        })\n\n        return d\n    })\n\n    return { data, keys: wines }\n}\n\nexport * from './bullet'\nexport * from './chord'\nexport * from './network'\nexport * from './parallelCoordinates'\nexport * from './sankey'\nexport * from './swarmplot'\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["day","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","days","range","durationSecond","durationMinute","durationHour","durationDay","durationWeek","t0","Date","t1","newInterval","floori","offseti","count","field","interval","arguments","length","floor","ceil","round","d0","d1","offset","Math","stop","previous","push","filter","test","setTime","every","isFinite","d","randColor","countryCodes","names","programmingLanguages","_arrayLikeToArray","arr","len","i","arr2","Array","_toConsumableArray","isArray","arrayLikeToArray","arrayWithoutHoles","iter","Symbol","iterator","Object","from","iterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","unsupportedIterableToArray","TypeError","nonIterableSpread","generateBulletData","title","subtitle","rangeCount","measureCount","markerCount","float","ranges","acc","remaining","max","random","measures","markers","id","generateChordData","keys","size","minValue","maxValue","maxSize","selectedKeys","matrix","generateNetworkData","rootNodeRadius","minMidNodes","maxMidNodes","midNodeRadius","minLeaves","maxLeaves","leafRadius","rootNode","radius","depth","color","nodes","k","links","extraNodes","source","target","distance","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","generateParallelCoordinatesData","shuffle","datumGenerator","availableNodes","getNodeTargets","targets","currentPath","getNodesTargets","targetsById","link","generateSankeyData","nodeCount","maxIterations","node","nodeColor","randId","randomPrice","randomVolume","randomCategory","generateSwarmPlotData","min","categoryCount","groups","data","datum","group","price","volume","randomizeSwarmPlotData","previousData","generateProgrammingLanguageStats","shouldShuffle","limit","langs","sets","language","label","uniqRand","used","generator","randCountryCode","generateDrinkStats","xSize","rand","types","country","x","y","generateSeries","ids","xKeys","generateOrderedDayCounts","timeDays","dayFormat","timeFormat","generateDayCounts","generateCountriesData","withColors","libTreeItems","generateLibTree","children","tree","leaf","wines","wineTastes","generateWinesTastes","randMin","randMax","taste","wine","copyArray","shuffleSelf","module","exports","array","nativeFloor","nativeRandom","lower","upper","values","collection","arrayMap","props","baseRandom","index","lastIndex","undefined","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","arrayShuffle","baseShuffle","baseValues"],"sourceRoot":""}